- DOI: https://doi.org/10.3390/s17081781
  analysis: The proposed modular architecture for the WSN based on IoT for PA consists
    of environmental sensors (i.e., temperature, soil moisture, humidity, and wind
    direction and speed), WSN (nRF wireless protocol for data transmission and "Adafruit
    Pro Trinket" Platform for data processing and control), gateway (Intel Edison),
    and cloud computing collected information from different sensors and passed the
    information to the cloud server. The proposed system resulted in improved crop
    quality and minimized negative ecological effect.
  authors:
  - Haider Mahmood Jawad
  - Rosdiadee Nordin
  - Sadik Kamel Gharghan
  - Aqeel Mahmood Jawad
  - Mahamod Ismail
  citation_count: 407
  full_citation: '>'
  full_text: ">\nsensors\nReview\nEnergy-Efﬁcient Wireless Sensor Networks for\nPrecision\
    \ Agriculture: A Review\nHaider Mahmood Jawad 1,2, Rosdiadee Nordin 1, Sadik Kamel\
    \ Gharghan 3,*,\nAqeel Mahmood Jawad 1,2 and Mahamod Ismail 1\nID\n1\nDepartment\
    \ of Electrical, Electronic and Systems Engineering, Faculty of Engineering and\
    \ Built\nEnvironment, Universiti Kebangsaan Malaysia, UKM Bangi, Selangor 43600,\
    \ Malaysia;\nhaider_mahmood2003@yahoo.com (H.M.J.); adee@ukm.edu.my (R.N.);\n\
    Aqeel_mahmood_1986@yahoo.com (A.M.J.); mahamod@ukm.edu.my (M.I.)\n2\nDepartment\
    \ of Computer Communication Engineering, Al-Raﬁdain University College, Filastin\
    \ 10064,\nBaghdad, Iraq\n3\nDepartment of Medical Instrumentation Techniques Engineering,\
    \ Electrical Engineering Technical College,\nMiddle Technical University (MTU),\
    \ Al Doura 10022, Baghdad, Iraq\n*\nCorrespondence: sadiq@siswa.ukm.edu.my; Tel.:\
    \ +964-773-639-3936\nReceived: 12 June 2017; Accepted: 30 July 2017; Published:\
    \ 3 August 2017\nAbstract: Wireless sensor networks (WSNs) can be used in agriculture\
    \ to provide farmers with a\nlarge amount of information. Precision agriculture\
    \ (PA) is a management strategy that employs\ninformation technology to improve\
    \ quality and production. Utilizing wireless sensor technologies\nand management\
    \ tools can lead to a highly effective, green agriculture. Based on PA management,\n\
    the same routine to a crop regardless of site environments can be avoided. From\
    \ several perspectives,\nﬁeld management can improve PA, including the provision\
    \ of adequate nutrients for crops and the\nwastage of pesticides for the effective\
    \ control of weeds, pests, and diseases. This review outlines the\nrecent applications\
    \ of WSNs in agriculture research as well as classiﬁes and compares various wireless\n\
    communication protocols, the taxonomy of energy-efﬁcient and energy harvesting\
    \ techniques for\nWSNs that can be used in agricultural monitoring systems, and\
    \ comparison between early research\nworks on agriculture-based WSNs. The challenges\
    \ and limitations of WSNs in the agricultural domain\nare explored, and several\
    \ power reduction and agricultural management techniques for long-term\nmonitoring\
    \ are highlighted. These approaches may also increase the number of opportunities\
    \ for\nprocessing Internet of Things (IoT) data.\nKeywords: energy-efﬁcient; energy\
    \ harvesting; precision agriculture; wireless communication\ntechnology; WSN\n\
    1. Introduction\nWireless sensor network (WSN) technologies have rapidly developed\
    \ over the years. Ecological\nphenomena in a vast area can be monitored using\
    \ pervasive devices called motes or sensor nodes.\nBattery-powered WSNs comprise\
    \ several sensors, processors, and radio frequency (RF) modules.\nThe sensor nodes\
    \ or motes can communicate wirelessly through a communication link and forward\n\
    their data to a base station or coordinator node by communicating with a gateway.\
    \ The communication\namong sensor nodes depends on the merging of diverse sensors\
    \ from simple (i.e., humidity, pressure,\nand temperature) to complex (i.e., localization,\
    \ tracking, micro-radars, and images), thereby allowing\nWSNs to monitor a wide\
    \ range of surroundings to obtain precise information from the ﬁeld [1].\nAccordingly,\
    \ the sensing, storage, processing, and communication capabilities of sensor nodes\
    \ have\ncontinuously increased [2].\nSensors 2017, 17, 1781; doi:10.3390/s17081781\n\
    www.mdpi.com/journal/sensors\nSensors 2017, 17, 1781\n2 of 45\nWSNs have been\
    \ used in different applications, such as military, agriculture, sports, medicine,\
    \ and\nindustry. Agriculture can be considered as one of the most favorable facilities\
    \ for WSNs to improve\nfood crop yields and minimize the burden of farmers [3].\
    \ Several projects have been introduced in\nthe precision agriculture (PA) literature.\
    \ PA aims to prevent the application of the same management\nroutine to a crop\
    \ regardless of site circumstances and to improve ﬁeld management from several\n\
    perspectives. For instance, PA can minimize the wastage of pesticides for the\
    \ effective control of weeds,\npests, and diseases as well as guarantee that crops\
    \ receive an adequate amount of nutrients, thereby\nleading to a highly effective,\
    \ green agriculture. Speciﬁcally, PA is a management strategy that employs\ninformation\
    \ technology to improve agricultural quality and production. PA differs for traditional\n\
    farming in the sense that this process accurately identiﬁes variations and relates\
    \ the spatial data to\nmanagement activities. PA involves ﬁve stages, namely,\
    \ (i) data collection, (ii) diagnosis, (iii) data\nanalysis, (iv) precision ﬁeld\
    \ operation, and (v) evaluation [4].\nWSNs are used as cost-effective processes\
    \ to increase agricultural yield. Accordingly, WSNs have\nbeen used in different\
    \ agricultural applications, such as for monitoring climate and using soil nutrient\n\
    data to forecast the health of crops and the quality of agricultural products.\
    \ Irrigation planning can\nbe predicted using WSNs by observing weather conditions\
    \ (such as temperature and humidity) and\nsoil moisture. Other sensor nodes can\
    \ be added to the existing WSN to improve the parameters of the\nagricultural\
    \ monitoring system and to make the network scalable. However, some challenges\
    \ have\nhindered the agricultural application of WSNs, such as determining optimum\
    \ deployment schemes,\nmeasurement periods, routing protocols, energy efﬁciency,\
    \ cost, communication range, scalability, and\nfault tolerance [5]. For example,\
    \ the scattered deployment of sensor nodes with a long data-gathering\nperiod\
    \ can help extend the network lifetime. However, some factors may challenge the\
    \ selection of the\ndistribution region. When the agricultural ﬁeld faces many\
    \ obstacles, the communication link may\nbe weakened or lost as a result of signal\
    \ attenuation. The sensor nodes in WSNs are supplied from\nthe battery, thereby\
    \ preventing connections to the main supply in the deployment location. Reducing\n\
    power depletion and prolonging battery life are imperative for WSNs considering\
    \ their limited battery\npower. Although the application of WSNs has increased\
    \ constantly over the years, the manufacturing\nof batteries has not developed\
    \ at the same rate [6]. Therefore, WSNs are mainly limited by their\nbatteries\
    \ [7]. Among the aforementioned challenges, this paper focuses on energy management\
    \ and\nhighlights energy-efﬁcient and energy harvesting techniques that can be\
    \ used in agriculture.\nTo fulﬁll PA requirements, such as addressing the problems\
    \ resulting from the long distance\nbetween farms and base stations, a mobile\
    \ data connection service can be established by connecting\nunmanned aerial vehicles\
    \ or drones with the base station [4]. Such connection allows the sensor nodes\n\
    to relay their data to the base station within the wide area of the farm ﬁeld.\
    \ However, this solution is\nlimited by the quality of service of WSNs.\nThe main\
    \ contributions of this paper are summarized as follows:\n(i)\nThe potential of\
    \ using wireless communications protocols or technologies in agriculture was\n\
    investigated, and the technology with the best power consumption and communication\
    \ distance\nwas identiﬁed.\n(ii)\nThe taxonomy of energy-efﬁcient and energy harvesting\
    \ techniques was examined to address the\npower consumption problems in agriculture\
    \ and to identify those methods that are most suitable\nfor solving these problems.\n\
    (iii)\nThe existing solutions, applicability, and limitations of applying WSNs\
    \ in agriculture were\nreviewed and compared.\n(iv)\nRecent studies using WSN\
    \ in PA applications based on Internet of Things (IoT) were surveyed\nand compared\
    \ in terms of type of sensors and actuators, IoT end devices, IoT platforms, and\
    \ IoT\napplication layer.\nSensors 2017, 17, 1781\n3 of 45\n2. Wireless Communication\
    \ Technologies for Agriculture\nThis section presents the different wireless protocols\
    \ and standards that are used in agriculture.\nThese wireless technologies are\
    \ also compared to identify the most convenient technology in terms of\npower\
    \ consumption and communication range, where the two metrics are posed challenges\
    \ in current\nsolution of agriculture application [5,8]. IoT is a revolution for\
    \ the future realm where everything\nthat can utilize a connection will be connected.\
    \ Cellular technologies are grown and developed to\nplay a crucial role in the\
    \ IoT realm [9]. Narrowband-IoT (NB-IoT) is a new IoT system constructed\nfrom\
    \ current Long Term Evolution (LTE) functionalities. Subsequently, NB-IoT is possible\
    \ to share the\nspectrum of LTE without coexistence problems and to utilize the\
    \ same pieces of equipment, as well\nas it is possible to connect seamlessly into\
    \ the LTE main network. This permits all network facilities\nsuch as security,\
    \ tracking, policy, charging, and authentication to be totally supported [10].\
    \ The design\ngoals of NB-IoT cover high coverage area, extended battery life\
    \ (i.e., 10 years), high network size\n(52,000 devices/channel/cell), and low-cost\
    \ devices [10,11]. However, in the near future, NB-IoT\ntechnologies, such as\
    \ Long Range radio (LoRa) will take place in agricultural applications due to\
    \ low\npower consumption and preferably used when the agricultural information\
    \ are to be transmitted over\nlong distances.\n2.1. ZigBee Wireless Protocol\n\
    ZigBee wireless protocol is considered one of the best candidate technologies\
    \ for the agriculture\nand farming domains. Given its low duty cycle, ZigBee is\
    \ considered appropriate for PA applications,\nsuch as irrigation supervision\
    \ [12], water quality management, and fertilizer and pesticide control,\nall of\
    \ which require a cyclic information update. Based on this technology, the sensor\
    \ nodes in the\nagricultural ﬁeld can communicate with the router or coordinator\
    \ node over a long range (i.e., 100 m)\nwhen XBee Series 2 is used. ZigBee can\
    \ also reduce the communication distance by up to 30 m for\nindoor conditions\
    \ (i.e., greenhouses) [13]. The number of deployed sensor and router nodes will\
    \ be\nincreased to cover the entire ﬁeld area under surveillance. Some studies\
    \ have employed Zigbee for PA.\nFor instance, ZigBee was used to investigate the\
    \ effect of signal strength on node spacing, base station\nantenna height, and\
    \ leaf density [14]. In [14], three experiments were conducted in palm orchards\
    \ in\nto evaluate a signal propagation model based on the received signal strength\
    \ indicator (RSSI) of the\nZigBee wireless protocol. Through their experiments,\
    \ the authors concluded that the wireless channel\npropagation model must be determined\
    \ before deploying the sensor nodes in palm orchards to obtain\nrobust signal\
    \ strength characteristics. A path loss model in a mango greenhouse was investigated\n\
    based on the ZigBee wireless protocol [15].\nA cattle-localization-system-based\
    \ ZigBee WSN was also applied in a grazing ﬁeld [16]. Instead of\nrequiring additional\
    \ hardware, ZigBee relies on link quality indication (LQI) to measure distance.\
    \ The\nZigBee protocol achieves cattle localization at a low power consumption\
    \ and minimum cost. The key\nparameters of greenhouse climate (i.e., humidity,\
    \ temperature, CO2, and solar radiation) are considered\nin [17] to ensure the\
    \ comfortable growth of plants with 22% energy savings and 33% water usage.\n\
    ZigBee and Global System for Mobile communication/General Packet Radio Service\
    \ (GSM/GPRS)\ntechnologies were used to monitor and control the climate condition\
    \ of greenhouses [17]. The ZigBee\nwireless protocol has also been used to monitor\
    \ animal behavior (e.g., walking, grazing, lying down,\nand standing) [18]. ZigBee\
    \ was also adopted in [18] to overcome the high power consumption and\nunreliability\
    \ issues in mobile ad hoc WSNs.\nA WSN-based greenhouse that uses ZigBee star\
    \ topology is merged with artiﬁcial intelligence\n(i.e., fuzzy logic controller)\
    \ in [19]. The ZigBee wireless protocol is adopted to preserve energy by\nswitching\
    \ between active and sleep states. Thus, power consumption can be minimized, and\
    \ the\nbattery lifetime of sensor nodes can be extended. ZigBee is currently applied\
    \ in smart beehives [20],\norange orchards [21], dairy healthcare monitoring of\
    \ cows in pastures and barns [22], automation in\nirrigation [23], greenhouse\
    \ monitoring systems [24,25], and livestock monitoring [26]. As a universal\n\
    Sensors 2017, 17, 1781\n4 of 45\nstandard for WSNs, the ZigBee protocol was used\
    \ in several agricultural applications because of its\nlow power consumption,\
    \ low cost, self-forming characteristics, and suitable communication range.\n\
    2.2. Bluetooth (BT) Wireless Protocol\nThe BT standard has been utilized to establish\
    \ a communication link between movable and\nportable devices, such as laptops,\
    \ over a short distance of up to 10 m. Given its pervasive nature\nand availability\
    \ in most mobile devices, BT has been employed to satisfy multi-level agricultural\n\
    requirements [5].\nWeather information, soil moisture, sprinkler position, and\
    \ temperature are\nmonitored remotely using Global Positioning System (GPS) and\
    \ BT technologies. The proposed\nsystem in [27] was developed for irrigation application\
    \ to increase ﬁeld productivity and conserve\nwater. The irrigation application\
    \ proposed in [28] collects ﬁeld information in real time via the BT\nwireless\
    \ communication protocol. Several software and hardware were developed in [29]\
    \ to monitor\nthe relative humidity and temperature in greenhouses based on BT.\
    \ The BT module was employed in\nintegrated control method [30] to control the\
    \ irrigation system in greenhouses based on soil and weather\ninformation, and\
    \ this technology improved the leaf number, height, dry weight, and fresh weight\n\
    of red and romaine lettuce in greenhouses. Result of estimation for water usage\
    \ and electricity also\nimproved by 90% based on integrated control method using\
    \ BT technology relative to the traditional\nmethod (i.e., timer control strategy).\
    \ Given its low energy consumption, wide availability, and ease of\nuse for farmers,\
    \ smartphone-based BT has been employed in different agricultural applications\
    \ [31–35],\nsuch as controlling irrigation systems, monitoring soil and weather\
    \ conditions, and controlling the use\nof fertilizers and pesticides.\n2.3. WiFi\
    \ Wireless Protocol\nWiFi is currently the most extensively utilized wireless\
    \ technology available in portable devices,\nincluding tablets, smartphones, laptops,\
    \ and desktops. WiFi has a suitable communication distance of\nabout 20 m and\
    \ 100 m in indoor and outdoor environments, respectively. In PA applications,\
    \ WiFi\nextends diverse architectures by connecting several types of devices via\
    \ an ad hoc network. WiFi and\n3G wireless technologies were employed in [36]\
    \ to estimate the agricultural applications of mobile\nphones. Remote access and\
    \ short message services have also been used for controlling and monitoring\n\
    protected crops. In [37], agricultural data, such as soil temperature, soil moisture,\
    \ weather temperature\nand humidity, sunlight intensity, and CO2, were stored\
    \ in a gateway before they were transmitted\nto the server computer over a WiFi\
    \ network. A Wi-Fi (IEEE 802.11g)-based smart WSN is proposed\nfor agricultural\
    \ monitoring in [38]. The proposed system consists of three nodes: sensor, router,\
    \ and\nserver. The climate conditions of the greenhouse or agricultural ﬁeld,\
    \ such as humidity, temperature,\nair pressure, light, water level, and soil moisture,\
    \ are monitored. The said work attempts to lower cost,\nminimize wiring connections,\
    \ and enhance the mobility and ﬂexibility of the sensing points in WSN.\nHowever,\
    \ the energy consumption of the proposed system is extremely high at 42.17 J/h.\n\
    Given that WiFi requires much power [5], long communication time, and huge data\
    \ payload [26].\nWiFi technology is not preferable for agricultural applications\
    \ in spite of the fact that a Wi-Fi server\nprevents data losses by adopting data\
    \ redundancy techniques. In addition, WiFi cannot be employed\nfor multi-hope\
    \ applications and inﬂuenced by number of users and the signal intensity; thereby,\n\
    it is inappropriate for agriculture WSNs. Moreover, the WiFi nodes listen all\
    \ the time, so power\nconsumption will increase [39].\n2.4. GPRS/3G/4G Technology\n\
    General Packet Radio Service (GPRS) is a packet data service for GSM-based cellular\
    \ phones.\nGPRS frequently experiences variable delays and throughputs, and such\
    \ technology depends on the\nvolume of consumers that share the same communication\
    \ channels and resources. Gutiérrez et al. [40]\nused the GPRS module and WSN\
    \ to develop an automatic crop irrigation system based on the\ninformation collected\
    \ by temperature and soil moisture sensors installed at the root zone of plants,\n\
    Sensors 2017, 17, 1781\n5 of 45\nand considered this system a cost-effective and\
    \ practical solution for improving water quality in\nPA. A drip irrigation process\
    \ was evaluated in [41] by measuring soil moisture. A prototype system\nwas also\
    \ developed based on a data management server and a WSN-GPRS gateway. WSN-GPRS\n\
    gateway acts as a bridge between WSN and GPRS where the data from the WSN are\
    \ transferred to a\ndata management center. Navarro-Hellín et al. [42] equipped\
    \ various wireless nodes with GPRS to\nmeasure and transmit soil, plant, and atmosphere\
    \ information. The wireless nodes have unlimited\nautonomy because of their independent\
    \ nature and use of solar energy. Different sensors may transmit\ninformation\
    \ to a remote location via a GPRS network for further analysis by using tablets,\
    \ mobile\nphones, or computers. All agriculture sensors are interfaced to the\
    \ sensor board to obtain agricultural\ninformation. Such information is transmitted\
    \ to the remote server for further analysis through the\nGPRS-board, which depends\
    \ on a GSM/GPRS mobile network.\n2.5. Long Range Radio (LoRa) Protocol\nLoRa is\
    \ introduced by the LoRa Alliance as a protocol stack for low power and wide area\
    \ Internet\nof Things (IoT) communication technologies that are associated with\
    \ indoor transmission [43]. The\nbasic network architecture of a LoRaWAN consists\
    \ of LoRa end devices, LoRa gateways, and a LoRa\nnetwork server. The LoRa end\
    \ device communicates with gateways that employ LoRa with LoRaWAN.\nLoRa gateways\
    \ pass raw LoRaWAN packets from the end devices to a LoRa network server with\n\
    a high throughput based on the backhaul interface, which is typically 3G or Ethernet.\
    \ Accordingly,\nLoRa gateways act as a bidirectional communication or protocol\
    \ adapter with the LoRa network\nserver. In this case, the LoRa network server\
    \ takes charge of decoding the data packets transmitted by\nthe LoRa devices and\
    \ creating the frames that would be directed back to the devices. LoRa offers\
    \ a\nbidirectional solution that matches machine-to-machine (M2M) WiFi or cellular\
    \ technologies. LoRa\npresents a cost-effective method for linking batteries or\
    \ mobile devices to the network or to end devices.\nThe LoRa wireless protocol\
    \ was used in [44] to monitor bee colonies in rural areas and to ensure a\ncommunication\
    \ between the bee node and the local server that is located in a remote location.\
    \ The\nsoil moisture and temperature, air temperature and humidity, and light\
    \ intensity inside greenhouses\nwere also monitored using different sensors, microcontrollers,\
    \ and the LoRa wireless protocol [8]. The\nLoRa gateway collects data from LoRa\
    \ nodes to construct the topology of a star network, and may\ncommunicate with\
    \ a cloud server over a long communication range and with high scalability.\n\
    LoRa was recently utilized in several agriculture research projects developed\
    \ by the Libelium\nCompany (Zaragoza, Spain) [45], such as improving kiwi production\
    \ based on a smart irrigation system\n(Italy), monitoring of green areas by using\
    \ a smart garden system (Spain), improving fertilization\nmethods of corn yields\
    \ (Italy), improving production of banana yields (Colombia), increasing\ntobacco\
    \ crops by controlling the climate condition (Italy), saving water through a smart\
    \ irrigation\nsystem (Barcelona), monitoring of vineyard crops (Spain), and monitoring\
    \ of diseases that affect\nvineyards (Switzerland).\n2.6. SigFox Protocol\nSigFox\
    \ is an ultra-narrowband wireless cellular network [43] with low data rate applications,\n\
    thereby making this technology appropriate for IoT and machine-type communications\
    \ systems.\nSigFox has been used in different applications, including telephone,\
    \ security, mobile, broadband, and\ntelevision. The SigFox network was used in\
    \ [46,47] to construct a geolocation system that localizes\nanimals in mountain\
    \ pastures throughout the summer. A system was proposed in [46] to help farmers\n\
    locate their cattle and enhance their production. The importance of power consumption\
    \ analyses was\nhighlighted in [47], especially when the cattle are located in\
    \ high mountainous areas.\n2.7. Performance Comparison of Wireless Communication\
    \ Protocols\nTable 1 compares the aforementioned wireless communication protocols\
    \ or technologies relative\nto different parameters, including power consumption,\
    \ communication range, data rate, cost, system\nSensors 2017, 17, 1781\n6 of 45\n\
    complexity, and other parameters. The challenges in agricultural applications\
    \ may be developed from\nthe selection of the deployment range. For instance,\
    \ the transmitted signal by the sensor node is\nattenuated when the agriculture\
    \ ﬁeld is separated by obstacles. Power consumption is considered as\nanother\
    \ limitation in the WSN design in agricultural applications [5]. The ZigBee wireless\
    \ protocol was\ndesigned to run with a suitable communication range and low power\
    \ consumption. LoRa and SigFox\nare considered to work with low power consumption\
    \ and long radio range. Accordingly, the power\nconsumption and communication\
    \ distance of the above technologies have been assessed as follows.\nZigbee and\
    \ Bluetooth low energy (BLE) are designed for battery-powered devices.\nThese\n\
    technologies conserve power through low duty cycling and enter sleep mode to extend\
    \ the battery\nlifetime. Classic BT, WiFi, GPRS, LoRa, and SigFox have a higher\
    \ power consumption than ZigBee.\nAlthough ZigBee has a shorter communication\
    \ range than LoRa, SigFox, and GPRS, this range may be\nextended with a router\
    \ node to overcome the node deployment limitations in agricultural applications.\n\
    BLE outperforms ZigBee in terms of power consumption, but this wireless protocol\
    \ is limited in\nagricultural applications because of its short communication\
    \ distance of 10 m, as reported in [48].\nZigBee also has a higher network elasticity\
    \ than BT, thereby permitting various topologies. Given the\nlarge number of nodes\
    \ (more than 65,000) in the ZigBee network, the ZigBee technology can be used\n\
    to cover a wide agricultural. Accordingly, the ZigBee wireless protocol has been\
    \ adopted in many\nagriculture studies [5,49–53]. One of these studies [5] prefers\
    \ to utilize ZigBee in farming domains and\nagricultural applications owing to\
    \ its energy-efﬁcient, reliable, and low-cost wireless protocol.\nThe LoRa wireless\
    \ protocol covers a large communication area with low power consumption.\nTherefore,\
    \ it can be suitably deployed in vast agricultural ﬁelds. The network size of\
    \ the LoRa protocol\nis limited by its duty cycle, where a 1% duty cycle can lead\
    \ to a maximum communication time of 36 s\nper hour for each end device [54].\
    \ In addition, LoRa gateways have a limited message capacity of less\nthan 100\
    \ messages per minute because of the unplanned deployment of LoRa gateways in\
    \ urban areas,\nthereby interfering with low power wireless area networks, such\
    \ as SigFox. Therefore, increasing the\nnumber of gateways can challenge the infrastructure\
    \ of the LoRa network [54]. Moreover, the LoRa\ntechnology is complex and has\
    \ sizable hardware implementations [55].\nSigFox has an extremely low data rate\
    \ (100 bps) and slow transmission time (10 s for 10 bytes)\ncompared with ZigBee\
    \ and LoRa [56]. SigFox supports star topology supervised by a centralized sever\n\
    that manages connectivity between devices and the base stations, whereas the LoRa\
    \ supports wide\narea network based on star-to-star topology creating a bridge\
    \ of LoRa gateways. Given that data rate\nand transmission time are both critical\
    \ issue in any communication system, SigFox cannot be widely\nused for agricultural\
    \ applications. Moreover, this technology does not support the collision avoidance\n\
    scheme, thereby affecting the network because several M2M devices may be operated\
    \ in the same\narea. Moreover, SigFox has a limited reliability because of its\
    \ one-way communication (without an\nacknowledgment signal) and low received power.\
    \ However, both the LoRa and SigFox infrastructures\nare still in progress. Ali\
    \ et al. further discuss the limitations of these protocols [56].\nFrom the above\
    \ discussion and the comparison results presented in Table 1 and Figure 1\nand\
    \ as will be shown in Tables 2–8 the ZigBee and LoRa wireless protocols have been\
    \ identiﬁed\nas the most suitable wireless protocols for agricultural applications\
    \ because of their low power\nconsumption, communication range (acceptable for\
    \ ZigBee and long for LoRa), small size, easy\nnetwork implementation, simplicity,\
    \ low latency (for ZigBee), scalability, and network size.\nSensors 2017, 17,\
    \ 1781\n7 of 45\n \ninfrastructures are still in progress. Ali et al. further\
    \ discuss the limitations of these protocols [56].  \nFrom the above discussion\
    \ and the comparison results presented in Table 1 and Figure 1 and as \nwill be\
    \ shown in Tables 2–8 the ZigBee and LoRa wireless protocols have been identified\
    \ as the most \nsuitable wireless protocols for agricultural applications because\
    \ of their low power consumption, \ncommunication range (acceptable for ZigBee\
    \ and long for LoRa), small size, easy network \nimplementation, simplicity, low\
    \ latency (for ZigBee), scalability, and network size. \n \nFigure 1. Different\
    \ wireless technologies in terms of power consumption and communication \ndistance.\
    \ \nFigure 1. Different wireless technologies in terms of power consumption and\
    \ communication distance.\nPA using sensors, actuator, processor, wireless transceiver,\
    \ and other information technologies,\npotentially permits manufacturers to computerize\
    \ site-speciﬁc management for automated agriculture.\nIn terms of precision, the\
    \ considered wireless protocols for agricultural applications have improved\n\
    the agriculture domain. Precision irrigation is frequently regarded as optimizing\
    \ irrigation accuracy\ndue to its ability to control the optimum amount of water\
    \ and irrigation time. The water savings\nof 90% (based on ZigBee), 33% (based\
    \ on ZigBee), 50% (based on Bluetooth), and 90% (based on\nBluetooth) were achieved\
    \ for precision irrigation systems relative to traditional irrigation systems\
    \ in\nresearch [17,28,30,40], respectively. Animal behavior, such as laying down,\
    \ standing, grazing, walking,\nand other modes, was monitored in [18] using ZigBee\
    \ wireless protocol. The authors found that\nlaying down and grazing could be\
    \ improved by 83.5% compared with the ﬁndings from similar\nstudies. In another\
    \ study that has adopted a proposed algorithm that depended on the ZigBee wireless\n\
    protocol [20], an accuracy rate of 95.4% was expected for the proposed algorithm\
    \ to monitor the\nhoney bee and the agricultural and environmental aspects. In\
    \ [23], the automation of the irrigation\nsystem based on ZigBee saved the system\
    \ cost between 1.24% and 6.72% relative to the entire cost\nof the water user\
    \ associations, with energy savings of 2.05 to 8.21% and water savings of 0.71\
    \ to\n6.46%. The proposed model in [35] utilized a smartphone platform (based\
    \ on Bluetooth and GSM\ntechnologies) and permitted three types of irrigation\
    \ systems. The efﬁciency factors were improved\nby 90% for subsurface drip type\
    \ and 85% and 75% for high- and low-pressure overhead sprinkler\ntypes, respectively,\
    \ to compute for drift and evaporation before the water droplets approached the\n\
    soil. 3G technology was adopted by Libelium based on Waspmote wireless sensor\
    \ devices to monitor\nthe vineyards in Northwest Spain [57]. Phytosanitary treatments,\
    \ such as fungicides and fertilizers,\nwere minimized by 20% and growing yields\
    \ were enhanced by 15% based on PA. In [8], LoRa wireless\nprotocol was considered\
    \ to monitor the agriculture environments with 90% power efﬁciency. The cost\n\
    of pumping and water for precision irrigation system in green areas was reduced\
    \ by 30% based on\nSigFox wireless protocol [58].\nThe preceding survey for different\
    \ agricultural applications revealed that PA can be achieved\nin terms of water\
    \ savings, animal behavior, accuracy, power efﬁciency, and reducing system cost\n\
    for various wireless protocols. Consequently, agriculture can be improved based\
    \ on agricultural\nautomation systems compared with traditional agriculture systems.\n\
    Sensors 2017, 17, 1781\n8 of 45\nTable 1. Different wireless communication technologies.\n\
    Parameters\nZigBee\nClassic BT\nBLE\nWiFi\nGPRS\nLoRa\nSigFox\nStandard\nIEEE\
    \ 802.15.4\nIEEE 802.15.1\nIEEE 802.15.1\nIEEE 802.11a,b,g,n\nN/A\nIEEE 802.15.4g\n\
    IEEE 802.15.4g\nFrequency band\n868/915 MHz and 2.4 GHz\n2.4 GHz\n2.4 GHz\n2.4\
    \ GHz\n900–1800 MHz\n869/915 MHz\n868/915 MHz\nModulation type\nBPSK/OQPSK\nGFSK,\
    \ DPSK, and DQPSK\nGMSK\nBPSK/OQPSK\nGMSK/8PSK\nGFSK\nDBPSK(UL), GFSK(DL)\nSpreading\n\
    DSSS\nFHSS\nFHSS\nMC-DSSS, CCK\nTDMA, DSSS\nCSS\nN/A\nNumber of RF channels\n\
    1, 10, and 16\n79\n40\n11\n124\n10 in EU, 8 in US\n360\nChannel bandwidth\n2 MHz\n\
    1 MHz\n1 MHz\n22 MHz\n200 kHz\n<500 KHz\n<100 Hz\nPower consumption in Tx\nmode\
    \ [5,40,56,59–61]\nLow\nMedium\nUltra-low\nHigh\nMedium\nLow\nLow\n36.9 mW\n215\
    \ mW\n10 mW\n835 mW\n560 mW\n100 mW\n122 mW\nData rate\n20, 40, and 250 kbps\n\
    1–3 Mbps\n1 Mbps\n11–54 and 150\nMbps\nUp to 170 kbps\n50 kbps\n100 bps\nLatency\
    \ [62–65]\n(20–30) ms\n100 ms\n6 ms\n50 ms\n<1 s\nN/A\nN/A\nCommunication range\
    \ [48,66]\n100 m\n10–50 m\n10 m\n100 m\n1–10 km\n5 km\n10 km\nNetwork size\n65,000\n\
    8\nLimited by the application\n32\n1000\n10,000 (nodes per BS)\n1,000,000 (nodes\
    \ per BS)\nCost [5]\nLow\nLow\nLow\nHigh\nMedium\nLow Cost\nLow Cost\nSecurity\
    \ capability\n128 bits AES\n64 or 128 bits AES\n64 or 128 bits AES\n128 bits AES\n\
    GEA, MS-SGSN, MS-host\nAES 128b\nEncryption not supported\nNetwork Topologies\n\
    P2P, tree, star, mesh\nScatternet\nStar-bus\nPoint-to-hub\nCellular system\nStar-of-stars\n\
    Star\nApplication\nWPANs, WSNs,\nand Agriculture\nWPANs\nWPANs\nWLANs\nAMI, demand\n\
    response, HAN\nAgriculture, Smart grid,\nenvironment control,\nand lighting control\n\
    Agriculture and\nenvironment, automotive,\nbuildings, and\nconsumer electronics\n\
    Limitations\nline-of-sight (LOS) between\nthe sensor node and the\ncoordinator\
    \ node must\nbe available\nShort communication range\nShort communication range\n\
    High power\nconsumption and\nlong access\ntime (13.74 s)\nPower\nconsumption problem\n\
    Network size\n(scalability), data rate,\nand message capacity\nLow data rates\n\
    Sensors 2017, 17, 1781\n9 of 45\n3. Agriculture-Based Energy-Efﬁcient Schemes\
    \ in Literature\nThe solution to the power consumption problem in the agriculture\
    \ domain using WSNs has been\nhighlighted in several studies. Previous studies\
    \ focused on reducing the power consumption of sensor\nnodes in WSNs by proposing\
    \ energy-efﬁcient schemes. This study reviews the existing energy-efﬁcient\nschemes\
    \ in WSNs as shown in Figure 2. This review classiﬁes the energy-efﬁcient schemes\
    \ in\nagriculture application into two categories, namely, power reduction and\
    \ energy-harvesting techniques.\nThese techniques can also be classiﬁed into subcategories\
    \ to explore the power consumption problem\nof agriculture WSNs. Most of these\
    \ techniques can be employed in agricultural applications, which are\nhighlighted\
    \ in the following subsections.\nSensors 2017, 17, x  \n9 of 45 \n3. Agriculture-Based\
    \ Energy-Efficient Schemes in Literature \nThe solution to the power consumption\
    \ problem in the agriculture domain using WSNs has been \nhighlighted in several\
    \ studies. Previous studies focused on reducing the power consumption of \nsensor\
    \ nodes in WSNs by proposing energy-efficient schemes. This study reviews the\
    \ existing \nenergy-efficient schemes in WSNs as shown in Figure 2. This review\
    \ classifies the energy-efficient \nschemes in agriculture application into two\
    \ categories, namely, power reduction and energy-\nharvesting techniques. These\
    \ techniques can also be classified into subcategories to explore the power \n\
    consumption problem of agriculture WSNs. Most of these techniques can be employed\
    \ in agricultural \napplications, which are highlighted in the following subsections.\
    \ \nSolar cell \nPower reduction\n techniques\nTopology control\nSleep/wake  \n\
    scheme\nRadio \noptimization \nscheme\nData mitigation \nscheme\nEnergy-efficient\n\
    \ routing scheme\nDuty-cycling \nMAC protocols\nTPC \nModulation scheme \nCognitive\
    \ radio\nData gathering \nData rate\nData compression \nData driven \nSink mobility\n\
    Multi-path routing \nCluster architecture \nRouting metric \nWireless power \n\
    transfer\nAir flow \nenergy\nVibration \nenergy\nSolar \nenergy \nThermal \nenergy\n\
    Inductive coupling \nElectromagnetic (EM) radiation \nMagnetic resonant coupling\
    \ \nMicro wind turbines \nPiezoelectric converters \nThin-film thermoelectric\
    \ elements \nEnergy-efficient schemes in \nagricultural applications based on\
    \ \nWSN\nEnergy harvesting\n techniques\nCombination \nSchemes\nTPC and MAC and\
    \ routing protocols \nEncoding and modulation schemes \n Cluster architecture\
    \ with TDMA based MAC  \nprotocol and data aggregation scheme \nMicrobial fuel\
    \ cell energy \nWater flow energy\nData acquisition, compression ,and sampling\n\
    Figure 2. Energy-efficient schemes in agriculture based on wireless sensor networks\
    \ (WSNs). \n3.1. Agriculture-Based Power Reduction Techniques \nWSNs contain numerous\
    \ sensor nodes, which are utilized to measure ecological phenomena in \nreal time\
    \ and transmit information back to the master node through a wireless module.\
    \ Given the \nabsence of wire connections, sensor nodes are appropriate for different\
    \ applications under strict \nenvironments. PA is one of the important applications\
    \ relying on WSNs [67]. A sensor node is usually \nequipped with rechargeable\
    \ batteries, which have limited capacity and pose a challenge to long-term \n\
    application [68]. These batteries supply power to the sensor nodes by providing\
    \ the necessary current \nto maintain each part of the sensor nodes working properly.\
    \ The total power consumption of a sensor \nnode is the sum of each element in\
    \ the node (i.e., sensor, microcontroller unit, and radio module), \nand each\
    \ component may operate at different energy states. Therefore, the lifespan of\
    \ a sensor node \nis the time consumed to exhaust its batteries under a sustainable\
    \ operation threshold. \nNumerous scholars have developed power reduction techniques\
    \ to provide sensor nodes an\nFigure 2. Energy-efﬁcient schemes in agriculture\
    \ based on wireless sensor networks (WSNs).\n3.1. Agriculture-Based Power Reduction\
    \ Techniques\nWSNs contain numerous sensor nodes, which are utilized to measure\
    \ ecological phenomena\nin real time and transmit information back to the master\
    \ node through a wireless module. Given\nthe absence of wire connections, sensor\
    \ nodes are appropriate for different applications under strict\nenvironments.\
    \ PA is one of the important applications relying on WSNs [67]. A sensor node\
    \ is usually\nequipped with rechargeable batteries, which have limited capacity\
    \ and pose a challenge to long-term\napplication [68]. These batteries supply\
    \ power to the sensor nodes by providing the necessary current\nto maintain each\
    \ part of the sensor nodes working properly. The total power consumption of a\
    \ sensor\nnode is the sum of each element in the node (i.e., sensor, microcontroller\
    \ unit, and radio module), and\nSensors 2017, 17, 1781\n10 of 45\neach component\
    \ may operate at different energy states. Therefore, the lifespan of a sensor\
    \ node is the\ntime consumed to exhaust its batteries under a sustainable operation\
    \ threshold.\nNumerous scholars have developed power reduction techniques to provide\
    \ sensor nodes an\ninﬁnite lifespan. This section reviews several power reduction\
    \ techniques of WSNs that can be used in\nagricultural applications. The purposes,\
    \ wireless protocols, ﬁndings, advantages, and limitations of\neach technique\
    \ are also discussed.\n3.1.1. Sleep/Wake Strategy\nWireless transceivers consume\
    \ a signiﬁcant amount of power relative to processors. The energy\nof the wireless\
    \ nodes is mostly dissipated during the reception and transmission processes.\
    \ The radio\nof sensor nodes can enter sleep mode via the sleep/wake strategy\
    \ to reduce the power consumption\nof the RF components of WSNs. No data communication\
    \ occurs during the sleep mode. The sensor\nnodes wake up to collect and transmit\
    \ data within a certain period and then return to sleep mode\nto conserve energy.\
    \ In agricultural applications, the sleep/wake strategy is implemented via (i)\
    \ duty\ncycling, (ii) medium-access control (MAC) protocols, and (iii) topology\
    \ control.\nDuty cycle is proposed in several studies to lower the power consumption\
    \ for different agricultural\napplications based on WSN. Zhang et al. [69] proposed\
    \ a WSN-based system to monitor soil moisture\nand analyzed the temporal and spatial\
    \ variability of soil moisture for variable irrigation. To reduce the\npower consumption\
    \ of the soil sensor nodes, the soil moisture sensors were always in sleep mode\
    \ and\nactivated only when data were to be collected. Million et al. [70] designed\
    \ a WSN for PA in Malawi\nand called it WiPAM. This system was intended to automate\
    \ irrigation and implement an irrigation\nmanagement system (IMS). The authors\
    \ investigated soil moisture variability. The sensor nodes\nwere homogeneous,\
    \ and each was composed of a ZigBee end device (ZED) and a ZigBee coordinator\n\
    (ZC). In the star topology, three sensors nodes were conﬁgured as ZED (in ﬁeld-nodes)\
    \ and one as a\ngateway node. Another node was conﬁgured as ZC for aggregating\
    \ data and actuating the irrigation\nvalves. The power source to sustain the operation\
    \ of the network was solar power. This approach\nwas complemented by an energy-efﬁcient\
    \ management approach. In other words, sensor nodes went\nto sleep when idle and\
    \ woke up to transmit data when required. The irrigation valves opened or\nclosed\
    \ depending on the values stored in the coordinator node. Ouadjaout et al. [71]\
    \ presented an\nenergy-efﬁcient WSN for soil moisture monitoring in an irrigation\
    \ system. The new platform, DZ50,\nconsists of an RFM12b transceiver and an ATmega328P\
    \ microcontroller. This platform consumes very\nlow power, and much energy can\
    \ be saved in sleep mode, in which the transceiver goes inactive (sleep\nmode)\
    \ for long periods. Comparison showed that the performance of DZ50 is better than\
    \ that of\nTelosB and MicaZ. Speciﬁcally, the battery lifetime of DZ50 is seven\
    \ times that of TelosB and MicaZ\nbased on a 10 s sampling period. Monitoring\
    \ of environmental conditions, such as wind direction,\nwind speed, humidity,\
    \ temperature, conductivity, rain level, pH, and water level, in crop ﬁelds was\n\
    presented in [72]. A solar cell was used to power several sensor nodes deployed\
    \ at a distance of 500 m\nto 5 km. WSNs based on IEEE 802.15.4 (C1120 transceiver)\
    \ and GPRS/3G were adopted to transmit the\nrural environments to the base station.\
    \ Energy was saved through low duty cycling (3.3%) for the RF\ntransceiver; the\
    \ saved energy is equivalent to 30 s of wake up time every 15 min. In addition,\
    \ a 2-watt\nsolar cell was used to supply power to the overall system, whose total\
    \ average power consumption\nwas 207 mW.\nMAC protocols were also proposed in\
    \ previous research on agriculture WSNs [39,73–76].\nSudha et al. [39] proposed\
    \ an energy-efﬁcient TDMA-based algorithm for wireless sensor\ncommunications\
    \ in an automatic irrigation system. Their experiment involved a header node that\n\
    collected data directly from all the nodes in the ﬁeld and passed these data to\
    \ the base station (BS).\nThis network arrangement was a star single-hop topology.\
    \ These techniques attain power savings\nof 10% with a high communication distance\
    \ of 1 km between the sensor node and the base station.\nHowever, when this distance\
    \ increases, the power consumption also increases. López et al. [75]\nproposed\
    \ a WSN for monitoring horticultural yields, which are disseminated among small\
    \ plots\nSensors 2017, 17, 1781\n11 of 45\nscattered at a communication distance\
    \ of 10 km. The air temperature and soil moisture are collected\nduring a 10-week\
    \ period. The authors adopted the MAC protocol and star topology to conserve the\n\
    power consumption of the sensor nodes that used the IEEE 802.15.4 standard based\
    \ on the CC2420\ntransceiver. The lifetimes of the soil moisture and air temperature\
    \ sensor nodes are 1024 days and\n222 days, respectively, utilizing a battery\
    \ that delivers 2700 mAh.\nThe topology protocol scheme can be used in agricultural\
    \ monitoring WSNs to modify the network\ntopology according to the application\
    \ requirements, thereby reducing the number of active nodes in\na network. Some\
    \ nodes in the network can enter sleep mode to prolong the network lifetime when\n\
    they are not sensing the same area of interest. Aneeth and Jayabarathi [77] implemented\
    \ Ad hoc\nOn-Demand Distance Vector (AODV) and Dynamic Source Routing (DSR) protocols\
    \ over a different\ntopology of ZigBee WSN (i.e., cluster topology, random topology,\
    \ star topology with gateway based\non two cases; inside and outside) in simulation\
    \ environments by using the OPNET software (Riverbed,\nSan Francisco, CA, USA).\
    \ Twenty soil moisture sensor nodes and one gateway node were distributed\nin\
    \ a farmland with a dimension of 100 × 100 m2. Each node sends information about\
    \ the soil moisture\nto the gateway node through the ZigBee wireless protocol.\
    \ The gateway node passes the information to\nthe controlling system to control\
    \ the irrigation valve system. Their study showed that the star topology\nusing\
    \ DSR protocol reduces the power consumption of the WSN because it has less routing\
    \ overhead\ncompared with AODV protocol. Table 2 shows the comparison of power\
    \ reduction technique based on\nsleep/wake schemes for previous research in agricultural\
    \ applications.\nSensors 2017, 17, 1781\n12 of 45\nTable 2. Sleep/wake schemes\
    \ for previous research in agricultural applications.\nPower Reduction Scheme\n\
    Reference\nExample\nWireless\nProtocol/Device\nPower\nSavings/Battery\nLifetime\n\
    Communication\nDistance/Field\nSize\nSensors/Actuators\nApplication\nLimitations\n\
    Sleep/wake\nscheme\nDuty-cycle\n[8]/2016\nLoRa\n4408 h\nLimited\nSoil temperature,\
    \ Soil moisture, air temperature,\nair humidity and light intensity/alert messages\n\
    Greenhouse\nCommunication distance\n[38]/2013\nWiFi\n9.5 days\n100 m\nTemperature,\
    \ humidity, water level, soil\nmoisture, light, and pressure\nPrecision Agriculture\n\
    Short battery life\n[42]/2015\nZigBee and\nGSM/GPRS\n13.35 days\nLong\nSoil moisture,\
    \ temperature, pressure, and water\nelectrical conductivity and temperature\n\
    Irrigation\nShort battery life\n[49]/2013\nZigBee and\nGSM/GPRS\n21 days\n20 m\n\
    Air temperature, air humidity, and\nsolar radiation\nVineyard\nShort battery life\
    \ and\ncommunication distance\n[69]/2013\nGPRS\nLow power\n30 m\nSoil moisture/sprinkling\
    \ machine\nPrecision Agriculture\nData losses-Measurement error\n[70]/2013\nZigBee\
    \ and\nGPRS\nLow power\n23 m\nTemperature and soil moisture/solenoid valves\n\
    Precision Agriculture\nConﬂicted in communication between\nZigBee and GPRS\n[71]/2014\n\
    DZ50 (RFM12b)\n700%/7 years\nShort\nSoil moisture/solenoid valves\nPrecision Irrigation\n\
    Low data rate\n[72]/2015\nZigBee and\nGPRS/3G\n8.1 days\n2000–3000 m\nWind speed,\
    \ wind direction, temperature,\nhumidity, rain gauge, water and pH level\nCrop\
    \ ﬁelds\nShort battery life\n[78]/2012\nZigBee\n(CC2530)\n150 day (3606 h)\n400\
    \ m\nSoil moisture, ambient temperature, soil\ntemperature, and ambient\nhumidity/irrigation\
    \ equipment\nAgriculture/\nfarm ﬁeld\nRSSI measurements are not considered the\n\
    actual ﬁeld\n[79]/2014\nZigBee\n(CC2530)\n84.9 h\n65, 95, 200 m\nSoil moisture,\
    \ air humidity, and air\ntemperature/irrigation system\nOrchard, greenhouse,\n\
    and farmland\nPacket losses\nMAC\nprotocol\n[39]/2011\nSimulation\n10%\n1000 m\n\
    Temperature, and soil moisture/solenoid valve\nand motor\nIrrigation\nHigh power\
    \ consumption in the case of\nthe sensor nodes far from base station\n[73]/2013\n\
    IEEE 802.15.4\n(CC2420)\n745.4 days\n50 m\nTemperature, light intensity, and humidity\n\
    Greenhouse\nagriculture\nShort communication distance\n[74]/2013\nZigBee\n6.5\
    \ month\n10 m\nAir temperature, soil pH, humidity light\nintensity, and soil moisture/irrigation\
    \ system\nPrecision farming\nProposed protocol have\nadditional complexity\n[75]/2011\n\
    IEEE 802.15.4\n(CC2420)\n222 and 1204\ndays\n84 m\nAir temperature and soil moisture/drip\n\
    water system\nPrecision horticulture\nGateway consumes more power because it\n\
    is always awake\n[76]/2010\nIEEE 802.15.4\n(CC2420)\nLow power\n50 m\nLeaf temperature\
    \ and wetness and air\ntemperature and humidity/relay\nGreenhouse\nThe power consumption\
    \ of the sensor\nnode increases with the number of sensors\nTopology\ncontrol\n\
    [77]/2016\nZigBee\nLow power\n100 × 100 m2\nSoil moisture, temperature and humidity/valve\n\
    Irrigation\nMore power is consumed at long\ncommunication distance\nSensors 2017,\
    \ 17, 1781\n13 of 45\n3.1.2. Radio Optimization\nPrevious studies show that the\
    \ power is mostly dissipated in the RF components of WSNs than\nin data processing\
    \ units, such as microcontrollers and microprocessors [80]. A number of scholars\n\
    have applied various radio optimization schemes or techniques, including (i) transmission\
    \ power\ncontrol (TPC), (ii) modulation scheme, and (iii) cognitive radio, to\
    \ reduce the power consumption\nof the RF components of agriculture sensor nodes.\
    \ In the TPC scheme, the sensor nodes modify the\ntransmitted power to save energy,\
    \ stimulate avoiding interference, and establish a communication\nlink [81]. TPC\
    \ can be used in the agricultural ﬁeld [82,83], where the RF transmitted power\
    \ of the\nsensor nodes can be modiﬁed to reduce their power consumption based\
    \ on the measured distance\nbetween the sink node and the sensor nodes. Sahota\
    \ et al. [82] have investigated the application of\nTPC in reducing the power\
    \ consumption of the sensor nodes in precision agriculture-based WSNs.\nSeveral\
    \ power levels and different receiver sensitivity levels are considered to perform\
    \ the said process.\nThe network layers and MAC protocol in a WSN (based on CC1110)\
    \ for the agriculture domain are\nadopted to further lower the power consumption\
    \ of the sensor node. Results show that the power\nsaving that employs multiple\
    \ modes of transmitted power can be improved by approximately 10%\nrelative to\
    \ the traditional mode. By contrast, Kamarudin et al. [83] prolonged the lifetime\
    \ of the sensor\nnode by more than 8.5% by modifying the transmitted power of\
    \ the CC2420 communication device.\nA cognitive radio is an intelligent wireless\
    \ communication network [84] in which the wireless\ncommunication channel in the\
    \ spectrum band can be selected efﬁciently [85]. The transmission metrics\n(e.g.,\
    \ transmitted power, carrier frequency, and modulation scheme) can be adjusted\
    \ accordingly.\nA cognitive radio requires more energy than conventional devices\
    \ do because it includes sophisticated\nand complex functions [86]. Therefore,\
    \ an energy-efﬁcient cognitive radio network poses challenges,\nespecially with\
    \ regard to the use of battery energy. In wireless communication, the electromagnetic\n\
    spectrum is fully occupied, with several bands being partially used or unused.\
    \ This situation supports\nthe utilization of a cognitive radio, in which spectrum\
    \ holes can be utilized.\nSabri et al. [19] fused fuzzy logic control (FLC) with\
    \ a ZigBee wireless sensor actor network\n(WSAN), which can sense the surroundings\
    \ and respond in ideal performance without interference\nfrom agricultural crops.\
    \ FLC assists the specialists in managing complex systems more compared with\n\
    traditional control methods, which are ineffective in terms of ﬂexibility, energy,\
    \ productivity, and labor\ninterference. Two signiﬁcant greenhouse environment\
    \ parameters (i.e., humidity and temperature)\nare monitored during daytime and\
    \ nighttime. The results show that the intelligent technique-based\nFLC can signiﬁcantly\
    \ improve the WSAN lifespan. Therefore, the WSAN can work for 14 years with a\n\
    210 mAh battery power based on the FLC merged with WSAN.\nThe power consumption\
    \ of networks can be directly affected by the modulation scheme [87]. The\nmodulation\
    \ parameters can be adjusted to their optimal values to preserve the minimum power\n\
    consumption of radio modules. Anane et al. [88] investigated the Frequency-shift\
    \ keying (FSK) and\nMinimum-shift keying (MSK) modulation strategies to minimize\
    \ the total power consumption of\nthe sensor node required to transmit given data\
    \ packets. Through their extensive study, the authors\nconcluded that MSK outperforms\
    \ FSK in terms of power consumption. However, several modulation\nschemes cannot\
    \ be used in the ZigBee wireless protocol that operates at 2.4 GHz because this\
    \ protocol\nsupports a single modulation scheme. Speciﬁcally, the ZigBee wireless\
    \ protocol works with offset\nquadrature phase-shift keying (OQPSK) [89]. Table\
    \ 3 shows the comparison of power reduction\ntechnique based on radio optimization\
    \ schemes for previous research in agricultural applications.\nSensors 2017, 17,\
    \ 1781\n14 of 45\nTable 3. Radio optimization schemes for previous research in\
    \ agricultural applications.\nPower Reduction Scheme\nReference\nExample\nWireless\n\
    Protocol/Device\nPower\nSavings/Battery\nLifetime\nCommunication\nDistance/Field\n\
    Size\nSensors/Actuators\nApplication\nLimitations\nRadio\noptimization\nscheme\n\
    TPC\n[82]/2010\nCC1110 module\n≈10%\n50 × 50 m2\nAgricultural environment sensors\n\
    Precision agriculture\nLarge power is consumed\nthrough the wakeup\nsynchronization\n\
    [83]/2012\nZigBee CC2420\n8.5%\n180, 66,\nand 60 m\nAgricultural environments\
    \ sensors\nAgriculture\nSimulation study and did\nnot implement in the\nreal environments\n\
    Cognitive radio\n[19]/2012\nZigBee-Pro\n14 years\nLong\nTemperature, light intensity,\n\
    humidity/humidiﬁer, heater, and ventilation\nGreenhouse\nLimited to one topology\n\
    (i.e., star topology) to\nsave power\nModulation\nscheme\n[88]/2016\nSimulation\n\
    52% (MFSK),\n55% (MSK)\n10, 30,\nand 100 m\nDifferent applications including agricultural\n\
    sensor network\nSuggested to use in\nagriculture application\nPower consumption\n\
    increases with\ncommunication range\nSensors 2017, 17, 1781\n15 of 45\n3.1.3.\
    \ Data Mitigation\nData mitigation presents another power consumption solution\
    \ for agriculture WSNs to reduce the\namount of data transmitted from source nodes\
    \ to destination nodes. Data mitigation can be achieved\nvia (i) data gathering,\
    \ (ii) data comparison, (iii) data rate, and (iv) data-driven techniques.\nData\
    \ gathering can extend the lifetime of sensor nodes in WSNs by minimizing redundant\
    \ data\ntransmission. In different applications of agriculture WSNs including\
    \ environment observation, the\nsensed data of the neighboring nodes may spatially\
    \ be associated. In this case, data combination\npresents an important method\
    \ for reducing the amount of redundant data, reducing the number\nof transmissions,\
    \ and minimizing the power consumption of the nodes in the network [90]. Data\n\
    gathering also reduces latency by minimizing data trafﬁc and improving the delay\
    \ between the sink\nand sensor nodes; after reducing the number of communications,\
    \ this approach can improve the\nexploitation of bandwidth [91]. Data merging\
    \ can be accomplished along a route starting from sensor\nnodes to sink nodes.\
    \ The nodes in a route can rebroadcast only the maximum, minimum, or average\n\
    amount of received data. The design of an energy-efﬁcient WSN-based data-gathering\
    \ scheme poses a\nsigniﬁcant challenge because this scheme must ensure a trade-off\
    \ among power consumption, latency,\nsecurity, data accuracy, and fault tolerance.\n\
    Gathering data in agricultural applications, including humidity, weather, temperature,\
    \ and soil\nmoisture, can minimize the power consumption of environment sensor\
    \ nodes by spatially correlating\nthe ﬁeld and redundant data of the sensor nodes\
    \ when the temperature does not change signiﬁcantly [1],\nespecially during nighttime.\
    \ For example, if the microcontroller of the temperature sensor node\nmeasures\
    \ the same temperature value for extended hours, then the sensor node sends the\
    \ temperature\nvalue every four hours to reduce power consumption. Merging the\
    \ temperature and humidity\nsensors into a single sensor may also reduce the power\
    \ consumption, size, and system complexity.\nAzaza et al. [17] integrated climate\
    \ condition parameters (i.e., temperature, CO2, humidity, and\nilluminance sensors)\
    \ inside a greenhouse and observed a comfortable growth of plants while saving\n\
    water resources and energy. The greenhouse was equipped with environment control\
    \ devices, such as\nventilation system, fogging system for humidiﬁcation, and\
    \ electrical heaters. A smart system based on\nfuzzy logic control correlated\
    \ humidity and temperature measurements is implemented to improve\nthe fogging\
    \ system operation. In that way, the power consumption of the fogging system can\
    \ be\nsigniﬁcantly reduced. In addition, the system was improved by a wireless\
    \ data observing platform\n(STM 32/F4 microcontroller and Virtex V FPGA board)\
    \ for logging and data routing, which provides\ndata access in real time. The\
    \ suggested control system based on fuzzy logic control was experimentally\nimplemented\
    \ and validated. The results revealed that the total energy and water usage decreased\
    \ by\n22% and 33%, respectively.\nMusaazi et al. [92] introduced a data caching\
    \ algorithm (DCAL) that optimizes the sleep/wake up\nperiods of ZigBee WSNs to\
    \ achieve low energy consumption and latency in PA application. In WSNs,\ndata\
    \ are collected from the source nodes and routed to the sink node; from the sink\
    \ node, the data\nare sent to the Internet. Reducing the transmission of duplicated\
    \ sensed data reduces the power\nconsumption. Energy conservation is paramount\
    \ during the communication phase to prolong the\nlifetime of sensor nodes. The\
    \ main method utilized to conserve energy involves switching off the nodes’\n\
    transceiver when they are not transmitting nor receiving packets. Additionally,\
    \ the data-gathering\nmethod for agriculture WSNs has been investigated in [93].\
    \ The proposed system includes ZigBee\nwireless sensor nodes, customized farming\
    \ personal digital assistants (PDAs), and a host PC. Each\nsensor node contains\
    \ four sensors to identify ﬁve agricultural ﬁeld parameters: soil temperature,\
    \ soil\nmoisture, environmental humidity, soil electrical conductivity, and environmental\
    \ temperature. The\nPDA combines the ZigBee coordinator node, GPRS module, and\
    \ GPS module. The ZigBee WSN\ngathers farming data and obtains GPS information\
    \ for each sensor node. It then passes the data to the\nhost PC through GPRS.\
    \ The experimental results show that the battery power of the sensor nodes can\n\
    be saved based on the data-gathering scheme.\nSensors 2017, 17, 1781\n16 of 45\n\
    Data compression is a useful method for deploying sensor nodes with restricted\
    \ energy resources.\nInformation encoding can be performed in sensor nodes, whereas\
    \ information decoding can be\nperformed in sink nodes. Using compression techniques\
    \ to reduce the size of information that the\nsink nodes transmit over wireless\
    \ channels may also reduce the power consumption and extend the\nbattery life\
    \ of the sensor nodes. One study has applied data compression approaches to reduce\
    \ the\npower consumption for auto-irrigation system which based on CC1000 RF module\
    \ [41]. Based on this\nmethod, the battery of the sensor node can be extended\
    \ to 359 days.\nThe data-driven power reduction technique aims to reduce the amount\
    \ of sampled data by\nconserving the sensing accuracy to an appropriate level\
    \ for a speciﬁed application [94]. Thereby,\nthe amount of data to be transmitted\
    \ to the sink nodes can be minimized. Therefore, this technique\ncan reduce the\
    \ power consumption of agriculture WSNs and extend their battery life. A data-driven\n\
    algorithm is considered by Lerdsuwan and Phunchongharn [95] to solve the energy\
    \ consumption\nproblem of the sensor node in PA with low complexity and maintain\
    \ the transmission rate. Their\nexperiment reveals that their proposed algorithm\
    \ has higher energy efﬁciency than the ESPIN and\nSPIN algorithms in [96,97] by\
    \ 36.84% and 81.53%, respectively.\nThe data rate of RF transceivers can be adjusted\
    \ in the physical layer of a wireless protocol to\nreduce the power consumption\
    \ of the sensor node. Davis et al. [98] investigated the low battery\ncondition\
    \ of a sensor node to attain prolonged battery life for separate wireless sensor\
    \ nodes that\ncan preserve sampling suitability and reliability in communicating\
    \ accurate data. Different sensors,\nsuch as those for soil moisture, sap ﬂow,\
    \ and soil water, were examined to study the effect of sensing\ndebility due to\
    \ low battery voltage. The comparison of the data sampling rate of these sensors\
    \ shows\nthat sap ﬂow measurement is the best option for agricultural WSN. This\
    \ ﬁnding is attributed to the\nlow error obtained when the sampling interval increased\
    \ to 15 min while maintaining measurement\naccuracy. Table 4 shows the comparison\
    \ of power reduction technique based on data mitigation schemes\nfor previous\
    \ research in agricultural applications.\nSensors 2017, 17, 1781\n17 of 45\nTable\
    \ 4. Data mitigation schemes for previous research in agricultural applications.\n\
    Power Reduction Scheme\nReference\nExample\nWireless\nProtocol/Device\nPower Savings/\n\
    Battery Lifetime\nCommunication\nDistance/\nField Size\nSensors/Actuators\nApplication\n\
    Limitations\nData mitigation\nScheme\nData\ngathering\n[17]/2016\nZigBee and\n\
    GSM/GPRS\n22%\nShort\nTemperature, illumination, CO2 rate,\nand humidity/heating,\
    \ ventilation,\ndehumidiﬁcation, and humidiﬁcation\nGreenhouse\nSystem complexity\
    \ due to fuzzy logic\nalgorithm is implemented in FPGA\n[92]/2014\nIEEE 802.15.4\n\
    (CC2420)\n58.8%\n50 and 100 m\nTemperature and moisture\nPrecision\nagriculture\n\
    Limited computational capacity of the\nsensor nodes\n[93]/2011\nZigBee and\nGPRS\n\
    Low power\nLess than 52 m\nSoil moisture and temperature, soil\nelectrical conductivity,\
    \ and\nenvironmental temperature and\nhumidity/irrigation system\nSmart farming\n\
    Path losses due to obstacles\nData\ncompression\n[41]/2010\nCC1000 RF\nmodule\n\
    359 days\n150 m\nSoil moisture/drip water system\nAuto-irrigation\nWhen new node\
    \ added to the network,\nencoding all nodes again is necessary\nData-driven\n\
    [95]/2017\nWiFi (ESP8266)\n81.53% (SPIN)\nand 36.84%\n(ESPIN)\n45 m (150 feet)\n\
    Air temperature, soil moisture, air\nhumidity, and light intensity\nPrecision\n\
    agriculture\nThe sensor node stays awake until\nreceived message from relay node,\
    \ this\nprocess wastes power consumption\nData rate\n[98]/2012\nIEEE 802.15.4\n\
    (CC2420)\n150%\nN/A\nSoil water potential, soil moisture\nand temperature\nSap\
    \ ﬂow, soil\nmoisture, and\nsoil water\nUnder low battery power (i.e., 2.3 V)\
    \ of\nthe sensor node, the proposed algorithm\nbecomes invalid\nSensors 2017,\
    \ 17, 1781\n18 of 45\n3.1.4. Routing Protocol\nRouting protocol introduces another\
    \ power reduction scheme for agriculture WSNs to minimize\nthe path between sensor\
    \ nodes and sink node, thereby the power consumption of the WSN is reduced.\n\
    Routing protocol can be performed via (i) sink mobility, (ii) multi-path routing,\
    \ (iii) cluster architecture,\nand (iv) routing metric.\nSink mobility was adopted\
    \ in previous research [99,100]. Mathur et al. [99] proposed a novel\nmechanism\
    \ that adopts unmanned aerial vehicles (UAV) to gather data from forest regions\
    \ instead\nof classical sensing from nodes deployed in WSN. The proposed method\
    \ enables the UAV to collect\ndata from WSN in harsh terrain and transmit it to\
    \ the base station situated far from the sensing area.\nTherefore, the multi-hop\
    \ transmission between cluster heads can be completely avoided, and the\ncommunication\
    \ range can be extended.\nMulti-path routing has also been suggested by other\
    \ scholars for agriculture WSNs [67,68,101].\nRecently, Nikolidakis et al. [67]\
    \ proposed an agricultural ﬁeld weather monitoring system based on\nthe ZigBee\
    \ wireless protocol. An advance energy-efﬁcient routing protocol was implemented\
    \ for WSN\nto automate irrigation management. The transmitter could modify its\
    \ power based on the distance\nbetween the sensor node and base station to save\
    \ energy. The results revealed that network lifetime\nincreased to 1825 min. Hedley\
    \ et al. [101] developed a WSN soil moisture mapping and monitoring\nmethod to\
    \ provide information for irrigation scheduling. To conserve power, the sensor\
    \ nodes relayed\ndata to the BS every 15 min through the greatest energy-efﬁcient\
    \ route.\nCluster head method is considered by Ndzi et al. [102] to extend the\
    \ ZigBee WSN lifetime for\nagricultural application.\nIn addition, the quality\
    \ of the crop yields is improved and their cost\nis minimized. The research presented\
    \ WSN coverage measurements in a mixed crop farmland.\nAn adaptive energy consumption\
    \ model for each sensor node was proposed and used to compute the\nenergy consumption\
    \ in the network. A deployment model with a cluster head and two antennas was\n\
    also proposed and simulated to alleviate short network lifetime due to the vegetation\
    \ attenuation of\nsignals. This network deployment model extended the lifetime\
    \ of the network by a factor of more than\n20 compared with a deployment where\
    \ cluster heads are not used. Nikolidakis et al. [103] proposed\na new routing\
    \ protocol for WSN that can reduce the power consumption of sensor nodes through\n\
    balanced clustering. This protocol was called “equalized cluster head election\
    \ routing protocol”\n(ECHERP). ECHERP was implemented in Java language for 500\
    \ homogeneous nodes distributed in a\n100 × 100 m2 land. The simulation results\
    \ showed that the proposed protocol outperforms existing\nprotocols in terms of\
    \ power consumption. A potential application of this protocol is PA.\nAnother\
    \ type of routing protocol is called routing metric. Chen et al. [104] used two\
    \ routing\nmetrics, namely, remained energy and expected transmission count, to\
    \ compute the optimal routing\npath to the sink node that ensures low power consumption.\
    \ “A scalable context-aware objective\nfunction (SCAOF)” is proposed by combining\
    \ robustness-aware, energy-aware, resource-aware, and\nreliability-aware contexts\
    \ that render to the compound routing metrics scheme. The experiment is\nconducted\
    \ in a garden based on a testbed, which includes a uIPv6 protocol stack and contiki\
    \ OS. The\nobtained results prove that SCAOF can convey the desired advantages\
    \ on network lifespan prolonging,\nas well as high efﬁciency and reliability in\
    \ different hardware testbeds and simulation scenarios.\nTable 5 shows the comparison\
    \ of power reduction technique based on routing protocol schemes for\nprevious\
    \ research in agricultural applications.\nSensors 2017, 17, 1781\n19 of 45\nTable\
    \ 5. Routing protocol schemes for previous research in agricultural applications.\n\
    Power Reduction Scheme\nReference\nExample\nWireless\nProtocol/Device\nPower Savings/\n\
    Battery Lifetime\nCommunication\nDistance/\nField Size\nSensors/Actuators\nApplication\n\
    Limitations\nEnergy-Efﬁcient\nrouting scheme\nSink\nmobility\n[99]/2016\nSimulation\n\
    High power\n672 m\nEnvironmental Sensors for\nmonitoring forest zones\nForest\
    \ area\nPacket losses leads to more\nenergy consumption\n[100]/2016\nIEEE 802.15.4\n\
    N/A\n40 m\nAgricultural environments sensors\nPrecision\nagriculture\nUsing predeﬁned\
    \ paths have many\ndisadvantages:\n-break of the WSN operation\n-the existence\
    \ of an obstacle leads to\nobstruct WSN operation\nMulti-path\nrouting\n[67]/2015\n\
    ZigBee\n1825 min\n150 m\nSoil humidity, soil temperature,\nand air speed/mechanical\
    \ and\nhydraulic system\nIrrigation\nsystem\nTEEN protocol consumes a lot of power\
    \ at\nlong communication distance\n[68]/2016\nZigBee\n(CC2530)\n30%\nLess than\
    \ 200 m\nShadow detection, temperature,\nand humidity/shadow tracking to\nsave\
    \ energy\nTrees in the\nagriculture ﬁeld\nSolar cell system is generally irregular\
    \ and\nextensively inﬂuenced by the change\nof weather\n[101]/2012\nCrossbow\n\
    Technology\n(based on IEEE\n802.15.4) and 3G\n4 weeks\n1000 m\nSoil moisture,\
    \ rain gauge, water\ncontent, soil suction, and soil\ntemperature/water pump\n\
    Irrigation\nsystem\nN/A\nCluster\narchitecture\n[102]/2014\nZigBee\n20 times traditional\n\
    without cluster heads\n180 m\nAir temperature, soil water\npotential , soil moisture,\n\
    and humidity\nCrop farming\nUnreliable communication beyond 80 m\n[103]/2013\n\
    Simulation\nN/A\n150 m\nArea of interested sensors\nAgriculture\nECHERP routing\
    \ protocol did not take\ninto consideration the time constraints\nand Quality\
    \ of Service (QoS)\n[105]/2012\nZigBee\n(CC2530)\nLow power\n50 m\nTemperature,\
    \ light, CO2\nconcentration, and humidity\nGreenhouse\nTime synchronization accuracy\n\
    Routing\nmetric\n[104]/2015\nIEEE 802.15.4\n(CC2520)\n28.4 days\n100 m2\nLight\
    \ intensity and air temperature\nPrecision\nagriculture\nShort battery life\n\
    Sensors 2017, 17, 1781\n20 of 45\nWith these power reduction techniques, we compared\
    \ the power saving or battery lifetime,\ncommunication distance, and limitations\
    \ of WSNs in different agricultural applications in the work of\nseveral scholars\
    \ (Tables 2–6). The tables show that most previous studies used ZigBee wireless\
    \ protocol\nfor different agricultural applications. The use of ZigBee supports\
    \ our assumption that this wireless\nprotocol is suitable for agricultural monitoring\
    \ systems as discussed in Section 2. A combination of two\nor more power reduction\
    \ schemes was also highlighted by several scholars [106–108] to further lower\n\
    the power consumption of the WSN. Table 6 shows the comparison of power reduction\
    \ technique\nbased on a combination of power reduction schemes for previous research\
    \ in agricultural applications.\nConsidering that sensor nodes are power-hungry\
    \ and battery-limited, one or more of the power\nreduction schemes can be integrated\
    \ with energy harvesting techniques to prolong the operation life\nof sensor nodes\
    \ signiﬁcantly. The classiﬁcation of energy harvesting techniques is explained\
    \ in the\nfollowing section.\nSensors 2017, 17, 1781\n21 of 45\nTable 6. The combination\
    \ of power reduction schemes for previous research in agricultural applications.\n\
    Power Reduction Scheme\nReference\nExample\nWireless\nProtocol/Device\nPower Savings/\n\
    Battery Lifetime\nCommunication\nDistance/\nField Size\nSensors/Actuators\nApplication\n\
    Limitations\nCombination\nschemes\nTPC and MAC and routing\nprotocols schemes\n\
    [106]/2011\nRF transceiver\n(CC1100)\n65%\nN/A\nCrop growth, carbon\ncycle, and\
    \ hydrologic\nﬂow/irrigation system\nPrecision\nagriculture\nFault management\
    \ detection and\nimproving are not considered in\nthe work\nEncoding and\nmodulation\
    \ schemes\n[107]/2011\nIEEE 802.15.4\n(CC2420) and RF\ntransceiver (CC1100)\n\
    53%\nN/A\nData generated by the\nsensors as ASCII text\nAgriculture\nLow data\
    \ rate\nCluster architecture with\nTDMA-based MAC protocol and\ndata aggregation\
    \ schemes\n[108]/2016\nIEEE 802.15.4\n(CC2420)\n3–5 times\ntraditional\n100 m\n\
    Farm\nenvironment sensors\nAgricultural\nenvironments\nThe number of clusters\
    \ based on\nLEACH does not converge 100 ×\n100 m2, which reduces the lifetime\n\
    of WSN network\nData acquisition, compression,\nand sampling schemes\n[109]/2014\n\
    C1110 RF module\n8 days\nN/A\nLeaf wetness, humidity,\ncamera, and temperature\n\
    Vineyard\nCommunication range is limited\ndue to omnidirectional antenna of\n\
    the RF module\nSensors 2017, 17, 1781\n22 of 45\n3.2. Agriculture-Based Energy-Harvesting\
    \ Techniques\nA major limitation of sensor nodes is their limited battery capacity.\
    \ Several energy-efﬁcient\nschemes have been introduced in previous research to\
    \ solve the power consumption problem of sensor\nnodes. An alternative method\
    \ that has been utilized to address the problem of limited node lifespan is\n\
    the use of energy-harvesting techniques. Numerous techniques have been developed\
    \ to allow sensor\nnodes to harvest different types of energy, such as solar,\
    \ wireless power transfer (WPT), mechanical\nvibration, kinetic, and wind energy,\
    \ from different environments [110] (Figure 2). Compared with\ntraditional sensor\
    \ nodes, rechargeable sensor nodes can work continuously for a long lifetime.\
    \ Ambient\nenergy can be converted to electrical energy and used directly to supply\
    \ the sensor nodes or can be\nstored and used later on. In agricultural applications,\
    \ energy harvesting can be used to prolong the\nlifetime of sensor nodes. Energy-harvesting\
    \ techniques for previous research works employed in\nprecision agriculture are\
    \ shown in Table 7. The said table lists the categories of energy-harvesting\n\
    techniques, types of wireless protocols, and output energy/power of energy-harvesting\
    \ techniques.\nIn addition, the form of agricultural applications, and limitations\
    \ of each article are also highlighted.\nEnergy-harvesting mechanisms can be implemented\
    \ with batteries for the sensor nodes. For\nexample, a sensor node using solar\
    \ energy to charge its batteries can work extensively during daytime\nwhen adequate\
    \ sunlight is available. Meanwhile, the sensor node can use its batteries through\
    \ power\nreduction techniques, such as sleep mode (i.e., duty cycle), at night\
    \ when sunlight is unavailable to save\nenergy. In addition, the sensor node can\
    \ enter restricted sleep periods (i.e., low duty cycle) and reduce\ntransmission\
    \ power when its batteries possess low residual energy [111]. Furthermore, adopting\
    \ a\nmaximum power point tracking system is a reliable battery charging technique\
    \ for long-term operation.\nThe charge–discharge cycle of the battery is minimized\
    \ [112].\n3.2.1. Solar Energy\nSolar energy based on photovoltaic system and methods\
    \ can be used in agricultural applications\nbased on WSNs [113]. Therefore, solar\
    \ cells provide a good solution [114] to ensure the survivability\nof the agriculture\
    \ monitoring system. Solar cell energy has been used by several studies to provide\n\
    long-term energy to sensor nodes in agriculture applications.\nGutiérrez et al.\
    \ [40] developed an irrigation system based on the ZigBee wireless protocol. The\n\
    system was developed to improve water usage for agricultural crops. Temperature\
    \ and soil moisture\nsensors in WSN were placed in the root of the plants to send\
    \ sensor information to a web application\nvia a gateway. The proposed algorithm\
    \ controls the water quantity based on threshold values of soil\nmoisture and\
    \ temperature that are programmed in a microcontroller-based gateway. The WSN\
    \ is\npowered by solar cell panels and rechargeable batteries. Water savings of\
    \ up to 90% were achieved\nrelative to the conventional irrigation method. Considering\
    \ that the system is cost effective and\nautonomous, it can be utilized in geographically\
    \ isolated regions where water sources are limited.\nZou et al. [68] improved\
    \ the battery lifetime of a WSN based on harvested energy (i.e., solar cell)\n\
    utilizing shadow detection. With this strategy, sensor nodes can accordingly modify\
    \ their scheduling\nto optimize their power production and remaining battery levels.\
    \ Furthermore, data transmission is\noptimized through routing and clustering\
    \ mechanisms. A Bayesian network was employed to provide\nwarning reports of bottlenecks\
    \ along the path. The system was deployed in real time based on the\nTexas Instruments\
    \ CC2530 platform that includes the ZigBee wireless protocol. The battery (lithium\n\
    type with a storage capacity of 2500 mAh) of the sensor node was charged from\
    \ the solar cell panel\nwhen the harvested power was adequate. The experimental\
    \ results showed that these techniques\nallow network activities to occur in a\
    \ continuous and effective manner.\nIn [115], a micro-irrigation system that relies\
    \ on a small solar-powered cell was developed. The\nenergy input, energy output,\
    \ greenhouse gas productions, and solar cell installation for rural areas\nwere\
    \ investigated with the proposed co-located system. The researchers compared their\
    \ system\nwith another commonly used method (i.e., aloe vera cultivation) in terms\
    \ of life cycle. The life cycle\nSensors 2017, 17, 1781\n23 of 45\nevaluation\
    \ showed that the proposed system is economical for several rural areas and may\
    \ provide\nopportunities for agriculture electriﬁcation and motivate economic\
    \ growth.\nRoblin [116] presented an irrigation system relying on a solar cell\
    \ for rural areas where sunlight is\noften available. The irrigation system includes\
    \ pumps working on a solar cell instead of an electricity\ngrid and/or a diesel\
    \ generator. The study showed that the irrigation system based on a solar cell\
    \ is\nbetter than systems that depend on other energy resources because the electricity\
    \ grid is unavailable at\nall times, and the operating cost of diesel pumps is\
    \ high and relies mainly on the diesel price. Although\nthe solar-powered system\
    \ was relatively expensive, it became a free source of energy after installation\n\
    in the rural area and proved to be a worthwhile investment in the long term. A\
    \ similar irrigation\nsystem was proposed in [117]. The system adopts photovoltaic\
    \ panels to power a water pump that\nconverts the continuous drift of water into\
    \ a drop drift to achieve increased water usage efﬁciency.\nKwon et al. [118]\
    \ suggested a novel prediction technique for energy harvesting with a solar\n\
    cell within three hours. Moreover, the packet transmissions of the sensor nodes\
    \ can be controlled\ndepending on the estimated energy. Packet transmissions and\
    \ energy harvesting are integrated to\nimprove the WSN performance. The integration\
    \ of these schemes enhances the prediction accuracy\nand improves the WSN throughput\
    \ and power consumption. The throughput of the sensor node can\nbe increased by\
    \ shortening the packet transmission period. By contrast, when the packet transmission\n\
    period increases, the power consumption of the sensor node decreases. The experimental\
    \ results show\nthat the proposed packet transmission scheme is superior to the\
    \ others in terms of data throughput\nand deadline miss rate. The proposed energy-harvesting\
    \ method is also predicted more precisely than\nothers by 6.92%.\nA study [119]\
    \ used a solar cell to provide energy to a WSN deployed in a greenhouse. The\n\
    humidity and temperature of the greenhouse were controlled through a management\
    \ and monitoring\nsystem, which was based on a low-power MSP430 (Texas Instruments,\
    \ Dallas, TX, USA) microcontroller\nand an ultra-low-power nRF24L01 transceiver\
    \ (Nordic Semiconductor, Oslo, Norway). The power\nconsumption of the WSN was\
    \ minimized as much as possible. In another study, a WSN-based ZigBee\n(CC2420\
    \ module) wireless transceiver and microcontroller (low-power ATmega128L) supplied\
    \ by\nthe solar cell as a battery charger were considered to monitor the humidity,\
    \ temperature, rain level,\nand leaf wetness of vineyards [120]. The WSN covered\
    \ 30 m between ZigBee units with a low power\nconsumption (35 and 38 mW in transmission\
    \ and reception modes, respectively).\n3.2.2. Wireless Power Transfer\nRecent\
    \ developments in wireless power transfer (WPT) are expected to increase the lifetime\n\
    of WSNs signiﬁcantly and make them continuously operational, given that WPT techniques\
    \ can\nbe utilized to transmit electromagnetic energy between transmitter and\
    \ receiver devices without\nany contact between the two. WPT is expected to overcome\
    \ the constraint of the supply of WSNs.\nConsequently, some researchers highlighted\
    \ the utilization of mobile node that can deliver power\nto deployed sensor nodes\
    \ such as [121,122].\nWPT technology poses a challenge to the energy\ncooperation\
    \ between neighboring nodes in WSNs. Therefore, in the future, sensor nodes could\n\
    harvest energy from the environment and transfer this energy to other nodes in\
    \ the network; in this\nmanner, a self-sustaining network can be achieved [123].\
    \ Accordingly, recent research has investigated\nmulti-hop energy transfer [124,125],\
    \ which paved the way for new energy cooperative schemes and\nWPT charging protocols.\n\
    WPT can be classiﬁed into three main subcategories:\n(i) electromagnetic (EM)\
    \ radiation,\n(ii) magnetic resonator coupling, and (iii) inductive coupling,\
    \ as shown in Figure 2. Wireless charging\nin WSNs can be performed via EM radiation\
    \ and magnetic resonant coupling. EM signals suffer from\nattenuation over distance,\
    \ and active radiation may pose a threat to the human body. Meanwhile,\nmagnetic\
    \ resonant coupling can address the power requirements of agriculture based on\
    \ WSNs because\nof its efﬁciency within a distance of several meters. Many studies\
    \ used WPT to charge sensor nodes\nfor different applications and ﬁelds. WPT-based\
    \ inductive coupling [121] has been used to charge\nSensors 2017, 17, 1781\n24\
    \ of 45\nthe battery of sensor nodes scattered in agriculture ﬁelds. The energy\
    \ is transferred from the source\ncoil (mounted on a UAV) to the receiver coil\
    \ (attached with sensor nodes). A 2.4 W transfer power\nis transferred to charge\
    \ a single sensor node. The results addressed a number of limitations and\nchallenges\
    \ related to the charging of sensor nodes via a UAV. In addition, the results\
    \ revealed that\nthe battery lifetime of the deployed sensors can be signiﬁcantly\
    \ extended through the UAV. A similar\napproach was adopted by Chen et al. [122]\
    \ to charge a WSN in an agricultural ﬁeld through the\nharvesting of electromagnetic\
    \ radiation.\n3.2.3. Air Flow Energy\nHarnessing wind energy is another energy-harvesting\
    \ technique that can be utilized to provide\npower to sensor nodes in agricultural\
    \ applications. An adaptive routing protocol, wind energy\nharvesting, and sleep\
    \ scheduling were considered in [126] to minimize the power consumption of the\n\
    ZigBee transceiver and extend the lifetime of the WSN.\n3.2.4. Vibration Energy\n\
    Vibration energy based on piezoelectric can be used to charge the battery of sensor\
    \ nodes to prolong\ntheir lifetime. Müller et al. [127] have been analyzed various\
    \ WSN protocols based on ZigBee (CC2420\nand CC2500) and CC1100 with respect to\
    \ their applicability in the agricultural setting. Furthermore,\na fully synchronous\
    \ protocol with a time-slot architecture for a WSN has been proposed for agricultural\n\
    machinery to achieve real-time capability, low latency, and deterministic behavior.\
    \ The objective of\ntheir application was to monitor the back door position and\
    \ ﬁlling level of a forage wagon using a\nZigBee (CC2420) RF transceiver. Clock\
    \ synchronization among all nodes is implemented to ensure\nstrict power on/sleep\
    \ times of each sensor node. Meanwhile, an energy-harvesting unit based on a\n\
    piezoelectric material has been designed; the unit provides an average power of\
    \ 200 µW to sensor\nnodes. In this case, the sensor node can transmit a data payload\
    \ of nine bytes in 40 ms.\n3.2.5. Water Flow Energy\nMulti-energy sources (water,\
    \ wind, and solar) platform is designed for precision agricultural\napplications\
    \ by Morais et al. [128]. The authors explored water ﬂow, wind speed and solar\
    \ radiation\nfeasible energy sources to encounter the requirements of ZigBee router\
    \ node in WSN. Thus, several\npowered solutions for WSN is presented. Design considerations\
    \ regarding water ﬂow energy, the water\nﬂow in the pipes of crops irrigation\
    \ system are employed to generate the energy for ZigBee router node.\nThis idea\
    \ can be applied in different agricultural applications such as greenhouses, aquaculture,\
    \ and\nhydroponic systems, where the water recirculation in pipes is continuous.\
    \ Like to bulky hydroelectric\ngeneration utilities, a water ﬂow in the pipes,\
    \ derived from the main water source, can be employed\nto run a turbine joined\
    \ to a small direct current (DC) generator. The experimental results revealed\n\
    that the three energy sources combined together can generate an energy of 58 mAh,\
    \ more than the\nrequirement of the ZigBee router node (39 mAh).\n3.2.6. Microbial\
    \ Fuel Cell Energy\nAnother type of energy harvesting technique is called microbial\
    \ fuel cell. This technique is extracted\nfrom energy neutral system. Sartori\
    \ and Brunelli [129] proposed microbial fuel cell to supply the\nunderground freshwater\
    \ system that used for monitoring the water level in the phreatic zone, artesian\n\
    wells, and tanks. The proposed system comprises a low-cost phreatimeter sensor,\
    \ a low-power\nmicrocontroller (i.e., MSP430FR5739), and a low-power LoRa wireless\
    \ protocol. However, the amount\nof microbial fuel cell energy extraction of 296\
    \ µW is not enough to supply LoRa wireless protocol and\nmicrocontroller directly\
    \ when they are in active mode. Therefore, a DC-to-DC boost is employed to\nraise\
    \ the small input voltages of 130 mV to 4.5 V.\nEvidently, most agricultural applications\
    \ prefer to use solar cells as battery chargers of WSNs\nbecause these cells are\
    \ easy to install, work efﬁciently when sunlight is available, and supply more\n\
    Sensors 2017, 17, 1781\n25 of 45\nenergy compared with other energy-harvesting\
    \ techniques as shown in Table 7. In addition, the table\nshows most of the previous\
    \ scholars adopted ZigBee wireless protocol. Clearly, employing ZigBee\nsupports\
    \ our study that this wireless protocol is more suitable for agricultural monitoring\
    \ systems.\nSolar panels can supply 100 mW/cm2, whereas radio frequency, thermal,\
    \ vibration, wind, microbial\nfuel cell, magnetic resonant coupling WPT, and water\
    \ ﬂow can supply 0.001, 0.06, 0.8, 1.0, 0.296, 14, and\n19 mWs, respectively [128–131].\
    \ For example, as shown in Figure 3 (Part A), if the power consumption\nof the\
    \ WSN components presented in [120] is 35 mW for ZigBee (Chipcon CC2420), 0.27\
    \ mW for\nthe temperature sensor, 3 mW for the humidity sensor, 0.27 mW for the\
    \ rain gauge sensor, 5 mW\nfor the leaf wetness sensor, and 24 mW for the ATmega128L\
    \ microcontroller [132], a single solar cell\n(2 × 2 cm2) panel can adequate supply\
    \ this WSN. However, when the power consumption of the WSN\nincreases, the dimension\
    \ of the solar cell panel also needs to be increased.\nSensors 2017, 17, 1781\n\
    26 of 45\nTable 7. Energy-harvesting techniques for previous research works used\
    \ in agricultural applications.\nEnergy Harvesting Techniques\nReference\nExample\n\
    Wireless\nProtocol/Device\nHarvesting\nEnergy/Power/\nPower Saving\nSensors/Actuators\n\
    Applications\nLimitations\nSolar\nEnergy\nSolar cell\n[40]/2014\nZigBee (XBee-Pro\
    \ S2)\nand GPRS\n240 mW\nTemperature, soil moisture/solenoid valve\nIrrigation\
    \ system\nThe solar cell can only charge three batteries\ntype AA 2000 mAh Ni-MH\n\
    [52]/2015\nRFD 900\n(902–928 MHz)\n1.75–3 W\nCH4 and CO2 Concentration/solenoid\
    \ valve\nand motor\nGreenhouse gases\nPower consumption of drone and solar cell\n\
    weight and size may restrict ﬂight endurance\n[68]/2016\nZigBee (CC2530)\n500\
    \ mW\nShadow detection, temperature, and\nhumidity/shadow tracking to save energy\n\
    Trees in the\nagriculture ﬁeld\nSolar cell system is generally irregular and\n\
    extensively inﬂuenced by the weather changes\n[72]/2015\nIEEE 802.15.4 and\nGPRS/3G\n\
    2 W\nWind speed, wind direction, temperature,\nhumidity, rain gauge, water and\
    \ pH level\nCrop ﬁelds\nThe battery supports the sensor node for seven\ndays only\n\
    [109]/2014\nC1110 RF module\n500 mW\nLeaf wetness, humidity, camera,\nand temperature\n\
    Vineyard\nCommunication range due to omnidirectional\nantenna of the RF module\n\
    [119]/2010\nnRF24L01\nN/A\nTemperature, pressure, humidity, vibration,\nand ﬂow/irrigation\
    \ system\nGreenhouse\nThe communication range (100 m) becomes\nunstable when there\
    \ are other\ncommunications in the same area or when the\npeople moving in the\
    \ communication path\n[120]/2012\nIEEE 802.15.4\n(CC2420)\n1 W\nTemperature, leaf\
    \ wetness, rain gauge, and\nhumidity/condensation or inﬁltration system\nVineyard\n\
    Solar energy changes with time\n[133]/2015\nRFD 900\n(902–928 MHz)\n59.14 Wh\n\
    CH4 and CO2 Concentration/gas chamber\nand olenoid valve\nGreenhouse\nThe maximum\
    \ area for the solar cell panels is\nrestricted by the UAV wings size\n[134]/2012\n\
    ZigBee (Mica2\nmotes)/GPRS\n20 W\nAir humidity, air temperature, soil moisture,\n\
    and soil temperature/irrigation system\nAgricultural\nenvironments\nSingle antenna\
    \ is not suitable for both\npoint-to-point links and broadcast\n[135]/2015\nWiFi\
    \ (IEEE 802.11a)\n180 mW (sunny\narea), 24 mw\n(shady area)\nTemperature and humidity/shadow\
    \ tracking\nto save energy\nAgricultural\nenvironments\nThe intensity of solar\
    \ energy changes with\nweather conditions and shadow (depending\non height of\
    \ crops, time, and orbit of the sun)\n[136]/2010\nIEEE 802.15.4\n2 W\nTemperature,\
    \ light, humidity, and wind speed\nAgricultural and\nforest ecology\nDue to dense\
    \ forests, the solar cell can not\nsupply the sensor nodes more than two hours\n\
    Sensors 2017, 17, 1781\n27 of 45\nTable 7. Cont.\nEnergy Harvesting Techniques\n\
    Reference\nExample\nWireless\nProtocol/Device\nHarvesting\nEnergy/Power/\nPower\
    \ Saving\nSensors/Actuators\nApplications\nLimitations\nWPT\nInductive coupling\n\
    [121]/2016\nZigbee\n2.4 W\nVibration, pressure soil moisture,\nand temperature\n\
    Agriculture ﬁelds\nStrong coupled magnetic resonance\nare required\nMagnetic\n\
    resonant coupling\n[137]/2015\nN/A\n1315 J\nAgricultural environments sensors/water\n\
    processing system\nAgriculture areas\nExhausting the UAV battery\nElectromagnetic\n\
    wave\n[122]/2016\nZigbee\nN/A\nTemperature, Strain, humidity,\nand displacement\n\
    Agriculture ﬁelds\nHarvested energy is inadequate to replenish\nan ad hoc network\
    \ with multi-hop\nAir Flow\nEnergy\nWind turbine\n[126]/2014\nZigbee\n70–100 mW\n\
    Ambient temperature, rain fall, and soil\nmoisture/irrigation system\nVineyard\n\
    Wind power is inefﬁcient when the wind\nintensity is not constant and irregular\n\
    Vibration\nEnergy\nPiezoelectric\nconvertors\n[127]/2010\nZigBee (CC2420 and\n\
    CC2500) and CC1100\n200 µW\nAmbient vibration sensor\nAgricultural\nmachinery\n\
    Transmission errors due to Interferences from\nsimilar neighboring WSN and\nthird-party\
    \ system\n[138]/2016\nIEEE 802.15.4\n(CC2500)\n14%\nMEMS inertial\nAgricultural\n\
    machinery\nN/A\n[139]/2011\nIEEE 802.15.4\n724 µW@2.0g\nVibration sensor\nAgricultural\n\
    machinery\nDuty-cycle of the end device must be modiﬁed\naccording to the total\
    \ power collected by the\npiezoelectric convertor\nThermal\nEnergy\nThermoelectrical\n\
    elements\n[140]/2012\nZigBee (CC2530\nembeded in\nHaLOEWEn platform\nN/A\nTemperature\
    \ and soil moisture/irrigation\ncontrol system\nPrecision\nirrigation\nHarvested\
    \ energy is comparatively low based\non thermoelectric element\nWater Flow Energy\n\
    [128]/2008\nZigBee\n16–19 mW\nSoil moisture, air temperature, relative\nhumidity,\
    \ soil temperature, and solar\nradiation/irrigation control system\nPrecision\n\
    Agriculture\nThe amount of energy harvested is not enough\nalone to supply the\
    \ ZigBee router node\nMicrobial Fuel Cell Energy\n[129]/2016\nLoRa\n296 µW\nCapacitive\
    \ phreatimeter/irrigation system\nPrecision\nagriculture\nThe amount of microbial\
    \ fuel cell power is not\nenough to power the LoRa wireless protocol\nand microcontroller\
    \ directly\nSensors 2017, 17, 1781\n28 of 45\nSensors 2017, 17, x FOR PEER REVIEW\
    \  \n28 of 45 \n \nFarm field\nMicrocontroller\nZigBee \ntransceiver\nS1 S2 S3\
    \ S4\nBattery\nDC/DC\nSolar cell panels\nhumidity\nTemperature\nRain gauge\nLeaf\
    \ wetness\nW\nL\n-Data processing\n-Data storage\n(remote location)\nCloud\nUSB\
    \ cable\nAgricultural \ninformation\nMicrocontroller\nA\nC\nGateway \nSensor node\n\
    ZigBee \ntransceiver\nZigBee \ntransceiver\nSink node\nWiFi/GPRS\nWiFi/GPRS\n\
    Web application\nMicrocontroller\nZigBee \ntransceiver\nActuator\nActuator node\n\
    B\n \nFigure 3. Example of farm field-based Internet of Things (IoT) and provided\
    \ by a solar cell battery \ncharger: (a) Agriculture sensor node with related\
    \ sensor and solar cell, (b) Sink and actuator nodes, \nand (c) Gateway node and\
    \ cloud computing. \n4. Agriculture Requirements for IoT \nThe IoT represents\
    \ the visibility of a group of systems, technologies, platforms, and design \n\
    principles for joining things, depending on the physical surroundings, through\
    \ the use of the Internet. \nPA is an application that can employ the benefits\
    \ of IoT to increase production efficiency, improve \nthe quality of yields, reduce\
    \ the negative ecological impact, prevent the prevalence of plant-eating \npests\
    \ or plant diseases, alert farmers about farm fires [141], and increase the profitability\
    \ of several \nagricultural production schemes. Agriculture involves farming,\
    \ planting, and animal rearing, and it \nhas grown under the scope of IoT recently\
    \ [5]. Tracking of animals, monitoring of farms, and \nirrigation processes are\
    \ the main domains of IoT for cultivation [142]. Furthermore, feeding, rearing,\
    \ \nmedication, and vaccination are essential applications of IoT in the agricultural\
    \ domain [143]. \nConsequently, several IoT modular architectures have been proposed\
    \ and implemented by scholars \nfor PA monitoring (as presented in Table 8). Real-time\
    \ ecological information can be remotely \ngathered from the agricultural surroundings\
    \ based on different sensors, which transmit the \ninformation to be processed\
    \ to determine problems, take required actions using actuators, or store \ndata.\
    \ \nSensors in WSN can be employed to gather information about environmental and\
    \ physical \nfeatures, whereas actuators are used to respond to the feedback to\
    \ control or to perform an action \nover the conditions (Figure 3, Part B). The\
    \ use of sensors in agricultural applications poses a number \nof requirements,\
    \ including gathering of soil, weather, and crop information; surveillance of\
    \ \nagricultural areas, water and fertilizer requirements of diverse pieces of\
    \ rough land, several crops on \na single piece of acreage, different requirements\
    \ of crops for unlike soil and weather circumstances, \nand eliminating of interactive\
    \ solutions and relying on proactive solutions. All these requirements \nare applied\
    \ and processed in parallel. Therefore, different sensors and actuators must be\
    \ used to \nhandle this information and respond to different conditions. Processed\
    \ information can be utilized \nto make a decision instead of raw data of the\
    \ sensor [132]. This information can be transmuted to the \ncloud computing via\
    \ gateway for data processing and data storage, as shown in Figure 3 (Part C).\
    \ \nReference [144] proposed a modular architecture for a wireless sensor node\
    \ implemented for PA \napplications. The sensors employed in this modular were\
    \ soil moisture, temperature, humidity, and \nwind direction and speed sensors\
    \ to monitor the agricultural environments. “Adafruit Pro Trinket” \nplatform\
    \ was selected for the data processing, and nRF wireless protocol was used as\
    \ a transceiver \nto transfer sensor data to the gateway (i.e., Intel Edison to\
    \ reduce the power consumption). The \ngateway was in charge of collected information\
    \ from different sensors and passed the information to \nFigure 3. Example of\
    \ farm ﬁeld-based Internet of Things (IoT) and provided by a solar cell battery\n\
    charger: (a) Agriculture sensor node with related sensor and solar cell, (b) Sink\
    \ and actuator nodes,\nand (c) Gateway node and cloud computing.\n4. Agriculture\
    \ Requirements for IoT\nThe IoT represents the visibility of a group of systems,\
    \ technologies, platforms, and design\nprinciples for joining things, depending\
    \ on the physical surroundings, through the use of the Internet.\nPA is an application\
    \ that can employ the beneﬁts of IoT to increase production efﬁciency, improve\
    \ the\nquality of yields, reduce the negative ecological impact, prevent the prevalence\
    \ of plant-eating pests or\nplant diseases, alert farmers about farm ﬁres [141],\
    \ and increase the proﬁtability of several agricultural\nproduction schemes. Agriculture\
    \ involves farming, planting, and animal rearing, and it has grown\nunder the\
    \ scope of IoT recently [5]. Tracking of animals, monitoring of farms, and irrigation\
    \ processes\nare the main domains of IoT for cultivation [142]. Furthermore, feeding,\
    \ rearing, medication, and\nvaccination are essential applications of IoT in the\
    \ agricultural domain [143]. Consequently, several\nIoT modular architectures\
    \ have been proposed and implemented by scholars for PA monitoring (as\npresented\
    \ in Table 8). Real-time ecological information can be remotely gathered from\
    \ the agricultural\nsurroundings based on different sensors, which transmit the\
    \ information to be processed to determine\nproblems, take required actions using\
    \ actuators, or store data.\nSensors in WSN can be employed to gather information\
    \ about environmental and physical\nfeatures, whereas actuators are used to respond\
    \ to the feedback to control or to perform an action over\nthe conditions (Figure\
    \ 3, Part B). The use of sensors in agricultural applications poses a number of\n\
    requirements, including gathering of soil, weather, and crop information; surveillance\
    \ of agricultural\nareas, water and fertilizer requirements of diverse pieces\
    \ of rough land, several crops on a single\npiece of acreage, different requirements\
    \ of crops for unlike soil and weather circumstances, and\neliminating of interactive\
    \ solutions and relying on proactive solutions. All these requirements are\napplied\
    \ and processed in parallel. Therefore, different sensors and actuators must be\
    \ used to handle\nthis information and respond to different conditions. Processed\
    \ information can be utilized to make\na decision instead of raw data of the sensor\
    \ [132]. This information can be transmuted to the cloud\ncomputing via gateway\
    \ for data processing and data storage, as shown in Figure 3 (Part C).\nReference\
    \ [144] proposed a modular architecture for a wireless sensor node implemented\
    \ for PA\napplications. The sensors employed in this modular were soil moisture,\
    \ temperature, humidity, and\nwind direction and speed sensors to monitor the\
    \ agricultural environments. “Adafruit Pro Trinket”\nplatform was selected for\
    \ the data processing, and nRF wireless protocol was used as a transceiver to\n\
    transfer sensor data to the gateway (i.e., Intel Edison to reduce the power consumption).\
    \ The gateway\nSensors 2017, 17, 1781\n29 of 45\nwas in charge of collected information\
    \ from different sensors and passed the information to the cloud\nserver. The\
    \ proposed system resulted in improved crop quality and minimized negative ecological\n\
    effect. In [145], the usage of water in smart irrigation systems was controlled\
    \ based on developed IoT\nplatforms. A cloud agriculture ﬁeld-monitoring scheme\
    \ was designed and implemented to enable\nthe farmer to monitor the soil condition.\
    \ Soil moisture and weather temperature were monitored to\nautomate the irrigation\
    \ system in farm while minimizing water consumption, which led to reduced\ncost\
    \ and maintained environmental beneﬁts. The proposed water irrigation system included\
    \ three\nmain parts: a WSN and actuator, a cloud platform, and user application.\
    \ The WSN and actuator part\nconsisted of sensor nodes for collecting the soil\
    \ moisture and weather temperature, an actuator node\nto control the irrigation\
    \ process, and a sink node that could pass all farm information to the cloud\n\
    platform. All sensor, sink, and actuator nodes adopted low-power ZigBee wireless\
    \ protocol.\nWSN and 3G network-based agriculture IoT was considered in [146]\
    \ to monitor the air\ntemperature, air humidity, and soil moisture. The entire\
    \ system consisted of sensor nodes, actuators\nsink nodes, server, gateway, and\
    \ the mobile phone device of the farmer. The collected information by\nthe sensor\
    \ nodes was sent to the server via gateway and Internet network. The gateway connected\
    \ the\nWSN with the Internet to relay the command control among the sensor nodes,\
    \ the phone of the farmer,\nthe actuators, and the server. However, in this system,\
    \ the data transmission over the 3G network\nmust ensure real-time communications\
    \ to support the agricultural WSN.\nIoT-based agriculture applications changed\
    \ classical agricultural surveillance approaches by\nspeedily providing quantitative\
    \ data with signiﬁcant temporal and spatial resolution. Several IoT\nplatforms\
    \ have recently been available in the market. For instance, in agricultural applications,\n\
    SmartFarmNet [147] platforms can be used to provide more than 30 packages for\
    \ good commercial\nproducts, such as Libelium [45], and experimental, such as\
    \ Motes [148] and Arduino [149] sensor\nplatforms. Other examples of agricultural\
    \ applications based on IoT are provided in Table 8. The table\npresents a comparative\
    \ analysis of several scholars in terms of sensors, actuators, IoT devices, and\
    \ IoT\nplatforms that can be used to support agricultural applications.\nSensors\
    \ 2017, 17, 1781\n30 of 45\nTable 8. Sensors, actuators, and platforms used in\
    \ agricultural applications based on IoT.\nReference\nExample\nSensors/Actuators\n\
    IoT End Device\nWireless Protocol\nIoT Platform/Device\nIoT Application Layer\n\
    [8]/2016\nSoil temperature, Soil moisture, air temperature, air humidity and\n\
    light intensity/alert messages\nLoRa\nLoRaWAN\nUser interface, remote monitoring,\
    \ and email\n[42]/2015\nSoil moisture, temperature, pressure, and water electrical\n\
    conductivity and temperature\nZigBee\nGSM/GPRS\nWeb application (HTML5, PHP, and\
    \ Javascript)\n[95]/2017\nAir temperature, soil moisture, air humidity, and light\
    \ intensity\nWiFi (ESP8266)\nWiFi\nWeb services\n[143]/2016\nCamera to monitor\
    \ the rice leaf disease\nSensor networks\nWisekar and cloud Computing\nWeb application\
    \ and user-deﬁned\n[144]/2017\nTemperature, humidity, soil moisture, and wind\
    \ direction and speed\nnRF wireless\nprotocol\nIntel Edison and\ncloud computing\n\
    User interface and ustom server\n[145]/2015\nTemperature and soil moisture/electrovalve\n\
    eZ430-RF2500\n(IEEE802.15.4/\nZigBee-based CC2500)\nWiFi 802.11 or GPRS through\n\
    http and Cloud computing\nWeb applications\n[147]/2016\nTemperature and soil moisture/irrigation\
    \ system\nLibelium\nWaspMotes, Remote,\nNetatmo, etc.\nSmartFarmNet and\nCloud\
    \ computing\nServer application, user interface, and\ndo-it-yourself visualization\n\
    [150]/2015\nTemperature, humidity, light, pressure, camera, CO2, and wind\ndirection\
    \ and speed/air ﬂow, sprinkler, and sunlight secreen\nZigBee\nEthernet shield\
    \ and GPRS\nUser applications and server applications\n[151]/2015\nAmbient temperature,\
    \ soil moisture, pH value, and humidity/valves\nand pumps\nZigBee (XBee)\nEthernet/WiFi/GSM\n\
    User applications\n[152]/2015\nAir temperature, wind speed/direction, air humidity,\
    \ air pressure,\nnet radiation, sunshine duration, and precipitation/irrigation\
    \ system\nIEEE 802.11 or\nBluetooth\nGPRS\nUser applications (desktop client,\
    \ web client,\nand mobile client) and web processing service\n[153]/2015\nPesticide\
    \ concentration sensor\nHypogynous\ncomputer\nEpigynous computer\nHTML ﬁles, Webpage,\
    \ and Smartphone\n[154]/2016\nAir temperature, relative humidity, solar radiation,\
    \ precipitation,\nwater, and nutrients/irrigation system\nIEEE\n802.15.4/ZigBee\n\
    FIWARE platform and cloud\ncomputing\nWeb services, data analysis, and database\n\
    [155]/2016\nTemperature, Luminosity, PH, moisture, EC/lamps, electro-valves,\n\
    and pumps\nIEEE\n802.15.4/ZigBee\nCloud computing\nWeb services, data analysis,\
    \ database, and\nHMI interfaces\n[156]/2016\nTemperature, light intensity CO2\
    \ concentration, and humidity\nZigBee (CC2530)\nGPRS (SIM300 module)\nUser application\n\
    [157]/2016\nSoil moisture/water pumps, fan, and mist\nZigBee (XBee)\nWiFi and\
    \ GSM/GPRS\nGraphical user interface\n[158]/2016\nAir temperature, wind speed\
    \ and direction, leaf wetness, soil\nmoisture, air humidity, rain volume/fertilizers\
    \ or spraying chemicals\nand watering system\nnRF24L01\nIEEE 802.11b/g/n (WiFi)\
    \ and\nCloud computing\nData visualization, data storage, data analysis,\nand\
    \ application program interface\nSensors 2017, 17, 1781\n31 of 45\nTable 8. Cont.\n\
    Reference\nExample\nSensors/Actuators\nIoT End Device\nWireless Protocol\nIoT\
    \ Platform/Device\nIoT Application Layer\n[159]/2016\nWeb camera, ultrasonic ranging,\
    \ infrared heat sensor, and ultrasonic\nsound repeller\nWired connection\nto PC\n\
    PTC’s ThingWorx’s\nUser application, web services, and http and\nseveral Internet\
    \ protocols\n[160]/2016\nTemperature, humidity carbon dioxide, soil moisture light\
    \ intensity,\nand pH value\nBluetooth and\nmobile device\n4G and cloud computing\n\
    Intelligent management (neural network)\n[161]/2016\nUltrasonic, air humidity,\
    \ air temperature, LDR sensor, and soil\nmoisture/pumps, solenoid valve, fogger\
    \ system, lights, and peltier\nRFID tags\nGSM sim900a and WiFi\nSMS, e-mail, google\
    \ spreadsheet,\ne-commerce website\n[162]/2016\nAir temperature/fan, curtain,\
    \ and shutter\nZigBee\nGPRS\nWeb applications\n[163]/2016\nTemperature, soil moisture,\
    \ light, and humidity/water pump\nnRF24L01\nGPRS/GSM\nMicrosoft active server\
    \ pages and MYSQL\n[164]/2016\nRelative humidity, barometric pressure, temperature,\
    \ light intensity,\ncamera, and proximity sensing/buzzer, SMS alerts\nIEEE\n802.15.4/ZigBee\n\
    Wireless connection\nWeb application, Android application, and\ncloud storage\n\
    [165]/2016\nTemperature\nOff-the-shelf\nmesh WSN\nSmartMesh IP Manager\nServer\
    \ applications and database\n[166]/2016\nAir temperature, illumination intensity,\
    \ and relative humidity\nMica2 (CC1000)\n2G/3G and cloud computing\nUser applications\
    \ (display terminal, PC, PDA,\nremote monitoring device) and GUI\n[167]/2017\n\
    Temperature, illumination, camera, and\nhumidity/vaporization system\nZigBee\n\
    WiFi\nData mining, data inquery, and data storage\n[168]/2017\nLiquid level sensor/water\
    \ pump\nWired connection\nEthernet shield\nUser-deﬁned\n[169]/2017\nTemperature\
    \ and light\nIEEE 802.15.4\nIEEE 802.11g, 802.11a, and\nRFS 6000\nUser applications\
    \ and server applications\n[170]/2017\nTemperature, pH value, and Oxygen\nZigBee\n\
    GSM, WiFi, and\ncloud computing\nWeb services, desktop application, and\nmobile\
    \ applications\n[171]/2017\nRelative humidity\nLoRa/LoRaWAN\nGPRS/3G/4G and\n\
    cloud computing\nLiquid crystal display (LCD)\n[172]/2017\nRelative humidity,\
    \ temperature, air pressure, and luminosity\nWiFi\nIBM Watson IoT, IBM Bluemix\n\
    cloud service, and\ncloud computing\ndata storage, and data graphs and visualized\n\
    [173]/2017\nSoil moisture, salinity, and temperature\nWiFi/ZigBee/\nBluetooth\n\
    WiFi, cloud\nHTTP protocol and smartphone applications\n[174]/2017\nSoil moisture,\
    \ soil pH, and camera\nWiFi and drone\nFarmBeats (based Ethernet or\nWiFi) and\
    \ cloud computing\nWeb interface (data access, cross-farm\nanalytics, and long\
    \ term applications)\nSensors 2017, 17, 1781\n32 of 45\nThe major requirements\
    \ of PA domain such as sensors, microcontrollers, and wireless technologies\n\
    are highlighted and classiﬁed in Table 9. For better clariﬁcation, the sensors\
    \ are classiﬁed into three\nmain categories leaf wetness/plant, soil moisture,\
    \ and environment sensors [5,132]. These sensors can\nbe utilized in several potential\
    \ agriculture applications. In Table 9, the microcontroller/processor and\nwireless\
    \ protocols are also highlighted. Among the microcontrollers, the majority of\
    \ agriculture sensor\nnodes adopting ATmega128L because this microcontroller supports\
    \ data aggregation, decision making,\nstorage capability, ﬂash memory, low complexity,\
    \ and energy management through multi-levels of\npower down modes [132]. ZigBee\
    \ and LoRa wireless protocols/technologies are widely used in several\nagricultural\
    \ applications, as discussed previously in Section 2.\nIn precision agriculture,\
    \ to obtain high-quality products, the environmental parameters should be\ncontrolled\
    \ to provide optimal values. For example, the temperature rate that has a positive\
    \ effect on the\ngrowth of the pepper ﬁeld is between 20 and 25 ◦C. The temperature\
    \ in rainy, sunny, and nightly days\nshould be kept between 20 and 22 ◦C, between\
    \ 25 and 28 ◦C, and between 18 and 20 ◦C, respectively\nand the minimum value\
    \ should be not lower than 16–17 ◦C. Air humidity for pepper vegetables should\n\
    be kept between 60% and 70%. The high-temperature value combines with low humidity\
    \ value may\nbe caused a negative inﬂuence on the growth of the pepper. The maximum\
    \ humidity value in pepper\ngreenhouse should be not above 70%. Soil pH (i.e.,\
    \ soil acidity) is another factor that directly effects\non the pepper crops,\
    \ where it can measure the quantity of calcium in the soil. The soil for pepper\n\
    crops can be acid or alkaline depending on the weather conditions. It should be\
    \ acid for wet climate\nand alkaline for a dry climate. Soil with pH levels above\
    \ 7.0 is considered alkaline, while soil with\npH levels below 7.0 has acid nature.\
    \ Soil pH values must be controlled according to the type of the\nagricultural\
    \ yield. For pepper crop, the best values for pH gauge are between 6.5 and 5.5.\
    \ Therefore,\nthe humidity, temperature, and soil pH should be constantly supervised\
    \ in order to identify the right\ntime for draining and watering the agricultural\
    \ crops.\nSensors 2017, 17, 1781\n33 of 45\nTable 9. Types of sensors, microcontrollers,\
    \ and wireless protocols/technologies used in precision agriculture (PA).\nSensors\n\
    Microcontrollers\nWireless Protocols/Technologies\nSoil Related\nLeaf/Plant Related\n\
    Environment Related\n•\nHydra probe II soil sensor\n(www.stevenswater.com)\n•\n\
    MP406\n(www.ictinternational.com.au)\n•\nPogo portable soil sensor\n(www.stevenswater.com)\n\
    •\nECH2O EC-5\n(http://www.decagon.com)\n•\nECRN-50 low-REC\n(http://www.decagon.com)\n\
    •\nWET-2\n(http://www.dynamax.com)\n•\nEC-250\n(http://www.stevenswater.com)\n\
    •\nBetaTherm 100K6A1B\n(http://www.campbellsci.com)\n•\nWaspmote (http://www.libelium.\n\
    com/products/waspmote/)\n•\nVH-400\n(http://www.vegetronix.com)\n•\nTHERM200\n\
    (http://www.vegetronix.com)\n•\nTipping bucket rain gage\n(http://www.stevenswater.com)\n\
    •\nAquaTrak 5000\n(http://www.stevenswater.com)\n•\nECRN-100 high-REC rain Gauge\n\
    (http://www.decagon.com)\n•\n107-L temperature Sensor\n(BetaTherm 100K6A1B Thermistor)\n\
    (http://www.campbellsci.com)\n•\n237-L, leaf wetness sensor\n(http://www.campbellsci.com)\n\
    •\nLeaf wetness sensor\n(http://www.decagon.com)\n•\nLW100, leaf wetness sensor\n\
    (http://www.globalw.com)\n•\nTT4 multi-sensor thermocouple (www.\nictinternational.com.au/thermocouple.htm)\n\
    •\nSenseH2™ hydrogen sensor\n(http://www.ntmsensors.com)\n•\nLT-2 M (leaf temperature)\n\
    (http://www.solfranc.com)\n•\nTPS-2 portable photosynthesis\n(www.ppsystems.com/Literature/\n\
    EDSTPS2_System.pdf)\n•\nPTM-48A photosynthesis monitor\n(http://phyto-sensor.com/PTM-48A)\n\
    •\nCl-340 hand-held photosynthesis\n(http://www.solfranc.com)\n•\n107-L (BetaTherm\
    \ 100K6A1B thermistor)\n(https://www.campbellsci.com)\n•\nYSI 6025 chlorophyll\
    \ sensor\n(http://www.ysi.comysi_6025.pdf)\n•\nField scout CM1000TM (http:\n//www.specmeters.com/pdf/2950FS.pdf)\n\
    •\nMet station one (www.stevenswater.com)\n•\nCM-100 compact weather station\n\
    (http://www.stevenswater.com)\n•\nCS300-L Pyranometer\n(http://www.campbellsci.com)\n\
    •\nHMP45C (http://www.campbellsci.com)\n•\nSHT71\n(http://www.sensirion.com/humidity)\n\
    •\nLI-200 Pyranometer\n(http://www.stevenswater.com)\n•\nXFAM-115KPASR\n(http://www.pewatron.com)\n\
    •\nCl-340 (http://www.solfranc.com)\n•\nSHT75\n(http://www.sensirion.com/humidity)\n\
    •\nMet One Series 380 rain gauge\n(http://www.stevenswater.com)\n•\nWaspmote (http://www.libelium.com/\n\
    products/waspmote/)\n•\nWXT520 compact weather station\n(http://www.stevenswater.com)\n\
    •\nAll-In-One (AIO) Weather Sensor\n(http://www.climatronics.com)\n•\nRM Young\
    \ (model 5103)\n(http://www.stevenswater.com)\n•\nRG13/RG13H (http://www.vaisala.com)\n\
    •\nSHT11 (https://www.parallax.com)\n•\nATmega128L\n•\nMarvell PXA271\n•\nTIMSP430\n\
    •\nArduino UNO\n•\nTIMSP430\n•\nCortex M3 LPC 17xx\n•\nARM 920T\n•\nMSP430F2274\n\
    •\nMSP430\n•\nMSP430G2553\n•\nMSP430F149\n•\nPIC24FJ64GB004\n•\nAT89C52\n•\nPIC18F452\n\
    •\nPIC18F455\n•\nATmega2560\n•\nAT86RF230\n•\nATMega64L\n•\n8051\n•\nJN5148\n\
    •\nATmega1284P\n•\nARM9\n•\nATmega328\n•\nMSP430F1611\n•\nPIC16F877A\n•\nMSP430FR5739\n\
    •\nAT89S52\n•\nSTM 32/F4\n•\nATmega1281\n•\nATMEGA 16\n•\nPIC 18F452\n•\nZigBee/IEEE\
    \ 802.15.4\n•\nBluetooth (IEEE 802.15.1)\n•\nBluetooth low energy (BLE)\n(IEEE\
    \ 802.15.1)\n•\nWiFi (IEEE 802.11)\n•\nGPRS/3G/4G\n•\nLoRa (IEEE 802.15.4g)\n\
    •\nSigFox (IEEE 802.15.4g)\nSensors 2017, 17, 1781\n34 of 45\n5. Challenges and\
    \ Limitations\nThe development of WSNs prompted new research trends in the agricultural\
    \ domain. Micro\nelectromechanical system (MEMS) technologies allow for the manufacture\
    \ of cheap and small sensors.\nThe pervasive nature of the process, together with\
    \ tiny, self-regulating sensor nodes, cost-effective\nequipment, and scalability,\
    \ indicate that WSNs can be used for agriculture automation [5]. However,\nregarding\
    \ the distribution of WSNs to observe different agricultural climates, a number\
    \ of open\nchallenges and limitations remain. Several of these challenges and\
    \ limitations in existing agricultural\napplications based on WSNs are listed\
    \ below together with suggestions on how to address them.\n(1)\nPower consumption\
    \ and battery life:\nA WSN consists of three main components:\nsensors,\nmicrocontrollers,\
    \ and RF transceivers. Given that the battery of a sensor node provides limited\n\
    energy, ensuring that the components of the sensor node consume minimum power\
    \ is crucial.\nIn particular, reducing the power consumption of the RF transceiver,\
    \ which consumes more power\nthan the other components in a sensor node, would\
    \ alleviate this problem [67,127]. Moreover,\nthis issue can be addressed in two\
    \ steps. The ﬁrst is to propose an intelligent energy-efﬁcient\nalgorithm. The\
    \ second step can be performed by utilizing available energy-harvesting techniques,\n\
    such as solar cells, vibration, and WPT.\n(2)\nCommunication range: WSNs suffer\
    \ from the effect of harsh ecological conditions because of the\nwide range of\
    \ open agricultural surroundings [5]. The WSN protocol contains mechanisms to\n\
    resist the effect of data transmission failures in the network, which increase\
    \ due to ecological\neffects. In agricultural applications, most wireless sensor\
    \ technologies support a relatively short\ncommunication range. Therefore, many\
    \ sensor and router nodes need to be diffused in a WSN.\nIn the point-to-point\
    \ Zigbee network, the communication distance can reach 100 m in outdoor\nenvironments.\
    \ The ZigBee communication range can be extended by adopting multi-tire, ad-hoc,\n\
    decentralized, and mesh network topologies. Drones or UAV also can be used as\
    \ a mobile router\nnode to extend the communication range within a farm ﬁeld.\
    \ A drone could pass the collected\ndata from the sensor nodes to the master node\
    \ through multi-hop. However, using drones entails\nother challenges and limitations.\n\
    (3)\nPropagation losses:\nIn agricultural applications, WSNs must be able to work\
    \ in diverse\nsurroundings, such as ground, bare land, orchards, greenhouses,\
    \ farms, and complex topography;\nthey must also be able to operate in all climate\
    \ conditions. All these conditions inﬂuence the\nperformance of radio propagation.\
    \ Whether the topography is simple or complicated, the\ncommunication possibility\
    \ between the points in a WSN still suffers from serious challenges.\nThe signal\
    \ transmitted from the sensor nodes in agricultural applications need to pass\
    \ through a\nheavy crop canopy to arrive to at the receiver nodes, which cannot\
    \ ensure a sufﬁcient clearance\narea and will cause signal propagation absorption,\
    \ reﬂection, attenuation, and scattering. In\nthis case, the link quality is degraded,\
    \ especially when the signal spreads through dense crops.\nTherefore, when deploying\
    \ WSNs, communication link quality and temporal and spatial variables\nmust be\
    \ guaranteed. The communication performance of WSNs is related to the working\n\
    surroundings. Therefore, due to the limited resources and power budget of WSNs,\
    \ an accurate\nwireless channel path loss model must be adopted to reﬂect the\
    \ propagation features. This model\nis expected to demonstrate correct optimization\
    \ and network evaluation performance throughout\nthe deployment design process\
    \ to develop the energy efﬁciency of the nodes [15], improve the\ntarget detection\
    \ and localization applications [16], decrease the number of retransmission, and\n\
    ensure Quality of Service (QoS) of the network [175].\n(4)\nRouting: Different\
    \ problems can emerge due to packet collision and limited bandwidth, which\nare\
    \ introduced by channel propagation, and so on. Therefore, when a WSN is deployed\
    \ in a wide\narea in farm ﬁelds, multi-hop is required. Kim et al. [3] developed\
    \ an independent mobile robot\nplatform based on a mobility task for surveillance\
    \ to overcome channel interference.\nSensors 2017, 17, 1781\n35 of 45\n(5)\nLocalization\
    \ and tracking: Tracking and localization of a herd of cattle are considered smart\
    \ farm\napplications based on WSNs. For example, a WSN can be employed to track\
    \ and localize of dairy\ncows to enable herd management. ZigBee wireless protocol\
    \ is used to monitor animal locations\nand behaviors, such as walking and standing,\
    \ lying down, and grazing [16,18]. In this context,\nseveral considerations, such\
    \ as radio interference, animal situation, and mobility, changes in\nWSN topology,\
    \ penetration depth of the signal through the animal body, height of the collar,\
    \ and\naccess point antennas, need to be taken into account [176]. These considerations\
    \ pose challenges\nin the localization and tracking of the animals.\n(6)\nReliability:\
    \ Agricultural monitoring systems based on different environmental sensors can\
    \ also\nbe used to monitor pollution aside from climate conditions. Important\
    \ information on climate\nconditions is reported to related agencies and farmers\
    \ from a remote location for advance\ninvestigations. Dangerous information needs\
    \ to be dealt with immediately in an emergency,\nwhich means that data transmission\
    \ in WSNs should demonstrate high reliability [3].\n(7)\nScalability: In agricultural\
    \ applications, the construction of WSN-based fault-tolerant and\nrobust hierarchical\
    \ architectures requires large-scale deployment relative to single-level network\n\
    architectures.\nA hierarchical architecture can be scaled up for developing applications\
    \ by\nduplicating to several ﬁelds. In this context, to increase the number of\
    \ WSNs over a vast area,\nmultiple wireless router nodes are placed in an agricultural\
    \ ﬁeld to guarantee sustained operation.\n(8)\nCost: The total hardware and software\
    \ costs of sensor nodes are important. The design of sensor\nnodes for any agricultural\
    \ application level must involve a low cost while demonstrating a robust\nperformance;\
    \ moreover, the design needs to be available for use by poor country markets [5].\n\
    This challenge can be overcome by reducing software and hardware costs further.\n\
    (9)\nReal time: Most crops are vulnerable to climate conditions, such as humidity,\
    \ intensity of\nillumination, and temperature. This vulnerability is a burden\
    \ to farmers who monitor changes\nin climate conditions hourly and/or daily because\
    \ doing so is labor-intensive. Moreover, in\ngreenhouses, a ﬁre can occur and\
    \ lead to severe agricultural disasters. This evidence suggests\nthat the monitoring\
    \ of the ecological conditions of agricultural WSNs needs to be in real time.\n\
    Real-time monitoring will enhance yield production and plant growth and avoid\
    \ dangerous\ndisasters in farms [3].\n(10) Storage and recording of data: Large\
    \ amounts of data are recorded from agriculture observing\nsystems because several\
    \ WSNs in agricultural applications contain several sensors for crop\ngrowth analysis\
    \ and harvesting estimation. This condition requires the base station to monitor\n\
    changes in farm ﬁelds by analyzing patterns. The base station must thus be supported\
    \ by a high\nstorage capacity.\n(11) Security: Security and protection are important\
    \ issues in agricultural products. Protection\nfrom insects or attacks of rodents\
    \ in grain stores or ﬁelds is essential. Such a challenge must\nbe considered\
    \ to maintain the security level of agriculture. Protection and security can be\n\
    achieved based on real-time analysis and processing of agricultural information\
    \ without human\nintrusion [159].\n(12) Delay tolerance: Critical delay poses\
    \ a challenge to agricultural applications. Some agricultural\napplications can\
    \ be considered as time sensitive, such as those used in farm ﬁre detection,\n\
    detection of exposure of crops to pests, cow heat event detection during milking,\
    \ and exposure of\ncattle to heat for a certain period. Such information must\
    \ be transmitted as fast as possible if the\ncritical issue is to be handled.\
    \ In such a case, a tradeoff between energy consumption and data\ntimelines is\
    \ necessary. By contrast, some agricultural applications are delay tolerant (i.e.,\
    \ time\ninsensitive), such as protein content, milk fat [177], gathering data\
    \ from soil and grass monitoring.\nWith delay tolerant approach, the short range\
    \ low power wireless protocols can be used [178].\nWhere the information of the\
    \ agricultural ﬁeld can be collected and transferred to the master\nnode or to\
    \ a cloud computing node using “messengers” e.g., a mobile node (mobile robot\
    \ or\nSensors 2017, 17, 1781\n36 of 45\nUAV). Consequently, the cost [179] and\
    \ the complexity of the agriculture WSN will be reduced\nand the lifetime will\
    \ be increased.\n(13) Fault tolerance: Fault tolerance is a crucial feature of\
    \ WSNs for succeeding PA. Several faults may\noccur in PA based on the WSN system,\
    \ which are (i) communication failure, (ii) faulty sensor\nsetting, (iii) sensor\
    \ component faults producing incorrect value, and (iv) node failure because of\n\
    exhausted battery or any other cause. Gutiérrez et al. [40] introduced communication\
    \ failure and\nnode fault tolerance for an irrigation system. If any fault occurs,\
    \ the irrigation system tracks the\ndefault irrigation program. The node energy\
    \ depletion failure was minimized in [1,40,180] by\nadopting solar-cell-powered\
    \ nodes. Data aggregation and topology control schemes are probable\nto be fault\
    \ tolerant for deploying sensor nodes in a vast area.\n(14) Data management: The\
    \ data management in agriculture poses a challenge because the large\namount of\
    \ data that can be collected from several sensors spread in agricultural ﬁeld,\
    \ especially\nwhen the agricultural data are intended to be connected to the cloud.\
    \ Determination of the\n(i) data analysis method, (ii) data collection schemes,\
    \ (iii) sensor types, (iv) semantic sensor\nnetworking, (v) big data, and (vi)\
    \ complex event processing enables the designer to manage\nthese crucial aspects.\
    \ The integration of IoT and software-deﬁned network also introduces a\npromising\
    \ and new methodology in deployment, monitoring, and design of network services\n\
    and resources [181].\n(15) Heterogeneous sensors: Integration of wired and wireless\
    \ heterogeneous sensors into information\nplatforms to perform interoperability\
    \ pose challenges in PA. Chen et al. [152] proposed “web\nservice-enabled cyber-physical\
    \ infrastructure” to solve this issue. The proposed system was able\nto integrate,\
    \ process, acquire, and distribute surveillance data from different physical sensors\n\
    spread in the PA system over the Internet. The infrastructure was executed to\
    \ serve as an\narchitecture middleware between PA clients and heterogeneous sensors.\n\
    6. Conclusions\nA review of WSN-based agricultural applications was presented.\
    \ A comparison was conducted\namong different wireless technologies or protocols,\
    \ such as WiFi, Bluetooth, ZigBee, GPRS/3G/4G,\nLoRa, and SigFox. The comparison\
    \ results revealed that the ZigBee and LoRa wireless protocols are\nmore convenient\
    \ for agricultural applications than the others because of its low power consumption\n\
    and suitable communication range for ZigBee and long for LoRa. A classiﬁcation\
    \ of energy-efﬁcient\ntechniques or algorithms and energy-harvesting techniques\
    \ was also provided. Based on the presented\ntaxonomy, we show that signiﬁcant\
    \ types of energy-efﬁcient and energy-harvesting techniques\ncan be used in the\
    \ agriculture domain. Previous research was also investigated and compared\nto\
    \ explore the current problems in agricultural applications based on WSNs and\
    \ obtain optimum\nsolutions for maintaining system performance. Challenges and\
    \ limitations were introduced for\ndesign considerations in the future. The state-of-the-art\
    \ approaches of IoT in agricultural applications\nwere reviewed and compared to\
    \ explore various sensors, actuators, devices, IoT platforms, and\napplication\
    \ layers.\nAcknowledgments: The authors would like to thank Al-Raﬁdain University\
    \ College for their generosity in\nﬁnancial assistance.\nAuthor Contributions:\
    \ Haider Mahmood Jawad, Rosdiadee Nordin, and Sadik Kamel Gharghan classiﬁed and\n\
    compared the energy-efﬁcient and energy harvesting techniques for WSNs, and they\
    \ surveyed early research\non agriculture-based WSNs. Haider Mahmood Jawad and\
    \ Sadik Kamel Gharghan explored the challenges and\nlimitations of WSNs in the\
    \ agricultural domain. Aqeel Mahmood Jawad classiﬁed and compared various wireless\n\
    communication protocols and technologies. All authors wrote the paper.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nSensors 2017, 17,\
    \ 1781\n37 of 45\nReferences\n1.\nDíaz, S.E.; Pérez, J.C.; Mateos, A.C.; Marinescu,\
    \ M.-C.; Guerra, B.B. A novel methodology for the monitoring\nof the agricultural\
    \ production process based on wireless sensor networks. Comput. Electron. Agric.\
    \ 2011, 76,\n252–265. [CrossRef]\n2.\nJawhar, I.; Mohamed, N.; Al-Jaroodi, J.;\
    \ Zhang, S. A framework for using unmanned aerial vehicles for data\ncollection\
    \ in linear wireless sensor networks. J. Intell. Robot.Syst. 2014, 74, 437–453.\
    \ [CrossRef]\n3.\nKim, Y.-D.; Yang, Y.-M.; Kang, W.-S.; Kim, D.-K. On the design\
    \ of beacon based wireless sensor network for\nagricultural emergency monitoring\
    \ systems. Comput. Stand. Interfaces 2014, 36, 288–299. [CrossRef]\n4.\nValente,\
    \ J.; Sanz, D.; Barrientos, A.; Cerro, J.D.; Ribeiro, Á.; Rossi, C. An air-ground\
    \ wireless sensor network\nfor crop monitoring. Sensors 2011, 11, 6088–6108. [CrossRef]\n\
    5.\nOjha, T.; Misra, S.; Raghuwanshi, N.S. Wireless sensor networks for agriculture:\
    \ The state-of-the-art in\npractice and future challenges. Comput. Electron. Agric.\
    \ 2015, 118, 66–84. [CrossRef]\n6.\nTuna, G.; Gungor, V.C. Energy harvesting and\
    \ battery technologies for powering wireless sensor networks. In\nIndustrial Wireless\
    \ Sensor Networks; Kolavennu, S., Ed.; Woodhead Publishing: Sawston, UK, 2016;\
    \ pp. 25–38.\n7.\nTan, Y.K.; Panda, S.K. Review of energy harvesting technologies\
    \ for sustainable wireless sensor network. In\nSustainable Wireless Sensor Networks;\
    \ Seah, W., Ed.; InTech: Rijeka, Croatia, 2010; pp. 15–43.\n8.\nIlie-Ablachim,\
    \ D.; Pătru, G.C.; Florea, I.-M.; Rosner, D. Monitoring Device for Culture Substrate\
    \ Growth\nParameters for Precision Agriculture: Acronym: Monisen. In Proceedings\
    \ of the 15th RoEduNet Conference:\nNetworking in Education and Research, Bucharest,\
    \ Romania, 7–9 September 2016; pp. 1–7.\n9.\nAndreev, S.; Galinina, O.; Pyattaev,\
    \ A.; Gerasimenko, M.; Tirronen, T.; Torsner, J.; Sachs, J.; Dohler, M.;\nKoucheryavy,\
    \ Y. Understanding the IoT connectivity landscape: A contemporary M2M radio technology\n\
    roadmap. IEEE Commun. Mag. 2015, 53, 32–40. [CrossRef]\n10.\nRatasuk, R.; Vejlgaard,\
    \ B.; Mangalvedhe, N.; Ghosh, A. Nb-IoT system for M2M communication.\nIn Proceedings\
    \ of the IEEE Wireless Communications and Networking Conference, Doha, Qatar,\n\
    3–6 April 2016; pp. 1–5.\n11.\nLin, X.; Adhikary, A.; Wang, Y.-P.E. Random access\
    \ preamble design and detection for 3GPP narrowband IoT\nsystems. IEEE Wirel.\
    \ Commun. Lett. 2016, 5, 640–643. [CrossRef]\n12.\nCancela, J.; Fandiño, M.; Rey,\
    \ B.; Martínez, E. Automatic irrigation system based on dual crop coefﬁcient,\n\
    soil and plant water status for Vitis vinifera (cv Godello and cv Mencía). Agric.\
    \ Water Manag. 2015, 151, 52–63.\n[CrossRef]\n13.\nRani, M.U.; Kamalesh, S. Energy\
    \ efﬁcient fault tolerant topology scheme for precision agriculture using\nwireless\
    \ sensor network. In Proceedings of the International Conference on Advanced Communication\n\
    Control and Computing Technologies (ICACCCT), Ramanathapuram, India, 8–10 May\
    \ 2014; pp. 1208–1211.\n14.\nRao, Y.; Jiang, Z.-H.; Lazarovitch, N. Investigating\
    \ signal propagation and strength distribution characteristics\nof wireless sensor\
    \ networks in date palm orchards. Comput. Electron. Agric. 2016, 124, 107–120.\
    \ [CrossRef]\n15.\nRaheemah, A.; Sabri, N.; Salim, M.; Ehkan, P.; Ahmad, R.B.\
    \ New empirical path loss model for wireless\nsensor networks in mango greenhouses.\
    \ Comput. Electron. Agric. 2016, 127, 553–560. [CrossRef]\n16.\nHuircán, J.I.;\
    \ Muñoz, C.; Young, H.; Von Dossow, L.; Bustos, J.; Vivallo, G.; Toneatti, M.\
    \ Zigbee-based wireless\nsensor network localization for cattle monitoring in\
    \ grazing ﬁelds. Comput. Electron. Agric. 2010, 74, 258–264.\n[CrossRef]\n17.\n\
    Azaza, M.; Tanougast, C.; Fabrizio, E.; Mami, A. Smart greenhouse fuzzy logic\
    \ based control system enhanced\nwith wireless data monitoring. ISA Trans. 2016,\
    \ 61, 297–307. [CrossRef] [PubMed]\n18.\nNadimi, E.S.; Jørgensen, R.N.; Blanes-Vidal,\
    \ V.; Christensen, S. Monitoring and classifying animal behavior\nusing zigbee-based\
    \ mobile ad hoc wireless sensor networks and artiﬁcial neural networks. Comput.\
    \ Electron.\nAgric. 2012, 82, 44–54. [CrossRef]\n19.\nSabri, N.; Aljunid, S.A.;\
    \ Ahmad, R.; Malek, M.; Yahya, A.; Kamaruddin, R.; Salim, M. Smart prolong fuzzy\n\
    wireless sensor-actor network for agricultural application. J. Inf. Sci. Eng.\
    \ 2012, 28, 295–316.\n20.\nEdwards-Murphy, F.; Magno, M.; Whelan, P.M.; O’Halloran,\
    \ J.; Popovici, E.M. b+ WSN: Smart beehive with\npreliminary decision tree analysis\
    \ for agriculture and honey bee health monitoring. Comput. Electron. Agric.\n\
    2016, 124, 211–219. [CrossRef]\n21.\nSai, Z.; Fan, Y.; Yuliang, T.; Lei, X.; Yifong,\
    \ Z. Optimized algorithm of sensor node deployment for intelligent\nagricultural\
    \ monitoring. Comput. Electron. Agric. 2016, 127, 76–86. [CrossRef]\nSensors 2017,\
    \ 17, 1781\n38 of 45\n22.\nBenaissa, S.; Plets, D.; Tanghe, E.; Verloock, L.;\
    \ Martens, L.; Hoebeke, J.; Sonck, B.; Tuyttens, F.A.M.;\nVandaele, L.; Stevens,\
    \ N. Experimental characterisation of the off-body wireless channel at 2.4 GHz\
    \ for dairy\ncows in barns and pastures. Comput. Electron. Agric. 2016, 127, 593–605.\
    \ [CrossRef]\n23.\nFernández-Pacheco, D.; Ferrández-Villena, M.; Molina-Martínez,\
    \ J.; Ruiz-Canales, A. Performance indicators\nto assess the implementation of\
    \ automation in water user associations: A case study in southeast spain.\nAgric.\
    \ Water Manag. 2015, 151, 87–92. [CrossRef]\n24.\nSrbinovska, M.; Gavrovski, C.;\
    \ Dimcev, V.; Krkoleva, A.; Borozan, V. Environmental parameters monitoring\n\
    in precision agriculture using wireless sensor networks. J. Clean. Prod. 2015,\
    \ 88, 297–307. [CrossRef]\n25.\nAiello, G.; Giovino, I.; Vallone, M.; Catania,\
    \ P.; Argento, A. A decision support system based on multisensor\ndata fusion\
    \ for sustainable greenhouse management. J. Clean. Prod. 2017, in press. [CrossRef]\n\
    26.\nGray, J.; Banhazi, T.M.; Kist, A.A. Wireless data management system for environmental\
    \ monitoring in\nlivestock buildings. Inf. Process. Agric. 2017, 4, 1–17. [CrossRef]\n\
    27.\nKim, Y.; Evans, R.G.; Iversen, W.M. Remote sensing and control of an irrigation\
    \ system using a distributed\nwireless sensor network. IEEE Trans. Instrum. Meas.\
    \ 2008, 57, 1379–1387.\n28.\nKim, Y.; Evans, R. Software design for wireless sensor-based\
    \ site-speciﬁc irrigation. Comput. Electron. Agric.\n2009, 66, 159–165. [CrossRef]\n\
    29.\nGang, L.L.L. Design of greenhouse environment monitoring and controlling\
    \ system based on bluetooth\ntechnology. Trans. Chin. Soc. Agric. Mach. 2006,\
    \ 10, 97–100.\n30.\nHong, G.-Z.; Hsieh, C.-L. Application of integrated control\
    \ strategy and bluetooth for irrigating romaine\nlettuce in greenhouse. IFAC-PapersOnLine\
    \ 2016, 49, 381–386. [CrossRef]\n31.\nAndrew, D.B.; Alexander, W.L.; Aaron, A.;\
    \ James, V.K.; Dennis, R.B. Investigation of bluetooth\ncommunications for low-power\
    \ embedded sensor networks in agriculture. In Proceedings of the ASABE\nAnnual\
    \ International Meeting, Kansas City, MO, USA, 21–24 July 2013. [CrossRef]\n32.\n\
    Zhihong, M.; Yuhan, M.; Liang, G.; Chengliang, L. Smartphone-based visual measurement\
    \ and portable\ninstrumentation for crop seed phenotyping. IFAC-PapersOnLine 2016,\
    \ 49, 259–264. [CrossRef]\n33.\nHan, P.; Dong, D.; Zhao, X.; Jiao, L.; Lang, Y.\
    \ A smartphone-based soil color sensor: For soil type classiﬁcation.\nComput.\
    \ Electron. Agric. 2016, 123, 232–241. [CrossRef]\n34.\nBartlett, A.C.; Andales,\
    \ A.A.; Arabi, M.; Bauder, T.A. A smartphone app to extend use of a cloud-based\n\
    irrigation scheduling tool. Comput. Electron. Agric. 2015, 111, 127–130. [CrossRef]\n\
    35.\nVellidis, G.; Liakos, V.; Andreis, J.H.; Perry, C.D.; Porter, W.M.; Barnes,\
    \ E.M.; Morgan, K.T.; Fraisse, C.;\nMigliaccio, K.W. Development and assessment\
    \ of a smartphone application for irrigation scheduling in\ncotton. Comput. Electron.\
    \ Agric. 2016, 127, 249–259. [CrossRef]\n36.\nChung, S.-O.; Kang, S.-W.; Bae,\
    \ K.-S.; Ryu, M.-J.; Kim, Y.-J. The potential of remote monitoring and control\
    \ of\nprotected crop production environment using mobile phone under 3G and Wi-Fi\
    \ communication conditions.\nEng. Agric. Environ. Food 2015, 8, 251–256. [CrossRef]\n\
    37.\nMohapatra, A.G.; Lenka, S.K. Neural network pattern classiﬁcation and weather\
    \ dependent fuzzy logic\nmodel for irrigation control in WSN based precision agriculture.\
    \ Procedia Comput. Sci. 2016, 78, 499–506.\n[CrossRef]\n38.\nMendez, G.R.; Mukhopadhyay,\
    \ S.C. A Wi-Fi based smart wireless sensor network for an agricultural\nenvironment.\
    \ In Wireless Sensor Networks and Ecological Monitoring; Mukhopadhyay, S.C., Jiang,\
    \ J.-A., Eds.;\nSpringer: Berlin/Heidelberg, Germany, 2013; pp. 247–268.\n39.\n\
    Nesa Sudha, M.; Valarmathi, M.L.; Babu, A.S. Energy efﬁcient data transmission\
    \ in automatic irrigation\nsystem using wireless sensor networks. Comput. Electron.\
    \ Agric. 2011, 78, 215–221. [CrossRef]\n40.\nGutiérrez, J.; Villa-Medina, J.F.;\
    \ Nieto-Garibay, A.; Porta-Gándara, M.Á. Automated irrigation system using\na\
    \ wireless sensor network and gprs module. IEEE Trans. Instrum. Meas. 2014, 63,\
    \ 166–176. [CrossRef]\n41.\nZhang, R.; Chen, L.; Guo, J.; Meng, Z.; Xu, G. An\
    \ energy-efﬁcient wireless sensor network used for farmland\nsoil moisture monitoring.\
    \ In Proceedings of the IET Conference on Wireless Sensor Network, Beijing, China,\n\
    15–17 November 2010; pp. 2–6.\n42.\nNavarro-Hellín, H.; Torres-Sánchez, R.; Soto-Valles,\
    \ F.; Albaladejo-Pérez, C.; López-Riquelme, J.;\nDomingo-Miguel, R. A wireless\
    \ sensors architecture for efﬁcient irrigation water management. Agric.\nWater\
    \ Manag. 2015, 151, 64–74. [CrossRef]\n43.\nPitì, A.; Verticale, G.; Rottondi,\
    \ C.; Capone, A.; Lo Schiavo, L. The role of smart meters in enabling real-time\n\
    energy services for households: The Italian case. Energies 2017, 10, 199. [CrossRef]\n\
    Sensors 2017, 17, 1781\n39 of 45\n44.\nGil-Lebrero, S.; Quiles-Latorre, F.J.;\
    \ Ortiz-López, M.; Sánchez-Ruiz, V.; Gámiz-López, V.; Luna-Rodríguez, J.J.\nHoney\
    \ bee colonies remote monitoring system. Sensors 2016, 17, 55. [CrossRef] [PubMed]\n\
    45.\nLibelium Company. Available online: http://www.Libelium.Com/resources/case-studies/\
    \ (accessed on\n7 May 2017).\n46.\nLlaria, A.; Terrasson, G.; Arregui, H.; Hacala,\
    \ A. Geolocation and Monitoring Platform for Extensive Farming\nin Mountain Pastures.\
    \ In Proceedings of the IEEE International Conference on Industrial Technology\
    \ (ICIT),\nSeville, Spain, 17–19 March 2015; pp. 2420–2425.\n47.\nTerrasson, G.;\
    \ Llaria, A.; Marra, A.; Voaden, S. Accelerometer based solution for precision\
    \ livestock farming:\nGeolocation enhancement and animal activity identiﬁcation.\
    \ In IOP Conference Series: Materials Science and\nEngineering; IOP Publishing:\
    \ Bristol, UK, 2016.\n48.\nRault, T.; Bouabdallah, A.; Challal, Y. Energy efﬁciency\
    \ in wireless sensor networks: A top-down survey.\nComput. Netw. 2014, 67, 104–122.\
    \ [CrossRef]\n49.\nMatese, A.; Vaccari, F.P.; Tomasi, D.; Di Gennaro, S.F.; Primicerio,\
    \ J.; Sabatini, F.; Guidoni, S. Crossvit:\nEnhancing canopy monitoring management\
    \ practices in viticulture. Sensors 2013, 13, 7652–7667. [CrossRef]\n[PubMed]\n\
    50.\nAzpilicueta, L.; López-Iturri, P.; Aguirre, E.; Mateo, I.; Astrain, J.J.;\
    \ Villadangos, J.; Falcone, F. Analysis of radio\nwave propagation for ISM 2.4\
    \ GHz wireless sensor networks in inhomogeneous vegetation environments.\nSensors\
    \ 2014, 14, 23650–23672. [CrossRef] [PubMed]\n51.\nMarques, G.; Pitarma, R. An\
    \ indoor monitoring system for ambient assisted living based on internet of\n\
    things architecture. Int. J. Environ. Res. Public Health 2016, 13, 1152. [CrossRef]\
    \ [PubMed]\n52.\nMalaver, A.; Motta, N.; Corke, P.; Gonzalez, F. Development and\
    \ integration of a solar powered unmanned\naerial vehicle and a wireless sensor\
    \ network to monitor greenhouse gases. Sensors 2015, 15, 4072–4096.\n[CrossRef]\
    \ [PubMed]\n53.\nAquino-Santos, R.; González-Potes, A.; Edwards-Block, A.; Virgen-Ortiz,\
    \ R.A. Developing a new wireless\nsensor network platform and its application\
    \ in precision agriculture. Sensors 2011, 11, 1192–1211. [CrossRef]\n[PubMed]\n\
    54.\nAdelantado, F.; Vilajosana, X.; Tuset-Peiro, P.; Martinez, B.; Melia, J.\
    \ Understanding the limits of LoRaWAN.\narXiv preprint, 2016; arXiv:1607.08011.\n\
    55.\nKirichek, R.; Kulik, V. Long-Range Data Transmission on Flying Ubiquitous\
    \ Sensor Networks (FUSN)\nby Using Lpwan Protocols. In Proceedings of the International\
    \ Conference on Distributed Computer\nand Communication Networks, Moscow, Russia,\
    \ 21–25 November 2016; Springer: Cham, Switzerland;\npp. 442–453.\n56.\nAli, A.;\
    \ Shah, G.A.; Farooq, M.O.; Ghani, U. Technologies and challenges in developing\
    \ machine-to-machine\napplications: A survey. J. Netw. Comput. Appl. 2017, 83,\
    \ 124–139. [CrossRef]\n57.\nMartinez, J. Smart Viticulture Project in Spain Uses\
    \ Sensor Devices to Harvest Healthier More Abundant\nGrapes for Coveted Albario\
    \ Wines. Libelium World. Publish in: Agriculture, Case Studies, Meshlium, Plug\n\
    and Sense, Waspmote. Available online: http://www.libelium.com/sensors-mag-smart-viticulture-project-\n\
    in-spain-uses-sensor-devices-to-harvest-healthier-more-abundant-grapes-for-coveted-albarino-wines/\n\
    (accessed on 7 May 2017).\n58.\nMonitoring Green Areas in Spain to Develop a Smart\
    \ Garden System. Available online: http://libelium.\nCom/downloads/training/webinar_smart_agriculture_libelium_29_06_2017.Pdf\
    \ (accessed on 9 July 2017).\n59.\nHaase, J. Wireless network standards for building\
    \ automation. In Embedded Systems for Smart Appliances and\nEnergy Management;\
    \ Springer: New York, NY, USA, 2013; pp. 53–65.\n60.\nGeorgakakis, E.; Nikolidakis,\
    \ S.A.; Vergados, D.D.; Douligeris, C. An analysis of bluetooth, Zigbee\nand bluetooth\
    \ low energy and their use in Wbans. In Proceedings of the International Conference\
    \ on\nWireless Mobile Communication and Healthcare, Ayia Napa, Cyprus, 18–20 October\
    \ 2010; Springer:\nBerlin/Heidelberg, Germany; pp. 168–175.\n61.\nFernández-Garcia,\
    \ R.; Gil, I. An alternative wearable tracking system based on a low-power wide-area\n\
    network. Sensors 2017, 17, 592. [CrossRef] [PubMed]\n62.\nGharghan, S.K.; Nordin,\
    \ R.; Ismail, M. A survey on energy efﬁcient wireless sensor networks for bicycle\n\
    performance monitoring application. J. Sens. 2014, 2014, 16. [CrossRef]\n63.\n\
    Joh, H.; Ryoo, I. A hybrid WiFi P2P with bluetooth low energy for optimizing smart\
    \ device’s communication\nproperty. Peer Peer Netw. Appl. 2015, 8, 567–577. [CrossRef]\n\
    Sensors 2017, 17, 1781\n40 of 45\n64.\nFrank, R.; Bronzi, W.; Castignani, G.;\
    \ Engel, T. Bluetooth low energy: An alternative technology for VANET\napplications.\
    \ In Proceedings of the 11th IEEE Annual Conference on Wireless on-Demand Network\
    \ Systems\nand Services (WONS), Obergurgl, Austria, 2–4 April 2014; pp. 104–107.\n\
    65.\nZhou, H.; Guo, C.; Qin, J. Efﬁcient application of GPRS and CDMA networks\
    \ in SCADA system.\nIn Proceedings of the IEEE PES General Meeting, Providence,\
    \ RI, USA, 25–29 July 2010; pp. 1–6.\n66.\nGungor, V.C.; Sahin, D.; Kocak, T.;\
    \ Ergut, S.; Buccella, C.; Cecati, C.; Hancke, G.P. Smart grid technologies:\n\
    Communication technologies and standards. IEEE Trans. Ind. Inform. 2011, 7, 529–539.\
    \ [CrossRef]\n67.\nNikolidakis, S.A.; Kandris, D.; Vergados, D.D.; Douligeris,\
    \ C. Energy efﬁcient automated control of irrigation\nin agriculture by using\
    \ wireless sensor networks. Comput. Electron. Agric. 2015, 113, 154–163. [CrossRef]\n\
    68.\nZou, T.; Lin, S.; Feng, Q.; Chen, Y. Energy-efﬁcient control with harvesting\
    \ predictions for solar-powered\nwireless sensor networks. Sensors 2016, 16, 53.\
    \ [CrossRef] [PubMed]\n69.\nZhang, M.; Li, M.; Wang, W.; Liu, C.; Gao, H. Temporal\
    \ and spatial variability of soil moisture based on wsn.\nMath. Comput. Model.\
    \ 2013, 58, 826–833. [CrossRef]\n70.\nMillion, M.; Marco, Z.; Antoine, B.; Graham,\
    \ A.; Harry, G.; Timothy, C. Successful deployment of a wireless\nsensor network\
    \ for precision agriculture in Malawi. Int. J. Distrib. Sens. Netw. 2013, 2013,\
    \ 13.\n71.\nOuadjaout, A.; Lasla, N.; Bagaa, M.; Doudou, M.; Zizoua, C.; Kaﬁ,\
    \ M.A.; Derhab, A.; Djenouri, D.; Badache, N.\nDz50: Energy-efﬁcient wireless\
    \ sensor mote platform for low data rate applications. Procedia Comput. Sci.\n\
    2014, 37, 189–195. [CrossRef]\n72.\nNguyen, T.-D.; Thanh, T.T.; Nguyen, L.-L.;\
    \ Huynh, H.-T. On the design of energy efﬁcient environment\nmonitoring station\
    \ and data collection network based on ubiquitous wireless sensor networks. In\
    \ Proceedings\nof the IEEE RIVF International Conference on Computing & Communication\
    \ Technologies Research,\nInnovation, and Vision for the Future (RIVF), Can Tho,\
    \ Vietnam, 25–28 January 2015; pp. 163–168.\n73.\nSun, T.; Yan, X.J.; Yan, Y.\
    \ A chain-type wireless sensor network in greenhouse agriculture. J. Comput. 2013,\
    \ 8,\n2366–2373. [CrossRef]\n74.\nEl-Kader, S.M.A.; El-Basioni, B.M.M. Precision\
    \ farming solution in Egypt using the wireless sensor network\ntechnology. Egypt.\
    \ Inform. J. 2013, 14, 221–233. [CrossRef]\n75.\nLópez, J.A.; Garcia-Sanchez,\
    \ A.-J.; Soto, F.; Iborra, A.; Garcia-Sanchez, F.; Garcia-Haro, J. Design and\n\
    validation of a wireless sensor network architecture for precision horticulture\
    \ applications. Precis. Agric.\n2011, 12, 280–295. [CrossRef]\n76.\nLee, H.-C.;\
    \ Lee, J.-W.; Hwang, J.-H.; Yoe, H. A study on energy efﬁcient mac protocol of\
    \ wireless sensor\nnetwork for ubiquitous agriculture. In Proceedings of the International\
    \ Conference on Future Generation\nInformation Technology, Jeju Island, Korea,\
    \ 13–15 December 2010; pp. 642–650.\n77.\nAneeth, T.; Jayabarathi, R. Energy-efﬁcient\
    \ communication in wireless sensor network for precision farming.\nIn Artiﬁcial\
    \ Intelligence and Evolutionary Computations in Engineering Systems; Springer:\
    \ New Delhi, India,\n2016; pp. 417–427.\n78.\nMittal, A.; Chetan, K.; Jayaraman,\
    \ S.; Jagyasi, B.G.; Pande, A.; Balamuralidhar, P. mKRISHI wireless sensor\nnetwork\
    \ platform for precision agriculture. In Proceedings of the Sixth International\
    \ Conference on Sensing\nTechnology (ICST), Kolkata, India, 18–21 December 2012;\
    \ pp. 623–629.\n79.\nZhu, B.; Han, W.; Wang, Y.; Wang, N.; Chen, Y.; Guo, C. Development\
    \ and evaluation of a wireless sensor\nnetwork monitoring system in various agricultural\
    \ environments. J. Microw. Power Electromagn. Energy 2014,\n48, 170–183. [CrossRef]\n\
    80.\nMesin, L.; Aram, S.; Pasero, E. A neural data-driven algorithm for smart\
    \ sampling in wireless sensor\nnetworks. EURASIP J. Wirel. Commun. Netw. 2014,\
    \ 2014, 1–8. [CrossRef]\n81.\nWang, J.; Niu, X.; Zheng, L.; Zheng, C.; Wang, Y.\
    \ Wireless mid-infrared spectroscopy sensor network for\nautomatic carbon dioxide\
    \ fertilization in a greenhouse environment. Sensors 2016, 16, 1941. [CrossRef]\n\
    [PubMed]\n82.\nSahota, H.; Kumar, R.; Kamal, A.; Huang, J. An energy-efﬁcient\
    \ wireless sensor network for precision\nagriculture. In Proceedings of the IEEE\
    \ Symposium on Computers and Communications (ISCC), Riccione,\nItaly, 22–25 June\
    \ 2010; pp. 347–350.\n83.\nKamarudin, L.; Ahmad, R.; Ndzi, D.; Zakaria, A.; Ong,\
    \ B.; Kamarudin, K.; Harun, A.; Mamduh, S. Modeling\nand simulation of wsns for\
    \ agriculture applications using dynamic transmit power control algorithm.\nIn\
    \ Proceedings of the Third International Conference on Intelligent Systems, Modelling\
    \ and Simulation\n(ISMS), Kota Kinabalu, Malaysia, 8–10 February 2012; pp. 616–621.\n\
    Sensors 2017, 17, 1781\n41 of 45\n84.\nMansoor, N.; Islam, A.M.; Zareei, M.; Baharun,\
    \ S.; Wakabayashi, T.; Komaki, S. Cognitive radio ad-hoc\nnetwork architectures:\
    \ A survey. Wirel. Pers. Commun. 2015, 81, 1117–1142. [CrossRef]\n85.\nAbolarinwa,\
    \ J.; Latiff, N.M.A.; Syed, S.K. Energy-efﬁcient, learning-inspired channel decision\
    \ and access\ntechnique for cognitive radio-based wireless sensor networks. Int.\
    \ J. Multimed. Ubiquitous Eng. 2015, 10,\n11–24. [CrossRef]\n86.\nMasonta, M.;\
    \ Haddad, Y.; De Nardis, L.; Kliks, A.; Holland, O. Energy efﬁciency in future\
    \ wireless networks:\nCognitive radio standardization requirements. In Proceedings\
    \ of the IEEE 17th International Workshop\non Computer Aided Modeling and Design\
    \ of Communication Links and Networks (CAMAD), Barcelona,\nSpain, 17–19 September\
    \ 2012; pp. 31–35.\n87.\nSendra, S.; Lloret, J.; García, M.; Toledo, J.F. Power\
    \ saving and energy optimization techniques for wireless\nsensor neworks. J. Commun.\
    \ 2011, 6, 439–459. [CrossRef]\n88.\nAnane, R.; Raoof, K.; Bouallegue, R. Minimization\
    \ of wireless sensor network energy consumption through\noptimal modulation scheme\
    \ and channel coding strategy. J. Signal Process. Syst. 2016, 83, 65–81. [CrossRef]\n\
    89.\nSetiawan, M.A.; Shahnia, F.; Rajakaruna, S.; Ghosh, A. Zigbee-based communication\
    \ system for data transfer\nwithin future microgrids. IEEE Trans. Smart Grid 2015,\
    \ 6, 2343–2355. [CrossRef]\n90.\nGao, Q.; Zuo, Y.; Zhang, J.; Peng, X.-H. Improving\
    \ energy efﬁciency in a wireless sensor network by\ncombining cooperative MIMO\
    \ with data aggregation. IEEE Trans. Veh. Technol. 2010, 59, 3956–3965.\n[CrossRef]\n\
    91.\nTalele, A.; Patil, S.G.; Chopade, N. A survey on data routing and aggregation\
    \ techniques for wireless sensor\nnetworks. In Proceedings of the International\
    \ Conference on Pervasive Computing (ICPC), Pune, India,\n8–10 January 2015; pp.\
    \ 1–5.\n92.\nMusaazi, K.P.; Bulega, T.; Lubega, S.M. Energy efﬁcient data caching\
    \ in wireless sensor networks: A case of\nprecision agriculture. In Proceedings\
    \ of the International Conference on e-Infrastructure and e-Services for\nDeveloping\
    \ Countries, Kampala, Uganda, 24–25 November 2014; pp. 154–163.\n93.\nZheng, L.;\
    \ Li, M.; Wu, C.; Ye, H.; Ji, R.; Deng, X.; Che, Y.; Fu, C.; Guo, W. Development\
    \ of a smart mobile\nfarming service system. Math. Comput. Model. 2011, 54, 1194–1203.\
    \ [CrossRef]\n94.\nAnastasi, G.; Conti, M.; Di Francesco, M.; Passarella, A. Energy\
    \ conservation in wireless sensor networks:\nA survey. Ad Hoc Netw. 2009, 7, 537–568.\
    \ [CrossRef]\n95.\nLerdsuwan, P.; Phunchongharn, P. An energy-efﬁcient transmission\
    \ framework for IoT monitoring systems\nin precision agriculture. In Information\
    \ Science and Applications 2017: Icisa 2017; Kim, K., Joukov, N., Eds.;\nSpringer:\
    \ Macau, China, 2017; pp. 714–721.\n96.\nLi, J.; Shen, C. An energy conservative\
    \ wireless sensor networks approach for precision agriculture. Electronics\n2013,\
    \ 2, 387–399. [CrossRef]\n97.\nPattani, K.M.; Chauhan, P.J. Spin protocol for\
    \ wireless sensor network. Int. J. Adv. Res. Eng. Sci. Technol.\n2015, 2, 2394–2444.\n\
    98.\nDavis, T.W.; Liang, X.; Kuo, C.-M.; Liang, Y. Analysis of power characteristics\
    \ for sap ﬂow, soil moisture,\nand soil water potential sensors in wireless sensor\
    \ networking systems. IEEE Sens. J. 2012, 12, 1933–1945.\n[CrossRef]\n99.\nMathur,\
    \ P.; Nielsen, R.H.; Prasad, N.R.; Prasad, R. Data collection using miniature\
    \ aerial vehicles in wireless\nsensor networks. IET Wirel. Sens. Syst. 2016, 6,\
    \ 17–25. [CrossRef]\n100. Khan, T.F.; Kumar, D.S. Mobile collector aided energy\
    \ reduced (MCER) data collection in agricultural wireless\nsensor networks. In\
    \ Proceedings of the IEEE 6th International Conference on Advanced Computing (IACC),\n\
    Bhimavaram, India, 27–28 February 2016; pp. 629–633.\n101. Hedley, C.; Ekanayake,\
    \ J.; Roudier, P. Wireless soil moisture sensor networks for precision irrigation\n\
    scheduling. In Workshop Abstracts, Advanced Nutrient Management: Gains from the\
    \ Past-Goals for the Future;\nMassey University: Palmerston North, New Zealand,\
    \ 2012; p. 85.\n102. Ndzi, D.L.; Harun, A.; Ramli, F.M.; Kamarudin, M.L.; Zakaria,\
    \ A.; Shakaff, A.Y.M.; Jaafar, M.N.; Zhou, S.;\nFarook, R.S. Wireless sensor network\
    \ coverage measurement and planning in mixed crop farming. Comput.\nElectron.\
    \ Agric. 2014, 105, 83–94. [CrossRef]\n103. Nikolidakis, S.A.; Kandris, D.; Vergados,\
    \ D.D.; Douligeris, C. Energy efﬁcient routing in wireless sensor\nnetworks through\
    \ balanced clustering. Algorithms 2013, 6, 29–42. [CrossRef]\nSensors 2017, 17,\
    \ 1781\n42 of 45\n104. Chen, Y.; Chanet, J.-P.; Hou, K.-M.; Shi, H.; de Sousa,\
    \ G. A scalable context-aware objective function (SCAOF)\nof routing protocol\
    \ for agricultural low-power and lossy networks (RPAL). Sensors 2015, 15, 19507–19540.\n\
    [CrossRef] [PubMed]\n105. Song, Y.; Ma, J.; Zhang, X.; Feng, Y. Design of wireless\
    \ sensor network-based greenhouse environment\nmonitoring and automatic control\
    \ system. J. Netw. 2012, 7, 838–844. [CrossRef]\n106. Sahota, H.; Kumar, R.; Kamal,\
    \ A. A wireless sensor network for precision agriculture and its performance.\n\
    Wirel. Commun. Mob. Comput. 2011, 11, 1628–1645. [CrossRef]\n107. Sinha, K.; Sinha,\
    \ B.P.; Datta, D. An energy-efﬁcient communication scheme for wireless networks:\n\
    A redundant radix-based approach. IEEE Trans. Wirel. Commun. 2011, 10, 550–559.\
    \ [CrossRef]\n108. Kamarudin, L.M.; Ahmad, R.B.; Ndzi, D.L.; Zakaria, A.; Kamarudin,\
    \ K.; Ahmed, M.E.E.S. Simulation and\nanalysis of leach for wireless sensor networks\
    \ in agriculture. Int. J. Sens. Netw. 2016, 21, 16–26.\n109. De la Concepcion,\
    \ A.R.; Stefanelli, R.; Trinchero, D. A wireless sensor network platform optimized\
    \ for\nassisted sustainable agriculture. In Proceedings of the IEEE Global Humanitarian\
    \ Technology Conference\n(GHTC), San Jose, CA, USA, 10–13 October 2014; pp. 159–165.\n\
    110. Sudevalayam, S.; Kulkarni, P. Energy harvesting sensor nodes: Survey and\
    \ implications. IEEE Commun.\nSurv. Tutor. 2011, 13, 443–461. [CrossRef]\n111.\
    \ Nintanavongsa, P.; Naderi, M.Y.; Chowdhury, K.R. Medium access control protocol\
    \ design for sensors\npowered by wireless energy transfer. In Proceedings of the\
    \ IEEE INFOCOM, Turin, Italy, 14–19 April 2013;\npp. 150–154.\n112. Anisi, M.H.;\
    \ Abdul-Salaam, G.; Idris, M.Y.I.; Wahab, A.W.A.; Ahmedy, I. Energy harvesting\
    \ and battery\npower based routing in wireless sensor networks. Wirel. Netw. 2015.\
    \ [CrossRef]\n113. Akhtar, F.; Rehmani, M.H. Energy replenishment using renewable\
    \ and traditional energy resources for\nsustainable wireless sensor networks:\
    \ A review. Renew. Sustain. Energy Rev. 2015, 45, 769–784. [CrossRef]\n114. Zhang,\
    \ Z.; Wu, P.; Han, W.; Yu, X. Remote monitoring system for agricultural information\
    \ based on wireless\nsensor network. J. Chin. Inst. Eng. 2017, 40, 75–81. [CrossRef]\n\
    115. Ravi, S.; Macknick, J.; Lobell, D.; Field, C.; Ganesan, K.; Jain, R.; Elchinger,\
    \ M.; Stoltenberg, B. Colocation\nopportunities for large solar infrastructures\
    \ and agriculture in drylands. Appl. Energy 2016, 165, 383–392.\n[CrossRef]\n\
    116. Roblin, S. Solar-powered irrigation: A solution to water management in agriculture?\
    \ Renew. Energy Focus\n2016, 17, 205–206. [CrossRef]\n117. Kumar, M.; Reddy, K.;\
    \ Adake, R.; Rao, C. Solar powered micro-irrigation system for small holders of\
    \ dryland\nagriculture in India. Agric. Water Manag. 2015, 158, 112–119. [CrossRef]\n\
    118. Kwon, K.; Yang, J.; Yoo, Y. Adaptive control of the packet transmission period\
    \ with solar energy harvesting\nprediction in wireless sensor networks. Sensors\
    \ 2015, 15, 9741–9755. [CrossRef] [PubMed]\n119. Hou, J.; Gao, Y. Greenhouse wireless\
    \ sensor network monitoring system design based on solar energy.\nIn Proceedings\
    \ of the International Conference on Challenges in Environmental Science and Computer\n\
    Engineering (CESCE), Wuhan, China, 6–7 March 2010; pp. 475–479.\n120. Alippi,\
    \ C.; Boracchi, G.; Camplani, R.; Roveri, M. Wireless sensor networks for monitoring\
    \ vineyards. In\nMethodologies and Technologies for Networked Enterprises: Artdeco:\
    \ Adaptive Infrastructures for Decentralised\nOrganisations; Anastasi, G., Bellini,\
    \ E., Di Nitto, E., Ghezzi, C., Tanca, L., Zimeo, E., Eds.; Springer:\nBerlin/Heidelberg,\
    \ Germany, 2012; pp. 295–310.\n121. Mittleider, A.; Grifﬁn, B.; Detweiler, C.\
    \ Experimental analysis of a uav-based wireless power transfer\nlocalization system.\
    \ In Proceedings of the 14th International Symposium on Experimental Robotics,\
    \ Tokyo,\nJapan, 3–6 October 2016; pp. 357–371.\n122. Chen, S.; Shu, Y.; Yu, B.;\
    \ Liang, C.; Shi, Z.; Chen, J. Demo: Mobile wireless charging and sensing by drones.\n\
    In Proceedings of the 14th Annual International Conference on Mobile Systems,\
    \ Applications, and Services\nCompanion, Singapore, 25–30 June 2016.\n123. Gurakan,\
    \ B.; Ozel, O.; Yang, J.; Ulukus, S. Energy cooperation in energy harvesting communications.\n\
    IEEE Trans. Commun. 2013, 61, 4884–4898. [CrossRef]\n124. Kaushik, K.; Mishra,\
    \ D.; De, S.; Basagni, S.; Heinzelman, W.; Chowdhury, K.; Jana, S. Experimental\n\
    demonstration of multi-hop RF energy transfer. In Proceedings of the IEEE 24th\
    \ Annual International\nSymposium on Personal, Indoor, and Mobile Radio Communications\
    \ (PIMRC), London, UK, 8–11 September\n2013; pp. 538–542.\nSensors 2017, 17, 1781\n\
    43 of 45\n125. Xie, L.; Shi, Y.; Hou, Y.T.; Lou, A. Wireless power transfer and\
    \ applications to sensor networks.\nIEEE Wirel.Commun. 2013, 20, 140–145.\n126.\
    \ Nayak, A.; Prakash, G.; Rao, A. Harnessing wind energy to power sensor networks\
    \ for agriculture.\nIn Proceedings of the International Conference on Advances\
    \ in Energy Conversion Technologies (ICAECT),\nManipal, India, 23–25 January 2014;\
    \ pp. 221–226.\n127. Müller, G.; Rittenschober, T.; Springer, A. A wireless sensor\
    \ network using energy harvesting for agricultural\nmachinery. E & I Elektrotech.\
    \ Informationstech. 2010, 127, 39–46.\n128. Morais, R.; Matos, S.G.; Fernandes,\
    \ M.A.; Valente, A.L.; Soares, S.F.; Ferreira, P.; Reis, M. Sun, wind and\nwater\
    \ ﬂow as energy supply for small stationary data acquisition platforms. Comput.\
    \ Electron. Agric. 2008,\n64, 120–132. [CrossRef]\n129. Sartori, D.; Brunelli,\
    \ D. A smart sensor for precision agriculture powered by microbial fuel cells.\n\
    In Proceedings of the IEEE Sensors Applications Symposium (SAS), Catania, Italy,\
    \ 20–22 April 2016; pp. 1–6.\n130. Paradiso, J.A.; Starner, T. Energy scavenging\
    \ for mobile and wireless electronics. IEEE Pervasive Comput.\n2005, 4, 18–27.\
    \ [CrossRef]\n131. Seah, W.K.G.; Tan, Y.K.; Chan, A.T.S. Research in energy harvesting\
    \ wireless sensor networks and the\nchallenges ahead.\nIn Autonomous Sensor Networks:\
    \ Collective Sensing Strategies for Analytical Purposes;\nFilippini, D., Ed.;\
    \ Springer: Berlin/Heidelberg, Germany, 2013; pp. 73–93.\n132. Abbasi, A.Z.; Islam,\
    \ N.; Shaikh, Z.A. A review of wireless sensors and networks’ applications in\
    \ agriculture.\nComput. Stand. Interfaces 2014, 36, 263–270.\n133. Malaver Rojas,\
    \ J.A.; Gonzalez, L.F.; Motta, N.; Villa, T.F.; Etse, V.K.; Puig, E. Design and\
    \ ﬂight testing of an\nintegrated solar powered UAV and WSN for greenhouse gas\
    \ monitoring emissions in agricultural farms.\nIn Proceedings of the IEEE/RSJ\
    \ International Conference on Intelligent Robots and Systems, Hamburg,\nGermany,\
    \ 28 September–2 October 2015; pp. 1–6.\n134. Bencini, L.; Maddio, S.; Collodi,\
    \ G.; Di Palma, D.; Manes, G.; Manes, A. Development of wireless sensor\nnetworks\
    \ for agricultural monitoring. In Smart Sensing Technology for Agriculture and\
    \ Environmental Monitoring;\nSpringer: Berlin/Heidelberg, Germany, 2012; pp. 157–186.\n\
    135. Eto, M.; Katsuma, R.; Tamai, M.; Yasumoto, K. Efﬁcient coverage of agricultural\
    \ ﬁeld with mobile sensors by\npredicting solar power generation. In Proceedings\
    \ of the IEEE 29th International Conference on Advanced\nInformation Networking\
    \ and Applications (AINA), Gwangiu, Korea, 24–27 March 2015; pp. 62–69.\n136.\
    \ Burgess, S.S.; Kranz, M.L.; Turner, N.E.; Cardell-Oliver, R.; Dawson, T.E. Harnessing\
    \ wireless sensor\ntechnologies to advance forest ecology and agricultural research.\
    \ Agric. For. Meteorol. 2010, 150, 30–37.\n[CrossRef]\n137. Simic, M.; Bil, C.;\
    \ Vojisavljevic, V. Investigation in wireless power transmission for UAV charging.\
    \ Procedia\nComput. Sci. 2015, 60, 1846–1855. [CrossRef]\n138. Bertacchini, A.;\
    \ Larcher, L. Wireless sensor systems with energy harvesting capabilities for\
    \ safety\nenhancement in agricultural vehicles. In Proceedings of the IEEE International\
    \ Conference on Industrial\nTechnology (ICIT), Taipei, Taiwan, 14–17 March 2016;\
    \ pp. 1950–1955.\n139. Scorcioni, S.; Bertacchini, A.; Dondi, D.; Larcher, L.;\
    \ Pavan, P.; Mainardi, G. A vibration-powered wireless\nsystem to enhance safety\
    \ in agricultural machinery. In Proceedings of the 37th Annual Conference on IEEE\n\
    Industrial Electronics Society (IECON), Melbourne, Australia, 7–10 November 2011;\
    \ pp. 3510–3515.\n140. Philipp, F.; Zhao, P.; Samman, F.A.; Glesner, M.; Dassanayake,\
    \ K.B.; Maheswararajah, S.; Halgamuge, S.\nAdaptive wireless sensor networks powered\
    \ by hybrid energy harvesting for environmental monitoring.\nIn Proceedings of\
    \ the IEEE 6th International Conference on Information and Automation for Sustainability\n\
    (ICIAFS), Beijing, China, 27–29 September 2012; pp. 285–289.\n141. Dlodlo, N.;\
    \ Kalezhi, J. The internet of things in agriculture for sustainable rural development.\
    \ In Proceedings\nof the International Conference on Emerging Trends in Networks\
    \ and Computer Communications (ETNCC),\nWindhoek, Namibia, 17–20 May 2015; pp.\
    \ 13–18.\n142. Le, N.T.; Hossain, M.A.; Islam, A.; Kim, D.-Y.; Choi, Y.-J.; Jang,\
    \ Y.M. Survey of promising technologies for 5G\nnetworks. Mob. Inf. Syst. 2016,\
    \ 2016, 25. [CrossRef]\n143. Sarangi, S.; Umadikar, J.; Kar, S. Automation of\
    \ agriculture support systems using Wisekar: Case study of a\ncrop-disease advisory\
    \ service. Comput. Electron. Agric. 2016, 122, 200–210. [CrossRef]\n144. Yelamarthi,\
    \ K.; Aman, M.S.; Abdelgawad, A. An application-driven modular IoT architecture.\
    \ Wirel. Commun.\nMob. Comput. 2017, 2017, 16. [CrossRef]\nSensors 2017, 17, 1781\n\
    44 of 45\n145. Sales, N.; Remédios, O.; Arsenio, A. Wireless sensor and actuator\
    \ system for smart irrigation on the cloud. In\nProceedings of the IEEE 2nd World\
    \ Forum on Internet of Things (WF-IoT), Milan, Italy, 14–16 December\n2015; pp.\
    \ 693–698.\n146. Ge, Z.; Liu, W.; Li, T.S.; Ye, J. Analysis and solutions to 3G\
    \ gateway issues in agriculture WSNs. Int. J. Distrib.\nSens. Netw. 2015, 11,\
    \ 13. [CrossRef]\n147. Jayaraman, P.; Yavari, A.; Georgakopoulos, D.; Morshed,\
    \ A.; Zaslavsky, A. Internet of things platform for\nsmart farming: Experiences\
    \ and lessons learnt. Sensors 2016, 16, 1884. [CrossRef] [PubMed]\n148. Tmotes.\
    \ Available online: http://wirelesssensornetworks.Weebly.Com/1/post/2013/08/tmote-sky.Html\n\
    (accessed on 10 July 2017).\n149. Arduino. Available online: http://www.Libelium.Com/\
    \ (accessed on 10 July 2017).\n150. Liu, D.; Cao, X.; Huang, C.; Ji, L. Intelligent\
    \ agriculture greenhouse environment monitoring system based\non IoT technolog.\
    \ In Proceedings of the International Conference on Intelligent Transportation,\
    \ Big Data and\nSmart City (ICITBS), Halong Bay, Vietnam, 19–20 December 2015;\
    \ pp. 487–490.\n151. Harun, A.N.; Kassim, M.R.M.; Mat, I.; Ramli, S.S. Precision\
    \ irrigation using wireless sensor network.\nIn Proceedings of the International\
    \ Conference on Smart Sensors and Application (ICSSA), Kuala Lumpur,\nMalaysia,\
    \ 26–28 May 2015; pp. 71–75.\n152. Chen, N.; Zhang, X.; Wang, C. Integrated open\
    \ geospatial web service enabled cyber-physical information\ninfrastructure for\
    \ precision agriculture monitoring. Comput. Electron. Agric. 2015, 111, 78–91.\
    \ [CrossRef]\n153. Zhao, G.; Guo, Y.; Sun, X.; Wang, X. A system for pesticide\
    \ residues detection and agricultural products\ntraceability based on acetylcholinesterase\
    \ biosensor and internet of things. Int. J. Electrochem. Sci. 2015, 10,\n3387–3399.\n\
    154. Martínez, R.; Pastor, J.; Álvarez, B.; Iborra, A. A testbed to evaluate the\
    \ ﬁware-based IoT platform in the\ndomain of precision agriculture. Sensors 2016,\
    \ 16, 1979. [CrossRef] [PubMed]\n155. Ferrández-Pastor, F.; García-Chamizo, J.;\
    \ Nieto-Hidalgo, M.; Mora-Pascual, J.; Mora-Martínez, J. Developing\nubiquitous\
    \ sensor network platform using internet of things: Application in precision agriculture.\
    \ Sensors\n2016, 16, 1141. [CrossRef] [PubMed]\n156. Li, F.; Li, S. Design and\
    \ research of intelligent greenhouse monitoring system based on internet of things.\n\
    In Proceedings of the International Conference on Computer Science and Electronic\
    \ Technology (CSET 2016),\nZhengzhou, China, 13–14 August 2016; pp. 76–79.\n157.\
    \ Mat, I.; Kassim, M.R.M.; Harun, A.N.; Yusoff, I.M. IoT in precision agriculture\
    \ applications using wireless\nmoisture sensor network. In Proceedings of the\
    \ IEEE Conference on Open Systems (ICOS), Langkawi,\nMalaysia, 10–12 October 2016;\
    \ pp. 24–29.\n158. Khattab, A.; Abdelgawad, A.; Yelmarthi, K. Design and implementation\
    \ of a cloud-based IoT scheme for\nprecision agriculture. In Proceedings of the\
    \ 28th International Conference on Microelectronics (ICM), Giza,\nEgypt, 17–20\
    \ December 2016; pp. 201–204.\n159. Baranwal, T.; Pateriya, P.K. Development of\
    \ IoT based smart security and monitoring devices for agriculture.\nIn Proceedings\
    \ of the 6th International Conference Cloud System and Big Data Engineering (Conﬂuence),\n\
    Noida, India, 14–15 January 2016; pp. 597–602.\n160. Bing, F. The research of\
    \ IoT of agriculture based on three layers architecture. In Proceedings of the\
    \ 2nd\nInternational Conference on Cloud Computing and Internet of Things (CCIOT),\
    \ Dalian, China, 22–23 October\n2016; pp. 162–165.\n161. Kodali, R.K.; Jain, V.;\
    \ Karagwal, S. IoT based smart greenhouse. In Proceedings of the IEEE Region 10\n\
    Humanitarian Technology Conference (R10-HTC), Agra, India, 21–23 December 2016;\
    \ pp. 1–6.\n162. Li, Q.; Wu, H. Research on vegetable growth monitoring platform\
    \ based on facility agricultural IoT.\nIn Proceedings of the 4th International\
    \ Conference on Geo-Informatics in Resource Management and\nSustainable Ecosystem,\
    \ GRMSE 2016, Hong Kong, China, 18–20 November 2016; pp. 52–59.\n163. Rajalakshmi,\
    \ P.;\nMahalakshmi, S.D. IoT based crop-ﬁeld monitoring and irrigation automation.\n\
    In Proceedings of the 10th International Conference on Intelligent Systems and\
    \ Control (ISCO), Coimbatore,\nIndia, 7–8 January 2016; pp. 1–6.\n164. Patil,\
    \ K.; Kale, N. A model for smart agriculture using IoT. In Proceedings of the\
    \ International Conference on\nGlobal Trends in Signal Processing, Information\
    \ Computing and Communication (ICGTSPICC), Jalgaon,\nIndia, 22–24 December 2016;\
    \ pp. 543–545.\nSensors 2017, 17, 1781\n45 of 45\n165. Brun-Laguna, K.; Diedrichs,\
    \ A.L.; Chaar, J.E.; Dujovne, D.; Taffernaberry, J.C.; Mercado, G.; Watteyne,\
    \ T.\nA demo of the PEACH IoT-based frost event prediction system for precision\
    \ agriculture. In Proceedings of\nthe 13th Annual IEEE International Conference\
    \ on Sensing, Communication, and Networking (SECON),\nLondon, UK, 27–30 June 2016;\
    \ pp. 1–3.\n166. Xu, Z.; Chen, J.; Wang, Y.; Fan, Z. A remote monitoring system\
    \ for greenhouse based on the internet of things.\nIn Proceedings of the 3rd International\
    \ Conference on Mechanics and Mechatronics Research (ICMMR 2016),\nChongqing,\
    \ China, 15–17 June 2016. [CrossRef]\n167. Liao, M.-S.; Chen, S.-F.; Chou, C.-Y.;\
    \ Chen, H.-Y.; Yeh, S.-H.; Chang, Y.-C.; Jiang, J.-A. On precisely relating\n\
    the growth of phalaenopsis leaves to greenhouse environmental factors by using\
    \ an IoT-based monitoring\nsystem. Comput. Electron. Agric. 2017, 136, 125–139.\
    \ [CrossRef]\n168. Malche, T.; Maheshwary, P. Internet of things (IoT) based water\
    \ level monitoring system for smart village.\nIn Proceedings of the International\
    \ Conference on Communication and Networks, Singapore, 8 April 2017;\npp. 305–312.\n\
    169. Stewart, J.; Stewart, R.; Kennedy, S. Internet of things—Propagation modelling\
    \ for precision agriculture\napplications. In Proceedings of the Wireless Telecommunications\
    \ Symposium (WTS), Chicago, IL, USA,\n26–28 April 2017; pp. 1–8.\n170. Encinas,\
    \ C.; Ruiz, E.; Cortez, J.; Espinoza, A. Design and implementation of a distributed\
    \ IoT system for the\nmonitoring of water quality in aquaculture. In Proceedings\
    \ of the Wireless Telecommunications Symposium\n(WTS), Chicago, IL, USA, 26–28\
    \ April 2017; pp. 1–7.\n171. Reda, H.T.; Daely, P.T.; Kharel, J.; Shin, S.Y. On\
    \ the application of IoT: Meteorological information display\nsystem based on\
    \ LoRa wireless communication. IETE Tech. Rev. 2017. [CrossRef]\n172. Cao-hoang,\
    \ T.; Duy, C.N. Environment monitoring system for agricultural application based\
    \ on wireless\nsensor network. In Proceedings of the Seventh International Conference\
    \ on Information Science and\nTechnology (ICIST), Da Nang, Vietnam, 16–19 April\
    \ 2017; pp. 99–102.\n173. Mois, G.; Folea, S.; Sanislav, T. Analysis of three\
    \ IoT-based wireless sensors for environmental monitoring.\nIEEE Trans. Instrum.\
    \ Meas. 2017, 66, 2056–2064. [CrossRef]\n174. Vasisht, D.; Kapetanovic, Z.; Won,\
    \ J.; Jin, X.; Chandra, R.; Sinha, S.N.; Kapoor, A.; Sudarshan, M.; Stratman,\
    \ S.\nFarmBeats: An IoT platform for data-driven agriculture. In Proceedings of\
    \ the 14th USENIX Symposium on\nNetworked Systems Design and Implementation, Boston,\
    \ MA, USA, 27–29 March 2017; pp. 515–529.\n175. Pan, H.; Shi, Y.; Wang, X.; Li,\
    \ T. Modeling wireless sensor networks radio frequency signal loss in corn\nenvironment.\
    \ Multimed. Tools Appl. 2016. [CrossRef]\n176. Kwong, K.H.; Wu, T.-T.; Goh, H.G.;\
    \ Sasloglou, K.; Stephen, B.; Glover, I.; Shen, C.; Du, W.; Michie, C.;\nAndonovic,\
    \ I. Practical considerations for wireless sensor networks in cattle monitoring\
    \ applications. Comput.\nElectron. Agric. 2012, 81, 33–44. [CrossRef]\n177. Ivanov,\
    \ S.; Bhargava, K.; Donnelly, W. Precision farming: Sensor analytics. IEEE Intell.\
    \ Syst. 2015, 30, 76–80.\n[CrossRef]\n178. Kulatunga, C.; Shalloo, L.; Donnelly,\
    \ W.; Robson, E.; Ivanov, S. Opportunistic wireless networking for smart\ndairy\
    \ farming. IEEE IT Prof. 2017, 19, 16–23. [CrossRef]\n179. Raza, U.; Kulkarni,\
    \ P.; Sooriyabandara, M. Low power wide area networks: An overview. IEEE Commun.\n\
    Surv. Tutor. 2017, 19, 855–873. [CrossRef]\n180. Shah, N.; Desai, U.; Das, I.;\
    \ Merchant, S.; Yadav, S. In-ﬁeld wireless sensor network (WSN) for estimating\n\
    evapotranspiration and leaf wetness. Int. Agric. Eng. J. 2009, 18, 43–51.\n181.\
    \ Gardaševi´c, G.; Veleti´c, M.; Maleti´c, N.; Vasiljevi´c, D.; Radusinovi´c,\
    \ I.; Tomovi´c, S.; Radonji´c, M. The IoT\narchitectural framework, design issues\
    \ and application domains. Wirel. Pers. Commun. 2017, 92, 127–148.\n[CrossRef]\n\
    © 2017 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open\
    \ access\narticle distributed under the terms and conditions of the Creative Commons\
    \ Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/17/8/1781/pdf?version=1501767218
  publication_year: 2017
  relevance_score: 0.8099999999999999
  relevance_score1: 0
  relevance_score2: 0
  title: 'Energy-Efficient Wireless Sensor Networks for Precision Agriculture: A Review'
  verbatim_quote1: “Adafruit Pro Trinket” platform was selected for the data processing,
    and nRF wireless protocol was used as a transceiver to transfer sensor data to
    the gateway (i.e., Intel Edison to reduce the power consumption). The gateway
    was in charge of collected information from different sensors and passed the information
    to the cloud server. The proposed system resulted in improved crop quality and
    minimized negative ecological effect.
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.compag.2011.07.009
  analysis: 'This paper proposes an energy-efficient TDMA-based method for automating
    the data transmission process in irrigation systems. It focuses on the use of
    sensor networks and explores two approaches: direct communication and data aggregation.
    The simulation results show that the data aggregation method outperforms direct
    communication in terms of energy conservation and throughput. The paper offers
    valuable insights into optimizing energy consumption in real-time irrigation systems
    by leveraging wireless sensor networks. The findings are applicable to the review''s
    focus on types of data most applicable to irrigation management and their typical
    sources.'
  authors:
  - M. Sudha
  - M. L. Valarmathi
  - Anni Susan Babu
  citation_count: 66
  full_citation: M. Nesa Sudha, M.L. Valarmathi, Anni Susan Babu (2011) Energy efficient
    data transmission in automatic irrigation system using wireless sensor networks,
    Computers and Electronics in Agriculture, 78(2), 215-221, https://doi.org/10.1016/j.compag.2011.07.009
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Proposed system 3. Results and analysis
    4. Comparison between single – hop and data aggregation method 5. Conclusion Acknowledgement
    References Show full outline Cited by (60) Figures (10) Show 4 more figures Computers
    and Electronics in Agriculture Volume 78, Issue 2, September 2011, Pages 215-221
    Energy efficient data transmission in automatic irrigation system using wireless
    sensor networks Author links open overlay panel M. Nesa Sudha a, M.L. Valarmathi
    b, Anni Susan Babu a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2011.07.009
    Get rights and content Abstract Wireless sensor networks (WSNs) find wide applications
    in environmental monitoring. MAC protocols play a vital role in controlling the
    energy consumption in a WSN. It tells the network when and how to access the medium.
    Time Division Multiple Accesses (TDMAs) are well suited for these real time applications.
    Because it prevents radio interference, and reduces energy consumptions. In this
    paper a TDMA based MAC protocol was used to collect environmental data such as
    soil moisture and temperature of an irrigation system. The base station was collecting
    the data in a particular area using the sensor nodes. All nodes in the network
    were homogenous and energy constrained. TDMA scheduler assigned the time slots
    for each node and those sensor nodes turn ON/OFF their radio according to the
    schedule to save energy. If the collected data was less than the threshold value,
    the base station would inform the controller by setting the corresponding bit
    to perform a motor control action. In this paper two methods based on TDMA scheduling
    were used. The first one was a direct communication method, in which each node
    transmitted the data directly to the sink. The second method used data fusion
    (aggregation) method in which nodes were grouped into clusters to save energy.
    The simulation results showed that the aggregation method was providing a 10%
    increase in the residual energy and 13% increase in the throughput. Highlights
    ► Irrigation is an important component in crop production. ► This paper provides
    a method used in an automated irrigation system. ► Automatic irrigation is done
    with the help of two sensors, solenoid valves and a pump. ► Based on collected
    data the motor is activated according to the need of soil. Previous article in
    issue Next article in issue Keywords TDMA schedulingWireless sensor networksEnergy
    efficiencyIrrigation 1. Introduction An agricultural country like India has been
    following the traditional methods for irrigation. Availability of energy is one
    of the important factors in the irrigation system. By incorporating suitable sensors
    and other surveillances from strategic points in large farms, it would be possible
    to monitor and control the conditions in it to obtain maximum productivity from
    the farm. It would help the farmers in a huge way by avoiding the money usually
    spent on labor to do the watering and fertilizing and at the same time reduce
    the monitoring load, which rests on them. These paper discuses an automated irrigation
    system with electronic controls and monitoring that uses energy efficient Time
    Division Multiple Access (TDMA) methods for data transfer. Automatic irrigation
    was done with the help of four sensors and solenoid valves. The data given by
    the sensors were interpreted by microcontroller and it turns on both the mixer
    and motor according to the need of soil. Wireless sensor network (WSN) is an emerging
    technology that has a wide range of potential applications including environment
    monitoring, agriculture, vehicle monitoring, smart spaces, medical systems, and
    robotic exploration. Sensor-based irrigation systems have been studied for many
    applications. Meron et al. (1995) used a control system for apple tree irrigation
    management using tensiometers. Shock et al. (1999) used a similar approach but
    transmitted data from the data loggers to a central data logging site via radio.
    Allen (2000) evaluated an irrigation management system that can provide continuous
    real-time or near real-time soil water content information to the irrigation system
    operator. Software design for automated irrigation control has been studied by
    Abreu and Pereira (2002). They designed and simulated solid-set sprinkler irrigation
    systems by using software that allowed the design of a simplified layout of the
    irrigation system. Wireless sensor networks (WSNs) are special devices which contain
    a number of wireless sensor nodes. Each node has one or more sensors, embedded
    processors and low power radios which are battery operated. WSNs have loss links
    that are greatly affected by environmental factors (Raleigh et al., 2003, Cerpa
    et al., 2005). Hence it is important to utilize the battery power very efficiently.
    The radio part in a sensor node consumes more energy. So the MAC layer was modified,
    which controls the radio operations. MAC protocols play a vital role in the energy
    saving process of a WSN. MAC schemes for sensor networks can be fundamentally
    categorized into contention-based and scheduling-based schemes. The main advantages
    of contention based schemes in WSN include; no synchronization requirement, no
    central scheduler required, more robust to the network dynamics, no clustering
    necessary, more suitable for event-driven WSNs. However, in terms of energy savings,
    contention-based schemes are not attractive. Scheduling-based schemes attempt
    to determine the network connectivity first and design collision-fee links to
    each node. Links may be assigned as time slots (TDMA), frequency bands (Frequency
    Division Multiple Access (FDMA)), or spread spectrum codes (Code Division Multiple
    Access (CDMA)). TDMA schemes have a distinct advantage over the other methods
    in terms of energy conservation (van Hoesel et al., 2004). Except for the transmission,
    receiving and sensing durations, nodes can be put to sleep and highest amount
    of power savings possible. The main disadvantage of the TDMA scheme is that it
    requires time synchronization. Commercial standard such as IEEE 802.11 is not
    suitable for WSNs since the nodes listen at all times and they cannot be used
    for multi hop purposes. Ye et al. (2002) has proposed SMAC which improves on IEEE
    802.11 by setting up duty cycles for each node which governs the node’s ON and
    OFF time. TMAC improves on SMAC by consuming less energy by using adaptive duty
    cycle (Ye and Heidemann, 2003). Designing power efficient MAC protocols is one
    of the ways to prolong the lifetime of the network (Lu et al., 2004). Energy conservation
    can be obtained using data aggregation method. But in data aggregation the data
    will get altered depending upon the technique (Nath et al., 2004) and it will
    be approximated to the nearest value. In case of averaging technique, the header
    node collects the data and informs the average value to the base station (Jeffrey
    Considine et al., 2004). Energy efficiency in wireless sensor networks using sleep
    mode TDMA scheduling is proposed by Pantazis et al. (2009). This scheme achieves
    the reduction of the end-to-end delay caused by the sleep mode operation while
    at the same time it maximizes the energy savings. 2. Proposed system The automatic
    irrigation done with the help of highly accurate sensors makes irrigation system
    a unique product. Man power requirement is very less; this could reduce the manpower
    requirements for farming which is one of the major factors holding back the farmers.
    As the number of farmers are decreasing day by day this would help the agricultural
    area to keep up with the other industries. One of the most important benefits
    of the product is that a single farmer can manage more than one field. This makes
    the product truly unique in its kind. Automatic irrigation is done with the help
    of two sensors, solenoid valves and a pump. The data given by the sensors are
    interpreted by microcontroller and it activated the motor according to the need
    of soil. The main objective of this paper is to provide an energy efficient algorithm
    for the wireless sensor communication used in an automated irrigation system.
    The wireless communication can be of two types – single hop or multi hop. In this
    paper we refer to the usage of a single hop communication between the sources
    and sink. Data aggregation method provides better performance so this concept
    is used to give better energy efficiency. In order to provide good energy conservation
    a distributed TDMA based scheme which leads to a collision free transmission over
    the data channel is used. By using this method we can reduce the energy consumption
    by each node thereby reducing the overall energy consumption. This method is robust
    and the failure of single node will affect only the data intended for that node.
    2.1. Direct communication method 2.1.1. Basic scenario The basic scenario consists
    of a base station/sink and sensor nodes. Each sensor node was equipped with a
    poweramplifier PA2460 and had a range of 1 km. Thus we could cover up to 1acre
    area of the field using this method. Each sensor node will measure the temperature
    and the moisture level of the soil. For initializing the network, the base station
    assigned each node with a unique address. Then each node switched to the idle
    state. In the idle state each node was in receiving mode only. When the base station
    required collecting the temperature and moisture level of a particular area, it
    broadcast the address of the sensor node which was deployed over there. All the
    nodes received this address but only the addressed node responded to this request
    by sending back the present value of the moisture and the temperature of that
    region. The other nodes continued in the idle state. After sending the required
    data the node went back to the idle state. This process was repeated for all the
    nodes. In using direct communication method each sensor node sent its data directly
    to the base station. If the nodes were far from the base station, each node required
    large amount of transmission power. This reduced the system life time. So when
    the nodes were close to the base station this system was efficient. 2.1.2. Sensor
    node Each node consists of a moisture sensor and the temperature sensor. Fig.
    1 shows the block diagram of sensor node. The node’s microcontroller program (programmed
    in C language) corrected and formatted sensor values and then output the results
    to the onboard transceiver. Out of these 20 bytes data 4 bytes were used for storing
    temperature and 5 bytes were used for moisture level. The remaining 11 bytes were
    reserved for future use. Most of the time the sensor node was in the receive mode
    so that the energy consumption was minimized. The sensing of environment and data
    transmission occurred whenever it was requested by the base station. Download
    : Download full-size image Fig. 1. Sensor node. 2.1.3. Soil moisture sensor The
    Soil Moisture sensor was used as a tool to optimize irrigation and to warn of
    plant stress at the dry or wet ends of the scale. It is a high performance accurate
    sensor. The VG400 series soil moisture sensor probes from Vegetronix enabled precise
    low cost monitoring of soil water content. Because the probe measured the dielectric
    constant of the soil using transmission line techniques, it was insensitive to
    water salinity, and did not corrode over time as does conductivity based probes.
    The probes were small, rugged, and consumed under a mA of power. 2.1.4. Temperature
    sensor LM35 was used as the temperature sensor. Thermistors are temperature sensitive
    resistors. All resistors varied with temperature, but thermistors are constructed
    of semiconductor material with a resistivity that is especially sensitive to temperature.
    However, unlike most other resistive devices, the resistance of a thermistor decreased
    with increasing temperature. That was due to the properties of the semiconductor
    material that the thermistor was made from. Resistance drops was a very small
    value in a range around room temperature. Not only resistance changed in the opposite
    direction from what we expected, but the magnitude of the percentage of resistance
    change was substantial. 2.1.5. Base station The base station consists of a transceiver,
    processor, and LCD display. The basic block diagram is shown in Fig. 2. After
    getting the value of the moisture level and the temperature, the base station
    compared this value with the threshold value which was already stored in the database.
    If the measured value was less than the required value, the controller did the
    necessary actions. The same procedure was repeated for all the nodes. Download
    : Download full-size image Fig. 2. Base station. 2.1.6. Solenoid valve A solenoid
    valve is an electromechanical valve for use with liquid or gas controlled by running
    or stopping an electrical current through a solenoid, which is a coil of wire,
    thus changing the state of the valve. The operation of a solenoid valve is similar
    to that of a light switch, but typically controls the flow of air or water, whereas
    a light switch typically controls the flow of electricity. Solenoid valves may
    have two or more ports: in the case of a two-port valve the flow is switched on
    or off; in the case of a three-port valve, the outflow is switched between the
    two outlet ports. Multiple solenoid valves can be placed together on a manifold.
    Solenoid valves are the most frequently used control elements in fluidics. Their
    tasks are to shut off, release, dose, distribute or mix fluids. They are found
    in many application areas. Solenoids offer fast and safe switching, high reliability,
    long service life, good medium compatibility of the materials used, low control
    power and compact design. We used these valves to control the flow of fertilizers
    and water to the mixer. Besides the plunger-type actuator which was used most
    frequently, pivoted-armature actuators and rocker actuators were also used. 2.1.7.
    Pump The pump was used for the purpose of pumping water in the storage tank to
    the field. It worked according to the instruction of micro controller. So it could
    pump the water whenever it was needed. 2.2. Data aggregation method Data aggregation
    played a major role in reducing the energy consumption by the sensor nodes and
    thereby increasing the network life time efficiently. The difference between the
    data aggregation and data accumulation is that, in data accumulation the header
    node collected the data from all the nodes and just bypassed them to the base
    station without altering the data. But in case of data aggregation the header
    node collected the data from all the nodes and aggregated them depending on different
    techniques. The data being sensed by the nodes in the network were transmitted
    to a base station. In this model base station was fixed and located far from the
    sensors. Data collected from each node was combined together into a small set
    of information. Data aggregation is also known as data fusion. Sensor networks
    contain too much data for an end-user to process. Therefore, automated methods
    of combining or aggregating the data into a small set of meaningful information
    were required. For data aggregation nodes were designed in such a way that if
    the transmitting node failed, it would not affect the network performance and
    also due to the presence of error bound the header transmitted the data only if
    the aggregated data was beyond the limit. Nodes organized themselves into clusters
    with one node acting as the cluster head. In this case, a sink/base station acted
    as the super cluster head. All the sensor nodes were grouped into three clusters;
    each contained six nodes and a cluster head. The communication between sink and
    cluster heads was based on the TDMA. The communication within each cluster was
    also based on TDMA method. The basic operation was same as the single – hop method.
    But here we had two stages of communication. (1) Communication between base station
    and cluster heads. (2) Communication between cluster heads and the cluster members.
    All the nodes in the network were assigned with a unique address and it was known
    to the base station. Each node acted as the cluster head based on a TDMA schedule.
    This schedule was broadcasted to the nodes in the clusters. Whenever the cluster
    was formed, based on the schedule all the nodes transmitted their energy information
    to the base station. The node which had the highest energy among all the nodes
    in a cluster was assigned as the cluster head of that cluster by the base station.
    Initially all the nodes including the cluster heads were in the idle state. Whenever
    the base station needed a data (temperature and moisture value) from a particular
    area, it sent the address of the cluster head in that area. Now the addressed
    cluster head switched from its idle state to active state. Then the cluster head
    sent a request to its members by sending the address of the member nodes based
    on the TDMA schedule. i.e. only one node was addressed in a particular time slot.
    Each node sent data during their allocated time slot. The communication was similar
    to that in the single – hop method discussed above. The cluster head node kept
    its radio ON to receive all the data from the member nodes. When all the data
    were received, the cluster head performed the aggregation to compress the data.
    This data was sent to the base station. This process was repeated in all the clusters.
    After a certain time the next round began with each cluster assigned with a new
    cluster head. The new cluster head was selected based on the energy. Using this
    algorithm we could increase our range of the coverage area and reduce the energy
    consumption of each sensor nodes. Basically, data aggregation can be done using
    four methods. They are based on: (1) Sum. (2) Minimum. (3) Maximum. (4) Averaging.
    In case of summing technique, the Header node collected the data and it gave the
    added value to the base station. The major disadvantage in this approach was that
    the base station was not able to decide how many nodes exactly gave the data;
    and also it was not able to find out how many nodes failed during transmission.
    The summation scheme is represented as follows: where i is the node number, n
    the maximum number of nodes and Pi is the data present in each node at that instant.
    In case of minimum technique, the header node collected the data and it found
    out the data with minimum value. The major disadvantage in this approach was that
    the node which was far away from the source will always produce minimum value,
    so it was very difficult to find the exact temperature distribution in that area.
    The minimum scheme is represented as follows: where Min() is the function used
    to find the minimum .In case of maximum technique, the header node collected the
    data and it found out the data with maximum value. Say for example: temperature
    monitoring; only the maximum value were informed to the base station. The major
    disadvantage in this approach was that the node which was nearer to the source
    always produced maximum value, so it was very difficult to find the exact temperature
    distribution in that area. The maximum scheme is represented as follows: where
    Max () is the function used to find the maximum value. In case of averaging technique,
    the header node collected the data and found out the average of all the data that
    were got from the neighboring nodes and then it informed the average value to
    the base station. The major advantage in this method was that, since the header
    node performed averaging technique, it was very useful for the base station to
    find exactly how many nodes had transmitted their data and also how many nodes
    failed during transmission. Also in this method because of averaging, the exact
    temperature distribution in the corresponding area could also be found easily.
    Because of these advantages we followed this approach for efficient data aggregation.
    The averaging scheme is represented as follows: where i is the node number, n
    the maximum number of nodes and Pi is the data present in each node at that instant.
    2.2.1. Methodology Without data aggregation the header node collected all the
    readings from the remaining nodes and it transmitted all the data individually
    to the base station, as a result a lot of energy was consumed in case of normal
    scenario. Since it was communicating to the base station, energy consumption was
    more in this approach. With data aggregation, the header node collected all the
    readings from the remaining nodes and it aggregated them using averaging technique.
    But the header node transmitted only one data instead of transmitting all the
    four data. As a result energy was saved. 3. Results and analysis In this paper
    two different energy conservation mechanisms have been analyzed based on the TDMA
    scheduling for the real time application – automatic irrigation systems. Both
    the methods provide good energy conservation compared to other conventional methods.
    The direct communication method provided a collision free data transmission. Network
    simulator-2(NS-2) (www.isi.edu/nsnam/ns/) has been used for the analysis of both
    the algorithms. The matrices used for the performance analysis are average energy
    and the throughput of the network. Graphs were plotted for the energy of the network
    over the time. It showed that, the energy of the network decreased as a function
    of time. Then the throughput of each node was calculated and plotted. For the
    simulation purpose the initial energy of each node were selected as 100 J. From
    the real time system it was found that the energy needed when the node was in
    transmission mode was 1 J/s and for receiving mode 0.5 J/s. 3.1. Direct communication
    method The simulation results showed that the amount of energy consumption could
    be reduced using the direct communication method. Fig. 3 shows the relation between
    energy and time for the network. From the graph it is clear that the energy decreased
    as a function of time. In this method the final energy reached up to 48 J from
    the initial energy of 100 J. It shows that energy decreases as time increases.
    Download : Download full-size image Fig. 3. Average energy of the network for
    direct communication method. The final energy of each node was found and Fig.
    4 shows the graph between the node and final energy of each node. It gives us
    the value of final energy in each node after the end of simulation. From the graph
    it is clear that the sink node had the minimum energy as it is always taking part
    in communication. All other nodes were having higher energy than the sink node
    because they were going back to the idle state after the time slot which was allotted
    for them. So we could save some amount of energy by switching the nodes back to
    the idle state while it was not taking part in the communication. Another parameter
    for performance evaluation is the throughput of the network. It is the number
    of packets successfully received divided by time. Fig. 5 shows the throughput
    of the network. Download : Download full-size image Fig. 4. The final energy of
    each node. Download : Download full-size image Fig. 5. Average throughput of the
    network. 3.2. Aggregation method The main objective of the aggregation method
    was to reduce the energy consumption and to increase the network throughput. The
    simulation results showed that objective could be met by reducing the consumption
    of energy and by increasing the throughput of the network. Fig. 6 shows the average
    energy of the network. From the graph it is clear that the average energy has
    reached the value of 58 J from the initial energy of 100 J. Fig. 7 shows the final
    energy of each node. Three dips are seen in the graph. They correspond to the
    final energy of each cluster heads. The reason is that the active times of the
    cluster heads were more compared to other member nodes in the networks. But it
    was seen from the result that even the final energy of cluster head was more than
    the final energy of each node in the direct communication method. Download : Download
    full-size image Fig. 6. Average energy of the network for data aggregation method.
    Download : Download full-size image Fig. 7. Final energy of each node. Next the
    throughput of the network can be seen in Fig. 8 Graph shows that the throughput
    of the network also had increased by a considerable value. It had increased from
    the 45 × 1000 packets to 58 × 1000 packets while we were moving from direct communication
    method to data aggregation method. Download : Download full-size image Fig. 8.
    Average throughput of the network for data aggregation method. 4. Comparison between
    single – hop and data aggregation method The energy consumption is a key factor
    for routing protocols in WSN. So far, many energy conservation algorithms have
    been proposed for the WSN. In this paper an energy efficient TDMA based algorithm
    is proposed for an automatic irrigation system. Two different methods were used
    based on this TDMA scheduling. The first method used a direct communication between
    the sink and the source nodes. Through this method a considerable amount of energy
    was saved. The second method used an aggregation method in which the sink/base
    station collected the data from different cluster heads. Using this method, the
    energy conservation obtained was more than that obtained from the direct communication
    method. For better performance, cluster heads were selected based on the energy
    of the nodes in the cluster after the completion of each cycle of TDMA. From the
    analysis and the simulation results it is clear that aggregation method has better
    performance compared to the direct communication method. It is clear from Fig.
    9 that the final energy of the network in the aggregation method is greater than
    that of the single-hop method. The residual energy has increased by 10%. From
    Fig. 10 we can understand that, the throughput of the base station in aggregation
    method is 58 × 1000 packets and for the single – hop method is 45 × 1000 packets.
    Thus there was a 13% of the increase in the throughput. Download : Download full-size
    image Fig. 9. Comparison of final node energy. Download : Download full-size image
    Fig. 10. Comparison of throughput. 5. Conclusion In this paper two different energy
    conservation mechanisms have been analyzed based on the TDMA scheduling for the
    real time application – automatic irrigation systems. Both the methods provide
    good energy conservation compared to other conventional methods. The direct communication
    method provides a collision free data transmission. From the simulation results
    it were found that the aggregation method showed better performance than the direct
    communication method in terms of average energy and the throughput of the network.
    As a future work the energy conservation using different schedules can be done
    and those methods can be compared with the proposed methods. Acknowledgement The
    authors would like to acknowledge the management of Karunya University for providing
    us with all the tools and the necessary support to carry out the research successfully.
    The authors would also like to thank the anonymous reviewers and Editor for their
    constructive comments which helped us to improve the clarity and presentation
    of the paper. References Abreu and Pereira, 2002 Abreu, V.M., Pereira, L.S., 2002.
    Sprinkler irrigation systems design using ISADim. American Society of Agricultural
    and Biological Engineers (ASABE) Paper No.022254. ASABE, St. Joseph, Michigan
    <www.asabe.org>. Google Scholar Allen, 2000 Allen, R.G., 2000. Report on AM400
    and HOBO loggers. University of Idaho, Kimberly, Idaho, <www.kimberly.uidaho.edu/water/swm/>.
    Google Scholar Cerpa et al., 2005 Cerpa, A., Wong, J.L., Kuang, L., Potkonjak,
    M., Estrin, D., 2005 Statistical model of lossy links in wireless sensor networks.
    In: International Conference on Information Processing in Sensor Networks (IPSN)
    ’05. Google Scholar Jeffrey Considine et al., 2004 Jeffrey Considine, Feifei Li,
    George Kollios, John Byers, 2004. Approximate aggregation techniques for sensor
    databases. In: International Conference on Data Engineering (ICDE 2004), ICDE,
    pp. 214–226. Google Scholar LM35 temperature sensor, xxxx LM 35 temperature sensor
    <http://datasheetreference.com/lm35-datasheet.html>. Google Scholar Lu et al.,
    2004 Lu, G., Krishnamachari, B., Raghavendra, C., 2004. An Adaptive Energy-Efficient
    and Low-Latency MAC for Data Gathering in Sensor Networks. In: International Workshop
    on Algorithms for Wireless, Mobile, Ad Hoc and Sensor Networks (WMAN 04) (April).
    Google Scholar Meron et al., 1995 Meron, M., Assaf, R., Bravdo, B., Wallach, R.,
    Hallel, R., Levin, A., Dahan, I., 1995. Soil sensor actuated micro irrigation
    of apples. In: Proceedings of the 5th International Micro irrigation Congress.
    ASABE, St. Joseph, MI, pp. 486–491. Google Scholar Pantazis et al., 2009 Nikolaos
    A. Pantazis, Dimitrios J. Vergados, Dimitrios D. Vergados Energy efficiency in
    WSN using sleep mode TDMA scheduling Science Direct Ad Hoc Networks, 7 (2009),
    pp. 322-343 View PDFView articleView in ScopusGoogle Scholar NS-2 Network Simulator,
    xxxx NS-2 Network Simulator. <http://www.isi.edu/nsnam/ns/>. Google Scholar Poweramplifier,
    xxxx Poweramplifier PA2460. <http://pdf1.alldatasheet.com/datasheet-df/view/136563/ETC1/PA2460.html>.
    Google Scholar Raleigh et al., 2003 Raleigh, N.C., Zhao, J., Govindan, R., 2003.
    Understanding packet delivery performance in dense wireless sensor networks. In:
    Proceedings of the 1st international conference on Embedded networked sensor systems
    (SenSys) ’03, pp. 1–13. Google Scholar Shock et al., 1999 Shock, C.C., David,
    R.J., Shock, C.A., Kimberling, C.A., 1999. Innovative automatic low-cost reading
    of Watermark soil moisture sensors. In: Proceedings of the 1999 Irrigation Association
    Technical Conference, the Irrigation Association, Falls Church, VA, USA, pp. 147–152.
    Google Scholar Nath et al., 2004 Nath, Suman., Gibbons, Phillip B., Seshan, Srinivan.,
    Anderson, Zachary R., 2004. Synopsis Diffusion for Robust Aggregation in Sensor
    Networks. In: Proceedings of the 2nd international conference on Embedded networked
    sensor systems. Google Scholar Van Hoesel et al., 2004 Van Hoesel, L.F.W., Nieberg,
    T., Kip, H.J., Havinga, P.J.M., 2004. Advantages of a TDMA based energy-efficient,
    self-organizing MAC protocol for WSNs. In: IEEE 59th Vehicular Technology Conference,
    2004. VTC 2004 – spring, 2004. Google Scholar Vegetronix, xxxx Vegetronix VG400
    series soil moisture sensor. <http://vegetronix.com/Products/VG400/>. Google Scholar
    Ye et al., 2002 Ye, Wei., Heidemann, J., Estrin, D., 2002. An energy-efficient
    MAC protocol for WSN. In: Proceedings of the 21st International Annual Joint Conference
    of the INFOCOM 2002, New York, NY, USA (June). Google Scholar Ye and Heidemann,
    2003 Ye, Wei., Heidemann, J., 2003. Medium Access Control in Wireless Sensor Networks.
    USC/ISI Technical Report ISI-TR-580 (OCTOBER. Google Scholar Cited by (60) Automation
    in drip irrigation for enhancing water use efficiency in cereal systems of South
    Asia: Status and prospects 2021, Advances in Agronomy Show abstract A dynamic
    distributed boundary node detection algorithm for management zone delineation
    in Precision Agriculture 2020, Journal of Network and Computer Applications Citation
    Excerpt : The most prominent methods for MZ delineation namely, Yield maps, satellite
    images, and on-the-go sensors (sensors mounted on vehicle) do not account for
    this aspect. Recent studies from agronomy ((Sudha et al., 2011), (O''Shaughnessy
    et al., 2015), (Vellidis et al., 2008), and (Haghverdi et al., 2015)) report the
    need for identifying MZs dynamically. This necessitates estimation of MZs dynamically
    based on physical parameters. Show abstract Employing sensor network based opportunistic
    spectrum utilization for agricultural monitoring 2020, Sustainable Computing:
    Informatics and Systems Citation Excerpt : Díaz et al. proposed a methodology
    consisting of a set of well-defined phases that cover the complete life cycle
    of wireless sensor network applications for agricultural monitoring [9]. Sudha
    et al. used a time division multiple access based medium access control protocol
    in order to collect environmental data such as soil moisture and temperature of
    an irrigation system [10]. Ndzi et al. presented wireless sensor network coverage
    measurements in mixed crop farmland [11]. Show abstract An analysis of energy
    efficiency in Wireless Sensor Networks (WSNs) applied in smart agriculture 2019,
    Computers and Electronics in Agriculture Citation Excerpt : The length of one
    slot and thus the length of a round depend on the technology used and on the expected
    length of the packets. In Nesa Sudha et al. (2011), a TDMA based MAC protocol
    was used to collect environmental data such as soil moisture and temperature of
    an irrigation system. In Raju Bhowmik and Ajita Pathak are presented simulation
    results of an energy efficient WSN with a TDMA based MAC protocol used for the
    greenhouse temperature monitoring. Show abstract Design of Wireless Sensor Network
    Bidirectional Nodes for Intelligent Monitoring System of Micro-irrigation in Litchi
    Orchards 2018, undefined Show abstract Integration of an Innovative Atmospheric
    Forecasting Simulator and Remote Sensing Data into a Geographical Information
    System in the Frame of Agriculture 4.0 Concept 2023, AgriEngineering View all
    citing articles on Scopus View Abstract Copyright © 2011 Elsevier B.V. All rights
    reserved. Recommended articles Implementing agricultural water pricing policy
    in irrigation districts without a market mechanism: Comparing the conventional
    and automatic water distribution systems Computers and Electronics in Agriculture,
    Volume 185, 2021, Article 106121 Yousef Hassani, Seied Mehdy Hashemy Shahdany
    View PDF An automatic control device for negative pressure irrigation for continuous
    low-rate water supply at constant soil wetting Biosystems Engineering, Volume
    213, 2022, pp. 175-181 Kechun Wang, …, Yuping Lv View PDF An overview of smart
    irrigation systems using IoT Energy Nexus, Volume 7, 2022, Article 100124 Khaled
    Obaideen, …, Mohamad Ramadan View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 59 Captures Readers: 99 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: (Nesa Sudha et al., 2011)
  journal: Computers and Electronics in Agriculture
  limitations: null
  pdf_link: null
  publication_year: 2011
  relevance_score: 0.8
  relevance_score1: 0
  relevance_score2: 0
  title: Energy efficient data transmission in automatic irrigation system using wireless
    sensor networks
  verbatim_quote1: Energy efficient data transmission in automatic irrigation system
    using wireless sensor networks
  verbatim_quote2: An energy efficient TDMA based algorithm is proposed for an automatic
    irrigation system.
  verbatim_quote3: From the analysis and the simulation results it is clear that aggregation
    method has better performance compared to the direct communication method.
- DOI: https://doi.org/10.3390/s20010190
  analysis: "First, the authors employed outlier removal techniques on the real soil\
    \ moisture data in order to analyze the inﬂuence of these techniques on irrigation\
    \ management (Section 3.1.1) in the Smart&Green framework (Section 5.1). Then,\
    \ they analyzed the MAE and RMSE of the machine learning techniques tested with\
    \ the local and global approaches (Section 3.1.2) proposed for the Smart&Green\
    \ soil moisture prediction module (Section 5.2). Finally, they applied the soil\
    \ moisture data created by the best prediction models for irrigation management\
    \ to analyze the water savings (Section 5.3). \n\nIn Section 5.1, the authors\
    \ focused on the impact of outlier removal techniques on real moisture data used\
    \ in irrigation management. They set Fusion Service (Section 3.2) to use an outlier\
    \ removal technique to process the matric potential ψc provided by the nine tensiometers\
    \ (soil moisture sensors) at 15 cm of depth in the experimental ﬁeld (Section\
    \ 4.2). Second, the Fusion Service aggregated ψc data using the co-operative function\
    \ mean. After this, the modules of water balance and potential matric (Section\
    \ 3.1) applied the aggregated ψc to Van Genutchen Model (Equation (A1)) to estimate\
    \ the current soil moisture θc at the crop root zone (z = 30 cm) and compute IWN.\n\
    \nThe authors found that the use of θcz saved an average of 90.4% of the IWN estimated,\
    \ as compared to that using only weather and crop data. Preprocessing of real\
    \ data with Zscore and MZscore techniques optimized the tradeoff reasonably between\
    \ IWN saving and healthy crop development since these techniques decreased this\
    \ result to 89.3%. Zscore and MZscore data treatment led to an increment of the\
    \ moisture θc values (Figure 5a), and, consequently, a reduction of the term ∆A\
    \ of water balance (Equation (A3)). GESD and Chauvenet did not affect the moisture\
    \ θc data enough (Figure 5b), as well as IWN saving (Table 3).   \n\nIn Section\
    \ 5.2, the authors focused on the performance of models for soil moisture prediction.\
    \ They employed the test accuracy of the local approach for each prediction algorithm\
    \ which was the mean of the MAE and RMSE achieved by the nine models built for\
    \ each monitoring point of the experimental ﬁeld. Considering all the analyzed\
    \ errors, Gradient Boosting outperformed all the other techniques, followed by\
    \ Random Forest. Both approaches presented acceptable errors, according to a specialist\
    \ agronomic engineer.  \n\nThey also analyzed the global approach for each algorithm.\
    \ Again, the Gradient Boosting algorithm achieved the best results, compared to\
    \ all other evaluated models. It can be noticed that the MAE and RSME of the Gradient\
    \ Boosting model did not vary as much as the other evaluated models; this means\
    \ the global model generalizes well for any data from any sensor in the ﬁeld.\
    \ The Local Gradient Boosting approach outperformed the global one. However, even\
    \ though the global model error had an average MAE error increase of 58.9% and\
    \ average RMSE error increase of 45.7%, the errors were still acceptable, according\
    \ to the specialist agronomic engineer.\n\nThe authors also analyzed the relevance\
    \ of the features of Table 1 in the context of the local and global approaches.\
    \ They employed Gradient Boosting as, according to the results of this section,\
    \ it has proved to be the best ML technique for their purposes. XGboost [80] estimates\
    \ the relevance of each feature by counting the number of times it is used in\
    \ a split node of any decision tree in the Gradient Boosting forest. Figure 7\
    \ presents the results. The more an attribute is used in a decision tree, the\
    \ higher its relative importance is. The most-used variables in both approaches\
    \ were U2, P, Tmax, RHmin, Rn, and kc.\n\nIn Section 5.3, the authors analyzed\
    \ the water savings through the use of predicted data of soil moisture. They used\
    \ the local and global models based on Gradient Boosting to predict the matric\
    \ potential ϕm for a ﬁeld without soil moisture sensors over six months. The local\
    \ approach estimated daily ϕp at a depth of 15 cm, as the ﬁeld had nine monitoring\
    \ points. Therefore, they could apply the outlier removal techniques to treat\
    \ this data set of nine daily values. The global approach estimated one daily\
    \ value for the ϕp at a depth of 15 cm in the ﬁeld. In this case, there was no\
    \ need for preprocessing the data using the outlier removal techniques. \n\nThey\
    \ found that the use of global approach data saved an average of 56.4% and that\
    \ the local approach without data preprocessing saved 100% of the IWN on average.\
    \ \n\nThe Zscore and MZscore methods tended to treat outliers by removing values\
    \ that decreased the current moisture θc (Figure 8a). Therefore, they reduced\
    \ the result of the local predicted data by 90% and 75.6%, respectively, for water\
    \ balance. The employment of Chauvenet for the local approach data also saved\
    \ 90% of IWN on average since it almost achieved the performance of Zscore (Figure\
    \ 8b). The use of GESD did not affect the local approach predicted data (Figure\
    \ 8b), such that it had almost the same water savings as when no outlier removal\
    \ technique was employed (Table 6). \n\nFor the matric potential (Equation (A2))\
    \ executed daily, irrigation occurs when the current moisture θc is minor or equal\
    \ to the critical moisture condition θcr, which is the ideal moisture for irrigation,\
    \ signaling when the crop productivity is starting to decline. To compare the\
    \ results of using the predicted data, they used as a baseline the IWN estimated\
    \ by the matric potential using real moisture data without an outlier removal\
    \ technique. \n\nThe authors found that the use of the global approach data saved\
    \ an average of 53.1% when compared to the IWN baseline, and the use of local\
    \ approach data without preprocessing saved 100% (Table 6). The Zscore, MZscore,\
    \ and Chauvenet techniques tended to remove the outliers that decreased the moisture\
    \ values, setting the current moisture higher than the critical condition (Figure\
    \ 9).\n\nOverall, the authors conclude that the best approach for their purposes\
    \ is to use the local approach with the Gradient Boosting algorithm. This approach\
    \ achieved high performance on their dataset, and it can be used to preprocess\
    \ soil moisture data with outlier removal criteria and techniques of Zscore, MZscore,\
    \ GESD, and Chauvenet to provide a more precise irrigation water need (IWN) in\
    \ irrigation management."
  authors:
  - Nídia G. S. Campos
  - Atslands Rego da Rocha
  - Rubens Sonsol Gondim
  - Ticiana L. Coelho da Silva
  - Danielo G. Gomes
  citation_count: 45
  full_citation: 'Smart & Green: An Internet-of-Things Framework for Smart Irrigation'
  full_text: ">\nsensors\nArticle\nSmart & Green: An Internet-of-Things Framework\
    \ for\nSmart Irrigation\nNidia G. S. Campos 1,2,*\n, Atslands R. Rocha 1\n, Rubens\
    \ Gondim 3\n,\nTiciana L. Coelho da Silva 4\nand Danielo G. Gomes 1\n1\nGrupo\
    \ de Redes de Computadores, Engenharia de Software e Sistemas (GREat), Departamento\
    \ de\nEngenharia de Teleinformática, Centro de Tecnologia, Campus do Pici, Avenida\
    \ Mister Hull, s/n,\nBloco 942-A, Fortaleza 60.455-760, CE, Brazil; atslands@ufc.br\
    \ (A.R.R.); danielo@ufc.br (D.G.G.)\n2\nDepartamento de Telematica, Instituto\
    \ Federal do Ceara, Campus Fortaleza, Avenida Treze de Maio, 2081,\nBenﬁca, Fortaleza\
    \ 60.040-531, CE, Brazil\n3\nEmbrapa Agroindustria Tropical, Rua Dra. Sara Mesquita,\
    \ 2270, Planalto do Pici,\nFortaleza 60511-110, CE, Brazil; rubens.gondim@embrapa.br\n\
    4\nInstituto UFC Virtual, Universidade Federal do Ceará, Av. Humberto Monte, s/n,\
    \ bloco 901, 1o andar. CEP,\nFortaleza 60.440-554, CE, Brazil; ticianalc@ufc.br\n\
    *\nCorrespondence: nidia@ifce.edu.br\nReceived: 5 November 2019; Accepted: 14\
    \ December 2019; Published: 29 December 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\
    \x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: Irrigation is one of the most water-intensive\
    \ agricultural activities in the world, which has\nbeen increasing over time.\
    \ Choosing an optimal irrigation management plan depends on having\navailable\
    \ data in the monitoring ﬁeld. A smart agriculture system gathers data from several\
    \ sources;\nhowever, the data are not guaranteed to be free of discrepant values\
    \ (i.e., outliers), which can\ndamage the precision of irrigation management.\
    \ Furthermore, data from different sources must ﬁt\ninto the same temporal window\
    \ required for irrigation management and the data preprocessing\nmust be dynamic\
    \ and automatic to beneﬁt users of the irrigation management plan.\nIn this\n\
    paper, we propose the Smart&Green framework to offer services for smart irrigation,\
    \ such as data\nmonitoring, preprocessing, fusion, synchronization, storage, and\
    \ irrigation management enriched\nby the prediction of soil moisture. Outlier\
    \ removal techniques allow for more precise irrigation\nmanagement. For ﬁelds\
    \ without soil moisture sensors, the prediction model estimates the matric\npotential\
    \ using weather, crop, and irrigation information. We apply the predicted matric\
    \ potential\napproach to the Van Genutchen model to determine the moisture used\
    \ in an irrigation management\nscheme. We can save, on average, between 56.4%\
    \ and 90% of the irrigation water needed by applying\nthe Zscore, MZscore and\
    \ Chauvenet outlier removal techniques to the predicted data.\nKeywords: IoT;\
    \ smart agriculture; soil moisture prediction\n1. Introduction\nAgricultural activities\
    \ presently use 70% of the withdrawn freshwater in the world [1]. Therefore,\n\
    it is of fundamental importance that we apply irrigation management, especially\
    \ in semiarid regions\nwith a scarcity of rainfall. Irrigation management is a\
    \ part of precision agriculture, in which the correct\namount of water artiﬁcially\
    \ delivered to a ﬁeld to satisfy the crop needs and the real production of the\n\
    users is analyzed [2].\nThe irrigation must supply the crop water needs at different\
    \ developmental stages in a given\nlocal. Irrigation management is used to detect\
    \ when to irrigate, the amount of water needed, and the\nirrigation frequency,\
    \ based on the monitoring of crop evapotranspiration and soil moisture conditions.\n\
    Crop evapotranspiration measures the water consumption by crops, according to\
    \ the developmental\nSensors 2020, 20, 190; doi:10.3390/s20010190\nwww.mdpi.com/journal/sensors\n\
    Sensors 2020, 20, 190\n2 of 25\nstage of the crop and the weather conditions [3].\
    \ The soil moisture impacts the amount of irrigation\nwater given to the crop,\
    \ as irrigation management takes into account the level of water retention in\
    \ the\nsoil. Therefore, precision agriculture can reduce water consumption in\
    \ irrigation by considering the\ngroundwater available to the crop [2].\nThe choice\
    \ of the best irrigation management plan depends on the data available from the\n\
    monitoring ﬁeld. A smart agriculture system gathers and processes data for irrigation\
    \ management\nfrom several sources using computer science and information technology\
    \ [4]. Users can provide\nthe features of different types of crop, soil, and irrigation\
    \ system, as well as the readings of analog\ntensiometers. Tensiometers are soil\
    \ sensors that detect the matric potential, which are used to estimate\nthe moisture\
    \ at different depths and monitoring points in a ﬁeld. Automatic weather stations\
    \ [5] can\nprovide public data through the Internet. Moreover, the ﬁeld may have\
    \ sensors and actuators which\ncan interact with each other as objects of the\
    \ Internet of Things (IoT) in order to provide services\ntransparently to the\
    \ users [6]. Such services are related to irrigation management for monitoring\n\
    (i.e., water, soil, and air) and prediction (weather and soil conditions).\nHowever,\
    \ data are not free of discrepant values (i.e., outliers), which can negatively\
    \ affect the\nprecision of irrigation management. Furthermore, data from different\
    \ sources must ﬁt into the\nsame temporal window required for the irrigation management\
    \ and the data preprocessing must be\ndynamic and automatic for researchers, engineers,\
    \ and owners or farmers to beneﬁt from the irrigation\nmanagement plan. Data fusion\
    \ is required to improve the quality of soil data in the case where several\n\
    sources provide the same type of data (e.g., moisture) from the ﬁeld [7]. Data\
    \ fusion also informs the\ndecision whether to start irrigation or not in irrigation\
    \ management that makes use of other types of\ndata (such as weather or crop data).\n\
    In this paper, we propose the Smart&Green framework to offer services for smart\
    \ irrigation,\nsuch as data monitoring and control, preprocessing, fusion, synchronization,\
    \ storage, and irrigation\nmanagement enriched by the prediction of soil moisture.\
    \ The Smart&Green services are modular\ncomponents which facilitate the reuse\
    \ and customization of code, which are challenges/limitations to\napplying IoT\
    \ in the smart agriculture context [8]. Our framework allows users to set the\
    \ data sources:\nThe nearest weather station, the moisture sensors (analog or\
    \ digital), the type of crop, and the features\nof the irrigation system in the\
    \ monitored ﬁeld. Therefore, Smart&Green also contributes to the solution\nof\
    \ another challenge in applying IoT for the purpose of smart agriculture: The\
    \ integration of the actual\ninfrastructure of the users (i.e., devices, machines,\
    \ and software) [9].\nSmart&Green recommends the best irrigation management plan,\
    \ according to the conﬁguration\nof the monitored ﬁeld. The framework also synchronizes\
    \ weather and soil data, as well as the crop\nstage for the chosen irrigation\
    \ management plan. The Fusion service allows for the deﬁnition of outlier\nremoval\
    \ criteria for the weather and soil data. The fusion service also applies the\
    \ outlier removal\ntechniques Chauvenet, Z-Score, Modiﬁed Z-Score, and Generalized\
    \ ESD before data aggregation,\nin order to obtain general information about the\
    \ soil conditions of a ﬁeld. Our results show that it\nmakes irrigation management\
    \ more precise, therefore saving water.\nFor ﬁelds without soil moisture sensors,\
    \ the prediction module estimates the soil moisture to\nmake the amount of water\
    \ irrigated more precise. In this work, we propose a computational model to\n\
    predict the matric potential based on weather data available at public stations\
    \ [5], crop information,\nand the amount of irrigation water used. As another\
    \ contribution, we provide to the scientiﬁc\ncommunity a public data set containing\
    \ the matric potential and irrigation data for cashew cultivation\nin an experimental\
    \ ﬁeld. The matric potential is the critical variable in measuring the soil moisture.\n\
    The computational model reduces the cost of equipment and energy, as the model\
    \ allows farms\nto estimate the moisture without soil sensors for the same soil\
    \ type. We evaluate the performance\nof a set of popular machine learning techniques\
    \ which have been widely applied to solve regression\nproblems. We measure the\
    \ quality of the models without feature selection using the RMSE (Root Mean\n\
    Squared Error) and the MAE (Mean Absolute Error) as metrics. Our results show\
    \ that the combination\nSensors 2020, 20, 190\n3 of 25\nof predicted data and\
    \ the outlier removal techniques can save an average between 56.4% and 90% of\n\
    irrigation water, estimated by water balance management.\nThe rest of the paper\
    \ is structured as follows: In Section 2, a literary review of IoT platforms for\n\
    Smart Agriculture is presented. Section 3 describes the structure and services\
    \ of the Smart&Green\nframework. Section 4 relates the materials and method of\
    \ the implementation of Smart&Green,\nespecially for the soil moisture prediction\
    \ evaluation. The results are given in Section 5, and we\ndiscuss our contributions\
    \ in Section 6. Appendix A gives details about irrigation management using\nSmart&Green,\
    \ and we formalize the problem of soil moisture prediction in Appendix B.\n2.\
    \ Related Work\nWe carried out a systematic literature review to ﬁnd the works\
    \ which have answered the following\nresearch questions:\n1.\nWhat software exists\
    \ for agricultural management that automates the process of gathering,\npreprocessing,\
    \ fusing, and synchronizing the data used in irrigation management?\n2.\nDoes\
    \ the software implement the well-known irrigation management approaches of matric\n\
    potential (Equation (A2)) and water balance (Equation (A3))?\n3.\nDoes the software\
    \ forecast the soil moisture?\n4.\nCan users conﬁgure the software using information\
    \ about their crops, irrigation system, soil\nsensors, and weather stations close\
    \ to the monitored ﬁeld?\nMost of the discovered papers have partially answered\
    \ the research questions above. To our best\nknowledge, there have been almost\
    \ no Internet of Things (IoT) platforms introduced that provide the\nservices\
    \ required for smart irrigation, such as the gathering, preprocessing, synchronization,\
    \ and fusion\nof data; the planning and execution of irrigation management; or\
    \ soil moisture prediction.\nSeveral studies have only addressed the gathering\
    \ and visualization of weather and soil data\n(Section 2.1). Some works focused\
    \ on data preprocessing by applying outlier detection algorithms\n(Section 2.2).\
    \ Some approaches used speciﬁc methods to decide when to irrigate, whereas others\
    \ have\nimplemented water balance and matric potential (Section 2.3). Soil moisture\
    \ prediction using machine\nlearning techniques applied to crop data, satellite\
    \ images, and irrigation management information\nhas been investigated (Section\
    \ 2.4). In addition, IoT platforms have been studied, which should be\nﬂexible\
    \ enough to allow users to conﬁgure them for different monitoring cases in smart\
    \ agriculture\n(Section 2.5).\n2.1. Data Gathering\nIn general, most of the sensor\
    \ nodes used to monitor soil data (such as temperature, humidity,\nand matric\
    \ potential) and weather data (such as temperature and relative humidity) are\
    \ operated\nusing open, low-cost hardware platforms such as the Arduino [10–14]\
    \ or Raspberry Pi [15–17].\nZigbee [11,17–19], LoRa [16], Wiﬁ [20], Bluetooth\
    \ [14], GSM [12], and GPRS [21] are the predominant\nwireless technologies used.\n\
    Our proposal allows users choose between the CoAP [22] and MQTT [23] protocols\
    \ for sending\ndata to Smart&Green framework storage and later irrigation management.\
    \ For devices that we can not\nturn into a sensor node, such as analog tensiometers,\
    \ our framework has a mobile application with\nwhich users can gather data manually.\
    \ The framework also allows users to choose, as a weather data\nsource, the Brazilian\
    \ automatic weather station nearest to the monitored ﬁeld, from which data can\
    \ be\ngathered via HTTP.\n2.2. Data Preprocessing\nOther approaches have processed\
    \ soil data to detect outliers [24,25] and treat data using noise\nﬁltering techniques\
    \ [26]. One system applied an EKF (Extended Kalman Filter) to the soil moisture\n\
    Sensors 2020, 20, 190\n4 of 25\ndata before the execution of irrigation management,\
    \ in order to avoid the actuators inappropriately\nstarting the irrigation [27].\n\
    The pattern recognition of water consumption by a crop radicular system, presented\
    \ in [28],\nis an outlier detection technique based on a time-series analysis\
    \ of soil moisture gathered at several\ndepths before, during, and after irrigation.\
    \ This technique allows for the identiﬁcation of sensors with\npoor operation,\
    \ which indicates the need for calibration or change.\nOur proposed framework\
    \ allows users to deﬁne criteria for outlier removal for each type of\nweather\
    \ and soil data used in irrigation management. Our framework also gives the option\
    \ to execute\nsuch algorithms as Chauvenet, Z-Score, Modiﬁed Z-Score, and Generalized\
    \ ESD (Extreme Studentized\nDeviation) to remove outliers and fuse soil moisture\
    \ data, in the case when a ﬁeld has several soil\nsensors monitoring at different\
    \ depths.\n2.3. Irrigation Management\nOther works have automatically started\
    \ irrigation by implementing algorithms for analyzing the\ndata gathered by a\
    \ wireless sensor node. In one study, an algorithm based on decision trees used\
    \ the\nsoil temperature and moisture to determine the irrigation time and the\
    \ needed amount of water [29].\nCrisp rules (IF-THEN) were used to compare threshold\
    \ values with the soil moisture gathered by\nsensors, in order to decide whether\
    \ to turn on the sprinklers of an irrigation system, in [30,31].\nDecision support\
    \ platforms for the execution of traditional irrigation management, such as\n\
    the matric potential (Equation (A2)) and water balance (Equation (A3)), have been\
    \ introduced.\nThese systems allow agronomists and farm owners to manage Internet\
    \ of Things (IoT) components\nfor ﬁeld monitoring. The matric potential management\
    \ uses soil data gathered by sensor nodes and\nimages captured by unmanned aerial\
    \ vehicles to correctly estimate the irrigation water need [32].\nWeb systems\
    \ have been used for the planning and execution of irrigation management. Beyond\
    \ the\nvisualization of soil moisture and weather data gathered by wireless sensor\
    \ nodes, these systems\nuse crisp rules for data analysis and, when it is necessary,\
    \ the systems send messages to their users\nin order to notify about irrigation\
    \ times [33] or activate the irrigation system automatically [34,35].\nIn other\
    \ approaches, the system takes the rainfall forecast (available on the Internet)\
    \ into account when\ndeciding whether to activate the irrigation system [36].\
    \ A wireless sensor network can also plan and\nexecute irrigation management [37].\
    \ In this case, the sensor nodes gather and analyze soil moisture\ndata and turn\
    \ the irrigation system on until the moisture achieves the ﬁeld capacity.\nA SCADA\
    \ (Supervisory Control and Data Acquisition) system can automatically carry out\
    \ the data\ngathering, planning, and execution of the water balance management\
    \ (see Equations (A3) and (A4)).\nThe soil sensor nodes are also actuators, which\
    \ control the irrigation and send data continually to\na management system. The\
    \ system receives data from a weather station on the farm to estimate the\nreference\
    \ evapotranspiration ETo. The system also utilizes the curve of the crop coefﬁcient\
    \ kc, choosing\nits value according to the current developmental stage of the\
    \ crop [38].\nThe water balance and matric potential approaches often must take\
    \ data synchronization into\naccount. Therefore, some applications have synchronized\
    \ the data of previously registered crops,\nas well as soil and weather data,\
    \ to precisely determine the irrigation water need for the current\ndevelopmental\
    \ stage of the crop [39–42].\nThe existing systems described in this section are\
    \ not ﬂexible enough to allow users to set the\nfeatures of a monitored ﬁeld,\
    \ such as the type of crop, the type and number of soil sensors, and irrigation\n\
    system parameters used. The systems usually work with a predeﬁned conﬁguration\
    \ and infrastructure.\nTherefore, code reuse is impracticable for the irrigation\
    \ management of agricultural ﬁelds which do not\nﬁt to the existing system conﬁguration.\
    \ Our proposal allows users to register relevant information for\nirrigation management:\
    \ Different types of crops, soil features, irrigation systems, data sources (weather\n\
    or soil), and outlier removal criteria. In this work, the framework plans the\
    \ irrigation management\nusing the matric potential (Equation (A2)) and water\
    \ balance (Equation (A3)) approaches.\nSensors 2020, 20, 190\n5 of 25\nFurthermore,\
    \ none of the systems could forecast the moisture levels in ﬁelds without soil\
    \ sensors.\nOur proposal implements computational models to predict soil moisture\
    \ based on weather data, crop\ninformation, and irrigation water need (IWN) (see\
    \ Appendix B). In this work, we include the predicted\ndata in the water balance\
    \ management, obtaining between 56.4% and 90% of IWN savings over six\nmonths\
    \ (Section 5.3).\n2.4. Soil Moisture Prediction\nIn [43], the Linear Regression,\
    \ Decision Tree, Random Forest, and Gradient Boosting with\nRegression Tree (GBRT)\
    \ machine learning (ML) techniques were applied to weather and soil sensor\ndata\
    \ (moisture and drought stress) to predict the best irrigation plan for a jojoba\
    \ crop. The GBRT\nmodel outperformed the others and, so, the decision support\
    \ service incorporated it as a module of\nthe system. A model based on support\
    \ vector regression (SVR) and k-means ML techniques which\nused weather data and\
    \ forecasts, as well the soil data (temperature and moisture), to forecast the\
    \ soil\nmoisture has also been investigated [44].\nIn [45], an integrated system\
    \ to monitor drought in northern China using satellite images (NOAA,\nMODIS, and\
    \ FY3A), weather stations, and soil data has been discussed. The drought forecasting\n\
    used the matric potential at the depth of the crop root, the water balance model,\
    \ depletion indices,\nand measurements of crop stress to estimate the soil moisture\
    \ and the water quantity needed for\nan extended period.\nIn this work, we apply\
    \ weather data, crop information, and the amount of irrigation water used\nin\
    \ a computational model, in order to estimate the daily matric potential of the\
    \ most superﬁcial soil\nlayer (Appendix B), which signals when the crop needs\
    \ irrigation [2]. We apply the predicted value in\nthe Van Genutchen model (Equation\
    \ (A1)) to obtain the soil moisture used in irrigation management\n(Equations\
    \ (A2) and (A3)) for ﬁelds without soil moisture sensors (i.e., Field 1 of Figure\
    \ A1).\nWe present two different approaches: Local and global prediction models.\
    \ In the local method,\nwe create a prediction model for each monitoring point\
    \ in an experimental ﬁeld (Section 4.2). In the\nglobal approach, we create a\
    \ single model which can be generalized to any monitoring point. We have\nevaluated\
    \ the performance of a set of popular ML techniques which have been widely applied\n\
    to solve regression problems: Linear Regression [46], Decision Stump [47], M5\
    \ Model Trees and\nRules [48,49], Random Tree, Random Forest [50], RepTree, and\
    \ GBRT [51,52]. Our results show that\nGBRT outperforms the other evaluated techniques\
    \ in both approaches.\n2.5. IoT Platforms for Smart Agriculture\nSWAMP (Smart\
    \ Water Management Platform), introduced in [53], is one of the related methods\n\
    which is most similar to our proposal. SWAMP has components to allow for the implementation\
    \ of\ndifferent IoT applications for irrigation management, based on the crop\
    \ and soil moisture approaches.\nUsers can customize the services for the gathering\
    \ (MQTT or LoRa), processing, and synchronization\nof data with different types\
    \ of crops, weather, and country. Therefore, different ﬁeld conﬁgurations\ncan\
    \ reuse these services for data analysis and storage, highlighting the excellent\
    \ ﬂexibility of SWAMP.\nHowever, their techniques for the processing and the fusion\
    \ of data have not been detailed, and no\napplication or service for the prediction\
    \ of soil moisture has been provided.\nThe Agro-IoT framework, introduced in [54],\
    \ is also related to our proposal, which provides\nusers real-time data gathering,\
    \ aggregation (fusion), and analysis in the context of smart farming.\nAgro-IoT\
    \ reuses several components to implement IoT applications, according to the needs\
    \ of the\nmonitored ﬁeld. Agro-IoT provides similar services to our proposed method;\
    \ that is, it also provides\nthe management of devices (i.e., registration of\
    \ sensors and actuators) and event detection through\ndata analysis. However,\
    \ it does not contain modules for data synchronization and outlier removal or\n\
    soil moisture prediction.\nSensors 2020, 20, 190\n6 of 25\n3. Proposal\nIn this\
    \ paper, we propose Smart&Green: An Internet of Things (IoT) framework for the\
    \ smart\nagriculture domain. A framework consists of “a speciﬁc implementation\
    \ of a skeleton of infrastructure used\nfor the conception of a work” [55]. Work\
    \ is any activity performed by users or software. In this proposal,\nthe work\
    \ consists of the planning of irrigation management (Appendix A). In ﬁelds where\
    \ there are\nno soil moisture sensors, a computational model can estimate the\
    \ soil moisture for the same soil type\nusing weather, crop, and irrigation data.\
    \ Agronomists, researchers, and farmers conduct irrigation\nmanagement through\
    \ software which uses Smart&Green. Figure 1 presents the conceptual architecture\n\
    of Smart&Green, divided into four layers: Application, Services, Communication,\
    \ and Physical.\nFigure 1. Conceptual architecture of the Smart&Green IoT Framework\
    \ for Smart Agriculture.\nIn software engineering, a framework can also be “a\
    \ mini architecture that can be reused and that\nprovides behavior and a generic\
    \ structure for a family of software abstractions in a context that speciﬁes the\n\
    collaboration and use of them into a given domain” [56]. Therefore, given the\
    \ smart agriculture domain and\nthe context of smart irrigation, the Smart&Green\
    \ framework speciﬁes the structure of a set of concrete\nand abstract classes\
    \ to implement modules for the gathering, storage, synchronization, and fusion\
    \ of\ndata, as well as mathematical models (Appendix A) which describe irrigation\
    \ management. Irrigation\nmanagement determines the behaviors of the classes and\
    \ modules. As a mini architecture, the proposed\nframework can be reused with\
    \ different smart agriculture software with the generic functionalities of\nirrigation\
    \ management.\n3.1. Application Layer\nThe application layer provides facilities\
    \ for the automatization of irrigation management\n(Appendix A) and soil moisture\
    \ prediction. Through this layer, users of an agriculture management\nsystem can\
    \ insert information about the farm infrastructure: The types of crops and irrigation\
    \ system\nto each monitored ﬁeld, the monitored soil layers, and the weather stations\
    \ closest to the farm.\nSensors 2020, 20, 190\n7 of 25\n3.1.1. Irrigation Management\
    \ Automatization\nThe Matric Potential and Water Balance modules implement well-known\
    \ irrigation management\nmethods (Appendix A). These modules use information registered\
    \ by users as well as that from\nweather and soil data sources. Smart&Green selects\
    \ the best irrigation management based on the data\navailable. The principal functions\
    \ of the Register Module are as follows:\n1.\nUser register: Smart&Green framework\
    \ allows two types of users: Specialist and regular. Specialist\nusers can provide\
    \ agronomic information, such as different types of crops, soil, and irrigation\n\
    system features. They can also register outlier removal criteria for weather and\
    \ soil data and\nchoose algorithms for the fusion service. Regular users can register\
    \ farms and ﬁelds.\n2.\nFarm Register: Users provide information about the farm,\
    \ such as address and geographical\nco-ordinates (i.e., latitude and altitude)\
    \ for the Smart&Green framework, and select the weather\nstation closest to the\
    \ farm.\n3.\nCrop register: A specialist user can create types of crops using\
    \ information such as a description,\nthe curve of the crop coefﬁcient, and the\
    \ critical moisture condition.\n4.\nSystem Irrigation Register: A specialist user\
    \ inserts the type of irrigation systems, such as\n“micro-sprinkler”.\n5.\nWeather\
    \ Station Register: Smart&Green automatically selects the weather station closest\
    \ to the farm\nusing the geographical co-ordinates. Users can conﬁrm this or choose\
    \ another one.\n6.\nSoil Sensor Register: The user can insert the types of soil\
    \ sensors used. Smart&Green already has\nanalog and digital tensiometers.\n7.\n\
    Field Register: Users set the ﬁeld conﬁguration features (Figure A1), such as\
    \ the type of crop,\nirrigation system, soil, and if there are soil monitoring\
    \ points. The developmental stage of the crop\nrepresents the number of days since\
    \ the initial cultivation. Effective precipitation (mm/h) and\nefﬁciency of the\
    \ irrigation system are necessary for irrigation management, in order to compute\n\
    the irrigation time. In the case of monitoring points, users can register the\
    \ type of soil moisture\nsensor (analog or digital) and the depth z monitored\
    \ for each monitoring point in the ﬁeld.\n8.\nField Communication register: In\
    \ the case where the monitored ﬁelds have sensor nodes that\nautomatically gather\
    \ soil data, users can deﬁne the type of communication to send the data to the\n\
    framework. Users set the IP address and speciﬁc conﬁguration (CoAP or MQTT).\n\
    9.\nOutlier Removal Criteria Register: Specialist users can create a threshold\
    \ for minimum and\nmaximum values of each type of weather and soil moisture data\
    \ used in irrigation management.\nThe Smart&Green framework suggests an irrigation\
    \ management plan, according to the data of\na registered ﬁeld. For ﬁelds without\
    \ soil moisture sensors (Field 1 of Figure A1), Smart&Green indicates\nthe water\
    \ balance without soil moisture data (i.e., without the term ∆A in Equation (A3))\
    \ or the water\nbalance with the soil moisture data created by the soil moisture\
    \ prediction module (Section 3.1.2).\nFor ﬁelds with soil moisture sensors (see\
    \ Fields 2 and 3 of Figure A1), the framework calculates the\nmatric potential\
    \ (Equation (A2)) or water balance using the soil moisture data.\n3.1.2. Soil\
    \ Moisture Prediction\nIn this work, we address a large ﬁeld (over 7500 m2) to\
    \ produce one type of crop on a large scale,\nin which the soil is monitored by\
    \ a hundred tensiometers (i.e., soil moisture sensors) at three different\ndepths.\
    \ To investigate this scenario, we present the local and global approaches, which\
    \ can be used to\nlearn a prediction function ˆf (Appendix B).\nThe local approach\
    \ creates a different prediction function ˆfi for each tensiometer at the superﬁcial\n\
    soil layer of the ﬁeld. For this, it uses the observations recorded by a tensiometer\
    \ bi and a weather\nstation ms, as well the water amount wi given to the crop\
    \ and the crop coefﬁcient kc related to the\ncurrent life stage of the crop. The\
    \ local approach deﬁnes the prediction ˆf in terms of n different\nSensors 2020,\
    \ 20, 190\n8 of 25\nfunctions ˆfi for local predictions. However, if a ﬁeld has\
    \ a large number of tensiometers, a large\nnumber of distinctive prediction models\
    \ must be trained.\nThe global approach creates only one prediction function ˆfi\
    \ using the information from all\ntensiometers. Therefore, the global prediction\
    \ model might not ﬁt some individual tensiometers.\nThe Smart&Green framework\
    \ implements the prediction model as a modular service (Figure 2)\nto complement\
    \ the irrigation management of ﬁelds without soil moisture sensors (e.g., ﬁeld\
    \ 1 in\nFigure A1). The framework automatically retrieves and stores the meteorological\
    \ data set Mms\npublished on the Internet by weather stations. We deﬁned Mms in\
    \ Appendix B.\nFigure 2. Smart&Green Module for soil moisture prediction.\nThe\
    \ framework daily preprocesses the Mms data to remove possible outliers. The module\
    \ of soil\nmoisture prediction estimates the matric potential ψp of a ﬁeld, based\
    \ on (M′\nms, W, kc) (Appendix B).\nThe irrigation management module computes\
    \ the current soil moisture θc by applying ψp on the Van\nGenutchen [57] model,\
    \ following Equation (A1). Then, the obtained θc is applied to Equation (A2)\n\
    or (A3) to calculate the irrigation water need (IWN).\nIn the Internet of Things\
    \ (IoT) context, the framework sends the IWN value to an actuator to\nstart the\
    \ irrigation system. The irrigation system stops when the ﬁeld receives the amount\
    \ of water\nspeciﬁed by the IWN. Although this present work does not handle an\
    \ automatic irrigation system,\nthis issue is a concern for the full implementation\
    \ of an IoT system for smart farms.\n3.2. Service Layer\nThe Service layer supports\
    \ the Application layer by storing data provided by Smart&Green users\nand synchronizing\
    \ crop, weather station, and soil data when required by any irrigation management\n\
    module. The Service layer also carries out fusion tasks for data of soil moisture\
    \ sensors (e.g., ﬁelds 2\nand 3 of Figure A1) or the soil moisture prediction.\n\
    The Storage service provides centralized data persistence for the monitoring of\
    \ weather, crop,\nand soil data in the ﬁelds. The Synchronization service selects\
    \ the crop coefﬁcient kc which is\nappropriate to the current development stage\
    \ of the crop and retrieves the weather data Mms for\nthe period needed for irrigation\
    \ management. The service also requests the Communication layer for\nnew data\
    \ from the Internet, if needed.\nIn the case of soil data, the Synchronization\
    \ service selects data from all monitoring points\nBTc in the ﬁeld, taking into\
    \ account the period of irrigation management. If there are no data\navailable,\
    \ the service requests new data from the user (ﬁeld 2 of Figure A1) or the Communication\n\
    Sensors 2020, 20, 190\n9 of 25\nlayer (Field 3 of Figure A1). Finally, the Synchronization\
    \ service makes the data set composed of\n{kc,current, Mms,period, BTc,period}\
    \ available.\nThe Irrigation Management Modules use the Fusion service if there\
    \ is a ﬁeld with monitoring\npoints, each with one or more soil moisture sensors\
    \ (e.g., tensiometers) at different depths z (e.g.,\nﬁelds 2 and 3 of Figure A1).\
    \ The Fusion service can also treat data created in soil moisture prediction\n\
    when irrigation management is required for ﬁelds without soil moisture sensors.\
    \ Data fusion consists\nof processing the data to detect and remove outliers (DRO)\
    \ and submitting data to a co-operative\nfunction (CF), according to a multilevel\
    \ data fusion architecture [58].\nDRO tasks apply criteria and algorithms deﬁned\
    \ by specialist users to immediately detect and\nremove outliers. The Register\
    \ module of the Application layer allows for the creation of threshold\nvalues\
    \ for soil data. DRO algorithms are speciﬁc to the soil layer monitored. According\
    \ to [58],\nthe Z-score is more efﬁcient for data series at the most superﬁcial\
    \ soil layer (e.g., z = 15 cm). In contrast,\nthe Generalized ESD (Extreme Studentized\
    \ Deviate) algorithm works well with data at depth of\nz = 45 cm. The Smart&Green\
    \ framework has implementations of the Chauvenet, Z-Score, Modiﬁed\nZ-Score, and\
    \ Generalized ESD algorithms.\nA co-operative function (CF) [59] aggregates one\
    \ type of data gathered at different monitoring\npoints of a ﬁeld. Smart&Green\
    \ uses the mean function as the CF to aggregate soil moisture data at the\nsame\
    \ depth. For example, Field 2 of Figure A1 has six monitoring points at two depths.\
    \ Therefore,\nthe framework calculates the mean of each set of six samples gathered\
    \ at a given depth z. After fusion,\nthe data are ready for irrigation management\
    \ at the Application layer, which decides whether irrigation\nshould be started.\n\
    3.3. Communication Layer\nThe Communication Layer has a set of software to gather\
    \ weather and soil data through network\nprotocols. This includes a weather client,\
    \ four soil clients, three soil servers, and a gateway (see\nFigure 3). The weather\
    \ client consists of an HTTP client which downloads weather station data from\n\
    the Internet and stores them. Smart&Green offers an API to gather data from Brazilian\
    \ automatic\nweather stations [5].\nFigure 3. Interaction between the Communication\
    \ Layer and the Physical and Services Layers.\nSensors 2020, 20, 190\n10 of 25\n\
    The soil client gathers the matric potential data ψm if the ﬁeld has tensiometers\
    \ installed. If the\ntensiometers are analog, users have to manually collect the\
    \ ψm data, using a mobile application that\nsends it to the framework via HTTP.\
    \ If the tensiometers are digital, they are integrated into sensor\nnodes that\
    \ send the data to a gateway near the ﬁeld. The gateway hosts CoAP and MQTT clients,\n\
    which forward the ψm data to the servers of the framework.\n4. Materials and Method\n\
    In this section, we list the principal software components used in the implementation\
    \ of our\nproposed framework (Section 4.1). We describe what we use for soil moisture\
    \ prediction, in terms of\n(1) the weather, crop, and soil moisture information;\
    \ (2) the criteria for outlier detection and removal;\nand (3) the tested machine\
    \ learning techniques (see Section 4.2).\n4.1. Smart & Green Framework Implementation\n\
    We implemented the Smart&Green framework using the Python 3 Language. In the Application\n\
    layer (Section 3.1), irrigation management by the water balance module uses PyETo\
    \ [60] to calculate the\nreference evapotranspiration for a crop, with reference\
    \ to the Penman-Monteith Model [61]. The crop\nevapotranspiration measures the\
    \ water consumption by crops, according to the developmental stage\nof the crop\
    \ and weather conditions [3]. The Service Layer uses the MySQL database [62] to\
    \ support the\nStorage service. The PyAstronomy library [63] provides the implementation\
    \ of the Generalized ESD\n(Extreme Studentized Deviate) algorithm for the Fusion\
    \ Service.\nThe aiocoap package [64] supports the implementation of the CoAP client\
    \ and server of the\nCommunication layer (Section 3.3). The MQTT client uses the\
    \ Eclipse Paho MQTT client library [65],\nand we used Mosquito as the MQTT server\
    \ [66]. Our API for the acquisition of weather data operates\nby scraping the\
    \ web page of the automatic Brazilian weather stations [5] using the libraries\
    \ requests [67]\nand beautifulsoup4 [68], as well the frameworks Django [69] and\
    \ Django rest [70]. We implemented\nthe mobile application for soil moisture gathering\
    \ from ﬁelds with analog tensiometers (e.g., ﬁeld 2 of\nFigure A1) in the Javascript\
    \ language through the Firebase platform [71], React Native framework [72],\n\
    Realm [73], and React Native Firebase [74] libraries.\nWe also provide a web interface\
    \ for the\nSmart&Green Framework developed using Django [69]. Smart&Green was\
    \ run on a machine with\n2 GB of RAM, 20 GB of hard disk storage, and the Ubuntu\
    \ 18.04LTS OS.\nFor farm ﬁelds with sensor nodes, such as ﬁeld 3 of Figure A1,\
    \ we used an Arduino Pro Mini and\nthree Irrometer Watermark 200SS [75] digital\
    \ tensiometers to implement a sensor node which gathers\nsoil moisture data at\
    \ 15, 45, and 75 cm. The watermark measures the soil water tension (i.e., matric\n\
    potential), which ranges from 0 to 200 CBar/KPa. The sensor nodes use four AA\
    \ alkaline batteries of\n1.5 v as the power source. We modify the Arduino removing\
    \ the voltage controller and LEDs to the\nnode has a longer operating life. Sensor\
    \ nodes send soil data through an nRF24L01 with an external\nanthem and power\
    \ ampliﬁer. The nRF24L01 is a single-chip radio transceiver for the 2.4–2.5 GHz\
    \ ISM\nband. After data transmission, the sensor node hibernates for an hour to\
    \ save power [58]. We used\na Raspberry Pi 3 with the Raspbian OS as the gateway\
    \ to receive soil moisture data and send them by\nthe CoAP or MQTT client to storage.\n\
    4.2. Soil Moisture Prediction\n4.2.1. Raw Data Set\nWe obtained a data set of\
    \ soil moisture from an experimental cashew ﬁeld with other tropical\nraw materials\
    \ in the city of Paraibapa, Brazil [76]. The ﬁeld had approximately 250 cashew\
    \ trees with\nnine monitoring spots. Each spot had three tensiometers that allowed\
    \ manual reading of the matric\npotential at depths of 15, 45, and 75 cm. Figure\
    \ 4 shows the details of the analog tensiometers (soil\nmoisture sensors), which\
    \ provided the data set from 2016, 2017, and 2018, with 234, 245, and 138 daily\n\
    samples, respectively. It is worth mentioning that, in 2016, the ﬁeld had salvation\
    \ irrigation in which\nSensors 2020, 20, 190\n11 of 25\nwe gave 5 liters of water\
    \ for each bud whenever the installed tensiometer at a depth of 15 cm read\na\
    \ matric potential of 60 kPa. Salvation irrigation prevents plants from dying.\n\
    (a) Tensiometers at 15, 45, and 75 cm depths near a\ncashew bud.\n(b) Cashew buds.\n\
    Figure 4. Details of the Experimental Field.\nThe meteorological data set was\
    \ obtained from a Brazilian national weather station at Itapipoca\ncity, Ceara\
    \ (altitude 102 m; latitude 03◦29′ S; longitude 39◦35′ W). However, we decide\
    \ to use the\npluviometer sensor data of the ﬁeld, as the rainfall sensor of the\
    \ weather station had missing values\nover an extended period. Table 1 presents\
    \ the acronyms, the description of the variables, and the\nmeasurement data units\
    \ used in our prediction problem. We release the aggregated data set to the\n\
    scientiﬁc community to ensure the reproducibility of our results and promote research\
    \ developments\nin this ﬁeld (see Supplementary Materials).\nTable 1. Raw dataset\
    \ structure.\nAcronym\nDescription\nUnit\nTx–y\nTensiomenter reading at y depth\
    \ in a point of monitoring x\nkPa\nWx\nThe water amount given to the crop ﬁeld\
    \ in a point of monitoring x through irrigation\nL\nT_max\nmaximum temperature\
    \ of air\n◦C\nT_min\nminimum temperature of air\n◦C\nRH_max\nmaximum relative\
    \ humidity\n%\nRH_min\nminimum relative humidity\n%\nRn\nnet radiation\nMJm2d−1\n\
    U2\nwind speed\nm/s\nP\natmospheric pressure\nkPa\nRi_f\nrainfall gathered by\
    \ the pluviometer sensor\nmm\nKc\ncrop coefﬁcient\nWe apply the matric potential\
    \ ψm (kPa), and the constants in Table 2 to Van Genutchen Model\n(Equation (A1))\
    \ give the soil moisture θ in cm3 of water/cm3 of soil. We obtained in the laboratory\
    \ the\nconstants which describe the soil type of the experimental ﬁeld. The irrigation\
    \ managements use θ to\nestimate the irrigation water need (Equations (A2) and\
    \ (A3)).\nSensors 2020, 20, 190\n12 of 25\nTable 2. Van Genutchen Constants for\
    \ the Experimental Field.\nθr\nθs\nα\nn\n0.14010\n0.38839\n0.022504\n20.524\n\
    We also analyzed the soil particle composition of the experimental ﬁeld. The soil\
    \ has a medium\nsandy texture in the layer from 0 to 30 cm (805 g kg−1 of sand,\
    \ 76 g kg−1 of clay and 119 g kg−1 of silt)\nand the medium texture in the other\
    \ layers, presenting the characteristics of a red-yellow Argisol [77].\nThe maximum\
    \ organic matter content was 6.4 g dm−3; the pH varied from 5.6 to 6.3 between\
    \ the\nlayers; the capacity of cations exchange, from 31.3 to 64.8, and the sum\
    \ of maximum bases was 62% in\nthe most superﬁcial layer.\n4.2.2. Outlier Detection\
    \ and Removal\nFirst, the instances that presented Tmax, Tmin < 20, Tmax, Tmin\
    \ > 39, RHmax, RHmin < 20, and Ri >\n250 were removed, as these feature ranges\
    \ are uncommon in the city of Paraibapa. After that, the mean\nµ and the standard\
    \ deviation σ were computed for the variables P, Rn, and U2 for each month.\n\
    Afterward, we ﬁltered out data instances with anomalies; that is, the instances\
    \ with distance to µ\ngreater or equal than 3 × σ were removed, as performed in\
    \ [78].\n4.2.3. Machine Learning Methods\nWe decided to build the prediction model\
    \ using algorithms which have been widely applied to\nsolve regression problems:\
    \ Linear Regression [46], Decision Stump [47], M5 Model Trees and Rules\n(M5P)\
    \ [48,49], Random Tree, Random Forest [50], and RepTree. Weka [79] provided all\
    \ of these.\nAnother widely used algorithm is the Gradient Boosting Regression\
    \ Tree (GBRT) [51,52] method and\nits implementation XGBoost [80].\nLinear regression\
    \ is a linear model of the relationship between a scalar response (in this work,\n\
    the matric potential ψm) and one or more explanatory variables (see Table 1).\
    \ The linear model consists\nof linear predictor functions which use the data\
    \ to estimate the unknown parameters [46]. Decision\nstump models a one-level\
    \ decision tree. The tree has one root (an internal node) which connects the\n\
    leaves (terminal nodes). The model uses the value of one single feature to make\
    \ predictions [47].\nM5P produces a tree with a multilinear regression model for\
    \ each node. A greedy algorithm\nremoves the insigniﬁcant features in the model\
    \ ﬁtted to each node. Then, the terminal node computes\nnew predicted values,\
    \ considering the predicted values of other intermediate nodes between the\nterminal\
    \ node and the root node [48,49].\nRandom Tree (RT) uses if-then conditions for\
    \ answering questions in a sequential order to achieve\na speciﬁc result. The\
    \ depth of the tree consists of the number of questions needed to reach a prediction\n\
    value. Random Forest (RF) is a collection of decision trees that can use a random\
    \ subset of the features.\nTherefore, the number of trees impacts the number of\
    \ features used and limits the number of errors\ndue to bias or variance [50].\n\
    RepTree is a fast decision tree algorithm in Weka which uses information gain/variance\
    \ to build\na regression tree. Reduced-error pruning takes into account the method\
    \ backﬁtting [79]. GBRT is a\npredictive model based on a weak learner, a loss\
    \ function, and an additive model. The weak learner is\na decision tree that can\
    \ be modiﬁed to achieve better results. The additive model adds weak learners\n\
    to correct for the residual errors of all previous trees. The loss function consists\
    \ of the mean squared\nerror for regression problems [51,52].\nWe set some hyperparameters\
    \ required by RT, RF, RepTree, and GBRT with the default values\nof Weka [79]\
    \ and XGboost [80]. We set the maximum tree depth (max_depth) to 3 for GBRT and\
    \ to\nwithout restriction for the RT, RF, and RepTree methods. The number of trees\
    \ (n_estimators) was\n100 for all methods. Finally, GBRT required a third hyperparameter,\
    \ the learning rate (learning_rate),\nwhich we set to 0.1.\nSensors 2020, 20,\
    \ 190\n13 of 25\nThe training and test sets included, respectively, 80% and 20%\
    \ of the data from each soil moisture\nsensor at a depth of 15 cm. Overall, for\
    \ each possible combination, we generated a model and\npicked the model which\
    \ gave the lowest MAE (Mean Absolute Error) and RMSE (Root Mean Square\nError)—metrics\
    \ which have been widely used to measure the quality of a prediction model (see\n\
    Equations (A6) and (A7) in Appendix B).\n5. Results\nFirst, we employed the outlier\
    \ removal techniques of Fusion Service (Section 3.2) on the real\nsoil moisture\
    \ data in order to analyze the inﬂuence of these techniques on irrigation management\n\
    (Section 3.1.1) in the Smart&Green framework (Section 5.1). Then, we analyzed\
    \ the MAE and RMSE of\nthe machine learning techniques tested with the local and\
    \ global approaches (Section 3.1.2) proposed\nfor the Smart&Green soil moisture\
    \ prediction module (Section 5.2). Finally, we applied the soil moisture\ndata\
    \ created by the best prediction models for irrigation management to analyze the\
    \ water savings\n(Section 5.3).\n5.1. Impact of Outlier Removal Techniques on\
    \ Real Moisture Data by Irrigation Management\nFrom the raw data set (Section\
    \ 4.2), we selected data from from April to October/2017, since\nthere was no\
    \ salvation irrigation in the experimental ﬁeld, which could affect the irrigation\
    \ water need\n(IWN) estimated by water balance and matric potential management.\
    \ Then, we set Fusion Service\n(Section 3.2) to use an outlier removal technique\
    \ to process the matric potential ψc provided by the nine\ntensiometers (soil\
    \ moisture sensors) at 15 cm of depth in the experimental ﬁeld (Section 4.2).\
    \ Second,\nthe Fusion Service aggregated ψc data using the co-operative function\
    \ mean. After this, the modules\nof water balance and potential matric (Section\
    \ 3.1) applied the aggregated ψc to Van Genutchen\nModel (Equation (A1)) to estimate\
    \ the current soil moisture θc at the crop root zone (z = 30 cm) and\ncompute\
    \ IWN.\nWater balance management (Equation (A3)) can depend only on the crop evapotranspiration\
    \ ETc\n(Equation (A4)) and rainfall R to estimate the IWN of a crop. Therefore,\
    \ we can only use weather data\nand the crop coefﬁcient (Table 1) to plan water\
    \ balance for n days. However, the IWN estimation is\nmore precise when we can\
    \ incorporate the current soil moisture data θcz since the water storage in\n\
    the crop root zone can contribute to the crop water supply. We set water balance\
    \ to estimates IWN\nevery three days (n = 3) over six months (26 samples of n\
    \ intervals), and the results in Table 3 indicate\nthat the use of θcz saved an\
    \ average of 90.4% of the IWN estimated, as compared to that using only\nweather\
    \ and crop data.\nTable 3.\nPercentage of water saved over six months by irrigation\
    \ management using real soil\nmoisture data.\nIrrigation Management\nOutlier Removal\
    \ Technique\nMean (%)\nConﬁdence Interval (90%)\nWater Balance\nNone\n90.4\n(81.6,\
    \ 99.1)\nWater Balance\nZscore\n89.3\n(80.4, 98.3)\nWater Balance\nMZscore\n89.3\n\
    (80.4, 98.3)\nWater Balance\nGESD\n90.4\n(81.6, 99.1)\nWater Balance\nChauvenet\n\
    90.4\n(81.6, 99.1)\nMatric Potential\nZscore\n20.7\n(13.7, 27.6)\nMatric Potential\n\
    MZscore\n14.1\n(8.1, 20.1)\nMatric Potential\nGESD\n4.3\n(0.8, 7.9)\nMatric Potential\n\
    Chauvenet\n5.4\n(1.5, 9.3)\nThe preprocessing of real data with Zscore and MZscore\
    \ techniques optimized the tradeoff reasonably\nbetween IWN saving and healthy\
    \ crop development, since these outlier removal techniques decreased\nthis result\
    \ to 89.3%. Zscore and MZscore data treatment led to an increment of the moisture\
    \ θc values\n(Figure 5a), and, consequently, a reduction of the term ∆A of water\
    \ balance (Equation (A3)). GESD and\nChauvenet did not affect the moisture θc\
    \ data enough (Figure 5b), as well as IWN saving (Table 3).\nSensors 2020, 20,\
    \ 190\n14 of 25\n(a) Zscore and MZscore\n(b) GESD and Chauvenet\nFigure 5. Real\
    \ Moisture Data used in Water Balance—the points outside of the dashed lines are\
    \ the\ncurrent moisture data θcz modiﬁed by an outlier removal technique.\nThe\
    \ matric potential approach depends exclusively on the soil moisture data (Equation\
    \ (A2)),\nand we planned this irrigation management to estimate the daily IWN\
    \ over six months (121 samples of\ndays) using the current moisture θc data at\
    \ the shallowest crop root zone (e.g., z = 30 cm). In the matric\npotential approach,\
    \ irrigation occurs only when θc is minor or equal to the critical moisture condition\n\
    θcr, which is the ideal moisture for irrigation and signals when the crop productivity\
    \ is starting to\ndecline. Table 3 presents the IWN saving of matric potential\
    \ management that used an outlier removal\ntechnique when compared to the one\
    \ that did not use them. Figure 6 shows that there were several\ndays where θc\
    \ was equal to θcr (day 1 to 13). However, all outlier remotion techniques treated\
    \ various\noutliers that reduced the current moisture (e.g., 14th and 15th; 18th\
    \ and 19th; 26th days), improving\nthe water savings, on average, by 4.3% to 20.7%\
    \ (Table 3). Zscore and MZscore (Figure 6a) contributed\nmore to the tradeoff\
    \ between IWN saving and healthy crop development because they increased the\n\
    current moisture θc above the critical condition θcr in more days(e.g., the 40th\
    \ to 43th; 64th; 104th days)\nthan GESD and Chauvenet (Figure 6b).\n(a) Zscore\
    \ and MZscore\n(b) GESD and Chauvenet\nFigure 6. Real Moisture Data used in Matric\
    \ Potential — the points outside of the dashed lines are soil\nmoisture θc modiﬁed\
    \ by an outlier removal technique. Irrigation occurs when θc reaches the critical\n\
    condition θcr (red line).\nSensors 2020, 20, 190\n15 of 25\n5.2. Performance of\
    \ Models for Soil Moisture Prediction\nThe main goal of this analysis is to evaluate\
    \ and establish the best machine learning (ML)\ntechnique among those tested for\
    \ each approach (local and global prediction models). In this context,\nwe considered\
    \ analog soil sensors (tensiometers) distributed throughout a large ﬁeld (Figure\
    \ 4).\nWe compared the following ML techniques: Linear Regression, Decision Stump,\
    \ M5P, Random Tree,\nRandom Forest, RepTree, and Gradient Boosting. Through the\
    \ metrics MAE (Mean Absolute Error)\nand RMSE (Root Mean Square Error), we evaluated\
    \ the local and global approaches for the estimation\nof the matric potential\
    \ ψm—the primary variable for soil moisture prediction (Appendix B). Finally,\n\
    we used the 99% conﬁdence intervals to determine the best-performing model.\n\
    Table 4 presents the MAE and RMSE retrieved by the local approach for each prediction\
    \ algorithm.\nThe results of the local approach are the mean of the MAE and RMSE\
    \ achieved by the nine models\nbuilt for each monitoring point of the experimental\
    \ ﬁeld. Considering all the analyzed errors, Gradient\nBoosting outperformed all\
    \ the other techniques, followed by Random Forest. Both approaches\npresented\
    \ acceptable errors, according to a specialist agronomic engineer.\nTable 4. Evaluation\
    \ of ML techniques using the Local Approach: Mean of MAE and RMSE, 99%\nconﬁdence\
    \ interval. The best performers are highlighted in bold.\nAlgorithm\nMAE\nConf.\
    \ Interval MAE\nRMSE\nConf. Interval RMSE\nLinear Regression\n0.1408\n(0.1318,\
    \ 0.1498)\n0.1730\n(0.1642, 0.1818)\nDecision Stump\n0.1798\n(0.1632, 0.1965)\n\
    0.2196\n(0.2031, 0.2360)\nM5P\n0.1288\n(0.1159, 0.1416)\n0.1722\n(0.1576, 0.1868)\n\
    Random Tree\n0.1443\n(0.1319, 0.1567)\n0.2120\n(0.1877, 0.2363)\nRandom Forest\n\
    0.1189\n(0.1025, 0.1352)\n0.1551\n(0.1393, 0.1709)\nRepTree\n0.1227\n(0.1119,\
    \ 0.1336)\n0.1684\n(0.1566, 0.1801)\nGradient Boosting\n0.0752\n(0.0683, 0.0822)\n\
    0.1038\n(0.0939, 0.1137)\nTable 5 presents the MAE and RMSE retrieved by the global\
    \ approach for each algorithm. Again,\nthe Gradient Boosting algorithm achieved\
    \ the best results, compared to all other evaluated models.\nIt can be noticed\
    \ that the MAE and RSME of the Gradient Boosting model did not vary as much as\
    \ the\nother evaluated models; this means the global model generalizes well for\
    \ any data from any sensor in\nthe ﬁeld. The Local Gradient Boosting approach\
    \ outperformed the global one. However, even though\nthe global model error had\
    \ an average MAE error increase of 58.9% and average RMSE error increase\nof 45.7%,\
    \ the errors were still acceptable, according to the specialist agronomic engineer.\n\
    We also analyzed the relevance of the features of Table 1, in the context of the\
    \ local and global\napproaches. We employed Gradient Boosting as, according to\
    \ the results of this section, it has proved\nto be the best ML technique for\
    \ our purposes. XGboost [80] estimates the relevance of each feature by\ncounting\
    \ the number of times it is used in a split node of any decision tree in the Gradient\
    \ Boosting\nforest. Figure 7 presents the results. The more an attribute is used\
    \ in a decision tree, the higher its\nrelative importance is. The most-used variables\
    \ in both approaches were U2, P, Tmax, RHmin, Rn,\nand kc.\nTable 5. Evaluation\
    \ of ML techniques using the Global Approach: Mean of MAE and RMSE, 99%\nconﬁdence\
    \ interval. The best performers are highlighted in bold.\nAlgorithm\nMAE\nConf.\
    \ Interval MAE\nRMSE\nConf. Interval RMSE\nLinear Regression\n0.1628\n(0.1510,\
    \ 0.1746)\n0.1993\n(0.1881, 0.2110)\nDecision Stump\n0.1938\n(0.1812, 0.2063)\n\
    0.2335\n(0.2220, 0.2450)\nM5P\n0.1461\n(0.1348, 0.1573)\n0.1824\n(0.1706, 0.1942)\n\
    Random Tree\n0.1494\n(0.1413, 0.1574)\n0.2094\n(0.2004, 0.2183)\nRandom Forest\n\
    0.1406\n(0.1317, 0.1494)\n0.1873\n(0.1769, 0.1977)\nRepTree\n0.1438\n(0.1362,\
    \ 0.1515)\n0.1832\n(0.1740, 0.1924)\nGradient Boosting\n0.1382\n(0.1382, 0.1382)\n\
    0.1717\n(0.1717, 0.1717)\nSensors 2020, 20, 190\n16 of 25\n(a) Local Approach\n\
    (b) Global Approach\nFigure 7. Analysis of the relevance of features by gradient\
    \ boosting prediction approach.\n5.3. Analysis of Water Savings through the Use\
    \ of Predicted Data of Soil Moisture\nWe used the local and global models based\
    \ on Gradient Boosting to predict the matric potential\nψm for a ﬁeld without\
    \ soil moisture sensors over six months. The local approach estimated daily ψp\n\
    at a depth of 15 cm, as the ﬁeld had nine monitoring points. Therefore, we could\
    \ apply the outlier\nremoval techniques to treat this data set of nine daily values.\
    \ The global approach estimated one daily\nvalue for the ψp at a depth of 15 cm\
    \ in the ﬁeld. In this case, there was no need for preprocessing the\ndata using\
    \ the outlier removal techniques. We use ψp to compute predicted soil moisture\
    \ data for the\ncrop root zone (z = 30 cm) through the Van Genutchen Model (Equation\
    \ (A1)).\nFor water balance (Equation (A3)), executed every three days (n = 3)\
    \ for six months (26 samples\nof n), we compared the beneﬁts of our computational\
    \ models by analyzing how much they saved,\nin terms of the irrigation water need\
    \ (IWN) estimated using only weather and crop data. Table 6 shows\nthat the use\
    \ of global approach data saved an average of 56.4% and that the local approach\
    \ without\ndata preprocessing saved 100% of the IWN on average.\nThe Zscore and\
    \ MZscore methods tended to treat outliers by removing values that decreased the\n\
    current moisture θc (Figure 8a). Therefore, they reduced the result of the local\
    \ predicted data by 90%\nand 75.6%, respectively, for water balance. The employment\
    \ of Chauvenet for the local approach data\nalso saved 90% of IWN on average since\
    \ it almost achieved the performance of Zscore (Figure 8b).\nThe use of GESD did\
    \ not affect the local approach predicted data (Figure 8b), such that it had almost\n\
    the same water savings as when no outlier removal technique was employed (Table\
    \ 6). We consider\nthe global approach and local approach using Zscore, MZscore\
    \ and Chauvenet techniques optimized\nthe tradeoff between IWN saving and healthy\
    \ crop development, and they did not outweigh the IWN\nsavings of water balance\
    \ that used real soil moisture θc (Table 3).\nTable 6. Percentage of water saved\
    \ in six months by irrigation management using predicted soil\nmoisture data.\n\
    Irrigation\nPrediction\nOutlier Removal\nMean\nConﬁdence Interval\nManagement\n\
    Approach\nTechnique\n(%)\n(90%)\nWater Balance\nGlobal\nNone\n56.4\n(41.4, 71.5)\n\
    Water Balance\nLocal\nNone\n100\n(100, 100)\nWater Balance\nLocal\nZscore\n90.0\n\
    (85.7, 94.3)\nWater Balance\nLocal\nMZscore\n75.6\n(67.1, 84.2)\nWater Balance\n\
    Local\nGESD\n100\n(100, 100)\nWater Balance\nLocal\nChauvenet\n90.0\n(85.7, 94.3)\n\
    Matric Potential\nGlobal\nNone\n53.1\n(44.5, 61.7)\nMatric Potential\nLocal\n\
    None\n43.3\n(34.7, 51.9)\nMatric Potential\nLocal\nZscore\n95.6\n(92.1, 99.2)\n\
    Matric Potential\nLocal\nMZscore\n97.8\n(95.3, 100)\nMatric Potential\nLocal\n\
    GESD\n43.3\n(34.7, 51.9)\nMatric Potential\nLocal\nChauvenet\n62.9\n(54.6, 71.3)\n\
    Sensors 2020, 20, 190\n17 of 25\n(a) Zscore and MZscore\n(b) GESD and Chauvenet\n\
    Figure 8. Predicted Moisture Data used in Water Balance—the points outside of\
    \ the dashed lines are\nsoil moisture data θc modiﬁed by an outlier removal technique.\n\
    For the matric potential (Equation (A2)) executed daily, irrigation occurs when\
    \ the current\nmoisture θc is minor or equal to the critical moisture condition\
    \ θcr, which is the ideal moisture for\nirrigation, signaling when the crop productivity\
    \ is starting to decline. To compare the results of using\nthe predicted data\
    \ we used, as a baseline, the IWN estimated by the matric potential using real\
    \ moisture\ndata without an outlier removal technique. The use of the global approach\
    \ data saved an average of\n53.1% when compared to the IWN baseline, and the use\
    \ of local approach data without preprocessing\nsaved 100% (Table 6). The Zscore,\
    \ MZscore, and Chauvenet techniques tended to remove the outliers\nthat decreased\
    \ the moisture values, setting the current moisture higher than the critical condition\n\
    (Figure 9). GESD kept the performance of matric potential management that used\
    \ the local approach\ndata. However, we do not recommend the use of predicted\
    \ data with the matric potential management,\nas the rise of IWN saving outweighed\
    \ the results related to the use of real moisture data in this same\nirrigation\
    \ management example (Table 3).\n(a) Zscore and MZscore\n(b) GESD and Chauvenet\n\
    Figure 9. Predicted Moisture Data used in Matric Potential — the points outside\
    \ of the dashed lines are\ncurrent soil moisture θc data modiﬁed by an outlier\
    \ removal technique. Irrigation occurs when θc is\nminor or equal to the critical\
    \ moisture condition θcr (red line).\nSensors 2020, 20, 190\n18 of 25\n6. Conclusions\n\
    Smart Agriculture presently lacks an Internet of Things (IoT) platform for the\
    \ gathering,\npreprocessing, and storage of data used in irrigation management,\
    \ which also allows for the reuse of\ncode to different sets of crops, soil, irrigation\
    \ system, and weather data sources. In this paper, we have\nproposed the Smart&Green\
    \ IoT framework which executes an irrigation management plan using the\nwater\
    \ balance and potential matric approaches according to the crop, as well as irrigation\
    \ system\ninformation provided by users and the weather and soil moisture data\
    \ available close to the monitored\nﬁelds. Smart&Green can be used to preprocess\
    \ soil moisture data with outlier removal criteria and\ntechniques of Zscore,\
    \ MZscore, GESD, and Chauvenet to provide a more precise irrigation water need\n\
    (IWN) in irrigation management.\nFor large ﬁelds without soil moisture sensors,\
    \ we have considered the problem of predicting the\nsoil moisture by analyzing\
    \ the weather data, crop coefﬁcients, and amount of irrigation water. We have\n\
    formally introduced the problem of soil prediction and designed a methodology\
    \ which uses training\nmodels according to two different approaches: Local and\
    \ global. These approaches determine the\nimplementation of prediction models\
    \ based on supervised machine learning techniques.\nThe local approach trains\
    \ a model for each soil sensor in the ﬁeld, achieving high performance.\nHowever,\
    \ this approach can lead to a high cost of data management if there are a large\
    \ number of\nsensors, as it requires the training and maintainence of a large\
    \ number of distinctive prediction models.\nOn the other hand, the global approach\
    \ trains a single prediction model over the observations of all\nthe sensors.\
    \ Our results show that gradient boosting with regression trees (GBRT) outperformed\
    \ the\nother evaluated techniques in both approaches. The local approach had the\
    \ best results with gradient\nboost, although the results using the global prediction\
    \ model were also acceptable.\nFurthermore, we have designed a module to support\
    \ irrigation management with our prediction\nmodels, based on GBRT. We evaluated\
    \ irrigation management using the water balance and matric\npotential approaches\
    \ with real and predicted data of soil moisture, as well as the impact of preprocessing\n\
    data with outlier removal techniques. The real data was part of a data set collected\
    \ from an experimental\nfield for research in the city of Paraipaba, Brazil, in\
    \ which cashews and other raw materials were grown.\nWe also report that the dataset\
    \ will be made publicly available to ensure the reproducibility of our results\n\
    and promote research developments in this field (see Supplementary Materials).\n\
    The use of real soil moisture data from the data set in the water balance approach\
    \ saved as\nmuch as 90.4% of the IWN obtained for the water balance when using\
    \ only weather and crop data.\nZscore and MZscore applied to the real moisture\
    \ data saved 89.3% of IWN, optimizing the tradeoff\nbetween IWN saving and healthy\
    \ crop development. For the matric potential approach, Zscore and\nMZscore obtained\
    \ (on average) 20.7% and 14.1% of the IWN savings obtained by matric potential\n\
    without the use of any outlier removal technique. Considerating a ﬁeld without\
    \ soil moisture sensors,\nwe obtained a reduction between 56.4% and 90% of the\
    \ water balance IWN based on only weather\nand crop data, when we use our global\
    \ and local approaches to predict the soil moisture data. Zscore,\nMZscore, and\
    \ Chauvenet preprocess the predicted data to optimize the tradeoff without outweighing\n\
    the performance of water balance using real moisture data. We do not recommend\
    \ the use of predicted\ndata in the matric potential approach, as the computational\
    \ models (with errors) outperform mostly\nthe same approach using real data in\
    \ terms of water savings, according to our results.\nSupplementary Materials:\
    \ The raw data set is available at: http://smartgreen.great.ufc.br/publications.\n\
    Author Contributions: The individual contributions of the authors are as follows:\
    \ Conceptualization: N.G.S.C.\nand A.R.R.; Methodology: N.G.S.C. and T.L.C.d.S.;\
    \ Software: N.G.S.C.; Formal analysis: N.G.S.C. and\nT.L.C.d.S.; Resources: R.G.\
    \ and A.R.R. Data curation: N.G.S.C.; Writing—original draft preparation: N.G.S.C.;\n\
    Writing—review and editing: A.R.R., T.L.C.d.S., R.G., and D.G.G.; Visualization:\
    \ N.G.S.C.; Supervision: A.R.R.\nand D.G.G.; Grants: A.R.R. All authors have read\
    \ and agreed to the published version of the manuscript.\nFunding:\nThis study\
    \ was ﬁnanced in part by the Coordenação de Aperfeiçoamento de Pessoal de Nível\n\
    Superior—Brasil (CAPES)—Finance Code 001. The authors also acknowledge the ﬁnancial\
    \ support of the\nCNPq (Conselho Nacional de Desenvolvimento Cientíﬁco e Tecnológico—Brasil,\
    \ processes #432820/2016-7 and\n#311878/2016-4).\nSensors 2020, 20, 190\n19 of\
    \ 25\nAcknowledgments: We acknowledge for the technical support: Airton Filho,\
    \ Alexandre Costa, Andrei Torres,\nGuilherme Vieira, Gustavo Fechine, Leandro\
    \ Machado, Magno Felipe and Sandy Costa.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nAppendix A. Irrigation Management\nFigure A1 represents\
    \ some examples of conﬁgurations composed of a crop, soil, weather,\nand an irrigation\
    \ system. The house is next to the entrance of the farm and has a connection to\n\
    the Internet. The house also hosts devices that connect sensor nodes in the ﬁeld\
    \ to the Internet.\nAutomatic weather stations make weather data available on\
    \ the Internet.\nIn this work, we address ﬁelds with one type of crop whose soil\
    \ has analog (Field 2) or digital\ntensiometers (Field 3) monitoring the moisture\
    \ at more than one depth z. Tensiometers installed\nat different points b of the\
    \ ﬁeld gather readings of the matric potential ψm. Mathematical models\nuse ψm\
    \ to measure the soil moisture θ as the level of water retention in the type of\
    \ soil. We use the\nVan Genuchten Model [57] to express θ as the volume of water\
    \ by the volume of soil (cm3/cm3),\nas Equation (A1) shows:\nθ(ψm) = θr +\nθs\
    \ − θr\n[1 + (α × |ψm|)n]1− 1\nn\n,\n(A1)\nwhere θr is the residual water content,\
    \ θs is the saturated water content, α is related to the inverse of\nthe air entry\
    \ suction, and n is a measure of the pore-size distribution in the soil (e.g.,\
    \ Table 2 has these\nVan Genutchen constants for the experimental ﬁeld soil).\n\
    The management of matric potential estimates the irrigation water need (IWN) for\
    \ a ﬁeld with\nsoil sensors (e.g., Field 3 of Figure A1) taking into account the\
    \ soil moisture at the monitored depths zi,\nas Equation (A2) shows:\nIWN = (θ\
    \ f c,z1 − θcr,z1) × z1 + (θ f c,z2 − θc,z2) × z2 + (θ f c,z3 − θc,z3) × z3\n\
    E f\n,\n(A2)\nwhere:\n•\nzi represent the thickness of soil along the proﬁle (monitored\
    \ depth);\n•\nθ f c represents the ﬁeld capacity at a depth z after the drainage\
    \ of water excess, which is a constant\nobtained by a laboratory soil analysis;\n\
    •\nθcr is the ideal moisture for irrigation, signaling when the crop productivity\
    \ starts to decline;\n•\nθc is the current soil moisture. In matric potential\
    \ management, we initialize the irrigation by\nθc,z1 ≤ θcr; and\n•\nE f is the\
    \ efﬁciency of the irrigation system used in the ﬁeld.\nWater balance management\
    \ computes the IWN for an interval of n days, comparing the inputs and\noutputs\
    \ of water in the soil by using the daily crop evapotranspiration ETc, the rainfall\
    \ R, and ∆A =\n(θ f c − θc)z which represents the soil moisture at the crop root\
    \ zone z through Equation (A3).\nIWN = ∑n\ni=1(ETc,i − Ri) − ∆A\nE f\n.\n(A3)\n\
    The value Ef is the efficiency of the irrigation system placed in the field. The\
    \ crop evapotranspiration\nETc represents the water consumption by a type of crop\
    \ at its current life development stage, which is\ngiven by:\nETc = ETo × kc.\n\
    (A4)\nThe Penman-Monteith model [61] estimates the reference evapotranspiration\
    \ ETo using weather\ndata. Each type of crop, without hydrological restriction,\
    \ has a speciﬁc coefﬁcient curve in which the\ncrop coefﬁcient kc varies from\
    \ 0 to 1.5 with the number days since the planting of the crop.\nSensors 2020,\
    \ 20, 190\n20 of 25\nFigure A1. Different ﬁeld conﬁgurations.\nAppendix B. The\
    \ Problem of Soil Moisture Prediction\nLet B = {b1, . . . , bn} be the set of\
    \ tensiometers monitoring the soil moisture of a ﬁeld at n different\npoints.\
    \ A tensiometer bj gathers the sample (ψj,15, ψj,45, ψj,75), which consists of\
    \ the matric potential\nψ readings at 15, 45, and 75 cm depths, respectively,\
    \ at a point j. Let W = {w1, . . . , wn} be the set of\nwater amount given to\
    \ the crop at n different points by an irrigation system. Irrigation management\n\
    calculates W using the Equations (A2) and (A3), for example.\nThe weather data\
    \ are required, as the climatic conditions affect a crop’s need for soil water\
    \ and\nrainfall can increase the soil moisture. Therefore, we assume that there\
    \ is a weather station ms close to the\nfield which provides the meteorological\
    \ data set Mms = {Tmin, Tmax, RHmin, RHmax, Rn,U2, P, Ri}, where:\n•\nTmin and\
    \ Tmax are the minimum and maximum air temperature, respectively;\n•\nRHmin and\
    \ RHmax are the minimum and maximum relative humidity, respectively;\n•\nRn is\
    \ the net radiation;\n•\nU2 is the wind speed;\n•\nP is the atmospheric pressure;\
    \ and\n•\nRi is the rainfall.\nWithin a daily time interval, there are several\
    \ observations about the weather and ﬁeld. We denote\nby O the collection of observations,\
    \ which consists of (t, B, Mms, W, kc), recorded within a time t over\na day.\
    \ The irrigation scheduling methods presented in Appendix A decide to start precise\
    \ irrigation\nwhen the current moisture θc,z1 is low at the superﬁcial layer of\
    \ soil (z1 = 15 cm). Therefore, the matric\npotential ψi,15 is analyzed daily\
    \ to achieve θc,z1 using the Van Genutchen model (Equation (A1)). In this\nwork,\
    \ we wish to monitor the level of soil moisture without soil sensors (i.e., tensiometers).\n\
    Let y(i, Mms, wi, kc) be a function that, given the monitoring point i, the meteorological\
    \ variables\nMms, the irrigation water amount wi at the point i, and the crop\
    \ coefﬁcient kc returns ψi,15 (the matric\npotential at a depth of 15 cm). Then,\
    \ y(i, Mms, wi, kc) = ψi,15. We deﬁne the problem of soil moisture\nprediction\
    \ as the problem of ﬁnding an accurate function f for predicting y(i, Mms, wi,\
    \ kc), given all\nthe observations recorded in O.\nSensors 2020, 20, 190\n21 of\
    \ 25\nDeﬁnition A1. The problem of soil moisture prediction requires ﬁnding a\
    \ predictive function ˆf over the class\nof all possible predictive functions\
    \ H, such that\nˆf = argmin∆( f ),\n(A5)\nwhere f ∈ H and ∆ is a loss function\
    \ assessing the quality of a candidate predictive function f over the\nobservations\
    \ in O. In this work, we use the Root Mean Squared Error (RMSE) and the Mean Absolute\
    \ Error\n(MAE) loss functions, deﬁned as:\n∆RMSE( f ) =\nv\nu\nu\nt 1\n|O′|\n\
    ∑\n(i,Mms,wi,kc)∈O′\n( f (i, Mms, wi, kc) − y(i, Mms, wi, kc))2, and\n(A6)\n∆MAE(\
    \ f ) =\n1\n|O′|\n∑\n(i,Mms,wi,kc)∈O′\n| f (i, Mms, wi, kc) − y(i, Mms, wi, kc)|,\n\
    (A7)\nwhere O’ is the set of observations used to assess the quality of the prediction\
    \ and f (i, Mms, wi, kc) is the estimate\nreturned by function f for y(i, Mms,\
    \ wi, kc). The smaller the value yielded by the above loss functions, the better\n\
    the predictive performance of f.\nWe employ Machine Learning (ML) techniques to\
    \ address the problem of soil moisture prediction.\nMore speciﬁcally, we aim at\
    \ learning, from the observations in O, some function ˆf that minimizes the\n\
    error measured by ∆. We train the prediction models on a data set containing examples\
    \ built from\npast sensor observations (see Section 4.2). The ML techniques for\
    \ regression tasks used in this work\nare: Linear Regression [46], Decision Stump\
    \ [47], M5 Model Trees and Rules [48,49], Random Tree,\nRandom Forest [50], RepTree,\
    \ and Gradient Boosting Regression Tree [51,52].\nReferences\n1.\nFAO. World Agriculture:\
    \ Towards 2015/2030—An FAO Perspective; Earthscan Publications Ltd.: London, Uk,\n\
    2014.\n2.\nHaverkort, A. Handbook of Precision Agriculture. Principles and Applications.\
    \ Euphytica 2006, 2007, 156.\n3.\nANA. Atlas Irrigação: Uso Da água Na Agricultura\
    \ Irrigada; Agência Nacional de Águas—ANA: Brasilia, DF,\nBrasil, 2017.\n4.\n\
    Voutos, Y.; Mylonas, P.; Katheniotis, J.; Sofou, A. A Survey on Intelligent Agricultural\
    \ Information Handling\nMethodologies. Sustainability 2019, 11, 3278. [CrossRef]\n\
    5.\nINMET.\nBrazilian Automatic Weather Station of INMET (Instituto Nacional de\
    \ Meteorologia).\nAvailable online: http://www.inmet.gov.br/portal/index.php?r=estacoes/estacoesautomaticas\
    \ (accessed\non 17 October 2019).\n6.\nBorgia, E. The Internet of Things vision:\
    \ Key features, applications and open issues. Comput. Commun. 2014,\n54, 1–31.\
    \ [CrossRef]\n7.\nAlam, F.; Mehmood, R.; Katib, I.; Albogami, N.N.; Albeshri,\
    \ A. Data Fusion and IoT for Smart Ubiquitous\nEnvironments: A Survey. IEEE Access\
    \ 2017, 5, 9533–9554. [CrossRef]\n8.\nPang, Z.; Chen, Q.; Han, W.; Zheng, L. Value-centric\
    \ Design of the Internet-of-things Solution for Food\nSupply Chain: Value Creation,\
    \ Sensor Portfolio and Information Fusion. Inf. Syst. Front. 2015, 17, 289–319.\n\
    [CrossRef]\n9.\nTalavera, J.M.; Tobón, L.E.; Gómez, J.A.; Culman, M.A.; Aranda,\
    \ J.M.; Parra, D.T.; Quiroz, L.A.; Hoyos, A.;\nGarreta, L.E. Review of IoT applications\
    \ in agro-industrial and environmental ﬁelds. Comput. Electron. Agric.\n2017,\
    \ 142, 283–297. [CrossRef]\n10.\nAbaya, S.; De Vega, L.; Garcia, J.; Maniaul,\
    \ M.; Redondo, C.A. A self-activating irrigation technology\ndesigned for a smart\
    \ and futuristic farming. In Proceedings of the 2017 International Conference\
    \ on Circuits,\nDevices and Systems (ICCDS), Chengdu, China, 5–8 September 2017;\
    \ pp. 189–194. [CrossRef]\nSensors 2020, 20, 190\n22 of 25\n11.\nMath, R.K.; Dharwadkar,\
    \ N.V. A wireless sensor network based low cost and energy efﬁcient frame work\n\
    for precision agriculture. In Proceedings of the 2017 International Conference\
    \ on Nascent Technologies in\nEngineering (ICNTE), Mumbai, India, 27–28 January\
    \ 2017; pp. 1–6. [CrossRef]\n12.\nRajkumar, M.N.; Abinaya, S.; Kumar, V.V.\nIntelligent\
    \ irrigation system—An IOT based approach.\nIn Proceedings of the 2017 International\
    \ Conference on Innovations in Green Energy and Healthcare\nTechnologies (IGEHT),\
    \ Coimbatore, India, 16–18 March 2017; pp. 1–5. [CrossRef]\n13.\nSantoshkumar;\
    \ Udaykumar, R.Y. Development of WSN system for precision agriculture. In Proceedings\
    \ of\nthe 2015 International Conference on Innovations in Information, Embedded\
    \ and Communication Systems\n(ICIIECS), Coimbatore, India, 19–20 March 2015; pp.\
    \ 1–5. [CrossRef]\n14.\nMesas-Carrascosa, F.; Santano, D.V.; Meroño, J.; de la\
    \ Orden, M.S.; García-Ferrer, A. Open source hardware\nto monitor environmental\
    \ parameters in precision agriculture. Biosyst. Eng. 2015, 137, 73–83. [CrossRef]\n\
    15.\nBalamurugan, C.; Satheesh, R. Development of Raspberry pi and IoT Based Monitoring\
    \ and Controlling\nDevices for Agriculture. J. Soc. Technol. Environ. Sci. 2017.\
    \ 6, 207–215. [CrossRef]\n16.\nFlores, K.O.; Butaslac, I.M.; Gonzales, J.E.M.;\
    \ Dumlao, S.M.G.; Reyes, R.S.J. Precision agriculture monitoring\nsystem using\
    \ wireless sensor network and Raspberry Pi local server. In Proceedings of the\
    \ 2016 IEEE Region\n10 Conference (TENCON), Singapore, 22–25 November 2016; pp.\
    \ 3018–3021. [CrossRef]\n17.\nMaia, R.F.; Netto, I.; Tran, A.L.H.\nPrecision agriculture\
    \ using remote monitoring systems in Brazil.\nIn Proceedings of the 2017 IEEE\
    \ Global Humanitarian Technology Conference (GHTC), San Jose, CA, USA,\n19–22\
    \ October 2017; pp. 1–6. [CrossRef]\n18.\nHeble, S.; Kumar, A.; Prasad, K.V.V.D.;\
    \ Samirana, S.; Rajalakshmi, P.; Desai, U.B. A low power IoT network\nfor smart\
    \ agriculture. In Proceedings of the 2018 IEEE 4th World Forum on Internet of\
    \ Things (WF-IoT),\nSingapore, 5–8 February 2018; pp. 609–614.\n19.\nSathish kannan,\
    \ K.; Thilagavathi, G. Online farming based on embedded systems and wireless sensor\n\
    networks.\nIn Proceedings of the 2013 International Conference on Computation\
    \ of Power, Energy,\nInformation and Communication (ICCPEIC), Chennai, India,\
    \ 17–18 April 2013; pp. 71–74. [CrossRef]\n20.\nKamelia, L.; Ramdhani, M.A.; Faroqi,\
    \ A.; Rifadiapriyana, V. Implementation of Automation System for\nHumidity Monitoring\
    \ and Irrigation System. IOP Conf. Ser. Mater. Sci. Eng. 2018, 288, 012092. [CrossRef]\n\
    21.\nNavarro-Hellín, H.; Torres-Sánchez, R.; Soto-Valles, F.; Albaladejo-Pérez,\
    \ C.; López-Riquelme, J.;\nDomingo-Miguel, R.\nA wireless sensors architecture\
    \ for efﬁcient irrigation water management.\nAgric. Water Manag. 2015, 151, 64–74.\
    \ [CrossRef]\n22.\nShelby, Z.; Hartke, K.; Bormann, C. The Constrained Application\
    \ Protocol (CoAP). RFC 7252, 2014. Available\nonline: https://rfc-editor.org/rfc/rfc7252.txt\
    \ (accessed on 17 October 2019).\n23.\nOASIS Message Queuing Telemetry Transport\
    \ (MQTT). MQTT Version 3.1.1., 2014.\nAvailable online:\nhttp://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html\
    \ (accessed on 17 October 2019).\n24.\nByishimo, A.; Garba, A. Designing a Farmer\
    \ Interface for Smart Irrigation in Developing Countries; ACM: New\nYork, NY,\
    \ USA, 2016; pp. 1–3.\n25.\nPopovic, T.; Latinovi´c, N.; Pesic, A.; Zecevic, Z.;\
    \ Krstajic, B.; Ðukanovi´c, S. Architecting an IoT-enabled\nplatform for precision\
    \ agriculture and ecological monitoring: A case study. Comput. Electron. Agric.\
    \ 2017,\n2017, 255–265. [CrossRef]\n26.\nDinh Le, T.; Tan, D.H. Design and deploy\
    \ a wireless sensor network for precision agriculture. In Proceedings\nof the\
    \ 2015 2nd National Foundation for Science and Technology Development Conference\
    \ on Information\nand Computer Science (NICS), Ho Chi Minh City, Vietnam, 16–18\
    \ September 2015; pp. 294–299. [CrossRef]\n27.\nHamouda, Y.; Msallam, M. Smart\
    \ heterogeneous precision agriculture using wireless sensor network based\non\
    \ extended Kalman ﬁlter. Neural Comput. Appl. 2018. [CrossRef]\n28.\nFigueroa,\
    \ M.; Pope, C. Root System Water Consumption Pattern Identiﬁcation on Time Series\
    \ Data. Sensors\n2017, 17, 1410. [CrossRef] [PubMed]\n29.\nFerrandez, J.; Manuel\
    \ García-Chamizo, J.; Nieto-Hidalgo, M.; Mora-Martínez, J. Precision Agriculture\
    \ Design\nMethod Using a Distributed Computing Architecture on Internet of Things\
    \ Context. Sensors 2018, 18, 1731.\n[CrossRef]\n30.\nPatokar, A.; Gohokar, V.\
    \ Precision Agriculture System Design Using Wireless Sensor Network. In Information\n\
    and Communication Technology; Advances in Intelligent Systems and Computing, vol\
    \ 625; Springer: Singapore,\n2018; pp. 169–177.\nSensors 2020, 20, 190\n23 of\
    \ 25\n31.\nVaishali, S.; Suraj, S.; Vignesh, G.; Dhivya, S.; Udhayakumar, S.\n\
    Mobile integrated smart irrigation\nmanagement and monitoring system using IOT.\
    \ In Proceedings of the 2017 International Conference on\nCommunication and Signal\
    \ Processing (ICCSP), Tamilnadu, India, 6–8 April 2017; pp. 2164–2167. [CrossRef]\n\
    32.\nPavón-Pulido, N.; López-Riquelme, J.A.; Torres, R.; Morais, R.; Pastor, J.A.\
    \ New trends in precision\nagriculture: A novel cloud-based system for enabling\
    \ data storage and agricultural task planning and\nautomation. Precis. Agric.\
    \ 2017, 18. [CrossRef]\n33.\nKarimi, N.; Arabhosseini, A.; Karimi, M.; Kianmehr,\
    \ M. Web-based monitoring system using Wireless Sensor\nNetworks for traditional\
    \ vineyards and grape drying buildings. Comput. Electron. Agric. 2018, 144, 269–283.\n\
    [CrossRef]\n34.\nMat, I.; Kassim, M.R.M.; Harun, A.N. Precision agriculture applications\
    \ using wireless moisture sensor\nnetwork. In Proceedings of the 2015 IEEE 12th\
    \ Malaysia International Conference on Communications\n(MICC), Kuching, Malaysia,\
    \ 23–25 November 2015; pp. 18–23. [CrossRef]\n35.\nMat, I.; Kassim, M.; Harun,\
    \ I.A.N. Precision Irrigation Performance Measurement Using Wireless Sensor\n\
    Network. In Proceedings of the 2014 Sixth International Conference on Ubiquitous\
    \ and Future Networks\n(ICUFN), Shanghai, China , 8–11 July 2014; pp. 154–157\n\
    36.\nCaetano, F.; Pitarma, R.; Reis, P. Advanced System for Garden Irrigation\
    \ Management.\nAdv. Intell.\nSyst. Comput. 2015, 353, 565–574. [CrossRef]\n37.\n\
    Balaji Bhanu, B.; Hussain, M.A.; Ande, P. Monitoring of soil parameters for effective\
    \ irrigation using Wireless\nSensor Networks. In Proceedings of the 2014 Sixth\
    \ International Conference on Advanced Computing\n(ICoAC), Chennai, India, 17–19\
    \ December 2014; pp. 211–215. [CrossRef]\n38.\nCapraro, F.; Tosetti, S.; Vita\
    \ Serman, F. Supervisory control and data acquisition software for drip irrigation\n\
    control in olive orchards: An experience in an arid region of Argentina. Acta\
    \ Horticult. 2014, 1057, 423–429.\n[CrossRef]\n39.\nMiller, L.; Vellidis, G.;\
    \ Mohawesh, O.; Coolong, T.\nComparing a Smartphone Irrigation Scheduling\nApplication\
    \ with Water Balance and Soil Moisture-based Irrigation Methods: Part I—Plasticulture-grown\n\
    Tomato. HortTechnology 2018, 28, 354–361. [CrossRef]\n40.\nSawant, S.; Durbha,\
    \ S.; Jagarlapudi, A. Interoperable agro-meteorological observation and analysis\
    \ platform\nfor precision agriculture: A case study in citrus crop water requirement\
    \ estimation. Comput. Electron. Agric.\n2017, 138, 175–187. [CrossRef]\n41.\n\
    Mauget, S.; Leiker, G. The Ogallala Agro-Climate Tool. Comput. Electron. Agric.\
    \ 2010, 74, 155–162. [CrossRef]\n42.\nCarlesso, R.; Petry, M.; Trois, C. The Use\
    \ of a Meteorological Station Network to Provide Crop Water\nRequirement Information\
    \ for Irrigation Management. In Proceedings of the International Conference on\n\
    Computer and Computing Technologies in Agriculture, Beijing, China, 14–17 October\
    \ 2009; Volume 293,\npp. 19–27. [CrossRef]\n43.\nGoldstein, A.; Fink, L.; Meitin,\
    \ A.; Bohadana, S.; Lutenberg, O.; Ravid, G. Applying machine learning on\nsensor\
    \ data for irrigation recommendations: Revealing the agronomist’s tacit knowledge.\
    \ Precis. Agric. 2017,\n47, 1–24. [CrossRef]\n44.\nGoap, A.; Sharma, D. An IoT\
    \ based smart irrigation management system using Machine learning and open\nsource\
    \ technologies. Comput. Electron. Agric. 2018, 155, 41–49, doi:10.1016/j.compag.2018.09.040.\
    \ [CrossRef]\n45.\nLuan, Q.; Fang, X.; Ye, C.; Liu, Y. An integrated service system\
    \ for agricultural drought monitoring and\nforecasting and irrigation amount forecasting.\
    \ In Proceedings of the 23rd International Conference on\nGeoinformatics, Geoinformatics\
    \ 2015, Wuhan, China, 19–21 June 2015; pp. 1–7. [CrossRef]\n46.\nFreedman, D.A.\
    \ Statistical Models: Theory and Practice, 2nd ed.; Cambridge University Press:\
    \ Cambridge, UK,\n2009.\n47.\nIba, W.; Langley, P. Induction of One-Level Decision\
    \ Trees. In Machine Learning Proceedings 1992; Sleeman, D.,\nEdwards, P., Eds.;\
    \ Morgan Kaufmann: San Francisco, CA, USA, 1992; pp. 233–240. [CrossRef]\n48.\n\
    Quinlan, R.J. Learning with Continuous Classes. In Proceedings of the 5th Australian\
    \ Joint Conference\non Artiﬁcial Intelligence, Hobart, Tasmania, 16–18 November\
    \ 1992; World Scientiﬁc: Singapore, 1992;\npp. 343–348.\n49.\nWang, Y.; Witten,\
    \ I.H. Induction of model trees for predicting continuous classes. In Proceedings\
    \ of the Poster\npapers of the 9th European Conference on Machine Learning, Prague,\
    \ Czech Republic, 23–25 April 1997.\n50.\nBreiman, L. Random Forests. Mach. Learn.\
    \ 2001, 45, 5–32. [CrossRef]\nSensors 2020, 20, 190\n24 of 25\n51.\nFriedman,\
    \ J.H.\nGreedy Function Approximation: A Gradient Boosting Machine.\nAnn. Stat.\
    \ 2000,\n29, 1189–1232. [CrossRef]\n52.\nFriedman, J.H. Stochastic gradient boosting.\
    \ Comput. Stat. Data Anal. 2002, 38, 367–378. [CrossRef]\n53.\nKamienski, C.;\
    \ Soininen, J.P.; Taumberger, M.; Toscano, A.; Cinotti, T.; Dantas, R.; Maia,\
    \ R.; Neto, A.;\nFurlan Ferreira, F. Smart Water Management Platform: IoT-Based\
    \ Precision Irrigation for Agriculture.\nSensors 2019, 19, 276. [CrossRef]\n54.\n\
    Kamilaris, A.; Gao, F.; Prenafeta Boldú, F.; Ali, M.I. Agri-IoT: A Semantic Framework\
    \ for Internet of\nThings-Enabled Smart Farming Applications. In Proceedings of\
    \ the 2016 IEEE 3rd World Forum on Internet\nof Things (WF-IoT), Reston, VA, USA,\
    \ 12–14 December 2016; pp. 442–447.\n55.\nPressman, R. Software Engineering: A\
    \ Practitioner’s Approach, 7th ed.; McGraw-Hill, Inc.: New York, NY, USA,\n2010.\n\
    56.\nAmbler, S.W. Process Patterns: Building Large-Scale Systems Using Object\
    \ Technology; Cambridge University\nPress: New York, NY, USA, 1998.\n57.\nGenuchten,\
    \ M.T.V. A closed-form equation for predicting the hydraulic conductivity of unsaturated\
    \ soils.\nSoil Sci. Soc. Am. J. 1980, 44, 892–898. [CrossRef]\n58.\nTorres, A.B.B.;\
    \ Filho, J.A.; da Rocha, A.R.; Gondim, R.S.; de Souza, J.N. Outlier detection\
    \ methods and sensor\ndata fusion for precision agriculture. In Proceedings of\
    \ the XXXVII Congresso da Sociedade Brasileira de\nComputação, São Paulo, SP,\
    \ Brasil, 2–6 June 2017; pp. 928–937.\n59.\nNakamura, E.F.; Loureiro, A.A.F.;\
    \ Frery, A.C. Information Fusion for Wireless Sensor Networks: Methods,\nModels,\
    \ and Classiﬁcations. ACM Comput. Surv. 2007, 39. [CrossRef]\n60.\nRichards, M.\
    \ PyETo Implements Methods for Estimating Evapotranspiration. 2015.\nAvailable\
    \ online:\nhttps://pyeto.readthedocs.io/en/latest/overview.html (accessed on 17\
    \ October 2019).\n61.\nFAO. Crop Evapotranspiration—Guidelines for Computing Crop\
    \ Water Requirements; Food and Agriculture\nOrganization (FAO): Rome, Italy, 1998.\n\
    62.\nOracle.\nMySQL Community Edition. 2019.\nAvailable online: https://www.mysql.com/products/\n\
    community/ (accessed on 17 October 2019).\n63.\nCzesla, S. A Collection of Astronomy-Related\
    \ Routines in Python. 2013. Available online: https://github.\ncom/sczesla/PyAstronomy\
    \ (accessed on 17 October 2019).\n64.\nWasilak, M.; Amsüss, C. Aiocoap—The Python\
    \ CoAP Library. 2012. Available online: https://github.com/\nchrysn/aiocoap#aiocoap----the-python-coap-library\
    \ (accessed on 17 October 2019).\n65.\nLight, R. Eclipse Paho MQTT Python Client.\
    \ 2013. Available online: https://pypi.org/project/paho-mqtt/\n(accessed on 17\
    \ October 2019).\n66.\nLight, R. Mosquitto: Server and client implementation of\
    \ the MQTT protocol. J. Open Source Softw. 2017.\n[CrossRef]\n67.\nReitz, K. Requests:\
    \ HTTP for Humans. 2011. Available online: https://pypi.org/project/requests/\
    \ (accessed\non 17 October 2019).\n68.\nRichardson, L. Beautiful Soup: An Screen-Scraping\
    \ Library. 2014. Available online: https://pypi.org/\nproject/beautifulsoup4/\
    \ (accessed on 17 October 2019).\n69.\nFoundation, D.S. Django—The Web Framework\
    \ for Perfectionists With Deadlines. 2013. Available online:\nhttps://djangoproject.com\
    \ (accessed on 17 October 2019).\n70.\nEncode.\nDjango Rest Framework. 2011.\n\
    Available online: https://www.django-rest-framework.org/\n(accessed on 17 October\
    \ 2019).\n71.\nGoogle. Firebase—A Comprehensive App Development Platform. 2016.\
    \ Available online: https://ﬁrebase.\ngoogle.com/ (accessed on 17 October 2019).\n\
    72.\nFacebook. React Native—A Framework for Building Native Apps Using React.\
    \ 2018. Available online:\nhttps://facebook.github.io/react-native/ (accessed\
    \ on 17 October 2019).\n73.\nRealm. Realm: Creative Mobile Apps in a Fraction\
    \ Time. 2014. Available online: https://realm.io/ (accessed\non 17 October 2019).\n\
    74.\nInvertase. React Native Firebase—Simple Firebase Integration for React Native.\
    \ 2016. Available online:\nhttps://rnﬁrebase.io/ (accessed on 17 October 2019).\n\
    75.\nIrrometer. Irrometer Watermark 200SS Soil Moisture Sensor. 2019. Available\
    \ online: https://www.irrometer.\ncom/sensors.html#wm (accessed on 22 November\
    \ 2019).\nSensors 2020, 20, 190\n25 of 25\n76.\nEmbrapa.\nCampo Experimental do\
    \ Curu of Embrapa Agroindústria Tropical.\nAvailable online:\nhttp://www.cnpat.embrapa.br/conteudo52.php\
    \ (accessed on 8 April 2019).\n77.\nSantos, H.G.d.; Jacomine, P.K.T.; Anjos, L.H.C.d.;\
    \ Oliveira, V.A.d.; Lumbreras, J.F.; Coelho, M.R.;\nAlmeida, J.A.d.; Araujo ﬁlho,\
    \ J.C.d.; Oliveira, J.B.d.; Cunha, T.J.F. Brazilian Soil Classiﬁcation System;\
    \ Embrapa:\nBrasilia, DF, Brasil, 2018. Available online: http://ainfo.cnptia.embrapa.br/digital/bitstream/item/181678/\n\
    1/SiBCS-2018-ISBN-9788570358219-english.epub (accessed on 22 November 2019).\n\
    78.\nMagalhaes, R.P. Speed Prediction Applied to Dynamic Trafﬁc Sensors and Road\
    \ Networks. Ph.D. Thesis,\nUniversidade Federal do Ceara, Fortaleza, CE, Brasil,\
    \ 2018.\n79.\nHall, M.; Frank, E.; Holmes, G.; Pfahringer, B.; Reutemann, P.;\
    \ Witten, I.H. The WEKA Data Mining Software:\nAn Update. SIGKDD Explor. Newsl.\
    \ 2009, 11, 10–18. [CrossRef]\n80.\nChen, T.; Guestrin, C. XGBoost: A Scalable\
    \ Tree Boosting System.\nIn Proceedings of the 22Nd ACM\nSIGKDD International\
    \ Conference on Knowledge Discovery and Data Mining, San Francisco, CA, USA,\n\
    13–17 August 2016; ACM: New York, NY, USA, 2016; pp. 785–794. [CrossRef]\nc⃝ 2019\
    \ by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access\n\
    article distributed under the terms and conditions of the Creative Commons Attribution\n\
    (CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: Campos 2019
  journal: Sensors
  limitations: null
  pdf_link: https://www.mdpi.com/1424-8220/20/1/190/pdf?version=1579142202
  publication_year: 2019
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart &amp; Green: An Internet-of-Things Framework for Smart Irrigation'
  verbatim_quote1: '"The local approach trains a model for each soil sensor in the
    ﬁeld, achieving high performance. However, this approach can lead to a high cost
    of data management if there are a large number of sensors, as it requires the
    training and maintainence of a large number of distinctive prediction models.
    On the other hand, the global approach trains a single prediction model over the
    observations of all the sensors. Our results show that gradient boosting with
    regression trees (GBRT) outperformed the other evaluated techniques in both approaches.
    The local approach had the best results with gradient boost, although the results
    using the global prediction model were also acceptable."'
  verbatim_quote2: '"Furthermore, we have designed a module to support irrigation
    management with our prediction models, based on GBRT. We evaluated irrigation
    management using the water balance and matric potential approaches with real and
    predicted data of soil moisture, as well as the impact of preprocessing data with
    outlier removal techniques. The real data was part of a data set collected from
    an experimental field for research in the city of Paraipaba, Brazil, in which
    cashews and other raw materials were grown. We also report that the dataset will
    be made publicly available to ensure the reproducibility of our results and promote
    research developments in this field (see Supplementary Materials)."'
  verbatim_quote3: '"The use of real soil moisture data from the data set in the water
    balance approach saved as much as 90.4% of the IWN obtained for the water balance
    when using only weather and crop data. Zscore and MZscore applied to the real
    moisture data saved 89.3% of IWN, optimizing the tradeoff between IWN saving and
    healthy crop development. For the matric potential approach, Zscore and MZscore
    obtained (on average) 20.7% and 14.1% of the IWN savings obtained by matric potential
    without the use of any outlier removal technique. Considerating a ﬁeld without
    soil moisture sensors, we obtained a reduction between 56.4% and 90% of the water
    balance IWN based on only weather and crop data, when we use our global and local
    approaches to predict the soil moisture data. Zscore, MZscore, and Chauvenet preprocess
    the predicted data to optimize the tradeoff without outweighing the performance
    of water balance using real data."'
- DOI: https://doi.org/10.1109/access.2019.2926642
  analysis: '**Relevance to the Subpoint:**


    The verbatim quote explains how Internet of Things (IoT) and machine learning
    (ML) empower SBs to monitor activities and collect data. This content is directly
    relevant to the subpoint that focuses on the data collection and transmission
    protocols and technologies in SBs.


    **Relevance to the Main Point:**


    The main point of this section is to discuss automated systems for real-time data
    management in SBs. The subpoint discusses the role of IoT and ML in enabling data
    collection and transmission, which are key aspects of real-time data management.
    Therefore, the verbatim quote is relevant to the main point as well.


    **Credibility:**


    The paper is published in a reputable journal (IEEE Access) and is peer-reviewed.
    The authors are experts in the field of computer science and engineering.


    **Scope:**


    The verbatim quote provides a concise overview of the role of IoT and ML in data
    collection and transmission in SBs. It does not cover other relevant aspects of
    the subpoint, such as the specific protocols and technologies used.


    **Recency:**


    The paper was published in 2019, which is relatively recent in the context of
    this rapidly evolving field.


    **Overall, the verbatim quote is highly relevant to the subpoint and the main
    point of the section. It is credible, provides a concise overview of the topic,
    and is relatively recent.**'
  authors:
  - Basheer Qolomany
  - Ala Al-Fuqaha
  - Ajay Gupta
  - Driss Benhaddou
  - Safaa Alwajidi
  - Junaid Qadir
  - A.C.M. Fong
  citation_count: 128
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 7 Leveraging
    Machine Learning and Big Data for Smart Buildings: A Comprehensive Survey Publisher:
    IEEE Cite This PDF Basheer Qolomany; Ala Al-Fuqaha; Ajay Gupta; Driss Benhaddou;
    Safaa Alwajidi; Junaid Qadir; Alvis C. Fong All Authors 115 Cites in Papers 7988
    Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Smart Buildings: Concept and Architecture
    III. Smart Building Components IV. Ml Background for SBS: Models, Tasks, and Tools
    V. Applications of Ml-Based Context-Aware Systems for SBs Show Full Outline Authors
    Figures References Citations Keywords Metrics Abstract: Future buildings will
    offer new convenience, comfort, and efficiency possibilities to their residents.
    Changes will occur to the way people live as technology involves people''s lives
    and information processing is fully integrated into their daily living activities
    and objects. The future expectation of smart buildings includes making the residents''
    experience as easy and comfortable as possible. The massive streaming data generated
    and captured by smart building appliances and devices contain valuable information
    that needs to be mined to facilitate timely actions and better decision making.
    Machine learning and big data analytics will undoubtedly play a critical role
    to enable the delivery of such smart services. In this paper, we survey the area
    of smart building with a special focus on the role of techniques from machine
    learning and big data analytics. This survey also reviews the current trends and
    challenges faced in the development of smart building services. The major machine
    learning tasks that are relevant to smart buildings include: data collection and
    acquisition, data pre-processing, and dimensionality reduction. Published in:
    IEEE Access ( Volume: 7) Page(s): 90316 - 90356 Date of Publication: 03 July 2019
    Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2019.2926642 Publisher: IEEE CCBY
    - IEEE is not the copyright holder of this material. Please follow the instructions
    via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles
    and stipulations in the API documentation. SECTION I. Introduction Although the
    term “smart building” (SB) may bring a thought of a fictional smart space from
    science-fiction movies, but the reality is that SBs exist today, and their number
    is getting increased. With recent advances in machine learning (ML), big data
    analytics, sensor technologies and the Internet of Things (IoT), regular buildings
    can be cost-effectively transformed into SBs with bare minimum infrastructural
    modifications. There are smart office, smart library, smart home, smart health
    care facilities, smart hospital and many other types of SBs that can provide automated
    services that can provide many value-added services (such as reduction of wasted
    energy) and also help to ensure the comfort, health, and safety of the occupants.
    The hyperconnectivity that will be brought about by the emergence of IoT will
    increase the promise of SB since now all the basic building amenities and commodities
    ranging from your house electronics to your plant vases will be interconnected.
    But this hyperconnectivity will at the same time complicate the process of managing
    SBs. In particular, SBs and their inhabitants are expected to create large volumes
    of streaming data. ML, sampling, compression, learning, and filtering technologies
    are becoming more significant to manage the stream of big data of individuals.
    In 1981, the term Intelligent Buildings (IBs) was initially coined by United Technology
    Building Systems (UTBS) Corporation in the U.S. In July 1983, IBs became a reality
    with the opening of the City Place Building in Hartford, Connecticut [1]. Today,
    the number of SBs is growing at an unprecedented rate including smart office,
    smart hospitality, smart educational facilities etc. [2]. An SB is recognized
    as an integrated system that takes advantage of a range of computational and communications
    infrastructure and techniques [3]. Examples of SB services include smart thermostats
    that allow the temperature to be controlled based on the time of the day/year
    and the users’ preferences with minimal or no manual configuration. Using data
    analytics to “learn” the users’ preferences before taking the appropriate actions
    is probably the most important enabling technology for IBs [4]. Lately, smart
    coffee machines appeared in the market with the capability to make coffee automatically,
    according to users’ preferences and schedules. Fridges can offer allocated programming
    interfaces for their control [5]. IBs aim to provide their users with safe, energy
    efficient, environment-friendly, and convenient services. In order to maximize
    comfort, minimize cost, and adapt to the needs of their inhabitants, SBs must
    rely on sophisticated tools to learn, predict, and make intelligent decisions.
    SB algorithms cover a range of technologies, including prediction, decision-making,
    robotics, smart materials, wireless sensor networks, multimedia, mobile computing,
    and cloud computing. With these technologies, buildings can cognitively manage
    many SB services such as security, privacy, energy efficiency, lighting, maintenance,
    elderly care, and multimedia entertainment. The massive volume of sensory data
    collected from sensors and appliances must be analyzed by algorithms, transformed
    into information, and minted to extract knowledge so that machines can have a
    better understanding of humans than their environment. Furthermore, and most importantly,
    such knowledge can lead to new products and services that can dramatically transform
    our lives. For example, readings from smart meters can be used to better predict
    and balancing the usage of power. Monitoring and processing sensory data from
    wearable sensors attached to patients can produce new remote healthcare services.
    The main philosophy behind ML is to create the analytical models automatically
    in order to permit the algorithms to learn continuously from available data. The
    application of ML techniques increased over the last two decades due to the availability
    of massive amounts of complex data and the increased usability of current ML tools.
    Today, ML is already widely applied in different applications including recommendation
    systems offered by online services (e.g., Amazon, Netflix) and automatic credit
    rating services used by banks. Alphabet’s Nest thermostat utilizes ML to “learn”
    the temperature preferences of its users and adapt to their work schedule to minimize
    the energy use. Other widely publicized examples of ML applications include Google’s
    self-driving car, sentiment analysis of Amazon and Twitter data, fraud detection,
    and Facebook’s facial-recognition technology that is used to tag the suggested
    person on images uploaded by users. A. SB Trends and Market Impact In this section,
    we look at the statistics related to SBs, to allow us to understand the current
    trends and motivations in industry marketplaces and academic researches toward
    SBs. According to the report by MarketsandMarkets [6], The SB market is estimated
    to grow from 7.42 billion dollars in 2017 to 31.74 billion dollars by 2022, at
    a Compound Annual Growth Rate (CAGR) of 33.7% from 2017 to 2022. In yet another
    report Zion Market Research [7], 2016 and it is expected to reach 61,900 million
    dollars by 2024. It is expected to exhibit a CAGR of more than 34% between 2017
    and 2024. The market is primarily driven by government initiatives globally for
    SB projects and the increasing market for integrated security and safety systems
    as well as energy efficient building systems. Figure 1 shows the Statista [8]
    forecast market size of the global smart home market from 2016 to 2022 (in billion
    U.S. dollars). FIGURE 1. Forecast market size of the global smart home market
    from 2016 to 2022 [8]. Show All According to the Gartner report [9], it is expected
    that the number of smart connected homes grows to 700 million homes by 2020, supplied
    by mass consumer adoption and an increase in the number of devices and apps available.
    Figure 2 shows Gartner’s 2018 Hype Cycle expectation for deep learning, ML, connected
    homes, and smart workspace. FIGURE 2. Hype Cycle for the Connected Home, 2018
    [7]. Show All According to report by Research and Markets [10], [11], the global
    IoT SB market will reach approximately $51.44B USD globally by 2023. The report
    also forecast that 33% of IoT SB market will be supplied by artificial intelligent
    technologies by 2023, and automation systems of SB will grow at 48.3% CAGR from
    2018–2023. Frost & Sullivan also predict that by 2025, the growth of connected
    home living will reach 3.7 billion smartphones, 700 million tablets, 520 million
    wearable health-related devices and 410 million smart appliances in the connected
    person world. B. Related Survey Papers Although many of survey papers focused
    on SBs have been published, none of them is focused on the role of data analytics
    and ML in the context of SBs. We describe the relevant survey papers next and
    will compare these survey papers to our paper in Table 2. Chan et al. in 2008
    provided an overview of smart home research [12]. It also discusses assistive
    robots, and wearable devices. The article reviews smart home projects arranged
    by country and continent. Alam et al. [13] provided details about sensors, devices,
    algorithms, and communication protocols utilized in smart homes. The paper reviews
    smart home works according to their desired services and research goals; namely,
    security, comfort, and healthcare. Lobaccaro et al. [14] presented the concept
    of smart home and smart grid technologies and discuss some challenges, benefits
    and future trends of smart home technologies. Pan et al. [15] reviewed the works
    on efficient energy consumption in SBs using microgrids. The survey investigates
    research topics and the recent advancements in SBs and the vision of microgrids.
    A few survey papers have reviewed works on facilitating independent living of
    the elderly people in smart homes. Ni et al. [16] conducted a survey on the features
    of sensing infrastructure and activities that can assist the independent living
    of the elderly in smart homes. A survey on ambient assisted living technologies
    for elderly people has been presented Rashidi and Mihailidis [17]. Peetoom et
    al. [18] focused on monitoring technologies to recognize life activities in-home
    such as fall detection and changes in health status. Salih et al. [19] presented
    a review of ambient intelligence assisted healthcare monitoring services and described
    the various application, communication, and wireless sensor network technologies
    that have been employed in the existing research literature. A number of papers
    have focused IoT: (a) Perera et al. [20] discussed IoT applications from the perspective
    of context-awareness and self-learning; (b) Tsai et al. [21] surveyed the applications
    of data mining technologies in IoT; and (c) Mahdavinejad et al. [22] reviewed
    some ML methods that can be applied to IoT data analytics. TABLE 1 List of Important
    Acronyms Used TABLE 2 Comparison of Relevant Survey Papers C. Contributions and
    Organization of This Paper To the best of our knowledge, this is the first survey
    that covers SBs jointly from the perspectives of application, data analytics,
    and ML. The main contributions of our paper are: Exploration of the potential
    of ML-based context-aware systems to provide SB services; Identification of research
    challenges and directions for SBs and how ML models can help in resolving such
    challenges; Identification of SB applications including comfort, security, energy
    efficiency, and convenience and the role of ML in such applications. Our research
    can provide an impetus to ML researchers to investigate new exciting ML-based
    SB services. The rest of the paper is organized as follows: Section II introduces
    the concept of SBs and its underlying architecture. Section III introduces the
    various components of the SB ecosystem and its underlying architecture. Section
    V presents context recognition and activity modeling and the role of ML in SBs.
    Section VI highlights research and development challenges and provides a future
    perspective of SB projects. Finally, Section VII presents a summary of lessons
    learned and concludes the paper. For the convenience of the readers, we have enlisted
    the important acronyms used in Table 1. SECTION II. Smart Buildings: Concept and
    Architecture In 1984, The New York Times published an article that described that
    real estate developers are creating “a new generation of buildings that almost
    think for themselves called intelligent buildings.” Such an intelligent building
    (IB) was defined as “a marriage of two technologies - old-fashioned building management
    and telecommunications.” [23]. Since then, many definitions of SBs have been suggested.
    This is due to the fact that the life-cycle of building planning, design, implementation,
    and operation involves different industry players that have different roles. In
    addition, the rapid changes in technology are affecting this definition. For instance,
    the advent of IoT and smart city concepts is impacting the definition of SB. Therefore,
    it is hard to compose a unique view of IBs with a single definition that is accepted
    worldwide. However, it is vital to have a good understanding of the main standard
    bodies and companies involved in shaping the development of SBs [1]. The Institute
    for Building Efficiency [24] focuses on the operation of buildings to provide
    efficient healthy and comfortable environment [25]. IBM [26] focuses also on the
    operation of SBs to provide integrated physical and digital infrastructures that
    provide reliable, sustainable, and cost-effective occupancy services. According
    to the European Commission’s Information Society [27], SBs means buildings that
    are supplied by information and communication technologies in the context of the
    combining Ubiquitous Computing and the IoT: In general, the buildings that are
    supplied with sensors, actuators, microchips, micro- and nano-embedded systems
    in order to enable collecting, filtering and producing more information locally,
    to be further incorporated and managed globally according to business functions.”
    In SBs, a variety of AI and multi-agent system techniques are employed including
    [28]: Reasoning and knowledge representation including ontologies and rules to
    represent devices and building services. ML for human activity recognition. Multi-agent
    systems for distributed intelligence and semantic interoperability. Intelligent
    approaches such as planning, intelligent control, adaptive interfaces, and optimization
    for efficient management of resources and services. An SB is therefore the integration
    of a wide range of systems and services into a unified environment that involve
    energy management systems, temperature monitoring systems, access security systems,
    fire and life safety, lighting control and reduction, telecommunications services,
    office automation, computer systems, area locating systems, LANs, management information
    systems, cabling and records, maintenance systems, and expert systems [29]. Figure
    3 shows examples of SB appliances including air-conditioning systems, lighting
    systems, solar energy generators, power-supply systems, temperature sensors, humidity
    sensors, power usage sensors, and surveillance cameras. For example, centralized
    control of these elements can promote the efficient use of energy through the
    intelligent control of lights and air conditioning units and the intelligent management
    of multiple green and brown energy sources. In most cases, an SB uses an Ethernet
    backbone with bridges to a Controller Area Network (CAN) [26]. FIGURE 3. Example
    of SB appliances. Show All It is easier to introduce smart services in residential
    buildings compared to commercial buildings since residential buildings have less
    technical equipment and less stringent efficiency requirements. Because the commercial
    buildings usually have more public visitors and therefore building models for
    commercial buildings are usually more challenging than building models for residential
    buildings which usually have a limited number of the occupants most of the time.
    In addition, the costs associated with the purchase and installation of smart
    devices and infrastructure at commercial buildings is more than residential buildings.
    Figure 4 shows an integrated framework in a residential building that employs
    a network of intelligent sensors. These sensors control systems such as energy
    generation, metering, HVAC, lighting, and security. A building automation system
    manages a set of smart appliances, sensors, and actuators, which collectively
    deliver services for the well-being of the inhabitants. Examples of such smart
    appliances, sensors, and actuators include washers and dryers, refrigerators,
    heaters, thermostats, lighting systems, power outlets, energy meters, smoke detectors,
    televisions, game consoles, windows/door controllers and sensors, air conditioners,
    video cameras, and sound detectors. More advanced smart devices are constantly
    being developed like smart floors and smart furniture [28], [30]. FIGURE 4. Smart
    appliances, sensors, and actuators in a smart residential building. Show All The
    IoT will enable the integration and interoperability of heterogeneous devices
    in SBs as well as the real-time processing of the data generated by sensors in
    support of optimal control and operation of the building. In this paper, We propose
    a layered architecture for SBs based on the layered architecture of IoT. Figure
    5 shows the layered architecture of SBs. FIGURE 5. Layers of the base IoT architecture
    that serves as the foundation for SBs. Show All As can be seen from the sensing
    layer (the bottom layer in Figure 5), input data is obtained from different types
    of physical sensors that monitor environmental parameters, collect data about
    residents and detect anomalies (e.g., fire and water pipe bursts). This layer
    also includes actuators that can be controlled to save energy, minimize water
    consumption, etc. The network layer (the second layer in Figure 5), includes access
    and core networks that provide transparent data transmission capability. This
    layer serves as a bridge between the sensing layer and the upper layers which
    are mainly responsible for data processing. An intermediary software layer called
    the middleware layer is needed (the third layer in Figure 5) to provide seamless
    integration of heterogeneous devices and networks covered by the sensing layer
    of the architecture. That layer serves as a bridge between the embedded software
    that runs of smart sensors and back-end software services. This layer provides
    interoperability using standardized programming interfaces and protocols [31].
    Therefore, this layer performs the process of converting the collected data from
    various data formats into a common representation. SB middleware can be based
    on open standards or proprietary, in addition, application-specific or general-purpose.
    Most often, proprietary middleware is application-specific while general-purpose
    middleware is based on open standards [28]. The context and semantic discovery
    layer (the fourth layer in Figure 5) is responsible for managing context and semantic
    discoverers including context and semantics generating, configuring, and storing.
    The processing and reasoning layer (the fifth layer in Figure 5) is responsible
    for processing the extracted information from the middleware then according to
    the application’s type it will make decisions. In this layer, there are various
    techniques of information processing applied to fuse, extract, contextualize.
    massive data into useful actionable knowledge. In this layer, two phases should
    be identified: context consumer and context producer of the middleware. In the
    context consumer phase, the data processing techniques are applied on the data
    produced by the middleware; while in context producer phase the process of decision-making
    is implemented to supply the service layer with valuable knowledge. while in the
    second stage, further context information can be provided to the middleware for
    registration in the ontology context. Specific services and applications are abstracted
    in the application layer (the top-most layer in Figure 5). This layer presents
    a framework with direct access to the underlying functionalities to serve in the
    implementation of various types of applications. Moreover, control panels should
    be installed in the building to control the automated indoor spaces and to support
    a local human-machine interface. For instance, in a multi-story building, each
    floor could have a control panel to automate the operations, such as control opening
    the windows, control of air conditioning to achieve the desired temperature, control
    close/open the blinds according to the preferred light intensity before using
    artificial lighting [32], [33]. Summary: Still there is no single standard definition
    for SBs. In this section, we reviewed many definitions for SBs by many institutes,
    counties, regions and different disciplines; each has their own definition for
    SBs. We presented the layered architectural pattern for adapting services in an
    SB environment. We wanted to provide a general design for adapting actions according
    to the different versions of context in SBs. This architecture may be used in
    different smart environments such as intelligent transport systems, security,
    health assistance, and SBs among others. We layered the architecture into six
    layers starting from the sensing layer, which includes various types of sensors
    that are installed to collect environmental information in SBs. While network
    layer providing data stream support and data flow control and ensuring that messages
    arrive reliably by using data transport protocols such as Wi-Fi, Bluetooth, Ethernet
    etc. Data Acquisition layer to collect the data from the heterogeneous sources
    of data. Context and semantic discovery layer to generate, configure, and store
    context and semantic information. Context processing and reasoning layer to process
    the information and extract the knowledge that making the decisions according
    to the application context. And the last layer which is application layer such
    as health assistance and elderly home care, comfort and entertainment services,
    security, tele-management, smart watering, energy efficiency, etc. After discussing
    the main components of commercial and residential buildings, we have now set the
    stage for a detailed discussion on the components of SBs in the next section.
    SECTION III. Smart Building Components Advances in smart building technology have
    driven to the extensive development of SBs to generate economic and environmental
    benefits for building owners through the convergence of IT and building automation
    systems. Figure 6 shows the key components of SB systems, these include extensive
    sensors and actuators systems, networking and communication systems, software
    platform system, HVAC system, and smart control devices. FIGURE 6. Components
    of smart buildings. Show All Current systems utilize control devices and smart
    sensors that are connected to a central system. These control devices and smart
    sensors are placed throughout the environment. Each particular system has its
    own collection of networking and communication systems that enable it to communicate
    with the central system. SBs are performing connected networks that serve as a
    communication backbone for multiple systems. In many ways, HVAC equipment is the
    most complicated building system, with numerous components arranged to produce
    heating, cooling, and ventilation. The functionality of HVAC system not only makes
    the building healthy and comfortable for its inhabitants, but it also manages
    a big part of the energy consumed, as well as plays a significant role in life
    safety. SBs adopt technology to monitor and control facility systems and perform
    any required modifications. The objective of an SB is to utilize computers and
    software to control lighting, alarm systems, HVAC, and other systems through a
    single computer interface. A. Sensors and Actuators for SBs Sensors and actuators
    are mechanical components that measure and control the environmental values of
    their environment. Sensors collect information from the environment and make it
    ready for the system. For instance, IR sensors can be utilized for human presence
    detection in a room. While actuator is a device to convert an electrical control
    signal to a physical action, such that it takes decisions and then performs proper
    actions according to the environment, which enables automated and remote interaction
    with the environment.For example, a light actuator is capable of switching on/off,
    dimming one or more electric lights [34]. The rapid development of micromechanics,
    microelectronics, integrated optics, and other related technologies has facilitated
    the development of different types of smart sensors integrated into daily objects
    and infrastructure at smart building environment or worn by the users, and are
    connected by network technologies in order to collect contextual information about
    daily living activities more efficiently and faster, with lower energy consumption
    and less processing resources. Environmental sensors are utilized for detecting
    the human activity of a specific object that performed in specific locations in
    the building, while wearable sensors are utilized for controlling and observing
    mobile activities and physiological signals [35]. 1) Environmental Sensors It
    is found that data collected from environmental sensors can form important information
    to monitor human behaviors within an SB. These sensory data are then analyzed
    to identify and observe basic and instrumental daily living activities made by
    occupants such as bathing, dressing, preparing a meal, taking medication etc.
    The environmental sensing is generally based on several simple binary sensors
    in every part of the home, RFID technology, and video cameras. This variety of
    sensing may implement important insight into contexts and actual activities although
    it might come with possible costs such as complexity. Motion sensors are utilized
    for detecting the occupant’s presence and location everywhere in the house. There
    are different types of motion sensors. IR presence sensor is one of the most utilized
    kind of motion sensors in SBs to detect occupants’ presence. Pressure sensors
    can be attached to the objects such as beds, chairs, sofas, and floors in order
    to track the actions and locations of the occupants. While Contact switches are
    usually placed on the doors of fridge, rooms, or cabinets to detect the actions
    that the occupant makes with these objects [36]. Light sensors, humidity sensors,
    temperature sensors, or power sensors are other types of sensors that are deployed
    and utilized in SB to recognize the activities. Light sensors are utilized to
    measure the light intensity in a particular room in the building. Humidity sensors
    are utilized to detect the air humidity of a specific location in the building.
    Temperature sensors are utilized to measure the temperature of the specific environment.
    while the power sensors are utilized to identify the power usage of electric devices.
    2) Wearable Sensors and Biosensors These sensors are attached directly or indirectly
    to the user body. Their small size enables these sensors to be attached to clothes,
    wristwatches, glasses, belts, shoes etc. These sensors can be categorized into
    inertial sensors and vital sign sensors (or biosensors). Wearable inertial sensors
    are highly transportable and no stationary units that can give accurately detailed
    features of occupant’s action and body posture. Those sensors are composed of
    accelerometers, gyroscopes and magnetic sensors. There is a need for receivers
    and cameras in the process of data collection, therefore can be used outside laboratory
    circumstances [37]. Wearable biosensors such as blood pressure, skin temperature,
    and heart rate are significant for collecting vital signs to monitor the health.
    The most commonly utilized inertial sensors for mobile activity monitoring are
    accelerometers and gyroscopes. Accelerometers can be utilized to measure the rate
    of acceleration accompanying a sensitive axis, they are useful to monitor the
    motion’s activities such as doing exercise, standing, sitting, walking, or walking
    upstairs and downstairs. While the gyroscopes can be utilized to measure angular
    velocity and maintain orientation. Some examples of primary vital signs are Electrocardiogram
    (ECG), heart rate, blood pressure, blood glucose, oxygen saturation, and respiratory
    rate. There are various vital sign sensor utilized to measure different vital
    signals such as Electroencephalography sensors (EEG) for observing electrical
    brain activity, Electrooculography sensors (EOG) for observing eye movement in
    ocular activity, Electromyography sensors (EMG) for observing muscle activity.
    Electrocardiography sensors (ECG) for observing cardiac activity, pressure sensors
    for observing blood pressure, CO2 gas sensors for observing respiration, thermal
    sensors for observing body temperature and galvanic skin response for observing
    skin sweating [38], [39]. 3) Heating, Ventilation, and Air Conditioning (HVAC)
    HVAC system plays an essential role in SB services. HVAC system plays a remarkable
    role in efficient energy consumption in SBs, as well as it offers new operating
    options to increase the occupants’ comfort. In addition to meeting the desired
    temperature, HVAC control systems are produced in order to sustain comfort within
    an enclosed space by producing a specific level of humidity, pressure, air motion,
    and air quality in an SB [40]. CO2, humidity and temperature levels in a building
    can affect occupant’s health and comfort; consequently measuring CO2, humidity,
    and temperature in this context can improve personal wellbeing [41]. Heating and
    cooling systems consume a huge amount of energy in the buildings, so it is necessary
    to optimize it utilizing smart controllers and sensors in order to save operational
    costs. Smart HVAC systems can sense and control efficiently different air quality
    parameters inside the building by utilizing distributed sensors and VAV fans throughout
    the building to perform an optimal ventilation [42]. Most of the current HVAC
    actuation systems in smart buildings are based on the data collected about the
    occupants using sensors and cameras, which are utilized specifically for HVAC
    systems. Certainly, There is a specific cost for the design, maintenance, setup
    and hardware of the data collection network [43]. Table 3 shows a summary for
    different types of smart sensors in the SBs. TABLE 3 Various Smart Sensors Useful
    in the Context of SBs B. Smart Control Devices Smart control devices collect data
    from a variety of sensors, process this data, and activate actuators to react
    to the events detected by the sensors. A smart control device can operate independently,
    without control by a central server. But there might be a needed communication
    amongst various control devices or they can connect with each other using the
    smart gateway. WeMo [44] is a Wi-Fi enabled switch utilized to turn electronic
    devices on/off from anywhere. It can control LED motion sensors, light bulbs,
    mart wall switches and plugs, and lighting devices, all from the smartphone app
    or browser. There is no hub needed for WeMo devices, everything can be managed
    through the free cloud service provided by Belkin. You can use the specific channel
    to connect the device to e-services such as Gmail to trigger specific actions.
    WeMo devices also support context-aware feature, it turns on/off automatically
    according to the time of day, whether it is sunrise or sunset etc. The Nest thermostat
    [45], a smart device developed by Nest—which has been acquired by Google—adjusts
    to your life and seasons change automatically. Just use it for a week and it programs
    itself. It learns about the level of temperatures that the occupants prefer and
    creates a context-aware personalized schedule. The smart thermostat turns to an
    energy-efficient mode automatically when the residents leave the building. It
    could start warming up the area when it senses activity, such as an occupant’s
    returning back home from work. The Nest Thermostat is controllable via a smartphone
    and an installed app. If you are away for a while, this device has also a capability
    to sustain a particular temperature in your house. Lockitron [46] is a door lock
    that can control the door remotely over the Internet to open and close it by phone.
    Lockitron app can be installed and used by any iOS or Android smartphone. Homeowners
    can directly grant family and friends the access to open a given door by providing
    authorization over the Internet. Lockitron can also utilize Bluetooth low energy
    technology, which means that it will keep controlling even in the event of Internet
    or power outages. Lockitron can also connect to the Internet with Bridge, through
    which occupants can control the bolt anywhere in the world. The SmartThings [47]
    SB automation system comprised of a communications smart hub, that supports various
    smart appliances and devices; the smart hub supports various technologies and
    protocols such as ZigBee, Z-Wave, as well as IP-accessible devices and lets you
    control appliances using Wi-Fi and Bluetooth connectivity. SmartThings provides
    kits that include smart plugs, in addition, the basic sensors that can be utilized
    to measure temperature, as well as to detect presence, motion, orientation, and
    vibration. SmartThings also includes an open platform that enables smart device
    vendors and third-party software to provide hardware and software that can be
    utilized alongside the platform. Philips Hue [48] is a combination of LED lighting
    with mobile technology. An accompanying mobile app that allows you to control
    lighting systems and changing color sets depending on your mood utilizing Wi-Fi
    technology. The new Philips Hue bridge supports the required authentication to
    enable Apple HomeKit technology to control and enable your Philips Hue to connect
    to other HomeKit enabled accessories and take control of your home. Blufitbottle
    [49] this bottle records the drinking habits of the users and sends them notifications
    about the time and amount of the water that they are supposed to drink to keep
    them healthy and hydrated. The app collects data about users such as their weight
    and age, plus other factors such as the current levels of temperature and humidity
    to estimate the amount of the needed water to keep them hydrated. When the user
    falls behind with hydration, an alert sounds, as well as a simple glance from
    the LEDs, will indicate when it’s time for the next drink. Canary [50] is an all-in-one
    home security system that comprises a set of sensors such as temperature, air
    quality, sound, motion vibration, in addition, an HD video camera in one unit.
    The system utilizes ML algorithms to let the users know what is happening at home
    and take action by sending notifications to your phone if something happens. Those
    ML models learn over time and send the users smarter notifications as it detects
    motion. So that, the longer you have the system, the more effective it becomes.
    Canary is able to decrease the rate of false alarms by learning the user behavior
    and the ambient noise level and the home temperature patterns. Amazon Echo [51]
    is a small cylinder enable the users to control anything in the home via the voice.
    Amazon Echo has a powerful voice recognition capability, the user does not have
    to worry about the complexities of their voice. Amazon Echo is connectable via
    Wi-Fi or Bluetooth, the users can send voice commands to control the speakers
    as well as other compatible devices such as Belkin’s WeMo and Philips Hue. It
    can also use Amazon cloud Lambda service to send commands. To send any command
    It requires to include the name of the program, for instance, “Alexa, turn on
    TV”. It also includes a network to distant servers, which slows down the response
    time. Honeywell Total Connect Remote Services [52] this device merges personal
    smart home automation with security monitoring task. It enables the occupants
    to control and monitor everything in the home from lighting and window shades
    systems to security cameras and smoke alarms. the user can utilize a smartphone
    app or desktop-mounted hardware console for controlling and monitoring. It can
    provide real-time alerts, GPS vehicle and asset tracking, video viewing, and mobile
    control. The system only supports Z-Wave devices, it needs to be installed by
    an authorized Honeywell dealer. It does not work with Wi-Fi enabled smart thermostats.
    In addition, the Honeywell provides security cameras and sensors, it also supports
    other smart devices from third parties, such as Yale locks and Lutron lighting.
    Table 4 shows a comparison among various smart control devices in the SBs. TABLE
    4 Comparison Among Various Smart Control Devices in SB C. Networking and Home
    Gateway An SB combines a communication network in order to control smart devices
    and services within the building. The communication network of a smart building
    can be based on diverse communication media such as twisted pair cable, as the
    traditional computer networks. The networking in building automation system has
    a tendency to utilize a heterogeneous network that is made up of diverse communication
    media and network standards. The building automation network is identified by
    physical technology and communication protocols. There is an internal network
    that connects devices inside the building, as well as the external networks, can
    be integrated separately. Public Internet, ISDN, and mobile phone networks are
    some examples of external networks [28], [53]. A typical SB may comprise a number
    of different components, such as sensors, actuators, communication and processing
    devices. Because of their nature, these components have limited capabilities and
    computational capacity in term of battery capacity and capability of data processing.
    To deal with this issue, most of the SB systems have been utilized as a central
    gateway to collect, process, and analyze context data from different sensors and
    actuators in the building. Several protocols such as Bluetooth, ZigBee, Wi-Fi,
    and Z-wave can be utilized for communicating the gateway. The home gateway can
    also collect and store data for a specific time period. Typically, these gateways
    can connect to the cloud services and perform data processing and reasoning tasks.
    The centralized gateway usually does not have any interface. They can be controlled
    and managed utilizing smartphones, tablets, or computers [54], [55]. In general,
    depending on the communication media used, SB network technology can be classified
    by interconnection method into three main types: Powerline, Busline, and Wireless
    [15], [56], which we describe next. 1) Powerline Communication (PLC) PLC method
    reuses the building electrical network; such that devices, appliances, and services
    are directly connected to the main power supply utilizing the already available
    electrical outlets in a building. The data is sent through the normal cable system
    to activate or deactivate the devices in the building. PLC system is historically
    the oldest technology in SB and is generally cheap but less reliable and scalable
    [3]. Originally, the application of PLC was mainly to secure the typical operation
    of the electric power supply system in case of failures or breakdowns through
    the direct exchange of information between the distribution center, and power
    plant. Therefore, this approach has become a competitive choice for SB networking,
    benefiting from availability, robustness, and ready connectivity of this method.
    Some of the protocols of this method offer a single-way communication, which enables
    the device to only receive information but not to communicate. There are different
    mainstream protocols of PLC method such as X-10, INSTEON, HomePlug, BACnet, and
    Lonworks. 2) Busline Busline systems in SBs networks use a separate physical media,
    usually twisted-pair cabling similar to the physical cables utilized for network
    services for transporting electrical signals. This type of systems is pleasant
    the building’s occupants, albeit the configuration process is complex, and it
    requires some knowledge of networking. Although the configuring complexity and
    installation cost of this system, the use of a separate cable could present a
    positive note about this approach, as it allows this method of networking to provide
    higher bandwidth, and to make it the most reliable of the three approaches. In
    addition, this technology usually supports a completed two-way communication protocol
    that enables the appliances to easily communicate with each other [57]. Some of
    the protocols in Busline technology are Konnex (KNX), CAN (Controller Area Network),
    Modbus, Meter-Bus (M-Bus). 3) Wireless Interconnection Many of the new SB applications
    use wireless technologies such as infrared and radio frequency, which are more
    convenient for users due to their untethered nature and the elimination of cables.
    The devices within the smart building can communicate wirelessly as radio wave
    can penetrate through floors, cabinets, and walls [56]. Because of the complexity
    and cost of potential modifications and of the re-wiring process in a smart building,
    several different wireless technologies are rising to produce flexible networking
    patterns convenient to occupants without taking to consider the physical wiring
    and deployment of such wire in the building. Typically, there are various protocols
    for the wireless system such as Bluetooth, ZigBee, WLAN, Z-wave, RFID etc., which
    essentially work in the industrial scientific medical bands, particularly in the
    2.4GHz frequency range. These wireless technologies are usually related to some
    control network concept in an SB such as low power consumption, high cost-effectiveness,
    low speed, flexibility in networking, deployment as well as building coverage
    [3]. The gateway is the central server of an SB that is commonly used in IoT solutions.
    The services provided by the gateway essentially concern to system management
    functionalities such as monitoring, controlling, and configuring the systems and
    their devices. It also supports some processing and data storage capabilities
    required for complex applications. D. Software Platform For a building to be “smart,”
    it is important that all the appliances and systems in the building communicate
    and exchange data securely with each other as well as with smartphones, tablets,
    and servers in the cloud. Software platforms play a critical role in exchanging,
    archiving and disseminating information through different protocols. These platforms
    use push, pull, publish/subscribe, etc. The goal of the joint commercial enterprises
    is to develop an open source software platform in order to make the process of
    data exchanging easier between the devices of different manufacturers. Therefore,
    the users will not have to worry in the future about the compatibility issues
    when utilizing electric and electronic devices of different manufacturers at home.
    In addition, the new platform can also offer a variety of different building services
    such as entertainment, energy efficiency, and security technology. Hence, this
    will enable creating different apps for these areas of use [58]. ABB, Robert Bosch
    GmbH, and Cisco Systems Inc. established an open-software platform called Mozaiq
    Operations GmbH [59] to unify smart building technology and offer interoperability
    across for all devices and services in the building, to simplify the experience
    for residents. It will enable users to seamlessly and intuitively customize their
    appliances and devices, regardless of manufacturers and brands of these devices,
    in order to improve energy efficiency and achieve a unique level of control and
    comfort. For instance, the user can close the blinds in the home either by a click
    from a smartphone or through a pre-set instruction; and switch off automatically
    all screen devices for the children to go outside to play. In a smart building,
    many devices and appliances can simply and securely share information with one
    another and with smartphones and other smart devices; and the Internet in general.
    Indigo Domotics [60] is to implement the do-it-yourself smart building platform.
    Indigo home automation software controllers available for the Mac OS enables residents
    to combine an array of common INSTEON, Z-Wave and X10 devices for unparalleled
    control of your building lighting, sensors, thermostats, and appliances. With
    Indigo Touch (sold through iTunes app store, iOS only), users will easily achieve
    remote control of their appliances utilizing an iPhone, iPad, or iPod Touch. They
    also can use a web browser on any device to control their appliances virtually
    anywhere in the world. The users can receive texts or emails about specific events
    has been detected for doors opening/closing, power failures etc. Indigo, from
    Perceptive Automation, is the newest home automation software for the Mac. OpenHAB
    [61] is an open-source software platform that follows a middleware approach for
    integrating different technologies in smart building systems into a single solution.
    OpenHAB platform address a variety of network technologies and appliances in the
    area of a smart building. Currently, the dependency on a particular vendor becomes
    a problem due to the lack of a common language that bridges the different devices
    with building automation system. The main goal of the OpenHAB platform is to integrate
    the new devices and technologies in a smart building system through a community-based
    approach. OpenHAB utilizes an OSGi based modular system for communicating between
    different technologies and devices. Bindings can be developed and deployed as
    an OSGi bundle to bridge a particular technology and device. There are different
    supported technologies exist such as EnOcean, KNX, Z-Wave, and others are supported
    through special bindings [62]. SmartThings [47] this platform composed of hardware
    devices, sensors, and software applications. Context information is collected
    from the sensors, this context is contributed to the reasoning and action that
    are performed by the application. For instance, the sprinkler in the garden can
    detect the rain, and switch itself off accordingly to save water. SmartThings
    kit comprises sensors, smart devices, and hub. While the SmartThings application
    is configured to enable users to control and monitor their building environment
    through a smartphone device. The SmartThings Hub works to connect the sensors,
    devices and building’s internet router to one another and to the cloud. It is
    compatible with different communication protocols such as Zigbee, Z-Wave, and
    IP-accessible devices. In addition, the SmartThings is compatible with other sensors
    and devices such as thermostats, moisture sensors, motion sensors, presence sensors,
    locks and garage door openers [63]. HomeOS [64] is Microsoft’s home operating
    system platform, that can be installed on a personal computer. It is an open platform
    that is not limited to Windows-based devices [65], [66]. with HomeOS platform,
    applications can be installed to maintain various context-aware functionalities,
    for example, taking an image by a door camera and sending it to the occupant when
    someone rings the doorbell. HomeOS provides a PC-like abstraction that manages
    and extends the technology of network devices to the users and developers in the
    smart building environment. Its design enables the users to map their protocol-independent
    services to support the applications with simple APIs, a kernel, and protocols
    of specific devices. HomeOS usually runs on an allocated computer such as a home
    gateway, it does not need any adjustments to commodity devices. HomeOS usually
    utilizes (i) Datalog-based access control to facilitate the process of managing
    technology in the smart home (ii) a kernel to incorporate the devices and applications
    and (iii) protocol-independent services to allow the developers manageable access
    to the devices. Lab of Things (LoT) [67], [68] is an experimental research platform
    that utilizes connected devices in the buildings. LoT offers a framework that
    provides deployment capabilities such as remote monitoring and updating of system
    health, and logging data collected from different appliances in cloud storage.
    It enables data sharing and collecting, sharing codes, connect hardware sensors
    to the software platform, and participants using HomeOS. The platform is designed
    to make it simple to design solutions that can be deployed in IoT based smart
    services such as healthcare, energy management services as it works in combination
    with HomeOS. Eclipse Smarthome [69] is a framework that has a focus on heterogeneous
    environments such as smart building and ambient assisted living. This platform
    takes to consider a variety of existing communication mechanisms. Eclipse SmartHome
    works as an abstraction and translation framework that enables communications
    across system and protocol boundaries. It provides many relevant implemented extensions,
    protocols, and standards that are significant for smart building services. Those
    implementations can be of Java library or an OSGi bundle shapes so that they can
    be utilized independently from the rest of the project. The framework can work
    on different embedded devices such as a BeagleBone Black, an Intel Edison, or
    a Raspberry Pi. Extensions of Eclipse SmartHome are compatible with the solutions
    provided by different vendors. This means your code that is written for a specific
    purpose can be extended easily on commercial platforms. Eclipse SmartHome offers
    a variety of characteristics to allow you to design a special Smart Home solution
    for your expectations [70]. Apart from discussing various SB solutions, we will
    also highlight the popular simulator called Cooja is used widely by the research
    community to produce small simulations for relatively large wireless networks
    of embedding sensors and actuators; and connected devices, in order to develop,
    debug and evaluate systems based on the wireless sensor network technology. Cooja
    simulator is a Java-based wireless sensor network simulator. It is distributed
    with Contiki OS project. Cooja enables the emulation of the set of sensor nodes,
    in addition, it can simulate physical and application layers of the system [71].
    There are three basic properties for the simulated node in Cooja: Its hardware
    peripherals, node type, and data memory. The node type can be shared among multiple
    nodes and defines properties that are common to all these nodes [72]. Summary:
    The field of SBs contains a variety of technologies, across commercial, industrial,
    institutional and domestic buildings, including building controls and energy management
    systems. Several organizations and institutions are working to supply buildings
    with technology that enables the residents to adopt a single device to control
    all electronic devices and appliances. In this section, we discussed the various
    components for SBs including sensors and actuators, smart control devices, smart
    gateway, networking and software platforms. SECTION IV. Ml Background for SBS:
    Models, Tasks, and Tools Massive data generated from sensors, wearable devices,
    and other IoT technologies provide rich information about the context of users
    and building status and can be used to design SB management. This context information
    is needed to extract useful and interesting insights for various stakeholders.
    When the data volume is very high, developing predictive models using traditional
    approaches does not provide accurate insight and we require newly developed tools
    from big data. Big data is primed to make a big impact in SBs and is already playing
    a big role in the architecture, engineering, and construction (AEC) industries
    [73], notably for waste analytics [74] and waste minimization [75]. ML is a powerful
    tool that facilitates the process of mining a massive amount of data that have
    been collected from different sources around us and make sense of a complicated
    world. ML algorithms apply a model on new data by learning the model from a set
    of observed data examples called a training set. For example, after being trained
    on a set of sample accelerometer data marked as walking or jogging, an ML algorithm
    can classify the future data points into walking and jogging classes. ML makes
    it relatively easy to develop advanced software systems without much involvement
    from the human side. They are applicable to many real-life problems in SB environments.
    One can also design and develop self-learning and collaborative systems. ML does
    not remove the human element from data science—it draws on computers’ strengths
    in handling big data to complement our understanding of semantics and context.
    It only needs training data to extract better features or parameters required
    to improve a given system. ML algorithms can be used to make predictions based
    on data patterns. It enables the computer to learn from the fed input data without
    being explicitly programmed so that ML algorithms can learn from and make predictions
    on input data [76], [77]. Nest thermostat is an example of a device that applies
    a specific temperature in a specific room and at a certain time of day according
    to the occupants’ preference. There are devices such as Amazon’s Echo that can
    learn from voice patterns, and the others those learn from much more complex behavior
    and activity patterns. A. Ml Models ML techniques have been widely used to develop
    smart systems which can sense and react according to context modifications in
    SBs [78]. There are many different ML algorithms, according to the two well-known
    theorems No Free Lunch theorem and Ugly Duckling theorem. No Free Lunch theorem
    states “there are no algorithms that can be said to be better than any other”,
    without prior information about the problem, any two algorithms may perform equally
    well in solving a problem. While Ugly Duckling theorem states “we cannot say that
    any two different patterns would be more similar to each other than any other
    pairs.” [79]. Mainly, ML is categorized into four categories handling different
    types of learning tasks as follows: Supervised learning, unsupervised learning,
    semi-supervised learning and reinforcement learning (RL) algorithms Figure 7 shows
    ML styles. These categories are described next and a summarized comparison between
    these ML techniques is presented in Table 5. TABLE 5 Comparison of ML Techniques
    FIGURE 7. ML styles. Show All 1) Supervised Learning refers to developing algorithms
    based on a labeled training dataset, from which the learner should generalize
    a representation by building the system model that represents the relations between
    the input, output and system parameters. ML model is developed through a training
    process that continues on the input training data until the model reaches the
    desired level of accuracy [80], [81]. Some examples of common supervised ML algorithms
    are: naive Bayes model, decision tree, linear discriminant functions such as support
    vector machines (SVMs), artificial neural networks (ANNs), hidden Markov models
    (HMMs), instance-based learning (such as k-nearest-neighbor learning), ensembles
    (bagging, boosting, random forest), logistic regression, genetic algorithms, and
    logistic regression [82], [83]. Supervised learning approaches are extensively
    used to solve different problems in smart buildings. Application in SBs: Boger
    et al. [76] proposed a supervised learning system using Markov decision processes
    to help people with dementia the process of hand washing. Altun et al. [84] make
    a comparative study on the supervised human activity classification approaches
    using body-worn miniature inertial and magnetic sensors. Mozer [85] developed
    the occupant comfort control of the home environment system using neural networks
    and reinforcement learning to control air heating, lighting, ventilation, and
    water heating in the smart home environment. Bourobou et al. [86] presented a
    hybrid approach using ANN and K-pattern clustering to identify and predict user
    activities in the smart environments. Hsu et al. [87] proposed a TV recommendation
    system using a neural network model based on user personalized properties such
    as activities, interests, moods, experiences, and demographic information data.
    Fleury et al. [88] proposed a healthcare-focused smart home system using the SVM
    algorithm to classify daily living activities based on the data from the different
    sensors. Supervised learning problems can be further grouped into classification,
    regression, time series, and ensemble method problems. a: Classification The task
    of classification algorithms is to classify an instance into a specific discrete
    set of possible categories. Given two sets of data (labeled and unlabeled datasets),
    the labeled dataset is used for the training process, while the unlabeled dataset
    will be used to evaluate of the classification results. The normal process is
    to count the number of instances that are assigned to the right category, which
    is also known as the accuracy rate (AR) defined by [21]. The classification algorithm
    can mathematically be described as follows: AR= N c N t (1) View Source where
    N c denotes the number of test instances that are correctly assigned to their
    categories to which they belong; N t the number of test instances. The precision
    ( P ) and recall ( R ) are used to measure the details of the classification results.
    The four possible outcomes are true positive ( TP ), false negative ( FN ), false
    positive ( FP ), and true negative ( TN ), the precision ( P ) and recall ( R
    ) are generally defined as: P= TP TP+FP (2) View Source Given P and R , a simple
    method to describe the precision and recall of the overall classification results,
    called F-score or F-measure, is defined as: F= 2PR P+R (3) View Source Commonly
    used classification techniques include decision trees, SVM, rule-based induction,
    neural networks, deep learning, memory-based reasoning, and Bayesian networks
    [89]. b: Decision Tree Algorithms The decision tree method is an important predictive
    ML modeling approach, which constructs a model of decisions presented based on
    the actual values of features in the data. Decision trees can be utilized for
    both classification and regression problems. In tree structures, leaves represent
    class labels and branches represent conjunctions of attributes that drive to those
    labels [90]. The decision trees that the target variable takes continuous values
    called regression trees. Decision trees are often one of the favorites of ML algorithms
    because of its speed and accuracy. The most common algorithms for decision tree
    are [91]: classification and regression tree, ID3, C4.5 and C5.0, Chi-squared,
    M5, and conditional decision trees. Application in SBs: Delgado et al. [92] propose
    an ML technique based on decision trees to extract the most frequent activities
    of human behavior and the temporal relationship of those activities in order to
    produce the human behavior quickly in a smart environment. Viswanathan et al.
    [93] introduce a prototype distributed data mining system for healthcare environment
    using C4.5 classification algorithm that can provide the patient monitoring and
    health services. Decision trees algorithm is a non-parametric algorithm that is
    easy to interpret and explain. The main disadvantage of this algorithm is that
    it can easily overfit. c: Bayesian Algorithms Bayesian methods utilize Bayes’
    theorem for classification and regression problems. The most common Bayesian algorithms
    are [94]: Naive Bayes, Gaussian naive Bayes, Bayesian belief network, Bayesian
    network. Application in SBs: Parnandi et al. [95] propose an indoor localization
    approach based on Naive Bayes classification and dynamic time warping, they exploit
    the embedded sensors of smartphones to determine the building that the user entered
    and the activities that the user is performing inside the building. Verbert et
    al. [96] proposed an ML approach based on Bayesian network to diagnosis the fault
    in HVAC systems. The model has been constructed based expert knowledge concerning
    conservation laws, component interdependencies, and historical data using virtual
    sensors. Naive Bayes classifier approaches have been applied with potential results
    for human activity recognition in [97], [98]. Naive Bayes approach recognizes
    human activities that identify with the highest probability to the set of sensor
    readings that were observed. d: Support Vector Machine (SVM) is a supervised ML
    algorithm which can be applied for both classification and regression problems
    though mostly used in classification challenges [140]. SVM is one of the most
    popularly utilized for many statistical learning problems, such as face and object
    recognition, text classification, spam detections, handwriting analysis etc. [141].
    is maximizing the margin that separating between the hyperplane of two classes’
    closest points. Support vectors are the points lying on the boundaries, and the
    optimal separating hyperplane is the middle of the margin [142]. Application in
    SBs: Fu et al. [105] proposed an SVM method to predict the system level electricity
    loads of public buildings that have electricity sub-metering systems. A real-time
    human tracker system proposed Nguyen et al. [106] using SVM for predicting and
    recognizing human motion based on the input images from a network of four cameras
    in the ubiquitous smart homes. Petersen et al. [107] developed an SVM model to
    predict the times where visitors are present in the home using only the data provided
    by wireless motion sensors in each room. Fleury et al. [88] presented a study
    for automatic recognition of daily living activities in a smart home based on
    SVM. They collected the data from various sensors such as Infra-Red Presence Sensors,
    door contacts, temperature and hygrometry sensor, and microphones. Das et al.
    [108] proposed a one-class classification approach for a real-time activity error
    detection in smart homes using one-class SVM. Zhao et al. [143] proposed an ML
    approach based on SVM and RNN to detect the occupancy behavior of a building through
    the temperature and heating source information for the energy efficiency consumption
    purposes. e: Artificial Neural Network Algorithms (ANNs) ANN models are inspired
    by the process of biological neural networks. ANN models are commonly utilized
    for regression and classification problems. The common ANN algorithms are [94]:
    Perceptron, Back-Propagation, Hopfield Network, and Radial Basis Function Network
    (RBFN). ANNs provide a number of advantages including it requires less statistical
    training, it has the capacity to detect complex nonlinear relationships between
    the predictor and response variables, as well as the ability to detect all possible
    relationships between predictor variables [104]. On the other hand, disadvantages
    include its “black box” nature, heavy computational burden and proneness to overfitting.
    However, due to the inherent features of neural networks, it has the following
    main limitations: challenge in training with no local optima, its accommodation
    to modifications in the behavior, the validation process of the results, and the
    complexity of network performance interpretation. Application in SBs: Badlani
    and Bhanot [99] developed a smart home system for energy efficiency applying pattern
    recognition based on ANNs, the system incorporates an RNN to capture human behavior
    patterns and an ANN for security applications in smart homes. Other researchers
    have applied ANNs to present context-aware services. Campo et al. [100] developed
    a system that calculates the probability of occupation for each section of the
    building and compares the probability with the current situation systematically.
    See [101] for a survey paper focusing on the role of ANNs for smart home services.
    Ermes et al. [102] proposed a hybrid classifier approach using a tree structure
    comprising a priori knowledge and ANN to recognize the activities such as rowing,
    biking, playing football, walking, running, sitting, or hiking. Ciabattoni et
    al. [103] proposed a home energy management system design using the neural network
    algorithm to predict the power production of the photovoltaic plant and the home
    consumptions during the given time. f: Deep Learning Algorithms: Deep learning
    methods represent an evolved form of ANNs in which a deep architecture (many layers
    comprising multiple linear and non-linear transformations [144]) is used. One
    of the promises of DL is replacing the manually selected features with efficient
    unsupervised or semi-supervised feature learning and hierarchical feature extraction
    algorithms. The most common DL algorithms are [145]: Convolutional Neural Network
    (CNN), Recurrent Neural Network (RNN), Deep Boltzmann Machine (DBM), Deep Belief
    Network (DBN), and Stacked Auto-Encoders. Deep learning has been used successfully
    in varieties of big data analytics applications, particularly natural language
    processing (NLP) applications, medical diagnosis, stock market trading, network
    security, and image identification. Deep learning is now ubiquitously used in
    major businesses and companies. Microsoft research on a deep learning system presented
    real-time speech translation system between Mandarin Chinese and English languages
    [146]. Apple’s Siri uses a deep learning trained model, and the voice recognition
    in the Google Android phone also uses a deep learning trained model [147]. DL
    utilizes a number of techniques such as drop-out and convolutions that enables
    the models to learn efficiently from high-dimensional data. However, DL requires
    much more data to train compared to other algorithms because of the magnitudes
    of parameters for estimation required by the models. Application in SBs: Choi
    et al. [114] propose two prediction algorithms deep belief network and restricted
    Boltzmann machines based on the DL framework for predicting different human activities
    in a building. They also presented a hybrid model which combines for predicting
    human behavior. The paper [115] proposes a generic deep learning framework based
    on convolutional and RNNs for human activity recognition that is suitable for
    multimodal wearable sensors, such as accelerometers, gyroscopes or magnetic field
    sensors. Alsheikh et al. [116] proposed a hybrid approach of DL and hidden Markov
    model for human activity recognition using triaxial accelerometers. Baccouche
    et al. [117] propose a two-steps neural-based deep model to classify human activities,
    the first step of the model is automatically learned spatiotemporal features based
    on Convolutional Neural Networks. Then the second step of the model uses an RNN
    to classify the entire sequence of the learned features for each time-step. In
    [118], they propose an acceleration-based human activity recognition method using
    Convolution Neural Network. In [119] a deep convolutional neural network as the
    automatic feature extractor and classifier for recognizing human activities is
    proposed using the accelerometer and gyroscope on a smartphone. Hammerla et al.
    [148] explore the performance of deep, convolutional, and recurrent approaches
    of deep learning for human activity recognition using wearable sensors. For the
    sake of measuring the performance, the authors used three representative datasets
    that comprise motion data collected from wearable sensors. g: Hidden Markov Models
    (Hmm) An HMM is a doubly stochastic process with a hidden underlying stochastic
    process that can be observed through the sequence of observed symbols emitted
    by another stochastic process. Application in SBs: Wu et al. [113] proposed an
    improved HMM to predict user behaviors in order to provide services for people
    with disabilities. They developed a temporal state transition matrix to be utilized
    instead of the fixed state transition matrix. Lv and Nevatia [112] used hidden
    Markov models for both automatic recognition and segmentation of 3-D human activities
    to allow real-time evaluation and feedback for physical rehabilitation. Cheng
    et al. [110] proposed an inference engine based on the HMM that provides a comprehensive
    activity of daily living recognition capability. They integrated both Viterbi
    and Baum-Welch algorithms to enhance the accuracy and learning capability. Chahuara
    et al. [111] proposed sequence-based models for online recognition of daily living
    activities in an SB environment. They presented three of sequence-based models:
    HMM, conditional random fields, and a sequential Markov logic network. h: Time
    Series Analysis A time series is a collection of temporal instances; time series
    data set usually have the following characteristics include the high dimensionality,
    large number of instances, and updating continuously [149]. One of the important
    purposes for time series representation is to reduce the dimension, and it divides
    into three categories: model-based representation, non-data-adaptive representation,
    and data-adaptive representation [150], [151]. Application in SBs: Survadevara
    et al. [125] proposed a wellness model using seasonal autoregression integration
    moving average time series with sleeping activity scenario in a smart home environment
    to forecast the elderly sleeping tendency. Zhou et al. [126] proposed a time series
    analysis framework to explore relationships among non-stationary time series in
    the case of data sensors in SBs. Jakkula and Cook [127] propose a time series
    based framework to determine temporal rules from observed physical and instrumental
    activities of occupants in a smart home. i: Regression The aim in regression problems
    is to estimate a real-valued target function. It is related to representing the
    relationship between variables that are repeatedly processed utilizing a measure
    of error in the predictions made by the model [152]. The most common regression
    algorithms are [153]: linear regression, logistic regression, stepwise regression,
    and ordinary least squares regression. Application in SBs: Chen et al. [120] used
    the regression technique of orthogonal matching pursuit algorithm to identify
    the physical and environmental parameters that providing the energy efficiency
    in an SB. Bouchard et al. [121] presented a gesture recognition system using linear
    regression combined with the correlation coefficient to recognize the gesture
    direction and estimate the segmentation of continuing gestures of daily usage
    activities in a smart environment. j: Ensemble Methods A combination of multiple
    classifiers often referred to as a classifier ensemble, group of classification
    models that are trained separately and the predictions of those models are then
    combined in a way to produce the overall prediction [154]. The most popular ensemble
    learning based classification techniques are [155]: random forest, boosting, gradient
    boosting machines, AdaBoost, bagging, and blending. Application in SBs: Jurek
    et al. [122] proposed a cluster-based ensemble approach solution for activity
    recognition within the application domain of smart homes. With this approach,
    activities are modeled as cluster collections built on different subsets of features.
    Fatima et al. [123] proposed an ensemble classifier method for activity recognition
    in smart homes using genetic algorithm optimization to merge the prediction output
    of multiple classifiers that make up the ensemble. They used the ANN, HMM, conditional
    random field, and SVM [13] as base classifiers for activity recognition. Guan
    and Ploetz [124] proposed a deep LSTM ensemble method for activity recognition
    using wearables: more specifically, the authors developed modified training procedures
    for LSTM networks and proposed the combination of sets of diverse LSTM learners
    into classifier collectives. 2) Unsupervised Learning Unsupervised Learning refers
    to developing algorithms that use data with no labels to analyze the behavior
    or the system being investigated [156]. Thus, the algorithm does not know about
    the truth of the outcome. In other words, the unsupervised learning algorithm
    classifies the sample sets to different clusters by investigating the similarity
    between the input samples. Clustering is done using different parameters taken
    from the data which enable us to identify correlations which are not so obvious.
    The inferring structures existing within the input data is used to prepare the
    model to prepare and extract general rules of the model. A mathematical process
    might be used to systematically reduce redundancy, or organize data by similarity
    [129]. The unsupervised approach has been applied to recognize various activities
    in smart buildings when it is challenging to have labels for input data [130].
    Common unsupervised learning problems are clustering, dimensionality reduction,
    and association rule learning. There are a variety of commonly used unsupervised
    learning algorithms, some of those algorithms are based on supervised-learning
    algorithms: the Apriori algorithm and k-Means. In unsupervised learning, usually
    there is no a measure for the output; we recognize only the features and the target
    is to define the patterns and relationships among a set of input measures [80].
    The major disadvantage of unsupervised learning is the absence of direction for
    the learning algorithm, hence, there might not be any useful detected knowledge
    in the selected set of attributes for the training. Clustering is a method of
    unsupervised learning that involves detecting patterns in the data by placing
    each data element into a group of K-clusters, where each group holds data elements
    most similar to each other [157]. Unsupervised learning problems can be categorized
    into clustering and association problems, which are described next. a: Clustering
    A clustering problem explores the internal groupings in the input data, such as
    grouping customers by their purchasing habits. Clustering techniques are usually
    organized by modeling strategies such as centroid-based and hierarchical. All
    methods are concerned with handling the internal structures in the input data
    to properly organize the data into groups of maximum commonality [158]. The quality
    of the clustering result is evaluated depends on the type of application that
    utilizes a clustering algorithm. For example, the sum of squared errors is generally
    utilized for data clustering while the peak-signal-to-noise ratio is used for
    image clustering [21]. The most common clustering algorithms are [153]: k-Means,
    k-Medians, expectation maximization, and hierarchical clustering. Application
    in SBs: Fahad et al. [128] propose an activity recognition approach that combines
    the classification with the clustering, in their approach the activity instances
    are clustered using Lloyd’s clustering algorithm. Then, they apply evidence theoretic
    K-Nearest neighbors learning method that combines KNN with the Dampster Shafer
    theory of evidence. The paper [86] proposes a hybrid approach to recognize and
    predict user activities in a smart environment. They use the K-pattern clustering
    algorithm to classify so varied and complex user activities, and ANN to recognize
    and predict users’ activities inside their personal rooms. Lapalu et al. [82]
    used an unsupervised learning approach to address the issues of daily living activities’
    learning in smart home. They utilize the Flocking algorithm for clustering analysis
    of a use case in cognitive assistance service that assists the people suffering
    from some type of dementia such as Alzheimer’s disease. Aicha et al. [83] present
    an unsupervised learning approach for detecting abnormal visits of an elderly
    in a smart home environment based on a Markov modulated Poisson process model.
    The model combines multiple data streams, such as in the front-door sensor transitions
    and the general sensor transitions. The other cases of social communication services,
    Rashidi and Cook [129] applied an unsupervised learning approach to detect social
    interaction and monitor activity daily living in a smart space, their approach
    can adapt and update automatically to reflect the changes in discovered patterns
    from implicit and explicit identified feedbacks of the occupant. Rashidi et al.
    [130] introduce an unsupervised method that identifies and tracks the normal activities
    that commonly occur in an individual’s routine in a smart environment. The activity
    discovery method of the system is produced to cluster the sequences based on the
    simple k-means algorithm. Fiorini et al. [159] proposed an unsupervised ML approach
    to identify the behavioral patterns of the occupants using unannotated data collected
    from low-level sensors in an SB. Their approach involves processing and analyzing
    collected data related to the daily living activities of 17 older adults living
    in a community-based home supplied with a variety of sensors. They extract activity
    information from collected data at different times of the day. b: Association
    The association rule learning problem is utilized to identify the rules that define
    large portions of input data, such as people that buy X item also tend to buy
    Y item. Association analysis is performed on rules discovered by analyzing input
    data for frequent if/then statement and using the criteria of support and confidence
    to discover relationships between unrelated data in a relational database or another
    information repository. Here “support” indicates how frequently the items appear
    in the database while “confidence” indicates the number of times the if/then statements
    have been found to be true. Many algorithms for generating association rules have
    been proposed. Apriori algorithm is the most well-known association algorithm
    [160]. Application in SBs: Aztiria et al. [161] proposed system that learns the
    frequent patterns of human behavior using association, workflow mining, clustering,
    and classification techniques. The core part of the system is the learning layer
    which is made up of two modules: the language module, which provides a standard
    conceptualization of the patterns; and the algorithm module, which discovers the
    patterns. Kang et al. [162] proposed a service scenario generation scheme for
    interpreting association rules extracted from the states of all devices in SB
    environments. Typically, These states are collected periodically at a specific
    time interval from the devices. Nazerfard et al. [163] propose a framework to
    discover the temporal features of the activities, including the temporal sequencing
    of activities and their start time and duration using the temporal association
    rule techniques in a smart home. 3) Semi-Supervised Learning Semi-Supervised learning
    lies between supervised and unsupervised methods. Input data is a composite of
    labeled and unlabeled samples. These hybrid algorithms aim to inherit the strengths
    of the main categories while mitigating their weaknesses. The model learns the
    patterns present in the data and also make predictions. Example problems are classification
    and regression [164]. There are some common semi-supervised learning models, including
    generative models, heuristic approaches, semi-supervised SVM, graph-based methods,
    self-training, help-training, mixture models, co-training and multi-view learning
    [94]. Application in SBs: Cook [131] combined fully-supervised and semi-supervised
    learning to recognize and follow activities that support health monitoring and
    assistance context-aware services for people experiencing difficulties living
    individually at smart homes. Liu et al. [132] proposed a vision based semi-supervised
    learning approach for fall detection and recognizing other activity daily living
    in smart environments to overcome the labeling challenges of human activities
    by systematic interpreting the activities with the highest confidence. Fahmi et
    al. [133] proposed a semi-supervised fall detection approach in which a supervised
    algorithm utilizing decision trees in the training process and then profiles are
    used to implement a semi-supervised algorithm based on multiple thresholds. Radu
    et al. [134] present semi-supervised ML method using only the low power sensors
    on a smartphone to consider the problem of determining whether a user is indoors
    or outdoors. Guan et al. [135] propose a semi-supervised learning algorithm for
    activity recognition named En-Co-training to make use of the available unlabeled
    samples to enhance the performance of activity learning with a limited number
    of labeled samples. The proposed algorithm extends the co-training paradigm by
    using an ensemble method. 4) Reinforcement Learning Reinforcement learning is
    a learning approach to control a system in order to maximize performance measure
    that represents a long-term objective [165]. Reinforcement learning, an area of
    ML inspired by behaviorist psychology, is concerned with the way that software
    agents have to take actions in an environment in order to maximize the concept
    of cumulative reward. RL algorithms learn control policies, particularly when
    there is no a priori knowledge and there is a massive amount of training data.
    However, RL algorithms suffer from some drawback such as the high computational
    cost required to find the optimal solution, such that all states need to be visited
    to choose the optimal one. The well-known approaches of RL are Brute force, Monte
    Carlo methods, Temporal difference methods, and Value function [166]. Q-learning
    [167] is a model-free reinforcement learning approach based on learning the required
    utility given a state decision. Application in SBs: Mozer [136] applied Q-learning
    for lighting regulation to predict the time of turning the lights ON/OFF in a
    building. This prediction model can be utilized to schedule the lights’ activations
    in a building for efficient energy consumption proposes. Li and Jayaweera [137]
    proposed a Q-learning based approximate dynamic programming algorithm to provide
    a more efficient, flexible and adaptive method. This approach can enable customers
    to make an optimal on-line decision making in SB environment to maximize the profits
    based on both local fully observable and the estimated hidden information of the
    building. Khalili and Aghajan [138] proposed a temporal differential class of
    RL method for autonomous learning of a user’s preference of music and lighting
    service settings in presence of different states of the user in SB environment.
    The preferences are learned by the model by using the explicit or implicit feedback
    from users when they react to the provided service. Xu et al. [139] give a survey
    of developments in RL algorithms with function approximation. They evaluated and
    compared different RL algorithms using several benchmark learning, prediction,
    and learning control tasks. B. ML Tasks for SBS In this section, we will describe
    the major ML tasks that are relevant to SB. The reader is referred to Figure 8
    for a general depiction of ML tasks in SBs and the steps taken to implement ML
    in an SB environment. FIGURE 8. ML tasks in SB environment. Show All 1) Data Collection
    and Acquisition A variety of data collection approaches are used, each of which
    has different deals in terms of capabilities, energy efficiency, and connectivity.
    Sensors and similar objects in SBs produce raw data simultaneously in an automated
    way and such devices may store the data for a specific period of time or report
    it to controlled components [168]. Data can be collected at gateways; the collected
    data is then filtered and processed, fused into compact forms for efficient transmission.
    A variety of communication technologies such as Zigbee, Wi-Fi, and cellular are
    utilized to transfer data to collection points. Data collected from a global-scale
    deployment of smart things defines the basis for decision making and providing
    services. It is possible that the decisions are unreliable when the quality of
    utilized data is poor [169]. Zhao et al. [170] propose a data acquisition and
    transmission system which could be used for monitoring systems to collect energy
    consumption data (e.g., electricity, water, gas, heating, etc.) from terminal
    meters which are installed in buildings. The system stores the data periodically
    after analyzing and processing it and finally transmits the data to servers through
    the Ethernet. Rowley et al. [171] propose the data acquisition and modeling approaches
    that can support the delivery of building energy infrastructure in both new building
    and renovated real-world contexts. Such methods provide a means to achieve short,
    medium and long-term forecasting of possible scenario pathways to multi-objective
    sustainable outcomes. CLEEN MMEA [172] platform that collects, processes, and
    manages the data and initiates contextual knowledge extraction. The purpose is
    to establish an online marketplace to collect data and provide services for different
    companies. The interfaces are made public so that any company can easily join
    the network to buy or sell services. The analysis results can be given to an energy
    services company in order to allow offering the service to the owners. A typical
    example of open access data collection system is e3Portal [173] developed by VTT
    in collaboration with Finnish municipalities. e3Portal offers information and
    tools when planning savings measures and energy retrofitting in municipal buildings.
    It also involves frequently updated data regarding energy and water consumption
    in thousands of public buildings like schools, kindergartens, offices, hospitals,
    other health care facilities, etc. Decision makers, designers, operation and maintenance
    personnel, as well as buildings users, can utilize it. There are projects that
    provide publicly available SB datasets for researchers to conduct further studies;
    A list of “Home Datasets” [174] includes the datasets collected by projects from
    UC Berkeley, MIT, Washington State University, University of Amsterdam, University
    of Edinburgh, and the University of Tokyo. The WARD [175] project supported by
    NSF TRUST Center at UC Berkeley provides a benchmark dataset for human action
    recognition using a wearable motion sensor network. The dataset was collected
    from 13 repetitive actions by 13 male and 7 female participants between the ages
    of 19 and 75. An MIT project [176] collected daily live activities dataset from
    two single-person apartments within a period of two weeks. Eighty-four sensors
    to record opening-closing events were attached to different appliances and devices
    such as drawers, refrigerators, containers, etc. Banos et al. [177] introduced
    an open benchmark dataset collected from various inertial sensors attached to
    different parts of the body. They considered 33 fitness activities, recorded using
    9 inertial sensor units from 17 participants. The CASAS project [178] at Washington
    State University provides a publicly-available dataset for a three-bedroom apartment
    with one bathroom, a kitchen, and a living room. Different types of motion and
    digital sensors are installed to support temperature readings, in addition, the
    analog sensors are installed to support readings for hot water, cold water, and
    stove burner use [179]. The PlaceLab project [180] of MIT provides a dataset collected
    from a one-bedroom apartment with more than 900 sensors, including those coming
    from motion, switch and RFID sensors. That is being used to monitor activity in
    the environment in the context of a smart home [181]. A collection of smart meters
    data from five houses in the UK [182] That consists of 400 million instances.
    The active power is formed by different appliances and the whole-house power demand
    every 6 seconds. The major challenges that arise for data collection are scalability,
    privacy, security, and heterogeneity of resources [183]. Automated sensor data
    collection process collects a large amount of data that overwhelms the collection
    and analysis centers in comparison to the data collected from other sources such
    as IoT devices and social media. This leads to a huge number of small synchronous
    write operations to the database storage system, consequently, resulting in serious
    performance bottlenecks to the storage system design [184]. Because of the extensive
    use of RFID technology, privacy issues arise in data collection; for example,
    the RFID tags carried by a person may become a unique identifier for that person.
    Also, other security concerns appear, for example, the radio signals of RFID technology
    are easily jammed. Hence, that can disrupt the data collection process [185].
    The heterogeneity of data that is being collected from different resources is
    another major challenge, such that the data are usually very noisy, large-scale,
    and distributed. This makes it very difficult to use the collected data effectively
    without a clear description of existing data processing techniques [184]. 2) Data
    Preprocessing A large amount of data are generated by sensors in SBs; this data
    comes from various sources with diverse formats and structures. Usually, this
    data is not ready for analysis as it might be incomplete or redundant due to low
    battery power, poor calibration, exposure to various malicious elements and interference.
    Therefore, raw data typically needs to be preprocessed to deal with missing data,
    discard noisy and redundant data and integrate data from various sources into
    an integrated schema before being committed to storage. This preprocessing is
    called data cleaning. The quality of data can be improved substantially by applying
    some cleaning techniques to the data before it arrives its end user [168], [186].
    Data cleaning is one of the significant tasks in the data processing phase. Data
    cleaning is not a new process particular for the IoT data processing. It has already
    been applied as a process for database management systems. Presenting a data cleaning
    method would further aid the applications to focus on their core logic without
    worrying about data reliability post-processing overheads [184]. There are many
    different techniques that have been utilized to deal with the problem of cleaning
    noisy data streams such as Kalman filters [187], statistical models [186] and
    outlier detection models [184]. One of the major challenges with data cleaning
    techniques in the SBs is the heterogeneity of data collected from different sources
    particularly WSN- and RFID-enabled data streams. The utilized data cleaning techniques
    should be able to deal with several different variables of interest to satisfy
    IoT applications’ requirements, for example, setting home temperature based on
    observed outer temperature, user habits, energy management, etc. [169] Any type
    of failures such as a failed sensor, network issues, camera failure, or database
    crashes in the process of collecting data would invalidate the data. Consequently,
    this type of impediment will dramatically increase the time required to collect
    data [179]. 3) Dimensionality Reduction There are huge volumes of raw data that
    are captured from heterogeneous and ubiquitous of sensors used in SBs. Most of
    the data collected from those sensors are redundant and they need to be brought
    down to a smaller number of features by applying dimensionality reduction techniques
    without losing significant information [188]. The main idea from the dimensionality
    reduction strategy is to find a new coordinate system in which the input data
    can be represented with much fewer features without losing significant information.
    The dimensionality reduction can be made in two different ways: by extracting
    of the features that represent the significant data characteristics (this technique
    is called feature extraction), or by only selecting the most relevant features
    from the original dataset, this method is called feature selection [189], [190].
    Like clustering methods, the dimensionality reduction approach explores and exploits
    the internal structure of the data, but in this case in an unsupervised manner
    using less information. Most of these techniques can be utilized in classification
    and regression problems. Examples of some salient algorithms are [153]: Principal
    Component Analysis (PCA), Principal Component Regression (PCR), and Linear Discriminant
    Analysis (LDA). Chen et al. [191] propose a framework using the classification
    information of local geometry of data to reduce the dimensionality of a dataset
    on human activity recognition from wearable, object, and ambient sensors. a: Feature
    Extraction The main components of the original data are the features. After extracting
    the features from the raw dataset, such features contain important information
    that is used by the learning algorithms for the activities discrimination. The
    most common methods of feature extraction work in time, frequency, and discrete
    domains [192]. Among time domain method, mean and standard deviation are the key
    approaches for almost all sensor types. While the frequency domain method focuses
    on the periodic structure of the collected data. Wavelet Transformation and Fourier
    Transform are the most common approaches. And discrete domain methods such as
    Euclidean-based distances, dynamic time warping, and Levenshtein edit distance
    are key approaches implemented in several applications such to string similarity,
    classifying human activities and modeling human behavioral patterns [16], [193].
    b: Feature Selection The main role of feature selection is to discriminate the
    most related subset of features within a high dimensional vector of features,
    so that reduces the load of noise and computational expense on the learning models.
    In order to map the high dimensional vector of features into a lower dimensional
    vector, there are several common algorithms used such as Linear Discriminant Analysis
    (LDA), Principal Component Analysis (PCA), and Independent Component Analysis
    (ICA) [194]. Hausmann and Ziekow [195] proposed an approach for automatically
    adapting the feature selection for SBs application ML models from the time-series
    data based on wrapper methods and genetic optimization. Fahad et al. [196] propose
    an activity recognition approach for overlapping activities using K-Nearest neighbors
    approach that distinguishes the most important features from the collected information
    obtained from deployed sensors in multiple locations and objects. Fang et al.
    [197] determine that the different feature sets generate different levels of accuracy
    for recognizing human activities, and selecting inappropriate datasets increases
    the level of computational complexity and decreases the level of prediction accuracy
    in smart home environments. The wrapper and filtering are the two main statistical
    methods of feature selection problem. It is argued that although the wrapper approach
    may obtain better performances, filters are less resource intensive and faster
    [198]. In [199], different feature selection methods are utilized for the process
    of dimensionality reduction of the learning problem to recognize the human activities
    from observed sensors. The authors show that the performance of the learning models
    to recognize the human activity has a strong relationship with the utilized features.
    c: Feature Projection feature projection can be represented as a mapping from
    the original set of features to an appropriate set that optimizes the learning
    criterion, such that the feature projection approach allows the process of visualizing
    and mapping the high-dimensional feature vectors to low dimensional one, in addition,
    it enables analyzing the distribution of the reduced feature vectors [200]. Consequently,
    the feature projection approach reduces the pattern recognition’s processing time
    and enables selecting the best-performed classifier for the reduced feature vectors.
    Hence, it makes real-time implementation possible [198]. Chu et al. [201] proposed
    a linear supervised feature projection that utilizes the LDA algorithm for EMG
    pattern recognition that attempted to recognize nine kinds of hand motion. C.
    ML Tools & Platforms for SBs There are a variety of existing ML platforms and
    tools to support the learning process. With the current increasing number of those
    kinds of toolkits, the task of selecting the right tool for processing big data
    streaming from various sources can still be difficult. Typically, there is no
    single toolkit that truly fits and provides solutions for all different problems.
    Many of the available toolkits might have overlapping uses, and each has advantages
    and disadvantages. Most of those toolkits might require experiences in the domains
    of programming languages and system architecture. In addition, usually many people
    lack a full understanding of the capabilities and how to use those available platforms
    [202]. The important factors that must be considered when selecting a specific
    ML tool are scalability, speed, coverage, usability, extensibility, and programming
    languages support. With respect to the scalability factor, the size and complexity
    of the data should be considered to determine if a specific toolkit will be fit.
    The processing platform that the library is running on and the complexity of the
    algorithm affect the speed factor. Not all the projects prioritize the speed factor;
    if the models require frequent updates, the speed may be a crucial concern; but
    not otherwise. Coverage represents the number of ML algorithms implemented in
    the tool. With the massive amount of data capturing from heterogeneous sources,
    ML community faces the challenges of how the ML model can efficiently process
    and learn from the big data. In general, the available big data tools do not implement
    all varieties of different classes of ML algorithms, and typically their coverage
    ranges from a few algorithms to around two dozen. The usability factor includes
    elements such as initial setup processing; continuous maintenance; the available
    programming languages and user interface available; the amount of documentation,
    or availability of a knowledgeable user. The extensibility factor means that the
    implementations introduced in the tools can be utilized as building blocks towards
    new systems. It is necessary to evaluate tools in terms of how well they are able
    to meet this factor. There are a variety of ML libraries that are available in
    different programming languages. Depending on the task you are trying to accomplish,
    certain languages, libraries, and tools can be more effective than others. The
    following provides a detailed observation of the strengths and weaknesses of the
    top used deep learning and ML tools. The reader is also referred to Table 6 for
    a concise tabulated summary of the described deep learning and ML tools. TABLE
    6 Comparison Between Deep Learning and ML Tools 1) H2O H20 [203] is an open-source
    in-memory, distributed, and scalable ML framework for big-data analysis that supports
    ML libraries, along with tools for parallel processing, analytics, data preprocessing
    and evaluation tools. It is produced by the H2O.ai, which launched in 2011 in
    Silicon Valley. The most notable feature of this product is that it provides numerous
    tools for deep neural networks. The H2O software APIs can be called from Python,
    Java, R, and Scala. Users without programming expertise can still utilize this
    tool via the web-based User Interface. In addition to the processing engine provided
    by H2O framework, it also allows the users to integrate their models with other
    available frameworks such as Spark and Storm. Depending on what is suitable for
    the algorithm, The H2O’s engine uses multiple execution methods to process data
    completely in memory. The general technique used is distributed Fork/Join, which
    is reliable and suitable for massively parallel tasks. The H2O software can be
    run on different operating systems such as Microsoft Windows, Mac OS X, and Linux
    (e.g. Ubuntu 12.04; CentOS), It also runs on Apache Hadoop Distributed File System
    (HDFS) and Spark systems for big-data analysis. In addition, it can operate on
    various cloud computing environments such as Amazon EC2, Google Compute Engine,
    and Microsoft Azure. As of July 2016, the algorithms supported in H2O cover the
    tasks classification, clustering, generalized linear models, statistical analysis,
    ensembles, optimization tools, data preprocessing options and deep neural networks.
    2) MLlib (Spark) MLlib [204] is Apache Spark’s ML library. MLlib aims to provide
    scalable and easy to use ML methods. It includes common ML algorithms for classification,
    regression, clustering, dimensionality reduction, as well as lower-level optimization
    primitives and higher-level pipeline APIs. The classification techniques of SVM,
    random forest, logistic regression, Naïve Bayes, decision trees, and gradient-boosted
    trees are supported whereas for clustering, k-means, Gaussian mixture, and power
    iteration clustering are supported. MLLib supports implementations for linear
    regression and isotonic regression, and incorporates a collaborative filtering
    algorithm using alternating least squares. PCA is supported for dimensionality
    reduction. MLlib includes APIs for development in Scala, Java, Python, and SparkR.
    Generally, MLlib depends on Spark’s iterative batch and streaming approaches,
    as well as its use of in-memory computation. 3) Tensorflow Tensorflow [205] is
    an open source software library for numerical computation and deep ML in a variety
    of perceptual and language understanding tasks utilizing data flow graphs. TensorFlow
    was originally developed by the Google Brain team and was released in November
    2015 under an Apache 2.0 open source license. TensorFlow has tools that support
    deep learning, reinforcement learning, and other algorithms. TensorFlow implements
    data flow graphs, where “tensors” are batches of data that can be processed by
    a set of algorithms defined by a graph. The movements of the data through the
    system are called “flows”—hence, the name. TensorFlow can run on multiple CPUs
    and GPUs. It can run on Linux, Mac OS X desktop, and server systems, and Windows
    support on roadmap, as well as on Android and Apple’s iOS mobile computing platforms.
    TensorFlow is written with a Python API over a C/C++ engine that makes it run
    fast. TensorFlow utilizes a symbolic graph of vector operations method, in order
    to easily define a new network. However, TensorFlow has a weakness that is related
    to modeling flexibility. Such that each computational flow has to be constructed
    as a static graph. That makes some computations such as beam search difficult.
    4) Torch Torch [206] is an open source ML computing framework that supports a
    variety of ML algorithms. Torch was originally developed at NYU. It is efficient
    and easy to use, thanks to a script language based on the Lua programming language
    and a C/CUDA implementation, Torch was intended to be portable, fast, extensible,
    and easy to use in development. Some version of Torch is employed by large companies
    such as Google DeepMind, the Facebook AI Research Group, IBM, Yandex, and the
    Idiap Research Institute. In addition, it has been extended to run on Android
    and iOS platforms. A variety of community-contributed packages for Torch, giving
    it a versatile range of support and functionality. It provides various deep learning
    algorithms that support computer vision; signal, image, video, and audio processing;
    parallel processing and networking [207]. 5) Deeplearning4j Deeplearning4j [221]
    is an open source distributed DL library, primarily developed by Adam Gibson from
    an ML group in San Francisco. Deeplearning4j is written for Java and JVM as well
    as to support a variety of DL algorithms such as restricted Boltzmann machine,
    deep belief networks, convolutional networks, recurrent neural networks, deep
    autoencoder, stacked denoising autoencoder, and recursive neural tensor network.
    All these algorithms can be integrated with Hadoop and Spark for distributed parallel
    processing. Deeplearning4j relies on Java programming language, in addition, it
    is compatible with Clojure and includes a Scala API. Deeplearning4j is designed
    to be utilized in business environments, rather than as a research tool. It is
    applied in a variety of applications such as fraud detection, anomaly detection,
    recommender systems, and image recognition. 6) Massive Online Analysis (Moa) MOA
    [222] is one of the common open source frameworks for data stream mining and possessing.
    MOA is written in Java related to the WEKA project that developed at the University
    of Waikato, New Zealand. It includes a set of learners and stream generators that
    can be used from the GUI, the command-line, and the Java API. MOA supports a variety
    of ML algorithms for classification, regression, clustering, outlier detection,
    as well as some tools for evaluation [223]. 7) Caffe Caffe [224] is a DL framework,
    it is primarily developed with the consideration of expression, speed, and modularity.
    It utilizes the machine-vision library for fast convolutional networks from Matlab,
    which has been ported to C and C++. It is developed by the Berkeley vision and
    learning center and by the community contributors. In Caffe, multimedia scientists
    and practitioners have an organized and state-of-the-art toolkit for DL algorithms.
    Caffe was originally developed for machine-vision, it has been utilized and improved
    by users in other fields such as robotics, neuroscience, speech recognition, and
    astronomy. In addition, it supports Python and MATLAB code bindings. Caffe offers
    image classification with state of the art CNN algorithm. Caffe is mainly utilized
    as a source of pre-trained models hosted on its Model Zoo site. Caffe is useful
    for performing image analysis using CNNs and regional analysis within images using
    RCNNs. The performance and processing speed of Cafee make it as one of the most
    utilized platforms for research experiments and industry deployment. It has the
    capability to process over 60 million images per day with a single NVIDIA K40
    GPU. Caffe has already been applied in many research projects at UC Berkeley and
    other universities, performing very well in many tasks such as object classification,
    object detection, and Learning Semantic Features. It provides a complete and well-documented
    toolkit for training, testing, tuning, and deploying models. Caffe utilizes a
    large repository of pre-trained neural network models called the Model Zoo, which
    is suitable for a variety of common image classification tasks [225]. 8) Azure
    Ml Microsoft first launched Azure ML [226] as a preview in June 2014. Azure ML
    enables users to create and train models, then convert those models into APIs
    that can be applied to other services. Users can get up to 10GB of storage per
    account for model data, although they can also connect their own Azure storage
    to the service for larger models. programmers can use either the R or Python programming
    language for developing with Azure services. Users can purchase ML algorithms
    from Microsoft Azure Marketplace, they can also obtain free algorithms from the
    community gallery that has been created by Microsoft to share ML algorithms with
    each other. They share many of predictive analytics of personal assistant in Windows
    Phone called Cortana. Azure ML also utilizes solutions from Xbox and Bing. Azure
    currently supports different features and capabilities such as run Hadoop over
    Ubuntu Linux on Azure, it also supports hosting Storm for analyzing data streams.
    In addition, it allows developers to connect.NET and Java libraries to Storm.
    Azure ML studio supports a variety of modules for training, scoring, and validation
    processes. Azure ML comes with a large library of algorithms for predictive analytics.
    The popular families of algorithms are regression, anomaly detection, clustering,
    and classification. D. Real-Time Big Data Analytics Tools for SBS Several applications
    need to have real-time data analysis for stream data and waiting for the information
    to be archived and then analyzed is not practical for these type of applications.
    Generally, Stream processing is intended to analyze a massive amount of data and
    act on real-time streaming data utilizing continuous queries such as SQL-type
    queries to handle streaming data in real-time utilizing scalable, available and
    fault-tolerant architecture. Essential to stream processing is Streaming Analytics.
    More and more tools offer the possibility of real-time streaming data. The following
    presents some of the common and widely used options. 1) Apache Storm Storm [227]
    is an open source distributed real-time data processing framework that provides
    massively scalable event collection. The initial release was on 17 September 2011,
    it was created by Nathan Marz and the team at BackType, and is now owned by Twitter.
    Storm can easily process unlimited streams and with any programming language.
    It has the capability to process over one million tuples per second per node with
    a highly scalable, fault-tolerant, and reliable architecture. Storm is written
    in Java and Clojure. Trident is a high-level abstraction layer for Storm, can
    be utilized to accomplish state management persistence. Storm is a system of complex
    event processing. This type of solution allows companies to respond to the arrival
    of sudden and continuous data (information collected in real-time by sensors,
    millions of comments generated on social networks such as Twitter, WhatsApp and
    Facebook, bank transfers etc.). Some of the specific applications of Storm include
    customer service management in real-time, operational dashboards, data monetization,
    cybersecurity analytics, and threat detection. 2) Apache Kafka Kafka [228] is
    a fast, scalable, fault-tolerant and durable open-source message broker project
    that originally developed by LinkedIn, and subsequently open sourced in early
    2011 and released by Apache Software Foundation on 23 October 2012. Kafka is written
    in Scala. It supports a variety of use case scenarios with a focus on high throughput,
    reliability, and scalability characteristics. For example, it can message sensor
    data from heating and cooling equipment in office buildings. 3) Oracle In 2013,
    Oracle started utilizing Oracle Enterprise Manager that includes Oracle Big Data
    Appliance to manage all of its big-data technologies. Oracle has also produced
    multiple low-latency technologies for Oracle Fast Data components includes Oracle
    Event Processing, Coherence, NoSQL, Business Analytics, and Real-Time Decisions.
    Oracle Event Processing provides solutions for building applications to filter,
    correlate and process events in real-time. It supports IoT services by delivering
    actionable insight on data streaming from a variety of data sources in real-time
    [229]. Oracle Stream Explorer (OSX) and Oracle R Enterprise (ORE) aim to support
    equipment monitoring applications for the systems that made of a variety of components
    through sensors, anomaly detection and failure prediction of such systems. ORE
    [230] is utilized to handle low-frequency streams in batch mode, while OSX handles
    the high-frequency streams making real-time predictions and sends the results
    back to user applications that are communicating with the output channels. OSX
    [231] is a middleware platform has the capability to process large amounts of
    streaming data in real-time for a variety of streaming data applications, from
    a multitude of sources like sensors, social media, financial feeds, etc. It streamlines
    real-time data delivery into most popular big data solutions, including Apache
    Hadoop, Apache HBase, Apache Hive, Apache Flume, and Apache Kafka to facilitate
    improved insight and timely action. Oracle Real-Time Decisions [232] is a decision
    management platform with self-learning that determines optimized recommendations
    and actions with messaging, imagery, products, and services within business processes.
    4) Amazon Kinesis Streams Amazon Kinesis [233] is a platform for collecting and
    processing large streams of data on AWS in real-time, AWS launched Kinesis in
    November of 2013, offering powerful services for loading and analyzing streaming
    data, in addition, it provides custom streaming data applications for specialized
    needs. Sometimes Terabytes of data per hour can be generated - that need to be
    collected, stored, and processed continuously from various application services
    such as web applications, mobile devices, wearables, industrial sensors etc. Typically,
    Amazon Kinesis Streams application can use the Amazon Kinesis Client Library and
    reads data from an Amazon Kinesis stream as data records. These applications can
    run on Amazon EC2 instances. 5) Apache Spark Streaming Apache Spark [234] is an
    open-source platform for real-time data processing, it can implement using four
    different languages: Scala, the syntax in which the platform is written; Python;
    R; and Java. Spark Streaming is an extension of core Spark API. It allows building
    fault-tolerant processing of real-time data streams. Spark Streaming allows the
    processing of millions of data among the clusters, and Spark SQL which makes it
    easier to exploit the data through the SQL language. Spark Streaming divides the
    live data stream into a predefined interval of batches, then handles each batch
    of data as Resilient Distributed Datasets (RDDs). Then we can apply operations
    like map, reduce, join, window etc. to process these RDDs. The last results of
    these operations are then returned in batches. Spark Streaming can be utilized
    for a variety of application such as real-time monitoring and analyzing of application
    server logs. These logs messages are considered time series data. Examples of
    such type of data are sensor data, weather information, and clickstream data.
    This data can also be utilized for predicting future states based on historical
    data. Apache assures a computation speed that performs the operations quicker
    by 100 times than what is currently offered by Hadoop MapReduce in memory, and
    10 times better than in disc. Spark can be executed either in independent cluster
    mode or in the cloud on different frameworks such as Hadoop, Apache Mesos, and
    EC2. In addition, Spark can access numerous databases such as HDFS, Cassandra,
    HBase or S3, Amazon’s data warehouse. 6) Apache Flume Flume [242] is a distributed,
    reliable and open-source log data aggregation framework. Apache Flume is applied
    in many applications ranging from log data aggregation, to transport massive quantities
    of event data including network traffic data, social-media-generated data, email
    messages and pretty much any data source possible into the HDFS. The architecture
    of Flume is simple and flexible, it is also robust and fault tolerant with tunable
    reliability mechanisms for failover and recovery. log manufacturing operations
    is an example of Flume’s application. The a massive log file data can stream through
    Flume. The log file data can be stored in HDFS and analyzed by utilizing Apache
    Hive. 7) Apache Samoa SAMOA [243] is a distributed streaming ML framework that
    contains programming abstractions for distributed streaming ML algorithms. Its
    name stands for Scalable Advanced Massive Online Analysis and was originally developed
    at Yahoo! Labs in Barcelona in 2013 and has been part of the Apache incubator
    since late 2014. SAMOA is both a platform and a library. It enables the algorithm
    developer to reuse their code to run on different underlying execution engine.
    In addition, it supports plug-in modules to port SAMOA to different engines. By
    utilizing SAMOA, the ML algorithm developer does not need to worry about the complexity
    of underlying distributed stream processing engines. They can run it locally or
    utilizing one of stream processing engines, such as Storm, S4, or Samza. SAMOA
    provides the ML algorithms for a variety of tasks including classification, regression,
    clustering, along with boosting, and bagging for ensemble learning. Additionally,
    it offers a platform for the implementation of these ML algorithms, as well as
    a framework that enables the user to write their own distributed streaming algorithms.
    For example, there is CluStream for clustering, as well as Vertical Hoeffding
    Tree, which uses vertical parallelism on top of the decision tree, or Hoeffding
    tree for classification. There is also Adaptive Model Rules Regressor, which uses
    both vertical and horizontal parallelism implementations for regression [244].
    A summarized comparison between various real-time data analytics tools is provided
    in Table 7. TABLE 7 Comparison Between Real-Time Data Analytics Tools TABLE 8
    Categorized Applications of SB SECTION V. Applications of Ml-Based Context-Aware
    Systems for SBs The potential uses of ML in an SB environment can be divided into
    four categories: detection, recognition, prediction, and optimization [79]. We
    discuss these categories separately next. In general, detection is the extraction
    of particular information from a larger stream of information. Many detection
    applications in SBs such as fire detection, leak detection, and anomaly detection
    [245]. Many different applications have been studied by researchers in activity
    recognition in SBs; examples include fitness tracking, health monitoring, fall
    detection. [246]. The goal of recognition is to classify an object or an event
    to a predefined category. It focuses on how to make computer programs perform
    intelligent and human-like tasks, such as the recognition of an object from an
    image. The goal of prediction is to determine the temporal relations’ model between
    specific events to predict what will happen in the near future. Prediction can
    be either for classification or regression problems [247]. Event prediction when
    the goal is to predict the most probable event or subsequent activity is an example
    of classification problems, while latency prediction when the output takes on
    continuous values is an example of the regression problem. The general steps of
    applying ML processes to predict an event in an SB environment is shown in Figure
    9. FIGURE 9. Steps involved in applying ML models in an SB environment. Show All
    The goal of optimization, on the other hand, is to maximize the long-term profits
    by making proper decisions in different situations. reinforcement learning can
    be utilized with these problems. Some optimization problems can be managed as
    prediction problems such that the profits for different actions are predicted
    and the action with the highest profit would be selected. Decision making is the
    most common case of the optimization problem. It takes to consider a variety of
    variables and solving deals between the profits of different locations of the
    environment [248]. Smart buildings are becoming increasingly supplied with a variety
    of sensors that measure different parameters, and data from these sensors is analyzed
    by ML algorithms and used for a range of services and applications for the activities
    of the building occupants. SBs go far beyond saving energy and contributing to
    sustainability goals. The application and services provided by the SBs can be
    both residential and commercial ranging from e-health, e-marketing, intelligent
    car parking system, intelligent transportation system, automation, and logistics
    services. Figure 10 shows the taxonomy of basic domains of SB services. Lighting
    services are associated with the well-being of occupants depending on their activities
    in SBs that have sensors to conserve energy when lights are not needed. The power
    and electrical system may have onsite renewable energy sources to provide a percentage
    of power consumption in SBs. Waste management is related to the activities and
    actions required to collect, separate, transport, together with monitoring and
    regulation of waste management system in SBs. The security is related to managing
    automated locks, biometric devices as well as video surveillance systems in SBs.
    The communications center is related to connecting sensors and actuators in the
    building as well as the operations control center. The operations control center
    supports system analytics and decision making for the operations. Visual interfaces
    provide a dashboard that shows the status of SB services and human operators to
    better manage the building resources. These interfaces also allow the occupants
    to set up their optimal parameters for comfort and productivity improvement on
    daily activities. HVAC stands for the humidity, ventilation and air conditioning
    system, intended for the convenience of occupants that have effective interaction
    with the environment. Parking services aim to minimize the area and volume required
    for parking cars. It could support car sharing, electric vehicles and a place
    for bicycles as well. Finally, the water management services aim to increase savings
    and manage water reclamation for flushing, landscaping and air-cooling systems.
    FIGURE 10. SB services taxonomy. Show All Based on our literature survey, we have
    identified that the application areas of SBs can be elderly care, comfort/entertainment,
    security/safety, energy management, and other projects. In the rest of the section,
    we will briefly describe the major domains in providing the following SB services:
    (1) care of the elderly population; (2) enhancing energy efficiency; (3) enhancing
    comfort or providing entertainment; (4) enhancing safety and security; and (5)
    miscellaneous projects. a: Elderly Population’s Home Care SB technology such as
    sensors, voice activation, GPS, Bluetooth, cellular connectivity via mobile phones,
    smartphone monitoring apps and sophisticated computers can be especially useful
    for elderly or disabled individuals who live independently. Elderly persons can
    take the advantages of such technologies (e.g., monitoring system, emergency system,
    dangerous kitchen appliance detection, fall detection), to maintain a safe and
    healthy lifestyle while living independently [56], [249]. Smart technology in
    the SBs aims to collect real-time information on human daily activity and then
    learn of their personal patterns. ML techniques have the potential for a very
    wide array of new innovations in healthcare that will be transformative for both
    providers and their patients. Whenever a deviation from the norm patterns is detected,
    SB systems send the alerts to family members and the caregivers in order for them
    to take urgent response action. By using big data analytics and ML algorithms
    it is possible to analyze large-scale data contained in electronic medical records—e.g.,
    to learn automatically how physicians treat patients including the drugs they
    prescribe [250]. Some prominent projects in this space are described next. Chernbumroong
    et al. [56] proposed an activity recognition and classification approach for detecting
    daily living activities of the elderly people applying SVM. They used wrist-worn
    multi-sensors namely accelerometer, temperature sensor and altimeter for detection
    basic five activities namely feeding, grooming, dressing, mobility, and stairs.
    And other instrumental activities such as washing dishes, ironing, sweeping and
    watching TV. Taleb et al. [251] proposed a middleware-level solution that integrates
    both the sensing and the monitoring services for assisting elders at smart homes
    environment. The appliances used in the proposed framework include RFID readers
    that cover of the whole building, sound sensors, video cameras, smart door lock,
    microphone and speakers for interaction with the system. CAALYX [252] is a European
    Commission-funded project that supports older people’s autonomy and self-confidence.
    The service is formed of three distinct subsystems including elderly monitoring
    subsystem, home monitoring subsystem and the caretaker’s monitoring subsystem.
    The system delivers a high priority message to an emergency service including
    the geographic position and clinical condition of the elder user. EasyLine+ [253]
    project funded by the European Commission to support elderly people with or without
    disabilities in carrying out a longer independent life at home. The system uses
    a neural network, assistive software, and a variety of sensors such as illumination
    sensor, temperature sensor, door sensors, and RFID giving the capacity of controlling
    the white goods. Hossain et al. [254] proposed a cloud-based cyber-physical multi-sensory
    smart home framework for elderly people that supports gesture-based appliance
    control. Suryadevara et al. [255] proposed a model for generating sensor activity
    pattern and predicting the behavior of an elderly person using household appliances.
    b: Energy Efficiency When temperatures rise or fall in various zones of your home,
    heaters, air conditioners, fans, and other devices will turn on or off (or increase
    or decrease in speed or temperature). In order to perform an efficient energy
    consumption of the supply systems, a significant step that is necessary by analyzing
    the way that current energy consuming system is using in buildings [256]. In the
    last decade, analysis of the energy efficiency in the smart spaces has received
    increasing attention. Various approaches for energy efficiency have been proposed
    utilizing predictive modeling based on profile, climate data, and building characteristics
    [32], [257]. For instance, lights throughout your home might turn on and off depending
    on the time of day. In the past, various attempts have been made to improve energy
    efficiency in the SBs through the use of smart metering and sensor networks at
    the residential level facilities. It is a fact that these types of infrastructure
    are becoming more widespread but due to their variety and size, they cannot be
    directly utilized to make conclusions that help to improve the energy efficiency.
    ML approaches will be the key to the handling of energy efficiency problem in
    SBs. Learning about the occupants’ consumption habits is capable of generating
    collaborative consumption predictions that help the occupant to consume better
    [258]. Some prominent projects in this space are described next. Reinisch et al.
    [259] developed an optimized application of AI system for SB environment. The
    system focuses on some capabilities like ubiquity, context awareness, conflict
    resolution, and self-learning features. The system operates on a knowledge base
    that stores all the information needed to fulfill the goals of energy efficiency
    and user comfort. Jahn et al. [260] proposed an energy efficiency features system
    built on top of a Hydra middleware framework [261]. The system provides both,
    stationary and mobile user interfaces for monitoring and controlling a smart environment.
    Pan et al. [262] proposed an IoT framework that uses smartphone platform and cloud-computing
    technologies to improve the energy efficiency in SBs. They built an experimental
    testbed for energy consumption data analysis. Fensel et al. [263] proposed the
    SESAME-S project (SEmantic SmArt Metering - Services for energy efficient houses).
    The project focuses on designing and evaluating the energy efficiency services
    to enable the end-consumers in making the right decisions and controlling their
    energy consumption. The system combines a variety of smart building components,
    such as smart meters, a variety of sensors, actuators, and simulators that can
    integrate virtual appliances such as the washing machine. Vastardis et al. [264]
    proposed a user-centric smart-home gateway system architecture to support home-automation,
    energy usage management, and smart-grid operations. The gateway is supported by
    ML classification algorithms component such as C4.5 and RIPPER that is able to
    extract behavioral patterns of the users and feed them back to the gateway. Irrigation
    systems monitoring and smart watering system that keep track of rain and soil
    conditions and irrigate appropriately are a very cost-effective way to reduce
    outdoor water consumption. Investment in water management software and services,
    water-efficient plumbing, and irrigation management delivers economic and sustainability
    benefits. Water conservation and management is an example of such benefits [265].
    c: Comfort/Entertainment One of the main goals of SB research is to facilitate
    user daily life activities by increasing their satisfaction and comfort level.
    SBs supports automated appliance control and assistive services to offer a better
    quality of life. They utilize context awareness techniques to optimize the occupant’s
    comfort based on predefined constraints of conditions in a building environment.
    Typical examples of comfort services include lighting, background music, automation
    of routine activities, advanced user interfaces based on voice or gestures, etc.
    [30]. Other services related to comfort services in SB environments are Indoor
    Climate Control and Intelligent Thermostat [265]. Indoor Climate Control: Measurement
    and control of temperature, lighting, CO2 fresh air. In the SB environment, HVAC
    systems play an essential role in forming indoor environmental quality. Typically,
    HVAC systems are produced not only to heat and cool the air but also to draw in
    and circulate outdoor air in large buildings [266]. Kabir et al. [267] present
    a context-aware application that provides the service according to a predefined
    preference of a user. They use the KNN classifier to infer the predefined service
    that will maximize the user’s comfort and safety while requiring minimum explicit
    interaction of the user with the environment. Ahn et al. [268] proposed a deep
    learning model that estimates periodically the atmospheric changes and predict
    the indoor air quality of the near future. d: Safety/Security As the SB technology
    progresses, the role of ML and deep learning in security and connected devices
    will increase. Deep learning will continue to help gain insights using big data
    that were previously inaccessible, particularly in image and video. Advanced technologies
    such as behavioral analysis and ML to detect, categorize, and block new threats
    will be beneficial. In a traditional home system, as soon as a fire is detected
    the Fire/smoke detectors are activated and start sending a fire alarm. However,
    SB can perform much better than the traditional system. It not only sends an alarm
    but also turns on the light only in the safest route and guides the occupants
    of the building out, as well as it will unlock the doors and windows for smoke
    ventilation, turn off all the devices and call the nearest fire service station.
    Other than this, it can take video of the areas surrounding the building, provide
    the status of window breakage alarms, and automatically lock all the doors and
    the windows when the last person of the house leaves [30]. The main services for
    security and safety in SBs are: Perimeter Access Control, Liquid Presence, Intelligent
    Fire Alarm, Intrusion Detection, and Motion Detection Systems [265]. Perimeter
    Access Control service provides control to restricted areas and detects non-authorized
    users that access the areas. Access card provides a variety of solutions that
    allow staff members, vendors or contractors to access specific areas at specific
    times you designate. The same access card can also be utilized to check employee
    attendance. In addition, there is widespread use of biometric technology including
    fingerprint, facial recognition, and iris scans [269]. Additionally, liquid presence
    detection technique has been utilized in data centers, warehouses, and sensitive
    building grounds to prevent breakdowns and corrosion in such areas [270]. Intelligent
    Fire Alarm and its corresponding safety systems are crucial parts of an intelligent
    building. It is a system with multi-function sensors (i.e., chemical gas sensors,
    integrated sensor systems, and computer vision systems) These sensors enable measuring
    smoke and carbon monoxide (CO) levels in the building. They also can give warnings,
    howling alarms, and tell with a human voice about the place and level of smoke
    and CO. In addition, they can give a message on a smartphone if the smoke or the
    CO alarm goes off [271]. Examples of intrusion detection systems including window
    and door opening detection and intrusion prevention [265]. An infrared motion
    sensor is utilized to detect the motion in a specific area in the building. This
    sensor can reliably send alerts to the alarm panel, with the system implementing
    algorithms for adaption to environmental disturbances and reducing any false alarms
    [265]. Image recognition solution can be used in security software to identify
    people, places, objects, and more. It can also be used to detect unusual patterns
    and activities. Clarifai [272] specializes in a field of ML known as “computer
    vision” that teaches computers to “see” images and video. Clarifai’s technology
    can play a key role in security surveillance and at present, the company works
    only with home security. Each image is processed on a pixel by pixel basis through
    convoluted neural networks. Bangali and Shaligram [273] proposed a home security
    system that monitors the home when the user is away from the place. The system
    is composed of two methods: one uses a web camera to detect the intruder—whenever
    there is a motion detected in front of the camera, a security alert in terms of
    sound and an email is delivered to the occupant. And the other one is based on
    GSM technology that sends SMS. A home security system that sends alert messages
    to the house owner and police station in case of illegal invasion at home is proposed
    in [274]. The system consists of different sensor nodes as the input components
    while the output components respond to the signal received from the input components.
    The sensor nodes consist of a thief alarm, presence detecting circuit, and the
    break-in camera. Zhao and Ye [275] proposed a wireless home security system that
    utilizes low cost, low power consumption, and GSM/GPRS. The system has a user
    interface and it can respond to alarm incidents. e: Miscellaneous Projects CASAS
    [178] is a project by Washington State University that provides a noninvasive
    assistive environment for dementia patients at SBs. The project focuses on three
    main areas for SBs: medical monitoring, green living, and general comfort. CASAS
    project comprises of three layers: physical layer, middleware layer, and software
    applications layer. Aware Home Research Initiative (AHRI) [276] is a project that
    has constructed by a group at the Georgia Institute of Technology for SB services
    in the fields of health and well-being, digital media and entertainment, and sustainability.
    AHRI utilizes a variety of sensors such as smart floor sensors, it also utilizes
    assistive robots for monitoring and helping the elderly. House_n [277] is a multi-disciplinary
    project leads by a group of researchers at the MIT. The main objective of the
    project is to facilitate the design of the smart home and its associated technologies,
    products, and services. The home is supplied with hundreds of various sensors
    that are installed almost in every part of the home that and being utilized to
    develop user interface applications that enable the users to control and monitor
    their environment, save resources, remain mentally and physically active, and
    stay healthy. The EasyLiving project [278] at Microsoft Research is concerned
    with the development of a prototype architecture and technologies to aggregate
    diverse devices into a coherent user experience for intelligent environments.
    The EasyLiving project was designed to provide context-aware computing services.
    The project utilizes a variety of sensors and cameras to track and recognize the
    human activities in the room by using the geometric model of a room and taking
    readings from sensors installed in the room. The Gator Tech Smart House project
    [279] is a programmable space specifically designed for the elderly and disabled
    developed by The University of Florida’s mobile and pervasive computing laboratory.
    The project’s goal is to create SB environments that can sense themselves and
    their residents. The project provides special cognitive services for the residents
    such as mobility, health, and other age-related impairments. A generic middleware
    is utilized to integrate system components in order to maintain a service definition
    for every sensor and actuator in the building. The components of the middleware
    including separate physical, sensor platform, service, knowledge, context management,
    and application layers [280]. Other well-known smart home projects include DOMUS
    [281] which is a research project, by the University of Sherbrooke in Canada,
    that supports mobile computing and cognitive assistance in smart buildings. The
    project aims to assist people suffering from Alzheimer’s type dementia, schizophrenia,
    cranial trauma, or intellectual deficiencies. Adaptive House project [136] at
    The University of Colorado has constructed a prototype system that is equipped
    with a variety of sensors that provide different environmental information including
    sound, motion, temperature, light levels. In addition, actuators that control
    the space and water heaters; lighting units, and ceiling fans. In Asia, there
    are also some other smart building projects have been developed, such as “Welfare
    Techno House” project, which is equipped with different sensors such as ECG, body
    weight, and other temperature measured indicators [282]. Ubiquitous Home project
    [283] is another smart building project in Japan, which utilizes RFID, PIR, pressure
    sensors, as well as cameras and microphones for monitoring elderly adults. Summary:
    Recently, several different context-aware and ML techniques have been utilized
    to support SB services. ML-based approaches are capable to perform better prediction
    and adaptation than others. The philosophy behind ML is to automate the learning
    process that enables algorithms to create analytical models with the support of
    available data. ML can be applied in different learning styles including supervised
    learning, unsupervised learning, semi-supervised learning, as well as reinforcement
    learning when the learning is the result of the interaction between a model and
    the environment. The general uses of ML for SB services are detection, recognition,
    prediction, and optimization. In the section, we also talked about how to acquire
    the context from multiple distributed and heterogeneous sources and the techniques
    for modeling and processing such context to be used in the application services
    of SBs. We also talked about the most used tools and platforms ML and others for
    real-time data analytics by ML community to efficiently process and learn from
    big data. Without such ML tools, one would have to implement all of the techniques
    from scratch requiring expertise in the techniques and in efficient engineering
    practices. SECTION VI. Open Issues and Future Research Directions Research on
    SBs has made great strides in recent years, but a number of challenges remain.
    We present some major challenges related to SBs in this part of the work. These
    challenges will channelize the research directions for future SBs. A. Security
    and Privacy Wherever there is an interconnection of two systems or networks (wired
    or wireless), there are issues of security and privacy and the same is true in
    the case of SB. Security is an essential role in SB environments. Any SB application
    should ensure the confidentiality and integrity of data. Access control must be
    included in SB systems, for instance, the unauthorized users should not be able
    to disconnect the alarm system by connecting the pervasive system [284]. There
    is a massive amount of streaming that is collected from the various installed
    sensors and appliances, such data needs to be processed and stored. Hence, cloud
    computing services can be utilized for this purpose. However, with all of this
    data that is transmitted, the issue of losing the privacy increases. Therefore,
    different encryption techniques are needed to preserve personal privacy [285].
    There are specific challenges related to the user’s privacy including challenges
    related to the data privacy of personal information and the privacy of the individual’s
    physical location and tracking. That needs for privacy enhancement technologies
    and relevant protection laws and tools for identity management of users and objects
    [286]. The recent trend of ML research has focused on handling security and privacy
    issues in SB environments. There are different security-related services have
    utilized ML techniques, such as determining safe device behavior by detecting
    and blocking activities and potentially harmful behavior [287]. ML techniques
    have the potential to reduce security gap because of their capability to learn,
    identify and detect the users’ habits and behaviors. Consequently, it can detect
    the abnormal behaviors predicting risks and intrusions before they happen. For
    instance, ML models learn the routine of the users, such as the time they get
    home or go to sleep. These models can suggest rules based on those detected behaviors
    from all connected devices [288]. B. SBS and Context-Aware Computing In the SB
    environment, there exists a massive amount of raw data being continuously collected
    about the various human activities and behaviors. It is important to develop techniques
    that convert this raw data into valuable knowledge [289]. Context awareness and
    ML techniques are expected to provide great support to process and store big data
    and create important knowledge from all this data [290]. The process of data interpretation
    and knowledge extraction has the following challenges including addressing noisy
    real-world data and the ability to develop further inference techniques that do
    not have the limitations of traditional algorithms. Usually, It is very complex
    to formalize and model the contextual information related to human behaviors in
    a standard way due to the complex physiological, psychological and behavioral
    aspects of human beings [291]. The humans communicate through rich languages as
    well as gestures and expressions. Modern ubiquitous computer systems lack an automatic
    mechanism of inferring information as the humans do. New research is necessary
    to raise human activities and behaviors recognition to understand the complex
    dependencies between the apps and humans [292], [293]. The context-aware prompting
    systems have essential applications in SBs such as emergency notifications, medication
    prompting, heart rate monitoring, generation of agenda reminders, and weather
    alerts. However, issuing prompts for all detected errors can possibly be false
    positives, and consequently, lead to annoyance and sometimes prove to be unsafe
    for specific activities. ML methods can be used for an accurate and precise prediction
    when a person faces difficulty while doing daily life activities [294]. C. Personal
    Data Stream Management in SBS The data streaming management system is able to
    process and transfer raw data collected from a variety of sensors to information,
    it is also able to fuse this information to a feature and directly process features
    [295]. While the data processing for a single SB is simple, it is more complex
    when processing the data from multiple SBs, because there are different people
    that tend to share less common interests and have opposing interests concerning
    the processed data [296]. The simple sensors in an SB environment can detect different
    events related to temperature, motion, light, or weather. Moreover, other appliances
    like a television and a telephone can also send their status or other data as
    events. All this data from different sensors can be used by SB services to detect
    specific states and send a request to some actuators according to specific predefined
    rules, for instance, turn on the light if the television is used [297]. However,
    this approach is not generalizable in case of a group of people residing in the
    same building. Although it can work well for one certain person when personal
    preferences can be automatically learned for an individual person, therefore each
    of the residents has to define their own set of rules [298]. Because of the increasing
    number of sensors that produce data streams, the traditional analyzing and processing
    techniques of these data streams are mostly impractical now [299]. Despite the
    availability of new tools and systems for handling massive amounts of data continuously
    generating by a variety of sensors in SBs, however, the real promise of advanced
    data analytics to still lies beyond the realm of pure technology [296]. In [300]
    discuses research challenges for data streams of real-world applications. They
    analyze issues concerning privacy, timing, preprocessing, relational and event
    streams, model complexity and evaluation, availability of information, and problems
    related to legacy systems. D. Big Data Challenges in SBS Nowadays, a variety of
    sensing technology in the SBs can be utilized to collect a massive amount of heterogeneous
    data at a reasonable cost. Typically, hundreds of thousands of transactions can
    be generated by a single SB every day. The process of storing this data over the
    long-term is challenging [258]. We can imagine the challenges and opportunities
    that the companies or government will encounter in the future to manage incoming
    data from dozens of SBs. This new data could provide us with more contextual information
    that consequently leads to much better services to the occupants [301]. In the
    world of big data, despite the availability massive amount of data, however, it
    is not necessarily easy to obtain valuable information from this data utilizing
    the traditional approaches like trial and error to extract meaningful information
    from this data. Analyzing these massive amounts of data requires new technologies
    to store, organize, and process big data effectively, it needs high-performance
    processors that enable uncovering the insights in big data. It also requires flexible
    cloud computing services and virtualization techniques, as well as software such
    as Apache Hadoop and Spark [302]. It requires providing appropriate ML techniques
    which differ from the traditional approaches for effective and efficient solution
    of the above issues. For these reasons, researchers have recently started to think
    about the problems and opportunities resulting from the adoption of big data in
    SB environments [303], [304]. The information extracted from this big data has
    significant value and could greatly contribute in the future of SBs as assistive
    tools and for better services delivery. That is why it is necessary that the researchers
    start to analyze and think about the solutions for the current and future challenges
    of big data in SBs [305]. E. Interoperability Interoperability means that two
    (or more) systems work together unchanged even though they were not necessarily
    designed to work together. When equipment, devices or appliances having different
    communication and networking technologies can communicate effectively, interoperability
    is satisfied. It is a challenge to ensure that an SB that has various components
    will be intelligible. Typically, each of these components might have been produced
    by different vendors, each of which may have created under different design constraints
    and considerations [306]. Therefore it becomes essential to satisfy interoperability
    so that a number of heterogeneous communication and networking technologies could
    coexist in various parts of SBs. For example, an energy management system may
    use Wi-Fi and ZigBee for communication purposes. A lot of work can be done in
    this context [307]. F. Reliability We can expect that the reliability is one of
    the main concern of occupants and developers of SB systems. A variety of appliances
    and devices present in SB such as televisions, microwave, washing machines etc.
    are required exceedingly to be reliable. Achieving expected levels of reliability,
    especially when linked with communication technologies utilized with these devices
    that may be expected in SBs, is a great challenge. There are different reasons
    for these challenges differences in technological approaches, regulations, development
    culture, and the expectations of the market [306]. G. Integration The key to a
    successful SB implementation is integration: linking building systems such as
    lighting, power meters, water meters, pumps, heating, and chiller plants together
    using sensors and control systems, and then connecting the building automation
    system to enterprise systems. Integration allows executives to gain smart-building
    benefits, both in new construction and by gradually transforming existing buildings
    into SBs. What these SBs have in common is integration. Generally, the integration
    in SB systems brings a range of benefits from energy savings to productivity gains
    to sustainability. The SB systems can be attached to enterprise business systems
    to add another level of intelligence that enhances decision-making and improves
    building performance [2]. However, integrating multiple systems is very challenging
    as each individual system has its own assumptions, strategies to control the physical
    world, and semantics. As an example of integrating two systems in SB, assume a
    system that is responsible for energy management, and another system for health
    care are running concurrently. In this case, the integrated system should not
    turn off medical appliances to save energy while they are being used as suggested
    by the health care system [292]. As a future perspective for SBs, You will wake
    up to the sound of the alarm, at the same time the available sensors will be aware
    that you are waking up. The other sensors such as light sensors will automatically
    turn on the light in the building, while the thermostat will warm the area that
    you are about to use in the building. Your coffee will start to brew, you will
    also get a notification on your phone about the weather. The other sensors in
    the kitchen and refrigerator will remind you with a list of items that you will
    need to pick up on your way from your workplace to home to make dinner. When you
    leave your house, you can press a button from your phone to self-drive your car
    out of the garage. After that, the security system will start monitoring and controlling
    the home. Such the doors will automatically lock. Appliances will switch to an
    energy-saving mode. When the home sensors sense utilizing geofencing technology
    that you are way back home, it will get ready again for your arrival, the thermostat
    will warm things up, the garage door will open as you pull up, and your favorite
    music will start to play when you walk in [141]. Summary: Although the recent
    researches have been done in the SBs field, there is a need for a lot more efforts;
    however, we believe that SBs are possible for the mass market in the near future.
    The main challenges and future research directions of this eld can be summarized
    as follows: User context in term of behavior and intention should be studied and
    respected whenever possible; Further research is needed into context-aware prompting
    systems, personal data streaming and big data analysis of occupants in SB environment;
    Some of the other challenges like the interoperability, reliability, and integration
    still require more attention. SECTION VII. Conclusions The promise of smart buildings
    (SBs) is a world of appliances that anticipate your needs and do exactly what
    you want them to at the touch of a button. Since SBs and their inhabitants create
    voluminous amounts of streaming data, SB researchers are looking towards techniques
    from ML and big data analytics for managing, processing, and gaining insights
    from this big data. This paper reviewed the most important aspects of SBs with
    particular focus on what is being done and what are the issues that require further
    research in ML and data analytics domains. In this regards, we have presented
    a comprehensive survey of the research works that relate to the use of ML and
    big data particularly for building smart infrastructure and services. Although
    the recent advancements in technologies that make the concept of SBs feasible,
    there are still a variety of challenges that limit large-scale real-world systems
    in SBs field. Addressing these challenges soon will be a powerful driving force
    for advancements in both industrial and academic fields of SB research. ACKNOWLEDGMENT
    The statements made herein are solely the responsibility of the authors. Authors
    Figures References Citations Keywords Metrics More Like This MIS-IoT: Modular
    Intelligent Server Based Internet of Things Framework with Big Data and Machine
    Learning 2018 IEEE International Conference on Big Data (Big Data) Published:
    2018 Framework for Mobile Internet of Things Security Monitoring Based on Big
    Data Processing and Machine Learning IEEE Access Published: 2018 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08754678.pdf
  publication_year: 2019
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Leveraging Machine Learning and Big Data for Smart Buildings: A Comprehensive
    Survey'
  verbatim_quote1: Internet of things (IoT) and machine learning (ML) play a critical
    role to enable the delivery of such smart services.
  verbatim_quote2: The massive volume of sensory data collected from sensors and appliances
    must be analyzed by algorithms, transformed into information, and minted to extract
    knowledge so that machines can have a better understanding of humans than their
    environment.
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/info10110348
  analysis: "The proposed architectural model focuses on data collection, transmission,\
    \ network management, and associated services. It leverages modern IoT technologies\
    \ such as LoRaWAN, 6LoWPAN, and Apache Hadoop to facilitate data transmission,\
    \ sensor device management, and Big Data analytics. The model employs data mining\
    \ and machine learning techniques to identify patterns and optimize crop production.\
    \ Additionally, the model prioritizes energy conservation and security through\
    \ the inclusion of energy-saving protocols and encryption mechanisms.\n\n**Here\
    \ are three most relevant verbatim quotes from the paper:**\n\n1. \"This architectural\
    \ model engages novel IoT technologies [10] and WSN capabilities to provide a\
    \ sufficient view of precision agriculture.\" \n\n2. \"The proposed reference\
    \ architecture model is exemplified in a real-world application for surveying\
    \ Saffron agriculture in Kozani, Greece.\" \n\n3. \"By incorporating new technologies\
    \ into agricultural production and by using modern EO techniques growers will\
    \ be able to manage their crops at a different and more advanced kind of level\
    \ in detail that was not possible a few years ago.\""
  authors:
  - Anna Triantafyllou
  - Panagiotis Sarigiannidis
  - Stamatia Bibi
  citation_count: 64
  full_citation: 'Triantafyllou, A.; Sarigiannidis, P.; Bibi, S. Precision Agriculture:
    A Remote Sensing Monitoring System Architecture †. Information 2019, 10, 348;
    doi:10.3390/info10110348'
  full_text: ">\n  \ninformation\nArticle\nPrecision Agriculture: A Remote Sensing\
    \ Monitoring\nSystem Architecture †\nAnna Triantafyllou *\n, Panagiotis Sarigiannidis\
    \ *\nand Stamatia Bibi *\nDepartment of Electrical and Computer Engineering, University\
    \ of Western Macedonia, Kozani 50100, Greece\n* Correspondence: atriantafyllou@uowm.gr\
    \ (A.T.); psarigiannidis@uowm.gr (P.S.); sbibi@uowm.gr (S.B.)\n† This paper is\
    \ an extended version of our paper published in International Workshop on IoT\
    \ Applications and\nIndustry 4.0 (IoT4 2019), co-located with IEEE DCOSS 2019,\
    \ Santorini Island, Greece.\nReceived: 29 September 2019; Accepted: 3 November\
    \ 2019; Published: 9 November 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\
    \x02\x03\x04\x05\x06\a\nAbstract: Smart Farming is a development that emphasizes\
    \ on the use of modern technologies in the\ncyber-physical ﬁeld management cycle.\
    \ Technologies such as the Internet of Things (IoT) and Cloud\nComputing have\
    \ accelerated the digital transformation of the conventional agricultural practices\n\
    promising increased production rate and product quality. The adoption of smart\
    \ farming though is\nhampered because of the lack of models providing guidance\
    \ to practitioners regarding the necessary\ncomponents that constitute IoT-based\
    \ monitoring systems. To guide the process of designing\nand implementing Smart\
    \ farming monitoring systems, in this paper we propose a generic reference\narchitecture\
    \ model, taking also into consideration a very important non-functional requirement,\n\
    the energy consumption restriction. Moreover, we present and discuss the technologies\
    \ that incorporate\nthe seven layers of the architecture model that are the Sensor\
    \ Layer, the Link Layer, the Encapsulation\nLayer, the Middleware Layer, the Conﬁguration\
    \ Layer, the Management Layer and the Application\nLayer. Furthermore, the proposed\
    \ Reference Architecture model is exempliﬁed in a real-world\napplication for\
    \ surveying Saffron agriculture in Kozani, Greece.\nKeywords: Wireless Sensor\
    \ Networks; Internet of Things; precision agriculture; smart farming;\ncommunication\
    \ technologies; Cloud Computing\n1. Introduction\nPresently, the digital transformation\
    \ of the agricultural sector is considered a priority to face the\nnumerous challenges\
    \ presented in the ﬁelds. Environmental monitoring and remote controlling in\n\
    agriculture is rapidly growing towards developing more productive and competitive\
    \ agricultural\nsystems and tools. Precision Agriculture and Smart Farming can\
    \ lead to this direction. These two terms\nrefer to the integration of advanced\
    \ technologies into existing agricultural practices to achieve ﬁne-grid\ncrops\
    \ management. Smart farming systems can provide to farmers meaningful environmental\
    \ data\nfrom the cultivation ﬁelds aiming to boost competitiveness and proﬁt.\
    \ Almost every aspect of the\nagricultural ﬁeld can beneﬁt from these kinds of\
    \ technological advances ranging from planting and\nirrigation processes to plant\
    \ protection and harvesting methods.\nThe future of precision agriculture lies\
    \ upon modern technological advancements and remote\nsensing techniques using\
    \ Unmanned Aerial Vehicles (UAV) and different kind of smart sensors. Sensors\n\
    are measuring devices that convert an external stimulus or else input signal,\
    \ into an appropriately\nmeasurable output signal. Sensor devices can transform\
    \ a macroscopic size (light, power, pressure,\netc.) to an electrically measurable\
    \ size. Once the electrical signal is processed, it is converted into a\nstandardized\
    \ signal with certain characteristics. The sensor’s properties can be altered\
    \ in a measurable\nmanner, either directly or indirectly by the exposure to a\
    \ particular analyzer or change in environmental\nconditions. UAVs are ﬂying vehicles\
    \ that do not have a pilot on their spindle. Instead they ﬂy either\nInformation\
    \ 2019, 10, 348; doi:10.3390/info10110348\nwww.mdpi.com/journal/information\n\
    Information 2019, 10, 348\n2 of 25\nautonomously or by means of remote control.\
    \ Unmanned aircraft used for remote monitoring are part\nof Unmanned Aerial Systems\
    \ (UASs). UASs involve all necessary devices and procedures for UAV\noperation,\
    \ while managing data collection. UAVs enable Earth Observation (EO) towards improving\n\
    accuracy, executing more frequent and better monitoring of the ﬁelds and cover\
    \ large (not easily\naccessible) areas. Sensors and UAVs are a part of the Internet\
    \ of Things (IoT) paradigm. The IoT is a\nmodern communication network involving\
    \ the employment of a vast number of distributed smart\ndevices around a uniﬁed\
    \ wide area network. Its basic characteristic stands upon the ability to recognize\n\
    and notify users instantly about real-time events by the use of smart objects.\
    \ Smart objects-devices\nhave basic computational skills, constrained resources\
    \ and unique identiﬁers for communication.\nThe adoption of smart farming though\
    \ is hampered because of the lack of models providing\nguidance to practitioners\
    \ regarding the necessary components that constitute IoT-based monitoring\nsystems.\
    \ The typically dense and heterogeneous nature of IoT deployments poses immense\
    \ challenges\non interoperability among the desired components. However, an efﬁciently\
    \ designed architecture based\non modern enhanced IoT technologies can pave the\
    \ way into easily adopting and deploying smart\nsystems into our everyday life\
    \ activities. The latest years a signiﬁcant number of efforts were presented\n\
    regarding the most suitable network structure and technologies for smart farming\
    \ applications [1–9].\nHowever, the architectural models presented in [1,7–9]\
    \ were based only on static sensor nodes, ignoring\nthe advantage of UAVs in monitoring\
    \ and failing to provide efﬁcient mapping of the ﬁeld to the\nfarmer. Furthermore,\
    \ no prediction mechanisms were employed in [2] towards improving production.\n\
    Moreover, limited contribution was provided in [3–5] regarding energy saving and\
    \ link layer IoT\ntechnologies in farm management information systems, while the\
    \ data-driven agricultural model\nproposed in [6] did not discuss data security\
    \ issues. In contrast to previous studies, the contribution\nof this paper lies\
    \ upon the presentation of a detailed architectural model for an advanced smart\n\
    farming monitoring system by using UAVs and taking into consideration energy-saving\
    \ and security\nrequirements. This architectural model engages novel IoT technologies\
    \ [10] and Wireless Sensor\nNetworks (WSNs) capabilities to provide a sufﬁcient\
    \ view of precision agriculture. Furthermore,\nthe proposed architecture enables\
    \ a combination of modern remote sensing techniques such as UAV\ntracking, Global\
    \ Positioning System (GPS) for location detection, Geographic Information Systems\n\
    (GIS), real-time monitoring with different types of sensors and intelligent input\
    \ control systems. These\ntechnologies have already been tested in various agricultural\
    \ ﬁelds in different countries for the\ncultivation of rice, wheat, tomatoes,\
    \ vegetables, potatoes, ornamental ﬂowers, chilly, cacao, pepper,\ncorn, olives,\
    \ apples, lemons, grape and others. By incorporating new technologies into agricultural\n\
    production and by using modern EO techniques growers will be able to manage their\
    \ crops at a\ndifferent and more advanced kind of level in detail that was not\
    \ possible a few years ago. This\npaper is an extension of our work in [11]. Towards\
    \ enhancing contribution a use case study is also\npresented regarding an ongoing\
    \ research project known as Drone Innovation in saffron Agriculture\nSurveillance(DIAS).\
    \ The DIAS architectural model is based on the proposed paradigm.\nThis paper\
    \ is organized as follows. Section 2 presents an overview of the proposed smart\
    \ farming\nmonitoring system architecture. In Section 3, the sensor layer is introduced,\
    \ followed by the network\nlayer and its suitable protocols and technologies regarding\
    \ communication, routing, encapsulation\ntechniques and interoperability mechanisms\
    \ in Section 4. Section 5 is focused on the management\nlayer and the provided\
    \ services of the proposed monitoring system, while Section 6 focuses on IoT\n\
    agricultural applications. Section 7 deals with energy-saving technologies and\
    \ security mechanisms\nthat can be implemented in cooperation with networking\
    \ technologies of the system. The use case\nstudy of the DIAS architecture is\
    \ presented in Section 8. Existing challenges are mentioned and\ndiscussed in\
    \ Section 9. Finally, Section 10 concludes this study.\n2. The Architecture of\
    \ a Smart Farming Monitoring System\nA precision agriculture monitoring system\
    \ consists mainly of the sensing agricultural parameters,\nthe identiﬁcation of\
    \ sensing location and data gathering, the routing of data from crop ﬁeld to\n\
    Information 2019, 10, 348\n3 of 25\ncontrol station for decision making, the actuation\
    \ and control decision based on sensed data and the\nvisualization of results\
    \ to the grower through an application. The architectural design of our model\n\
    follows the ISO/IEC 7498-1 standard or else known as the OSI Model [12], proposing\
    \ a communication\nsystem into seven abstraction layers. However, due the employment\
    \ of IoT technologies and artiﬁcial\nintelligence capabilities the basic agricultural\
    \ layers are deﬁned as presented in Figure 1:\nFigure 1. Remote Sensing System\
    \ Architecture.\n•\nThe Sensor Layer, referring to the Physical Layer of the OSI\
    \ Model, includes all kinds of\ncrops sensors and smart objects for data collection\
    \ and monitoring. Sensors can be placed\nunder ground(in the soil), on the crops\
    \ or on UAVs [6]. Underground sensors are especially\nmanufactured to be water\
    \ resistant and usually refer to measurements of moisture, pH and soil\nchemical\
    \ properties such as sulfur. UAV sensors measure environmental parameters such\
    \ as\nhumidity, temperature, wind speed, luminosity or solar radiation. However,\
    \ the most popular\nkind of sensors to be placed on UAVs are thermal cameras.\
    \ Thermal drones which use vision\nInformation 2019, 10, 348\n4 of 25\nimaging\
    \ cameras have so many positive uses by detecting heat coming from almost all\
    \ objects\nand materials turning them into images and video.\n•\nThe Link Layer,\
    \ referring to the Data Link Layer of the OSI Model, constitutes of all available\n\
    networking and routing technologies between sensors for information exchange.\
    \ To deploy\nefﬁcient crop and ﬁeld management the IoT platform uses Wireless\
    \ Sensor Networks (WSNs).\nThe use of WSN in smart farming systems provides immediate\
    \ monitoring and optimization of\ncrop quality, while offering a potential for\
    \ large area surveillance with high sampling densities.\nThe constant monitoring\
    \ of a great number of environmental parameters by distributed sensor\nnodes along\
    \ the ﬁeld help the grower supervise and maintain optimal conditions to achieve\n\
    maximum productivity with remarkable energy savings.\n•\nThe Encapsulation Layer,\
    \ referring to the Network Layer of the OSI Model, focuses on the\nestablishment\
    \ of smart sensor connection to the IPv6-based internet. This layer consists of\n\
    IoT networking encapsulation techniques and routing protocols to transform the\
    \ regular WSN\nnetwork trafﬁc into smart information. In other words, the technologies\
    \ of this layer enable the\ncultivated ﬁeld sensory data to be encapsulated in\
    \ IPv6 routing packets and be forwarded to the\naccording network server.\n•\n\
    The Middleware Layer, referring to the Transport Layer of the OSI Model, uses\
    \ different application\nlevel transport protocols in order to forward the data\
    \ generated from IoT sensor devices based on\ndifferent paradigms. It also provides\
    \ interfaces that enable device communication for management\nor actuation purposes.\
    \ This layer facilitates the desired interoperability due to the existence of\n\
    diverse standards, which are endorsed by different entities.\n•\nThe Conﬁguration\
    \ Layer, referring to the Session and Presentation Layers of the OSI Model,\n\
    is situated between the Middleware Layer and the Management Layer. This layer\
    \ is responsible\nfor gathering the raw data coming from the devices or other\
    \ external services, curate, harmonize\nand possibly aggregate them, so that they\
    \ can be published as context information, or supplied\nto upstream data processing\
    \ algorithms or analytics. In addition, this layer is also capable of\nsending\
    \ actuation commands to the Middleware Layer. Finally, the Conﬁguration Layer\
    \ may\nalso be capable of gathering data from other data sources, such as agricultural\
    \ machinery or\npublic geo-services.\n•\nThe Management Layer involves the processing\
    \ and analysis of the collected data. In this layer\nthe most efﬁcient data management\
    \ and data mining techniques are adopted to obtain accurate\npredictions and support\
    \ regarding ﬁeld operations such as optimized pesticide application,\ndisease\
    \ detection, efﬁcient irrigation management. Data processing is supported by Decision\n\
    Support Systems (DSS) that take care of the overall management of available collected\
    \ information\nfrom the ﬁelds towards increasing productivity, optimizing crop\
    \ yield, maintaining quality\nand saving resources.\nIt is well known that farmers\
    \ suffer great economic losses due to\nincorrect weather forecasting or incorrect\
    \ irrigation methods. Data analysis is the most important\ncomponent of IoT agricultural\
    \ systems resulting in efﬁcient pesticide use and protection against\ndiseases.\
    \ This layer can be considered to be an additional layer regarding the OSI Model\
    \ enabling\nartiﬁcial intelligence advancements to the overall system.\n•\nThe\
    \ Application Layer, referring to the Application Layer of the OSI Model, includes\
    \ all\nsuitable application module interfaces for implementing fertilizer and\
    \ irrigation control, disease\nand animal detection, alerts regarding the cultivation\
    \ process and visualization of statistical\ndata. This layer enables the farmer\
    \ to monitor and manage his ﬁelds in a user-friendly way.\nData visualization\
    \ techniques such as graphs, heatmaps, orthomosaics, and three-dimensional\nmodels\
    \ are employed, among others, to allow easy and intuitive representation of the\
    \ knowledge\nacquired from the ﬁeld monitoring. The farmer can inspect the results\
    \ produced by the services\nof the system and take action accordingly.\nInformation\
    \ 2019, 10, 348\n5 of 25\nEnergy-saving mechanisms and data privacy and security\
    \ techniques are also considered to be\nvery important in the context of Smart\
    \ farming and should be applied vertically in all the layers of\nthe architecture.\
    \ To support the efﬁciency and effectiveness of a smart farming monitoring system\n\
    energy consumption should be kept under control. Due to the limited battery life\
    \ and constrained\nresources of sensor nodes, energy-saving techniques must be\
    \ applied across the sensor and network\nlayer accordingly. Energy-saving techniques\
    \ deal with the active and inactive operational time\nin each sensor node, the\
    \ scheduling of information transmission and the routing process of data\npackets.\
    \ Moreover, security mechanisms are vital for maintaining the privacy of the collected\
    \ data and\nsafeguarding farmers’ personal information exchange.\n3. The Sensor\
    \ Layer\nThe Sensor Layer is in charge of acquiring the data of the different\
    \ climatic and soil variables\ninvolved in the growth and production of the crops.\
    \ Data can be acquired either by ground sensors,\nlocated above or inside the\
    \ soil, or by UAV sensors involving embedded cameras, location and other\nsensors.\
    \ The Sensor Layer constitutes the cradle of modern EO approaches towards optimizing\n\
    decision support in remote sensing monitoring systems. EO monitoring of cultivation\
    \ areas is\nhighly enhanced using autonomous UAVs. Popular EO techniques include\
    \ satellite and radar-based\ntechnologies [13] towards estimating basic biophysical\
    \ parameters in the ﬁelds, such as Leaf Area\nIndex (LAI), crop height and water\
    \ requirements [14,15]. According to [16] radar-based technologies\nare used to\
    \ enable the estimation of soil moisture spatial variability and can efﬁciently\
    \ estimate LAI.\nHowever, EO can achieve sturdy higher spatial resolutions only\
    \ with calibration against accurate\nground truth instruments that measure at\
    \ within ﬁeld scale resolutions. UAVs deploy EO via using\nphotogrammetry techniques\
    \ enabling the generation of three-dimensional digital surface models of the\n\
    ﬁelds. In particular, autonomous, manual or GPS-based image acquisition, ortho-image\
    \ generation and\nimage triangulation and geo-referencing based on navigation\
    \ sensors are employed. More information\nregarding these methods is provided\
    \ in Sections 5 and 8.2. In the Sensor Layer each sensor sends the\nacquired data\
    \ in the cloud through a WSN. The WSN is made up of sensor nodes that operate\
    \ under a\nmesh or point-to-point topology, a coordinator node and a gateway.\
    \ Each node in such a network is\nconnected to one or more sensors [17]. In precision\
    \ agriculture the most important types of sensors for\nmeasuring the different\
    \ types of corps attributes are:\n•\nOptical Sensors/UAV Sensors: Optical sensors\
    \ are usually embedded in UAVs and use light\nreﬂection information to measure\
    \ the varying properties of soil and vegetation. In that case,\nthe sensors acquire\
    \ image data, which are further analyzed with photogrammetry techniques.\nObject\
    \ detectors and pattern recognition form the basic building block for extracting\
    \ information\nfrom the images. Such information may involve the vegetation and\
    \ soil color, the moisture\ncontent and temperature of soil and vegetation, the\
    \ position, height, size and shape of vegetation\nalong with the level of chlorophyll.\
    \ In this category we ﬁnd visible light sensors, multispectral\nsensors, hyperspectral\
    \ sensors and thermal sensors.\n•\nElectrochemical Sensors/Ground Sensors: These\
    \ types of sensors acquire data regarding the\nnutrient contents of soil and its\
    \ associated pH. Electrodes in these sensors work by detecting\nspeciﬁc ions in\
    \ the soil. Different families of electrochemical sensors can be recognized depending\n\
    on the electrical magnitude used for transduction of the recognition event: potentiometric,\
    \ which\nindicates change of membrane potential; conductometric, which indicates\
    \ change of conductance;\nimpedimetric, which indicates change of impedance; and\
    \ voltammetric or amperometric, which\nindicates change of current for an electrochemical\
    \ reaction with the applied voltage in the ﬁrst\ncase, or with time at a ﬁxed\
    \ applied potential in the latter.\n•\nLocation Sensors/UAV Sensors: Location\
    \ sensors are usually embedded in UAVs and provide\nspatial information regarding\
    \ the positioning of an element. These types of sensors use signals\nfrom GPS\
    \ satellites to determine latitude, longitude, and altitude to within feet. Three\
    \ satellites\nminimum are required to triangulate a position. Precise positioning\
    \ is the cornerstone of precision\nInformation 2019, 10, 348\n6 of 25\nagriculture.\
    \ GPS integrated circuits such as the NJR NJG1157PCD-TE1 are a good example of\n\
    location sensors.\n•\nWeather Stations/Ground Sensors: Weather stations are free-standing\
    \ units situated at different\nlocations throughout the cultivating ﬁelds. These\
    \ stations measure various data for precision\nagriculture such as airﬂow, seasonal\
    \ rainfall, speed of wind, humidity level, direction of wind,\natmospheric pressure\
    \ and solar radiation, etc. Weather stations are an important component\nof EO\
    \ technologies since they can provide daily agro-meteorological information regarding\
    \ the\ncultivating ﬁelds.\nSummarizing the above, Table 1 presents the most frequently\
    \ acquired data by sensors in the\nagricultural domain. A sensor node consists\
    \ of a radio transceiver with an internal antenna or a\nconnection to an external\
    \ antenna, a micro-controller, an electronic circuit for interfacing with the\n\
    sensors and an energy source, usually a battery or a built-in energy harvested\
    \ form. There are numerous\ncommercial models of micro-controllers to be used\
    \ in precision agriculture applications. The most\npopular ones are the Arduino,\
    \ the Raspberry Pi, the Atmega328 and the LPC2148 boards. Accordingly,\ncommonly\
    \ used wireless communication modules used are the XBee module, the WSN802G module\n\
    and the NRF24L01 module. A sensor node can vary in size and cost, depending on\
    \ the complexity\nof its capabilities. Size and cost constraints result in corresponding\
    \ limitations on resources such as\nenergy, memory, computing speed, and bandwidth\
    \ of communications. The types of sensors that are\nmostly used in Smart farming\
    \ monitoring systems are summarized in Table 2.\nTable 1. Precision agriculture\
    \ sensor data types.\nData Type\nSensor Type\nSoil moisture and temperature\n\
    Ground sensors\nSoil color\nUAV sensors\nEnvironmental humidity and temperature\n\
    Ground sensors or UAV sensors\nLeaf-wetness\nGround sensors or UAV sensors\nElectric\
    \ conductivity\nElectrochemical sensors\nWind speed and direction\nWeather stations\n\
    Barometric pressure\nWeather stations\nCarbon dioxide\nElectrochemical sensors\n\
    Ph value\nElectrochemical sensors\nLight intensity\nWeather stations or Ground\
    \ sensors\nSolar radiation\nWeather stations or Ground sensors\nRainfall\nWeather\
    \ stations\nSize of crops\nUAV sensors\nShape of crops\nUAV sensors\nThickness\
    \ of plant stem\nUAV sensors\nLatitude, longitude and altitude of the plants\n\
    Location sensors\nInformation 2019, 10, 348\n7 of 25\nTable 2. Precision agriculture\
    \ sensor models.\nSensor Type\nSensor Model\nSoil moisture sensor\n10-HS,SY-HS-220,\
    \ FC-28\nTemperature sensor\nLM35, SHT15, DS18B20\nHumidity sensor\nDHT22, DHT11\n\
    Electric conductivity sensor\nDFR0300\nWind speed and direction sensor\nSEN0170\n\
    Barometric pressure sensor\nBMP180\nCarbon dioxide sensor\nCDM4161A, MHZ16\nPh\
    \ sensor\nMCP1525\nLight sensor\nTSL2561, BH1750\nSolar radiation sensor\n6450\
    \ TSR\nThermal sensors\nThermoMAP\n4. The Network Layer\n4.1. The Link Layer\n\
    In precision agriculture WSN communication protocols and technologies are used\
    \ to support\nthe connection between sensor nodes in the network and to provide\
    \ a channel for communication\nbetween the coordinator node and the gateway. According\
    \ to the type of application, such as precision\nfarming, ﬁeld irrigation management\
    \ or greenhouse crop management, the sensor network topology\nand communication\
    \ demands may differ. Hardware and software characteristics may also affect\n\
    the choice of communication technology to be used between the nodes. Each node\
    \ uses a routing\nprotocol [18] in the view of transferring the data collected\
    \ to the coordinator node.\nBased on many experimental studies on agricultural\
    \ ﬁelds, there is not an ideal combination of a\nspeciﬁc communication technology\
    \ and a routing protocol. Discovering and keeping up with routes in\nWSNs is a\
    \ quite demanding task since energy restrictions and alterations in node status,\
    \ such as failure\nmay cause sudden changes in the network topology. It is a fact\
    \ that the wireless routing solution for\nagriculture applications should be highly\
    \ energy-efﬁcient, scalable, and autonomous. Up until now\nrouting tactics proposed\
    \ in the literature for WSNs employ speciﬁc methods such as data aggregation,\n\
    clustering, different node role assignment and data-centric methods.\nThe basic\
    \ goal is to build each smart monitoring system upon application appropriate networking\n\
    technologies to operate efﬁciently with minimum energy consumption. Once the coordinator\
    \ node\nobtains the data it forwards the ﬂow of information to the gateway to\
    \ reach the main server, where\nthe database is located. However, in some cases\
    \ the coordinator node can be substituted by a base\nstation to obtain the collected\
    \ data using a Wi-Fi connection as presented in [2], or another cellular\ncommunication\
    \ technology.\n4.1.1. Precision Agriculture Communication Protocols\nThere is\
    \ a wide variety of networking technologies suitable for the deployment of smart\
    \ farming\napplications. The most popular are the following:\n•\nThe IEEE 802.15.4\
    \ standard is a widely used networking technology in precision agriculture and\n\
    deﬁnes the physical layer and the Media Access Control (MAC) technique in Low-Rate\
    \ Wireless\nPersonal Area Networks (LR-WPANs).\n•\nZigBee is another suitable\
    \ technology for short range radio communication in the ﬁelds using\nlow-power\
    \ devices capable of transmitting data over long distances using intermediate\
    \ stations.\nInformation 2019, 10, 348\n8 of 25\n•\nLoRa is a type of wireless\
    \ conﬁguration that has been created to achieve long-range connections\nfor Low-power\
    \ Wide Area Networks (LPWANs).\nLoRAWAN is a protocol for managing\ncommunication\
    \ between LPWAN gateways and nodes.\n•\nBluetooth Low Energy is a global personal\
    \ area network protocol built for transmitting small\ndata pieces infrequently\
    \ at low rates with signiﬁcantly low power consumption per bit.\n•\nRFID (Radio\
    \ Frequency Identiﬁcation) is a different technology that uses radio signals to\
    \ monitor\nand identify in real time objects without requiring line-of-sight communication.\
    \ An RFID\nsystem includes a reader, a tag, and a host and is presented as ideal\
    \ for ﬁeld monitoring in\nmultiple studies.\nMoreover, the communication between\
    \ sensor nodes and a base station can be supported by:\n•\nthe Wi-Fi protocol,\
    \ based on the IEEE 802.11 standard. This standard speciﬁes the set of media\n\
    access control (MAC) and physical layer (PHY) protocols for implementing wireless\
    \ local area\nnetwork (WLAN) Wi-Fi computer communication in various frequencies.\n\
    •\nthe GSM (Global System for Mobile Communications), a standard developed by\
    \ the European\nTelecommunications Standards Institute (ETSI) to describe the\
    \ protocols for second-generation\n(2G) digital cellular networks used by mobile\
    \ devices such as mobile phones and tablets.\n•\nthe GPRS (General Packet Radio\
    \ Service) technology standard that provides rapid sending and\nreceiving of data\
    \ over the GSM mobile networks based on packet switching, a well-known\nnetwork\
    \ transmission process.\n•\nthe 2G, 3G and 4G (LTE) are respectively the 2nd,\
    \ 3rd and 4th generation of GSM technology\naiming at higher speeds.\nTable 3\
    \ summarizes the communication technologies adopted in smart farming systems according\n\
    to literature.\nTable 3. Smart farming networking technologies.\nCommunication\
    \ Technology\nData Rate\nFrequency Band\nRange\nReferences\nIEEE 802.15.4\n20–250\
    \ Kbps\n2400/915/868 MHz\n10 m\n[7]\nIEEE 802.15.4-ZigBee\n20–250 Kbps\n2400/915/868\
    \ MHz\n10–100 m\n[19]\nWi-Fi-IEEE 802.11\n450 Mbps\n2.4 GHz–5 GHz\n100 m\n[2,20]\n\
    GPRS-2G GSM\n64 Kbps\n900 MHz–1800 MHz\n100 m\n[21]\n3G\n14.4 Kbps–2 Mbps\n1.6–2\
    \ GHz\n100 m\n[21]\n4G-LTE\n100 Mbps–1 Gps\n2–8 GHz\n100 m\n[14]\nLoRa\n0.3–50\
    \ Kbps\n433,868,780,915 MHz\n2–5 km\n[1,22]\nBluetooth LE\n1 Mbps\n2.4 GHz–2.485\
    \ GHz\n>100 m\n[5]\nRFID\n400 Kbps\n125 KHz–915 MHz\n3 m\n[23]\n4.1.2. Precision\
    \ Agriculture Routing Protocols\nData routing algorithms play an important role\
    \ in WSNs by establishing the path of\ncommunication for data exchange between\
    \ sensor nodes and base stations on a network. A variety\nof routing techniques\
    \ have been proposed until now, aiming to achieve higher performance with\nminimal\
    \ power consumption. IoT and WSN routing protocols can be categorized according\
    \ to network\nstructure and the way information will be disseminated through the\
    \ network. A routing protocol can\nbelong to more than one category, aiming to\
    \ satisfy as many performance metrics as possible.\nAccording to the way by which\
    \ routing decisions are made proactive and reactive routing\ntechniques can be\
    \ used. Proactive routing (or table-driven) supports the periodic renewal and\n\
    updating of the routes and destinations that are formed between the nodes throughout\
    \ the network.\nOn the other hand, reactive routing (or on demand) includes discovering\
    \ routes on demand based\non the transmission of route request packets. The downside\
    \ to reactive protocols is their latency,\nsince transmissions over unknown or\
    \ expired routes face delays, for which either the application or\nthe routing\
    \ protocol must account by buffering or dropping data.\nInformation 2019, 10,\
    \ 348\n9 of 25\nFurthermore, according to WSN structure, routing algorithms can\
    \ depend on neighbor nodes to\nbroadcast the collected information. Another popular\
    \ technique is based on dividing the network into\nclusters. Each cluster depends\
    \ on a cluster head node to manage the routing of information between\nother clusters\
    \ or base stations. Hierarchical routing is the most popular routing method in\
    \ smart\nfarming monitoring systems and soil parameter monitoring [23,24]. Multi-path\
    \ routing protocols\ncan also be used to implement a smart farm monitoring system\
    \ to balance the data transfer load and\nconserved energy. Table 4 presents characteristic\
    \ examples of routing protocols adopted in smart\nfarming systems according to\
    \ literature.\nTable 4. Smart farming routing protocols.\nRouting Protocols\n\
    Category\nFeatures\nDestination-Sequenced\nDistance Vector (DSVD)\nProactive\n\
    Route availability to all network destinations with\nminimal delay.\nLink Estimation\
    \ Parent\nSelection (LEPS)\nProactive\nA map of the network is kept regarding\
    \ the\ninterconnection of nodes.\nTiny Lightweight UNderlay\nAd-hoc Routing (TinyLunar)\n\
    Reactive\nProvided\ninterfaces\nhelp\nto\nform\nroute\ncharacteristics.\nAd-hoc\
    \ On-Demand\nDistance Vector(AODV)\nReactive\nUsed in ZigBee communication protocol\
    \ for\ninterconnection of sensor nodes.\nDynamic Source\nRouting(DSR)\nReactive\n\
    A route on demand is formed when a transmission\nnode requests it.\nOptimized\
    \ Link State\nRouting Protocol (OLSR)\nFlat Routing\nInformation about the status\
    \ of the nodes is used to\nselect the appropriate path for packet forwarding.\n\
    ProtoSense\nFlat routing\nReliable retransmission of information using\nconﬁrmation\
    \ messages.\nPeriodic Threshold-Sensitive\nEnergy-Efﬁcient Sensor\nNetwork (APTEEN)\n\
    Hierarchical\nRouting\nIt takes into account energy saving and network\nlifetime\
    \ [24].\nLocation Routing Algorithm\nwith Cluster-Based Flooding\n(LORA-CBF) [25]\n\
    Location-based\nrouting\nIt uses the ﬂood method in a hierarchical network\nstructure\
    \ to route data packets.\n4.2. The Encapsulation Layer\nMost of the current agro-environmental\
    \ monitoring applications are based on machine to\nmachine (M2M) communication\
    \ support regarding real-time data transmission. There is a variety\nof communication\
    \ patterns to be used so that the terminal can receive the information necessary\
    \ to\nmonitor the production. WSN technologies, enhanced by the IoT paradigm,\
    \ enable smart sensor\ncommunication and connection to the IPv6-based internet,\
    \ by addressing the agricultural sensors\nwith IPv6 long addresses that can ﬁt\
    \ in lightweight IoT data link frames. IoT can immensely improve\nthe autonomous\
    \ capabilities of resourced-constrained nodes in a Low-power and Lossy Network\n\
    (LLN). An agricultural WSN is a LLN. In such a network, some of the nodes may\
    \ have a direct\nInternet connection to send and receive messages from the Internet.\
    \ However, other nodes from the\nsame network, may lack that kind of ability due\
    \ to hardware limitations, and require the use of the\nInternet-connected nodes\
    \ to access external services. Data exchange in a local context is also possible\n\
    without the necessity of transmitting data to the Internet. The task of discovering\
    \ the routes and\nallowing data messages to be transmitted among agricultural\
    \ sensor nodes is performed by the routing\nprotocol. Due to this fact, in such\
    \ networks, network performance is strongly related to how the\nrouting protocols\
    \ use the limited hardware resources of the network device.\n•\nThe 6LoWPAN [7,26]\
    \ is the most popular network encapsulation protocol for precision agriculture\n\
    applications. It refers to the transmission of IPv6 protocol packets over Low-Power\
    \ Wireless\nInformation 2019, 10, 348\n10 of 25\nPersonal Area Networks. In a\
    \ smart farming monitoring system, it is used by sensor devices that\nare compatible\
    \ with the IEEE802.15.4 standard for WSNs. 6LoWPAN efﬁciently encapsulates\nIPv6\
    \ long headers in IEEE 802.15.4 small data frames for information exchange between\
    \ sensor\nnodes. The advantages of this protocol are that it uses a special header\
    \ compression method and\na fragmentation process to reduce the transmission overhead\
    \ [10].\n•\nThe IPv6 over LoRa [27] implementation enables the transmission of\
    \ IPv6 protocol packets over\nLoRa links. If LoRaWAN is chosen for sensor node\
    \ communication in a smart farming monitoring\nsystem, LoRa is the MAC protocol\
    \ responsible for establishing communication between the\nLoRa gateway and the\
    \ LoRa sensor end devices. In an agriculture monitoring system, the IPv6\nadaptation\
    \ enables the deployment of the IoT paradigm as a separate architectural layer.\
    \ The basic\naim of this layer is to manage header compression and packet fragmentation\
    \ to deal with the\nrequirements of LoRa modulation in the physical layer.\n•\n\
    The IPv6 over 802.11ah [10] or Wi-Fi-ah (HaLow) is a low-power/low-rate protocol\
    \ able to support\nnumerous sensor node devices on a single base station. This\
    \ technology can be used for precision\nagriculture by enabling wireless base\
    \ stations in the ﬁeld to transmit data while also being energy\nconservative.\
    \ Wi-Fi-ah (HaLow) uses special characteristics of the 6LoWPAN technology for\n\
    effective transmission of IPv6 protocol packets over IEEE 802.11ah wireless networks.\n\
    •\nRPL (IPv6 Routing over Low Power and Lossy Networks) [26] is the most popular\
    \ IoT routing\nprotocol based on the distance vector routing technique. It is\
    \ a proactive protocol that constructs\na speciﬁc graph able to direct all trafﬁc\
    \ towards the sink node. RPL is the ideal routing protocol\nfor agricultural LLNs,\
    \ since it can quickly create network routes between sensor nodes in the\nﬁeld,\
    \ share routing knowledge and adapt the topology in an efﬁcient way. It is also\
    \ efﬁcient for\nmulti-hop, many-to-one and one-to-one communication.\n•\nLOADng-IoT\
    \ is another IoT routing protocol, proposed in [28] as an enhancement for reactive\n\
    protocol LOADng, which is considered to be the best current solution for LLNs.\
    \ LOADng-IoT is\nable to boost the process of route discovery, reduce the overhead\
    \ of control messages, and improve\nthe network′s quality-of-service(QoS). In\
    \ a smart farm monitoring system, this protocol will allow\nsensor nodes without\
    \ an Internet connection to forward their data packets to external Internet\n\
    services with much greater reliability and lower latency.\n4.3. The Middleware\
    \ Layer\nThe Middleware Layer is responsible for establishing and controlling\
    \ the association between\nIoT sensor devices. More speciﬁcally, the services\
    \ of this layer include smart device management by\nthe use of different transport\
    \ protocols to forward the generated data from the involved IoT devices.\nMost\
    \ of these transport standards use the Transmission Control Protocol (TCP) or\
    \ the User Datagram\nProtocol (UDP) for forwarding information. There is a wide\
    \ variety of data protocols [29] that belong\nto this layer towards developing\
    \ an efﬁcient managing platform for smart ﬁeld devices. However,\nchoosing the\
    \ most appropriate device management technology depends on software and hardware\n\
    speciﬁcations, network and technology architecture and communication standards\
    \ being used in the\naccording system to achieve maximum and efﬁcient performance.\
    \ In the view of using different kind of\nsmart entities in an agriculture monitoring\
    \ system, the services of this architectural layer facilitate the\ndesired interoperability\
    \ of the technologies introduced. All collected data will be stored on a remote\n\
    server and transmitted to the client machine through Application Programming Interfaces\
    \ (APIs) that\nprovide web services for third-party users. APIs enable device\
    \ communication in an application level\nfor different kinds of purposes and are\
    \ based on different architectures to transfer data from the server\nto the client.\n\
    •\nThe MQTT-SN (Message Queuing Telemetry Transport For Sensor Networks) is a\
    \ messaging\nprotocol that facilitates device data collection and communication\
    \ with servers using brokers.\nA broker is a network entity which arranges transactions\
    \ between other network entities. By using\nthe MQTT protocol, a precision agriculture\
    \ monitoring system can enable smart sensor devices to\nInformation 2019, 10,\
    \ 348\n11 of 25\npublish messages to a broker and/or subscribe to a broker in\
    \ order to receive certain messages.\nThe exchanged messages will be organized\
    \ by topics that act as a system for dispatching messages\nto subscribers.\n•\n\
    The CoAP (Constrained Application Protocol) is another popular protocol for IoT\
    \ device\ndata management. CoAP is based on a request/response pattern of communication\
    \ allowing\nconstrained devices to have web service functionalities. It is an\
    \ HTTP-like web transfer protocol\nwith the ability to extend the Representational\
    \ State Transfer (REST) architecture to Low-Power\nWireless Personal Area Networks\
    \ (LoWPANs). REST is an architectural style for providing\nstandards between computer\
    \ systems on the web, while distinguishing the concerns of client\nand server.\n\
    •\nThe XMPP-IoT (Extensible Messaging and Presence Protocol) is an open technology\
    \ for real-time\ncommunication based on XML messages between connected devices\
    \ and the available server.\nXMPP can efﬁciently power instant messaging, collaboration\
    \ and content syndication in a smart\nfarm monitoring system between all network\
    \ entities.\n•\nDevice and asset management in a precision agriculture monitoring\
    \ system can also be\nimplemented using the Mihini [30] software.\nMihini is an\
    \ open-source project by Eclipse\nTechnology that enables communication between\
    \ an M2M server and the applications running\non an embedded gateway. M3DA is\
    \ the protocol used for the transport of M2M data. M3DA can\nallow user applications\
    \ to exchange typed data/commands back and forth with an M2M server,\nin a way\
    \ that optimizes the use of bandwidth.\n•\nThe OMA SpecWorks’s Lightweight M2M\
    \ [31] is another device management protocol for M2M\nor IoT devices. It can be\
    \ used in a smart farming information system to efﬁciently transfer\nservice data\
    \ from the network to resource-constrained devices. In contrast to traditional\
    \ M2M\nstandards in which a device usually needs to keep up multiple stacks of\
    \ technologies, protocols\nand security services, the LwM2M scheme allows the\
    \ existence of one stack of technology for\ndevice management, not only on the\
    \ level of the device itself, but also on the application level.\nIn addition,\
    \ LwM2M is based on protocol and security standards from the Internet Engineering\n\
    Task Force (IETF).\n•\nThe ONEM2M [32] technical speciﬁcation standards are an\
    \ upcoming solution for device and\nasset management in precision agriculture.\
    \ ONEM2M is a middleware IoT platform that provides\nfunctions and APIs for different\
    \ service domains dealing with interoperability challenges. There\nare commercial\
    \ and open-source implementations of this technology.\n•\nA popular queuing protocol\
    \ for enabling server connection in IoT is the AMQP (Advanced\nMessage Queuing\
    \ Protocol). This open standard protocol can facilitate message orientation,\n\
    queuing, routing, reliability and security in precision agriculture applications.\n\
    •\nLast but not least, the DDS (Data-Distribution Service) [33] is the ﬁrst open\
    \ international M2M\nstandard directly addressing publish-subscribe communications\
    \ for real-time and embedded\nsystems. This protocol has the advantage of providing\
    \ fast data, event, and command exchange\namong the IoT sensor nodes in a precision\
    \ agriculture monitoring system.\n4.4. The Conﬁguration Layer\nThe Conﬁguration\
    \ Layer deals with protocols running on top of the IoT monitoring platform\nallowing\
    \ the exchange of data speciﬁed by its context regarding what is described, what\
    \ was measured,\nwhen, where, by what, the time of validity, ownership, and others.\
    \ The main objective of this layer\nis to curate, harmonize and aggregate the\
    \ collected raw data, so that it can be published as context\ninformation, or\
    \ supplied to upstream data processing algorithms or analytics. It is also capable\
    \ of\nsending operational commands to the Middleware Layer. Context information\
    \ is a term widely used\nin IoT research and characterizes data that may come\
    \ from existing systems, users, through mobile\napplications, IoT smart devices,\
    \ agricultural machinery or public geo-services. The Conﬁguration layer\nuses\
    \ an IoT broker to guarantee a common interpretation of information produced by\
    \ heterogeneous\ndata sources that typically employ different data formats and\
    \ ontologies, and therefore are unable to\nInformation 2019, 10, 348\n12 of 25\n\
    directly share information among them. An IoT broker enables the forwarding of\
    \ lower-level device\ninformation to higher-level Thing Information.\n•\nRegarding\
    \ precision agriculture applications, a popular context broker is implemented\
    \ by the\nFIWARE NGSI technology, named Orion Context Broker. FIWARE is a framework\
    \ of open-source\nplatform components towards the deployment of the IoT paradigm.\
    \ FIWARE NGSI is the FIWARE\nversion of the OMA NGSI, an API based on HTTP that\
    \ enables the integration of components\nand provides the basis for the interoperability\
    \ and portability of IoT-enabled Smart Agriculture\napplications [34]. NGSI is\
    \ an information model developed by OMA SpecWorks to manage\ncontext information\
    \ with a meta-model based on entities, attributes and metadata. This protocol\n\
    manages data concerning context entities, such as the lifetime and quality of\
    \ information.\n•\nThe implementation of a smart farming monitoring system is\
    \ greatly depended upon geo-services,\nlocation detection tools and mapping technologies.\
    \ In such systems, the exchange of geographical\ninformation should be effortlessly\
    \ accomplished between the involved network entities across\nthe web. The Open\
    \ Geospatial Consortium-Web Feature Service (OGC-WFS) [35] constitutes a\ndesirable\
    \ asset in formulating geographic information and offering direct ﬁne-grained\
    \ access\nat feature property level of the data to IoT sensor nodes in precision\
    \ agriculture applications.\nOGC offers various standards that can ease the way\
    \ location data is exchanged and stored in\na smart farming system that is based\
    \ on drone monitoring. Furthermore, the OpenGIS Web\nMap Service Interface Standard\
    \ (WMS) [35] can be efﬁciently used by UAVs, since it provides a\nsimple HTTP\
    \ interface for requesting geo-registered map images from one or more distributed\n\
    geospatial databases.\n5. The Management Layer\nIn a smart farming monitoring\
    \ system, the basic component of intelligence is considered to be the\nstudy and\
    \ ﬁltering of the collected data. The use of EO techniques enable the advance\
    \ of cultivation\nprocedures and increase productivity by providing the base layer\
    \ for spatial information analysis and\nmonitoring of agricultural activities.\
    \ A large percentage of smart agriculture applications are based\non simulators,\
    \ commercial programs and speciﬁc programming languages for implementing and\n\
    controlling the data system. The Management layer uses modern software tools to\
    \ efﬁciently satisfy\nmultiple tasks, presented in Table 5.\nInformation management\
    \ is deployed so the farmer can consult, record and modify the\ninformation collected\
    \ by the sensors in tables, statistical graphs and interactive maps. In addition,\n\
    it can download daily, monthly and annual reports of historical data. However,\
    \ the farmer can\nmainly see the current data of the monitored variables of one\
    \ or all the WSN nodes and consult the\nhistory. The interaction with the network\
    \ and services layer is achieved using an intermediate layer of\nmanagement logic\
    \ [36]. WSN data will be stored in an online database [37].\nThe system also enables\
    \ Big Data analytics in agriculture monitoring by using tools such as\nthe Apache\
    \ Hadoop software and various Big Data hardware platforms [38] as possible resources.\n\
    Big Data refers to information assets characterized by such a high volume, velocity\
    \ and variety\nable to require speciﬁc technology and analytical methods for its\
    \ transformation into value [39].\nIn precision agriculture smart applications,\
    \ the collected data are recorded in a speciﬁc format,\nto discover patterns,\
    \ correct errors, eliminate duplicate and inconsistencies and to solve noise problems.\n\
    Big Data technologies are playing an essential role in modern farming systems,\
    \ since predictive insights\nare provided regarding optimizing the quality of\
    \ the crop, minimizing environmental impact, reducing\ncosts, increasing proﬁt\
    \ and generally optimizing production efﬁciency. In addition, Big Data enable\
    \ the\nmanagement of real-time operational decisions and the redesign of business\
    \ processes for advancing\nthe food supply chain.\nFurthermore, the proposed architectural\
    \ scheme promotes various data processing techniques that\nupgrade the impact\
    \ of EO technologies in agriculture. EO by satellite leads to the acquisition\
    \ of regular\nor spatially continuous data regarding large areas. It provides\
    \ essential information on the functioning\nInformation 2019, 10, 348\n13 of 25\n\
    of ﬁelds and on the causes of environmental change. UAVs enable EO by using photogrammetry\n\
    techniques to extract three-dimensional digital surface models of the ﬁeld, as\
    \ well as orthophotographs.\nOne popular algorithm for this purpose is Structure\
    \ from Motion (SfM) [40]. An orthophotograph\ncan be used to create a realistic\
    \ map of the ﬁelds by measuring true distances and providing to the\nfarmer a\
    \ clearer helpful view from the sky. Based on photographs, digital image processing\
    \ tools,\nsuch as Pix4Dmapper can calculate various vegetation indices that can\
    \ lead to conclusions, either\non each photograph individually or after the production\
    \ of orthophotos regarding the crops’ state.\nVegetation indices are mathematical\
    \ quantitative combinations of the absorption and scattering of\nplant in different\
    \ bands of the electromagnetic spectrum [41]. Calculating vegetation indices will\
    \ help\nto identify useful crop characteristics concerning important biological\
    \ and physical parameters of the\nvegetation. The best-known vegetation index\
    \ is the Normalized Difference Vegetation Index (NDVI),\nwhich is the evolution\
    \ of the vegetation index ratio and is calculated by the visible and near infrared\n\
    light reﬂected from the vegetation.\nLast but not least, the smart agriculture\
    \ monitoring system also performs data mining processes\nbased on tools such as\
    \ the Apache Mahout Framework so as to identify and discover hidden patterns\n\
    in the collected data, once they are processed, in the form of reviews. In addition,\
    \ Machine Learning\ntechniques will be used in the smart monitoring platform in\
    \ order to estimate the extracted parameters\nof the crops’ growth rate and also\
    \ help to identify objects or animals trough the collected images by\nusing Object-Based\
    \ Image Analysis (OBIA) [42]. Moreover, new machine learning models—algorithms\n\
    focused on data classiﬁcation [43,44]—can be used to minimize the size of redundant\
    \ data and fasten\nthe analysis.\nTable 5. Smart farming monitoring system services.\n\
    Service Type\nTools\nDescription\nInformation\nmanagement\nDatabase\nThe central\
    \ server database for storing and maintaining the sensor\ncollected data, management\
    \ commands and application user\ninformation.\nManagement logic\nThe process of\
    \ managing the systems units, organizing and\ndisplaying the evaluated data into\
    \ a user-friendly way.\nBig Data\nanalytics\nApache Hadoop\nFramework\nComplex\
    \ process of examining large and varied data sets with an\nintention to uncover\
    \ meaningful and useful information that can\nhelp in deriving conclusion and\
    \ take decisions.\nBig Data hardware\nplatforms\nThe\nuse\nof\ndifferent\nhardware\n\
    platforms\nfor\nBig\nData\nanalytics according to the available hardware, scale-ability\
    \ and\nperformance characteristics of each platform.\nData and Image\nprocessing\n\
    Digital Image\nprocessing\nVegetation Indexes calculation\nPhotogrammetry\ntechniques\n\
    Extracting three-dimensional digital surface or terrain models of\nthe ﬁeld and\
    \ orthophotographs.\nMachine learning\nclassiﬁcation\nalgorithms\nClassiﬁcation\
    \ of data to decrease the size of redundant\ninformation and identify objects\
    \ or animals.\nData mining\nApache Mahout\nFramework\nSystematic and sequential\
    \ process of identifying hidden patterns\nand information in a large dataset.\n\
    Object-Based Image\nAnalysis\nIdentify objects or animals through the collected\
    \ images\nFurthermore, all these services are hosted in the cloud to be able to\
    \ access them remotely from\nany geographical location.\nInformation 2019, 10,\
    \ 348\n14 of 25\n6. The Application Layer\nBased on the proposed precision agriculture\
    \ monitoring system architecture, the farmer can\ninteract with the IoT applications\
    \ of the system to remotely manage the cultivation process.\nSuch applications\
    \ may concern any aspect of the agricultural ﬁeld ranging from planting and irrigation\n\
    processes to plant protection and harvesting methods [45]. The applications that\
    \ can be adopted may\ninvolve the fertilizer application, the weed mapping, the\
    \ spraying process, the irrigation of the ﬁeld\nand the alert system.\nThe Variable\
    \ Rate Fertilizer (VRF) application has as a target to optimize the usage of nutrients\
    \ by\ndeﬁning the amount of fertilizer applied based on the health of the plant.\
    \ Variable rate fertilizer in\nprecision agriculture is an area of technology\
    \ that focuses on the automated application of fertilizer to\na given landscape.\
    \ The way in which the materials are applied is based on data that is collected\
    \ by\nsensors, maps, and GPS. VRF applications bring several beneﬁts related to\
    \ savings on fertilizers and\nchemicals, potential yield increase and environmental\
    \ protection. In the same context is the Variable\nSpraying application. These\
    \ types of applications implement controllers that turn the herbicide\nsprayers\
    \ on and off. Usually variable spraying applications take into consideration information\n\
    coming from the weed mapping tools such as the weed locations. In that case the\
    \ appropriate volume\nof herbicide is estimated and applied in the ﬁeld based\
    \ on the weed intensity.\nThe Weed Mapping application focuses on the visualization\
    \ of the weed occurrences within\na certain crop ﬁeld with the help of mappings.\
    \ The GPS receiver with an aerial vehicle generates\nmaps which show the weed\
    \ occurrences. These weed maps can be combined with fertilizer maps\nand yield\
    \ maps. The IoT-based irrigation system use a micro-controller that serves as\
    \ information\ngateway receiving real-time information from soil moisture and\
    \ temperature sensors placed on the\nﬁelds. Generally, a moisture/temperature\
    \ threshold is speciﬁed based on which the micro-controller\nautomatically switches\
    \ on the water pump. The micro-controller also has servo motors to ensure that\n\
    the area is uniformly irrigated. The entire system can be managed remotely by\
    \ the end-user through\nthe dedicated application.\nAlert/ notiﬁcation applications\
    \ are also very popular in IoT-based precision agriculture. Producers\nand agriculture\
    \ companies implement IoT solutions for instantly tracking their crop ﬁelds. In\
    \ this case,\nthe data coming from IoT devices is processed and transformed into\
    \ knowledge properly visualized\nfor offering information regarding the health\
    \ of the vegetation and the soil, the behavior patterns of\nthe plants, detect\
    \ signs of disease on time, identify insects and harmful animals and instantly\
    \ alert\nproducers about potential difﬁculties. This type of applications serves\
    \ for storing and analyzing data,\nproviding producers with relevant recommendations.\n\
    The aforementioned applications aim at the efﬁcient ﬁeld and crop management to:\n\
    •\nincrease production efﬁciency\n•\nimprove product quality\n•\nprovide more\
    \ efﬁcient use of chemicals in cultivation\n•\nmanage pesticide amounts\n•\nreduce\
    \ energy consumption\n•\nprotect the soil\n•\ncontrol water consumption and underground\
    \ water amounts\nThe IoT-based agriculture applications can be implemented for\
    \ an Android or Windows\nsmart-phone, a tablet or as a web application. The applications\
    \ of IoT-based smart farming apart from\nconventional, large farming operations,\
    \ targets also other growing or common trends in agricultural\nsuch as organic\
    \ farming, family farming (complex or small spaces, particular cattle and/or cultures,\n\
    preservation of particular or high quality varieties etc.), and enhance highly\
    \ transparent farming. Our\nprecision agriculture monitoring system can also beneﬁt\
    \ the dry farming technique that encompass\nspeciﬁc agricultural techniques for\
    \ the non-irrigated cultivation of crops. Furthermore, greenhouses\ncan use our\
    \ architectural model to intelligently monitor as well as control the climate,\
    \ eliminating the\nneed for manual intervention.\nInformation 2019, 10, 348\n\
    15 of 25\n7. Energy-Saving Techniques and Security Mechanisms\n7.1. Energy-Saving\
    \ Technologies\nIn precision farming applications sensor nodes are usually powered\
    \ by low-energy batteries that\nare difﬁcult or impossible to recharge or replace.\
    \ This is considered to be a major disadvantage to\nmaintain a real-time monitoring\
    \ system. Energy-saving techniques is vital to maintain the system’s\nefﬁciency\
    \ in smart farming. This kind of techniques can provide battery life extension\
    \ by reducing the\namount of communication between the nodes and the base station,\
    \ while minimizing the redundant\ndata in the network. Energy preservation techniques\
    \ for precision agriculture systems are presented as\na separate architectural\
    \ level covering the sensing and networking procedures of smart farming.\nIn the\
    \ Sensor layer, the proposed energy-saving approach is an on/off process which\
    \ is based on\nthe selection of a subset of nodes that will remain active for\
    \ a certain period of time, while others remain\ninactive. Following this assumption,\
    \ SWORD (sleep/wake on redundant data) is an energy preserving\nscheme that can\
    \ be used to collect data on soil moisture [19]. The SWORD algorithm performs\
    \ data\ncontrol by removing redundant data so as to minimize energy consumption\
    \ and increase the life of\nsensor nodes in the network.\nIn the Network layer,\
    \ data transmissions and receptions can also be scheduled based on the\nsleep/awake\
    \ periods of sensor nodes at predetermined intervals. For this purpose, A2S, an\
    \ automated\nagricultural precision tracking system can be used [46]. Based on\
    \ this energy-saving technology,\nwhenever the sensing period is set by the application\
    \ server, the sink node keeps the schedule and\nit spreads the sleep order message\
    \ over its network every sensing period. Each time a node receives\nthe sleep\
    \ message, it sets the sleep timer’s end time to the value of the duration ﬁeld\
    \ included in the\nmessage. When the meter time ends, the node detects the environment\
    \ and battery voltage level and\nsends the data to the source. Then, he expects\
    \ the next sleep request message.\nMoreover, another energy-saving scheduling\
    \ technique that can be deployed in the Network layer\ninvolves the use of unmanned\
    \ ﬂying vehicles in an agricultural crop monitoring system. Based on this\nscheme,\
    \ the node on the unmanned ﬂying vehicle wakes the ground nodes to retrieve the\
    \ measured\ndata. To perform this function, a coded radio signal is sent via a\
    \ transmitter to the ground nodes.\nThe nodes are in an inactive state, except\
    \ for a small receiver waiting to receive the trigger signal.\nFurthermore, taking\
    \ advantage of APTEEN hierarchical routing protocol, a time division multiple\n\
    access technique can be implemented as a scheduling method. Based on this technique,\
    \ messages are\nsent to put some nodes in sleep mode so as to avoid packet collisions\
    \ between sensor nodes belonging\nto different clusters. In addition, carrier\
    \ sense multiple access technique is another alternative method,\nwhich is equally\
    \ effective for avoiding collisions.\n7.2. Security Mechanisms\nPrecision agriculture\
    \ monitoring systems involve the exchange of sensitive information regarding\n\
    the cultivation process, the state of crops and personal data of authorized staff.\
    \ It is of great importance\nfor such systems to be protected against cyber-attacks.\
    \ An unauthorized entry of a malicious individual\nin the system may cause great\
    \ damage to the cultivation process or even acquire the farmers personal\ninformation\
    \ [47]. In the pursuit of safeguarding a smart farm monitoring system the conﬁdentiality\n\
    of data should be met. In addition, it is vital to ensure the reliability of the\
    \ data and the ability to\nconﬁrm that a message has not been tampered with, altered\
    \ or changed while on the network. Also,\nthe services of resources offered by\
    \ the network, or by a single sensor node must be available whenever\nrequired\
    \ and ﬁnally to be able to identify the origin of a message received. Basic security\
    \ mechanisms\nare already deployed by the combined IoT technologies in every architectural\
    \ level of the proposed\nsmart monitoring system. However, there are more ways\
    \ to increase the level of security in each\nlayer separately.\nOne popular way\
    \ of providing physical layer security in WSN and IoT systems is cryptography.\n\
    Physical layer security refers to the inner security capabilities of the Sensor\
    \ layer regarding the\nInformation 2019, 10, 348\n16 of 25\nrandomness of wireless\
    \ channels, the signal-to-noise ratio gaps or intended jamming. There are\nthree\
    \ kinds of cryptographic methods used in WSNs, the symmetric and asymmetric ones\
    \ and hash\nfunctions. Hash functions are special mathematical functions which\
    \ map a given input to a certain\noutput with a ﬁxed size. Well-known cryptographically\
    \ secure hashes are the Secure Hash Algorithm-2\n(SHA-2) and Advanced Encryption\
    \ Standard (AES) algorithm. In symmetric cryptographic techniques,\na single shared\
    \ key is used between the two communicating nodes both for encryption and decryption.\n\
    This key stays known only to the nodes of the network. On the other hand, in asymmetric\
    \ cryptography,\na private key can be used to decrypt and sign data. A public\
    \ key is also used to encrypt and verify data.\nThe private key needs to be kept\
    \ conﬁdential while the public key can be published freely. Asymmetric\ncryptographic\
    \ techniques may use the RSA (Rivest–Shamir–Adleman) algorithm, the ECC (Elliptical\n\
    Curve Cryptography) algorithm or the pairing technique. Popular frameworks of\
    \ symmetric and\nasymmetric technique can be found in [48].\nRegarding the Link\
    \ layer of our proposed architecture security mechanisms focus against the\ninterception,\
    \ modiﬁcation and fabrication of the exchanged data. Attack detection mechanisms\
    \ can\nbe applied, such as the misbehavior-aware threshold detection scheme for\
    \ LLNs proposed in [49].\nIn addition, secure routing protocols may be used such\
    \ as SAR(Secure aware routing protocol), which is\nbased on on-demand protocol\
    \ such as AODV or DSR and DPRAODV (Detection, Prevention and\nReactiveAODV) [50].\n\
    Middleware security mechanisms deal with unauthorized modiﬁcations that occur\
    \ due to\ntransmission errors (accidental) and require the use of digital signatures.\
    \ Digital signature schemes\nare cryptographic schemes that include key generation\
    \ algorithms, signing algorithms and signature\nverifying algorithms. A digital\
    \ signature is an authentication mechanism that enables the creator of the\nmessage\
    \ to attach a code that acts as a signature. The Digital Signature Algorithm (DSA),\
    \ developed by\nthe National Institute of Standards and Technology, is one of\
    \ many examples of a signing algorithm.\nAccess control is an important building\
    \ block for the overall security of a precision agriculture\nmonitoring system.\
    \ The IoT requires access control models that apply authorization policies across\n\
    a multitude of smart sensors. In a smart farm monitoring platform, authentication\
    \ is required\nto prevent authorized users from accessing resources in an unauthorized\
    \ manner. For instance,\na worker in the ﬁelds is a legitimate user but does not\
    \ have the access rights as the main administrator\nfarmer. Most importantly,\
    \ access control prevents illegitimate users from gaining access to resources.\n\
    The Attribute-Based Access Control (ABAC) model is a technique that assigns attributes\
    \ to each entity\nin the system. The attributes may refer to either a user or\
    \ a resource and are deﬁned as properties\nof every entity to enable authentication.\
    \ Another paradigm able to provide solid communication in\nthe application layer\
    \ is the Role-Based Access Control model (RBAC) where a user is assigned as\n\
    administrator or ordinary user that predetermines access rights policies. In the\
    \ Application layer,\neach user can be authenticated by the use of passwords or\
    \ a smart key card [51].\n8. Use Case Study: The DIAS Architecture\nThe DIAS research\
    \ project stands for Drone Innovation in saffron Agriculture Surveillance.\nIt\
    \ is co-funded by the European Union and Greek national funds through the Operational\
    \ Program\nCompetitiveness, Entrepreneurship, and Innovation. University of Western\
    \ Macedonia (UOWM) in\ncooperation with Kozani Saffron Producers Cooperative (KSPC)\
    \ aims at developing an integrated\nautomated surveillance system for saffron\
    \ cultivation.\nThis 24 h real-time saffron cultivation\nsurveillance system is\
    \ relied on signal and image collecting and processing, which is derived from\n\
    advanced surveillance, risk identiﬁcation and early warning systems, based on\
    \ integrated sensor\nnetworks, and aerial unmanned vehicles.\n8.1. Saffron Cultivation\n\
    The saffron cultivation is considered to be of extreme importance for the Western\
    \ Macedonia\ncitizens, due to the activity over saffron cultivation by a large\
    \ number of citizens, the limited farming\nInformation 2019, 10, 348\n17 of 25\n\
    geography, the unique production process to plant the saffron seeds, and the unique\
    \ production risk\nthat this operation faces. The only kind of saffron that is\
    \ systematically cultivated around the world,\nfor at least ten centuries, is\
    \ the edible saffron or as it known in scientiﬁc (botanical) terminology Crocus\n\
    Sativus Linneaus.\nThe cultivation process includes harvesting the ﬂowers, as\
    \ presented in Figure 2, splitting the\nstigmas and stamens from the petals, drying\
    \ and sorting of saffron. The picking of 1000 ﬂowers is\nprocess of a duration\
    \ around 45–55 min, while additional 100 to 130 min are required for removing\n\
    the stigmas for drying. In total, 370 to 470 h are required to produce 1 kg of\
    \ dried saffron [52].\nThe ﬂowers are picked exactly when they are fully bloomed,\
    \ and the saffron strand or stigma is at its\nreddest. The harvesting process\
    \ begins shortly after dawn to minimize the further sunlight exposure\nto the\
    \ crops, since they may lose their color and even ﬂavor. Saffron cultivation requires\
    \ dry soil\nwith speciﬁc levels of moisture, controlled irrigation and right amounts\
    \ of nitrogen, phosphorus\nand potassium. Cultivation is commonly disturbed by\
    \ mice, moles and rats wrecking the stems.\nFurthermore, fungi may cause speciﬁc\
    \ diseases at the early stages of saffron growth.\nFigure 2. Saffron harvesting.\n\
    The DIAS platform aims to improve the production process, by offering the ability\
    \ of immediate\ninterference in case of animal, disease or wild weeds detection.\
    \ The farmer will be able to monitor the\nﬁelds in real time and getting alerts\
    \ in case of unwanted incidents regarding the state of the plants\nduring all\
    \ cultivation period, while raising proﬁts. To satisfy these goals, the monitoring\
    \ process will\nbe aligned speciﬁcally with the farmers concerns and actions during\
    \ each month of cultivation as\npresented in Figure 3.\nFigure 3. Saffron cultivation\
    \ yearly stages.\n8.2. DIAS Architecture\nThe DIAS platform follows the architectural\
    \ design of the proposed remote sensing monitoring\nsystem. As presented in Figure\
    \ 4 the DIAS system is consisted of seven architectural layers. In each\nlayer\
    \ the most suitable aforementioned technologies are used towards achieving the\
    \ overall system’s\nefﬁcient performance and reliable operations. The saffron\
    \ cultivation is a quite demanding and delicate\nprocess requiring the deployment\
    \ of tailor-based technologies and continuous crop monitoring to\navoid animal\
    \ and disease interventions.\nIn the Sensor layer, quadcopter UAVs with thermal,\
    \ hyperspectral and RGB cameras are being\nused in cooperation with multiple wireless\
    \ nodes equipped with various sensors for data collection\nregarding the crops.\
    \ Saffron cultivation monitoring requires the study of small sized crops and\n\
    the notice of minimal crop state variations during each month. To select the desired\
    \ information\nUAVs must ﬂy in a certain distance and place for a speciﬁc period\
    \ of time and by using different\nInformation 2019, 10, 348\n18 of 25\nposition\
    \ angles. Quadcopter UAVs is considered to be the best choice for saffron monitoring\
    \ since\nthey have rotary wings, which provide them with the ability of maneuverability,\
    \ while also ﬂying\nin low speed. Regarding RGB cameras, they are ideal since\
    \ saffron cultivation requires the capture\nof data-images in different weather\
    \ conditions avoiding inadequate or excessive exposure of the\nimage. Using multispectral\
    \ or hyperspectral sensors, UAVs can also obtain information related to\nspectral\
    \ absorption and reﬂection of the crops in several bands. This quite useful since\
    \ the provided\ninformation can then be used to calculate vegetation indices and\
    \ monitor the state of saffron crops\nbased on them. On the other hand, thermal\
    \ imaging detects speciﬁc levels of radiation and translates\nit into a grayscale\
    \ image, using brighter and darker shades of heat representation. This ability\
    \ is also\nessential in saffron cultivation since the ﬁelds are regularly trampled\
    \ by animals that are not being\ndetected on time in before they cause any damage.\
    \ The DIAS monitoring system uses different ground\nand on-leaf sensors to collect\
    \ useful data for improving the cultivation process. More speciﬁcally,\nenvironmental\
    \ humidity and temperature is evaluated since saffron requires speciﬁc conditions\
    \ to\nprosper. Additionally, the levels of luminosity, leaf-wetness, soil moisture,\
    \ pH and wind speed are also\nof great importance. Furthermore, the amounts of\
    \ nitrogen, phosphorus and potassium in the soil can\nhave a severe impact on\
    \ the plant’s growth, as well as the moisture levels in the soil. The farmer will\n\
    be able to predict production loss efﬁciently due to a round knowledge of the\
    \ saffron ﬁelds condition\nand even intervene with possible treatments to change\
    \ its course for the better.\nRegarding the Link and Encapsulation layer, sensor\
    \ data exchange in the DIAS platform is enabled\nby the LoRaWAN technology and\
    \ the IPv6 protocol. LoRa technology offers several advantages.\nThe LoRa physical\
    \ layer uses ISM bands 868 and 915 MHz—frequencies that are free to use anywhere\n\
    in the world. In addition, LoRa devices consume very little power making it ideal\
    \ for battery-powered\ndevices and it can also transmit and receive data for up\
    \ to 15 km in suburban areas and 5 km in\nurban areas. Another advantage of LoRa\
    \ is its high network capacity. In LoRaWAN, a single gateway\ncan accommodate\
    \ 1000 end-node devices. On the other hand, IPv6 offers large addressing space\n\
    and has built-in support for network auto-conﬁguration. In the DIAS platform,\
    \ each sensor node\nis characterized by its own IP address and uses a power saving\
    \ scheduling and routing protocol to\ntransmit the collected data to the nearest\
    \ LoRa Gateway. The information to be exchanged is encrypted\nbefore transmission.\
    \ Each LoRa gateway forwards the information to the according network router for\n\
    Internet access and data storage to the system’ database. UAVs’ data transmission\
    \ and communication\nis enabled by the IEEE 802.11ah networking standard in cooperation\
    \ with the IPv6 protocol, to forward\nthe collected images to the network server\
    \ as well.\nIn the Middleware layer, the DIAS platform will employ the MQTT-SN\
    \ protocol. MQTT-SN\nenables the management of all DIAS networking devices through\
    \ message exchanges coordinated by\nthe FIWARE’s context broker. It is essential\
    \ to maintain the monitoring’s system reliability towards\nachieving meaningful\
    \ data collection. Based on this protocol, the exchanged messages can be organized\n\
    by topics and importance regarding device management commands, transmission requests\
    \ initiated by\na higher layer and data acquisition. Sixteen number of message\
    \ types are supported and transmitted\nin an asynchronous way of communication\
    \ by the publish-subscribe model. TCP and UDP will also be\nused as transport\
    \ protocols. MQTT is ideal for the DIAS system since it excels in smart sensor\
    \ device\ncommunication on a wide area network, due to the publish/subscribe architecture\
    \ with the broker\nin the middle. MQTT is also very useful if the bandwidth is\
    \ limited to enhance network reliability\nand availability.\nIn the according\
    \ Conﬁguration layer, all saffron ﬁeld collected data will be grouped and\nformulated\
    \ to reach the information management unit. This layer facilitates the FIWARE\
    \ NGSI\nAPI so to produce the desired information model of the acquired ﬁeld data\
    \ based on efﬁcient\ncontext management.\nThe FIWARE’s Orion Context Broker has\
    \ powerful features enhancing\nthe capabilities and performance of the DIAS monitoring\
    \ system such as enabling asynchronous\napplication notiﬁcations. The basic operations\
    \ of the current layer include enabling the publication,\nInformation 2019, 10,\
    \ 348\n19 of 25\nconsumption, subscription and processing of all the information\
    \ relevant to the crops and the\ncultivation process in the DIAS platform.\nFigure\
    \ 4. The DIAS architecture.\nThe Management layer constitutes the basic operation\
    \ center of the DIAs platform. It stores,\nmaintains, analyzes the collected data\
    \ and produces predictions for the progress of the crops growth\nrate and statistics\
    \ regarding they current state. According to the commands acquired from the user\
    \ of\nthe platform in the highest architectural layer, the information management\
    \ logic initiates the according\nprocesses. Data processing includes the use of\
    \ the Random Forest machine learning classiﬁcation\nalgorithm for direct extraction\
    \ of conclusions regarding the growth and health of vegetation. This\nalgorithm\
    \ is directly applied on the data of the images acquired by the UAVs, evaluating\
    \ the RGB\nInformation 2019, 10, 348\n20 of 25\ncolors and the intensity of each\
    \ pixel. The Random Forest scheme performs very well with high\ndimensionality\
    \ and can handle binary features, categorical features, and numerical features.\
    \ This\nmethod is chosen since very little pre-processing is required and the\
    \ data does not need to be rescaled\nor transformed. Digital image processing\
    \ of geospatially corrected aerial images (orthophotographs)\nfocuses on producing\
    \ the according vegetation indexes for evaluating the state of saffron plants.\
    \ Two\nkind of vegetation indexes will be calculated by the PiX4D image processing\
    \ tool. Vegetation indexes\nderived from multispectral information, such as NDVI\
    \ will enable the detection of unhealthy or sparse\nvegetation that reﬂects more\
    \ visible light and less near infrared light, making it easy to monitor the\n\
    growth and health of saffron crops. On the other hand, regarding the use of RGB-based\
    \ Vegetation\nIndices, Excess Greenness Index (ExG) is based on the assumption\
    \ that saffron plants will display a\nclear high degree of greenness, while soil\
    \ being the only background element. Finally, the Normalized\nDifference Index\
    \ (NDI) will be also used since it can enable the separation of saffron plants\
    \ from\nsoil and residue background images, using only green and red channels.\
    \ Spectral information can\nhelp signiﬁcantly in assessing a lot biological and\
    \ physical characteristics of the saffron crops. Any\nkind of wild weeds or animal\
    \ detection based on thermal imaging in the ﬁelds initiates alerts for\nimmediate\
    \ intervention and is taken into consideration as a note in the cultivation calendar\
    \ created by\nthe platform for the farmer. For this purpose, the OBIA algorithm\
    \ is also used to recognize weeds or\ndiscriminate species. Object-based image\
    \ analysis is based on the comparison between sets of similar\npixels called image\
    \ objects in measures of spectral properties (i.e., color), size, shape, and texture,\n\
    as well as context. The OBIA algorithm is chosen since it is more suited to landscape-scale\
    \ analyses\nand can ﬁlter out meaningless information and assimilate other pieces\
    \ of information into a single\nobject. After processing, all the collected sensor\
    \ data are categorized and evaluated in accordance with\nthe desired vegetation\
    \ index values, moisture levels and general plant state for each month during\n\
    the cultivation process. For these tasks, the DIAS platform employs powerful and\
    \ well-known tools,\nthe Apache Spark Framework focusing on Big Data analytics\
    \ and the WEKA (Waikato Environment)\nFramework specializing in data mining tasks.\
    \ The evaluation results will point out the vulnerable\nspots in the ﬁeld with\
    \ helpful statistical graphs and suggest possible solutions to the farmer, such\
    \ as\nthe use of fertilizer.\nIn the Application Layer, each user can access the\
    \ DIAS platform by using his/her own unique\npassword. According to their authority\
    \ and activities in the saffron ﬁeld the users have different access\nrights in\
    \ the DIAS platform. A user may be the administrator of the platform, a representative\
    \ of the\nKSPC board, a farmer or a worker in the ﬁelds. For instance, a worker\
    \ can only observe the evaluation\nresults in order to aid the farmer in treating\
    \ the plant growth, while the KSPC representative can\nadd observation notes,\
    \ can schedule and initiate sensor data collection in a speciﬁc ﬁeld and also\n\
    manage the ﬂight plan of UAVs. On the other hand, the platform administrator is\
    \ only one who can\nadd new users and new saffron ﬁelds for cultivation to be\
    \ observed in the system. Access in the\nDIAS platform is forbidden for non-authorized\
    \ users. In the Application layer, the management of\nthe four basic operational\
    \ units of the DIAS system can be initiated. These are the Visualization Unit,\n\
    the Data Management Unit, the Prediction Unit and the Data collection Unit. By\
    \ entering the Data\ncollection Unit, a user can initiate sensor data collection\
    \ in a selected ﬁeld or modify existing data\nin the platform. By entering the\
    \ Data Management Unit, the user can evaluate orthophotographs\nand calculate\
    \ vegetation indexes according to speciﬁc data in a speciﬁc saffron ﬁeld with\
    \ the help of\nPix4DMapper tool. The Visualization Unit is related to the presentation\
    \ of statistical results and graphs\nregarding each saffron ﬁeld, while the Prediction\
    \ Unit employs the aforementioned data mining tools\nto produce a sufﬁcient evaluation\
    \ of the collected data. All system information is stored in the central\nserver\
    \ database.\nBased on the acquired and processed data, farmers can produce statistics\
    \ regarding the progress in\nsaffron production and avoid ﬁnancial loss, while\
    \ improving the quality of the crops and accomplishing\na considerable rise in\
    \ production.\nInformation 2019, 10, 348\n21 of 25\n8.3. Beneﬁts and Costs\nGreece\
    \ is the second largest saffron producing country, with an average output of 4\
    \ tons of p.a.\nduring the last four decades, most of which is directed in export\
    \ markets. The establishment of the\n‘Kozani Saffron Producers Cooperative’ marked\
    \ the beginning of a good decade for this product\nwith production reaching its\
    \ height record of more than 12 tons in 1982 [53]. Nevertheless, in the\nperiod\
    \ following Greece’s accession to the European Community, farmers began abandoning\
    \ saffron\ncultivation. This fact resulted in a signiﬁcant decrease in yield with\
    \ an average yield of 800 g per\nstremma (1 ha = 10 stremmas = 1000 m2 ). However,\
    \ this trend seems to be reversed since 2010 and\ncurrently yields vary around\
    \ 1 ton per stremma. Currently, Greek saffron price is about 1200 euros per\n\
    Kg. Nearly 5000 spots are needed to produce 100 g of red saffron. The average\
    \ produce per acre is 6 kg\nof dried stigmas (red product). The lower production\
    \ of the plant is on the ﬁrst year of the plantation,\nwhile the highest on the\
    \ third and the fourth.\nIn the year of 2015, a study in Greek saffron cultivation\
    \ resulted that farm managers need\nto address the efﬁciency of input use and\
    \ raise capital and labor productivities to maintain\ncompetitiveness [53]. The\
    \ saffron quality is determined by the color, ﬂavor and size of the stigmas.\n\
    The DIAS platform aims to upgrade proﬁt earnings by the adoption of new technologies,\
    \ ensuring\nﬂower picking at appropriate time in a proper collection material\
    \ at an appropriate age. Animal\nintrusions in the ﬁelds, causing a huge loss\
    \ in production, will be prevented and crops diseases will\nbe detected in time.\
    \ The overall equipment cost is considered to be a safe investment for farmers\n\
    since most of the technologies involved are open source and the initial cost of\
    \ the related hardware\nand software can be shared across producers. Currently,\
    \ the DIAS initiative is under construction\nand no experimental results are available\
    \ to conﬁrm the proposed objectives. However, in Table 6\nwe present the production\
    \ rate of Greek Saffron as recorded in [53], while in Table 7 an average\nestimation\
    \ is provided regarding the increase in cultivation operations by adopting the\
    \ DIAS platform.\nThese percentages are the estimations provided by two of the\
    \ producers whose ﬁelds participate in\nthe pilot study. The estimations show\
    \ that on average the farmers calculate an increase of around\n20% in production,\
    \ this percentage is in accordance to other types of cultivations such as olives\
    \ and\npotatoes [54].\nThe use of the DIAS project can offer a signiﬁcant increase\
    \ in saffron production. Nevertheless,\nsince no pilots have been implemented\
    \ yet in the project, the Return on Investment (ROI) is difﬁcult to be\nestimated.\
    \ An investment of time and money from the DIAS consortium is required to investigate\
    \ how\nthe data gathered from UAVs can connect to and affect other things that\
    \ are happening on the ﬁelds.\nSaffron growers need that information to provide\
    \ context and create a correlation regarding causes\nand effects. At that point\
    \ ROI becomes signiﬁcant promoting UAVs as a part of the desired solution\nand\
    \ not as the solution itself. Furthermore, due to shared costs between project\
    \ partners, ROI becomes\na collective performance measure that can be estimated\
    \ only when each member has acquired the\naccording technological beneﬁts. A complex\
    \ proﬁtability study is required to specify the precision\nservice offerings,\
    \ as presented in [55,56]. Each partner in the DIAS project owns and offers different\n\
    assets in this endeavor, thus calculating the overall ROI of UAV usage from the\
    \ side of farmers is not\nyet possible.\nTable 6. Greek saffron cultivation economic\
    \ estimation in one year.\nAverage production results\n2200 euros\nAverage produced\
    \ yield\n1.8 Kgs\nAverage labor cost of annual working hours\n145 euros per 1000\
    \ m2\nAverage cultivated land\n15,000 m2\nInformation 2019, 10, 348\n22 of 25\n\
    Table 7. Economic estimation for Greek saffron cultivation via using the DIAS\
    \ platform in one year.\nDIAS platform hardware and software equipment cost\n\
    45,000 euros\nAverage increase in production results in euros\n10%\nAverage increase\
    \ in produced yield in Kgs per 1000 m2\n20%\nAverage increase in saffron quality\
    \ per 1000 m2\n25%\n9. Challenges\nThe implementation and maintenance of a monitoring\
    \ system in precision agriculture faces\nseveral challenges. The greatest challenge\
    \ in the sensor layer is for sensor nodes to achieve efﬁcient and\ncontinuous\
    \ operation for a long time in a natural environment, while taking into account\
    \ the climate\nchange and wildlife interventions. The battery life of sensor nodes\
    \ is not considered satisfactory,\nand it is necessary to design and implement\
    \ energy-saving protocols with the highest possible\nsystem performance among\
    \ other precautions. In addition, depending on the type of application,\nthe supported\
    \ agricultural work and the implementation technologies, the problems that arise\
    \ can be\ndifferentiated. For instance, the use of sensors and controllers from\
    \ different manufacturers prevents\ncommunication between them and makes it more\
    \ difﬁcult to interconnect with other agricultural\ncomponents. Also, the sensor\
    \ inertia phenomenon was observed in a high-speed WSN due to non-steep\nchanges\
    \ in humidity and soil temperature.\nIn the network layer, the basic challenges\
    \ regarding the operation of a crop monitoring system\nwith WSN and IoT technologies\
    \ include the limited computational capabilities of sensor nodes.\nThe restricted\
    \ memory of the nodes disables them to handle large amounts of communication data\n\
    and cluster-based interconnection procedures. Due to this fact, long data queues\
    \ are created in each\nnode, leading to greater delay in transmissions. The same\
    \ outcome can be triggered by the long\ncommunication distance of sensor nodes.\
    \ One major issue that routing algorithms must deal with in\nsuch cases is the\
    \ high level of energy consumption, which leads to a reduction in the overall\
    \ viability\nof the network. In precision agriculture monitoring systems routing\
    \ protocols should offer minimum\ndelay, be able to provide efﬁcient services\
    \ in many sensor nodes, while taking into account the limited\nresources. They\
    \ should also be capable of accepting all sorts of environments including severe\
    \ and loss\nenvironments, while providing information security and privacy. Most\
    \ routing protocols use some\nlocalization technique to obtain knowledge concerning\
    \ their locations. The performance of the routing\nprotocol is a function of network\
    \ size and transmission media. Therefore, transmission media of good\nquality\
    \ enhances the network performance directly.\nHowever, in many cases the failure\
    \ of such advanced monitoring system may be due to the\ngeographic, cultural or\
    \ socio-economic distance between system designers and the intended user\ncommunity.\
    \ Cost is an important limiting factor in the implementation of such systems.\
    \ The cost\ndepends to a great extent on the quality of the materials and the\
    \ topology of the network.\n10. Conclusions\nThis paper proposes the architectural\
    \ components of a smart farming monitoring system, based on\nmodern IoT communication\
    \ technologies and WSN capabilities, in cooperation with energy-saving\nprotocol\
    \ schemes. A use case study based on the DIAS project is also presented, enhancing\
    \ the reliability\nand contribution of our model. The IoT agricultural applications\
    \ enable farmers to collect and analyze\nmeaningful data. Large landowners and\
    \ small farmers should welcome the potential of IoT market\nfor agriculture by\
    \ installing smart technologies to increase competitiveness and sustainability\
    \ in their\nproductions. The rapid growth of population forces farmers to meet\
    \ the demand by implementing\nagricultural IoT solutions in a prosperous manner.\
    \ In the future, an in-depth study will be carried out\nregarding the real-time\
    \ performance of the proposed model in the DIAS project.\nInformation 2019, 10,\
    \ 348\n23 of 25\nAuthor Contributions: Conceptualization, A.T., P.S. and S.B.;\
    \ Methodology, A.T., P.S. and S.B.; Writing—original\ndraft, A.T.; Writing—review\
    \ & editing, P.S. and S.B.\nFunding: This research was co-funded by the European\
    \ Union and Greek national funds through the Operational\nProgram Competitiveness,\
    \ Entrepreneurship, and Innovation, grant number T1EDK-04873, project “Drone\n\
    innovation in Saffron Agriculture,” DIAS.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nReferences\n1.\nGuillermo, J.C.; García-Cedeño, A.;\
    \ Rivas-Lalaleo, D.; Huerta, M.; Clotet, R. IoT Architecture Based on\nWireless\
    \ Sensor Network Applied to Agricultural Monitoring: A Case of Study of Cacao\
    \ Crops in Ecuador.\nIn Advances in Information and Communication Technologies\
    \ for Adapting Agriculture to Climate Change II; Springer\nInternational Publishing:\
    \ Cham, Switzerland, 2019; pp. 42–57.\n2.\nDonzia, S.K.Y.; Kim, H.K.; Hwang, H.J.\
    \ A Software Model for Precision Agriculture Framework Based on\nSmart Farming\
    \ System and Application of IoT Gateway. In Computational Science/Intelligence\
    \ and Applied\nInformatics; Lee, R., Ed.; Springer International Publishing: Cham,\
    \ Switzerland, 2019; pp. 49–58. [CrossRef]\n3.\nKoksal, O.; Tekinerdogan, B. Architecture\
    \ design approach for IoT-based farm management information\nsystems. Precis.\
    \ Agric. 2018, 20, 926–958. [CrossRef]\n4.\nKamilaris, A.; Gao, F.; Prenafeta-Boldu,\
    \ F.X.; Ali, M.I. Agri-IoT: A semantic framework for Internet of\nThings-enabled\
    \ smart farming applications. In Proceedings of the 2016 IEEE 3rd World Forum\
    \ on Internet of\nThings (WF-IoT), Reston, VA, USA, 12–14 December 2016; pp. 442–447.\
    \ [CrossRef]\n5.\nFerrandez, J.; Manuel García-Chamizo, J.; Nieto-Hidalgo, M.;\
    \ Mora-Pascual, J.; Mora-Martínez, J. Developing\nUbiquitous Sensor Network Platform\
    \ Using Internet of Things: Application in Precision Agriculture. Sensors\n2016,\
    \ 16, 1141. [CrossRef] [PubMed]\n6.\nVasisht, D.; Kapetanovic, Z.; Won, J.; Jin,\
    \ X.; Chandra, R.; Sinha, S.; Kapoor, A.; Sudarshan, M.; Stratman, S.\nFarmBeats:\
    \ An IoT Platform for Data-Driven Agriculture. In Proceedings of the 14th USENIX\
    \ Symposium on\nNetworked Systems Design and Implementation (NSDI 17), Boston,\
    \ MA, USA, 27–29 March 2017; USENIX\nAssociation: Berkeley, CA, USA, 2017; pp.\
    \ 515–529;\n7.\nAhmed, N.; De, D.; Hussain, I. Internet of Things (IoT) for Smart\
    \ Precision Agriculture and Farming in Rural\nAreas. IEEE Internet Things J. 2018,\
    \ 5, 4890–4899. [CrossRef]\n8.\nJi, M.; Yoon, J.; Choo, J.; Jang, M.; Smith, A.\
    \ LoRa-based Visual Monitoring Scheme for Agriculture\nIoT. In Proceedings of\
    \ the 2019 IEEE Sensors Applications Symposium (SAS), Sophia Antipolis, France,\n\
    11–13 March 2019; pp. 1–6. [CrossRef]\n9.\nFerrandez, J.; Manuel García-Chamizo,\
    \ J.; Nieto-Hidalgo, M.; Mora-Martínez, J. Precision Agriculture Design\nMethod\
    \ Using a Distributed Computing Architecture on Internet of Things Context. Sensors\
    \ 2018, 18, 1731.\n[CrossRef] [PubMed]\n10.\nTriantafyllou, A.; Sarigiannidis,\
    \ P.; Lagkas, T.D. Network Protocols, Schemes, and Mechanisms for Internet\nof\
    \ Things (IoT): Features, Open Challenges, and Trends. Wirel. Commun. Mob. Comput.\
    \ 2018, 2018, 5349894.\n[CrossRef]\n11.\nTriantafyllou, A.; Tsouros, D.C. ; Sarigiannidis,\
    \ P.; Bibi, S. An Architecture model for Smart Farming.\nIn Proceedings of the\
    \ 15th International Conference on Distributed Computing in Sensor Systems (DCOSS),\n\
    Santorini Island, Greece, 29–31 May 2019; pp. 385–392. [CrossRef]\n12.\nInternational\
    \ Organization for Standardization; ISO/IEC 7498-1: The Basic Model; Technical\
    \ Report; 1994;\nISO Central Secretariat, Chemin de Blandonnet 8, CP 401 - 1214\
    \ Vernier, Geneva, Switzerland. Available\nOnline: https://www.iso.org/standard/20269.html\
    \ (accessed on 5 November 2019).\n13.\nVuolo, F.; D’Urso, G.; Michele, C.D.; Bianchi,\
    \ B.; Cutting, M. Satellite-based irrigation advisory services:\nA common tool\
    \ for different experiences from Europe to Australia. Agric. Water Manag. 2015,\
    \ 147, 82–95.\n[CrossRef]\n14.\nBauer, J.; Aschenbruck, N. Design and implementation\
    \ of an agricultural monitoring system for smart\nfarming. In Proceedings of the\
    \ 2018 IoT Vertical and Topical Summit on Agriculture—Tuscany (IOT Tuscany),\n\
    Tuscany, Italy, 8–9 May 2018; pp. 1–6. [CrossRef]\nInformation 2019, 10, 348\n\
    24 of 25\n15.\nCalera, A.; Campos, I.; Osann, A.; D’Urso, G.; Menenti, M. Remote\
    \ Sensing for Crop Water Management:\nFrom ET Modelling to Services for the End\
    \ Users. Sensors 2017, 17, 1104. [CrossRef] [PubMed]\n16.\nPetropoulos, G.P.;\
    \ Srivastava, P.K.; Piles, M.; Pearson, S. Earth Observation-Based Operational\
    \ Estimation of\nSoil Moisture and Evapotranspiration for Agricultural Crops in\
    \ Support of Sustainable Water Management.\nSustainability 2018, 10, 181. [CrossRef]\n\
    17.\nAnzola, J.; García Díaz, V.; Jiménez, A. WSN analysis in grid topology for\
    \ potato crops for IoT. In Proceedings\nof the 4th Multidisciplinary International\
    \ Social Networks Conference, Bangkok, Thailand, 17–19 July 2017;\npp. 1–7. [CrossRef]\n\
    18.\nSarigiannidis, P.; Lagkas, T.; Bibi, S.; Ampatzoglou, A.; Bellavista, P.\
    \ Hybrid 5G optical-wireless SDN-based\nnetworks, challenges and open issues.\
    \ IET Netw. 2017, 6, 141–148. [CrossRef]\n19.\nJawad, H.M.; Nordin, R.; Gharghan,\
    \ S.K.; Jawad, A.M.; Ismail, M.; Abu-AlShaeer, M.J. Power Reduction\nwith Sleep/Wake\
    \ on Redundant Data (SWORD) in a Wireless Sensor Network for Energy-Efﬁcient Precision\n\
    Agriculture. Sensors 2018, 18, 3450. [CrossRef] [PubMed]\n20.\nKone, C.T.; Haﬁd,\
    \ A.; Boushaba, M. Performance Management of IEEE 802.15.4 Wireless Sensor Network\
    \ for\nPrecision Agriculture. IEEE Sens. J. 2015, 15, 5734–5747. [CrossRef]\n\
    21.\nDu, K.; Sun, Z.; Zheng, F.; Chu, J.; Ma, J. Monitoring System for Wheat Meterological\
    \ Disasters using\nWireless Sensor Networks. In Proceedings of the 2017 ASABE\
    \ Annual International Meeting, Spokane, WA,\nUSA, 16–19 July 2017. [CrossRef]\n\
    22.\nHeble, S.; Kumar, A.; Prasad, K.V.V.D.; Samirana, S.; Rajalakshmi, P.; Desai,\
    \ U.B. A low power IoT network\nfor smart agriculture. In Proceedings of the 2018\
    \ IEEE 4th World Forum on Internet of Things (WF-IoT),\nSingapore, 5–8 February\
    \ 2018; pp. 609–614. [CrossRef]\n23.\nAnurag, D.; Roy, S.; Bandyopadhyay, S. Agro-sense:\
    \ Precision agriculture using sensor-based wireless mesh\nnetworks. In Proceedings\
    \ of the 2008 First ITU-T Kaleidoscope Academic Conference—Innovations in NGN:\n\
    Future Network and Services, Geneva, Switzerland, 12–13 May 2008; pp. 383–388.\
    \ [CrossRef]\n24.\nEl-kader, S.M.A.; El-Basioni, B.M.M. Precision farming solution\
    \ in Egypt using the wireless sensor network\ntechnology. Egypt. Inform. J. 2013,\
    \ 14, 221–233. [CrossRef]\n25.\nAquino-Santos, R.; González, A.; Edwards-Block,\
    \ A.; Virgen Ortíz, R. Developing a New Wireless Sensor\nNetwork Platform and\
    \ Its Application in Precision Agriculture. Sensors 2011, 11, 1192–1211. [CrossRef]\n\
    [PubMed]\n26.\nChen, Y.; Chanet, J.P.; Hou, K.M.; Shi, H.; de Sousa, G. A Scalable\
    \ Context-Aware Objective Function (SCAOF)\nof Routing Protocol for Agricultural\
    \ Low-Power and Lossy Networks (RPAL). Sensors 2015, 15, 19507–19540.\n[CrossRef]\
    \ [PubMed]\n27.\nWeber, P.; Jäckle, D.; Rahusen, D.; Sikora, A. IPv6 over LoRaWANTM.\
    \ In Proceedings of the 2016 3rd\nInternational Symposium on Wireless Systems\
    \ within the Conferences on Intelligent Data Acquisition and\nAdvanced Computing\
    \ Systems (IDAACS-SWS), Offenburg, Germany, 26–27 September 2016; pp. 75–79.\n\
    [CrossRef]\n28.\nSobral, J.V.V.; Rodrigues, J.J.P.C.; Rabêlo, R.A.L.; Saleem,\
    \ K.; Furtado, V. LOADng-IoT: An Enhanced Routing\nProtocol for Internet of Things\
    \ Applications over Low Power Networks. Sensors 2019, 19, 150. [CrossRef]\n[PubMed]\n\
    29.\nTukade, T.M.; Banakar, R. Data transfer protocols in IoT—An overview. Int.\
    \ J. Pure Appl. Math. 2018,\n118, 121–138.\n30.\nMihini/M3DA Speciﬁcation. Available\
    \ Online: https://wiki.eclipse.org/Mihini/M3DA_Speciﬁcation\n(accessed on 5 November\
    \ 2019).\n31.\nOMA LightweightM2M. Available Online: https://www.omaspecworks.org/what-is-oma-specworks/iot/\n\
    lightweight-m2m-lwm2m/ (accessed on 5 November 2019).\n32.\noneM2M—Standards for\
    \ M2M and the Internet of Things. Available Online: http://www.onem2m.org/\n(accessed\
    \ on 5 November 2019).\n33.\nDDS Foundation. Available Online: https://www.dds-foundation.org/what-is-dds-3/\
    \ (accessed on 5\nNovember 2019).\n34.\nFIWARE NGSI. Available Online: https://forge.ﬁware.org/plugins/mediawiki/wiki/ﬁware/index.php/\n\
    FI-WARE_NGSI_Context_Management_tutorial (accessed on 5 November 2019).\n35.\n\
    OGC Implementation Standards. Available Online: https://www.opengeospatial.org/docs/is\
    \ (accessed on\n5 November 2019).\nInformation 2019, 10, 348\n25 of 25\n36.\n\
    Eleftherakis, G.; Pappas, D.; Lagkas, T.; Rousis, K.; Paunovski, O.\nArchitecting\
    \ the IoT Paradigm:\nA Middleware for Autonomous Distributed Sensor Networks.\
    \ Int. J. Distrib. Sens. Netw. 2015, 2015, 139735.\n[CrossRef]\n37.\nCapella,\
    \ J.V.; Campelo, J.C.; Bonastre, A.; Ors, R. A Reference Model for Monitoring\
    \ IoT WSN-Based\nApplications. Sensors 2016, 16, 1816. [CrossRef] [PubMed]\n38.\n\
    Ryu, M.; Yun, J.; Miao, T.; Ahn, I.; Choi, S.; Kim, J. Design and implementation\
    \ of a connected farm for smart\nfarming system. In Proceedings of the 2015 IEEE\
    \ SENSORS, Busan, Korea, 1–4 November 2015; pp. 1–4.\n[CrossRef]\n39.\nWolfert,\
    \ S.; Ge, L.; Verdouw, C.; Bogaardt, M.J. Big Data in Smart Farming—A review.\
    \ Agric. Syst. 2017,\n153, 69–80. [CrossRef]\n40.\nWestoby, M.; Brasington, J.;\
    \ Glasser, N.; Hambrey, M.; Reynolds, J. ‘Structure-from-Motion’ photogrammetry:\n\
    A low-cost, effective tool for geoscience applications. Geomorphology 2012, 179,\
    \ 300–314. [CrossRef]\n41.\nHuang, Y.; Reddy, K.N.; Fletcher, R.S.; Pennington,\
    \ D. In Proceedings of the UAV Low-Altitude Remote\nSensing for Precision Weed\
    \ Management. Weed Technol. 2018, 32, 2–6. [CrossRef]\n42.\nHuang, Y.; Chen, Z.X.;\
    \ Tao, Y.U.; Huang, X.Z.; Gu, X.F. Agricultural remote sensing big data: Management\n\
    and applications. J. Integr. Agric. 2018, 17, 1915–1931. [CrossRef]\n43.\nKeswani,\n\
    B.;\nMohapatra,\nA.G.;\nMohanty,\nA.;\nKhanna,\nA.;\nRodrigues,\nJ.J.P.C.;\nGupta,\n\
    D.;\nde Albuquerque, V.H.C. Adapting weather conditions based IoT enabled smart\
    \ irrigation technique in\nprecision agriculture mechanisms. Neural Comput. Appl.\
    \ 2019, 31, 277–292. [CrossRef]\n44.\nHamouda, Y.E.M.; Msallam, M.M. Smart heterogeneous\
    \ precision agriculture using wireless sensor network\nbased on extended Kalman\
    \ ﬁlter. Neural Comput. Appl. 2019, 31, 5653–5669. [CrossRef]\n45.\nCambra, C.;\
    \ Sendra, S.; Lloret, J.; Garcia, L. An IoT service-oriented system for agriculture\
    \ monitoring.\nIn Proceedings of the 2017 IEEE International Conference on Communications\
    \ (ICC), Paris, France,\n21–25 May 2017; pp. 1–6. [CrossRef]\n46.\nYoo, S.; Kim,\
    \ J.; Kim, T.; Ahn, S.; Sung, J.; Kim, D. A2S: Automated Agriculture System based\
    \ on WSN.\nIn Proceedings of the 2007 IEEE International Symposium on Consumer\
    \ Electronics, Irving, TX, USA,\n20–23 June 2007; pp. 1–5. [CrossRef]\n47.\nLagkas,\
    \ T.; Argyriou, V.; Bibi, S.; Sarigiannidis, P. UAV IoT Framework Views and Challenges:\
    \ Towards\nProtecting Drones as “Things”. Sensors 2018, 18, 4015. [CrossRef] [PubMed]\n\
    48.\nSharma, G.; Bala, S.; Verma, A.K. Security Frameworks for Wireless Sensor\
    \ Networks—Review. Procedia\nTechnol. 2012, 6, 978–987. [CrossRef]\n49.\nPu, C.Energy\
    \ Depletion Attack Against Routing Protocol in the Internet of Things. In Proceedings\
    \ of the\n2019 16th IEEE Annual Consumer Communications Networking Conference\
    \ (CCNC), Las Vegas, NV, USA,\n11–14 January 2019; pp. 1–4. [CrossRef]\n50.\n\
    Savarimuthu, N.; Vijayalakshmi, K.; Padmapriya, V.\nA Review of Network Layer\
    \ Attacks and\nCountermeasures in WSN. IJESC 2018, 10. [CrossRef]\n51.\nBeltran,\
    \ V.; Skarmeta, A.F.\nOverview of Device Access Control in the IoT and its Challenges.\n\
    IEEE Commun. Mag. 2019, 57, 154–160. [CrossRef]\n52.\nKumar, R.; Singh, V.; Devi,\
    \ K.; Sharma, M.; Singh, M.; Ahuja, P. State of Art of Saffron (Crocus sativus\
    \ L.)\nAgronomy: A Comprehensive Review. Food Rev. Int. 2008, 25, 44–85. [CrossRef]\n\
    53.\nMelfou, K.; Loizou, E.; Oxouzi, E.; Papanagiotou, E. Economic Performance\
    \ of Quality Labeled Saffron in\nGreece. Procedia Econ. Financ. 2015, 24, 419–425.\
    \ doi:10.1016/S2212-5671(15)00698-X. [CrossRef]\n54.\nvan Evert, F.; Gaitán-Cremaschi,\
    \ D.; Fountas, S.; Kempenaar, C. Can precision agriculture increase the\nproﬁtability\
    \ and sustainability of the production of potatoes and olives?\nSustainability\
    \ 2017, 9, 1863.\n[CrossRef]\n55.\nErickson, B.; Widmar, D.A. 2015 Precision Agricultural\
    \ Services Dealership Survey Results; Purdue University:\nWest Lafayette, IN,\
    \ USA, 2015\n56.\nBaio, F.; Silva, S.; Camolese, H.; Neves, D. Financial analysis\
    \ of the investment in precision agriculture techniques\non cotton crop. Eng.\
    \ Agrícola 2017, 37, 838–847. [CrossRef]\nc⃝ 2019 by the authors. Licensee MDPI,\
    \ Basel, Switzerland. This article is an open access\narticle distributed under\
    \ the terms and conditions of the Creative Commons Attribution\n(CC BY) license\
    \ (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: null
  journal: Information
  limitations: The paper focuses on the architectural aspects of a precision agriculture
    monitoring system without providing quantitative results or an experimental evaluation.
    Additionally, the paper does not mention any specific constraints or limitations
    of the proposed model.
  pdf_link: https://www.mdpi.com/2078-2489/10/11/348/pdf
  publication_year: 2019
  relevance_score: 0.8333333333333334
  relevance_score1: 0
  relevance_score2: 0
  title: 'Precision Agriculture: A Remote Sensing Monitoring System Architecture †'
  verbatim_quote1: '"This architectural model engages novel IoT technologies [10]
    and WSN capabilities to provide a sufficient view of precision agriculture."'
  verbatim_quote2: '"The proposed reference architecture model is exemplified in a
    real-world application for surveying Saffron agriculture in Kozani, Greece."'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/ncc.2015.7084901
  analysis: 'The paper describes the design and implementation of a soil moisture
    wireless sensor network that uses a shortest path tree data collection protocol.
    The network consists of 10 nodes grouped as 3 clusters which collects and sends
    sensed data to a base station (here laptop) through a sink node. Data processing
    and presentation on the laptop is achieved using custom designed graphical user
    interface (GUI) in MATLAB. The implemented sensor network features using in house
    developed, low cost dual probe heat pulse (DPHP) soil moisture sensor, soil temperature
    sensor and energy efficient wireless transmission using clustering architecture
    for agricultural application. Field testing for 20% moisture level is demonstrated
    while feasibility of measuring the moisture levels from 0% to 40% is established
    from lab experiments.


    The paper is relevant to the topic of types of data most applicable to irrigation
    management and their typical sources, as it describes the use of a soil moisture
    sensor to collect data on soil moisture, soil temperature, and relative humidity.
    The data collected by the sensor network can be used to manage irrigation systems
    more efficiently.


    The paper provides novel and meaningful information on the design and implementation
    of a soil moisture wireless sensor network. The paper describes the use of a shortest
    path tree data collection protocol, which is a novel approach to data collection
    in wireless sensor networks. The paper also describes the use of a cluster-based
    architecture, which is a novel approach to network design for soil moisture monitoring
    applications.


    The paper is credible and reliable, as it is published in a reputable journal
    and the authors are experts in the field of wireless sensor networks. The paper''s
    findings are supported by experimental results, which demonstrates the feasibility
    of the proposed approach.'
  authors:
  - Jobish John
  - Vinay S. Palaparthy
  - Shahbaz Sarik
  - Maryam Shojaei Baghini
  - Gaurav S. Kasbekar
  citation_count: 17
  full_citation: Design and implementation of a soil moisture wireless sensor network
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2015 Twenty First National Co... Design
    and implementation of a soil moisture wireless sensor network Publisher: IEEE
    Cite This PDF Jobish John; Vinay S Palaparthy; Shahbaz Sarik; Maryam Shojaei Baghini;
    Gaurav S Kasbekar All Authors 14 Cites in Papers 947 Full Text Views Abstract
    Document Sections I Introduction II Network Architecture III Implemented Network
    with Node Architecture IV Power Measurements V Network Lifetime Calculation Show
    Full Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract:
    This paper presents the design of a shortest path tree based data collection wireless
    sensor network to sense soil moisture, soil temperature and relative humidity.
    Each node in the network follows a synchronized, periodic sleep - wake up schedule
    in order to maximize the lifetime of the network. The paper also demonstrates
    the implementation of a cluster based sensor network consisting of 10 nodes grouped
    as 3 clusters which collects and sends sensed data to a base station (here laptop)
    through a sink node. Data processing and presentation on the laptop is achieved
    using custom designed graphical user interface (GUI) in MATLAB. Nodes are kept
    approximately 8m apart covering an area of 400 m 2 . The implemented sensor network
    features using in house developed, low cost dual probe heat pulse (DPHP) soil
    moisture sensor, soil temperature sensor and energy efficient wireless transmission
    using clustering architecture for agricultural application. Field testing for
    20% moisture level is demonstrated while feasibility of measuring the moisture
    levels from 0% to 40% is established from lab experiments. Published in: 2015
    Twenty First National Conference on Communications (NCC) Date of Conference: 27
    February 2015 - 01 March 2015 Date Added to IEEE Xplore: 16 April 2015 Electronic
    ISBN:978-1-4799-6619-6 DOI: 10.1109/NCC.2015.7084901 Publisher: IEEE Conference
    Location: Mumbai, India SECTION I Introduction Wireless sensor network (WSN) is
    one of the emerging technologies which finds application in variety of fields
    such as environmental and health monitoring, battle field surveillance, and industry
    process control [1]. Sensor networks consist of a large number of sensor nodes,
    which are normally deployed in an ad-hoc manner and they coordinate among themselves
    to perform a sensing task. The design of a WSN focuses mainly on extending the
    lifetime of the system since nodes work on battery while energy constraints are
    secondary criteria to the traditional wireless networks like cellular networks
    [2]. The architecture of WSN should be chosen in such a way that the network will
    be efficient in terms of energy consumption and should yield maximum lifetime
    for the network [3]. Soil moisture, soil temperature and relative humidity are
    major parameters which play a crucial role in the field of precision agriculture.
    Monitoring of these parameters is essential to enhance the crop productivity through
    irrigation management and by applying fertilizers in proper time intervals. High
    soil temperature destroys the crops and low temperature prevents the roots from
    absorbing water from the field. Similarly, it is important to measure the soil
    moisture at regular intervals because low moisture adversely affects the crops.
    Relative humidity (RH) is another parameter which indirectly affects photosynthesis
    and the plant growth. High RH reduces carbon dioxide uptake in the plants [4].
    Many researchers have reported sensor network implementations for agricultural
    applications. [5] compares the performance of random and grid topologies of sensor
    network for precision agriculture through simulations in OPNET [6]. They measure
    the performance in terms of parameters like delay and throughput. However practical
    implementations and results are not discussed. [7] discusses about an irrigation
    management system in which authors have implemented a star network using Waspmote
    nodes by Libelium. [8] also presents a star WSN deployment system for irrigation
    using ZigBee technology. Star architecture is not a suitable choice for sensor
    networks when scalability is considered. In this paper we propose a methodology
    for tree based data collection which can improve the overall lifetime of the network.
    In addition, We have implemented a cluster based architecture which is easily
    scalable [9]. System implementation of the presented network in this paper is
    cost effective since it uses in house developed sensors and energy efficient due
    to low transmission power. Clustering architecture makes the presented network
    scalable to different sizes. We also analyze the current consumed by the transmitter
    during data transmission. The field deployment results are discussed in further
    sections. SECTION II Network Architecture Our network consists of n nodes, each
    consisting of either soil moisture, soil temperature or humidity sensor which
    are connected to a TelosB wireless sensor mote. Each node periodically senses
    the soil moisture or relative humidity or soil temperature, and the data collected
    from each node need to be transported to a sink node. Here we propose a network
    architecture which can be used to achieve this goal. To increase the lifetime
    of the network, the sensing motes follow a periodic sleep and wake up schedule.
    The various operations occurring in the network are shown in Fig. 1. The nodes
    are in energy saving sleep mode for most of the time in comparison with other
    stages (for example, one sleep period=26 minutes, one wakeup period=4 minutes
    and the total time between consecutive “data collection tree formation” phases=4
    days). During the wake up period, each node senses either soil moisture or soil
    temperature or relative humidity depending upon the sensor attached to it and
    transfers the data to the sink node along a shortest path tree (SPT) to minimize
    the energy consumption as explained in section II-B. The sensor nodes will be
    in sleep state for most of the time. When a node becomes active (wake up) to initiate
    the transmission of a message, the destination node should also come into active
    state from sleep mode. To coordinate this, nodes need to be periodically synchronized
    as explained in section II-C. Over a period of time the nodes nearer to the sink
    node will have more battery drainage since it has to relay a lot of data coming
    from the nodes which are at a lower level in the tree. If proper precautions are
    not taken, the nodes nearer to the sink node will die at an earlier stage than
    the nodes in the bottom levels. To make the energy consumption of all the nodes
    uniform, the SPT has to be recomputed considering the fact that the nodes with
    more energy will be selected as the parent node with more number of children.
    Section II-B explains the construction of SPT. Fig. 1. Sequence of operations
    occurring in the network Show All In sensor networks which are deployed for environmental
    monitoring applications like soil moisture monitoring, convergecast is the most
    common operation. That is, data from all the individual sensor nodes are collected
    at a sink node with the help of a tree based routing architecture [10]. The convergecast
    can be of two types, aggregated covergecast and raw-data covergecast. In aggregated
    convergecast, at each hop, data aggregation techniques (for example, average,
    maximum, minimum) are used while in raw-data covergecast all the sensor readings
    are relayed to the sink node as they are. Aggregated convergecast is used to sense
    parameters which have high spatial correlation. Our soil moisture sensor network
    is not a dense deployment of nodes since it focuses on covering a large area with
    a small number of nodes so that our network will be a cost-effective solution
    to monitor the soil moisture. Hence we are assuming all of the sensor readings
    as equally important and are required to be transmitted to the sink node. Hence
    the data collection in our network can be considered as raw-data covergecast.
    Data collection in a sensor network mainly consists of two steps, tree construction
    and scheduling of the nodes. Currently we concentrate on various techniques to
    build an energy efficient data collection tree so that the lifetime of the network
    can be extended. The basic operations in the tree construction phase are proposed
    below. A Neighbour Discovery Since the placement of nodes in the field is considered
    as random, none of the nodes have any information about any other nodes in the
    network. Hence as a part of building the wireless sensor network, each node needs
    to discover its neighbours. In this phase, each node broadcasts a neighbour discovery
    message (beacon) and tries to find out its 1-hop neighbours. The message will
    be transmitted periodically with the maximum transmission power and the nodes
    receiving the broadcast message update its neighbour list with the source id of
    the received message. To minimize collisions, the periodic message transmission
    at each node is initiated after a random delay. At the end of this phase each
    node will have an updated neighbour list. Neighbour discovery is performed periodically
    as a part of data collection tree formation as shown in Fig. 1, in order to consider
    the changes in the neighbours of a particular node which can happen either due
    to the addition of a new node into the network or due to the removal of a particular
    node because of various reasons like wireless communication failure, complete
    drainage of battery etc. B Edge Weight Assignment and Tree Construction This phase
    assumes that each node has the knowledge of its 1-hop neighbours. The aim of this
    phase is to assign an edge weight to all the communication links which exists
    between any pair of nodes in the network. The edge weight is obtained as a function
    of node''s current battery level and the transmission power required to deliver
    a packet to the corresponding neighbour. As shown in Fig. 2, nodes B, C, D are
    neighbours of node A in the increasing order of distance from node A. To find
    e ab , A transmits a packet to B with maximum transmission power and B finds the
    received signal strength indicator (RSSI) which is a measure of strength of the
    received radio signal of the packet at B. Note that RSSI is a function of the
    distance between A and B, shadow and multipath fading, and typically decreases
    as the distance between A and B increases. The above procedure is repeated several
    times and the average RSSI at B is computed. Node A calculates e ab as a function
    of the average RSSI and the present battery levels of nodes A and B. In the same
    fashion node A finds the edge weights to all of its neighbours.1 Fig. 2. Node
    A and its neighbours with the respective edgeweights. From node A, the distance
    to node D > the distance to node C > the distance to node B and hence e ad > e
    ac > e ab Show All At this stage, each node has the details about its neighbouring
    nodes and corresponding egdeweights which needs to be transported to the sink
    node to build the data collection tree. This is done through simple flooding [11]:
    each node in the network broadcasts its neighbour-list and corresponding edge
    weights, each recipient of a broadcast packet re-broadcasts it and so on, until
    the sink node receives the packet. At the end of this flooding process, the sink
    node has complete information about the topology and edge weights in the entire
    network. Once the complete information about the network is available with the
    sink node, it finds the data collection tree using Dijkstra''s algorithm [12].
    Dijkstras algorithm is used to find the shortest path from every node in the network
    to the sink node. The union of all the shortest paths results in a shortest path
    tree rooted at the sink node. If the edge weight equals the energy needed for
    unit packet transfer, it is shown in [13] that, for raw-data covergecast, in which
    the entire sensed data needs to be sent to the sink node without fusion at intermediate
    nodes, routing the packets through the shortest path tree minimizes the total
    energy across all nodes, needed to deliver the packets to the sink node. In our
    algorithm, since the edgeweight is also dependent on the residual energy of nodes,
    the rate of energy consumption at different nodes is more uniform. C Time Synchronization
    The sensor nodes, which are in sleep state for most of the time periodically wakes
    up, senses the parameter and transmits the data to its parent node in the data
    collection tree. To have a coordinated sleep and wake up schedule between the
    transmitting and the receiving node, time synchronization between the nodes along
    the edges of the data collection tree is essential. Since the time accuracy to
    within fractions of seconds is generally acceptable in sensor networks, we can
    use any lightweight (in terms of energy) protocol. Lightweight tree-based synchronization
    (LTS) [14] algorithm is an example. LTS algorithm implements multihop time synchronization
    as an extension of pair-wise synchronization along the edges of the data collection
    tree which is a spanning tree. Pairwise synchronization requires an exchange of
    three message transfers and multihop synchronization of n nodes require n−1 pair-wise
    synchronizations. Time synchronization is performed periodically, after every
    tree construction phase as shown in Fig. 1. This periodic time sychronization
    compensates the error due to clock drifts which occured during the last cycle.
    Once the data collection tree is built and synchronized, each child node sends
    the data to its parent node. After collecting data from all the children, the
    parent node forwards the collected data after appending its own data to its parent
    node. Thus the sink node collects the complete sensed data from all the nodes
    in the network. SECTION III Implemented Network with Node Architecture In house
    developed soil temperature sensor (T-type thermo-couple) is inserted in soil to
    measure the soil temperature. Soil moisture measurement is performed using DPHP
    technique [15]. The DPHP sensor consists of two probes viz. heater probe and temperature
    sensor probe. A DC pulse of fixed voltage is applied to the heater probe of DPHP
    and temperature sensor probe (T-type thermocouple) is used to measure the rise
    in the soil temperature. This rise in temperature decreases with increase in soil
    moisture content [15]. A look up table was generated for DPHP sensor which shows
    different rise in temperature for different moisture values. This look up table
    is fed in MATLAB which map the rise in temperature value to its corresponding
    moisture. Humidity is measured using TelosB''s on-board digital sensor, Sensirion
    SHT11 [16]. Fig. 3. Architecture of the implemented sensor network Show All IIT
    Bombay nursery premises is used to perform the in-situ experiments. We have deployed
    a sensor network consisting of 10 TelosB motes (n=10) as shown in Fig. 3, to sense
    soil moisture, soil temperature and humidity. The numbers in Fig. 3 represent
    the node address. Node 1 acts as the sink node which collects periodic data from
    all the other nodes. The nodes are grouped as clusters, indicated by the dotted
    circles. Each cluster has 2 leaf nodes which will be active once in every thirty
    minutes. When not active, the nodes are in an energy saving sleep state. During
    the active period, the leaf nodes transmit the sensed parameters to the respective
    intermediate nodes. The intermediate node appends its own data with the information
    collected from its children and forwards to the sink node. Sink node is connected
    to a base station (laptop), which processes the collected information using MATLAB.
    The processing part will be explained in section VI. The internal structure of
    a node is shown in Fig. 4. Each node in a cluster is equipped with either DPHP
    or soil temperature or humidity sensors. Fig. 4. Internal structure of a single
    node Show All Crossbow''s TelosB mote is an open source platform, extensively
    used by the research community for low power sensor network applications [16].
    We have used TinyOS as the operating system (OS) which is an open-source and energy
    efficient OS developed by University of California, Berkeley [17]. TelosB''s on-board
    digital sensor, Sensirion SHT11 is used as the humidity sensor in the default
    12-bit resolution mode [18]. The relative humidity is measured using the humidity
    interface provided by the TinyOS top level component SensirionSht11C of TelosB
    platform [19]. The digital data (S O RH ) read by the humidity interface can be
    mapped to relative humidity using (1) [18]. R H linear = c 1 + c 2 ∗S O RH + c
    3 ∗S O 2 RH   (%RH) (1) View Source where c 1 =−2.0468, c 2 =0.0367, c 3 =−1.5955×
    10 −6 Both soil moisture and soil temperature sensor use AD8494 which is a precision
    instrumentation amplifier with thermocouple cold junction compensators on an integrated
    circuit and are used to amplify the output of thermocouple [20]. The relationship
    between temperature and output voltage of thermocouple is given by (2) [20]. T=
    V out1 − V ref 5 mV/ ∘ C (2) View Source V ref =0V since V ref is connected to
    ground. To power up the system, we have used Lithium-ion batteries of 4000 mAh
    rated at 3.7 Volts. The system is designed such that all the modules (wireless,
    instrumentation, sensors) work at 3.3 Volts. TPS 63001 buck boost regulator from
    Texas instruments has been used to obtain the regulated output [21]. SECTION IV
    Power Measurements In TelosB, the micro-controller MSP430 controls CC2420 (RF
    transceiver) through serial peripheral interface (SPI). The output power of CC2420
    is programmable so that it can be applied to various energy saving schemes. For
    example, the transmission power of a given transmitter can be set to the smallest
    value such that its signal is received by the intended receivers. We have used
    TinyOS as the platform to perform our experiments [22]. Fig. 5. Set up to measure
    current consumption of telosb mote Show All We have measured the maximum communication
    range between a pair of nodes (one acts as transmitter and another as receiver)
    by varying transmission power levels of the transmitter in our experimental field.
    Table I shows the transmission distance with the corresponding power level2. The
    table also compares the current consumption in each power level with the corresponding
    values given in the CC2420 datasheet. The transmission power is varied using the
    ‘setPower’ command provided by the CC2420 packet interface in TinyOS 2.1.2 [23].
    Current consumption is measured by monitoring the voltage across 2.4 Ω resistor
    using an oscilloscope (Tektronix, DPO4104B) as shown in Fig. 5. Fig. 6. Current
    through 2.4 Ω resistor at different transmission power levels Show All Table I.
    Communication range vs transmission power Fig. 6 shows the current consumption
    by TelosB with transmission power levels as 0 dBm and −25 dBm when a single packet
    of 15 bytes is transferred. It is clear from the figure that most of the power
    is consumed as an overhead due to the default medium access control (MAC) protocol
    implementation of TinyOS. The initial spike in Fig. 6 is due to the start up of
    the transceiver. Keeping the RF transceiver in the off state leads to energy savings
    and thus improves the lifetime of the network. SECTION V Network Lifetime Calculation
    Table II shows the current consumption details of various elements of the sensor
    node. From the table it is clear that the DPHP sensor consumes huge current in
    comparison with the other elements and hence the lifetime of the network is decided
    by the nodes which have DPHP sensor connected to it. Since DPHP sensors are connected
    to the leaf nodes in the implemented cluster based network, we will consider its
    lifetime as the lifetime of the network. A leaf node periodically transmits the
    sensed data to its parent node during the active period and then goes into sleep
    state. The energy usage of a leaf node, E can be considered as a combination of
    energy consumption for sensing the data ( E sense ) , energy used for wireless
    data transmission ( E txn ) , and energy consumption during the sleep stage (
    E sleep ) . E= E sense + E txn + E sleep (3) View Source Each sensor mote is in
    active state for a period of 4 minutes in every 30 minutes interval. During the
    active period, a node sends its sampled data to its parent node once in every
    one second (the DPHP heater probe remains in the ON stage only for a period of
    2 minutes). The rate of sensing, r=(4×60)/(30×60)=4/30 and the rate of packet
    transmission, g=(60×4)/(30×60)=4/30 . All the energies are considered in millijoules
    per second and the entire system works on 3.3 Volts. Therefore, E sense E txn
    =3.3×[100×0.5+10]×r =3.3×22×0.020×g View Source Sleep time, t sleep can be considered
    as the time remaining in each second which is not a part of any other operations.
    Hence, t sleep E sleep =3.3×0.060× t sleep =1−sensing time−transmission time View
    Source Table II. Current consumption of sensor mote elements Therefore from (4),
    a node with a battery capacity of 4000 mAh has a lifetime of approximately 20
    days which can be considered as the network lifetime. Lifetime= 3.3V×4000mAh×60×60
    E (4) View Source SECTION VI Data Processing A laptop has been used as the base
    station of the network, which receives the data from the sink node through its
    serial port. The data processing algorithm contains two scripts which run in parallel
    in MATLAB as shown in Fig. 7. The first one monitors the serial port continuously
    for any data from the sink node and stores all the incoming data into a single
    file. The second script reads this file and extracts all the node addresses and
    their corresponding data. The segregated data is written into separate files with
    file name same as its node address. We have developed a Graphical User Interface
    (GUI) as shown in Fig. 8. It provides six different buttons along with the current
    state. After running the first script, the GUI is launched which provides various
    options. Start will start the second script i.e segregation of data into respective
    files while Stop will stop the segregation of data. Reset will create a backup
    of current data and then clear all the data from the files. Load LUT helps in
    loading the look up table (LUT) file into MATLAB for the given soil type. Active
    Nodes will launch another GUI with buttons corresponding to each of the segregated
    data file with name same as node''s address. Clicking on a particular node will
    plot the data received from that node. Plot backup helps in plotting the backup
    data files. Fig. 7. Data processing algorithms Show All Fig. 8. Soil moisture
    gui Show All SECTION VII Field Measurements and Data Acquisition The sensor network
    described in section III (see Fig. 3) is placed in an area of 400 m2 as shown
    in Fig. 9. All the nodes in a cluster are kept at 8m distance apart. Fig. 10a
    shows the sensor node equipped with DPHP and Fig. 10b shows the node equipped
    with temperature sensor. Sensors are activated once in every 30 minutes interval.
    Data obtained from a single cluster is plotted in MATLAB GUI as shown in Fig.
    11. DPHP soil moisture sensor data is mapped with LUT to measure the soil moisture.
    Analog voltage obtained from soil temperature sensor is converted to temperature
    using (2). Similarly data from humidity sensor is converted into relative humidity
    (%RH) using (1). Soil moisture sensor is tested in lab for the same soil type.
    It is able to measure the moisture in the range of 0–40%. Field measurements from
    all the 3 clusters are shown in Table III. Fig. 9. Field deployment Show All Fig.
    10. Placement of nodes Show All SECTION VIII Conclusion In this paper we have
    proposed a shortest path tree based data collection network architecture and demonstrated
    implementation of a cluster based, low cost and low power wireless sensor network
    to monitor soil moisture, soil temperature and relative humidity in an area of
    400 m2 using 10 TelosB motes. Cluster based architecture eliminates long distance
    transmission resulting in energy savings while in house development of sensors
    makes the system low cost. Fig. 11. Data presentation on the GUI of base station
    Show All Table III. Extracted parameters from measurements ACKNOWLEDGMENT The
    authors would like to acknowledge DeitY, MCIT, Government of India for the financial
    support through Centre of Excellence in Nanoelectronics, IIT-Bombay. We would
    like to thank Prof. G. K. Ananthasuresh and Nikhil Jorapur from IISc Bangalore
    for fabricating DPHP sensors, Prof. D. N. Singh and Sushalekshmi S. U. from IIT
    Bombay for supporting us in soil characterization, Prof. S. N. Merchant and Prof.
    Bhaskaran Raman from IIT Bombay for providing the TelosB motes. Authors Figures
    References Citations Keywords Metrics Footnotes More Like This Inkjet printing
    on paper for the realization of humidity and temperature sensors 2011 16th International
    Solid-State Sensors, Actuators and Microsystems Conference Published: 2011 Variable
    Waist-Diameter Mach–Zehnder Tapered-Fiber Interferometer as Humidity and Temperature
    Sensor IEEE Sensors Journal Published: 2016 Show More IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: Jobish John; Vinay S Palaparthy; Shahbaz Sarik; Maryam Shojaei
    Baghini; Gaurav S Kasbekar
  journal: ''
  limitations: The paper does not provide information on the cost of the proposed
    approach, which is an important factor for farmers who may be considering implementing
    the system.
  pdf_link: null
  publication_year: 2015
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: Design and implementation of a soil moisture wireless sensor network
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: null
- DOI: https://doi.org/10.1007/s12243-016-0533-8
  analysis: 'The paper “Information-centric sensor networks for cognitive IoT: an
    overview” by Fadi M. Al-Turjman is relevant to the point of “Types of data most
    applicable to irrigation management and their typical sources” within the context
    of the systematic review on automated systems for real-time irrigation management,
    particularly in the section and subsection of “3.1 Irrigation Management Data”
    and “Data Collection to Cloud: Automation and Real-Time Processing:”. The paper
    presents a study on information-centric sensor networks (ICSNs) as a hybrid solution
    platform for integrating data collection, transmission, and learning for cognitive
    IoT applications, such as smart outdoor monitoring and smart cities. The paper
    discusses the challenges and limitations of implementing real-time, automated
    irrigation systems, including data quality, scalability, reliability, and security.
    It proposes solutions based on learning algorithms and cognitive elements to improve
    network lifetime, resource management, and the quality of information delivered
    to end-users. Overall, the paper contributes to the understanding of using learning
    techniques to enhance the performance and efficiency of ICSNs for IoT applications,
    including irrigation management systems where real-time data collection and analysis
    are critical.'
  authors:
  - Fadi Al‐Turjman
  citation_count: 83
  full_citation: 'Al-Turjman, F.M. Information-centric sensor networks for cognitive
    IoT: an overview. Ann. Telecommun. 72, 3–18 (2017). https://doi.org/10.1007/s12243-016-0533-8'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Annals of Telecommunications Article
    Information-centric sensor networks for cognitive IoT: an overview Published:
    04 July 2016 Volume 72, pages 3–18, (2017) Cite this article Download PDF Access
    provided by University of Nebraska-Lincoln Annals of Telecommunications Aims and
    scope Submit manuscript Fadi M. Al-Turjman  1904 Accesses 79 Citations Explore
    all metrics Abstract Information-centric sensor networks (ICSNs) are a paradigm
    of wireless sensor networks that focus on delivering information from the network
    based on user requirements, rather than serving as a point-to-point data communication
    network. Introducing learning in such networks can help to dynamically identify
    good data delivery paths by correlating past actions and results, make intelligent
    adaptations to improve the network lifetime, and also improve the quality of information
    delivered by the network to the user. However, there are several factors and limitations
    that must be considered while choosing a learning strategy. In this paper, we
    identify some of these factors and explore various learning techniques that have
    been applied to sensor networks and other applications with similar requirements
    in the past. We provide our recommendation on the learning strategy based on how
    well it complements the needs of ICSNs, while keeping in mind the cost, computation,
    and operational overhead limitations. Similar content being viewed by others Sensor
    Searching Techniques in Internet of Things: A Survey, Taxonomy, and Challenges
    Chapter © 2021 A Self-learning Clustering Protocol in Wireless Sensor Networks
    for IoT Applications Chapter © 2022 ML Algorithms for Smart Sensor Networks Chapter
    © 2022 1 Introduction Wireless sensor networks (WSNs) have evolved from simple
    sensing and tracking applications to being an integral and essential part of the
    Internet of things paradigm. This means that sensor networks have to deal with
    large amounts of data, support requests from multiple users, and support information
    extraction from the network rather than serving as point-to-point communication
    networks that transmit data from a source to sink. To enable WSNs to easily integrate
    with, and adapt to the IoT environment [1], we propose the use of learning, as
    an element of cognition in the network. Cognition refers to the ability to be
    aware of the environment, be able to learn from the past actions, and use it to
    make future decisions that benefit the network [2]. Learning is one of the elements
    of cognition that can achieve different goals in different systems. In robotic
    chess, learning can be used to plan moves based on opponents’ actions; in aircraft
    autopilot systems, learning can be used to control the plane’s navigation; and
    in cognitive networks, learning can be used to improve decision making that improves
    network management and its overall performance. Whatever be the system’s goal,
    the performance of the learning technique depends on three main tasks: (1) observations
    made from current activities in the environment, (2) feedback from past actions,
    and (3) how this information is used to achieve the system’s goals. An information-centric
    sensor network (ICSN) has specialized nodes called cognitive nodes that are capable
    of performing all these tasks by implementing major cognition elements. These
    major elements are the learning, reasoning, and knowledge representation. Figure
    1 represents these three major elements for cognitive nodes in ICSN, and associate
    them with their respective functions. These elements of cognition, when incorporated
    in the network nodes of a WSN, help in providing better understanding and catering
    for the end user requirements. Our expectation from the cognitive elements would
    be to cater to the following objectives. On the short term, to observe current
    network behavior and respond adaptively to changing network dynamics. And on the
    long term, to learn from the previous behavior and plan better for the future
    so as to make predictions and decisions that positively impact the network survivability
    and application QoI during its lifetime. Using these elements, a conceptual architecture
    of the cognitive node can be illustrated as detailed in Fig. 2. Fig. 1 Cognitive
    node and its elements Full size image Fig. 2 Cognitive node conceptual architecture
    Full size image This cognitive sensor network framework is mainly targeted towards
    application such as smart cities and smart outdoor monitoring in IoT era. In these
    applications, the goal for the learning algorithm is to dynamically adapt routing
    decisions to improve the quality of information (QoI) delivered to the user [3]
    and improves the network lifetime. This can be achieved by using a learning algorithm
    that can correlate the impact of past decisions on the current network behavior,
    based on end user’s requirements. But these are challenging applications for the
    learning algorithm due to the large scale of the network, changing network topology
    due to node deaths and varying channel conditions, and heterogeneous traffic flows
    generated as a result of changing user requests in the IoT application domain.
    For the learning algorithm to be successful in such a dynamic environment, it
    must occur incrementally and span over multiple episodes [4]. Only then will it
    be able to adapt to the irreversible changes in the environment and contribute
    towards delivering QoI-aware data to the end user over the network’s lifetime.
    In this paper, we explore the different classes of learning techniques and identify
    what works best for large-scale information-centric sensor networks in IoT applications.
    The remainder of the paper has been organized as follows: In section II, we look
    at some WSN design issues in IoT applications, and summarize the design changes
    required for integration of WSNs with IoT. In section III, we explore artificial
    intelligence and learning used by WSNs, to better analyze their suitability for
    ICSN applications. Subsequently, we delve into the details of ICSNs as a hybrid
    solution platform for integration of WSNs in IoT using a learning paradigm in
    section IV. We also identify a suitable learning strategy in this section, before
    discussing some open issues and concluding the paper in section V. 2 WSN design
    issues in IoT applications In this section, we take a brief look at the various
    design issues that need to be addressed to seamlessly integrate WSNs in IoT applications.
    We categorize the design issues into two parts: (i) expectations of the users
    from the network, which includes feature requirements of the sensor network’s
    interface with the access network (future internet) and (ii) adaptations and changes
    required within the sensor network to cater to user requests while managing network
    resources. Each of these design issues will be explored in the sub-sequent sections,
    and we will see why these issues need to be handled differently from existing
    WSN applications. 2.1 User expectations from the network Traditional WSNs were
    designed for specific applications such as target tracking, temperature monitoring
    in a building, and movement of goods in a supply chain, to name a few. Users accessed
    the network only when they needed a particular type of sensed value, such as temperature,
    pressure, or humidity for instance. However, in the IoT era, sensor nodes have
    become heterogeneous and are capable of supporting multiple types of sensors.
    This way the sensor network can be expected to support multiple applications and
    provide users with a variety of data as supported by the type of sensor nodes
    used. Thus, WSN applications should evolve from supporting application-specific
    deployments to providing an application platform that users can access to gather
    a variety of data [5]. 2.1.1 Multi-user application platform support The basic
    idea behind developing an application platform is to provide a flexible, generic
    infrastructure that can lead to easy adoption of WSNs into a variety of IoT applications.
    For example, a sensor network deployed in a city should be capable of providing
    data for the following applications: (1) air pollution monitoring; (2) daily weather
    monitoring (temperature, humidity, UV index); and (3) park and garden irrigation
    management. Such an application platform and its associated services would also
    support the conceptual ubiquitous sensor network (USN) used in large-scale sensor
    network deployments [6, 7]. This would invite more number of users to simultaneously
    access the network, which makes the WSN design even more complex. The underlying
    sensor network will have to support heterogeneous traffic flows generated as a
    result of simultaneous access from multiple users, which is a very challenging
    task for the resource-constrained sensor network. 2.1.2 User requirement—aware
    request classification In a large-scale deployment of sensor networks that allows
    multiple users to access it, different users may have different requirements on
    the desired quality of experience (QoE) [8], and the network may have its own
    limitations on the quality of service (QoS) it is able to support [9–11] . While
    the user requirements may evolve over time, the sensor network gradually decays
    in terms of its energy capacity, and it also involves dynamic changes in the link
    conditions and node availability. In addition, the user’s expectations from the
    attributes associated with delivered data also vary based on the application and
    type of request. Hence, there is a need to monitor data attributes from the user
    requirements perspective directly, a skip level from the application interface,
    as shown in Fig. 3. Latency, reliability, accuracy, relevance, and robustness
    are some of the attributes that can collectively provide an estimate of the quality
    perceived by the user based on the information received at the user-end from the
    network. This is referred to as the quality of information (QoI) metric, and it
    may provide information about the success of the network in satisfying the evolving
    user requirements, while simultaneously saving valuable network resources such
    as bandwidth and energy [12]. Thus, it becomes necessary for the underlying sensor
    network to be aware of user requirements and be able to classify user requests
    to deliver data in compliance with the desired QoI. While there has been research
    in the area of QoI assurance based on changes in the phenomena observed in the
    network [13], there has not been much work on the user interface side for request
    classification based on changing user requirements. Fig. 3 QoI-aware data delivery
    in WSNs for IoT applications Full size image 2.1.3 Internet access interface between
    user and WSN ZigBee-based address-centric sensor networks facilitate the integration
    of WSNs with the Internet, as both the networks are address-centric and point-to-point.
    However, recent advances in the future internet research suggest that an information-centric
    approach to data delivery is favored over the address-centric approach. This is
    because researchers believe that it will become increasingly difficult to handle
    the growing IP address space that serves billions of users in the near future.
    Information-centric network (ICN) is one of the promising architectures for the
    future internet paradigm [14]. It proposes an information-centric approach to
    data access where users look for named data objects instead of looking up IP addresses
    to find data they are interested in. The architecture is set up to support data
    storage at strategic locations in the network, typically the edge of the network,
    so that requests do not have to be propagated deep into the network to access
    the required information. If the user had to request for data through such an
    information-centric interface, then the network interface would also have to be
    modified to ease the flow of information. Hence, for IoT applications to be able
    to adapt to changes of the future internet paradigm, changes would be required
    in the way requests are made at the user access interface and also at the sensor
    network interface. 2.2 Adaptations at the network level In this section, we move
    from the issues at the user interface, to the design issues at the network level
    to identify the adaptations required to enable WSNs for IoT applications. 2.2.1
    Energy considerations and resource management Large-scale platform-based sensor
    network deployments that are accessed by multiple users tend to benefit more from
    a data-centric approach than an address-centric one. For instance, a user may
    request for information such as: temperature readings from all regions in the
    network where value is greater than 25 °C. In such a scenario, there is no specific
    address that the user is requesting data from. Instead, the query is information-centric
    and requires information from the entire network. This could be very energy intensive
    if appropriate query dissemination and data delivery techniques are not identified.
    In their work on energy conservation schemes in WSNs, Anastasi et al. have extensively
    explored data-driven techniques, broadly classified into data reduction and energy
    efficient data acquisition approaches [15]. Several researchers have also established
    the energy conserving nature of data-centric sensor networks [16–18]. However,
    previous research has only considered networks of a few hundreds of sensor nodes.
    In IoT-based applications, there may be thousands of sensor nodes to gather information
    from, which adds to the complexity of the energy conservation problem. Although
    a data-centric approach can provide valuable energy savings in the network, further
    research is required to device techniques to manage information flow in such a
    large-scale, energy-constrained network. 2.2.2 Query dissemination and data delivery
    WSNs can be broadly classified into address-centric and data-centric networks.
    This classification is based on how query dissemination, data gathering, and routing
    happen in the network. Address-centric sensor networks are built on top of the
    more recent ZigBee protocol [19] that provides a service-oriented framework for
    implementing WSN applications. Data is routed using the tree-based hierarchical
    topology consisting of router and coordinator nodes, while sensor nodes are the
    sources of information. Routers off-load the sensor nodes by carrying forward
    their data to the sink, thus bringing considerable energy savings to the battery-operated
    sensor nodes. However, WSNs are essentially information extraction networks. They
    were originally developed as data-centric sensor networks (DCSNs) that did not
    make use of node addresses. Instead, their focus was on the attributes of the
    requested information, which was gathered from wherever it was available in the
    network, and delivered to the sink. Handling query dissemination and delivering
    the gathered data is a very challenging task in large-scale sensor networks. This
    is because of (1) the ad hoc nature of the wireless channel, (2) dynamic topology
    changes in the network due to node deaths and their changing associations, and
    (3) due to the nature of node distribution in the network. Hence, choosing the
    right approach for handling data flows in a very critical design decision, this
    must be made keeping in mind the interface access network (the future internet
    paradigm). In addition, IoT applications have multiple users requesting for different
    types of data with different service requirements. For example, while request
    for periodic data may relax the service requirements on latency, on-demand data
    needs to be provided quickly, and should be relevant. On the other hand, emergency
    reporting must be done accurately, reliably, and quickly, with minimal delay.
    Thus, the way the network is setup itself will have to be modified, to minimize
    energy consumption during each of the phases of query dissemination, data gathering,
    and data delivery. Sensor node scheduling also becomes an important issue to be
    addressed, so that data is available when user requests for it. Moreover, planned
    scheduling of sensor node wake-up and sleep cycles will add to the energy savings
    and prolong the network lifetime. In addition, planning the deployment of router
    nodes to increase the multi-hop communication range is another aspect that needs
    to be considered during network design and deployment. Since the complexity of
    the tasks to be handled by WSNs in the IoT paradigm is quite high and multi-dimensional,
    it seems appropriate that the design changes consider the addition of advanced
    nodes [20] that can maintain connectivity in the network and carry data over long
    distances in these applications. 2.3 Summary of WSN design change requirements
    Thus far in this section, we have seen the various design change requirements
    in existing WSNs to make them adapt to IoT applications. We summarize these requirements
    as follows: Multi-user application platform support Classification of user requests
    to deliver QoI-aware data Modification of the communication to make it compatible
    with the future internet paradigm—ICN Incorporate specialized nodes that can observe/learn
    from the interactions/feedback in the network and manage sensor node scheduling
    to prolong the network lifetime Plan the deployment of router and specialized
    nodes to maintain network connectivity and enable multi-hop data transmission
    over the large-scale network Consider energy efficient query dissemination and
    data delivery, and dynamic traffic management due to changing network conditions
    and user requests Figure 4 summarizes all the design change requirements in the
    form of a conceptual design for the future IoT paradigm that supports multiple
    users and integrates ICN-based internet access, and the large-scale data-centric
    sensor network. We call this an information-centric sensor network (ICSN) [21–24].
    Comparing DCSN protocols with the information-centric networking (ICN) approaches
    [25, 26] for future internet, we can see that DCSNs already implement two major
    features of the ICNs. Firstly, the naming schemes, or named data objects for referencing
    requested data instead of using node addresses, and secondly, storage of collected
    data in nodes for ease of access. We take these two features as a strong indication
    of the need to shift to data-centric sensing schemes for WSNs, but with ZigBee
    and the information-centric approach to adapt to the advanced applications in
    the IoT era [27]. Although the data-centric approach will help to better manage
    the network at each of the interfaces: user, access network, and sensor network,
    the authors do think that a simple integration of different technologies will
    not be adequate to manage the complexity of the tasks at the sensor network level.
    To improve adaptations beyond the limitations of traditional cross layer design,
    we look to the tools of artificial intelligence to support the ICSN paradigm.
    Fig. 4 Conceptual design of an ICSN for IoT applications Full size image 3 Artificial
    intelligence and learning in WSN Various artificial intelligence (AI) techniques
    have been applied to WSNs to improve their performance and achieve specific goals.
    We look at AI techniques as a means of introducing learning in the WSN. Learning
    is an important element in the observe, analyze, decide, and act (OADA) cognition
    loop [28, 29], used to implement the idea of cognitive wireless networks [30,
    31]. In this section, we broadly classify AI techniques as computational intelligence
    (CI) techniques, reinforcement learning (RL) techniques, cognitive sensor networks
    and multi-agent systems (MAS), and context aware computing as shown in Fig. 5.
    Fig. 5 Learning techniques used in WSNs Full size image 3.1 Computational intelligence
    CI techniques are a set of nature-inspired computation methodologies that help
    in solving complex problems that are usually difficult to fully formulate using
    simple mathematical models. Examples of CI techniques include genetic algorithms,
    neural networks, fuzzy logic, simulated annealing, artificial immune systems,
    swarm intelligence, and evolutionary computation. In a learning environment, CI
    techniques are useful when the learning agent cannot accurately sense the state
    of its environment. In WSNs, CI techniques have been applied to problems such
    as node deployment planning, task scheduling, data aggregation, energy-aware routing,
    and QoS management. Kulkarni et al. have provided an extensive survey of CI techniques
    applied to WSNs [32]. They elaborate on various CI techniques and associate each
    with typical problem domains they can solve in WSNs. From their observations,
    swarm intelligence applied to solving the routing and clustering problem has drawn
    the most research attention in recent times. However, a major drawback of this
    methodology is that it can be computationally intense and may require some form
    of model-based offline learning to deliver to the requirements of the application
    scenario. Techniques such as ant colony optimization can cause an undesirable
    increase in communication overhead in WSNs [33] too. Apart from these drawbacks,
    none of the CI algorithms have been applied to solving problems of data representation,
    aggregation, and delivery in a distributed, decentralized setup, under dynamic
    communication constraints, as is the case in IoT applications. Next, we evaluate
    reinforcement learning strategies used in WSNs. We separate them from other CI
    techniques, because they are the most widely applied learning techniques in WSNs
    and do not categorically fall under nature-inspired learning. 3.2 Machine learning
    Machine learning can be classified into supervised, unsupervised, and reinforcement
    learning. Supervised learning would be more compute intensive and requires a training
    sequence. Additionally, accuracy of the learning algorithm would then be defined
    by this training sequence. In the unsupervised learning approach, the learning
    is from the environment being observed and no training sequence is required. Reinforcement
    learning (RL) is a reward-based technique that emphasizes on learning while interacting
    with the environment, without relying on explicit supervision or complete model
    of the environment. It is a method of automating goal-directed learning and decision
    making. Since it is advantageous to be aware of, and learn the changes in the
    environment in WSN-based applications, RL would be an appropriate choice as the
    learning strategy. In WSNs, RL has been successfully applied in networking tasks
    such as adaptive routing, identifying low cost and energy-balanced data delivery
    paths [34, 35], and in information processing tasks involving data aggregation
    and inference [36]. In the sub-sequent sections, we explore the different types
    of RL methods as reward-based strategy [37]. 3.2.1 Model-based reinforcement learning
    A learning agent (LA) in model-based RL collects experiences and builds a model
    from that. The actions can be chosen randomly or heuristically and observe the
    impact on a model and the reward (where s is the current state, a is the actions,
    and s’ is the next state). This means, by taking action a, how often would the
    LA end up in the state s’ if it started from state s and estimating a probability
    by counting the number of times triple occurs over the sample space. With this
    information, the LA builds an estimate of the model and the reward by estimating
    probabilities based on the number of trials (or episodes). Once an estimate of
    the model and rewards are ready, the LA can plan its actions. A good plan can
    be found from policy iterations or value iterations. But for model-based RL, the
    hardest part is knowing the right policy to start out with, so we can build a
    good model. 3.2.2 Model-free reinforcement learning In model-free reinforcement
    learning, the agent is free to learn from the environment by exploring it completely
    on its own. Agent learns from positive reinforcement it gets for moving towards
    a goal and negative reinforcement for moving away from the goal. Q-learning is
    a form of model-free RL in which the learning agent converges to an optimal policy
    even if it were acting sub-optimally. This is called off-policy learning. This
    is the most extensively used form of RL, as it is easy to implement and a relatively
    low-cost solution. However, Q-learning has its limitations too. The agent has
    to explore enough and has to eventually make the learning rate small, but not
    decrease it too quickly, so that it has a large enough state space that covers
    all possible actions and policies. In the context of the ICSNs, we are not interested
    in finding the optimal policy. Rather, we are interested in any sub-optimal solution
    that does not take much time to converge and can act faster. It does not even
    matter how the action is selected, and a heuristic choice could work well too.
    This way, an even more simplified version of RL can be applied to ICSNs. We will
    discuss this in more detail in section IV. 3.2.3 Support vector machines Support
    vector machines (SVMs) are a class of ML algorithms that were originally formulated
    for binary classification. They can be applied to complex, highly non-linear problems
    in a consistent and structured manner and have been successfully applied to intrusion
    detection and security problems in WSNs [38]. This technique has not been applied
    to any other design problem in WSNs, but has proved very effective in small-scale
    sensor networks of about 50 sensor nodes randomly deployed in a 100-m × 100-m
    area. This class of ML algorithms has great potential to be applied to security
    in IoT-based applications, especially if the interface becomes information centric,
    with gateway nodes lying within the sensor network itself. As sensor network becomes
    more vulnerable to attack in the ICSN setting, SVM techniques can be further explored
    to secure large-scale networks in IoT applications. 3.3 Cognitive framework and
    multi-agent systems Cognitive networks are built around the idea of having sensor
    networks evolve around user requirements. It is about taking a step towards developing
    intelligent networks that do not limit themselves to point-to-point communication
    within the network. Instead, they enable the network to perceive user requirements
    and deliver data using distributed intelligence in the network. To implement distributed
    intelligence, multi-agent systems (MAS) are typically used. The agents in these
    MAS are called cognitive agents. They may interact to achieve information fusion
    and retrieval and may also be able to predict data for future use. Typical applications
    include medical monitoring, intelligent transport, and smart environment monitoring
    [39]. Such a distributed approach to introducing intelligent behavior in the network
    will be very beneficial in WSNs deployed for large-scale IoT applications. Some
    examples of successful software implementations of cognitive agents in sensor
    networks include AUTOMAN [40] and MONSOON [41]. 3.4 Context aware computing In
    large-scale sensor networks, a huge amount of data is generated. In order to derive
    useful information from raw data, context of the data plays an important part.
    Context awareness is even more important in the IoT era, as it enables the network
    to deliver relevant, user-requested data. While doing so, network resources are
    also conserved by extracting only meaningful information that is relevant to the
    requests, from the network. There are various aspects to context aware computing.
    They are the following: acquiring the context, context modeling, context reasoning,
    and context distribution [42]. Since we are more interested in the learning aspect
    as applicable to sensor networks, we delve a little deeper into the context reasoning
    aspect. Both CI- and RL-based techniques can be used to implement context learning,
    in addition to ontology-based and probabilistic logic models. The information
    obtained from these learning models can be exploited to infer information from
    stored data. Context awareness is very important and valuable in IoT applications,
    as it can add value to the large amount of data available from their applications.
    All the learning techniques discussed in this section have been summarized in
    Table 1. We identify the limitations of existing techniques and provide the details
    of the solution platform based on ICSNs for IoT applications in the next section.
    Table 1 Learning using AI algorithms in WSNs Full size table 4 A hybrid solution
    platform: learning in ICSN In this section, we will identify what the learning
    algorithm should actually learn, in order to support the information-centric nature
    of ICSNs. Table 2 presents three broad classes of solutions RL problems and classifies
    their features based on their relevance to learning in ICSNs. Table 2 Classification
    of solutions to RL problems Full size table 4.1 What should the ICSN learn? To
    identify what the ICSN should learn, let us identify what information is already
    known to the learning agent nodes. First, from our work in [22] and [43], we know
    that there is the upper bound on the maximum communication range for all the network
    nodes—sensor nodes, relay nodes, and the nodes that implement learning as a part
    of cognition, the cognitive nodes. We will be referring to the learning agents
    as cognitive nodes (CN) from this point forward. So, the CNs need to be aware
    of the network topology changes only within their own communication range. The
    target area’s coverage is taken care of at the time of deployment of nodes in
    the network. Thus, learning about the topology changes in its local neighborhood
    will help the CNs adapt their transmit power and choose a data delivery path that
    best manages the nodes energy consumption. Prolonging the CNs lifetime will in
    turn contribute towards increasing the network’s longevity. Second, cognitive
    nodes store information in their knowledge base regarding the QoI performance
    of paths used in previous data delivery rounds. Routing tables are built and updated
    based on the information in the knowledge base. Unlike traditional routing tables
    that store static, end-to-end routing paths from source to destination nodes (usually
    the sink node), routing tables in ICSNs are not designed to be static. In fact,
    they are not even end-to-end paths, but are paths that show the network’s current
    adaptation to the changes in topology and user requests. They store information
    about the most recent path used to deliver data from the CNs to the sink or other
    CNs or relay nodes. This means that the contents of the routing table at each
    cognitive node have to be updated on a regular basis to ensure they store the
    latest and best QoI paths. Thus, the important learning goal for the cognitive
    node from an application QoI perspective is to learn the data delivery paths towards
    the sink that provide the best QoI values for each of the different types of user
    requests. There is no one best path that is always used to route data. Instead,
    the routing choice depends on the current network topology, nature of the user
    request (periodic, intermittent-user specific, or emergency data), and volume
    of traffic generated in response to the request. If the routing table is viewed
    as cache storage, then as effective cache replacement strategy is required to
    replace old and redundant routing information with more recent and relevant information.
    These learning goals can be achieved in the following ways as represented in Fig.
    6: (i) learning from feedback on current actions, (ii) learning by exploring the
    changes in the network topology, and (iii) learning (drawing inference) from past
    actions by using the information stored in a knowledge base. Once the learning
    converges and knowledge base updates are complete, the routing tables can be updated
    using information from the knowledge base. Thus, we identify two main goals of
    learning: Firstly, to improve network longevity and maximize the duration for
    which the ICSN is able to provide relevant data to the end user; and secondly,
    to increase the network’s ability to provide QoI-aware data to the end user during
    its lifetime. For ICSNs, we define the network lifetime as the time after which
    none of the one-hop cognitive nodes to the sink are able to deliver the user’s
    requests for information to the network, nor are they able to deliver the gathered
    data from the network back to the user, is called end-of-life of the ICSN. Fig.
    6 Learning in sensor networks Full size image 4.2 Choosing the learning strategy
    The goal of learning in ICSNs is to improve the QoI delivered to the end user
    and maximize the duration over which this can be maintained. In other words, learning
    should contribute towards maximizing the network lifetime while ensuring QoI-aware
    data delivery during this period. Based on these requirements, we identify the
    following factors that influence the choice of learning strategy in ICSNs: Learning
    should occur incrementally over time as network conditions change. It should support
    episodic learning [44] to acquire information from new events and update the knowledge
    base. This will let the system make decisions and act based on the observed changes.
    Learning should be distributed and occur locally when implemented in large-scale
    ICSNs. However, the goal of learning should be common across all the cognitive
    nodes. The learning algorithm must be light-weight and of low complexity to support
    episodic learning. Moreover, it must not cause too much data/control overhead
    in the network or negatively interfere with other nodes’ functions. The learning
    algorithm should preferably be rewards based, as supervised learning would become
    very compute intensive for the ICSNs Finally, the learning algorithm must be able
    to converge quickly enough to be support the network’s learning goals in a timely
    manner. It should not cost the network too much in terms of its resources (energy
    and time) either. Based on these recommendations, we explore heuristically accelerated
    reinforcement learning techniques for use with ICSNs in the next section. 4.3
    Heuristically accelerated reinforcement learning Since both model-based and model-free
    RL have their limitations, we will look towards modified forms of RL solutions.
    We look at the possibility of using heuristics (rules of thumb) to choose a sub-optimal
    action instead of trying to converge at an optimal policy. The advantage of combining
    heuristics with RL is that RL is eventually going to converge to an optimal possible
    policy, but it takes time. Heuristic only attempts to make the decision choices
    quickly. Therefore, it will not deter the RL process, but will only enhance it
    to arrive at some sub-optimal solution faster, but it will not be incorrect as
    observed by Atkeson and Santamaria [45]. In this section, we look at the use of
    heuristic functions to accelerate RL algorithms. These heuristic evaluation functions
    called valuation functions are computed by stochastic sampling and dynamic programming
    updates [46]. The model-free method is suitable for problems that do not involve
    large state spaces. In contrast, the domain-independent, model-based heuristic
    methods can be used for solving problems with a large state space and hundreds
    of actions. The fast and frugal heuristics proposed by Gigerenzer [47, 48] are
    not only generic but are also low polynomial time and applicable to all problems
    that fit a given model. Another aspect to consider is that learning happens while
    the system is running. This makes it important to reduce the exploration space
    of the learning agent. In the CICSN framework, we can use the information stored
    in the knowledge base as a case base to choose an action that provides a close
    solution to the RL agent’s problem. But the choice of the case that matches the
    given decision problem must be chosen in a way that helps the RL algorithm to
    converge quickly [49, 50]. This way we can limit the exploration space by making
    use of the knowledge base, and use heuristics to choosen a sub-optimal action
    that will help the algorithm converge faster. Heuristically accelerated RL (HARL)
    and case-based HARL have been recently explored by Bianchi et al. in the context
    of robotic soccer [51, 52]. We extend this idea of accelerating RL by using heuristics
    and an available case base to the ICSN framework. In our application, the case
    base is replaced by a knowledge base that is built upon the foundation of representing
    knowledge in attribute-value pairs. The “Representativeness Heuristic”: According
    to this heuristic, the more similar something is to a prototype, the more likely
    it is to belong to that prototype’s category [53]. This heuristic is based on
    the fact that we tend to judge how likely something is to be true is based on
    how representative it is of a particular category. Thus, we conclude this section
    with the suggestion that heuristically accelerated RL techniques that make use
    of the information stored in the knowledge base of the cognitive nodes will potentially
    serve as low complexity solution to the learning problem in ICSNs, and might be
    viable in terms of the computational overhead too. 4.4 Learning in the ICSN framework
    In the previous sub-section, we identified a learning strategy for ICSNs based
    on the network requirements and from the analysis of different learning strategies.
    Now we will identify how the ICSN must be set up so that the learning strategy
    can be implemented in this framework. We assume a deterministic deployment of
    relay and cognitive nodes, and number them for ease of representation. We start
    with a broad classification of the type of request that an ICSN should be able
    to serve. We divide the requests into one of three types: type I: periodic, type
    II: on-demand, and type III: emergency request. Each of these requests will be
    associated with different QoI values on the delivered data, as desired by the
    user. We identify latency (L), reliability (R), and throughput (T) as the three
    attributes, whose combined value will decide the QoI associated with the delivered
    data. Energy efficiency is another important parameter that affects the network’s
    performance and impacts the network lifetime, and we will considered it while
    making decisions in the network, especially when related with choosing a data
    delivery path. We will not use absolute values of these attributes in deciding
    the QoI value. Instead, we will associate priorities with each of these attributes
    for every request type, and let these priorities decide the importance of the
    absolute value of the attributes. Thus, each request type is classified according
    to the priorities associated with QoI attributes of L, R, and T, and the importance
    of considering energy efficiency in making a decision choice in the network, as
    shown in Table 3. Table 3 Priority of QoI attributes for different request types
    Full size table The QoI attributes are monitored from feedback in the network.
    When a data packet is transmitted from a CN to its one-hop neighbors, the QoI
    attribute values are piggy-backed along with the acknowledgement it receives from
    these nodes. These values will be stored in a knowledge base (KB) and used in
    deciding the most appropriate next hop for sub-sequent requests arriving at that
    CN. This way, decisions about data delivery paths are dynamic and always based
    on both the user requirements and the network conditions at any point. The advantage
    of making these decisions at CNs is that it helps in decentralized decision making.
    Moreover, only local, one-hop neighborhood information needs to be monitored and
    stored. This means that the size of the KB to be maintained remains reasonable
    and can be easy to update and maintain. Table 3, shows the association of QoI
    attribute priorities with each request type. The numbers in the table indicate
    the priority associated with the attribute. Number 1 indicates top priority and
    number 3 indicates least priority. The “x” in Table 3 indicates a “don’t care”
    condition. This means that there are no strict requirements on the value of the
    QoI attribute marked with an “x,” and its value does not impact the decision making.
    Next, we look at the structure of the KB, where all the information gathered from
    observations in the network, and learnt from feedback is stored. The KB thus stores
    all the relevant and useful information that the learning and cognitive decision
    making algorithms can use. It also serves as a case base which the learning heuristic
    can use to map a given problem with and decides on the best course of action for
    the future. Table 4 represents the KB at a cognitive node and has a sample of
    the information stored in it as attribute-value pairs. Attribute-value pairs are
    one of the techniques used for knowledge representation. Information is represented
    in a way that the user can derive useful information from it, by drawing inferences
    about how the values are connected [54]. The inferences drawn could be based on
    rules, or heuristics based on learning from observations and feedback in the network.
    In Table 4, a recursive representation of attribute-value pairs has been used.
    That is each entry in the value field can be another attribute-value pair. What
    makes this representation effective beyond the attribute-value association is
    that information can be derived by reading the values along the column too, except
    for the field containing sensor data. For example, in the Attribute’ field “Node
    type” is associated with three values: “Sink,” “RN,” or “CN.” RN represents relay
    nodes that the CN is connected with, and CN represents other cognitive nodes that
    the given CN is connected with in the ICSN. The “Distance” field corresponds with
    the values in the “Node type” and represents the separation between the CN housing
    the KB and the Sink, RN, and CN, respectively. Tracking the remaining battery
    level at each of the one-hop nodes helps the CN take energy-aware decisions in
    choosing the data delivery path. The next major attribute we have used is “QoI.”
    It has information about the “Request Type” (as described by Table 3) that the
    node has served, next hop “Node” that can best serve each request, and the values
    recorded for each of the “QoI attributes” of latency (L), reliability (R), and
    throughput (T) during the previous communication. These values could be different
    between any pairs of nodes and are thus represented by α*, β*, and γ*. It should
    be noted however, that this table is only a representation of how information
    can be stored in the KB. In actual implementation, details of the semantics will
    have to be worked out to make the representations shorter and effective. In the
    proposed ICSN framework, we even segregate the routing table from the KB to keep
    routing decisions simple. Routing tables at the CNs store information only about
    reaching the one-hop neighbors, not the end-to-end paths, as shown in Table 5.
    These entries are derived from the KB of Table 4. In Table 5, the “Possible next
    hops” field suggests the best next hop node for cognitive node 2 (CN2) to transmit
    data, based on the “Request type.” It shows that CN2 is directly connected to
    the Sink, connected to four RNs that are linked with the Sink, and is also connected
    to two other CNs. CN-CN paths are not preferred and are represented by the hyphens
    in the “Request type” column. This is due to the high cost in terms of energy
    consumption, and the possibility of running into loops without reaching the Sink.
    These tables can be updated every time the learning algorithm identifies better
    paths for each request type, based on the changing network dynamics as reflected
    from the KB. In addition, a reasoning algorithm to help the learning agent in
    making cognitive decisions must be identified. These are still open research issues
    that need to be addressed in the future. Table 4 Sample of a knowledge base and
    its contents at the cognitive node Full size table Table 5 Routing table at the
    CN Full size table 5 Use-case and performance evaluation In this section, we provide
    some performance evaluation of the different learning techniques in improving
    large-scale ICSNs for Cloud- and/or IoT-based applications. As described in the
    context of cognitive psychology [49], the learning heuristics will be used as
    strategies that ignore a part of the information to make decisions faster, and
    sometimes more accurately compared to more complex methods [25]. We utilize an
    online version of the A* heuristic search algorithm, which learns from the information
    available in the knowledge base of the cognitive nodes. We call this learning
    data delivery A* (LDDA*) algorithm. The heuristics will be used to make approximate
    decision choices, as opposed to optimal decision choices. We compare this with
    a cumulative-heuristic accelerated learning (CHAL) technique that accumulates
    the heuristic values at each state (relay and cognitive nodes) and makes use of
    as much information as possible from observations made in the network before making
    the data delivery path choices. It also uses negative heuristic weights to punish
    poor next hop node choices, such as revisiting a node along a data delivery path.
    This way, LDDA* and CHAL will differ in the heuristic weights accumulated by the
    learning process. Since learning is typically used to improve the decisions made
    by reasoning engine in cognitive networks, we implement LDDA* and CHAL in a network
    that uses an analytic hierarchy process (AHP)-based reasoning technique at the
    cognitive nodes to make data delivery decisions. (The details of AHP-based data
    delivery (AHPDD) have been described in our previous work [21]). Performance of
    the heuristically accelerated learning techniques LDDA* and CHAL are compared
    against the non-learning AHPDD in terms of the QoI observed at the Sink where
    data is delivered at the end of each transmission round. The algorithms will also
    be compared in terms of the rate of successful data delivery and the energy consumed
    during the data delivery process at the end of network’s lifetime. The knowledge
    of the deterministic deployment of the RNs and CNs, and the knowledge accumulated
    in the knowledge base (KB) of the cognitive nodes, will be used to update the
    weight of the heuristics during network operation. We evaluate and compare the
    performance of the aforementioned algorithms using MATLAB simulations. In the
    following, a brief description of the simulation setup and targeted metrics/parameters
    in evaluating the performance of the algorithms. Simulations results and a detailed
    analysis of the results are also presented in this section. 5.1 Simulation setup
    The network is setup as described in Fig. 7, with randomly deployed sensor nodes
    and fixed deployment of relay and cognitive nodes. Simulation parameters are as
    described in Table 6. Energy deductions at the local cognitive nodes (LCNs) and
    relay nodes (RNs) during data transmission are as represented in Table 7, based
    on the transmit powers. The transmit power at RNs is fixed at 3 dBm, and it can
    be adapted at the LCNs to improve the probability of successful transmission as
    described in [21]. Data delivery paths from source LCNs in the network are initially
    established based on AHP analysis of paths along next hop-neighboring RNs. Heuristic
    learning is introduced in this simulation to increase the average success rate
    of data delivery to the sink, irrespective of the randomness with which the requests
    for different traffic types are generated in the network. Fig. 7 Use-case scenario
    setup for simulations Full size image Table 6 Simulation parameters Full size
    table Table 7 Transmit power consumption Full size table The following are the
    three performance evaluation metrics that will be used to compare the performance
    of the aforementioned three algorithms: 1. Network lifetime: number of transmission
    rounds till all one-hop nodes to GCN/Sink node are dead (including RNs and LCNs)
    2. Success rate (ρ): it is defined as the ratio of the number of successful transmissions
    s to the sink over the total number of transmission rounds T during the network’s
    lifetime. This is represented by Eq. (1) as follows: $$ \rho =\frac{s}{T}\ast
    100 $$ (1) 3. Failure rate (ϕ): it is the ratio of the number of failed transmissions
    f to the sink over the total number of transmission rounds T during the network’s
    lifetime. This is represented by Eq. (2) as follows: $$ \varnothing =\frac{f}{T}\ast
    100 $$ (2) 4. eQoI: effective QoI or eQoI is the heuristics estimate of the QoI
    associated with data delivered to the sink at the end of successful transmission
    round. In other words, a heuristic estimate of the value of the QoI at the last
    hop that delivered the information to the sink. 5.2 Simulation results and analysis
    Simulation results for the aforementioned three techniques are summarized in Table
    8. Table 8 Summary of simulation results Full size table As shown in the above
    table, results from the simulation using AHP analysis (AHPDD) suggests that during
    an average lifetime of 78 transmission rounds, the average success rate is 63
    %, and the average failure rate is 37 %. However, during the worst case, transmissions
    can fail for over 50 % of the requests, as suggested by the worst case failure
    rate. With the cumulative-heuristic accelerated learning (CHAL), it was found
    that the average success rate increased to 84 %, and the worst case failure rate
    was as low as 19 %. The best case success rate was 90 %, which was only 6 % off
    from the average success rate. This shows that the heuristics performed consistently
    well under various traffic loads and request arrival patterns. The performance
    of CHAL was matched very closely by the LDDA* heuristic search algorithm, which
    provided an 88 % data delivery success rate, but a slightly higher failure rate
    of 22 % in the worst case scenario when compared with CHAL. Since it is more desirable
    to have a higher success rate in smart IoT applications, we further compare the
    performance of LDDA* and CHAL techniques in terms of their effective QoI (eQoI)
    as observed at the Sink to identify the best heuristic of the two. Figure 8 shows
    the result of the comparison of the eQoI values for LDDA*, and CHAL, with AHPDD,
    which does not use any form of learning at the LCNs. In general, we observe that
    using some form of learning at the LCNs improves the eQoI of the data delivered
    to the Sink. Of the learning techniques, we observe that LDDA* performs the best
    in terms of consistently delivering data with higher eQoI at the sink, even towards
    the end of the network’s lifetime. Now, this eQoI is the hop-over-hop value of
    QoI associated with the data delivered to the sink with respect to latency, reliability,
    and throughput. Apart from the hop-over-hop latency, the cumulative delay in receiving
    a response from the network for a request is reflected by the number of hops taken
    along the path from source to sink. Thus, we can conclude that of the two proposed
    techniques, LDDA* is capable of delivering data to the sink with a higher average
    success rate, and better eQoI. Either of these techniques may be used for data
    delivery in the cognitive ICSN for IoT applications, based on the application
    and end user requirements (i.e., eQoI), rate of successful data delivery, and
    cumulative delay from source to sink. Fig. 8 eQoI as observed at the Sink over
    the network lifetime Full size image 6 Conclusion and open issues In this paper,
    we have approached WSNs as information-centric networks, which enable retrieving
    more information than just the data in attribute-value pairs from the network.
    We reviewed some routing protocols in DCSNs and presented our views on how learning
    could have been used to improve their performance. Then, we went on to see the
    various learning techniques available in the AI domain and found that RL methods
    are more suitable for use with sensor networks. This is because reinforcement
    learning involves learning while interacting with the environment which is important
    in WSN environments where network dynamics change due to changing channel conditions,
    node deaths, and changing traffic conditions, to name a few. We explored some
    more RL techniques, and analyzed what the ICSNs should learn, before arriving
    at a suitable technique for implementing learning in WSNs. Network lifetime and
    quality of information are the primary features that must be improved by the use
    of learning algorithms. This work presents a preliminary assessment of the potential
    advantages of introducing learning in WSNs. A detailed assessment of the best
    way to do so, and comparison with other techniques with respect to their impact
    on ICSN lifetime and QoI awareness will provide a more accurate evaluation of
    the benefits of introducing learning in sensor networks. Thus, we open up the
    ICSN paradigm as a research area with interesting possibilities. This study opens
    the door to develop application-/domain-specific ontologies for better knowledge
    representation at a higher level. The creation of such domain ontologies contributes
    towards the development of an enterprise architecture framework that can be applied
    to different application domains using the same underlying cognitive sensor network
    platform. More functions could be incorporated at the sink to integrate it with
    the next generation networks constituted of cognitive radio enabled nodes, working
    in cognitive network setup. The expansion of the sink node functions to a cognitive
    gateway node can be considered. The cognitive gateway node would then be able
    to take requests directly from different wireless users such as cell phone users,
    wireless access points and base stations. Furthermore, the idea of “cognitive
    elements” shall be used in the intermediate routers of the future internet to
    provide on-demand content to users quickly. References Al-Turjman F, Gunay M (2016)
    CAR approach for the internet of things (IoT). IEEE Can J Electr Comput Eng 39(1):11–18
    Article   Google Scholar   Friend D (2009) Cognitive networks: foundation to applications,
    Ph.D. Dissertation, Electrical and Comput. Eng., Virginia Polytechnic and State
    Univ., Blacksburg Bisdikian C, Kaplan L, Srivastava M (2013) On the quality of
    information in sensor networks, ACM Trans. Sensor Netw, Vol. 9, no. 4, Article
    48 Pearson DJ, Laird JE (2005) Incremental learning of procedural planning knowledge
    in challenging environments. Comput Intell 21:4 Lazarescu MT (2013) Design of
    a WSN platform for long-term environmental monitoring for IoT applications. IEEE
    J Emerg Sel Top Circuits Syst 3(1):45–54 Article   Google Scholar   (2008) ITU-T
    technology watch briefing report series, No.4, Ubiquitous Sensor Networks (2010)
    ITU-T. Series Y recommendations: requirements for support ubiquitous sensor network
    (USN) applications and services in NGN environment. Y.2221 Kalevi K (2008) Quality
    of experience in communications ecosystem. J Univ Comput Sci 14(5):615–624 Google
    Scholar   Hoes R, Basten T, Tham C, Corporaal H (2009) Quality-of-service trade-off
    analysis for wireless sensor networks. Perform Eval 66(3):191–208 Article   Google
    Scholar   Chen D, Varshney PK (2004) QoS support in wireless sensor networks:
    a survey. In International Conference on Wireless Networks, vol. 233, pp. 1-7
    Martínez J, Garcí A, Corredor I, López L, Hernández V, Dasilva A (2007) QoS in
    wireless sensor networks: survey and approach. In Proc. of the Euro American conference
    on Telematics and information systems, p. 20. ACM Bisdikian C, Kaplan LM, Srivastava
    MB (2013) On the quality and value of information in sensor networks. ACM Trans
    Sensors Netw 9(4):1–26 Article   Google Scholar   Tolstikov A, Tham CK, Biswas
    J (2006) Quality of information assurance using phenomena-aware resource management
    in sensor networks. In Networks, 2006. ICON''06. 14th IEEE Int. Conference on,
    vol. 1, pp. 1-7. IEEE Ahlgren B, Dannewitz C, Imbrenda C, Kutscher D, Ohlman B
    (2012) A survey of information-centric networking. IEEE Commun Mag 50(7):26–36
    Article   Google Scholar   Anastasi G, Conti M, Di Francesco M, Passarella A (2009)
    Energy conservation in wireless sensor networks: a survey. Ad Hoc Netw 7(3):537–568
    Article   Google Scholar   Intanagonwiwat C, Govindan R, Estrin D, Silva F (2003)
    Directed diffusion for wireless sensor networking. IEEE Trans Netw 11(1):2–16
    Article   Google Scholar   Heinzelman W, Kulik J, Balakrishnan H (1999) Adaptive
    protocols for information dissemination in wireless sensor networks, Proceedings
    of the 5th Annual ACM/IEEE International Conference on Mobile Computing and Networking
    (MobiCom_99), Seattle Yu Y, Estrin D, Govindan R (2001) Geographical and energy
    aware routing: a recursive data dissemination protocol for wireless sensor networks,
    UCLA Computer Science Dept. Technical Report, UCLA-CSD TR-01-0023 (2008) ZigBee
    Specifications. [Online]. Available: http://www.zigbee.org ZigBee Document 053474r17
    Al-Fagih A, Al-Turjman F, Hassanein H (2012) Ubiquitous Robust Data Delivery for
    Integrated RSNs in IoT, in IEEE Global Commun. Conf. (GLOBECOM’12), Anaheim, 3-7
    pp. 298-303 Singh G, Al-Turjman F (2016) A data delivery framework for cognitive
    information-centric sensor networks in smart outdoor monitoring. Elsevier Comput
    Commun 74:38–51 Article   Google Scholar   Singh GT, Al-Turjman FM (2014) Towards
    Prolonged Lifetime for Large-scale Information-Centric Sensor Networks, In Proc.
    of 27th Biennial Symposium on Communications, Kingston, ON, pp. 87-91 Singh GT,
    Al-Turjman (FM) Cognitive Routing for Information-Centric Sensor Networks in Smart
    Cities, IWCMC, 2014, pp. 1124-1129 Eriksson A, Ohlman B, Persson KA (2012) What
    are the services of an information-centric network, and who provides them?” IEEE
    AP2PS Al-Turjman F, Al-Fagih A, Hassanein H (2013) A Value-Based Cache Replacement
    Approach for Information-Centric Networks, In Proc. of the IEEE Local Computer
    Networks (LCN), Sydney, pp. 902-909 Al-Turjman F, Hassanein H (2013) Enhanced
    data delivery framework for dynamic Information-Centric Networks (ICNs), In Proc.
    of the IEEE Local Computer Networks (LCN), Sydney, pp. 831-838 Al-Fagih A, Al-Turjman
    F, Alsalih W, Hassanein H (2013) A priced public sensing framework for heterogeneous
    IoT architectures. IEEE Trans Emerg Top Comput 1(1):133–147 Article   Google Scholar   Haykin
    S (2005) Cognitive radio: brain-empowered wireless communications. IEEE J Sel
    Area Commun 23:201–220 Article   Google Scholar   Mitola J, Maguire GQ (1999)
    Cognitive radio: making software radios more personal. IEEE Pers Commun 6(4):13–18
    Article   Google Scholar   Thomas RW, Friend DH, DaSilva LA, MacKenzie AB (2006)
    Cognitive networks: adaptation and learning to achieve end-to-end performance
    objectives. IEEE Commun Mag 44(12):51–57 Article   Google Scholar   Friend DH,
    Thomas RW, MacKenzie AB, DaSilva LA (2007) Distributed learning and reasoning
    in cognitive networks: Methods and design decisions, in Cognitive Networks - Towards
    Self-Aware Networks (Q. H. Mahmoud, ed.), pp. 223-246, John Wiley & Sons Kulkarni
    RV, Forster A, Venayagamoorthy GK (2011) Computational intelligence in wireless
    sensor networks: a survey. Commun Surv Tutorials IEEE 13(1):68–96 Article   Google
    Scholar   Frster A (2007) Machine Learning Techniques Applied to Wireless Ad-Hoc
    Networks: Guide and Survey, in Proc. 3rd Intl. Conf. Intelligent Sensors, Sensor
    Networks and Information Processing (ISSNIP) Förster A, Murphy AL (2007) FROMS:
    Feedback routing for optimizing multiple sinks in WSN with reinforcement learning,
    in Proc. 3rd Int. Conf. Intelligent Sensors, Sensor Netw. Inf. Process Forster
    A, Murphy AL (2008) Balancing Energy Expenditure in WSNs through Reinforcement
    Learning: A Study, in Proc. of 1st Int. Wrkshp on Energy in Wireless Sensor Networks
    Di M, Joo E (2007) A survey of machine learning in wireless sensor networks, Proc.
    6th Int. Conf. Inf., Commun. Signal Process Sutton RS, Barto AG (1998) Reinforcement
    learning: an introduction. MIT Press, Cambridge Google Scholar   Kaplantzis S,
    Shilton A, Mani N, Sekercioglu YA (2007) Detecting Selective Forwarding Attacks
    in Wireless Sensor Networks using Support Vector Machines," 3rd International
    Conference on, vol., no., pp.335-340, 3-6 Biswas PK (2005) Architecting multi-agent
    systems with distributed sensor networks," Integration of Knowledge Intensive
    Multi-Agent Systems, 2005. International Conference on , pp.161-166 Shenai K,
    Mukhopadhyay S (2008) Cognitive sensor networks, in Proc. IEEE 26th Int. Conf.
    Microelectronics (MIEL), pp.315–320. Boonma P, Suzuki J (2008) Exploring self-star
    properties in cognitive sensor networking, in Proc. IEEE/SCS Int. Symp. Performance
    Evaluation Comput. Telecommun. Syst. (SPECTS), Edinburgh, pp. 36–43 Perera C,
    Zaslavsky A, Christen P, Georgakopoulos D (2013) Context aware computing for the
    internet of things: a survey. IEEE Commun Surv Tuts 99:1–41 Google Scholar   Singh
    G, Al-Turjman F (2016) Learning data delivery paths in QoI-aware information-centric
    sensor networks. IEEE Internet Things J 99:1–9 Google Scholar   Terry WS (2006)
    Learning and memory: basic principles, processes, and procedures. Pearson Education,
    Inc., Boston Google Scholar   Atkeson CG, Santamaria JC (1997) A comparison of
    direct and model-based reinforcement learning, International Conference on Robotics
    and Automation Bianchi RAC, Ribeiro CHC, Costa AHR (2007) Heuristic selection
    of actions in multiagent reinforcement learning. IJCAI''07, Hyderabad Google Scholar   Goldstein
    DG, Gigerenzer G (1996) Reasoning the fast and frugal Way: models of bounded rationality.
    Psychol Rev 103:650–666 Article   Google Scholar   Bianchi RAC, Ribeiro CHC, Costa
    AHR (2012) Heuristically Accelerated Reinforcement Learning: Theoretical and Experimental
    Results. In ECAI, pp. 169-174 Gigerenzer G, Gaissmaier W (2011) Heuristic decision
    making. Annu Rev Psychol 62:451–482 Article   Google Scholar   Gigerenzer G, Todd
    PM, The ABC Research Group (1999) Simple heuristics that make us smart. Oxford
    University Press, New York. ISBN 0-19-514381-7 Google Scholar   Bianchi RAC, Ros
    R, De Mantaras RL (2009) "Improving reinforcement learning by using case based
    heuristics." In Case-Based Reasoning Research and Development, pp. 75-89. Springer
    Berlin Heidelberg Geffner H (2010) Heuristics, Planning and Cognition, In R. Dechter,
    H. Geffner, and J. Halpern, editors, Heuristics, Probability and Causality. A
    Tribute to Judea Pearl. College Publications Tversky A, Kahneman D (1974) Judgment
    under uncertainty: heuristics and biases, new series. Science 185(4157):1124–1131
    Article   Google Scholar   Davis R, Shrobe H, Szolovits P (1993) What is a knowledge
    representation? AI Mag 14(1):17–33 Google Scholar   Download references Author
    information Authors and Affiliations Department of Computer Engineering, Middle
    East Technical University, Northern Cyprus Campus, 99738, Kalkanlı, Güzelyurt,
    Mersin 10, Turkey Fadi M. Al-Turjman Corresponding author Correspondence to Fadi
    M. Al-Turjman. Rights and permissions Reprints and permissions About this article
    Cite this article Al-Turjman, F.M. Information-centric sensor networks for cognitive
    IoT: an overview. Ann. Telecommun. 72, 3–18 (2017). https://doi.org/10.1007/s12243-016-0533-8
    Download citation Received 31 October 2015 Accepted 20 June 2016 Published 04
    July 2016 Issue Date February 2017 DOI https://doi.org/10.1007/s12243-016-0533-8
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Information-centric sensor networks Cognitive node QoI Reinforcement
    learning Use our pre-submission checklist Avoid common mistakes on your manuscript.
    Sections Figures References Abstract Introduction WSN design issues in IoT applications
    Artificial intelligence and learning in WSN A hybrid solution platform: learning
    in ICSN Use-case and performance evaluation Conclusion and open issues References
    Author information Rights and permissions About this article Advertisement Discover
    content Journals A-Z Books A-Z Publish with us Publish your research Open access
    publishing Products and services Our products Librarians Societies Partners and
    advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress
    Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.222
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature'
  inline_citation: null
  journal: Annals of Telecommunications
  limitations: The paper does not specifically address or provide detailed insights
    on the types of data most applicable to irrigation management or their typical
    sources. It focuses on the broader aspects of learning in ICSNs for IoT applications
    and does not delve into the specificities of data types in the context of irrigation
    management.
  pdf_link: null
  publication_year: 2016
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: 'Information-centric sensor networks for cognitive IoT: an overview'
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.compag.2016.09.016
  analysis: 'Fuzzy logic and multi-level clustering approach are utilized to solve
    coverage hole issue, and thereby improve the network lifetime. Authors also present
    a cost-effective protocol due to use of low-cost energy efficient clustered WSNs
    for precision agriculture. The most relevant verbatim quotes are as follows:


    "The proposed protocol is an energy-efficient routing protocol which is applicable
    for agriculture domain."


    "Also, in this subsection, to test the performance of proposed node deployment
    concept of Type-3 nodes in middle regions, we have analyzed it in two different
    cases."


    "Hence, the deployment of Type-3 nodes in middle regions is efficient and we achieve
    longer network lifetime because the BS is receiving information till 7878 rounds."'
  authors:
  - Sonam Maurya
  - V. K. Jain
  citation_count: 30
  full_citation: Sonam Maurya, Vinod Kumar Jain, Fuzzy based energy efficient sensor
    network protocol for precision agriculture, Computers and Electronics in Agriculture,
    Volume 130, 2016, Pages 20-37
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Design issues and literature
    review 3. Proposed protocol 4. Performance analysis 5. Conclusions and future
    work References Show full outline Cited by (34) Figures (13) Show 7 more figures
    Tables (8) Table Table Table 1 Table 2 Table 3 Table 4 Show all tables Computers
    and Electronics in Agriculture Volume 130, 15 November 2016, Pages 20-37 Original
    papers Fuzzy based energy efficient sensor network protocol for precision agriculture
    Author links open overlay panel Sonam Maurya, Vinod Kumar Jain Show more Share
    Cite https://doi.org/10.1016/j.compag.2016.09.016 Get rights and content Highlights
    • We propose a novel approach to control the irrigation in agricultural field.
    • It uses region-based clustering to provide efficient coverage over entire area.
    • Threshold sensitive hybrid routing is used for transmitting data to base station.
    • Sensed data is sent to base station only when information about field is required.
    • Fuzzy logic technique is used for selecting best CH node among other nodes.
    • It minimizes the overall energy consumption of nodes and improves network lifetime.
    Abstract Today’s, wireless sensor network have become a more emerging technology
    in precision agriculture. This paper proposes a novel approach based on sensor
    network technology to control the irrigation in agricultural field automatically.
    All sensor nodes deployed in the field, continuously sense soil temperature, soil
    moisture and air humidity of the agricultural field and transmit this information
    to base station only when the user defined periodic timer or sensed attributes
    values exceed desired threshold. In the proposed routing protocol, region-based
    static clustering approach is used to provide efficient coverage over entire agricultural
    area and threshold sensitive hybrid routing is used for transmitting sensed data
    to base station. The proposed protocol uses fuzzy logic technique to select the
    best cluster head among other sensor nodes in a particular round which minimizes
    the energy consumption of nodes in every data transmission period. The proposed
    energy-efficient protocol is compared with existing benchmark EEHC, DEEC, DDEEC
    and RBHR routing protocols. The analysis and experimental results show a significant
    decrement in data transmission rate due to user-defined transmission thresholds.
    The balanced use of fuzzy logic technique, static clustering and hybrid routing
    approach efficiently reduce energy consumption of sensor nodes in every data transmission
    round and prolongs the overall network lifetime by 173.16%, 149.22%, 99.49% and
    47.39% as compared to EEHC, DEEC, DDEEC and RBHR protocol respectively. Previous
    article in issue Next article in issue Keywords WSNFuzzy logicEnergy efficientPeriodicThreshold
    sensitiveHybrid routing 1. Introduction Over the recent years, wireless sensor
    network (WSN) technologies have a wide range of application domains such as military
    applications, precision agriculture, environmental monitoring, health-care applications,
    industry applications and time critical applications discussed in Zheng and Jamalipour
    (2009). For these applications, designing a reliable and energy-efficient communication
    protocol are the most important challenge. The energy consumption in transmitting
    data from source node to base station (BS) mainly affects the sensor network lifetime.
    A wireless sensor networks consists of hundred or thousands of battery-powered
    sensor nodes that are randomly deployed in a large geographical area. The deployed
    sensor nodes are able to collect large amounts of data/information and then communicate
    it to a central authority. Fig. 1 shows the architecture of WSN deployed for precision
    agriculture. The sensor nodes in the network communicate among themselves by using
    the RF (radio-frequency) links of ISM (Industrial, scientific, and medical) radio
    bands (such as 902–928 MHz and 2.4–2.5 GHz). Generally, a BS is also deployed
    in the network with the sensor nodes to make a connection between the WSN and
    outside world. Thus, the BS is equipped with both RF and GSM (Global System for
    Mobile communications) or GPRS (General Packet Radio Service). A remote user can
    monitor the field conditions, and control the actuator devices and sensor nodes.
    For example, a user can switch on/off a valve/pump when the water level applied
    to the field reaches to some predefined threshold value. Download : Download full-size
    image Fig. 1. Wireless sensor network deployed for precision agriculture. The
    WSNs in agriculture domain may bring out the important contribution to precision
    agriculture. In precision agriculture, various parameters like environment temperature,
    soil type, moisture, humidity, air pressure, etc. vary rapidly from one region
    to another region and these parameters affect the quantity, cost and quality of
    production. Therefore, we need to design some decision based automatic tools or
    techniques for applying the right amount of input (water, fertilizers, pesticides,
    etc.) at the right time and at a right location to improve the production quality
    of crops, discussed in Awasthi and Reddy (2013). In the modern automatic irrigation
    system, the farmers do not need to continuously monitor the agriculture field
    to acquire information about the field. This monitoring can be done automatically
    by collecting the real-time data of soil, weather and air quality in a more accurate
    manner by using sensors. A predictive analysis is required to make smarter decision
    so that the irrigation can take place automatically only when there will be intense
    requirement of water. For this purpose, periodic threshold sensitive region-based
    hybrid routing protocol is proposed in this paper. The proposed protocol is an
    energy-efficient protocol in which monitoring of the field can be done automatically
    in a more efficient way by using sensors and the user defined thresholds help
    to save energy and time of farmers from continuous monitoring of field to find
    out a particular area where irrigation is required. The main objective of this
    paper is to provide an energy-efficient routing protocol for automated irrigation
    system. Therefore, we propose a novel fuzzy-based energy-efficient routing protocol
    for precision agriculture in this paper. Some key features of the proposed routing
    protocol are highlighted as follows: • The proposed protocol uses a region-based
    static clustering approach, for providing efficient coverage over the large geographical
    area where the entire network field is divided into fixed regions in such a way
    that each region contains different types of heterogeneous sensor nodes. • The
    periodic threshold sensitive hybrid routing is used for transmitting data to BS
    when the information about the field is required. For this purpose, user defined
    data transmission thresholds (i.e. rigid threshold, mild threshold and periodic
    timer) are used and once the environmental parameters value crosses the threshold
    limit, sensor nodes send data packets to BS. Therefore, these thresholds help
    to reduce the number of transmission to BS. • In the network, heterogeneous types
    of sensor nodes are considered where some nodes have less energy as compared to
    other nodes, send their data directly to the BS while other high energy nodes,
    use fuzzy based cluster head technique for transmitting their data to BS. This
    helps to minimize the energy consumption of sensor nodes in every data transmission
    period and improves the network lifetime. The rest of the paper is organized as
    follows: design issues and literature review have been discussed in Section 2,
    and Section 3 introduces proposed protocol in detail, a comparative study of simulation
    based results are presented in Section 4 and finally we provide conclusion and
    future work related to our proposed protocol in Section 5. 2. Design issues and
    literature review The major challenges of WSNs are to develop low-cost energy-efficient
    routing protocols with simple operation and high reliability. In recent years,
    wireless technologies have a growing interest in precision agriculture. Rawat
    et al. (2014) provides an exhaustive survey on recent developments and major challenges
    to facilitate the deployment of sensor network technology in real world scenario.
    Ojha et al. (2015) studied the current state of art in WSNs and their applicability
    in farming and precision agriculture applications. The authors analyzed the problems
    of the existing precision agriculture applications with detailed case studies
    for global as well as for the Indian scenarios. Sudha et al. (2011) provided various
    different data transmission methods based on TDMA (Time Division Multiple Access)
    scheduling for an automatic irrigation system. Different data aggregation methods
    were used in order to increase energy efficiency of the network. Zhou et al. (2009)
    designed a star-based intelligent system using ZigBee technology for the irrigation
    purpose. The micro-controller used in that system was supposed to be powered by
    the external power supply and sensor nodes were mostly in sleep mode. Kalaivani
    et al. (2011) provided an outline of distinct ZigBee-based WSNs used for the precision
    agriculture. They have identified various issues regarding ZigBee in agriculture
    domain; i.e. how the factors such as base station antenna height, node spacing,
    and density of leaves affect the signal strength. Nikolidakis et al. (2015) proposed
    a scheme based on the collaboration of an integrated system for automated irrigation
    management with an advanced novel routing protocol for WSNs. Li and Shen, 2013a,
    Li and Shen, 2013b presented energy-efficient WSN system for black-pepper crop
    monitoring in tropical areas. To provide reliable communication among the nodes,
    author optimized the BS antenna height. In the developed protocol, symmetrical
    double chain topology was used to improve the sensor network lifetime. The main
    drawback of this approach was that sensor nodes sent their data continuously to
    BS which used to consume lots of energy in data transmission. Vellidis et al.
    (2008) developed smart sensor array for measuring soil and air temperature for
    irrigation in cotton field. The designed system was able to reliably monitor soil
    water status. The authors did not pay attention towards the development of energy-efficient
    protocol. Morais et al. (2008) designed a ZigBee-based multi-powered wireless
    power management subsystem where sensor nodes battery was recharged with energy
    harvested from the surrounding environment. So, most of the routing protocols
    developed for precision agriculture are mainly concerned with the high reliability,
    and they do not consider to save the energy of a sensor node. The most of the
    routing protocols developed for precision agriculture also do not provide an efficient
    solution for the farmers, which enables to take necessary action when irrigation
    needs to be started in the field. One of the most important issues in WSNs is
    to develop an energy-efficient communication protocol. There are so many energy-efficient
    cluster based routing protocols such as ‘LEACH’ developed by Heinzelman et al.
    (2000), ‘TEEN’ by Manjeshwar and Agrawal (2001), ‘APTEEN’ by Manjeshwar and Agrawal
    (2002), ‘HEED’ by Younis and Fahmy (2004), ‘JCOCR’ by Ge et al. (2008), ‘CDMMP’
    by Li et al. (2008), ‘ELCH’ by Lotf et al. (2008), ‘EECFP’ by Allirani and Suganthi
    (2009), ‘DHAC’ by Lung and Zhou (2010), routing protocol by Wei and Zhang (2010),
    routing protocol by Wei et al. (2010), ‘DCD’ by Doddapaneni et al. (2014) and
    ‘ECHERP’ by Nikolidakis et al. (2015) exist in the literature but most of these
    routing protocols are not suitable for precision agriculture because it does not
    provide efficient coverage over the entire agricultural area. In these protocols,
    sensor nodes are deployed randomly over the entire network area, and if more sensor
    nodes are deployed far away from BS then there would be some areas left unattended
    in the field which creates a coverage hole in the network discussed in Zhu et
    al., 2012, Ammari and Das, 2012. Since for efficient irrigation in the field,
    users/farmers require information from each and every part of the field. Therefore,
    the routing protocol must provide efficient coverage over the entire agricultural
    field. For this, every part of the field must be covered (or sensed) by some sensor
    nodes. Most of these routing protocols do not ensure the proper utilization of
    node’s energy because the selection of a cluster head (CH) node was random or
    based on residual energy only. These protocols were developed to basically perform
    in homogeneous environment. But in real scenario, different applications demand
    heterogeneous sensor nodes for data acquisition. Some protocols such as ‘SEP’
    developed by Smaragdakis et al. (2004), ‘DEEC’ by Qing et al. (2006), ‘E-SEP’
    by Aderohunmu and Deng (2009), ‘EEHC’ by Kumar et al. (2009b), ‘EECHE’ by Kumar
    et al. (2009a), ‘DDEEC’ by Elbhiri et al. (2010), ‘EDFCM’ by Zhou et al. (2010),
    ‘EEERP’ by Khalil and Attea (2011) and ‘ERP’ by Bara and Khalil (2012) provide
    an efficient way to increase the reliability and network lifetime by using some
    heterogeneous sensor nodes in the network. But most of the energy-efficient heterogeneous
    routing protocols also suffer from the same problem. It does not guarantee efficient
    coverage over the entire network area and only residual energy is the primary
    concern for the selection of CH nodes. To provide efficient coverage over entire
    area, a Region-Based Hybrid Routing (RBHR) protocols have been proposed in Maurya
    and Daniel, 2014a, Maurya and Daniel, 2014b, Maurya and Daniel, 2015 for gathering
    and processing information from the whole network. In RBHR protocol, the outer
    regions are not fairly divided into equal area. The protocols are given with two
    level of heterogeneity of sensor nodes that continuously transmit a huge amount
    of data packets to BS which consumes lots of energy in continuous data transmission.
    3. Proposed protocol The detailed explanation and working principle of proposed
    protocol are discussed in this section. Energy efficiency is the most important
    issue when designing communication protocol for WSN where some applications (such
    as military applications, health-care applications and traffic management) demand
    continuous information from the network field; while some applications (such as
    precision agriculture and industrial applications) demand information from the
    network only when it is necessary. Therefore in this paper, an energy-efficient
    periodic threshold sensitive region-based hybrid routing protocol is proposed
    for the efficient irrigation in the agricultural field. The proposed protocol
    is the most suitable energy-efficient routing protocol for precision agriculture.
    3.1. Assumptions Before going into the details of proposed protocol some assumptions
    about the network are made as: • Network architecture uses region-based static
    clustering throughout the network lifetime. • In the network, all the sensor nodes
    and BS are stationary after deployment. • BS is located at the center and has
    no energy constraints. • BS is within the range of each sensor node. • All the
    sensor nodes are aware of their own locations. The location of the nodes can be
    achieved by satellite based GPS system (Global Positioning System) or by using
    any energy-efficient localization techniques for WSNs proposed in the literature
    Niculescu, 2004, Gopakumar and Jacob, 2008, etc. • Three types of heterogeneous
    sensor nodes are considered for sensing and transmitting data to BS. 3.2. System
    composition In this paper, a well-suited network model is considered for precision
    agriculture. The proposed model uses threshold sensitive hybrid routing approach
    to measure three environment parameters essential for irrigation; first is the
    soil temperature, second one is the soil moisture content of the field and third
    is the air humidity which are important for the efficient irrigation. According
    to the temperature, moisture and humidity value of the agricultural field, an
    automatic decision can be taken as when irrigation needs to be started which enables
    the farmers to increase yields and the quality of crops by maintaining proper
    water in the field during critical plant growth stages. The basic scenario of
    the sensor network consists of a sensor node and base station. • Sensor node:
    Three types of heterogeneous sensor nodes as Type-1, Type-2 and Type-3 nodes are
    considered in the network for sensing and transmitting information to BS. In a
    heterogeneous sensor network, two or more different types of nodes with different
    functionality in terms of sensing, storage, computation, communication and energy
    capacity are used as discussed in Mhatre and Rosenberg, 2004, Kumar et al., 2009b.
    In the proposed protocol, each different types of sensor nodes in the network
    (i.e. Type-1, Type-2 and Type-3 nodes) consists of a soil temperature sensor,
    a soil moisture sensor and air humidity sensor. Fig. 2 shows the block diagram
    of a sensor node. The sensor nodes are deployed for sensing and transmitting the
    soil temperature, soil moisture and air humidity information of the agricultural
    field to a BS. Download : Download full-size image Fig. 2. Sensor node. • Base
    station: The base station (BS) consists of a transceiver, processor, and LCD display.
    BS collects the information about the temperature, moisture and humidity value
    of the field so that an end user can take a necessary action by analyzing these
    informations. Since the high energy sensor node costs higher, so in the network
    we have considered three types of sensor nodes in different-different numbers
    (as used in EEHC protocol). In the proposed protocol, the energy level, sensing
    range and transmitting range for each Type-1, Type-2 and Type-3 sensor nodes are
    different. We have considered that the higher energy sensor nodes have higher
    sensing and transmitting range. Generally, the radio transmission range is at
    least twice the sensing range as discussed in Zhang and Hou (2005). Type-1 node’s
    energy < Type-2 node’s energy < Type-3 node’s energy. Type-1 sensing range < Type-2
    sensing range < Type-3 sensing range. Type-1 node’s transmission range < Type-2
    node’s transmission range < Type-3 node’s transmission range. 3.3. Region-based
    node deployment The benefits of using region based static clustering are discussed
    in Maurya and Daniel (2014b). We have considered ( ) agricultural field where
    BS is located at the center position of the field. In the network, three types
    of heterogeneous sensor nodes are deployed for sensing and transmitting the information
    about soil temperature, soil moisture and humidity of the agricultural field.
    To overcome the coverage hole problem and for providing efficient coverage to
    the entire agricultural field, region-based static clustering is used where the
    total area is divided into nine fixed regions as shown in Fig. 3. Here we are
    considering the specific land area, so the division of all the regions can be
    easily specified through field measurement. The region division can be done on
    the basis of the available number of different types of sensor nodes in the network
    and their range of sensing. Since we have assumed that BS is located at the center
    then corner’s area should be fairly divided. So, the outermost and middle region’s
    area is equally divided among four-four regions (i.e. REG-1, REG-2, REG-3 and
    REG-4 regions have equal area for outermost region and REG-5, REG-6, REG-7 and
    REG-8 regions have equal area for middle region). Thus, available number of Type-2
    and Type-3 nodes are also equally divided. In case of non-uniform distribution
    of Type-2 and Type-3 nodes, overhead on a CH node of a particular outer/middle
    region which has more number of Type-2/Type-3 nodes may increase as compared to
    other outer/middle region’s CH node. The more a node is far from BS, the more
    it will consume energy in data transmission. It means the outermost region’s (REG-1,
    REG-2, REG-3 and REG-4) nodes that are very far from BS need more energy to transmit
    data to BS as compared to middle region’s (REG-5, REG-6, REG-7 and REG-8) nodes
    and innermost region’s (REG-9) nodes. Therefore, Type-3 nodes having more energy
    than Type-1 and Type-2 nodes should be placed in outermost regions, Type-2 nodes
    having energy less than Type-3 nodes but greater than Type-1 nodes should be placed
    in middle regions and finally the Type-1 nodes having very less energy should
    be deployed in innermost region. But, in the proposed network model, we have deployed
    Type-3 nodes in the middle regions, Type-2 nodes in the outermost regions and
    Type-1 nodes in the innermost region. The reason why we have deployed in this
    manner is clearly explained in next Section 3.4. The region-based node deployment
    algorithm for proposed protocol is given in Algorithm 1. Download : Download full-size
    image Fig. 3. Region-based node deployment. In Algorithm 1, n is the total number
    of sensor nodes (all types) in the entire network, is the total number of Type-2
    nodes in the network and is the total number of Type-3 nodes in the network. All
    these sensor nodes are deployed over the agricultural area. The Type-1, Type-2
    and Type-3 nodes are uniformly deployed in their respective regions. According
    to the deployment of the sensor nodes, a WSN may be classified into the deterministic
    or non-deterministic sensor network. In a deterministic network, the locations/positions
    of the sensor nodes are preplanned and static after the deployment. This type
    of sensor network may be used where the preplanned deployment of the nodes are
    possible. But, in most of the situations, such as in harsh or hostile environments
    the deployment of nodes in a preplanned manner is difficult. Therefore, the nodes
    are randomly deployed over the field without pre-planning and engineering. Obviously,
    the non-deterministic sensor networks are more flexible and scalable, but it requires
    higher control complexity discussed in Zheng and Jamalipour (2009). For very large
    agricultural field where preplanned deployment is difficult, the nodes can be
    randomly deployed over the field. Algorithm 1 Region-based node deployment algorithm
    Input: Output: , deployed sensor node in area Initialization: Field area =  ,
    BS position = ( )   ( ),  ,  ,   1:// For Type-2 node deployment in Region-1 (i.e.
    REG-1) 2: for i = 1 to do 3:   (i) = ‘Type-2’ 4:  Type-2 sensor nodes are uniformly
    deployed in REG-1 which has an area ( )   ( ) 5: end for 6:// For Type-2 node
    deployment in Region-2 (i.e. REG-2) 7: for i =  to do 8:   (i) = ‘Type-2’ 9:  Type-2
    sensor nodes are uniformly deployed in REG-2 which has an area ( )   ( ) 10: end
    for 11:// For Type-2 node deployment in Region-3 (i.e. REG-3) 12: for i =  to
    do 13:   (i) = ‘Type-2’ 14:  Type-2 sensor nodes are uniformly deployed in REG-3
    which has an area ( )   ( ) 15: end for 16:// For Type-2 node deployment in Region-4
    (i.e. REG-4) 17: for i =  to do 18:   (i) = ‘Type-2’ 19:  Type-2 sensor nodes
    are uniformly deployed in REG-4 which has an area ( )   ( ) 20: end for 21://
    For Type-3 node deployment in Region-5 (i.e. REG-5) 22: for i =  to do 23:   (i)
    = ‘Type-3’ 24:  Type-3 sensor nodes are uniformly deployed in REG-5 which has
    an area ( )   ( ) 25: end for 26:// For Type-3 node deployment in Region-6 (i.e.
    REG-6) 27: for i =  to do 28:   (i) = ‘Type-3’ 29:  Type-3 sensor nodes are uniformly
    deployed in REG-6 which has an area ( )   ( ) 30: end for 31:// For Type-3 node
    deployment in Region-7 (i.e. REG-7) 32: for i =  to do 33:   (i) = ‘Type-3’ 34:  Type-3
    sensor nodes are uniformly deployed in REG-7 which has an area ( )   ( ) 35: end
    for 36:// For Type-3 node deployment in Region-8 (i.e. REG-8) 37: for i =  to
    do 38:   (i) = ‘Type-3’ 39:  Type-3 sensor nodes are uniformly deployed in REG-8
    which has an area ( )   ( ) 40: end for 41:// For Type-1 node deployment in Region-9
    (i.e. REG-9)  42: for i =  to n do 43:   (i) = ‘Type-1’ 44:  Type-1 sensor nodes
    are uniformly deployed in REG-9 which has an area ( )   ( ) 45: end for 3.4. Periodic
    threshold-sensitive hybrid routing The proposed protocol is threshold sensitive
    protocol because nodes sense the environment parameters continuously but data
    transmission occurs only when the sensed value is in the range of interest. This
    helps the farmers/end users to take decision about irrigation. But, there is a
    limitation of threshold sensitivity, if the sensed value does not reach to set
    thresholds, nodes will never send any information to BS and the farmer will not
    come to know about the field conditions. So, we have proposed a periodic data
    transmission scheme in which data must be transmitted after a fixed time interval.
    In this case, the BS will receive information about field condition after every
    fixed time interval either the sensed value crosses threshold or not. Hence, the
    data transmission will not depend only upon the threshold limits, but it will
    also depend on the periodic timer. The periodic threshold sensitive hybrid routing
    algorithm is given in Algorithm 2. The benefits of using hybrid routing approach
    for data transmission is discussed in Maurya and Daniel (2015). In the proposed
    protocol, all the Type-1 nodes deployed in REG-9 (i.e. Region-9) transmit their
    data directly to BS whereas Type-3 and Type-2 nodes deployed in middle and outermost
    regions respectively transmit their data via the CH node as shown in Fig. 4. If
    we allow Type-1 nodes to become CH, they will die soon because of energy dissipation
    in data aggregation is more as compared to direct data transmission. If Type-2
    or Type-3 nodes which are within the range of the BS but very far from BS and
    send its data directly to BS, then node will consume more energy in direct data
    transmission because the node will have to transmit a data packet with high transmission
    power given in Heinzelman et al. (2000). So, to save the energy of Type-2 and
    Type-3 nodes, clustering technique is used for Type-2 and Type-3 nodes only. This
    leads to the overall improvement in network lifetime. In the proposed protocol,
    Type-3 nodes having highest energy are deployed in middle regions instead of outermost
    regions because they have to perform additional data aggregation task from outermost
    region’s CH node as well as have to perform data aggregation from its own members.
    If we deploy Type-2 nodes in middle regions instead of Type-3 nodes then definitely
    all the Type-2 nodes will die soon as compared to Type-3 nodes because Type-2
    nodes have less amount of energy as well as they have to perform additional data
    aggregation task. After the death of all Type-2 nodes, a coverage hole in the
    middle regions will get created. And due to coverage hole in middle regions the
    sensor nodes in outermost regions will not be able to communicate with BS in spite
    of being alive. Therefore, coverage hole in outermost regions also get created.
    So, to get rid of coverage hole problem Type-3 nodes are deployed in middle regions.
    The proposed protocol considers four modes of single-hop communication: (i) Communication
    between CH and CM (cluster member). (ii) Communication between outermost region’s
    CH node and middle region’s CH node. (iii) Communication between middle region’s
    CH node and BS. (iv) Communication between Type-1 nodes and BS. Algorithm 2 Threshold-sensitive
    hybrid routing algorithm Input: , Output: Initialization: , , dead = 0, , , 1:
    for i = 1 to n do 2:  // For Type-1 node 3:  if (i) = ‘Type-1’ && (i) > 0 then
    4:  if CTV    CMV    CHV    ( CTV-STV )    ( CMV-SMV )    ( CHV-SHV )    expires   then
    5:   Innermost region’s node sends a data packets to BS directly via single-hop
    communication 6:    7:    (i) = update node’s energy as per Eq. (2) 8:  end if
    9:  end if 10: if (i) = ‘Type-1’ && (i)   0 then 11:  12: end if 13: // For Type-2
    node 14: if (i) = ‘Type-2’ && (i) > 0 then 15: Region-wise CH selection using
    fuzzy logic technique 16: if (i)  = ‘CH’ then 17:  if CTV    CMV    CHV    ( CTV-STV
    )    ( CMV-SMV )    ( CHV-SHV )    expires then 18:  CM node sends a data packet
    to its own CH node 19:   (i) = update node’s energy as per Eq. (2) 20:  end if
    21: end if 22: if (i) = ‘CH’ then 23:  if CTV CMV    CHV    ( CTV-STV )    ( CMV-SMV
    )    ( CHV-SHV )    expires then 24:  Data aggregation by outermost region’s CH
    node 25:  CH node from outermost region sends a packet to middle region’s CH node
    via single-hop communication 26:   (i) = update node’s energy as per Eq. (1) 27:  end
    if 28: end if 29: end if 30: if (i) = ‘Type-2’ && (i)   0 then 31:  32: end if
    33: // For Type-3 node 34: if (i) = ‘Type-3’ && (i) > 0 then 35: Region-wise CH
    selection using fuzzy logic technique 36: if (i)  = ‘CH’ then 37:  if CTV    CMV    CHV    (
    CTV-STV )    ( CMV-SMV )    ( CHV-SHV )    expires then 38:  CM node sends a data
    packet to its own CH node 39:   (i) = update node’s energy as per Eq. (2) 40:  end
    if 41: end if 42: if (i) = ‘CH’ then 43:  if CTV    CMV    CHV    ( CTV-STV )    (
    CMV-SMV )    ( CHV-SHV )    expires then 44:  Data aggregation by middle region’s
    CH node 45:  Middle region’s CH node sends a data packet to BS via single-hop
    communication 46:   47:   (i) = update node’s energy as per Eq. (1) 48:  end if
    49: end if 50: end if 51: if (i) = ‘Type-3’ && (i)   0 then 52:  53: end if 54:
    end for 55: dead =  Download : Download full-size image Fig. 4. Hybrid routing.
    In the proposed protocol, only one CH node is selected from each outermost and
    middle region. Therefore, for data transmission total eight CHs are selected in
    every round as shown in Fig. 4. The number of CH nodes within a region can be
    decided according to the availability of Type-2 and Type-3 nodes. In the network,
    if there are more number of CHs then it consumes more energy in data aggregation
    because a node requires more energy in data aggregation as compared to sensing
    and transmitting a data packet to BS (see Table 3). Therefore, the selection of
    number of CH nodes in each cluster should ensure proper load balancing in each
    outer/middle region. In the proposed protocol, since the number of Type-2 and
    Type-3 nodes in a particular outer and middle region respectively are very less
    as compared to innermost region’s nodes, so to save the data aggregation energy
    of a CH node, we have chosen only one CH from each outer and middle region. Once
    the CH is decided in a particular round, other CM nodes send their data to its
    own CH node (as shown in Fig. 4) and then after aggregation, a CH node forward
    the data to lower layer CH/BS. Three data transmission thresholds used in this
    paper are defined as follows: • Rigid threshold ( ): This is the threshold value
    for sensed attributes beyond which the nodes sensing this value must transmit
    data to BS. • Mild threshold ( ): This is the threshold value for small change
    in the sensed attributes which triggers the sensor nodes to transmit data to BS.
    • Periodic timer ( ): Inter-arrival time between two successive data transmission
    to BS. The rigid threshold ( ), mild threshold ( ) and periodic timer ( ) can
    be modified by end user at any time according to crop water needs during the sensing
    process. These thresholds are mainly used for transmitting information to BS and
    it can be chosen based on the weather conditions and the requirement of water
    for a particular crop which is different for different crops. When there is a
    need for changing these thresholds value as per the requirement of water for a
    particular crop then the BS broadcasts these thresholds in the network. Therefore,
    the user can set these thresholds according to the need of irrigation in the agriculture
    field. The crop water needs discussed in FAO (1986) mainly depends on: • Crop
    type: crops like sugarcane or maize need more water than the crops like sorghum
    or millet. • Climate: in a hot and sunny climate, crops need more water per day
    than in a cool and cloudy climate. • Growth stage of the crop: fully grown crops
    need more water than the crops that have just been planted. The sensed values
    of temperature, moisture and humidity are stored in an internal variable called
    sensed temperature value (STV), sensed moisture value (SMV) and sensed humidity
    value (SHV). All the sensor nodes will transmit data in current round, only when
    either of the following conditions are satisfied: (i) The current temperature
    value (CTV) is greater than or equal to Rigid Threshold or current moisture value
    (CMV)/current humidity value (CHV) is less than or equal to the Rigid Threshold
    / respectively. (ii) The absolute difference value (CTV-STV) or (CMV-SMV) or (CHV-SHV)
    are greater than or equal to Mild Threshold or or respectively. (iii) Periodic
    Timer ( ) expires. In every round, CTV, CHV and CMV will sense by each sensor
    nodes. Whenever a node transmits data, CTV, CMV and CHV are set to sensed temperature
    value (STV), sensed moisture value (SMV) and sensed humidity value (SHV) respectively.
    3.5. Efficient cluster head selection using fuzzy logic Initially, the BS broadcasts
    a TDMA schedule and requests all the sensor nodes to advertise themselves. Then
    all the nodes transmit their IDs, initial energy and location information to BS.
    After that the BS selects the best CH node from each middle and outermost regions
    using fuzzy logic then BS broadcasts the IDs and location information of the new
    CHs and the user defined data transmission thresholds (i.e. rigid threshold, mild
    threshold, periodic timer). All the sensor nodes in the network store this information
    in their internal memory. In this paper, we have assumed that BS is within the
    range of each sensor node, so that nodes can transmit information about the field
    conditions and its own initial information (i.e. IDs, initial energy and location
    information) to BS via single-hop communication (as shown in Fig. 4). But, in
    the case of very large field, where BS is very far from the CH node then the CH
    node can communicate to BS via multi-hop communication by selecting multiple optimum
    CHs in each region. In the network, each node will try to find nearest neighbor
    CH node towards the BS to send their sensed data. If the CH node is within the
    range of a source node, then the source node will transmit data to the CH node
    directly otherwise the source node will transmit data by selecting highest energy
    sensor node towards the BS. The same approach will be applied for communication
    between outer region’s CH node and middle region’s CH node. This multi-hop communication
    approach will also minimize the energy consumption of the network as single-hop
    communication approach. But as per the assumptions, this work consider only four
    modes of single-hop communication as discussed in Section 3.4. The fuzzy logic
    technique is used to improve proper balancing of energy dissipation among the
    Type-2 nodes and Type-3 nodes. In every round, BS considers two parameters for
    CH selection such as; node’s distance from BS (for selecting CH node from middle
    regions)/node’s distance from CH (for selecting CH node from outermost regions)
    and residual energy of each node. In a particular round, as soon as the BS found
    better candidate for the CH node selection than the previously selected CH, then
    BS broadcasts the IDs and location information of newly selected CH node. The
    two input functions, distance and residual energy of a sensor node are transformed
    into fuzzy sets P and Q respectively defined as follows: where P and Q are defined
    as a universe of discourse for ‘Distance from BS/Distance from CH’ and for ‘Residual
    Energy’ of a sensor node respectively. and are membership functions for distance
    and residual energy input variable respectively. (dist) and (ene) are the particular
    element of set P and Q respectively. The first-order radio energy model for 3-level
    heterogeneous wireless sensor network described in Kumar et al. (2009b) is used
    for calculating energy dissipation of each CH and CM node. The energy dissipated
    in a CH node during a particular round is calculated as: (1) where N is the packet
    size and is the per bit energy dissipation in running the transmitter or receiver
    circuit of a sensor device. is the energy consumed by the amplifier to transmit
    over a shorter distance, is the energy consumed by the amplifier to transmit at
    a longer distance and . is the data aggregation energy and is the average distance
    between a CH node and BS. The energy dissipated by CM node during a particular
    round is equal to: (2) where is the average distance between a CM node and its
    CH node. The total initial energy of entire heterogeneous network (E) is defined
    in Eq. (3). (3) where is the initial energy of Type-1 nodes. In the network, and
    are the energy factor i.e. Type-3 nodes have times more energy than Type-1 nodes,
    and Type-2 nodes have times more energy than Type-1 node. The value for all the
    other variables defined in Eq. (3) are given in Table 3. Now, the degree of membership
    based on the “Node’s distance from BS” in case of Type-3 node or “Node’s distance
    from CH” node in case of Type-2 node is calculated as: The degree of membership
    based on the “Residual Energy” of each Type-2 and Type-3 node is calculated as:
    where  = Minimum threshold for distance-from-BS/distance-from-CH parameter.  =
    Maximum threshold for distance-from-BS/distance-from-CH parameter.  = Minimum
    threshold for residual energy variable.  = Maximum threshold for residual energy
    variable. These , and thresholds are used for CHs selection among Type-2 nodes
    and among Type-3 nodes. After calculating degree of membership, AND ( ) fuzzy
    operator is used to find the fuzzy relation between membership parameters as,
    Graphical representation of a membership function based on the node distance from
    BS/distance from CH is shown in Fig. 5 and graphical representation of a membership
    function based on residual energy is shown in Fig. 6. Download : Download full-size
    image Fig. 5. Membership function for “Distance-from-BS/distance-from-CH”. Download
    : Download full-size image Fig. 6. Membership function for “Residual energy”.
    3.5.1. Rule evaluation for efficient cluster head selection The process of CHs
    selection is according to the precedence order of distance and residual energy
    of each Type-2 and Type-3 node. Table 1 shows three fuzzy membership functions
    for each input parameters (i.e. ‘Near’, ‘Considerable’ and ‘Far’ for distance
    parameter and ‘Low’, ‘Medium’ and ‘High’ for energy parameter). Table 2 defines
    all the possible combinations of different membership functions for the three
    input variables that result in nine logical rules for the fuzzy inference system.
    For example, if a node is ‘Near’ to BS and has ‘High’ energy then for CH selection,
    the node will have highest priority (i.e. ) as well as if a node is ‘Far’ from
    BS and also has ‘Low’ energy then for CH selection, the node will have lowest
    priority (i.e. ). Therefore, a Type-2 and Type-3 node having highest priority
    (defined in Table 2) among other nodes will be selected as a CH node from each
    outer and middle region. The priority order for CH selection is defined as follows:
    Table 1. Input function. Input parameters Input membership function Distance-from-BS/CH
    Near Considerable Far Residual energy Low Medium High Table 2. Logical rule sets.
    Distance-from-BS/CH Residual energy Priority Near Low Near Medium Near High Considerable
    Low Considerable Medium Considerable High Far Low Far Medium Far High In case
    of priority tie, the precedence order for selecting a CH node is: Distance-from-BS/distance-from-CH   Residual
    energy. 3.6. Operation flowchart for proposed protocol The operation flowchart
    for the proposed routing protocol is given in Fig. 7. After the region-wise sensor
    node deployment, each node senses the environmental parameter continuously if
    a node is alive. Alive Type-1 nodes send the data packets directly to BS if, sensed
    parameter values cross the user defined data transmission thresholds and alive
    Type-2/Type-3 nodes send the data packets via CH node if, sensed parameter values
    cross the data transmission thresholds. This process repeats until the death of
    last alive sensor node. Download : Download full-size image Fig. 7. Operation
    flowchart for proposed protocol. 4. Performance analysis We have simulated a heterogeneous
    clustered WSN model with area dimensions ( ) using MATLAB. The total 100 (n) sensor
    nodes (all types) are deployed in network area. The entire network area is divided
    into nine fixed regions and three types of heterogeneous sensor nodes are deployed
    in these nine regions according to Algorithm 1. The placement/deployment of sensor
    nodes in the agricultural applications such as for irrigation depends on the sensing
    range of the sensors such that each and every part of the agriculture field must
    be covered (or sensed) by some sensor nodes. The optimum number of the sensor
    nodes for maintaining coverage and connectivity in the network can be calculated
    on the basis of the sensing range of the sensor node which is discussed in Zhang
    and Hou (2005). Therefore, by providing efficient coverage to entire agricultural
    field, user can decide in which area, irrigation is required. Since, the three
    types of sensor nodes have different energy level and sensing range, so we have
    deployed Type-1, Type-2 and Type-3 sensor nodes in different-different numbers.
    For example, in region-9, since we are deploying Type-1 sensor nodes which have
    lowest energy level and sensing range, so to cover entire region-9, we have to
    deploy more numbers of Type-1 sensor nodes as compared to other region’s sensor
    nodes. For simplicity and simulation purpose, we have deployed of n as Type-2
    nodes ( ), of as Type-3 nodes ( ) and rest as Type-1 nodes. These Type-2 and Type-3
    nodes are equally and uniformly distributed in each outer and middle regions respectively.
    The Type-2 nodes distance (dist) from lower layer CH node (i.e. CH node selected
    from middle regions) must lie between 20 m and 72.1 m and Type-3 nodes distance
    (dist) from BS must lie between 10 m and 42.43 m as shown in Fig. 8. The residual
    energy (ene) of Type-1, Type-2 and Type-3 nodes must lie between 0–0.3 J, 0–0.6
    J and 0–0.9 J respectively. For the experiment purpose, soil temperature of the
    field is varying from to , soil moisture content of the field is ranging between
    0% and 100% and air humidity of the field is varying from 0% to 100%. Download
    : Download full-size image Fig. 8. Range for distance-from-BS/distance-from-CH
    variable in case of Type-3 and Type-2 nodes respectively. Table 3 discusses other
    simulation parameters used for data transmission and CHs selection. The value
    of rigid and mild threshold for soil temperature (i.e. and respectively) are considered
    for a maize crop. Maize requires abundant sunlight for optimum yields. The optimum
    temperature for the growth and development of maize crop is – ; temperature above
    reduce yields which is discussed in Brink et al. (2006). Therefore, we have chosen
    rigid threshold ( ) and mild threshold ( ) for soil temperature as and respectively
    which means as soon as the node senses greater than or equal to value a data packet
    containing this information will be sent to BS. Also, if there is a change as
    compared to previously sensed temperature value a data packet containing this
    information will be sent to BS. Similarly, for simulation purpose we have chosen
    the rigid and mild threshold for soil moisture content (i.e. and respectively)
    and rigid and mild threshold for air humidity (i.e. and respectively). These thresholds
    value can be set by the users according to the need of irrigation in the agriculture
    field for a particular crop. The periodic timer ( ) parameter value of 5 s specifies
    here that data transmission will occur in every 5th round if sensed parameter
    values do not cross the desired thresholds. Table 3. Simulation parameters. Parameters
    Values Total number of sensor nodes in network (n) 100 Total number of Type-1
    nodes in the network area 36 Total number of Type-2 nodes in network ( ) 40 Total
    number of Type-3 nodes in network ( ) 24 Total number of Type-2 nodes in Region-1
    (REG-1) 10 Total number of Type-2 nodes in Region-2 (REG-2) 10 Total number of
    Type-2 nodes in Region-3 (REG-3) 10 Total number of Type-2 nodes in Region-4 (REG-4)
    10 Total number of Type-3 nodes in Region-5 (REG-5) 6 Total number of Type-3 nodes
    in Region-6 (REG-6) 6 Total number of Type-3 nodes in Region-7 (REG-7) 6 Total
    number of Type-3 nodes in Region-8 (REG-8) 6 Initial Energy of a Type-1 node (
    ) J Initial Energy of a Type-2 node ( ) 0.6 J Initial Energy of a Type-3 node
    ( ) 0.9 J Energy factor ( ) and ( ) and Total initial energy of the entire network
    according to Eq. (3) 56.4 J Energy consumed by amplifier to transmit over a longer
    distance ( ) 0.0013 pJ/bit/ Energy consumed by amplifier to transmit over a shorter
    distance ( ) 10 pJ/bit/ Energy consumed in the electronics circuit to transmit
    or receive the signal ( ) 50 nJ/bit Data aggregation energy ( ) 5 nJ/bit/report
    Packet size (N) 500 byte Rigid threshold for soil temperature ( ) Mild threshold
    for soil temperature ( ) Rigid threshold for soil moisture ( ) 30% Mild threshold
    for soil moisture ( ) 10% Rigid threshold for air humidity ( ) 30% Mild threshold
    for air humidity ( ) 10% Periodic timer ( ) 5 s Minimum threshold for ‘Distance-from-CH’
    variable in case of Type-2 node ( ) 40 m Maximum threshold for ‘Distance-from-CH’
    variable in case of Type-2 node ( ) 55 m Minimum threshold for ‘Residual energy’
    variable in case of Type-2 node ( ) 0.24 J Maximum threshold for ‘Residual energy’
    variable in case of Type-2 node ( ) 0.42 J Minimum threshold for ‘Distance-from-BS’
    variable in case of Type-3 node ( ) 22.5 m Maximum threshold for ‘Distance-from-BS’
    variable in case of Type-3 node ( ) 32.5 m Minimum threshold for ‘Residual energy’
    variable in case of Type-3 node ( ) 0.36 J Maximum threshold for ‘Residual energy’
    variable in case of Type-3 node ( ) 0.63 J To evaluate the performance of our
    proposed protocol, following metrics are used: (i) Stability period: is the time
    duration from start of network operation to the death of first sensor node in
    the network. (ii) Network lifetime: is the time duration from start of network
    operation to the death of last alive node in the network. (iii) Throughput: is
    the total number of data packets sent to the BS during entire network lifetime.
    (iv) Residual energy: is the overall remaining energy that a node has after a
    particular round. 4.1. Simulation results In this subsection, comparative study
    of the behavior of proposed protocol with EEHC, DEEC, DDEEC and RBHR protocol
    are discussed. In the Section 3.4, we have clearly explained that why we should
    deploy Type-3 nodes in middle regions instead of Type-2 nodes. In addition to
    explanation, the fidelity of the deployment is shown by simulation results. In
    Table 4, Table 5, proposed protocol is compared with EEHC, DEEC, DDEEC and RBHR
    protocol in terms of energy consumption, network lifetime and number of packets
    transmitted to BS. For the comparison, we have simulated the DEEC, DDEEC and RBHR
    protocol with 3-levels of heterogeneity. Table 4 and Fig. 9 show comparison results
    with other protocols when Type-2 nodes deployed in middle regions and Table 5
    and Fig. 10 show comparison results with other protocols when Type-3 nodes deployed
    in middle regions for RBHR and proposed protocol. Fig. 11, Fig. 12, Fig. 13 show
    the network lifetime in case of different periodic timer ( ), different mild threshold
    for soil temperature ( ) and different rigid threshold for soil temperature (
    ) value respectively. Instead of these three simulation parameters, all the other
    parameters are same as defined in Table 3. Table 4. Protocols comparison in case
    of Type-2 nodes deployed in middle regions for RBHR and proposed protocol. Performance
    metrics EEHC DEEC DDEEC RBHR Proposed Increments over EEHC (%) Increments over
    DEEC (%) Increments over DDEEC (%) Increments over RBHR (%) Number of rounds after
    first sensor node dead (Stability Period) 859 880 843 1251 1660 93.25 88.64 96.92
    32.69 Number of rounds after 50% sensor nodes dead 1164 1767 1792 2452 3362 188.83
    90.27 87.61 37.11 Number of rounds after all sensor nodes dead (Network Lifetime)
    2771 3135 3808 4940 7094 156.01 126.28 86.29 43.60 Number of rounds after first
    Type-1 sensor node dead 859 880 843 2429 3009 250.29 241.93 256.94 23.88 Number
    of rounds after 50% Type-1 sensor nodes dead 960 1047 928 2479 3399 254.06 224.64
    266.27 37.11 Number of rounds after all Type-1 sensor nodes dead 1044 1225 1118
    2499 4037 286.69 229.55 261.09 61.54 Number of rounds after first Type-2 sensor
    node dead 928 1613 1554 1251 1660 78.88 2.91 6.82 32.69 Number of rounds after
    50% Type-2 sensor nodes dead 1230 1818 1837 1761 2566 108.62 41.14 39.68 45.71
    Number of rounds after all Type-2 sensor nodes dead 1695 2050 2251 2631 3707 118.70
    80.83 64.68 40.90 Number of rounds after first Type-3 sensor node dead 1665 2387
    2523 1827 2519 51.29 5.53 −0.2 37.88 Number of rounds after 50% Type-3 sensor
    nodes dead 2114 2590 3265 2836 4437 109.89 71.31 35.90 56.45 Number of rounds
    after all Type-3 sensor nodes dead 2771 3135 3808 4940 7094 156.01 126.28 86.29
    43.60 Total number of packets transmitted to BS (Throughput) 6047 119,958 139,274
    99,011 57,907 857.62 −51.73 −58.42 −41.51 Table 5. Protocols comparison in case
    of Type-3 nodes deployed in middle regions for RBHR and proposed protocol. Performance
    metrics EEHC DEEC DDEEC RBHR Proposed Increments over EEHC (%) Increments over
    DEEC (%) Increments over DDEEC (%) Increments over RBHR (%) Number of rounds after
    first sensor node dead (Stability Period) 840 851 777 1064 1408 67.62 65.45 81.21
    32.33 Number of rounds after 50% sensor nodes dead 1157 1819 1740 2420 3211 177.53
    76.53 84.54 32.69 Number of rounds after all sensor nodes dead (Network Lifetime)
    2884 3161 3949 5345 7878 173.16 149.22 99.49 47.39 Number of rounds after first
    Type-1 node dead 840 851 777 2405 3112 270.48 265.69 300.51 29.40 Number of rounds
    after 50% Type-1 sensor nodes dead 986 1032 950 2454 3252 229.82 215.12 242.32
    32.52 Number of rounds after all Type-1 sensor nodes dead 1077 1217 1065 2948
    4063 277.25 233.85 281.50 37.82 Number of rounds after first Type-2 sensor node
    dead 955 1643 1593 1064 1408 47.43 −14.30 −11.61 32.33 Number of rounds after
    50% Type-2 sensor nodes dead 1221 1856 1801 1924 2924 139.48 57.54 62.35 51.98
    Number of rounds after all Type-2 sensor nodes dead 1579 2170 2343 3047 4889 209.63
    125.30 108.66 60.45 Number of rounds after first Type-3 sensor node dead 1750
    2362 2462 1450 1780 1.71 −24.64 −27.70 22.76 Number of rounds after 50% Type-3
    sensor nodes dead 2157 2642 3133 1939 2598 20.45 −1.67 −17.08 33.99 Number of
    rounds after all Type-3 sensor nodes dead 2884 3161 3949 5345 7878 173.16 149.22
    99.49 47.39 Total number of packets transmitted to BS (Throughput) 6108 120,872
    137,625 102,130 63,090 932.91 −47.80 −54.16 −38.23 Download : Download full-size
    image Fig. 9. Simulation results in case of Type-2 nodes deployed in middle regions
    for RBHR and proposed protocol. Download : Download full-size image Fig. 10. Simulation
    results in case of Type-3 nodes deployed in middle regions for RBHR and proposed
    protocol. Download : Download full-size image Fig. 11. Network lifetime with different
    . Download : Download full-size image Fig. 12. Network lifetime with different
    . Download : Download full-size image Fig. 13. Network lifetime with different
    . 4.2. Results analysis This subsection, comparatively analyze our proposed protocol
    in comparison to other existing routing protocols such as EEHC, DEEC, DDEEC and
    RBHR protocol. Figs. 9a and 10a show the network lifetime of EEHC, DEEC, DDEEC,
    RBHR and proposed protocol as per the simulation parameter defined in Table 3.
    In EEHC protocol, all the three types of sensor nodes are deployed randomly over
    the entire network area and also the CH nodes are selected randomly in every round.
    Therefore, it is possible that a node which is far away from BS and also having
    less energy may be selected as a CH node. In such a situation, nodes will die
    very quickly and the network lifetime of EEHC protocol will be very short. Due
    to the random deployment of nodes, it does not provide efficient coverage to entire
    agricultural field. The DEEC and DDEEC protocols are developed to perform in a
    heterogeneous environment. In both DEEC and DDEEC protocol, the nodes are deployed
    randomly over the entire network area. Therefore, they also do not guarantee efficient
    coverage which is highly desirable for efficient irrigation in the field. In DEEC
    protocol, CHs are selected in every round by calculating a probability, based
    on the ratio between the residual energy and average energy of the network. Due
    to the consideration of residual energy for CH selection, the lifetime of the
    network in case of DEEC protocol is increased as compared to EEHC protocol. The
    DDEEC protocol is based on DEEC protocol, where all the sensor nodes use the residual
    and initial energy level to select the CH nodes. In DEEC protocol, the higher
    energy sensor nodes penalize, specially when their residual energy deplete and
    become in the range of the lower energy sensor nodes. In this situation, the higher
    energy sensor nodes die quickly than the others nodes in the network. But in DDEEC
    protocol, the higher energy nodes are preferred to be selected as a CH node for
    the initial transmission rounds, and when their energy decreases sensibly, these
    nodes will have the equal CH selection probability like the lower energy nodes.
    This prolongs the overall network lifetime of DDEEC protocol as compared to both
    the EEHC and DEEC protocol. The RBHR protocol provides efficient coverage over
    large geographical area. Due to the deployment of nodes in respective regions
    according to their energy level (i.e. as per the literature, higher energy nodes
    are deployed far away from BS such as Type-1 in innermost region, Type-2 in middle
    regions and Type-3 in outermost regions) and hybrid routing scheme, RBHR enhances
    the network lifetime as compared to other EEHC, DEEC, and DDEEC routing protocols.
    Although, the RBHR is an energy-efficient routing protocol and provides efficient
    coverage but it is not suitable for the precision irrigation because the protocol
    is applicable where continuous data transmission to BS is required (e.g. in military
    applications, health-care applications, etc.). Therefore, for efficient irrigation
    in the field where continuous information about the field is not required, a novel
    periodic threshold sensitive hybrid routing protocol is proposed in this paper.
    The three data transmission thresholds (i.e. rigid, mild and periodic timer) are
    used for transmitting field information to the BS. The data packets are transmitted
    to BS only when the rigid threshold or mild threshold or periodic timer crosses
    the set value. For providing efficient coverage over entire network area modified
    region-based static clustering approach is proposed where nodes are deployed in
    respective regions according to their performing task & energy level both (i.e.
    Type-1 in innermost regions, Type-2 in outermost regions and Type-3 in middle
    regions). Due to balanced deployment of nodes, enhanced hybrid routing scheme
    (discussed in 3.4) and the best CH node selection by considering both the residual
    energy as well as distance parameter using fuzzy logic technique, lifetime of
    the network is increased as compared to RBHR protocol. The simulation results
    also verify that the proposed protocol prolongs the network lifetime over the
    EEHC, DEEC, DDEEC and RBHR protocol. All the sensor nodes are dead after 2884,
    3161, 3949, 5345 and 7878 rounds in case of EEHC, DEEC, DDEEC, RBHR and proposed
    protocol respectively as shown in Fig. 10a. Fig. 9, Fig. 10c show the total number
    of data packets received at the base station till current round. As per our simulation
    result shown in Fig. 10c, in case of EEHC protocol, total number of data packets
    received at BS (i.e. total 6108 data packets) is comparatively very less as compared
    to all the other protocols due to its shorter network lifetime. As the network
    lifetime of both the DEEC and DDEEC protocol is increases in comparison to EEHC,
    the total number of data packets received at BS also increases (i.e. total 120,872
    and 137,625 data packets, in case of DEEC and DDEEC respectively). The total number
    of data packets received at BS in case of RBHR is decreased (i.e. total 102,130
    data packets) due to only four CH node selection from outer regions. This restricts
    the transmission rate towards the BS as compared to EEHC, DEEC, and DDEEC. The
    packet transmission rate towards BS in case of our proposed protocol is decreased
    (i.e. total 63,090 data packets), as compared to DEEC, DDEEC and RBHR protocol
    due to user defined data transmission thresholds because data packets are received
    at BS only when nodes cross the data transmission thresholds (either rigid or
    mild or periodic timer), but it increased as compared to EEHC protocol due to
    overall improvement in sensor network lifetime. Fig. 9, Fig. 10b show the number
    of dead Type-1 nodes till current round. The number of dead Type-1 nodes in case
    of proposed protocol are less as compared to other routing protocols over the
    same number of rounds because the Type-1 nodes having less energy as compared
    to Type-2 and Type-3 nodes are deployed near the BS region (i.e. in REG-9), while
    in case of other (i.e. in EEHC, DEEC and DDEEC) routing protocols, Type-1 nodes
    are deployed over the entire network area which consumes more energy in long-distance
    communications. Fig. 9, Fig. 10d show the number of dead Type-2 nodes till current
    round. The number of dead Type-2 nodes in case of proposed protocol are less as
    compared to EEHC, DEEC and DDEEC protocols due to same reason as discussed for
    the Type-1 nodes. In Fig. 9, Fig. 10d, we can see that when Type-2 nodes are deployed
    in middle region then all the Type-2 nodes have died earlier (i.e. all Type-2
    nodes dead after 3707 rounds) as compared to Type-2 nodes deployed in outermost
    regions (i.e. all Type-2 nodes dead after 4889 rounds) because Type-2 nodes have
    less amount of energy as compared to Type-3 nodes as well as they have to perform
    additional data aggregation task from outermost region’s CH node as well as data
    aggregation task from its own CMs. Fig. 9, Fig. 10f show the number of dead Type-3
    nodes till current round. In Fig. 9, Fig. 10f, we can see that the when Type-3
    nodes are deployed in outermost region then 50% Type-3 nodes are dead after 4437
    rounds as compared to Type-3 nodes deployed in middle regions (i.e. 50% Type-3
    node dead after 2598 rounds) because the Type-3 nodes are the highest energy sensor
    nodes in the network as well as they have to perform data aggregation task from
    its own CM nodes only. Fig. 9, Fig. 10g show the number of dead sensor nodes after
    1000, 2000 & 3000 rounds. The total initial energy of the network is given in
    Eq. (3). Fig. 9, Fig. 10e show overall residual energy of the network after 2000,
    2500 & 3000 rounds and these figures show that in case of our proposed protocol,
    the average energy consumption of each sensor nodes are reduced in every round
    as compared to other routing protocols. In case of Type-2 nodes deployed in middle
    region, after the 3000 round, overall 69 sensor nodes are alive as compared to
    Type-3 nodes deployed in middle regions (only 65 sensor nodes are alive) because
    alive Type-3 nodes are only sensing the environment parameter but not communicating
    with BS as most of the Type-2 nodes are dead. Therefore, more nodes are alive
    after 3000 round because node consumes less energy in sensing than that for communication.
    We have also simulated and analyzed the performance of our proposed protocol with
    the various combination of data transmission thresholds shown in Fig. 11, Fig.
    12, Fig. 13 (in case of Type-3 nodes deployed in middle regions). Table 6 shows
    the corresponding round in which all sensor nodes are dead (i.e. Network lifetime)
    in case of our proposed protocol as per the simulation results provided in Fig.
    11, Fig. 12, Fig. 13. In Table 6, we can see that as the value of periodic timer
    ( ) decreases, the lifetime of the network also decreases. When , all the sensor
    nodes are dead after 5532 rounds as compared to when (nodes dead after 7878 rounds)
    and (nodes dead after 9148 rounds) because the nodes are transmitting data packets
    to BS after every 1 s if rigid or mild threshold do not reach to desired threshold.
    The nodes consume more energy when it transmits data packet to BS after every
    1 s as compared to when and . Also in such a situation, when nodes are transmitting
    data packets after every 1 s (that means in every round) it behaves similar to
    RBHR protocol. The proposed protocol fairly divides the outermost and middle regions,
    and equally distributes the nodes in these regions, in contrast to RBHR protocol.
    Therefore, as per Table 6, Table 5, the network lifetime (i.e. all sensor nodes
    dead after 5532 rounds at ) of the proposed protocol increases in comparison to
    RBHR protocol where all nodes are dead after 5345 rounds. Table 6. Network lifetime
    in case of different and . Thresholds Thresholds Round after all sensor nodes
    are dead and  = 8 s 9148  = 5 s 7878  = 1 s 5532  and  = 5 s 8213 7878 4820  and  =
    5 s 8025 7878 4768 Similarly, as the value of mild threshold for soil temperature
    ( ) decreases, the lifetime of the network also decreases. When , all the sensor
    nodes are dead after 4820 rounds as compared to when (nodes dead after 7878 rounds)
    and (nodes dead after 8213 rounds) because the nodes are transmitting data packets
    to BS more frequently. The nodes will transmit data packets more when it senses
    a temperature difference of than previously sensed temperature value. Similarly,
    as the value of rigid threshold for soil temperature ( ) decreases, the lifetime
    of the network also decreases. When , all the sensor nodes are dead after 4768
    rounds as compared to when (nodes dead after 7878 rounds) and (nodes dead after
    8025 rounds) because the nodes are transmitting data packets to BS more frequently.
    The simulation results show that the proposed protocol gives better result in
    most of the cases with various combinations of data transmission thresholds in
    comparison to other existing protocols. Therefore, we can say that the proposed
    protocol is an energy-efficient routing protocol which is applicable for agriculture
    domain. Also, in this subsection, to test the performance of proposed node deployment
    concept of Type-3 nodes in middle regions, we have analyzed it in two different
    cases. • Case-1: in which Type-2 nodes are deployed in middle region and corresponding
    results are presented in Table 4. • Case-2: in which Type-3 nodes are deployed
    in middle region and corresponding results are presented in Table 5. In Table
    4, we can see that in case of our proposed protocol, all the sensor nodes have
    died after 7094 rounds and Table 5 show that all the sensor nodes have died after
    7878 rounds. Also, in Case-1, all Type-2 sensor nodes have died after 3707 rounds
    but in the Case-2, all Type-2 sensor nodes have died after 4889 rounds. In Case-1,
    after the death of all Type-2 nodes, Type-3 nodes will sense only but never communicate
    with the BS. In this situation, a coverage hole is created in both the middle
    and outermost regions because Type-2 nodes are deployed in middle regions. After
    the death of all Type-2 nodes, only Type-1 nodes will communicate with BS until
    the death of last alive Type-1 node, if any. Therefore, according to Table 4 after
    the death of all the Type-1 nodes in 4037 rounds, logically the BS does not receive
    any information about the field while Type-3 nodes are still alive. Therefore,
    in case-1, BS is receiving information about the field till 4037 rounds. But in
    Case-2, after the death of all Type-2 nodes in 4889 rounds, Type-3 nodes will
    communicate with BS. In such a situation coverage hole is created in outermost
    regions only. Some Type-3 nodes will guaranteed be alive after the death of all
    Type-2 nodes because they are high energy nodes and deployed near the BS as compared
    to Type-2 nodes. According to Table 5, after the death of all Type-2 nodes some
    Type-1 and Type-3 nodes are still alive and communicating with BS. In this case,
    BS is receiving information about the field till 7878 rounds (all the Type-3 nodes
    are dead after 7878 rounds). Hence, the deployment of Type-3 nodes in middle regions
    is efficient and we achieve longer network lifetime because the BS is receiving
    information till 7878 rounds. 5. Conclusions and future work In this proposed
    threshold sensitive region-based hybrid routing protocol, the deployment of heterogeneous
    sensor nodes within fairly divided fixed regions, ensures proper coverage of entire
    network field. The Type-2 and Type-3 nodes die slower than Type-1 nodes due to
    balanced deployment of heterogeneous nodes in different regions. The dynamic clustering
    routing protocols such as LEACH, SEP, E-SEP, EEHC, DEEC and DDEEC use the weighted
    random probability for the selection of CHs node, which does not ensure the proper
    utilization of node’s energy in every data transmission period. Therefore, in
    the proposed protocol, to ensure proper utilization of node’s energy in every
    round, fuzzy logic technique is used for CHs selection, and to provide efficient
    coverage over entire area, region-based static clustering approach is used. The
    balanced use of fuzzy logic technique, region-wise node deployment and enhanced
    hybrid routing, saves much more amount of energy consumed by sensor nodes. When
    we compare the proposed protocol with EEHC, DEEC, DDEEC and RBHR, network lifetime
    of proposed protocol is increased as compared to the other protocols, because
    data is transmitted to BS only when it is required. Hence, proposed protocol minimizes
    the energy consumption of sensor nodes due to reduction in total number of data
    transmission per round. The data transmission thresholds (i.e. and ) can be set
    to receive information according to users need. Therefore, the information regarding
    the agricultural field received at BS helps the farmer to take a decision about
    irrigation. Further, this work may be extended to develop energy-efficient routing
    protocols for wireless sensor networks with mobile base station and sensor nodes.
    The work can be further extended to support multi-hop communication model in case
    of monitoring very large field. References Aderohunmu and Deng, 2009 F.A. Aderohunmu,
    J.D. Deng, et al. An Enhanced Stable Election Protocol (sep) for Clustered Heterogeneous
    WSN Department of Information Science, University of Otago, New Zealand (2009)
    Google Scholar Allirani and Suganthi, 2009 A. Allirani, M. Suganthi An energy
    efficient cluster formation protocol with low latency in wireless sensor networks
    World Acad. Sci., Eng. Tech., 51 (2009), pp. 1-7 View in ScopusGoogle Scholar
    Ammari and Das, 2012 H.M. Ammari, S.K. Das Centralized and clustered k-coverage
    protocols for wireless sensor networks IEEE Trans. Comput., 61 (2012), pp. 118-133
    View in ScopusGoogle Scholar Awasthi and Reddy, 2013 A. Awasthi, S. Reddy Monitoring
    for precision agriculture using wireless sensor network - a review GJCST-E: Netw.
    Web Secur., 13 (2013) Google Scholar Bara and Khalil, 2012 A.A. Bara, E.A. Khalil
    A new evolutionary based routing protocol for clustered heterogeneous wireless
    sensor networks Appl. Soft Comput., 12 (2012), pp. 1950-1957 Google Scholar Brink
    et al., 2006 M. Brink, G. Belay, J. de Wet, O. Edje, E. Westphal Plant Resources
    of Tropical Africa 1:Cereals and Pulses. PROTA Foundation Backhuys Publisher (2006)
    Google Scholar Doddapaneni et al., 2014 K. Doddapaneni, F.A. Omondi, E. Ever,
    P. Shah, O. Gemikonakli, R. Gagliardi Deployment challenges and developments in
    wireless sensor networks clustering Proceedings of 28th International Conference
    on Advanced Information Networking and Applications Workshops (WAINA) (2014),
    pp. 227-232, 10.1109/WAINA.2014.4 View in ScopusGoogle Scholar Elbhiri et al.,
    2010 B. Elbhiri, R. Saadane, S. El Fkihi, D. Aboutajdine Developed distributed
    energy-efficient clustering (DDEEC) for heterogeneous wireless sensor networks
    Proceedings of 5th International Symposium on I/V Communications and Mobile Network
    (ISVC) (2010), pp. 1-4, 10.1109/ISVC.2010.5656252 Google Scholar FAO, 1986 FAO,
    1986. Irrigation Water Management: Irrigation Water Needs. http://www.fao.org/docrep/s2022e/s2022e07.htm.
    Google Scholar Ge et al., 2008 W. Ge, J. Zhang, G. Xue Joint clustering and optimal
    cooperative routing in wireless sensor networks Proceedings of IEEE International
    Conference on Communications, 2008, ICC ’08 (2008), pp. 2216-2220, 10.1109/ICC.2008.42
    View in ScopusGoogle Scholar Gopakumar and Jacob, 2008 A. Gopakumar, L. Jacob
    Localization in wireless sensor networks using particle swarm optimization IET
    International Conference on Wireless, Mobile and Multimedia Networks (2008), pp.
    227-230, 10.1049/cp:2008018 View in ScopusGoogle Scholar Heinzelman et al., 2000
    W.R. Heinzelman, A. Chandrakasan, H. Balakrishnan Energy-efficient communication
    protocol for wireless microsensor networks Proceedings of the 33rd Annual Hawaii
    International Conference on System Sciences (2000) Google Scholar Kalaivani et
    al., 2011 T. Kalaivani, A. Allirani, P. Priya A survey on ZigBee based wireless
    sensor networks in agriculture Proceedings of 3rd International Conference on
    Trendz in Information Sciences and Computing, IEEE (2011), pp. 85-89 CrossRefView
    in ScopusGoogle Scholar Khalil and Attea, 2011 E.A. Khalil, B.A. Attea Energy-aware
    evolutionary routing protocol for dynamic clustering of wireless sensor networks
    Swarm Evolut. Comput., 1 (2011), pp. 195-203 View PDFView articleView in ScopusGoogle
    Scholar Kumar et al., 2009a D. Kumar, T. Aseri, R. Patel EECHE: energy-efficient
    cluster head election protocol for heterogeneous wireless sensor networks Proceedings
    of the International Conference on Advances in Computing, Communication and Control,
    ACM (2009), pp. 75-80 CrossRefView in ScopusGoogle Scholar Kumar et al., 2009b
    D. Kumar, T.C. Aseri, R. Patel EEHC: energy efficient heterogeneous clustered
    scheme for wireless sensor networks Comput. Commun. (2009), pp. 662-667 View PDFView
    articleView in ScopusGoogle Scholar Li et al., 2008 C. Li, P. Wang, H.H. Chen,
    M. Guizani A cluster based on-demand multi-channel mac protocol for wireless multimedia
    sensor networks Proceedings of IEEE International Conference on Communications,
    ICC ’08 (2008), pp. 2371-2376, 10.1109/ICC.2008.45 View in ScopusGoogle Scholar
    Li and Shen, 2013a J. Li, C. Shen An energy conservative wireless sensor networks
    approach for precision agriculture Electronics (2013), pp. 387-399 CrossRefView
    in ScopusGoogle Scholar Li and Shen, 2013b J. Li, C. Shen Energy conservative
    wireless sensor networks for black pepper monitoring in tropical area Proceedings
    of IEEE Global High Tech Congress on Electronics (GHTCE), IEEE (2013), pp. 159-164
    View in ScopusGoogle Scholar Lotf et al., 2008 J.J. Lotf, M.N. Bonab, S. Khorsandi
    A novel cluster-based routing protocol with extending lifetime for wireless sensor
    networks Proceedings of 5th IFIP International Conference on Wireless and Optical
    Communications Networks (WOCN ’08) (2008), pp. 1-5, 10.1109/WOCN.2008.454249 Google
    Scholar Lung and Zhou, 2010 C.H. Lung, C. Zhou Using hierarchical agglomerative
    clustering in wireless sensor networks: an energy-efficient and flexible approach
    Ad Hoc Netw., 8 (2010), pp. 328-344 View PDFView articleView in ScopusGoogle Scholar
    Manjeshwar and Agrawal, 2001 A. Manjeshwar, D. Agrawal TEEN: a routing protocol
    for enhanced efficiency in wireless sensor networks Proceedings of 15th International
    Parallel and Distributed Processing Symposium (2001), pp. 2009-2015, 10.1109/IPDPS.2001.925197
    View in ScopusGoogle Scholar Manjeshwar and Agrawal, 2002 A. Manjeshwar, D. Agrawal
    APTEEN: a hybrid protocol for efficient routing and comprehensive information
    retrieval in wireless sensor networks Proceeding of 16th International Parallel
    and Distributed Processing Symposium, IEEE (2002) Google Scholar Maurya and Daniel,
    2014a S. Maurya, A. Daniel An energy efficient routing protocol under distance,
    energy and load parameter for heterogeneous wireless sensor networks International
    Conference on Information Technology (ICIT), 2014, IEEE (2014), pp. 161-166, 10.1109/ICIT.2014.6
    View in ScopusGoogle Scholar Maurya and Daniel, 2014b S. Maurya, A. Daniel Hybrid
    routing approach for heterogeneous wireless sensor networks using fuzzy logic
    technique Fourth International Conference on Advanced Computing & Communication
    Technologies (ACCT), 2014, IEEE (2014), pp. 202-207, 10.1109/ACCT.2014.8 View
    in ScopusGoogle Scholar Maurya and Daniel, 2015 S. Maurya, A. Daniel RBHR: region-based
    hybrid routing protocol for wireless sensor networks using ai technique Proceedings
    of Fourth International Conference on Soft Computing for Problem Solving, Springer
    (2015), pp. 37-52 CrossRefView in ScopusGoogle Scholar Mhatre and Rosenberg, 2004
    V. Mhatre, C. Rosenberg Homogeneous vs heterogeneous clustered sensor networks:
    a comparative study IEEE International Conference on Communications (2004), pp.
    3646-3651 View in ScopusGoogle Scholar Morais et al., 2008 R. Morais, M.A. Fernandes,
    S.G. Matos, C. Serõdio, P. Ferreira, M. Reis A ZigBee multi-powered wireless acquisition
    device for remote sensing applications in precision viticulture Comput. Electron.
    Agric. (2008), pp. 94-106 View PDFView articleView in ScopusGoogle Scholar Niculescu,
    2004 D. Niculescu Positioning in ad hoc sensor networks IEEE Netw., 18 (2004),
    pp. 24-29, 10.1109/MNET.2004.1316758 View in ScopusGoogle Scholar Nikolidakis
    et al., 2015 S.A. Nikolidakis, D. Kandris, D.D. Vergados, C. Douligeris Energy
    efficient automated control of irrigation in agriculture by using wireless sensor
    networks Comput. Electron. Agric., 113 (2015), pp. 154-163 View PDFView articleView
    in ScopusGoogle Scholar Ojha et al., 2015 T. Ojha, S. Misra, N.S. Raghuwanshi
    Wireless sensor networks for agriculture: the state-of-the-art in practice and
    future challenges Comput. Electron. Agric., 118 (2015), pp. 66-84, 10.1016/j.compag.2015.08.011
    URL: <http://www.sciencedirect.com/science/article/pii/S0168169915002379> View
    PDFView articleView in ScopusGoogle Scholar Qing et al., 2006 L. Qing, Q. Zhu,
    M. Wang Design of a distributed energy-efficient clustering algorithm for heterogeneous
    wireless sensor networks Comput. Commun., 29 (2006), pp. 2230-2237, 10.1016/j.comcom.2006.02.017
    View PDFView articleView in ScopusGoogle Scholar Rawat et al., 2014 P. Rawat,
    K.D. Singh, H. Chaouchi, J.M. Bonnin Wireless sensor networks: a survey on recent
    developments and potential synergies J. Supercomput., 68 (2014), pp. 1-48 CrossRefView
    in ScopusGoogle Scholar Smaragdakis et al., 2004 G. Smaragdakis, I. Matta, A.
    Bestavros, et al. Sep: a stable election protocol for clustered heterogeneous
    wireless sensor networks Second International Workshop on Sensor and Actor Network
    Protocols and Applications (SANPA 2004) (2004), pp. 1-11 View in ScopusGoogle
    Scholar Sudha et al., 2011 M.N. Sudha, M. Valarmathi, A.S. Babu Energy efficient
    data transmission in automatic irrigation system using wireless sensor networks
    Comput. Electron. Agric., 78 (2011), pp. 215-221, 10.1016/j.compag.2011.07.009
    Google Scholar Vellidis et al., 2008 G. Vellidis, M. Tucker, C. Perry, C. Kvien,
    C. Bednarz A real-time wireless smart sensor array for scheduling irrigation Comput.
    Electron. Agric., 61 (2008), pp. 44-50, 10.1016/j.compag.2007.05.009 View PDFView
    articleView in ScopusGoogle Scholar Wei et al., 2010 D. Wei, P. Navaratnam, A.
    Gluhak, R. Tafazolli Energy-efficient clustering for wireless sensor networks
    with unbalanced traffic load IEEE Wireless Communication & Networking Conference
    (WCNC) (2010), pp. 1-6, 10.1109/WCNC.2010.550617 URL: <http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5506172>
    Google Scholar Wei and Zhang, 2010 J. Wei, X. Zhang Energy-efficient distributed
    spectrum sensing for wireless cognitive radio networks INFOCOM IEEE Conference
    on Computer Communications Workshops, 2010 (2010), pp. 1-6, 10.1109/INFCOMW.2010.546668
    Google Scholar Younis and Fahmy, 2004 O. Younis, S. Fahmy Heed: a hybrid energy-efficient
    distributed clustering approach for ad hoc sensor networks IEEE Trans. Mobile
    Comput., 3 (2004), pp. 366-379 View in ScopusGoogle Scholar Zhang and Hou, 2005
    H. Zhang, J.C. Hou Maintaining sensing coverage and connectivity in large sensor
    networks Ad Hoc Sensor Wirel. Netw., 1 (2005), pp. 89-124 View in ScopusGoogle
    Scholar Zheng and Jamalipour, 2009 J. Zheng, A. Jamalipour Wireless Sensor Networks:
    A Networking Perspective John Wiley & Sons (2009) Google Scholar Zhou et al.,
    2010 H. Zhou, Y. Wu, Y. Hu, G. Xie A novel stable selection and reliable transmission
    protocol for clustered heterogeneous wireless sensor networks Comput. Commun.
    (2010), pp. 1843-1849 View PDFView articleView in ScopusGoogle Scholar Zhou et
    al., 2009 Y. Zhou, X. Yang, L. Wang, Y. Ying A wireless design of low-cost irrigation
    system using ZigBee technology International Conference on Networks Security,
    Wireless Communications and Trusted Computing, 2009, NSWCTC’09, IEEE (2009), pp.
    572-575 CrossRefView in ScopusGoogle Scholar Zhu et al., 2012 C. Zhu, C. Zheng,
    L. Shu, G. Han A survey on coverage and connectivity issues in wireless sensor
    networks J. Network Comput. Appl., 35 (2012), pp. 619-632 View PDFView articleView
    in ScopusGoogle Scholar Cited by (34) Nutrient recovery from anaerobic digestate:
    Fertilizer informatics for circular economy 2024, Environmental Research Show
    abstract Intelligent optimization of Reference Evapotranspiration (ETo) for precision
    irrigation 2023, Journal of Computational Science Show abstract Analysis of fuzzy
    applications in the agri-supply chain: A literature review 2021, Journal of Cleaner
    Production Citation Excerpt : The first fuzzy-based sustainable energy consumption
    model was developed by Houshyar et al. (2012) who developed a fuzzy DEA model
    to optimize energy usage in the corn industry. Following them, Maurya and Jain
    (2016), Khiari et al. (2010) developed fuzzy logic-based network control to optimize
    the energy consumption in the agri-industry. There are an adequate number of studies
    in the environmental and sustainability domain. Show abstract Employing sensor
    network based opportunistic spectrum utilization for agricultural monitoring 2020,
    Sustainable Computing: Informatics and Systems Citation Excerpt : Popović et al.
    discussed a case study of designing a private internet of things enabled platform
    for the research in precision agriculture and ecological monitoring domains [18].
    Maurya and Jain proposed a novel approach based on sensor network technology in
    order to control the irrigation in the agricultural field automatically [19].
    Souza et al. presented the development of an integrated system consisting of hardware,
    middleware, and application to continuously monitor and record the performance
    of seed testing equipment from the beginning to the completion of each test in
    seed testing laboratories [20]. Show abstract Automatic delivery and recovery
    system of Wireless Sensor Networks (WSN) nodes based on UAV for agricultural applications
    2019, Computers and Electronics in Agriculture Citation Excerpt : Which can optimize
    the number and energy consumption while ensure the coverage and connectivity of
    the whole network. Maurya and Jain (2016) designed a sensor node which can continuously
    sense soil temperature, soil moisture and air humidity to control the irrigation
    in agricultural field automatically. A threshold- sensitive hybrid routing algorithm
    is proposed which can conserve energy of sensor network efficiently. Show abstract
    Distributed monitoring system for precision management of household biogas appliances
    2019, Computers and Electronics in Agriculture Citation Excerpt : The application
    of IoT (Internet of Things) technology can improve the safety and reliability
    of biogas use by collecting data derived from the sensor endpoints. As the key
    technologies in IoT, ZigBee and LoRa wireless communications are widely used for
    their respective advantages (Ojha et al., 2015; Zou et al., 2016; Maurya and Jain,
    2016; Bapat et al., 2017). ZigBee is a wireless communication technology with
    short distance and low power consumption. Show abstract View all citing articles
    on Scopus View Abstract © 2016 Elsevier B.V. All rights reserved. Recommended
    articles A wide band QAM receiver based on DFE to reject ISI in wireless time
    varying fading channel AEU - International Journal of Electronics and Communications,
    Volume 69, Issue 1, 2015, pp. 332-343 A.Y. Hassan View PDF Linear programming
    applied to blind signal equalization AEU - International Journal of Electronics
    and Communications, Volume 69, Issue 1, 2015, pp. 408-417 Marcelo A.C. Fernandes
    View PDF The road towards plant phenotyping via WSNs: An overview Computers and
    Electronics in Agriculture, Volume 161, 2019, pp. 4-13 Fadi Al-Turjman View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 32 Captures Readers:
    99 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply.'
  inline_citation: ''
  journal: Computers and Electronics in Agriculture
  limitations: The paper focuses on designing an efficient routing protocol for region-based
    static clustering approach to improve coverage and network lifetime of WSNs in
    the context of precision agriculture. However, it does not provide many details
    on how the protocol would handle specific challenges in deploying and managing
    WSNs in real-world agricultural settings, such as dealing with environmental factors
    (e.g., weather conditions), variations in soil conditions, and the need for secure
    data transmission. Additionally, the paper does not provide any experimental results
    or case studies to demonstrate the effectiveness of the proposed protocol in real-world
    scenarios.
  pdf_link: null
  publication_year: 2016
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Fuzzy based energy efficient sensor network protocol for precision agriculture
  verbatim_quote1: '"The proposed protocol is an energy-efficient routing protocol
    which is applicable for agriculture domain."'
  verbatim_quote2: '"Also, in this subsection, to test the performance of proposed
    node deployment concept of Type-3 nodes in middle regions, we have analyzed it
    in two different cases."'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/drones5040148
  analysis: UAV-enabled MEC architecture is enabled by wireless communication technologies
    and artificial intelligence (AI) to provide intelligent services such as network
    connectivity, aerial intelligence, self-maintenance, and sensor deployment. The
    combination of UAVs and MEC has the potential to revolutionize various industrial
    sectors, including agriculture, industry 4.0, environment, health and emergency,
    smart cities, and natural disaster tracking. This review provides an overview
    of the state-of-the-art in UAV-enabled MEC, with a particular focus on the opportunities
    and challenges offered by AI. It highlights the key issues and open research directions
    related to UAV-enabled MEC systems, including communication protocols, task ofﬂoading,
    resource allocation, energy consumption, security, and privacy, among others.
    The review also discusses the use of AI techniques, such as deep learning, machine
    learning, and reinforcement learning, to improve the performance of UAV-enabled
    MEC systems in terms of latency, throughput, security, and energy efficiency.
    By providing a comprehensive analysis of the current state of the art and identifying
    future research directions, this review aims to stimulate further research and
    development in this promising area.
  authors:
  - Yassine Yazid
  - Imad Ez‐zazi
  - Antonio Guerrero-González
  - Ahmed El Oualkadi
  - Mounir Arioua
  citation_count: 46
  full_citation: '>'
  full_text: ">\ndrones\nReview\nUAV-Enabled Mobile Edge-Computing for IoT Based on\
    \ AI:\nA Comprehensive Review\nYassine Yazid 1,2,*, Imad Ez-Zazi 3\n, Antonio\
    \ Guerrero-González 2, Ahmed El Oualkadi 1\nand Mounir Arioua 1\n\x01\x02\x03\x01\
    \x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Yazid, Y.; Ez-Zazi,\
    \ I.;\nGuerrero-González, A.; El Oualkadi,\nA.; Arioua, M. UAV-Enabled Mobile\n\
    Edge-Computing for IoT Based on AI:\nA Comprehensive Review. Drones\n2021, 5,\
    \ 148. https://doi.org/\n10.3390/drones5040148\nAcademic Editors: Vishal Sharma,\n\
    Abderrahmane Lakas, Mohammed\nAtiquzzaman, Omar Sami Oubbati,\nSahar Hoteit and\
    \ Taieb Znati\nReceived: 27 October 2021\nAccepted: 9 December 2021\nPublished:\
    \ 13 December 2021\nPublisher’s Note: MDPI stays neutral\nwith regard to jurisdictional\
    \ claims in\npublished maps and institutional afﬁl-\niations.\nCopyright: © 2021\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nLaboratory of Information and Communication Technologies (LabTIC),\
    \ National School of Applied Sciences\nof Tangier (ENSATg), Abdelmalk Essaadi\
    \ University, ENSA Tanger, Route Ziaten, Tangier BP 1818, Morocco;\naeloualkadi@uae.ac.ma\
    \ (A.E.O.); m.arioua@uae.ac.ma (M.A.)\n2\nDepartment of Automation, Electrical\
    \ Engineering and Electronic Technology, Universidad Politécnica de\nCartagena,\
    \ Plaza del Hospital 1, 30202 Cartagena, Spain; antonio.guerrero@upct.es\n3\n\
    National School of Applied Sciences of Fez (ENSAF), Sidi Mohamed Ben Abdellah\
    \ University, Fez BP 2626,\nMorocco; imad.ezzazi@usmba.ac.ma\n*\nCorrespondence:\
    \ y.yazid@uae.ac.ma\nAbstract: Unmanned aerial vehicles (UAVs) are becoming integrated\
    \ into a wide range of modern\nIoT applications. The growing number of networked\
    \ IoT devices generates a large amount of data.\nHowever, processing and memorizing\
    \ this massive volume of data at local nodes have been deemed\ncritical challenges,\
    \ especially when using artiﬁcial intelligence (AI) systems to extract and exploit\n\
    valuable information. In this context, mobile edge computing (MEC) has emerged\
    \ as a way to bring\ncloud computing (CC) processes within reach of users, to\
    \ address computation-intensive ofﬂoading\nand latency issues. This paper provides\
    \ a comprehensive review of the most relevant research works\nrelated to UAV technology\
    \ applications in terms of enabled or assisted MEC architectures. It details\n\
    the utility of UAV-enabled MEC architecture regarding emerging IoT applications\
    \ and the role of\nboth deep learning (DL) and machine learning (ML) in meeting\
    \ various limitations related to latency,\ntask ofﬂoading, energy demand, and\
    \ security. Furthermore, throughout this article, the reader gains\nan insight\
    \ into the future of UAV-enabled MEC, the advantages and the critical challenges\
    \ to be\ntackled when using AI.\nKeywords: UAVs; IoT; cloud computing; edge computing;\
    \ MEC; AI; review\n1. Introduction\nThe Internet of Things (IoT) paradigm is constantly\
    \ expanding to cover many ﬁelds\nand applications. IoT devices present many beneﬁts\
    \ for improving services in a broad\nrange of contexts. The number of connected\
    \ devices is forecasted to reach impressive\nheights in the coming years. According\
    \ to CISCO, more than 70 billion devices will be\nconnected by the end of 2025\
    \ [1,2]. Recently, unmanned aerial vehicles (UAVs), typically\nknown as drones,\
    \ have attracted considerable attention from academia and industrial\ncommunities\
    \ due to their excellent capabilities and attractive features. They promise to\n\
    bring an ideal contribution to the ﬁeld of IoT, based on their unique characteristics.\
    \ They\noffer elastic and ﬂexible mobile features, as required in many omnipresent\
    \ IoT applications,\nmaking their integration into wireless network communication\
    \ easy and feasible.\nMoreover, integrating embedded intelligent devices such\
    \ as cameras and sensors on\nUAVs offer many advantages when monitoring hostile\
    \ and unreachable environments.\nIn addition, they can potentially provide many\
    \ services in the context of modern IoT\ninterconnection, such as smart cities,\
    \ smart farming, smart factories, smart grids, and\nintelligent transportation.\
    \ The development of communication protocols and networks\nhas also improved the\
    \ tracking and maneuverability of drones to cover many application\nrequirements,\
    \ as well as their contribution as a critical component of the communication\n\
    network [3]. UAVs can also guarantee reliable connectivity in hostile areas with\
    \ limited\nDrones 2021, 5, 148. https://doi.org/10.3390/drones5040148\nhttps://www.mdpi.com/journal/drones\n\
    Drones 2021, 5, 148\n2 of 30\nor unavailable communication infrastructure. Typically,\
    \ UAVs can be deployed as aided\ncommunication networks by integrating them into\
    \ the peripheral network as ﬂying base\nstations (BSs) [4,5], relay nodes [6],\
    \ or terminal nodes [7]. Therefore, they act primarily as a\nmeans of enabling\
    \ ﬂexible communication services in remote areas when interconnections\nwith existing\
    \ networks are lost. To this end, UAVs can be used in edge-computing (EC),\nfog-computing\
    \ (FC), and as crucial equipment in cellular networks [8].\nIoT networks enable\
    \ comprehensive connectivity for many mobile users by enabling\nvarious emerged\
    \ application services (e.g., automatic surveillance, unmanned control\nvehicles\
    \ and object recognition). Centralized servers, such as cloud computing (CC)\n\
    facilities and data centers, generally process and analyze the generated data\
    \ by carrying out\ncomputational intelligence based on artiﬁcial intelligence\
    \ (AI). These centralized systems\nare quick to deploy, inexpensive to maintain,\
    \ and practical when data need to be centrally\ncontrolled. However, they are\
    \ mostly constrained by their high failure rate, security risks\nand access delay.\
    \ Data processing at the central level causes considerable time delays that\n\
    affect the overall system quality of service (QoS), especially regarding the response-time\n\
    requirement for latency-sensitive applications. Decentralized and distributed\
    \ systems have\nemerged to solve the issue of centralized system constraints.\
    \ The decentralized system relies\non servers that are supposed to store a copy\
    \ of the resources. Users in distributed systems\nhave equal access to data, yet\
    \ user rights can be enabled as necessary, and data ownership\ncan be shared efﬁciently.\
    \ Hardware and software resources are also allocated between\nusers, increasing\
    \ truthfulness, reducing component failure, and enhancing reliability.\nEC has\
    \ recently been introduced to provide intermediate devices between the data\n\
    generator and CC services. This reduces latency and provides efﬁcient bandwidth\
    \ uti-\nlization. However, due to their limited computing power and battery life,\
    \ mobile devices\nstruggle to provide these services. To this end, mobile edge\
    \ computing (MEC) solutions\nhave been employed to ameliorate the intensive computation\
    \ and ofﬂoading bottlenecks\nbetween end-nodes and centralized data servers [9].\
    \ They allow mobile devices to ofﬂoad\ntheir computation duties onto servers at\
    \ the edge of the IoT network, such as cellular BSs\nor access points. In contrast\
    \ to traditional CC, MEC servers can be close to end-users. As a\nresult, MEC\
    \ servers can deliver low latency and secure services, while saving energy for\n\
    mobile users.\nRecently, UAVs have been integrated as air–ground equipment to\
    \ fulﬁll the processing\nand storage needs at IoT network edges. As a promising\
    \ solution, they could provide ultra-\nlow latency support for latency-sensitive\
    \ applications, facilitate the distribution of big data\nprocessing and analysis,\
    \ improve the scalability and management of massive mobile con-\nnectivity, as\
    \ well as content caching and mobile delivery [10]. The advantage presented by\n\
    their ﬂexible mobility has facilitated the integration of UAVs with MEC services\
    \ to provide\nUAV-enabled MEC networks. UAV-enabled MEC is typically deployed\
    \ in unpredictable\nenvironments such as in wild, desert, and complex landscapes.\
    \ Furthermore, the computa-\ntion performance may be adapted based on the distance\
    \ that UAVs can smoothly control.\nThis combination of UAV technology with MEC\
    \ makes the system more advantageous\nand ﬂexible than traditional MEC systems,\
    \ which are constrained by high deployment\ncosts due to their ﬁxed architecture.\
    \ In addition, the integration of UAV-enabled MEC\nwith the most recent security\
    \ approaches, such as the blockchain structure, increases the\nsecurity level\
    \ [11]. The blockchain is a distributed ledger that gives a secure, immutable,\n\
    transparent, and trustworthy environment for the UAVs to store their data as a\
    \ transaction\nin a chain of blocks [12]. This is a viable solution to mitigate\
    \ the security and privacy issues\nrelated to UAV networks. Therefore, integrating\
    \ blockchain into UAVs ensures the MEC\nsystem’s trustworthiness with the additional,\
    \ advantageous features of automating data\ntransaction, decision-making, storage,\
    \ and veriﬁcation [13]. Therefore, UAVs can play a\ncrucial role in enabling MEC\
    \ capability in IoT applications. However, many critical issues\nhave yet to be\
    \ addressed to improve the performance of UAV-enabled MEC. Most of the\nimpairments\
    \ are related to drones as they are autonomous and battery-powered, with\nlimited\
    \ resources. Furthermore, given the broadcast nature of communications between\n\
    Drones 2021, 5, 148\n3 of 30\nground-based users and UAVs, many performance aspects\
    \ should be addressed, including\nsecurity, task ofﬂoading, energy consumption,\
    \ resource allocation, computing capacity, and\nuser latency performance under\
    \ various channel circumstances.\nSince this topic is revolutionary in the IoT\
    \ research ﬁeld, reviewing the current sci-\nentiﬁc achievements and technological\
    \ limitations of UAV-enabled MEC networks is of\nparamount importance. Furthermore,\
    \ the limits of existing surveys on UAV-enabled MEC\nin IoT applications have\
    \ motivated us to put forward a detailed review. This paper explores\nthe use\
    \ of UAVs in emerging IoT applications and the utility of both deep learning (DL)\n\
    and machine learning (ML) in UAV-enabled MEC systems. For instance, the authors\
    \ of [14]\nhave elaborated a review about the energy efﬁciency constraints related\
    \ to UAV-enabled\nMEC systems for IoT devices. Additionally, the authors of [15,16]\
    \ have presented a survey\nabout communication and networking technologies for\
    \ UAVs. The research work presented\nin [17] has addressed both fundamental and\
    \ recent advances of computation ofﬂoading\nin UAV-enabled MEC. However, only\
    \ a few of the challenges are mentioned in the above\nworks, including energy,\
    \ communication facilities, and limited resource allocation issues.\nIn this paper,\
    \ the most critical issues and challenges of UAV-enabled MEC based on AI are\n\
    accurately outlined and discussed.\nIndeed, there are several recent reviews about\
    \ the UAV-enabled MEC paradigm. How-\never, most of the previous reviews have\
    \ focused on UAV energy efﬁciency, communication\ntechnologies connecting various\
    \ UAVs, and computation ofﬂoading in UAV-enabled MEC.\nOur review considers a\
    \ more practical and recent scenario wherein massively generated\ndata need to\
    \ be processed and analyzed using AI algorithms for decision-making at the\nedge\
    \ of networks. This has not been considered in the previous works. Adopting AI\n\
    methods would affect all the requirements that have already been investigated,\
    \ such as\nenergy efﬁciency, communication technologies, processing capacity,\
    \ privacy and security,\nand the autonomy of UAV-enabled MEC. Almost all domains\
    \ are currently relying on AI\nto outperform the traditional systems and provide\
    \ decision-making systems. For instance,\nIndustry 4.0 has newly emerged as a\
    \ revolutionary paradigm in which intelligent and\nautonomous drones based on\
    \ AI would be the key element. However, the integration of\nautonomous UAVs based\
    \ on AI is not obvious in most practical cases. This is why UAV-\nenabled MEC\
    \ based on AI would enable many applications in the industry community to\ndeploy\
    \ their solutions, by cooperatively executing and processing the massive volumes\n\
    of conﬁdential data near the users at the edge of the network. Consequently, the\
    \ current\nreview highlights the most recent challenges and open issues of UAV-enabled\
    \ MEC based\non AI, considering their various architectures and applications.\
    \ We will discuss the most\nrecent related works on data processing at the edge,\
    \ based on AI, and their advantages and\ninconveniences regarding the UAV environment.\
    \ We will even emphasize the effect of AI\non energy efﬁciency, communication\
    \ technologies, processing capacity, and security when\nUAV-enabled MEC architecture\
    \ is considered. In addition, we propose a list of applications\nwith open issues\
    \ that have to be taken into account when considering a UAV-enabled MEC\narchitecture.\n\
    The rest of this paper is structured as follows. Section 2 gives an overview of\
    \ UAVs and\nhighlights some of their related applications. Section 3 focuses on\
    \ the possible opportunities\nenabled by UAVs, focusing on MEC servers. Section\
    \ 4 highlights the UAV-enabled MEC\nbased on AI. Section 5 lists signiﬁcant issues\
    \ and open research directions related to UAV-\nenabled MEC systems. Finally,\
    \ Section 6 presents a conclusion.\n2. UAV System Model\nRecently, there has been\
    \ an increase in customer demand for airborne intelligence\nmissions, which has\
    \ led to the design and development of various types of UAVs in various\nshapes\
    \ and ﬂight modes. This section highlights the different styles and characteristics\
    \ of\nUAVs and their application scenarios.\nDrones 2021, 5, 148\n4 of 30\n2.1.\
    \ UAVs Classiﬁcation\nDeploying a UAV network (known as swarms in IoT contexts)\
    \ is becoming a practical\nand necessary requirement for many applications. Various\
    \ UAVs are currently available\non the market, with distinctive features such\
    \ as supportable altitude, speed, and battery\nautonomy, for multiple applications.\
    \ Generally, the selection of any UAV model should\nfulﬁll many of the criteria\
    \ of the targeted application, such as QoS, energy capacity, envi-\nronmental\
    \ restrictions, and federal rules [18]. There are three types of UAVs: low-altitude\n\
    platforms (LAPs), high-altitude platforms (HAPs), and satellites. Since this work\
    \ focuses\non UAV-enabled MEC, UAVs are described based on many aspects.\nFigure\
    \ 1 categorizes UAVs into the LAPs category based on their type, size, range,\n\
    and type of rotors. Figure 2 shows the shape and form of three kinds of commercialized\n\
    UAVs: a rotary-wing drone (Figure 2a), a ﬁxed-wing drone (Figure 2b), and a ﬁxed\
    \ wing\nhybrid VTOL UAV (Figure 2c).\nautonomy, for multiple applications. Generally,\
    \ the selection of any UAV model should \nfulfill many of the criteria of the\
    \ targeted application, such as QoS, energy capacity, \nenvironmental restrictions,\
    \ and federal rules [18]. There are three types of UAVs: low-\naltitude platforms\
    \ (LAPs), high-altitude platforms (HAPs), and satellites. Since this work \nfocuses\
    \ on UAV-enabled MEC, UAVs are described based on many aspects.  \nFigure 1 categorizes\
    \ UAVs into the LAPs category based on their type, size, range, \nand type of\
    \ rotors. Figure 2 shows the shape and form of three kinds of commercialized \n\
    UAVs: a rotary-wing drone (Figure 2a), a fixed-wing drone (Figure 2b), and a fixed\
    \ wing \nhybrid VTOL UAV (Figure 2c). \nTypically, UAVs present unique characteristics,\
    \ being dynamic, agile, easy to repair, \neasy to deploy, and offering the potential\
    \ to provide various measurements wherever and \nwhenever required. They provide\
    \ a low-cost alternative for collecting and providing \ninformation to intelligent\
    \ systems that can undertake the necessary data analysis (e.g., \nreal-time image\
    \ or video analysis). UAVs will substantially promote the progress of \nfarming,\
    \ defense, insurance inspection, law enforcement, emergency assistance, pollution\
    \ \nmonitoring, disaster recovery, and package delivery. \nThe data are collected\
    \ remotely through controllable devices installed on UAVs, each \ntriggered via\
    \ the platform. The collected data are processed locally onboard the UAVs or \n\
    are offloaded to cloud servers, based on the required power. Deploying a practical\
    \ UAV-\nbased IoT framework requires an orchestrator platform that recognizes\
    \ various contextual \ninformation about UAVs, such as flight trajectories, IoT\
    \ equipment, and battery status. \n \nFigure 1. Classification of LAP UAVs. \n\
    \ \n \n(a) \n(b) \nLAP UAV classification\nSize\nMicro UAV\nMini UAV\nMedium \n\
    UAV\nLarge UAV\nRange\nMedium \nShort\nClose\nRotors\nTricopter\nQuadcopter\n\
    Hexacopter\nOctacopter\nLanding\nHTOL\nVTOL\nAerodynamics\nFixed wing\nFlapping\
    \ wing\nDucted fan\nMulti rotor\nType\nAircraft\nBalloon\nFigure 1. Classiﬁcation\
    \ of LAP UAVs.\nDrones 2021, 5, x FOR PEER REVIEW \n5 of 30 \n \n \n \n \n(a)\
    \ \n(b) \n \n(c) \nFigure 2. Examples of several types of UAV: (a) rotary-wing\
    \ drone, (b) fixed-wing drone, (c) fixed-\nwind hybrid vertical take-off and landing\
    \ (VTOL) drone (modified from [19]). \nTwo main UAV communication networks exist:\
    \ ad hoc UAV networks and UAV-\nassisted aided communication networks. The former\
    \ is characterized by a flexible \ntopology and self-organized architecture, while\
    \ the latter’s main feature comprises \nflexible scheduling at the edge side of\
    \ the network. \nUAVs can collect data massively by being equipped with sensors\
    \ of different sizes, \nforms, features, and capabilities. Many remote sensing\
    \ devices for airborne and satellite \nplatforms are now adopting miniature and\
    \ low-cost versions for UAV platforms, such as \nmultispectral, hyperspectral,\
    \ short/medium-wave range cameras (e.g., thermal imaging \ncamera), and light\
    \ LiDAR. Table 1 gives a list of the sensors and cameras integrated with \nFigure\
    \ 2. Examples of several types of UAV: (a) rotary-wing drone, (b) ﬁxed-wing drone,\
    \ (c) ﬁxed-\nwind hybrid vertical take-off and landing (VTOL) drone (modiﬁed from\
    \ [19]).\nTypically, UAVs present unique characteristics, being dynamic, agile,\
    \ easy to repair,\neasy to deploy, and offering the potential to provide various\
    \ measurements wherever\nand whenever required. They provide a low-cost alternative\
    \ for collecting and providing\ninformation to intelligent systems that can undertake\
    \ the necessary data analysis (e.g.,\nDrones 2021, 5, 148\n5 of 30\nreal-time\
    \ image or video analysis). UAVs will substantially promote the progress of\n\
    farming, defense, insurance inspection, law enforcement, emergency assistance,\
    \ pollution\nmonitoring, disaster recovery, and package delivery.\nThe data are\
    \ collected remotely through controllable devices installed on UAVs, each\ntriggered\
    \ via the platform. The collected data are processed locally onboard the UAVs\
    \ or\nare ofﬂoaded to cloud servers, based on the required power. Deploying a\
    \ practical UAV-\nbased IoT framework requires an orchestrator platform that recognizes\
    \ various contextual\ninformation about UAVs, such as ﬂight trajectories, IoT\
    \ equipment, and battery status.\nTwo main UAV communication networks exist: ad\
    \ hoc UAV networks and UAV-\nassisted aided communication networks. The former\
    \ is characterized by a ﬂexible topology\nand self-organized architecture, while\
    \ the latter’s main feature comprises ﬂexible schedul-\ning at the edge side of\
    \ the network.\nUAVs can collect data massively by being equipped with sensors\
    \ of different sizes,\nforms, features, and capabilities. Many remote sensing\
    \ devices for airborne and satellite\nplatforms are now adopting miniature and\
    \ low-cost versions for UAV platforms, such as\nmultispectral, hyperspectral,\
    \ short/medium-wave range cameras (e.g., thermal imaging\ncamera), and light LiDAR.\
    \ Table 1 gives a list of the sensors and cameras integrated with\nUAVs and their\
    \ usefulness for monitoring various applications. The characteristics and\nspeciﬁcations\
    \ of each type differ according to speciﬁcations. For example, the RGB camera\n\
    can be helpful for visual analysis, mapping and classifying objects and tracking\
    \ animals\nand people. Moreover, UAVs with lightweight thermal infra-red sensors\
    \ can deal with\ncomplex natural tracking such as monitoring volcanoes and forest\
    \ ﬁres, tracking animals,\nand in hydrothermal scientiﬁc studies.\nTable 1. Examples\
    \ of UAV onboard sensors and cameras.\nSensor/Camera\nUtility\nRef.\nRGB Camera\n\
    •\nVisual analysis\n•\nMapping\n•\nLanding\n•\nObject classiﬁcation\n•\nVehicle\
    \ detection\n•\nTracking animals and people\n[20]\nUAV LiDAR\n•\nVegetation canopy\
    \ analysis\n•\nEstimation of forest carbon\n•\nAbsorption\n•\nMapping cultural\
    \ heritage\n•\nBuilding information\n[21]\nHyperspectral sensors\n•\nLand cover/land\
    \ use mapping\n•\nVegetation indices estimation\n•\nBiophysical, physiological,\
    \ or biochemical parameter estimation\n•\nAgriculture and vegetation disease\n\
    •\nDetection, including disaster damage\n•\nAssessment\n[22]\nLightweight cameras\n\
    •\nVisual analysis, vegetation detection and analysis, crop monitoring\n•\nMining\n\
    •\nSoil moisture estimation, ﬁres\n•\nDetection, water level measurement\n•\n\
    Land cover/land use mapping\n[23]\nLightweight thermal infra-red sensors\n•\n\
    Tracking creatures\n•\nVolcanoes\n•\nDetection, including forest ﬁres\n•\nHydrothermal\
    \ studies, urban heat monitoring\n•\nIslands and hazardous area tracking\n[24]\n\
    Drones 2021, 5, 148\n6 of 30\n2.2. UAV-Enabled Services\nUAV technology’s appealing\
    \ ﬂexibility and mobility characteristics have drawn atten-\ntion in terms of\
    \ integration with other networks as a way to address various challenging\napplications.\
    \ UAVs can be a part of IoT networks, referred to as the Internet of Flying\n\
    Things (IoFT) [25]. The IoFT can improve the availability of IoT services in areas\
    \ with poor\ncommunication coverage and limited infrastructures. For instance,\
    \ UAVs can provide FC\nand EC services and cellular communications in rural or\
    \ developing regions and submarine\nenvironments. As a result, reaching hostile\
    \ and congested environments has become easier\nand faster, thus improving emergent\
    \ intervention wherever and whenever it is required.\nAs support to communication\
    \ networks, UAVs can be dispatched as peripheral nodes with\nvarious operating\
    \ units, such as ﬂying BSs, relay nodes, or end-node stations [7]. UAVs act\n\
    as relay/terminal nodes related to disconnected nodes, stabilizing communication\
    \ links\nin an ad hoc manner. A set of deployed UAVs can thereby form a ﬂying\
    \ ad hoc network\n(FANET), which is a subclass of the mobile ad hoc network (MANET)\
    \ [26].\nIn IoT networks, UAVs can potentially adopt many recent cellular and\
    \ non-cellular\nwireless communication networks to control the UAV on the one\
    \ hand, and to enhance\nthe coverage and latency services on the other. The most\
    \ prominent communication pro-\ntocols that can be used with UAVs are IEEE 802.11\
    \ (Wi-Fi), IEEE 802.16 (WiMax), IEEE\n802.15.4 (LRWPAN), cellular networks (3G/4G),\
    \ IEEE 802.15.1 (Bluetooth), LoRaWAN\n(LoRa), SigFox and narrowband IoT (NB-IoT)\
    \ [27–31]. Typically, the choice of communica-\ntion protocol depends on the desired\
    \ achievable throughput, power consumption, range,\nimplementation cost, reliability,\
    \ delay, and security. Grouped according to application\nrequirements, the characteristics\
    \ of the most-used communication protocols are presented\nin [32]. As described\
    \ in Table 2, there are various available communication protocols that\ncan be\
    \ used in UAV-enabled MEC. Each protocol is given a list of advantages and disad-\n\
    vantages regarding data rate, coverage, deployment cost, energy consumption, latency,\n\
    spectrum availability, and the number of supported users. Thus, the use of communication\n\
    technology depends literally on the application requirements.\nAlong with high\
    \ mobility and scalability, UAVs can offer many potential opportu-\nnities in\
    \ terms of enabling services such as pervasive connectivity, aerial intelligence,\n\
    self-maintenance capabilities for communications, and sensor deployment. Therefore,\n\
    UAVs act as airborne BSs [33], data collectors, relay nodes [34], jammers [35],\
    \ monitors [36],\nedge- and cloud computing servers [37], and power suppliers\
    \ [38] to support IoT applica-\ntions. These will extend network coverage and\
    \ provide diversiﬁed and ﬂexible intelligence\nfacilities for new potentialities\
    \ in modern IoT applications. In summary, as illustrated\nin Figure 3, UAVs can\
    \ facilitate a wide range of solutions in IoT applications. They can\nprovide\
    \ intelligent communications by establishing wireless networks in inaccessible\
    \ and\nhazardous environments; they also enable parallel intelligent areal services,\
    \ such as CC,\nEC, and LC.\nDrones 2021, 5, 148\n7 of 30\nTable 2. Characteristics\
    \ of the most-used communication technologies employed in UAV applications.\n\
    Protocol\nMax Data Rate\nMax Range\nDeployment Cost\nEnergy\nLatency\nSpectrum\n\
    Max Connectivity\nPros/Cons\nNB-IoT\nUL: 158.5 kbps\nDL: 106 kbps\n15 km\nHigh\n\
    (>15,000 $/BS)\nLow\n(3 µA rest,\nTx: 74–220 mA,\nRx: 46 mA)\n1.6 s\nLicensed\
    \ Sub-GHz\nMassive\n(>50,000 sensor\ndevices)\n+\nSupport remote healthcare monitoring,\n\
    +\nEnergy-efﬁciency\n+\nProvide fast, reliable network\n−\nHigh maintenance costs\n\
    −\nOperational cost since it is on the\nlicensed spectrum\n−\nCost of SIM card\
    \ purchase\n−\nNo mobility support\nLoRa\nLoRa CSS: 0.3–5 kbps\nFSK: 50 kbps\n\
    5 km\n(Urban) 15 km (Rural)\nHigh\n(100–1000 $/BS)\nVery Low\n(2 µA resting, 12\
    \ mA\nListening)\n>1 s\nSub-GHz ISM band\nMassive\n(40,000 sensor devices)\n+\n\
    Long communication range\n+\nEnergy efﬁciency\n+\nLow operational cost\n−\nLow\
    \ data reliability\n−\nInterference issue\n−\nHigh deployment cost\nSigFox\nUL:\
    \ 100/600 bps\nDL: 600 bps\n10 km (urban), 50 km\n(rural)\nHigh\n(>4000 $/BS)\n\
    Very Low\n10–100 mW\n(<0.01 mA resting, Tx:\n28 mA, Rx: 10.5 mA)\n10 s\nSub-GHz\
    \ ISM band\nMassive\n(40,000 sensor devices)\n+\nLong communication range\n+\n\
    Energy efﬁciency\n+\nLow operational cost\n−\nInterference issue\n−\nHigh deployment\
    \ cost\n−\nLow data reliability\n−\nNo mobility supports\n−\nLimited number of\
    \ messages per day\n(140 Message/day, 12 bytes/message)\nZigBee\n250 Kbps\n<1\
    \ km\nLow\n(1–5 $)\nHigh\n30 mA\n(3.16 µW–1 mW)\n−25 to 0 dBm\n15 ms\nISM\nModerate\n\
    (255)\n+\nFree license\n+\nThe node supports\n+\nFlexible architecture and ease\
    \ to install\n+\nSupport mesh networking\n+\nEasy to control and monitor\n−\n\
    Security issues\n−\nEnergy consumption\n−\nShort transmission distance\n−\nProne\
    \ to network interference due to the\nuse of 2.4 GHz band\nBluetooth\nIEEE 802.15.1\n\
    3 Mbps\n100 m\nLow\n(5–10 $)\nLow\n(1 W)\n1–10 mW\n0–10 dBm\n3 ms\nISM\n(2.4–2.4835\
    \ GHz)\nLow\n(Over 1000 in Bluetooth\nmesh networking)\n+\nFree of charge\n+\n\
    Simplicity\n−\nLow connectivity\n−\nEnergy consumption\n−\nShort coverage\n−\n\
    Security\nBLE\n2 Mbps\n240 m\nHigh\n(>25 $)\nLow\n(0.01–0.5 W)\n50 ms\nISM\n(2.4–2.5\
    \ GHz)\nLow\n+\nLow power consumption\n+\nFast Connection establishment\n+\nFree\
    \ of charge\n+\nReliable for small size data transfer,\nespecially in IoT\n−\n\
    Open to interception and attack\n−\nShort coverage\n−\nLimited data rates\nDrones\
    \ 2021, 5, 148\n8 of 30\nTable 2. Cont.\nProtocol\nMax Data Rate\nMax Range\n\
    Deployment Cost\nEnergy\nLatency\nSpectrum\nMax Connectivity\nPros/Cons\n5G/6G\n\
    1 Gbps (5G)\n>10 Gbps (6G)\n200 m\nHigh\n(>13,000 $)\nMedium\n1 ms (5G)\n0.1 ms\
    \ (6G)\nLicensed cellular\nMassive\n1 million/km2 (5G)\n10 million/km2 (6G)\n\
    +\nIncreased connectivity\n+\nLower latency\n+\nEnergy efﬁciency plans\n+\nAI\
    \ adoption\n−\nHigh deployment cost\n−\nSecurity and privacy issues\n−\nLimited\
    \ coverage\nWi-Fi\nIEEE 802.11\n11/54/300 Mbps\n7 Gbps\n250 m\n100 m\nHigh\n(100–1000\
    \ $ per BS)\nMedium\n>20 ms\nUnlicensed ISM\n(2.4–5 GHz)\nModerate\n(255)\n+\n\
    Mobility\n+\nCost\n+\nConvenience\n−\nRange\n−\nSecurity\n−\nReliability\nLTE\
    \ M (Rel13\nand Rel14)\n1 Mbps\n(LTE M Rel13)\n4 Mbps\n(LTE M Rel14)\n12 km\n\
    High\n(>5000 $)\nMedium\n>150 ms\nLicensed LTE frequency\nband\nMassive\n(20,000\
    \ sensor devices)\n+\nSupport remote healthcare monitoring,\n+\nEnergy efﬁciency\n\
    +\nProvide fast reliable network\n−\nLimited network capacity\nDrones 2021, 5,\
    \ 148\n9 of 30\np\ng\n[\n],\np\npp\n[\n]\npp\npp\nThese will extend network coverage\
    \ and provide diversified and flexible intelligence fa-\ncilities for new potentialities\
    \ in modern IoT applications. In summary, as illustrated in \nFigure 3, UAVs can\
    \ facilitate a wide range of solutions in IoT applications. They can pro-\nvide\
    \ intelligent communications by establishing wireless networks in inaccessible\
    \ and \nhazardous environments; they also enable parallel intelligent areal services,\
    \ such as CC, \nEC, and LC. \n \nFigure 3. UAV-enabled intelligent services in\
    \ IoT. \n2.3. UAV Applications \nDespite the strict restrictions on the civilian\
    \ usage of drones, they play a promotional \nrole in providing many facilities\
    \ and enhancements in different application scenarios. \nMoreover, with the rapid\
    \ development and emergence of new communication paradigms \nto achieve global\
    \ connectivity, drones will positively facilitate many intelligent features. \n\
    Table 3 shows a list of UAV applications in various domains, their advantages\
    \ and \ndisadvantages, and current research challenges. \n• \nAgriculture: \n\
    Drones have been used to monitor large agricultural fields to detect specific\
    \ diseases \nthat threaten the quality of plants at an early stage. The implemented\
    \ system can predict \nfarm diseases in real-time by exploiting image processing\
    \ and AI classification based on \nIoT architecture, using real-time data acquisition\
    \ [39]. In ref. [40], the authors have \nproposed an architecture combining UAVs\
    \ and wireless sensor networks (WSNs) with \nIoT approaches to provide precise\
    \ ecological agriculture. Another architecture for crop \nmapping monitoring and\
    \ disease assessment-based satellite imagery using the DL \napproach has been\
    \ proposed to analyze the images acquired through UAV airborne \nmultispectral\
    \ sensors [41]. Additionally, UAVs can efficiently enhance the productivity of\
    \ \nfarming activities, as referenced in [42–44]. In addition, UAVs play an exciting\
    \ role in crop \nmonitoring by facilitating many tasks previously restricted to\
    \ the laborer and farmer [45–\n47]. \n• \nIndustry 4.0: \nUAV\nIntelligent communications\n\
    Communications\nNetworks\nApplication layer\nIntelligent aerial services \nLC\n\
    EC\nCC\nFigure 3. UAV-enabled intelligent services in IoT.\n2.3. UAV Applications\n\
    Despite the strict restrictions on the civilian usage of drones, they play a promotional\n\
    role in providing many facilities and enhancements in different application scenarios.\n\
    Moreover, with the rapid development and emergence of new communication paradigms\n\
    to achieve global connectivity, drones will positively facilitate many intelligent\
    \ features.\nTable 3 shows a list of UAV applications in various domains, their\
    \ advantages and disad-\nvantages, and current research challenges.\n•\nAgriculture:\n\
    Drones have been used to monitor large agricultural ﬁelds to detect speciﬁc diseases\n\
    that threaten the quality of plants at an early stage. The implemented system\
    \ can predict\nfarm diseases in real-time by exploiting image processing and AI\
    \ classiﬁcation based on IoT\narchitecture, using real-time data acquisition [39].\
    \ In ref. [40], the authors have proposed an\narchitecture combining UAVs and\
    \ wireless sensor networks (WSNs) with IoT approaches to\nprovide precise ecological\
    \ agriculture. Another architecture for crop mapping monitoring\nand disease assessment-based\
    \ satellite imagery using the DL approach has been proposed\nto analyze the images\
    \ acquired through UAV airborne multispectral sensors [41]. Addi-\ntionally, UAVs\
    \ can efﬁciently enhance the productivity of farming activities, as referenced\n\
    in [42–44]. In addition, UAVs play an exciting role in crop monitoring by facilitating\
    \ many\ntasks previously restricted to the laborer and farmer [45–47].\n•\nIndustry\
    \ 4.0:\nThe increasing demand for fast and low-cost productivity has encouraged\
    \ the indus-\ntrial and research communities to incorporate robotics into the\
    \ industrial process. UAVs\nhave recently attracted the attention of industrial\
    \ solution providers in response to the\nincreased need for productivity; for\
    \ instance, the authors proposed an industrial IoT-based\nsystem that collects\
    \ data by a UAV camera and sends it to a cloud server for process-\ning [48].\
    \ The design aims to monitor the industrial zone to prevent undesirable incidents\n\
    in the production process, relying on the robust intelligence of computer vision\
    \ (CV) ap-\nproaches [49,50]. The mining industry has also increased the level\
    \ of interest in drones for\n3D mapping, mine safety, and mine management [51].\n\
    •\nEnvironment:\nUAVs are being adopted as a means to monitor and survey various\
    \ environmental\nareas. They can be used for the monitoring and data aggregation\
    \ of archeological sites. For\nexample, the authors of [52] have reported that\
    \ UAVs can present accurate and precise\nimages of the studied archeological space,\
    \ compared to terrestrial measurements. UAV\nDrones 2021, 5, 148\n10 of 30\ntechnologies\
    \ can also be deployed in ecological monitoring systems to track wildlife in\n\
    heterogeneous territories and topographically challenging areas as a supporting\
    \ platform\nfor traditional techniques [53]. Besides, this technology may facilitate\
    \ geological researchers\nwhen collecting remote data about many species and animals\
    \ [54]. Moreover, the authors\nof [55] proposed an intelligent model based on\
    \ UAV, dedicated to monitoring several types\nof plants using the latest computer\
    \ vision algorithms and cloud computing technologies.\nUAVs are also used to track\
    \ wild animals over large areas [56].\n•\nHealth and emergency:\nDrones can offer\
    \ several beneﬁts for public health emergencies, for instance, tackling\nepidemics\
    \ and contagious diseases such as COVID-19. For instance, during the COVID-19\n\
    pandemic, some governments and countries adopted drones to survey the rapid spread\n\
    of the virus, diagnose patients, and then predict the mortality risk factor by\
    \ applying AI\napproaches to the collected data. The drones have been used to\
    \ observe crowds, broadcast\ncritical public announcements and information, spray\
    \ disinfectants, and carry out extensive\ntemperature measurements in several\
    \ residential areas [57]. Additionally, the lifeguard\ncommunity uses UAVs for\
    \ search and rescue missions requiring rapid intervention. Their\nversatility\
    \ also allows obtaining a quick overview of the rescue situation instead of using\n\
    human-crewed airplanes that may take extra time to deploy [58]. Relying on UAV-enabled\n\
    MEC, AI, and CV schemes could lead to new applications that simulate visual reality,\n\
    thus enabling faster and real-time decisions in emergency interventions. For instance,\n\
    UAVs typically detect obstacles by ﬂying over them, gathering data, extracting\
    \ the most\nprominent features, and making decisions based on machine vision and\
    \ pattern recognition\ntechnologies. In this manner, people with visual impairments\
    \ can maneuver comfortably.\nThis technology is expected to be a key solution\
    \ in the healthcare revolution [58].\n•\nSmart cities and smart homes:\nThe urban\
    \ environment is expected to acquire a massive number of dynamically\nconnected\
    \ devices due to diverse activities wherein UAVs as mobile vehicles will have\
    \ many\npivotal roles, including real-time trafﬁc control [59], transportation\
    \ [60], infrastructure\ncontrol and management [61], and buildings observation\
    \ [62]. Accordingly, UAVs are\nexpected to provide communication services to heterogeneous\
    \ smart devices in urban\nareas, to improve the smart city from application perspectives\
    \ [63]. For example, the\nauthors of [64] have proposed an architecture for 5G\
    \ hierarchical IoT networks where the\nUAVs play a fundamental role as a data\
    \ fusion center, formation controller, and network\ngateway. In another context,\
    \ UAVs were used to perform lightweight parts delivery to\nworkstation operators\
    \ within a manufacturing plant, where GPS could not provide a\npractical solution\
    \ for indoor positioning, in addition to intelligent shipping, intelligent\nmonitoring,\
    \ and intelligent control [65].\n•\nNatural disaster tracking:\nDuring natural\
    \ disasters, a rapid and effective response is required to assist the popu-\n\
    lation, avoid increasing the number of victims, and minimize the economic impact.\
    \ UAVs\ncan respond quickly to earthquake help requests, ﬁnd missing people, and\
    \ facilitate the\nmonitoring and rescue of victims in danger of drowning during\
    \ ﬂoods [66,67]. Collecting\na large amount of data from different sensors deployed\
    \ in the environment, using UAV-\nenabled MEC with AI algorithms, can help to\
    \ rapidly predict and intervene in natural\ndisasters such as tornadoes, volcanic\
    \ eruptions, tsunamis, and storms.\n•\nConstruction:\nUAV-enabled MEC and computer\
    \ vision techniques are promising solutions for the\ncondition assessment of civilian\
    \ and public infrastructures. UAVs are being used increas-\ningly in many construction\
    \ tasks, such as building inspections [68], building condition\nmonitoring, damage\
    \ assessments of buildings after disasters [69], public site surveying\nand mapping\
    \ [70], safety inspections of construction sites and workers, and monitoring\n\
    the progress of construction [71].\nDrones 2021, 5, 148\n11 of 30\nTable 3. Comparative\
    \ study of UAV application objectives.\nApplication Domains\nObjectives\nPros/Cons\n\
    Future Insights\nRef.\nAgriculture/Precision agriculture\n\x13\nOptimizing spraying\
    \ process\n\x13\nCrop monitoring\n\x13\nCrop maturity monitoring\n\x13\nDetection\
    \ and prediction of various\ncrop diseases\n\x13\nIrrigation management\n\x13\n\
    Artiﬁcial pollination\n\x13\nGreenhouse temperature and humidity\nmonitoring\n\
    \x13\nWater assessment\n+\nBasic knowledge and skills are required to\noperate\n\
    +\nUAVs with greater capabilities cost more\n−\nWeather conditions limit the utilization\n\
    of UAVs\n−\nLimited energy of drones\n\x13\nMulti-UAV integration\n\x13\nDifﬁcult\
    \ to ﬂy in harsh conditions\n\x13\nEnergy efﬁciency\n\x13\nUAV-based autonomous\
    \ decisions\n\x13\nAutonomous decision-making based on DL\n\x13\nShort-range coverage\
    \ of BLE-enabled UAVS\n(100 m)\n\x13\nInterference (Wi-Fi, Zigbee, and regular\n\
    Bluetooth technologies)\n\x13\nInteroperability with new raised\ncommunication\
    \ technologies\n\x13\nMore work on using AI to model crop growth\nand disease\
    \ management is expected based on\non-farm and meteorological data\n\x13\nWhen\
    \ developing laws and regulations for IoT\nin agriculture, the involvement of\
    \ the\ngovernment or agricultural department must\nbe assured\n\x13\nMore effort\
    \ should be addressed to enhance\nreal-time monitoring features\n[72]\nIndustry/Construction\n\
    \x13\nMining industry (surface mining, underground\nmines, abandoned mines)\n\x13\
    \nRegular (e.g., monthly) routines and control of\nsafety and risk management\n\
    \x13\nStrategic planning\n+\nEasy to control\n+\nFast and real-time intervention\n\
    −\nThe battery life limits the ﬂying time of drones.\n−\nCoexistence of obstacles\
    \ in underground mines\n−\nHumidity or water leakage damage the\nelectronic components\n\
    −\nBattery issues\n\x13\nMore effort should be addressed to the design\nand structure\
    \ of UAVs dedicated to\nunderground environments\n\x13\nApplying ML techniques\n\
    \x13\nReal-time processing of drone photos, recorded\nmovies, and efﬁcient data\
    \ collection algorithms\n\x13\nEnhance the security through blockchain\n[51]\n\
    Environment/Natural disasters\n\x13\nMonitoring, forecasting, early warning systems\n\
    \x13\nDisaster information fusion\n\x13\nSearch and rescue missions\n\x13\nDamage\
    \ assessment\n\x13\nStandalone communication systems\n+\nReducing cost and economic\
    \ losses\n+\nFast intervention\n+\nEasy to install\n−\nBad weather conditions\n\
    −\nLimited battery\n−\nLimited ﬂying time\n\x13\nData fusion and handover issues\n\
    \x13\nImprove the UAV localization systems\n\x13\nDesign efﬁcient schemes for\
    \ UAVs\n[32]\nDrones 2021, 5, 148\n12 of 30\nTable 3. Cont.\nApplication Domains\n\
    Objectives\nPros/Cons\nFuture Insights\nRef.\nSmart cities\n\x13\nUrban security\
    \ management\n\x13\nTrafﬁc and crowd management\n\x13\nCivil security control\
    \ (smart home)\n\x13\nMobile processing units\n\x13\nNatural disaster monitoring\n\
    \x13\nHealth emergencies\n\x13\nUsed to maintain connectivity\n+\nEnhance energy\
    \ efﬁciency of IoT devices on the\nground in intelligent cities\n+\nDelivering\
    \ collected data in real-time\n+\nEnhancing the quality of life\n+\nReducing cost\
    \ and economic losses\n+\nLow latency services (fog-computing architecture)\n\
    −\nDrone equips many different IoT devices,\nwhich affect processing services\
    \ and energy\n\x13\nBig data processing issues\n\x13\nEthical and privacy\n\x13\
    \nLicensing and legislations\n\x13\nDevelopment of automated image data\ncompression\
    \ algorithms,\n\x13\nDevelopment of a network-centric infrastructure\n\x13\nPrecision\
    \ ﬂying should be improved under all\nweather conditions\n\x13\nCommunication\
    \ constraints\n\x13\nSecurity threats should be addressed by using\nnew emerged\
    \ technologies (i.e., blockchains)\n\x13\nApplying ML techniques between edge/fog\n\
    computing (drone) and the IoT cloud\n\x13\nReal-time processing of swarms of drones’\n\
    photos, recorded movies, and data collection\nnecessitates implementing and designing\n\
    efﬁcient power-distributed algorithms\n[72]\nLogistics and Transportation\n\x13\
    \nFood delivery services\n\x13\nDelivery of ofﬁcial documents\n\x13\nDelivery\
    \ of lightweight commercial products\n+\nFaster delivery of food\n+\nFaster response\n\
    −\nData security on the transmission line\n−\nDrones’ batteries are limited\n\x13\
    \nAir trafﬁc control\n\x13\nBad weather conditions\n\x13\nLiability insurance\n\
    \x13\nLegislations\n\x13\nNavigation system should be developed to\nenable autonomous\
    \ ﬂying of UAVs\n\x13\nLimited ﬂight time\n\x13\nEquations of motion\n[73]\nWireless\
    \ and cellular systems\n\x13\nProvide aerial wireless BSs\n\x13\nUsed to maintain\
    \ connectivity\n\x13\nEnable cellular communications\n+\nLow cost and no signiﬁcant\
    \ infrastructure\nare required\n+\nAllows on-demand communication\n+\nPossibility\
    \ of coverage and network\ncapacity enhancement\n+\nIoT support\n+\nEnhancing\
    \ the performance of delivering\ncommunication services\n+\nMaintaining QoS\n\
    −\nBattery limitation\n−\nInterference\n−\nInteroperability\n\x13\nEnergy limitation\
    \ of the UAVs\n\x13\nChannel modeling and interference\nmanagement\n\x13\nThe\
    \ autonomy and self-control of drones can\nbe improved\n\x13\nFlight time constraints\n\
    \x13\nPerformance analysis under mobility\nconsiderations\n\x13\nSpectrum sharing\
    \ with cellular networks\n\x13\nMobile edge computing with UAV-BSs requires\n\
    more research efforts to enhance its applicability\n[3]\nDrones 2021, 5, 148\n\
    13 of 30\n•\nWireless and cellular networks:\nMany efforts have been dedicated\
    \ to harnessing the full potential of UAV communi-\ncations for cellular and wireless\
    \ communications in the networks industry. The research\ncommunity explored the\
    \ opportunity of UAV-mounted utilization via ﬂying relays and BSs\nthat can dynamically\
    \ reposition themselves to boost network coverage, increase spectral\nefﬁciency,\
    \ and improve user QoS. The UAVs enable low-altitude supports beyond line-of-\n\
    sight (LOS) control and reliable communications [72]. Furthermore, UAVs can bring\
    \ many\nfacilities to cellular IoT-based networks by providing processing facilities\
    \ near the ground\nfor users.\n2.4. UAV-Enabled and -Assisted MEC Architecture\n\
    Centralized networks are easy to maintain because they have just one point of\
    \ failure.\nHowever, due to the instability of the system categories, this design\
    \ is insufﬁcient to\nrespond to ubiquitous applications. A single issue affecting\
    \ the core server might destroy\nthe entire system. Unlike centralized networks,\
    \ distributed networks are deemed more\nstable due to their decentralized architecture,\
    \ since the entirety of the information system\nis dispersed among a vast number\
    \ of nodes that maintain similar conditions. This feature\nimproves distributed\
    \ system security by making it challenging to target many users.\nFurthermore,\
    \ blockchain is a peer-to-peer (P2P) distributed ledger that provides a\nsecure,\
    \ immutable, transparent, and trustless environment due to its distributed architec-\n\
    ture. Integrating this approach with UAVs allows them to record their data in\
    \ the chain of\nblocks as a transaction, ensuring their trustworthiness [74].\
    \ The essential foundations of\nblockchain technology are intelligent contracts\
    \ and consensus mechanisms. This method\neliminates the requirement for a trusted\
    \ third-party system to protect data privacy since\nconsensus techniques maintain\
    \ data integrity. The use of cryptographic methods guaran-\ntees that data on\
    \ blockchains are secure. These exciting blockchain characteristics increase\n\
    the applicability of UAVs in a variety of civil and mission-critical applications\
    \ that use\nUAV-enabled MEC architecture. Moreover, distributed systems outperform\
    \ centralized\nsystems in terms of network speed, since the information is not\
    \ stored in a central lo-\ncation, and the number of users attempting to access\
    \ a server is more signiﬁcant than\nthe server can support, causing long waiting\
    \ times and slowing down the system for\ndecentralized architecture.\nMoving all\
    \ computing activities to the cloud has proven an effective mechanism to\nprocess\
    \ data since the cloud offers greater processing capacity than network edge devices.\n\
    However, data-processing speeds have risen rapidly due to the size of communicated\
    \ data\nand the networks’ bandwidth. Therefore, CC suffers from bottlenecks due\
    \ to the massive\nvolume of data generated in real time. Cameras in UAVs capture\
    \ a tremendous amount\nof video data, which the system should process in real-time\
    \ to enable good decision-\nmaking. Sending data from UAVs to the cloud server\
    \ would mostly result in longer\ndelays. Deploying a large number of IoT devices,\
    \ such as UAVs, would restrict bandwidth,\nreliability and security. Therefore,\
    \ processing data at the network edge would yield shorter\nresponse times, more\
    \ efﬁcient processing, and less pressure on the network.\nMEC is widely acknowledged\
    \ as a vital technology to implement many methods for\nnext-generation IoT applications.\
    \ Due to their versatility and ease of deployment, UAVs\ncan play various roles\
    \ in delivering edge computing services. UAV-enabled MEC designs\ncan be classiﬁed\
    \ and dedicated to a speciﬁc application scenario. A UAV can be considered\nas\
    \ a mobile EC server, an IoT node, or a relay. Firstly, UAVs can participate in\
    \ the system as\nmobile devices when they ofﬂoad their computing to an MEC server.\
    \ Secondly, the UAV\ncan act as the MEC responsible for monitoring a group of\
    \ mobile end nodes. Thirdly, the\nUAV can serve as a relay or gateway between\
    \ mobile end nodes and an MEC server.\nThe UAV may be regarded as a speciﬁc user\
    \ that could ofﬂoad those computing tasks\nexceeding its memory and processing\
    \ capacity to a MEC server, as shown in Figure 4a.\nUAVs typically have limited\
    \ battery capacity and insufﬁcient memory and computing\npower to execute complex\
    \ computational tasks. As a result, ofﬂoading their processing to\nDrones 2021,\
    \ 5, 148\n14 of 30\nthe ground MEC server for computation may increase its battery\
    \ life. In another situation,\nas shown in Figure 4b, the UAV may keep the MEC\
    \ server on board and ﬂy to assist the\nground-based users with the task of computing\
    \ once the ground-based users ofﬂoad their\ncomputation responsibilities to the\
    \ latter. In the third scenario depicted in Figure 4c, the\nUAV serves as a central\
    \ relay, assisting mobile users to ofﬂoad their computing tasks to a\nspeciﬁc\
    \ MEC server.\nDrones 2021, 5, x FOR PEER REVIEW \n13 of 29 \n \nground-based\
    \ users with the task of computing once the ground-based users offload their \n\
    computation responsibilities to the latter. In the third scenario depicted in\
    \ Figure 4c, the \nUAV serves as a central relay, assisting mobile users to offload\
    \ their computing tasks to a \nspecific MEC server. \n \nFigure 4. UAV-enabled\
    \ architecture. \nDespite the substantial benefits afforded by the architecture\
    \ of UAV-enabled MECs \nto provide low latency and high-reliability services to\
    \ IoT devices, numerous challenges \nremain. These challenges are found in intra-UAV\
    \ communication, UAV security, air data \nsecurity, data storage, and management.\
    \ Moreover, the coordination between UAVs and \nground-based users requires considerable\
    \ improvement due to the system’s mobility \ncharacteristics, which complicate\
    \ communication. Another significant limitation of UAVs \nis found in their low\
    \ onboard battery capacity. In addition to the energy spent in hovering, \naccelerating/decelerating,\
    \ and climbing up/down, additional energy is consumed due to \nonboard computations.\
    \ Therefore, designing efficient methods for resource and energy \nmanagement\
    \ is urgently required. \nFurthermore, one of the major design problems regarding\
    \ computation task \nrequirements is the joint trajectory design in UAV-enabled\
    \ MEC networks. In this regard, \nresearch efforts should emphasize how to forecast\
    \ mobile user movement and follow the \ntrajectory so that computing activities\
    \ can be offloaded quickly, and computation results \nmay be sent back to users\
    \ on time. The trajectory design is especially challenging when \ndealing with\
    \ multi-UAV-enabled MEC services. Another challenge is found in the \nintegration\
    \ of the blockchain into UAVs. As standalone technologies, UAVs face many \nchallenges\
    \ such as privacy issues, air traffic violations, quantum attacks, ML, and \n\
    algorithmic game-theory-based attacks [13]. \n3. UAV-Enabled and Assisted MEC\
    \ State of the Art \nThe rapid spread of smart devices has led to intensive computation\
    \ in many \napplications, such as virtual reality, face and object recognition,\
    \ and automatic driving. \nThis poses a severe challenge when intelligent devices\
    \ with limited computing and energy \nresources need to perform the required tasks\
    \ locally [75]. CC can be considered as an \nexpensive solution to overcome these\
    \ impairments. In addition, the CC solution suffers \nfrom high communication\
    \ expenses and high transmission delays due to the core \nFigure 4. UAV-enabled\
    \ architecture.\nDespite the substantial beneﬁts afforded by the architecture\
    \ of UAV-enabled MECs\nto provide low latency and high-reliability services to\
    \ IoT devices, numerous challenges\nremain. These challenges are found in intra-UAV\
    \ communication, UAV security, air data\nsecurity, data storage, and management.\
    \ Moreover, the coordination between UAVs and\nground-based users requires considerable\
    \ improvement due to the system’s mobility\ncharacteristics, which complicate\
    \ communication. Another signiﬁcant limitation of UAVs\nis found in their low\
    \ onboard battery capacity. In addition to the energy spent in hovering,\naccelerating/decelerating,\
    \ and climbing up/down, additional energy is consumed due to\nonboard computations.\
    \ Therefore, designing efﬁcient methods for resource and energy\nmanagement is\
    \ urgently required.\nFurthermore, one of the major design problems regarding\
    \ computation task require-\nments is the joint trajectory design in UAV-enabled\
    \ MEC networks. In this regard, research\nefforts should emphasize how to forecast\
    \ mobile user movement and follow the trajectory\nso that computing activities\
    \ can be ofﬂoaded quickly, and computation results may be sent\nback to users\
    \ on time. The trajectory design is especially challenging when dealing with\n\
    multi-UAV-enabled MEC services. Another challenge is found in the integration\
    \ of the\nblockchain into UAVs. As standalone technologies, UAVs face many challenges\
    \ such as pri-\nvacy issues, air trafﬁc violations, quantum attacks, ML, and algorithmic\
    \ game-theory-based\nattacks [13].\n3. UAV-Enabled and Assisted MEC State of the\
    \ Art\nThe rapid spread of smart devices has led to intensive computation in many\
    \ appli-\ncations, such as virtual reality, face and object recognition, and automatic\
    \ driving. This\nposes a severe challenge when intelligent devices with limited\
    \ computing and energy\nDrones 2021, 5, 148\n15 of 30\nresources need to perform\
    \ the required tasks locally [75]. CC can be considered as an\nexpensive solution\
    \ to overcome these impairments. In addition, the CC solution suffers\nfrom high\
    \ communication expenses and high transmission delays due to the core network’s\n\
    involvement. To this end, some prominent alternatives have been proposed to explore\
    \ the\nlatency delay, including recalling the computation resources from the cloud\
    \ to the edge of\nthe network.\nAs an extension of the edge concept, recently,\
    \ MEC was intensively investigated.\nMEC can bring information technology (IT)\
    \ services and cloud-computing capabilities\nto a mobile network, guaranteeing\
    \ ultra-low delays and offering high bandwidth to the\nuser [76]. UAVs can be\
    \ embedded with lightweight CPUs (central processing units) or\nGPUs (graphics\
    \ processing units) to offer computation services. Therefore, UAVs ﬂy MEC\nservers\
    \ in the sky, offering controllable mobility and high-quality communication links,\n\
    supplying the existing MEC servers on the ground. In this regard, we summarize\
    \ the\nstate-of-the-art situation regarding UAVs’ possibilities as MEC enablers\
    \ or as part of a\nMEC system in an IoT environment where end-nodes and actuators\
    \ cannot deal with the\ngenerated data onboard.\nThe research on UAV-enabled MEC\
    \ or UAV-assisted MEC is in its early phases, includ-\ning using the fog and edge\
    \ computing concepts instead of cloud computing to enhance\nlatency and computation\
    \ performances in IoT users. A summary of related research activi-\nties regarding\
    \ UAV opportunities as an MEC enabler or as part of a MEC system in the IoT\n\
    is listed and highlighted in Table 4.\nTable 4. UAV-enabled MEC and assisted MEC\
    \ research activities.\nRef.\nYear\nEvaluated Performance Metrics\nSummary\n[77]\n\
    2021\n•\nCommunication security issue\nin the dual-UAV-MEC system\nA secure communication\
    \ mechanism was created, dedicated to the\ndual-UAV-MEC system. The main objective\
    \ of this task was to\nmaximize the user’s security and computing capacity by\
    \ optimizing\nthe resources and trajectory of the UAV server. The authors relied\
    \ on\nmathematical techniques, including the sequential convex\napproximation\
    \ (SCA) and block coordinate descent (BCD) algorithms\nto enhance UAV-enabled\
    \ MEC security and computing capacity.\n[37]\n2020\n•\nComputation ofﬂoading\n\
    A hybrid DL and fuzzy c-means clustering-based algorithms were\nproposed to predict\
    \ the positions of ground-based users and UAVs in\na hybrid MEC (H-MEC) network.\
    \ As a result, IoT devices can\nefﬁciently ofﬂoad their intensive tasks to the\
    \ UAV servers.\n[78]\n2020\n•\nComputation ofﬂoading\n•\nLatency\nThe authors\
    \ proposed an intelligent task-ofﬂoading algorithm (iTOA)\nfor UAV-enabled MEC\
    \ services. The proposed approach intelligently\nperceives the network’s environment\
    \ and decides the ofﬂoading\naction using the deep Monte Carlo tree algorithm.\
    \ This method\noutperforms game theory and greedy search-based methods in\nlatency\
    \ performance.\n[79]\n2021\n•\nComputation ofﬂoading\n•\nLatency\nUAVs were adopted\
    \ in 5G mobile networks to reduce the end-to-end\nlatency and improve communication\
    \ reliability. Using UAVs with\nMEC has provided effective trafﬁc management,\
    \ resulting in\ndecreased latency and better ofﬂoading operations.\n[80]\n2021\n\
    •\nEnergy\nA novel system called GEESE was proposed to provide computation\nservices\
    \ on the network’s edge by integrating cloudlets on multiple\naerial UAVs. The\
    \ system performance has been investigated to\nunderstand the relationship between\
    \ energy efﬁciency and\ncomputation task ofﬂoading.\nDrones 2021, 5, 148\n16 of\
    \ 30\nTable 4. Cont.\nRef.\nYear\nEvaluated Performance Metrics\nSummary\n[81]\n\
    2021\n•\nEnergy\n•\nComputation handling for\ninnovative logistic applications\n\
    The energy management of UAV-enabled MEC was investigated in\nthe context of a\
    \ realistic autonomous delivery network. A\ncomputational management solution\
    \ was designed explicitly for\nMEC-based task ofﬂoading and scheduling strategies.\
    \ The integrated\nsolution includes both static task ofﬂoading and dynamic resource\n\
    scheduling. The experimental results have revealed that the system\ncan handle\
    \ a greater UAV payload while using less energy.\n[82]\n2021\n•\nEnergy consumption\n\
    The authors addressed the issue of the energy consumption of IoT\ndevices in UAV-enabled\
    \ MEC networks. The energy and ofﬂoading\nrequirements have been improved by optimizing\
    \ the UAV trajectory\nplanning, communications, and computing resource allocation.\n\
    [83]\n2020\n•\nEnergy consumption\n•\nTrajectory planning for UAVs\nA UAV-assisted\
    \ MEC system, in which the UAVs acts as edge servers,\nwas designed to provide\
    \ computing services for IoT devices. The\nproposed approach is based on a k-means\
    \ clustering algorithm to\nminimize the energy consumption of the system by planning\
    \ the\ntrajectories of UAVs efﬁciently.\n[84]\n2020\n•\nEnergy consumption\nThe\
    \ Lagrangian duality method and successive convex\napproximation techniques were\
    \ proposed to reduce UAV-assisted\nMEC computational complexity. The proposed\
    \ approach aimed to\nminimize total energy consumption, including\ncommunication-related\
    \ energy, computation-related energy, and\nUAV energy. This was achieved by optimizing\
    \ bits allocation,\ntime-slot scheduling, power allocation, and UAV trajectory\
    \ design.\n[85]\n2019\n•\nEnergy consumption\n•\nBandwidth allocation\nThe authors\
    \ proposed a UAV-enabled MEC architecture in which the\nUAVs were considered as\
    \ MEC servers. The objective of this\napproach was to minimize the energy consumption\
    \ of both UAV and\nground-based users by scheduling computation resources and\n\
    optimizing the UAV trajectories.\n[86]\n2019\n•\nEnergy consumption\n•\nTime slot\
    \ allocation\n•\nComputation tasks\nThe authors have investigated a UAV-enabled\
    \ MEC system based on\nthe time division multiple access (TDMA) model. A TDMA-based\n\
    scheme was proposed to minimize the user’s energy consumption by\noptimizing the\
    \ UAV coordinates, time-slot allocation, and\ntask partitioning.\n[87]\n2020\n\
    •\nEnergy consumption\n•\nMEC deployment\nA two-layer optimization method was\
    \ provided to address\ndeployment and task-planning issues in a UAV-enabled MEC\
    \ system.\nThis approach proved efﬁcient for power consumption optimization.\n\
    The proposed method was based on a differential evolution\nalgorithm with a removal\
    \ agent.\n[88]\n2021\n•\nEnergy minimization\n•\nUAV trajectory optimization\n\
    A multi-UAV architecture was proposed in which the UAVs act as\ncomputer servers\
    \ to process the ground-based user’s data and to\nminimize energy consumption.\
    \ In this approach, a two-layer strategy\nwas used to optimize the UAV’s task\
    \ scheduling based on dynamic\nscheduling-based bidding, whereas the second layer\
    \ addressed bits\nallocation and the UAV’s ﬂight path.\n[89]\n2021\n•\nEnergy\
    \ optimization\n•\nTasks ofﬂoading\nUAV-enabled MEC architecture based on the\
    \ Markov decision\nprocess (MDP) was proposed to optimize mobile users’ energy\n\
    demands and task ofﬂoading. In this work, the UAVs were\nconsidered intelligent\
    \ mobile users.\n[90]\n2020\n•\nEnergy-saving\n•\nTask ofﬂoading\nAn algorithm\
    \ based on block coordinate descent and successive\nconvex approximation techniques\
    \ was proposed to optimize data\nofﬂoading. By considering a single UAV, the proposed\
    \ system\nimproved the tasks of ofﬂoading and energy consumption.\nDrones 2021,\
    \ 5, 148\n17 of 30\nTable 4. Cont.\nRef.\nYear\nEvaluated Performance Metrics\n\
    Summary\n[91]\n2020\n•\nLatency\nA UAV-assisted MEC method was proposed, in which\
    \ the UAVs\nacted as intermediate devices between the ground-based users and\n\
    MEC servers. This method leveraged airborne computing and\nstorage facilities\
    \ to minimize the execution time of ofﬂoaded tasks for\nIoT users. Therefore,\
    \ the task scheduling and ﬂight path of the UAVs\nwere jointly optimized.\n[92]\n\
    2020\n•\nLatency\n•\nOfﬂoading tasks\n•\nSecurity\nThe authors proposed a low-complexity\
    \ iterative algorithm to\noptimize security and privacy, subject to latency, offloading,\
    \ and energy\nconstraints. This method was proposed to optimize the UAV location,\n\
    the user’s transmission power, UAV jamming power, offloading ratio,\nUAV computing\
    \ capacity, and offloading user association.\n[93]\n2018\n•\nLatency\n•\nReliability\n\
    •\nComputation\nAn air/ground framework for MEC was proposed to combine the\n\
    capabilities of ground vehicles with UAVs in terms of\ncommunication, computing,\
    \ and storage.\n[11]\n2020\n•\nLimited ofﬂoading tasks\nAn automatic ofﬂoading\
    \ approach based on the MEC architecture\nhas been proposed to deal with the limited\
    \ processing capabilities of\nMEC servers and ground-based users. The UAVs have\
    \ been used to\ncache the generated data from the IoT devices and then send it\
    \ to the\nMEC servers, which operate in a private blockchain network.\n[94]\n\
    2017\n•\nNetwork connectivity\nA UAV-based MEC infrastructure was proposed to\
    \ improve the\nnetwork connectivity in uncovered areas. The system helped terrestrial\n\
    users to compute their tasks in circumstances such as natural\ncatastrophes or\
    \ in rural locations without communication coverage.\n[95]\n2019\n•\nOfﬂoading\
    \ tasks\n•\nQoS\nUAVs were used as MEC-aided systems in wireless communication\n\
    systems to ensure high QoS for ground-based users. The UAVs ﬂew\naround the users\
    \ to provide computing services in an orthogonal way\nover time.\n[96]\n2021\n\
    •\nPath planning\n•\nQoS\nA multi-UAV-enabled MEC platform was investigated to\
    \ assess RL\nQoS and path planning. The study studied the autonomy and\nself-hovering\
    \ ability of a network of UAVs relying on RL algorithms.\n[97]\n2019\n•\nPower\
    \ consumption\n•\nComputing services\n•\nResources allocation\nMobile peripheral\
    \ computing was deemed a promising technique to\naddress computationally intensive\
    \ issues. UAV-assisted MEC based\non NOMA (non-orthogonal multiple access) can\
    \ provide ﬂexible\ncomputing services for mobile terminals (MTs) in large-scale\
    \ access\nnetworks, as NOMA methods can be adaptive to massive\nconnectivity.\
    \ In this work, an optimization approach was presented\nto minimize the power\
    \ consumption of MTs by jointly optimizing\ntrajectory, task ofﬂoading, computing,\
    \ and resource allocations.\n[98]\n2018\n•\nPropagation losses\n•\nEnergy harvesting\n\
    The authors proposed a UAV-enabled MEC and wireless-powered\narchitecture to tackle\
    \ propagation packet loss in the IoT era.\n[8]\n2019\n•\nQoS\nA joint architecture\
    \ using the edge and cloud models based on UAV\nswarms was proposed to assure\
    \ high service qualities in\nresource-intensive and real-time applications.\n\
    [10]\n2018\n•\nRadio access networks\n•\nEdge caching and computing\nAn AGMEN\
    \ (aerial–ground integrated mobile edge network)\narchitecture was proposed to\
    \ address many EC network issues, such\nas communication, computing, and caching.\
    \ The objective of this\napproach was to optimally allocate computing and storage\
    \ resources.\nThe authors deployed a set of UAVs to ensure spatial and temporal\n\
    coverage, as well as ensuring data delivery for mobile IoT users.\n[99]\n2021\n\
    •\nReal-time\n•\nComputation overhead\nA trafﬁc monitoring system based on the\
    \ multi-EYE method was\npresented to detect and estimate the velocity of unmanned\
    \ vehicles using\naerial image tracking. The image processing was executed in\
    \ real-time\non an embedded edge-computing platform installed on the UAV.\nDrones\
    \ 2021, 5, 148\n18 of 30\nTable 4. Cont.\nRef.\nYear\nEvaluated Performance Metrics\n\
    Summary\n[100]\n2020\n•\nReduce cost\nThe concept of EC with UAV was used to perform\
    \ mapping and\nlodging assessment in a rice crop without human interaction to\n\
    reduce maneuvering cost and improve the quality of productivity.\nThe process\
    \ relies mainly on UAV as an edge server to execute the\nDNN algorithm while processing\
    \ the images.\n[101]\n2021\n•\nResource allocation\nIn this work, AI methods have\
    \ been used in a UAV-enabled MEC\nbased on the NOMA system. This approach allows\
    \ terrestrial mobile\nusers to ofﬂoad their computing duties intelligently. This\
    \ is intended\nto increase connectivity and minimize transmission latency and\n\
    power consumption.\n[102]\n2019\n•\nResource allocation\n•\nEnergy\nThe authors\
    \ intended to extend a 5G network for a video surveillance\napplication using\
    \ a ﬂying ad hoc network consisting of UAVs and EC\nservices. The authors aimed\
    \ to increase the performance of the entire\nMEC aerial platform, reduce latency,\
    \ and ameliorate the reliability of\nthe system’s source usage.\n[103]\n2021\n\
    •\nResource allocation\n•\nPower control in a MEC\nbased system\nTwo approaches\
    \ were proposed to deal with resource allocation and\npower control in a UAV-enabled\
    \ MEC system. The ﬁrst approach was\na centralized multi-agent RL (MARL) algorithm,\
    \ which has been\nused to optimize the system’s power consumption and resource\n\
    allocation. The second approach is a federated multi-agent\nreinforcement learning\
    \ (MAFRL) algorithm, which has been\nproposed to guarantee security and privacy.\n\
    [104]\n2019\n•\nSecurity\nA cyber-defense approach based on a non-cooperative\
    \ game\nalgorithm was proposed to protect a UAV-enabled MEC from\nnetwork and\
    \ ofﬂoading attacks.\n[105]\n2019\n•\nSecurity\n•\nPrivacy\nA MEC server-based\
    \ authentication framework was proposed to be\nintegrated into UAVs. This was\
    \ mainly to enhance the privacy and\nauthentication of UAVs.\n[106]\n2020\n•\n\
    Task ofﬂoading\n•\nResource allocation\nA UAV-assisted multi-user MEC system based\
    \ on frequency division\nmultiple access (FDMA) under Rician’s fading channels\
    \ was proposed\nto test task offloading and resource allocation performances.\n\
    [107]\n2019\n•\nTask ofﬂoading\nA theoretical game strategy based on three types\
    \ of players was\nproposed to formulate and solve the problem of ofﬂoading task\n\
    calculations in UAV-enabled MEC networks.\n[108]\n2018\n•\nTask ofﬂoading\n•\n\
    Throughput\nIn this work, a UAV was used as a mobile edge server to manage\nofﬂoading\
    \ processing tasks in real-time for ground-based users. A\nhybrid scheme based\
    \ on a semi-Markov decision process and DL was\nproposed to maximize the throughput\
    \ requirement.\n[109]\n2020\n•\nTask ofﬂoading\nTwo ofﬂoading schemes for multiple\
    \ UAVs-enabled MEC networks\nwere proposed to optimize computation time and energy\n\
    consumption. A game theory model was adopted to validate the\nproposed strategies.\n\
    [110]\n2018\n•\nTransmission power\n•\nUAV trajectory\nA UAV-assisted MEC environment\
    \ over the social internet of vehicles\n(SIoV) with a three-layer integrated architecture\
    \ was adopted. Total\nutility maximization was achieved by jointly optimizing\
    \ the\ntransmission power of the vehicle and the UAV trajectory.\n4. UAV-Enabled\
    \ MEC and Assisted MEC Based on AI\nMEC is an effective method for overcoming\
    \ time-constrained computing challenges\nin resource-constrained mobile IoT devices.\
    \ The objective is to bring CC services closer\nto customers to minimize latency\
    \ and backhaul network congestion. UAVs with storage\nunits, processing, and communication\
    \ capabilities can function as ﬂying MEC servers at\nthe IoT system’s edge. In\
    \ this context, resource-constrained IoT devices may ofﬂoad their\nDrones 2021,\
    \ 5, 148\n19 of 30\ncomputing activities, either partially or totally, to MEC-server-mounted\
    \ UAVs through\ndirect line-of-sight connectivity. Nevertheless, the system faces\
    \ many challenges related to\ntask prediction, UAV deployment, users’ association,\
    \ signal processing, and joint resource\nallocation. Considering the EC architecture,\
    \ UAVs with ﬂexibility and mobility are likely\nto deliver decentralized solution\
    \ perspectives signiﬁcantly. The ﬂying edge architecture is\nintended to improve\
    \ the CC capabilities of latency-sensitive and real-time IoT applications.\nThis\
    \ enables computing ofﬂoading at the edge of IoT devices rather than centralized\
    \ data\ncenters, reducing communication latency and facilitating real-time decision-making\
    \ and\ncontrol. Since the IoT system operates with many end-devices, a large quantity\
    \ of data\nis ofﬂoaded to the edge devices; this requires developing mechanisms\
    \ that manage and\nexploit the data for various purposes, such as auto-maintenance,\
    \ self-monitoring, and\nprediction. There is a considerable difference between\
    \ EC devices and centralized cloud\nservers regarding their processing capacities\
    \ and memory, limiting multiple AI technolo-\ngies for data processing at the\
    \ edge. Therefore, numerous criteria should be considered\nwhen incorporating\
    \ any AI technique to proﬁt from their robustness, due to memory ca-\npacity and\
    \ energy consumption constraints [111]. EC delivers resources in a decentralized\n\
    manner, allowing faster addressing of user demands than a regular CC, even with\
    \ limited\ncomputational capability. Various challenges arise, such as task scheduling,\
    \ resource allo-\ncation, and ofﬂoading, substantially inﬂuencing the overall\
    \ performance. Nevertheless,\nmost of the proposed solutions are characterized\
    \ by non-convexity and complexity, as\nthey enable continuous learning ability\
    \ for the dynamic environment and make a real-time\ninference with low computational\
    \ complexity. Applying AI to networking challenges has\ngained popularity over\
    \ the past few decades. For instance, ML has been widely used\nin the networking\
    \ domain due to its ability to interact with complex environments and\nmake decisions.\
    \ It may also provide eminent solutions to improve network performance in\nmany\
    \ subdomains, such as resource allocation, network trafﬁc prediction and classiﬁcation,\n\
    congestion control, and routing [32].\nIn most UAV-enabled MEC architectures,\
    \ a controller called the follow-me cloud\n(FMC) collects information about overall\
    \ system states (i.e., users, UAVs, and MEC servers).\nThis control unit is in\
    \ charge of managing ofﬂoading activities using AI technologies.\nFigure 5 displays\
    \ an example of a cloudlet mounted on a UAV for a UAV-assisted MEC\nsystem. The\
    \ UAV receives ofﬂoaded tasks from an IoT device and sends the results back\n\
    upon fulﬁllment of the task’s execution. Furthermore, the UAV could transport\
    \ the received\ndata to the nearest ground servers in case of complex processing\
    \ requirements that overﬁt\nthe onboard cloudlet’s capabilities. The system may\
    \ contain a set of UAVs that serve a\nmassive area of deployed IoT devices that\
    \ include mobile phones, sensors, vehicles, and\nrobots. The data generated by\
    \ the users is analyzed and treated via onboard cloudlets with\nthe help of the\
    \ AI approach.\nAs shown in Table 5, the DRL, DL, and GA can be utilized to solve\
    \ task ofﬂoading\nchallenges such as energy consumption limits, processing, and\
    \ latency. Furthermore,\nfor resource allocation management issues, the algorithms\
    \ RL, DRL, GA, and RL-ACO\nmight be utilized to regulate the energy consumption\
    \ in UAVs and reduce the latency and\nreaction time. Moreover, the later algorithms,\
    \ DE and ACO, can be applied to address\njoint optimization difﬁculties, whereas\
    \ DL may enhance UAVs’ security and path planning\nperformance.\nMEC networks\
    \ should offer seamless connection, meet the QoS needs of many sensors,\nand handle\
    \ a vast volume of data created by physical surroundings. AI approaches offering\n\
    robust analysis, learning, optimizing, and intelligent recognition capabilities\
    \ may be inte-\ngrated into UAV-enabled MEC systems to intelligently carry out\
    \ performance optimization,\ninformation discovery, advanced learning, structure\
    \ organization, and complex decision-\nmaking. Relevant AI techniques include\
    \ supervised learning, unsupervised learning, and\nreinforcement learning.\nDrones\
    \ 2021, 5, 148\n20 of 30\nassisted MEC system. The UAV receives offloaded tasks\
    \ from an IoT device and sends the \nresults back upon fulfillment of the task’s\
    \ execution. Furthermore, the UAV could \ntransport the received data to the nearest\
    \ ground servers in case of complex processing \nrequirements that overfit the\
    \ onboard cloudlet’s capabilities. The system may contain a \nset of UAVs that\
    \ serve a massive area of deployed IoT devices that include mobile phones, \n\
    sensors, vehicles, and robots. The data generated by the users is analyzed and\
    \ treated via \nonboard cloudlets with the help of the AI approach. \n \nFigure\
    \ 5. UAV-enabled MEC architecture. \nAs shown in Table 5, the DRL, DL, and GA\
    \ can be utilized to solve task offloading \nchallenges such as energy consumption\
    \ limits, processing, and latency. Furthermore, for \nresource allocation management\
    \ issues, the algorithms RL, DRL, GA, and RL-ACO might \nbe utilized to regulate\
    \ the energy consumption in UAVs and reduce the latency and \nreaction time. Moreover,\
    \ the later algorithms, DE and ACO, can be applied to address \njoint optimization\
    \ difficulties, whereas DL may enhance UAVs’ security and path \nplanning performance.\
    \ \nMEC networks should offer seamless connection, meet the QoS needs of many\
    \ \nsensors, and handle a vast volume of data created by physical surroundings.\
    \ AI \napproaches offering robust analysis, learning, optimizing, and intelligent\
    \ recognition \ncapabilities may be integrated into UAV-enabled MEC systems to\
    \ intelligently carry out \nperformance optimization, information discovery, advanced\
    \ learning, structure \norganization, and complex decision-making. Relevant AI\
    \ techniques include supervised \nlearning, unsupervised learning, and reinforcement\
    \ learning. \nFigure 5. UAV-enabled MEC architecture.\nFor instance, DRL does\
    \ not require labeled training data for resource allocation. Thus,\nit may enhance\
    \ the process of ofﬂoading choices based on various states of the channel en-\n\
    vironment. This results in reducing the energy bandwidth and computations. To\
    \ that end,\nan MDP method was provided to reduce the delay, energy consumption,\
    \ and bandwidth\nin UAV-assisted MEC by analyzing the instability of energy arrival,\
    \ stochastic computation\ntasks that are provided by wireless users, and a time-varying\
    \ channel state [112]. According\nto the authors of [113], UAV-assisted MEC-based\
    \ DL and DRL would ease the develop-\nment of next-generation communications.\
    \ This is particularly true for joint optimization\nchallenges to improve system\
    \ efﬁciency. Furthermore, UAV communication will be incor-\nporated with 6G networks,\
    \ where IoT device mobility might lead to position uncertainty. In\nthis case,\
    \ DRL, as a hybrid of DL and RL, can offer decision-making solutions and optimize\n\
    handover issues in real-time. This approach allows UAVs to move dynamically and\
    \ in\nreal-time while assuring and minimizing communication delay [114].\nTable\
    \ 5. AI-based approaches used in UAV-enabled MEC.\nAddressed Issues\nAI Approach\n\
    Metrics\nReferences\nTask ofﬂoading\nRL\nEnergy consumption, processing time,\
    \ latency\n[115]\nDRL\nEnergy consumption, latency, cost\n[116]\nGA\nEnergy consumption,\
    \ latency\n[117,118]\nDL\nSecurity, privacy, task prediction, and\ncomputation\
    \ ofﬂoading\n[119,120]\nFI\nExecution time\n[121]\nResources allocation\nRL\n\
    Resources allocation, energy\n[122,123]\nDRL\nLatency, response time, resource\
    \ utilization,\nenergy consumption\n[124,125]\nGA\nEnergy consumption, latency\n\
    [126]\nRL-ACO\nThroughput\n[123]\nJoint optimization issue\nRL\nSecurity and privacy,\
    \ energy consumption\n[127]\nDRL\nCost, energy consumption, latency\n[128]\nGA\n\
    Energy consumption, makespan\n[129]\nDL\nEnergy consumption, cost\n[130]\nRL-ACO\n\
    Energy consumption\n[131]\nSecurity\nRL\nSecurity caching\n[127]\nPath planning\n\
    RL\nPath planning\n[35,132,133]\nDrones 2021, 5, 148\n21 of 30\nAuthors in [134]\
    \ have proved that the deep supervised learning (DSL) method min-\nimizes the\
    \ computation and ofﬂoading overheads and cost of mobile users in the MEC\nsystem.\
    \ This technique allows terrestrial users to obtain an optimal ofﬂoading policy,\
    \ with\nenergy-saving and processing speed enhancement.\nThe authors of [91] have\
    \ investigated the challenges associated with applying AI\ntechniques to UAV-NOMA-MEC\
    \ networks. They proposed an architecture that relies\non AI-based approaches,\
    \ particularly on federated learning and reinforcement learning.\nThe proposed\
    \ framework was dedicated to enabling terrestrial mobile users to ofﬂoad\ntheir\
    \ computational tasks simultaneously, intelligently, and ﬂexibly, thus enhancing\
    \ their\nconnectivity and reducing their transmission latency and energy consumption.\n\
    The authors of [135] used RL and transfer learning algorithms to reduce the latency\
    \ and\nenergy consumption in UAV-enabled MEC networks. They proved that transfer\
    \ learning,\nwhen combined with RL, could signiﬁcantly enhance the system training\
    \ performance\nwhen the users operated dynamically.\nAn optimization problem based\
    \ on MDP was formulated by the authors of [35] to\naddress UAV trajectory optimization\
    \ in UAV-mounted MEC networks. The approach\naimed to enhance the overall system\
    \ QoS, maximize the long-term system reward, and\nmeet the QoS constraint, including\
    \ the computation tasks of mobile users. In [136], the\nauthors have used the\
    \ semi-Markov process and DRL-based algorithms to address the\nUAV-enabled MEC\
    \ networks’ ofﬂoading decisions and resource management policies.\nThe authors\
    \ of [137] have developed a platform known as a ﬂying UAV MEC, in which\nUAVs\
    \ are outﬁtted with computing resources and provide task-ofﬂoading services to\
    \ users.\nThe suggested architecture’s primary purpose was to maximize UAV aerial\
    \ trajectory,\nuser association, and resource allocation. The trajectory control\
    \ method has been used\nto address the optimization issue, assisted by an RL-based\
    \ technique. The results of this\napproach outperformed the results of the equivalent\
    \ benchmark methods. Moreover, the\nauthors of [138] formulated an ML-based novel\
    \ framework to optimize UAV trajectories\nby estimating the user’s mobility data\
    \ to ﬁnd optimal initial UAV placement locations.\nThe joint problem, consisting\
    \ of UAVs trajectories and power control to improve the sum\nrate and maintain\
    \ the data rate requirements of mobile users, was also addressed in the\nemployment\
    \ of a multi-agent Q-learning-based technique. A smart ofﬂoading based on the\n\
    deep Q-learning approach was proposed by the authors of [139] to optimize performance\n\
    in terms of the delay perceived by ground devices connected to the FANET, to enable\
    \ MEC\nin the 5G ﬁeld.\n5. Discussion and Open Issues\nComputational intelligence,\
    \ when combined with UAVs, has improved the underlying\ntechnologies and implementations\
    \ of IoT applications. Nevertheless, researchers should\naddress the remaining\
    \ challenges. Therefore, some signiﬁcant issues need more attention\nin order\
    \ to beneﬁt from UAVs for the realization of ﬂying ECs. These issues may be\n\
    related to scientiﬁc, technological, and societal problems, including challenges\
    \ regarding\nthe technical aspects of the technology, security and privacy concerns,\
    \ and standardization.\nThe challenges concern both the UAVs themselves and EC\
    \ devices. Therefore, great effort\nis needed to address the following challenges.\n\
    Energy consumption: In any UAV-enabled IoT system, most sensors, edge devices,\
    \ and\ndrones are battery-powered and can only remain powered for a limited period.\
    \ Therefore,\nefﬁcient energy consumption protocols and mechanisms are essential\
    \ for UAVs and IoT de-\nvices to ensure a long network lifetime. Improvement efforts\
    \ should address the hardware\nand software architecture of the IoT components\
    \ by integrating energy-harvesting solutions\nor efﬁcient routing protocols. For\
    \ example, AI schemes can be adopted to predict a UAV’s\nresidual energy and energy\
    \ dissipation through the precise adjustment of transmission\nand control parameters\
    \ concerning channel changes. The processing energy dissipation,\ncommunication\
    \ energy, storage energy, and environmental reliability should be considered\n\
    to mitigate the energy of UAVs [115,140]. Moreover, the issues listed below should\
    \ also\nDrones 2021, 5, 148\n22 of 30\nbe considered to mitigate energy consumption,\
    \ to extend the on-air ﬂying time of the\nUAVs employed.\nInterference: The communication\
    \ links between UAVs and IoT devices may become\ndisconnected due to interference,\
    \ which reduces latency performance and may also affect\nthe overall network,\
    \ especially when the UAVs act as a mobile BS. Therefore, the problem\nof interference\
    \ should be addressed, especially in urban and industrial environments,\nwhere\
    \ the number of interconnected devices on the same frequency band is very dense.\
    \ An\nAI-based solution can be applied in UAV-enabled MEC to predict the signal-to-interference\n\
    ratio, based on the collected channel state information (CSI). It is then possible\
    \ to decide on\nthe most appropriate scheme to combat the impact of interference\
    \ or to adjust transmission\nparameters in order to reduce power consumption.\n\
    Interoperability: In any IoT environment, many devices are expected to handle\
    \ the\nrequired tasks without any effort from the end-users. These devices try\
    \ to connect and\ninteract with each other using different protocols and communication\
    \ paradigms. With\nthis diversity, it is sometimes challenging to orchestrate\
    \ the system smoothly. Therefore,\nfurther investigations are necessary to unify\
    \ the controller and communication protocols to\nensure interoperability among\
    \ them.\nMobility and path planning: UAVs require auto-maneuvering without distant\
    \ hu-\nman pilot intervention in random dynamic IoT applications. Therefore, many\
    \ intelligent\nmethods should be considered to enable autonomous UAV ﬂights that\
    \ include collision\navoidance. AI algorithms are the most viable solutions that\
    \ can be used to detect obsta-\ncles and avoid collisions [141]. For instance,\
    \ DL techniques can enable learning from the\ngathered data, which makes their\
    \ integration into UAV a signiﬁcant solution. A serious\neffort should be considered\
    \ to develop green-federated AI solutions, such as RL, to ensure\naccurate auto-ﬂying\
    \ decisions and path and trajectory planning [35,132].\nScalability: The scalability\
    \ challenges concern resources, applications, load balancing,\nand connections.\
    \ Enabling high scalability requires designing efﬁcient schemes that could\neffectively\
    \ manage heterogeneous mobile devices and servers in a UAV-enabled MEC\nenvironment,\
    \ with its highly dynamic demand behavior. For example, some mobile appli-\ncations,\
    \ such as UAVs and autonomous driving, require high data throughput ofﬂoading\
    \ to\nsuccessfully provide such services, despite heterogeneity in the number\
    \ of mobile devices\nand the dynamic demand behavior of the applications mentioned\
    \ in the MEC environment.\nThe MEC system should have an acceptable degree of\
    \ scalability regarding the number\nof servers and services required. As a result,\
    \ it is challenging for difﬁcult areas to estab-\nlish connections and communications\
    \ between mobile devices and servers. To achieve\nconvenient and cost-effective\
    \ mobility and scalability, resulting in continuous service, it is\nnecessary\
    \ to have a stable connection, even in adverse environmental conditions.\nSecurity:\
    \ Drones enable ubiquitous services on an IoT scale. The communications\nand controls\
    \ are realized through P2P wireless transmissions and thus are open to many\n\
    security threats. Therefore, unauthorized connections threaten the system’s privacy.\
    \ It is\nnecessary to propose and design security mechanisms to improve UAV-enabled\
    \ MEC sys-\ntems’ security [142]. The effort should focus on the physical, application,\
    \ and MAC layers.\nThe solutions should integrate recent robust techniques such\
    \ as blockchains, especially\nin IoT applications where UAVs are expected to facilitate\
    \ communication networks. The\ncombination of UAVs with blockchain and AI is now\
    \ an exciting avenue of research to\npredict all sorts of attacks and malware\
    \ that threaten the system’s privacy [127]. However,\nwhile there has been signiﬁcant\
    \ progress in this area, more work needs to be done. Power\nconsumption might\
    \ be a critical constraint for blockchain-based applications as they need\nmore\
    \ computing power. Increasingly complex attacks, such as quantum attacks, ML,\
    \ and\ntheory-based game attacks, could challenge the privacy of blockchain systems\
    \ [143]. More\nresearch is needed to make private blockchain networks more immutable\
    \ and secure in\nUAV-enabled MEC architectures. Moreover, blockchain-enabled softwarization\
    \ for secure\nUAV network systems is also a critical challenge. Blockchain implementation\
    \ in UAV\nDrones 2021, 5, 148\n23 of 30\nsystems presents a complex system integration\
    \ problem requiring rigorous testing before\nconcrete implementation [12].\nIntegration\
    \ of AI schemes: Recently, the utilization of AI schemes among DL, ML, and\nRL\
    \ has become increasingly of interest, to beneﬁt from their powerful performance.\
    \ AI\nschemes are being integrated into UAV-enabled MEC systems as a way to make\
    \ contextual\ndecisions and learn from aggregated data gathered from previous\
    \ tracking experiences. The\ndata collected by the sensors in real-time can be\
    \ proﬁtably exploited for the autonomous\npiloting of UAVs. Therefore, processing\
    \ tasks demand strict computing and storage\nrequirements at computing facilities,\
    \ to be executed exceptionally at the edge. UAVs\nalso have energy and storage\
    \ limitations; thus, portable and lightweight RL, ML, and DL\nalgorithms should\
    \ be designed to cope with these constraints.\nRegulations: Despite the rapid\
    \ emergence of this technology, UAV regulations are\nstill in their infancy, and\
    \ a lack of heterogeneity of national rules and varying levels of\nimplementation\
    \ can be observed. These regulations differ from state to state, and the type\n\
    of regulation is based on the requirements of that use. Several problems are associated\
    \ with\nUAV regulation, including delays in ﬂight approval and poorly documented\
    \ administrative\nprocesses limiting the desired ﬂexibility, preventing widespread\
    \ use of the technology [144].\nLatency and computation issues: Communication\
    \ latency and computing optimization\nremain concerns in MEC-enabled UAV applications,\
    \ affecting transmission efﬁciency and\nreaction time under communication and\
    \ computing constraints. UAV transmission success\nmay be accomplished by offering\
    \ effective methods that decrease response delay. In\none study [145], for example,\
    \ stochastic geometry and queueing theory approaches were\nstudied to minimize\
    \ the response delay for a MEC-enabled UAV network.\nResource allocation: Due\
    \ to UAV battery concerns and trajectory constraints, resource\nallocation is\
    \ critical in UAV-enabled MEC networks. Resources allocation is involved in\n\
    three processes: computing task ofﬂoading, local computing, and UAV hovering.\
    \ Design-\ning an appropriate trajectory can ultimately compromise the calculated\
    \ performance and\noperating costs. According to the authors of [146], resource\
    \ allocation may be structured to\nmeet various goals, including computing bit\
    \ maximization, energy minimization, compu-\ntational efﬁciency maximization,\
    \ cost minimization, completion time minimization, and\nthe consideration of fairness.\n\
    UAV-enabled IoT for B5G and 6G issues: Data-gathering faces several problems in\
    \ IoT\nthat extend beyond the ﬁfth-generation (B5G) and upcoming sixth-generation\
    \ (6G) wireless\nmobile networks. A large amount of data will be generated by\
    \ heterogeneous devices,\nparticularly IoT devices and smartphones at the mobile\
    \ edge; these data are fragmented and\ndispersed among several machines. Therefore,\
    \ distributed solutions such as UAV-enabled\nMEC should be leveraged near mobile\
    \ users to ofﬂoad and process the data. Meanwhile,\ngrowing privacy concerns make\
    \ data collecting increasingly challenging. This consumes\nmore energy and decreases\
    \ the system’s ofﬂoading time [147].\n6. Conclusions\nThe development of wireless\
    \ communication technologies and IT services has made\nthe role of drones more\
    \ ubiquitous in various ﬁelds of application. Drones can serve\nas a link between\
    \ smart devices and cloud data centers, to provide many services that\ncan increase\
    \ the performance of a given IoT system. To the best of our knowledge, this\n\
    paper is considered the ﬁrst work that provides a review of drone-enabled MECs\
    \ based on\nAI. This work discusses the current research trends and provides future\
    \ insights into the\npotential uses of UAV-enabled MEC in the ﬁeld of IoT. It\
    \ highlights the potential roles that\nUAVs can play in enabling communications\
    \ and intelligent computing in the IoT era, by\nreferring to the most widely emerging\
    \ AI techniques that are employed. As mentioned,\nUAVs as MECs are attracting\
    \ considerable interest in scientiﬁc research, to address the\nvarious problems\
    \ and challenges experienced in order to improve the performance of such\napplications\
    \ in different scenarios, such as resource allocation, energy efﬁciency, latency,\n\
    task ofﬂoading, and security. UAV-enabled MEC present an emerging concept that\
    \ require\nDrones 2021, 5, 148\n24 of 30\nmore effort to achieve the necessary\
    \ performance in every scenario of UAV application in\nIoT environments, especially\
    \ regarding MEC.\nAuthor Contributions: Y.Y. carried out this research as part\
    \ of his Ph.D. thesis, under the supervision\nof A.E.O. and M.A. Y.Y., I.E.-Z.,\
    \ A.G.-G., M.A. and A.E.O. contributed to the design and implementa-\ntion of\
    \ the research review, upon the analysis and the selection of the papers, and\
    \ the writing of the\nmanuscript. All authors have read and agreed to the published\
    \ version of the manuscript.\nFunding: This research received no external funding.\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    Abbreviations\nThe following abbreviations are used in this manuscript.\nAbbreviation\n\
    Deﬁnition\nAI\nArtiﬁcial intelligence\nCC\nCloud computing\nCPU\nCentral processing\
    \ units\nCV\nComputer vision\nDRL\nDeep reinforcement learning\nEC\nEdge computing\n\
    FANET\nFlying ad hoc network\nFI\nFuzzy inference\nGA\nGenetic algorithm\nGPU\n\
    Graphics processing units\nIoFT\nInternet of Flying Things\nIoT\nInternet of Things\n\
    ISM\nIndustrial scientiﬁc medical\nLC\nLocal computing\nLoRa\nLong-range\nTDMA\n\
    Time division multiple access\nMEC\nMobile edge computing\nML\nMachine learning\n\
    NOMA\nNon-orthogonal multiple access\nQoS\nQuality of service\nRL\nReinforcement\
    \ learning\nUAV\nUnmanned aerial vehicle\nVANET\nVehicular ad hoc network\nBLE\n\
    Bluetooth low energy\nRL-ACO\nReinforcement learning based on ant-colony optimization\n\
    DRL\nDeep reinforcement learning\nVTOL\nVertical take-off and landing\nHTOL\n\
    Horizontal take-off and landing\nLiDAR\nLight detection and ranging\nReferences\n\
    1.\nNižeti´c, S.; Šoli´c, P.; López-de-Ipiña González-de-Artaza, D.; Patrono,\
    \ L. Internet of Things (IoT): Opportunities, issues and\nchallenges towards a\
    \ smart and sustainable future. J. Clean. Prod. 2020, 274, 122877. [CrossRef]\n\
    2.\nShaﬁque, K.; Khawaja, B.A.; Sabir, F.; Qazi, S.; Mustaqim, M. Internet of\
    \ things (IoT) for next-generation smart systems: A review\nof current challenges,\
    \ future trends and prospects for emerging 5G-IoT Scenarios. IEEE Access 2020,\
    \ 8, 23022–23040. [CrossRef]\n3.\nMozaffari, M.; Saad, W.; Bennis, M.; Nam, Y.H.;\
    \ Debbah, M. A Tutorial on UAVs for Wireless Networks: Applications, Challenges,\n\
    and Open Problems. IEEE Commun. Surv. Tutor. 2019, 21, 2334–2360. [CrossRef]\n\
    4.\nLyu, J.; Zeng, Y.; Zhang, R.; Lim, T.J. Placement Optimization of UAV-Mounted\
    \ Mobile Base Stations. IEEE Commun. Lett. 2017,\n21, 604–607. [CrossRef]\nDrones\
    \ 2021, 5, 148\n25 of 30\n5.\nAlzenad, M.; El-Keyi, A.; Lagum, F.; Yanikomeroglu,\
    \ H. 3-D Placement of an Unmanned Aerial Vehicle Base Station (UAV-BS) for\nEnergy-Efﬁcient\
    \ Maximal Coverage. IEEE Wirel. Commun. Lett. 2017, 6, 434–437. [CrossRef]\n6.\n\
    Zhang, S.; Zhang, H.; Di, B.; Song, L. Joint trajectory and power optimization\
    \ for UAV sensing over cellular networks. IEEE\nCommun. Lett. 2018, 22, 2382–2385.\
    \ [CrossRef]\n7.\nMotlagh, N.H.; Bagaa, M.; Taleb, T. UAV-Based IoT Platform:\
    \ A Crowd Surveillance Use Case. IEEE Commun. Mag. 2017, 55,\n128–134. [CrossRef]\n\
    8.\nChen, W.; Liu, B.; Huang, H.; Guo, S.; Zheng, Z. When UAV Swarm Meets Edge-Cloud\
    \ Computing: The QoS Perspective.\nIEEE Netw. 2019, 33, 36–43. [CrossRef]\n9.\n\
    Mao, Y.; You, C.; Zhang, J.; Huang, K.; Letaief, K.B. A Survey on Mobile Edge\
    \ Computing: The Communication Perspective.\nIEEE Commun. Surv. Tutor. 2017, 19,\
    \ 2322–2358. [CrossRef]\n10.\nCheng, N.; Xu, W.; Shi, W.; Zhou, Y.; Lu, N.; Zhou,\
    \ H.; Shen, X. Air-ground integrated mobile edge networks: Architecture,\nchallenges,\
    \ and opportunities. IEEE Commun. Mag. 2018, 56, 26–32. [CrossRef]\n11.\nLiu,\
    \ J.; Zhou, A.; Liu, C.; Zhang, T.; Qi, L.; Wang, S.; Buyya, R. Reliability-Enhanced\
    \ Task Ofﬂoading in Mobile Edge Computing\nEnvironments. IEEE Internet Things\
    \ J. 2021, 124–129. [CrossRef]\n12.\nKumari, A.; Gupta, R.; Tanwar, S.; Kumar,\
    \ N. A taxonomy of blockchain-enabled softwarization for secure UAV network. Comput.\n\
    Commun. 2020, 161, 304–323. [CrossRef]\n13.\nMehta, P.; Gupta, R.; Tanwar, S.\
    \ Blockchain envisioned UAV networks: Challenges, solutions, and comparisons.\
    \ Comput. Commun.\n2020, 151, 518–538. [CrossRef]\n14.\nAbrar, M.; Ajmal, U.;\
    \ Almohaimeed, Z.M.; Gui, X.; Akram, R.; Masroor, R. Energy Efﬁcient UAV-Enabled\
    \ Mobile Edge Computing\nfor IoT Devices: A Review. IEEE Access 2021, 9, 127779–127798.\
    \ [CrossRef]\n15.\nSharma, A.; Vanjani, P.; Paliwal, N.; Basnayaka, C.M.W.; Jayakody,\
    \ D.N.K.; Wang, H.C.; Muthuchidambaranathan, P. Communica-\ntion and networking\
    \ technologies for UAVs: A survey. J. Netw. Comput. Appl. 2020, 168, 102739. [CrossRef]\n\
    16.\nZhang, W.; Li, L.; Zhang, N.; Han, T.; Wang, S. Air-Ground Integrated Mobile\
    \ Edge Networks: A Survey. IEEE Access 2020, 8,\n125998–126018. [CrossRef]\n17.\n\
    Shakarami, A.; Ghobaei-Arani, M.; Shahidinejad, A. A survey on the computation\
    \ ofﬂoading approaches in mobile edge\ncomputing: A machine learning-based perspective.\
    \ Comput. Netw. 2020, 182, 107496. [CrossRef]\n18.\nKorchenko, A.G.; Illyash,\
    \ O.S. The generalized classiﬁcation of Unmanned Air Vehicles. In Proceedings\
    \ of the 2013 IEEE 2nd\nInternational Conference Actual Problems of Unmanned Air\
    \ Vehicles Developments Proceedings (APUAVD), Kiev, Ukraine,\n15–17 October 2013;\
    \ pp. 28–34. [CrossRef]\n19.\nChamola, V.; Kotesh, P.; Agarwal, A.; Naren; Gupta,\
    \ N.; Guizani, M. A Comprehensive Review of Unmanned Aerial Vehicle\nAttacks and\
    \ Neutralization Techniques. Ad Hoc Netw. 2021, 111, 102324. [CrossRef]\n20.\n\
    Guo, Y.; Yin, G.; Sun, H.; Wang, H.; Chen, S.; Senthilnath, J.; Wang, J.; Fu,\
    \ Y. Scaling effects on chlorophyll content estimations\nwith RGB camera mounted\
    \ on a UAV platform using machine-learning methods. Sensors 2020, 20, 5130. [CrossRef]\n\
    21.\nLin, Y.C.; Cheng, Y.T.; Zhou, T.; Ravi, R.; Hasheminasab, S.M.; Flatt, J.E.;\
    \ Troy, C.; Habib, A. Evaluation of UAV LiDAR for\nmapping coastal environments.\
    \ Remote Sens. 2019, 11, 2893. [CrossRef]\n22.\nMiyoshi, G.T.; Arruda, S.; Osco,\
    \ L.P.; Junior, M.; Gonçalves, D.N.; Imai, N.N. A Novel Deep Learning Method to\
    \ Identify Single\nTree Species in UAV-Based Hyperspectral Images. Remote Sens.\
    \ 2020, 12, 1294. [CrossRef]\n23.\nCen, H.; Wan, L.; Zhu, J.; Li, Y.; Li, X.;\
    \ Zhu, Y.; Weng, H. Dynamic monitoring of biomass of rice under different nitrogen\n\
    treatments using a lightweight UAV with dual image—Frame snapshot cameras. Plant\
    \ Methods 2019, 15, 32. [CrossRef] [PubMed]\n24.\nHill, A.C.; Laugier, E.J. Archaeological\
    \ Remote Sensing Using Infrared (NIR) Imagery: A Case Study at the Enﬁeld Shaker\
    \ Village,\nNew Hampshire. Remote Sens. 2020, 12, 690. [CrossRef]\n25.\nZaidi,\
    \ S.; Atiquzzaman, M.; Calafate, C.T. Internet of Flying Things (IoFT): A Survey.\
    \ Comput. Commun. 2021, 165, 53–74.\n[CrossRef]\n26.\nNazib, R.A.; Moh, S. Routing\
    \ Protocols for Unmanned Aerial Vehicle-Aided Vehicular Ad Hoc Networks: A Survey.\
    \ IEEE Access\n2020, 8, 77535–77560. [CrossRef]\n27.\nAl-Fuqaha, A.; Guizani,\
    \ M.; Mohammadi, M.; Aledhari, M.; Ayyash, M. Internet of Things: A Survey on\
    \ Enabling Technologies,\nProtocols, and Applications. IEEE Commun. Surv. Tutor.\
    \ 2015, 17, 2347–2376. [CrossRef]\n28.\nMekki, K.; Bajic, E.; Chaxel, F.; Meyer,\
    \ F. A comparative study of LPWAN technologies for large-scale IoT deployment.\
    \ ICT Express\n2019, 5, 1–7. [CrossRef]\n29.\nYazid, Y.; Ez-Zazi, I.; Arioua,\
    \ M.; Oualkadi, A.E.L. On the LoRa performances under different physical layer\
    \ parameter selection.\nIn Proceedings of the 2020 International Symposium on\
    \ Advanced Electrical and Communication Technologies (ISAECT), Kenitra,\nMorocco,\
    \ 25–27 November 2020; pp. 13–18. [CrossRef]\n30.\nAkpakwu, G.A.; Silva, B.J.;\
    \ Hancke, G.P.; Abu-Mahfouz, A.M. A Survey on 5G Networks for the Internet of\
    \ Things: Communica-\ntion Technologies and Challenges. IEEE Access 2017, 6, 3619–3647.\
    \ [CrossRef]\n31.\nMignardi, S.; Marini, R.; Verdone, R.; Buratti, C. On the performance\
    \ of a uav-aided wireless network based on nb-iot. Drones\n2021, 5, 94. [CrossRef]\n\
    32.\nErdelj, M.; Król, M.; Natalizio, E. Wireless Sensor Networks and Multi-UAV\
    \ systems for natural disaster management.\nComput. Netw. 2017, 124, 72–86. [CrossRef]\n\
    Drones 2021, 5, 148\n26 of 30\n33.\nSohail, M.F.; Member, S. Non-Orthogonal Multiple\
    \ Access for Unmanned Aerial Vehicle Assisted Communication. IEEE Access\n2018,\
    \ 6, 22716–22727. [CrossRef]\n34.\nLiu, D.; Xu, Y.; Wang, J.; Chen, J.; Yao, K.;\
    \ Wu, Q.; Anpalagan, A. Opportunistic UAV utilization in wireless networks: Motivations,\n\
    applications, and challenges. IEEE Commun. Mag. 2020, 58, 62–68. [CrossRef]\n\
    35.\nLiu, Q.; Shi, L.; Sun, L.; Li, J.; Ding, M.; Shu, F.S. Path Planning for\
    \ UAV-Mounted Mobile Edge Computing with Deep\nReinforcement Learning. IEEE Trans.\
    \ Veh. Technol. 2020, 69, 5723–5728. [CrossRef]\n36.\nAli, N.; Jhanjhi, N.Z.;\
    \ Nawaz, S.; Sher, R.; Usmani, A. Smart trafﬁc monitoring system using Unmanned\
    \ Aerial Vehicles (UAVs).\nComput. Commun. 2020, 157, 434–443. [CrossRef]\n37.\n\
    Jiang, F.; Wang, K.; Dong, L.; Pan, C.; Xu, W.; Yang, K. Deep Learning Based Joint\
    \ Resource Scheduling Algorithms for Hybrid\nMEC Networks. IEEE Internet Things\
    \ J. 2020, 7, 6252–6265. [CrossRef]\n38.\nZhou, F.; Wu, Y.; Sun, H.; Chu, Z. UAV-Enabled\
    \ mobile edge computing: Ofﬂoading optimization and trajectory design. In\nProceedings\
    \ of the 2018 IEEE International Conference on Communications (ICC), Kansas City,\
    \ MO, USA, 20–24 May 2018;\npp. 1–6. [CrossRef]\n39.\nKitpo, N.; Inoue, M. Early\
    \ rice disease detection and position mapping system using drone and IoT architecture.\
    \ In Proceedings of\nthe 2018 12th South East Asian Technical University Consortium\
    \ (SEATUC), Yogyakarta, Indonesia, 12–13 March 2018. [CrossRef]\n40.\nPopescu,\
    \ D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana, C. Advanced UAV–WSN System\
    \ for Intelligent Monitoring in\nPrecision Agriculture. Sensors 2020, 20, 817.\
    \ [CrossRef]\n41.\nMazzia, V.; Comba, L.; Khaliq, A.; Chiaberge, M.; Gay, P. UAV\
    \ and Machine Learning Based Reﬁnement of a Satellite-Driven\nVegetation Index\
    \ for Precision Agriculture. Sensors 2020, 20, 2530. [CrossRef]\n42.\nMaddikunta,\
    \ P.K.R.; Hakak, S.; Alazab, M.; Bhattacharya, S.; Gadekallu, T.R.; Khan, W.Z.;\
    \ Pham, Q.V. Unmanned Aerial Vehicles\nin Smart Agriculture: Applications, Requirements,\
    \ and Challenges. IEEE Sens. J. 2021, 21, 17608–17619. [CrossRef]\n43.\nGrosso,\
    \ R.; Mecca, U.; Moglia, G.; Prizzon, F.; Rebaudengo, M. Collecting built environment\
    \ information using UAVs: Time and\napplicability in building inspection activities.\
    \ Sustainability 2020, 12, 4731. [CrossRef]\n44.\nPanday, U.S.; Shrestha, N.;\
    \ Maharjan, S.; Pratihast, A.K.; Shahnawaz; Shrestha, K.L.; Aryal, J. Correlating\
    \ the plant height of\nwheat with aboveground biomass and crop yield using drone\
    \ imagery and crop surface model, a case study from Nepal. Drones\n2020, 4, 28.\
    \ [CrossRef]\n45.\nHentschke, M.; de Freitas, E.P.; Hennig, C.H.; da Veiga, I.C.G.\
    \ Evaluation of altitude sensors for a crop spraying drone. Drones\n2018, 2, 25.\
    \ [CrossRef]\n46.\nSuen, H.K.; Ary, D. Reliability: Conventional Methods. Anal.\
    \ Quant. Behav. Obs. Data 2020, 111–142. [CrossRef]\n47.\nAgapiou, A. Vegetation\
    \ extraction using visible-bands from openly licensed unmanned aerial vehicle\
    \ imagery. Drones 2020, 4, 27.\n[CrossRef]\n48.\nSharma, V.; Choudhary, G.; Ko,\
    \ Y. Behavior and Vulnerability Assessment of Drones-Enabled Industrial Internet\
    \ of Things (IIoT).\nIEEE Access 2018, 6, 43368–43383. [CrossRef]\n49.\nSalhaoui,\
    \ M.; Guerrero-González, A.; Arioua, M.; Ortiz, F.J.; El Oualkadi, A.; Torregrosa,\
    \ C.L. Smart industrial iot monitoring and\ncontrol system based on UAV and cloud\
    \ computing applied to a concrete plant. Sensors 2019, 19, 3316. [CrossRef] [PubMed]\n\
    50.\nNooralishahi, P.; Ibarra-Castanedo, C.; Deane, S.; López, F.; Pant, S.; Genest,\
    \ M.; Avdelidis, N.P.; V Maldague, X.P.; González\nJorge, H.; Miguel González\
    \ de Santos, L. Drone-Based Non-Destructive Inspection of Industrial Sites: A\
    \ Review and Case Studies.\nDrones 2021, 5, 106. [CrossRef]\n51.\nShahmoradi,\
    \ J.; Talebi, E.; Roghanchi, P.; Hassanalian, M. A Comprehensive Review of Applications\
    \ of Drone Technology in the\nMining Industry. Drones 2020, 4, 34. [CrossRef]\n\
    52.\nCowley, D.C.; Moriarty, C.; Geddes, G.; Brown, G.L.; Wade, T.; Nichol, C.J.\
    \ UAVs in context: Archaeological airborne recording in\na national body of survey\
    \ and record. Drones 2018, 2, 2. [CrossRef]\n53.\nMangewa, L.J.; Ndakidemi, P.A.;\
    \ Munishi, L.K. Integrating UAV technology in an ecological monitoring system\
    \ for community\nwildlife management areas in Tanzania. Sustainability 2019, 11,\
    \ 6116. [CrossRef]\n54.\nRees, A.F.; Avens, L.; Ballorain, K.; Bevan, E.; Broderick,\
    \ A.C.; Carthy, R.R.; Christianen, M.J.A.; Duclos, G.; Heithaus, M.R.;\nJohnston,\
    \ D.W.; et al. The potential of unmanned aerial systems for sea turtle research\
    \ and conservation: A review and future\ndirections. Endanger. Species Res. 2018,\
    \ 35, 81–100. [CrossRef]\n55.\nSalhaoui, M.; Molina-molina, J.C.; Guerrero-gonz,\
    \ A.; Arioua, M.; Ortiz, F.J. Autonomous Underwater Monitoring System for\nDetecting\
    \ Life on the Seabed by Means of Computer Vision Cloud Services. Remote Sens.\
    \ 2020, 12, 198. [CrossRef]\n56.\nWang, D.; Shao, Q.; Yue, H. Surveying wild animals\
    \ from satellites, manned aircraft and unmanned aerial systems (UASs):\nA review.\
    \ Remote Sens. 2019, 11, 1308. [CrossRef]\n57.\nChamola, V.; Hassija, V.; Gupta,\
    \ V.; Guizani, M. A Comprehensive Review of the COVID-19 Pandemic and the Role\
    \ of IoT, Drones,\nAI, Blockchain, and 5G in Managing its Impact. IEEE Access\
    \ 2020, 8, 90225–90265. [CrossRef]\n58.\nJeyabalan, V.; Nouvet, E.; Meier, P.;\
    \ Donelle, L. Context-speciﬁc challenges, opportunities, and ethics of drones\
    \ for healthcare\ndelivery in the eyes of program managers and ﬁeld staff: A multi-site\
    \ qualitative study. Drones 2020, 4, 44. [CrossRef]\n59.\nZhu, J.; Sun, K.; Jia,\
    \ S.; Li, Q.; Hou, X.; Lin, W.; Liu, B.; Qiu, G. Urban Trafﬁc Density Estimation\
    \ Based on Neural Network. IEEE J.\nSel. Top. Appl. Earth Obs. Remote Sens. 2018,\
    \ 11, 4968–4981. [CrossRef]\n60.\nCongress, S.S.C.; Puppala, A.J.; Lundberg, C.L.\
    \ Total system error analysis of UAV-CRP technology for monitoring transportation\n\
    infrastructure assets. Eng. Geol. 2018, 247, 104–116. [CrossRef]\nDrones 2021,\
    \ 5, 148\n27 of 30\n61.\nOutay, F.; Abdullah, H.; Adnan, M. Applications of unmanned\
    \ aerial vehicle (UAV) in road safety, trafﬁc and highway infrastruc-\nture management:\
    \ Recent advances and challenges. Transp. Res. Part A 2020, 141, 116–129. [CrossRef]\n\
    62.\nMalihi, S.; Javad, M.; Zoej, V.; Hahn, M. Large-Scale Accurate Reconstruction\
    \ of Buildings Employing Point Clouds Generated\nfrom UAV Imagery. Remote Sens.\
    \ 2018, 10, 1148. [CrossRef]\n63.\nMohamed, N.; Al-jaroodi, J.; Jawhar, I.; Idries,\
    \ A.; Mohammed, F. Technological Forecasting & Social Change Unmanned aerial\n\
    vehicles applications in future smart cities. Technol. Forecast. Soc. Chang. 2020,\
    \ 153, 119293. [CrossRef]\n64.\nQi, F.; Zhu, X.; Mang, G.; Kadoch, M.; Li, W.\
    \ Internet of things for smart citites: Technologies and applications UAV Network\
    \ and\nIoT in the Sky for Future Smart Cities. IEEE Netw. 2019, 33, 96–101. [CrossRef]\n\
    65.\nOrgeira-crespo, P.; Ulloa, C.; Rey-gonzalez, G.; Antonio, P. Methodology\
    \ for Indoor Positioning and Landing of an Unmanned\nAerial Vehicle in a Smart\
    \ Manufacturing Plant for Light Part Delivery. Electronics 2020, 9, 1680. [CrossRef]\n\
    66.\nErdelj, M.; Natalizio, E. UAV-assisted disaster management: Applications\
    \ and open issues. In Proceedings of the 2016 International\nConference on Computing,\
    \ Networking and Communications (ICNC), Kauai, HI, USA, 15–18 February 2016; pp.\
    \ 1–5. [CrossRef]\n67.\nErdelj, M.; Natalizio, E.; Chowdhury, K.R.; Akyildiz,\
    \ I.F. Help from the Sky: Leveraging UAVs for Disaster Management.\nIEEE Pervasive\
    \ Comput. 2017, 16, 24–32. [CrossRef]\n68.\nLiu, D.; Xia, X.; Chen, J.; Li, S.\
    \ Integrating Building Information Model and Augmented Reality for Drone-Based\
    \ Building\nInspection. J. Comput. Civ. Eng. 2021, 35, 04020073. [CrossRef]\n\
    69.\nChen, S.; Laefer, D.F.; Mangina, E.; Zolanvari, S.M.I.; Byrne, J. UAV Bridge\
    \ Inspection through Evaluated 3D Reconstructions.\nJ. Bridg. Eng. 2019, 24, 05019001.\
    \ [CrossRef]\n70.\nHildmann, H.; Kovacs, E. Review: Using Unmanned Aerial Vehicles\
    \ (UAVs) as Mobile Sensing Platforms (MSPs) for Disaster\nResponse, Civil Security\
    \ and Public Safety. Drones 2019, 3, 59. [CrossRef]\n71.\nBang, S.; Kim, H.; Kim,\
    \ H. Automation in Construction UAV-based automatic generation of high-resolution\
    \ panorama at a\nconstruction site with a focus on preprocessing for image stitching.\
    \ Autom. Constr. 2017, 84, 70–80. [CrossRef]\n72.\nLin, X.; Yajnanarayana, V.;\
    \ Muruganathan, S.D.; Gao, S.; Asplund, H.; Maattanen, H.L.; Bergstrom, M.; Euler,\
    \ S.; Wang, Y.P.E. The\nSky is Not the Limit: LTE for Unmanned Aerial Vehicles.\
    \ IEEE Commun. Mag. 2018, 56, 204–210. [CrossRef]\n73.\nVilla, D.K.D.; Brandão,\
    \ A.S.; Sarcinelli-Filho, M. A Survey on Load Transportation Using Multirotor\
    \ UAVs. J. Intell. Robot. Syst.\nTheory Appl. 2020, 98, 267–296. [CrossRef]\n\
    74.\nAlladi, T.; Chamola, V.; Sahu, N.; Guizani, M. Applications of blockchain\
    \ in unmanned aerial vehicles: A review. Veh. Commun.\n2020, 23, 100249. [CrossRef]\n\
    75.\nRen, J.; Guo, H.; Xu, C.; Zhang, Y. Serving at the Edge: A Scalable IoT Architecture\
    \ Based on Transparent Computing. IEEE Netw.\n2017, 31, 96–105. [CrossRef]\n76.\n\
    Mach, P.; Becvar, Z. Mobile Edge Computing: A Survey on Architecture and Computation\
    \ Ofﬂoading. IEEE Commun. Surv. Tutor.\n2017, 19, 1628–1656. [CrossRef]\n77.\n\
    Lu, W.; Ding, Y.; Gao, Y.; Hu, S.; Wu, Y.; Zhao, N.; Gong, Y. Resource and Trajectory\
    \ Optimization for Secure Communications in\nDual-UAV-MEC Systems. IEEE Trans.\
    \ Ind. Inform. 2021, 3203, 1–10. [CrossRef]\n78.\nChen, J.; Chen, S.; Luo, S.;\
    \ Wang, Q.; Cao, B.; Li, X. An intelligent task of ﬂ oading algorithm (iTOA) for\
    \ UAV edge computing\nnetwork. Digit. Commun. Netw. 2020, 6, 433–443. [CrossRef]\n\
    79.\nZhu, S.; Lin, G.; Zhao, D.; Cheng, N.; Zhang, Q.; Lang, X. Learning-Based\
    \ Computation Ofﬂoading Approaches in UAVs-Assisted\nEdge Computing. IEEE Trans.\
    \ Veh. Technol. 2021, 70, 928–944. [CrossRef]\n80.\nLiyanage, M.; Dar, F.; Sharma,\
    \ R.; Flores, H. GEESE: Edge computing enabled by UAVs. Pervasive Mob. Comput.\
    \ 2021, 72, 101340.\n[CrossRef]\n81.\nXu, J.; Liu, X.; Li, X.; Zhang, L.; Jin,\
    \ J.; Yang, Y. Energy aware Computation Management Strategy for Smart Logistic\
    \ System with\nMEC. IEEE Internet Things J. 2021, 4662, 1–17. [CrossRef]\n82.\n\
    Li, W.T.; Zhao, M.; Wu, Y.H.; Yu, J.J.; Bao, L.Y.; Yang, H.; Liu, D. Collaborative\
    \ ofﬂoading for UAV—enabled time—sensitive MEC\nnetworks. EURASIP J. Wirel. Commun.\
    \ Netw. 2021, 2021, 1. [CrossRef]\n83.\nLiu, Y.; Xiong, K.; Ni, Q.; Member, S.;\
    \ Fan, P.; Member, S.; Letaief, K.B. UAV-assisted Wireless Powered Cooperative\
    \ Mobile Edge\nComputing: Joint Ofﬂoading, CPU Control and Trajectory Optimization.\
    \ IEEE Internet Things J. 2019, 7, 2777–2790. [CrossRef]\n84.\nZhang, T.; Xu,\
    \ Y.; Loo, J.; Yang, D.; Xiao, L. Joint Computation and Communication Design for\
    \ UAV-Assisted Mobile Edge\nComputing in IoT. IEEE Trans. Ind. Inform. 2019, 16,\
    \ 5505–5516. [CrossRef]\n85.\nHu, X.; Wong, K.K.; Yang, K.; Zheng, Z. UAV-Assisted\
    \ Relaying and Edge Computing: Scheduling and Trajectory Optimization.\nIEEE Trans.\
    \ Wirel. Commun. 2019, 18, 4738–4752. [CrossRef]\n86.\nDu, Y.; Yang, K.; Wang,\
    \ K.; Zhang, G.; Zhao, Y.; Chen, D. Joint Resources and Workﬂow Scheduling in\
    \ UAV-Enabled Wirelessly-\nPowered MEC for IoT Systems. IEEE Trans. Veh. Technol.\
    \ 2019, 68, 10187–10200. [CrossRef]\n87.\nWang, Y.; Ru, Z.Y.; Wang, K.; Huang,\
    \ P.Q. Joint Deployment and Task Scheduling Optimization for Large-Scale Mobile\
    \ Users in\nMulti-UAV-Enabled Mobile Edge Computing. IEEE Trans. Cybern. 2020,\
    \ 50, 3984–3997. [CrossRef] [PubMed]\n88.\nLuo, Y.; Ding, W.; Zhang, B. Optimization\
    \ of Task Scheduling and Dynamic Service Strategy for Multi-UAV-enabled Mobile\
    \ Edge\nComputing System. IEEE Trans. Cogn. Commun. Netw. 2021, 7, 970–984. [CrossRef]\n\
    89.\nOuyang, W.; Chen, Z.; Wu, J.; Yu, G.; Zhang, H. Dynamic Task Migration Combining\
    \ Energy Efﬁciency and Load Balancing\nOptimization in Three-Tier UAV-Enabled\
    \ Mobile Edge Computing System. Electronics 2021, 10, 190. [CrossRef]\nDrones\
    \ 2021, 5, 148\n28 of 30\n90.\nGuo, H.; Liu, J. UAV-Enhanced Intelligent Ofﬂoading\
    \ for Internet of Things at the Edge. IEEE Trans. Ind. Inform. 2020, 16,\n2737–2746.\
    \ [CrossRef]\n91.\nZhang, B.; Zhang, G.; Ma, S.; Yang, K.; Wang, K. Efﬁcient Multitask\
    \ Scheduling for Completion Time Minimization in UAV-\nAssisted Mobile Edge Computing.\
    \ Mob. Inf. Syst. 2020, 2020, 8791030. [CrossRef]\n92.\nZhou, Y.; Pan, C.; Yeoh,\
    \ P.L.; Wang, K.; Elkashlan, M.; Vucetic, B.; Li, Y. Secure Communications for\
    \ UAV-Enabled Mobile Edge\nComputing Systems. IEEE Trans. Commun. 2020, 68, 376–388.\
    \ [CrossRef]\n93.\nZhou, Z.; Feng, J.; Tan, L.; He, Y.; Gong, J. An air-ground\
    \ integration approach for mobile edge computing in IoT. IEEE Commun.\nMag. 2018,\
    \ 56, 40–47. [CrossRef]\n94.\nNarang, M.; Xiang, S.; Liu, W.; Gutierrez, J.; Chiaraviglio,\
    \ L. UAV-assisted Edge Infrastructure for Challenged Networks. In\nProceedings\
    \ of the 2017 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS),\
    \ Atlanta, GA, USA,\n1–4 May 2017. [CrossRef]\n95.\nHu, Q.; Cai, Y.; Yu, G.; Qin,\
    \ Z.; Zhao, M.; Li, G.Y. Joint ofﬂoading and trajectory design for UAV-enabled\
    \ mobile edge computing\nsystems. IEEE Internet Things J. 2019, 6, 1879–1892.\
    \ [CrossRef]\n96.\nChang, H.; Chen, Y.; Zhang, B.; Doermann, D. Multi-UAV Mobile\
    \ Edge Computing and Path Planning Platform Based on\nReinforcement Learning.\
    \ IEEE Trans. Emerg. Top. Comput. Intell. 2021, 1–10. [CrossRef]\n97.\nDiao, X.;\
    \ Zheng, J.; Wu, Y.; Cai, Y.; Anpalagan, A. Joint Trajectory Design, Task Data,\
    \ and Computing Resource Allocations for\nNOMA-Based and UAV-Assisted Mobile Edge\
    \ Computing. IEEE Access 2019, 7, 117448–117459. [CrossRef]\n98.\nZhou, F.; Wu,\
    \ Y.; Hu, R.Q.; Qian, Y. Computation rate maximization in UAV-Enabled wireless-powered\
    \ mobile-edge computing\nsystems. IEEE J. Sel. Areas Commun. 2018, 36, 1927–1941.\
    \ [CrossRef]\n99.\nBalamuralidhar, N.; Tilon, S.; Nex, F. MultEYE: Monitoring\
    \ System for Real-Time Vehicle Detection, Tracking and Speed\nEstimation from\
    \ UAV Imagery on Edge-Computing Platforms. Remote Sens. 2021, 13, 573. [CrossRef]\n\
    100. Yang, M.; Boubin, J.G.; Ping, H.; Tseng, H.; Hsu, Y.; Stewart, C.C. Adaptive\
    \ autonomous UAV scouting for rice lodging assessment\nusing edge computing with\
    \ deep learning EDANet. Comput. Electron. Agric. 2020, 179, 105817. [CrossRef]\n\
    101. Yang, Z.; Chen, M.; Liu, X.; Liu, Y.; Chen, Y.; Cui, S.; Poor, H.V. Aerial\
    \ Computing: Drones for Multi-Access Edge Computing\nAI-Driven UAV-NOMA-MEC in\
    \ Next Generation Wireless Networks. IEEE Wirel. Commun. 2021, 28. [CrossRef]\n\
    102. Grasso, C.; Schembra, G. A Fleet of MEC UAVs to Extend a 5G Network Slice\
    \ for Video Monitoring with Low-Latency Constraints.\nJ. Sens. Actuator Netw.\
    \ 2019, 8, 3. [CrossRef]\n103. Nie, Y.; Member, S.; Zhao, J.; Member, S.; Gao,\
    \ F.; Yu, F.R. Semi-Distributed Resource Management in UAV-Aided MEC Systems:\n\
    A Multi-Agent Federated Reinforcement Learning Approach. IEEE Trans. Veh. Technol.\
    \ 2021, 1–12. [CrossRef]\n104. Sedjelmaci, H.; Boudguiga, A.; Ben, I.; Mohammed,\
    \ S. Ad Hoc Networks An efﬁcient cyber defense framework for UAV-Edge\ncomputing\
    \ network. Ad Hoc Netw. 2019, 94, 101970. [CrossRef]\n105. Tian, Y.; Yuan, J.;\
    \ Song, H. Journal of Information Security and Applications Efﬁcient privacy-preserving\
    \ authentication framework\nfor e dge-assiste d Internet of Drones. J. Inf. Secur.\
    \ Appl. 2019, 48, 102354. [CrossRef]\n106. Wang, G.; Yu, X.; Xu, F.; Cai, J. Task\
    \ ofﬂoading and resource allocation for UAV-assisted mobile edge computing with\
    \ imperfect\nchannel estimation over Rician fading channels. EURASIP J. Wirel.\
    \ Commun. Netw. 2020, 8, 1–19. [CrossRef]\n107. Messous, M.; Arfaoui, A.; Alioua,\
    \ A.; Senouci, S.; Ea, D.; Comté, F. A Sequential Game Approach for Computation-Ofﬂoading\n\
    in an UAV Network. In Proceedings of the GLOBECOM 2017—2017 IEEE Global Communications\
    \ Conference, Singapore,\n4–8 December 2017; pp. 1–7. [CrossRef]\n108. Li, J.;\
    \ Liu, Q.; Wu, P.; Shu, F.; Jin, S. Task Ofﬂoading for UAV-based Mobile Edge Computing\
    \ via Deep Reinforcement Learning. In\nProceedings of the 2018 IEEE/CIC International\
    \ Conference on Communications, Beijing, China, 16–18 August 2018; pp. 798–802.\n\
    [CrossRef]\n109. Ren, Y.; Xie, Z.; Ding, Z.; Sun, X.; Xia, J.; Tian, Y. Computation\
    \ ofﬂoading game in multiple unmanned aerial vehicle-enabled\nmobile edge computing\
    \ networks. IET Commun. 2021, 15, 1392–1401. [CrossRef]\n110. Zhang, L.; Zhao,\
    \ Z.; Wu, Q.; Zhao, H.; Xu, H.; Wu, X. Energy-Aware Dynamic Resource Allocation\
    \ in UAV Assisted Mobile Edge\nComputing Over Social Internet of Vehicles. IEEE\
    \ Access 2018, 6, 56700–56715. [CrossRef]\n111. Wang, X.; Han, Y.; Leung, V.C.M.;\
    \ Niyato, D.; Yan, X.; Chen, X. Convergence of Edge Computing and Deep Learning:\
    \ A Compre-\nhensive Survey. IEEE Commun. Surv. Tutor. 2020, 22, 869–904. [CrossRef]\n\
    112. Wang, H.; Ke, H.; Sun, W. Unmanned-aerial-vehicle-assisted computation ofﬂoading\
    \ for mobile edge computing based on deep\nreinforcement learning. IEEE Access\
    \ 2020, 8, 180784–180798. [CrossRef]\n113. Ullah, Z.; Al-Turjman, F.; Moatasim,\
    \ U.; Mostarda, L.; Gagliardi, R. UAVs joint optimization problems and machine\
    \ learning to\nimprove the 5G and Beyond communication. Comput. Netw. 2020, 182,\
    \ 107478. [CrossRef]\n114. Pourghasemian, M.; Abedi, M.R.; Salarhosseini, S.;\
    \ Mokari, N.; Javan, M.R.; Jorswieck, E.A. AI-Based and Mobility-Aware Energy\n\
    Efﬁcient Resource Allocation and Trajectory Design for NFV Enabled Aerial Networks.\
    \ arXiv 2021, arXiv:2105.10282. Available\nonline: https://arxiv.org/abs/2105.10282v1\
    \ (accessed on 12 November 2021).\n115. Xu, J.; Chen, L.; Ren, S. Online Learning\
    \ for Ofﬂoading and Autoscaling in Energy Harvesting Mobile Edge Computing.\n\
    IEEE Trans. Cogn. Commun. Netw. 2017, 3, 361–373. [CrossRef]\n116. Wang, J.; Hu,\
    \ J.; Min, G.; Zhan, W.; Ni, Q.; Georgalas, N. Computation Ofﬂoading in Multi-Access\
    \ Edge Computing Using a Deep\nSequential Model Based on Reinforcement Learning.\
    \ IEEE Commun. Mag. 2019, 57, 64–69. [CrossRef]\nDrones 2021, 5, 148\n29 of 30\n\
    117. Bozorgchenani, A.; Member, S.; Mashhadi, F.; Member, S. Multi-Objective Computation\
    \ Sharing in Energy and Delay Constrained\nMobile Edge Computing Environments.\
    \ IEEE Trans. Mob. Comput. 2020, 20, 2992–3005. [CrossRef]\n118. Tang, L.; Tang,\
    \ B.; Kang, L.; Zhang, L. A Novel Task Caching and Migration Strategy in Multi-Access\
    \ Edge Computing Based on\nthe Genetic Algorithm. Futur. Internet 2019, 11, 181.\
    \ [CrossRef]\n119. Dinh, T.Q.; Member, S.; La, Q.D.; Quek, T.Q.S. Distributed\
    \ Learning for Computation Ofﬂoading in Mobile Edge Computing.\nIEEE Trans. Commun.\
    \ 2018, 66, 6353–6367. [CrossRef]\n120. Miao, Y.; Wu, G.; Li, M.; Ghoneim, A.;\
    \ Al-rakhami, M. Intelligent task prediction and computation ofﬂoading based on\
    \ mobile-\nedge cloud computing. Futur. Gener. Comput. Syst. 2020, 102, 925–931.\
    \ [CrossRef]\n121. Li, G.; Zhou, H.; Feng, B.; Li, G.; Li, T.; Xu, Q.; Quan, W.\
    \ Fuzzy Theory Based Security Service Chaining for Sustainable\nMobile-Edge Computing.\
    \ Mob. Inf. Syst. 2017, 2017, 8098394. [CrossRef]\n122. Vimal, S.; Khari, M.;\
    \ Dey, N.; González, R.; Robinson, Y.H. Enhanced resource allocation in mobile\
    \ edge computing using\nreinforcement learning based MOACO algorithm for IIOT.\
    \ Comput. Commun. 2020, 151, 355–364. [CrossRef]\n123. Li, J.; Gao, H.; Lv, T.;\
    \ Lu, Y. Deep reinforcement learning based computation ofﬂoading and resource\
    \ allocation for MEC. In\nProceedings of the 2018 IEEE Wireless Communications\
    \ and Networking Conference (WCNC), Barcelona, Spain, 15–18 April\n2018; pp. 1–6.\
    \ [CrossRef]\n124. Wang, J.; Member, S.; Zhao, L.; Member, S.; Liu, J.; Member,\
    \ S. Smart Resource Allocation for Mobile Edge Computing: A Deep\nReinforcement\
    \ Learning Approach. IEEE Trans. Emerg. Top. Comput. 2019, 9, 1529–1541. [CrossRef]\n\
    125. Zhang, Q.; Lin, M.; Yang, L.T.; Chen, Z.; Li, P. Energy-Efﬁcient Scheduling\
    \ for Real-Time Systems Based on Deep Q-Learning\nModel. IEEE Trans. Sustain.\
    \ Comput. 2017, 4, 132–141. [CrossRef]\n126. Luo, Z.; Liwang, M.; Lin, Z.; Huang,\
    \ L.; Du, X. Energy-Efﬁcient Caching for Mobile Edge Computing in 5G Networks.\
    \ Appl. Sci.\n2017, 7, 557. [CrossRef]\n127. Xiao, L.; Wan, X.; Dai, C.; Du, X.;\
    \ Chen, X.; Guizani, M. Security in Mobile Edge Caching with Reinforcement Learning.\
    \ IEEE Wirel.\nCommun. 2018, 25, 116–122. [CrossRef]\n128. Huang, L.; Feng, X.;\
    \ Zhang, C.; Qian, L.; Wu, Y. Deep reinforcement learning-based joint task of\
    \ ﬂ oading and bandwidth\nallocation for multi-user mobile edge computing. Digit.\
    \ Commun. Netw. 2019, 5, 10–17. [CrossRef]\n129. Li, Z. Genetic Algorithm-Based\
    \ Optimization of Ofﬂoading and Resource Allocation in Mobile-Edge Computing.\
    \ Information\n2020, 11, 83. [CrossRef]\n130. Huang, L.; Feng, X.; Feng, A.; Huang,\
    \ Y.; Qian, L.P. Distributed Deep Learning-based Ofﬂoading for Mobile Edge Computing\n\
    Distributed Deep Learning-based Ofﬂoading for Mobile Edge. Mob. Netw. Appl. 2018,\
    \ 1–8. [CrossRef]\n131. Guo, F.; Zhang, H.; Ji, H.; Li, X.; Leung, V.C.M. An efﬁcient\
    \ computation ofﬂoading management scheme in the densely deployed\nsmall cell\
    \ networks with mobile edge computing. IEEE/ACM Trans. Netw. 2018, 26, 2651–2664.\
    \ [CrossRef]\n132. Wang, L.; Wang, K.; Pan, C.; Xu, W.; Aslam, N.; Hanzo, L. Multi-Agent\
    \ Deep Reinforcement Learning-Based Trajectory Planning\nfor Multi-UAV Assisted\
    \ Mobile Edge Computing. IEEE Trans. Cogn. Commun. Netw. 2021, 7, 73–84. [CrossRef]\n\
    133. Liu, Y.; Member, S.; Chen, Y.; Member, S. Artiﬁcial Intelligence Driven UAV-NOMA-MEC\
    \ in Next Generation Wireless Networks.\narXiv 2021, arXiv:2101.11681. Available\
    \ online: https://arxiv.org/abs/2101.11681v1 (accessed on 12 November 2021).\n\
    134. Yu, S.; Wang, X.; Langar, R. Computation ofﬂoading for mobile edge computing:\
    \ A deep learning approach. In Proceedings of the\nIEEE International Symposium\
    \ on Personal, Indoor and Mobile Radio Communications, Bologna, Italy, 9–12 September\
    \ 2018;\npp. 1–6. [CrossRef]\n135. Chen, L.; Zhao, R.; He, K.; Zhao, Z.; Fan,\
    \ L. Intelligent ubiquitous computing for future UAV-enabled MEC network systems.\n\
    Cluster Comput. 2021. [CrossRef]\n136. Liu, Y.; Xie, S.; Zhang, Y. Cooperative\
    \ Ofﬂoading and Resource Management for UAV-Enabled Mobile Edge Computing in Power\n\
    IoT System. IEEE Trans. Veh. Technol. 2020, 69, 12229–12239. [CrossRef]\n137.\
    \ Liu, X.; Liu, Y.; Chen, Y.; Hanzo, L. Trajectory design and power control for\
    \ multi-UAV assisted wireless networks: A machine\nlearning approach. IEEE Trans.\
    \ Veh. Technol. 2019, 68, 7957–7969. [CrossRef]\n138. Ma, X.; Yin, C.; Liu, X.\
    \ Machine Learning Based Joint Ofﬂoading and Trajectory Design in UAV Based MEC\
    \ System for IoT\nDevices. In Proceedings of the 2020 IEEE 6th International Conference\
    \ on Computer and Communications (ICCC), Chengdu,\nChina, 11–14 December 2020;\
    \ pp. 902–909. [CrossRef]\n139. Grasso, C.; Raftopoulos, R.; Schembra, G. Deep\
    \ Q-Learning for Job Ofﬂoading Orchestration in a Fleet of MEC UAVs in 5G\nEnvironments.\
    \ In Proceedings of the 2021 IEEE 7th International Conference on Network Softwarization\
    \ (NetSoft), Tokyo, Japan,\n28 June–2 July 2021; pp. 186–190. [CrossRef]\n140.\
    \ Zhang, C.; Zheng, Z. Task migration for mobile edge computing using deep reinforcement\
    \ learning. Futur. Gener. Comput. Syst.\n2019, 96, 111–118. [CrossRef]\n141. Fraga-Lamas,\
    \ P.; Ramos, L.; Mondéjar-Guerra, V.; Fernández-Caramés, T.M. A review on IoT\
    \ deep learning UAV systems for\nautonomous obstacle detection and collision avoidance.\
    \ Remote Sens. 2019, 11, 2144. [CrossRef]\n142. Lagkas, T.; Argyriou, V.; Bibi,\
    \ S.; Sarigiannidis, P. UAV IoT framework views and challenges: Towards protecting\
    \ drones as\n“things”. Sensors 2018, 18, 4015. [CrossRef]\n143. Jensen, I.J.;\
    \ Selvaraj, D.F.; Ranganathan, P. Blockchain technology for networked swarms of\
    \ unmanned aerial vehicles (UAVs).\nIn Proceedings of the 2019 IEEE 20th International\
    \ Symposium on A World of Wireless, Mobile and Multimedia Networks\n(WoWMoM),\
    \ Washington, DC, USA, 10–12 June 2019. [CrossRef]\nDrones 2021, 5, 148\n30 of\
    \ 30\n144. Stöcker, C.; Bennett, R.; Nex, F.; Gerke, M.; Zevenbergen, J. Review\
    \ of the Current State of UAV Regulations. Remote Sens. 2017, 9,\n459. [CrossRef]\n\
    145. Zhang, Q.; Chen, J.; Ji, L.; Feng, Z.; Han, Z.; Chen, Z. Response Delay Optimization\
    \ in Mobile Edge Computing Enabled UAV\nSwarm. IEEE Trans. Veh. Technol. 2020,\
    \ 69, 3280–3295. [CrossRef]\n146. Zhou, F.; Hu, R.Q.; Li, Z.; Wang, Y. Mobile\
    \ edge computing in unmanned aerial vehicle networks. IEEE Wirel. Commun. 2020,\
    \ 27,\n140–146. [CrossRef]\n147. Tang, S.; Zhou, W.; Chen, L.; Lai, L.; Xia, J.;\
    \ Fan, L. Battery-constrained federated edge learning in UAV-enabled IoT for B5G/6G\n\
    networks. Phys. Commun. 2021, 47, 101381. [CrossRef]\n"
  inline_citation: '>'
  journal: Drones
  limitations: '>'
  pdf_link: https://www.mdpi.com/2504-446X/5/4/148/pdf?version=1639379359
  publication_year: 2021
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'UAV-Enabled Mobile Edge-Computing for IoT Based on AI: A Comprehensive Review'
  verbatim_quote1: '"This review explores the use of UAVs in emerging IoT applications
    and the utility of both deep learning (DL) and machine learning (ML) in UAV-enabled
    MEC systems."'
  verbatim_quote2: '"In this context, the most critical issues and challenges of UAV-enabled
    MEC based on AI are accurately outlined and discussed."'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/mass.2010.5663998
  analysis: 'The paper proposes SinkTrail, a proactive data reporting protocol for
    energy-efficient data gathering in wireless sensor networks. SinkTrail achieves
    low energy consumption by reducing the number of sink location broadcasting messages
    and effectively predicting mobile sink locations without GPS or predefined landmarks.
    It allows flexible movement of mobile sinks and establishes a logical coordinate
    system for tracking sink locations, significantly saving energy during data reporting.


    The paper contributes to the field of automated irrigation management systems
    by providing a means to efficiently collect data from sensors and transmit it
    to mobile sinks, which can then be used to optimize irrigation schedules.'
  authors:
  - Xinxin Liu
  - Zheng‐Fu Han
  - Xin Yang
  - Xin Li
  - Ning Wang
  citation_count: 15
  full_citation: 'Xinxin Liu; Han Zhao; Xin Yang; Xiaolin Li; Ning Wang. Trailing
    mobile sinks: A proactive data reporting protocol for Wireless Sensor Networks.
    The 7th IEEE International Conference on Mobile Ad-hoc and Sensor Systems (IEEE
    MASS 2010), 08-12 November 2010.'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >The 7th IEEE International Co... Trailing
    mobile sinks: A proactive data reporting protocol for Wireless Sensor Networks
    Publisher: IEEE Cite This PDF Xinxin Liu; Han Zhao; Xin Yang; Xiaolin Li; Ning
    Wang All Authors 11 Cites in Papers 350 Full Text Views Abstract Document Sections
    I. Introduction II. Related Work III. Sinktrail Protocol Design IV. Performance
    Analysis V. Design Improvements Show Full Outline Authors Figures References Citations
    Keywords Metrics Abstract: In Wireless Sensor Networks (WSN), data gathering using
    mobile sinks typically incurs constant propagation of sink location indication
    messages to guide the direction of data reporting. Such behavior is undesirable,
    especially when the sensor network scale increases, as frequent message flooding
    will cause serious congestion in network communication and significantly impair
    the sensor network lifetime. In this paper, we propose a proactive data reporting
    protocol, SinkTrail, which achieves energy efficient data forwarding to multiple
    mobile sinks, and effectively reduces the number of sink location broadcasting
    messages. SinkTrail is unique in two aspects: (1) it allows sufficient flexibility
    in the movement of mobile sinks to dynamically adapt to unknown terrestrial changes;
    and (2) without assistance of GPS or predefined landmarks, SinkTrail establishes
    a logical coordinate system for predicting and tracking mobile sinks'' locations,
    thereby significantly saves energy consumed during the data reporting process.
    We systematically analyze the impact of several design factors in SinkTrail and
    explore potential design improvements. The simulation results demonstrate that
    SinkTrail outperforms the Frequent Flooding Method (FFM) in finding shorter routing
    path and consumes less energy during data gathering process. Published in: The
    7th IEEE International Conference on Mobile Ad-hoc and Sensor Systems (IEEE MASS
    2010) Date of Conference: 08-12 November 2010 Date Added to IEEE Xplore: 10 December
    2010 ISBN Information: ISSN Information: DOI: 10.1109/MASS.2010.5663998 Publisher:
    IEEE Conference Location: San Francisco, CA, USA SECTION I. Introduction Wireless
    sensor networks (WSNs) are envisioned to consist of thousands of low-cost sensor
    nodes that are capable of gathering information from their immediate vicinity,
    processing sensed data, and communicating with each other via short-range radio
    links. A majority of WSN applications are concerning environmental information
    collection, e.g., habitat monitoring [13], and precision agriculture [10]. In
    these applications, sensor nodes are deployed in wild areas with few human interventions.
    Since sensor nodes have limited battery life, energy saving is of paramount importance
    in the design of sensor network protocols. Recent research on data collection
    reveals that, rather than reporting data through long, multihop, and error-prone
    routes to a static sink using tree or cluster network structure, allowing and
    leveraging sink mobility is more promising for energy efficient data gathering
    [1]. Mobile sinks, such as animals or vehicles equipped with radio devices, are
    sent into a field and communicate directly with sensor nodes. As such data transmission
    path is greatly shortened and energy consumption for relaying is reduced. However,
    data gathering using mobile sinks introduces new challenges to sensor network
    applications. As sink location changes constantly, routing algorithms designed
    for static sink are no longer suitable. For a WSN that consists thousands of sensors,
    gathering data by querying each sensor node individually will incur significant
    delay, thus is not feasible for many applications. Although several mobile elements
    scheduling (MES) protocols have been proposed to achieve efficient data collection
    via controlled sink mobility [12], [19], [24], determining a perfect moving trajectory
    for a mobile sink is itself an NP-hard problem [12], and may not be able to adapt
    to constrained access areas and changing field situations. One example is precision
    agriculture applications, e.g. Fig. 1, where mobile sinks collecting data most
    likely follow trails or field boundaries in order to not damage crops, and change
    trajectories dynamically according to farmland situations. Data dissemination
    protocols, such as Directed Diffusion [8] and DRP [2], suggest that a mobile sink
    announce its location information frequently throughout the network. We refer
    to this class of methods as Frequent Flooding Method (FFM). An example data reporting
    path of FFM is presented using black solid route shown in Fig. 2. FFM consumes
    large amount of energy on broadcasting, and wastes extra energy to detour large
    data packets (originally target at previous sink location, now change to current
    sink location). To improve the scalability and energy efficiency in FFM, we require
    data to be transmitted via the shortest route to the mobile sink''s future locations,
    as observed in the red dashed route in Fig. 2. Therefore if sensors can predict
    the mobile sink''s movement, the energy consumption would be greatly reduced and
    data packets handoff would be smoother. Fig. 1. A photograph showing a typical
    farmland of irregular shapes. A mobile sink''s movement in such environment is
    constrained Show All Fig. 2. Comparison of routing methods: FFM vs. SinkTrail.
    A mobile sink moves from trail point 1 to trail point 2 in a sensor network deployed
    in a wild area. Black solid route represents data report message path in FFM (without
    location prediction), it takes 6 hops to trail point 2. Whereas red dashed route
    represents predictive SinkTrail routing, taking only 4 hops to the mobile sink''s
    current location Show All In this paper we propose SinkTrail, a proactive, greedy
    data forwarding protocol that is self-adaptive to various application scenarios.
    In SinkTrail, mobile sinks move continuously in the field in relatively low speed,
    and gather data on the fly. Control messages are broadcasted at certain points
    in much lower frequency than FFM. These positions are viewed as “footprints” of
    a mobile sink. Viewing each footprint as a virtual landmark, it is easy for a
    sensor node to identify its hop count distances to these landmarks. These hop
    count distances combined represent the sensor node''s coordinate in the logical
    coordinate space. Similarly, coordinate of the mobile sink is its hop count distances
    from the current location to previous virtual landmarks. Having the destination
    coordinate and its own coordinate, each sensor node greedily selects next hop
    with the shortest logical distance to the mobile sink. As a result SinkTrail solves
    the problem of movement prediction for data gathering with mobile sinks. Our contributions
    for proposing SinkTrail are three-fold: first, we propose a unique logical coordinate
    representation for tracking mobile sinks without assistance of GPS devices or
    predefined landmarks. Second, we design a novel low-complexity dynamic routing
    protocol for data gathering with one or multiple mobile sink(s), which effectively
    reduces average route length and lower total energy consumption. Third, the impacts
    of several design parameters of SinkTrail are explored, and improvements to the
    original SinkTrail protocol are also suggested to guide the deployment in realworld
    applications. The rest of this paper is organized as follows. Section II presents
    related work. The protocol design is introduced in Section III. Performance of
    SinkTrail is analyzed and investigated in Section IV. Section V proposes design
    improvements to SinkTrail, and Section VI concludes with a summary of our work.
    SECTION II. Related Work Due to its energy efficient property, leveraging mobile
    sinks in sensor data collection becomes popular in the past few years. In this
    section we review related research of this topic. At the first look, multicasting
    is the most natural solution to track the moving mobile sink. In [7], a spatial-temporal
    multicast protocol is proposed to establish a delivery zone ahead of mobile sink''s
    arrival. Control messages are flooded to wake up nodes in the delivery zone. Similarly,
    Park et al. [15] proposed DRMOS that divides sensors into “wake-up” zones to save
    energy. Fodor et al. [5] lowered communication overhead by proposing a restricted
    flooding method; routes are updated only when topology changes. Lou et al. [11]
    proposed that a mobile sink should move following a circle trail in deployed sensor
    field to maximize data gathering efficiency. One big problem of the multicasting
    methods lies in its flooding nature. Moreover, these papers either assumes mobile
    sinks move at fixed velocity and fixed direction, or move following a fixed pattern,
    which largely confine their application. The SinkTrail protocol with message suppression
    minimizes the flooding effect of control messages without confining mobile sink''s
    moving, thus is more attractive in real-world deployment. Another solution utilizes
    opportunistic data reporting. For instance in [17] the authors studied data collection
    performance when a mobile sink presents at random places in the network. The method
    relies heavily on network topology and density, and suffers scalability issues
    when all data packets are forwarded repeatedly in the network. Another category
    of methods, called mobile element scheduling (MES) algorithms [3], [12], [19]–[21],
    [24], considered controlled mobile sink mobility and advanced planning of mobile
    sink''s moving path. Ma et al. [12] focused on minimizing the length of each data
    gathering tour by intentionally controlling the mobile sink''s movement to query
    every sensor node in the network. When data sampling rates in the network are
    heterogeneous, scheduling mobile sinks to visit hot-spots of the sensor network
    becomes helpful. Example algorithms can be found in [3], [20], [21]. Although
    the MES methods effectively reduce the data transmission cost, they require a
    mobile sink to cover every node in the sensor field, which makes it hard to accommodate
    to large-scale, and introduces high latency in data gathering. Even worse, finding
    an optimal data gathering tour in general is itself an NP-hard problem [12], and
    constrained access areas or obstacles in the deployed field pose more complexity.
    Unlike MES algorithms, SinkTrail, with almost no constraint on the moving trajectory
    of mobile sinks, achieves much more flexibility to adapt to dynamically changing
    field situations while still maintains low communication overhead. SinkTrail uses
    sink location prediction and selects data reporting routes in a greedy manner.
    Previous research proposed location prediction and proactive data reporting can
    be found in [9] and [22] respectively. In [9] the authors used sequential Monte
    Carlo theory to predict sink locations. The TTDD protocol suggested in [22], constructed
    a two-tier data dissemination structure to enable fast data forwarding. It allowed
    nodes that are data sources proactively report data to the mobile sink. SinkTrail
    differs from these two papers in that it employs a different prediction technique
    that has lower complexity, and does not rely on the assumption of location-aware
    sensor nodes, which could be impractical for some real-world applications. The
    routing protocol of SinkTrail is inspired by recent research on virtual coordinate
    routing [6], [14], [16]. Rao et al. [16] proposed a greedy algorithm for data
    reporting using logical coordinates rather than geographic coordinates. Fonseca
    et al. [6] presented vector form virtual coordinates, in which each element in
    the vector represented the hop count to a landmark node. SinkTrail adopts this
    vector representation, and uses past locations of the mobile sink as virtual landmarks.
    To the best of our knowledge, we are the first to associate mobile sink''s “footprint”
    left at moving path with routing algorithm construction. The vector form coordinates,
    called trail references, are used to guide data reporting without knowledge of
    the physical locations and velocity of the mobile sink. Fig. 3. Data gathering
    with one mobile sink: yellow stars indicate the mobile sink''s trail points, and
    sensor nodes maintain trail references as logical coordinates. Shaded areas stand
    for obstacles Show All SECTION III. Sinktrail Protocol Design A. Problem formulation
    We consider a large scale, uniformly distributed sensor network N deployed in
    an outdoor area of irregular shape shown in Fig. 3. Nodes in the network communicate
    with each other via radio links. We assume the whole sensor network is connected,
    which is achieved by deploying sensors densely. We also assume sensor nodes are
    awake when data gathering process starts (by synchronization or a short “wake
    up” message). In order to gather data from N, we periodically send out some mobile
    sinks into the field. These mobile sinks are assumed to have sufficient power
    and equipped with radios and processors. A data gathering process starts from
    the time mobile sinks enter the field and terminates when: (1) enough data are
    collected (measured by a user defined threshold); and (2) there are no more data
    reports in a certain period. The SinkTrail protocol is proposed for sensor nodes
    to proactively report their data back to one of the mobile sinks. To illustrate
    our data gathering algorithm clearly, we first consider the scenario where there
    is only one mobile sink in N. The multiple mobile sinks scenario is discussed
    later. B. SinkTrail protocol with one mobile sink During the data gathering process,
    the mobile sink moves around in N with relatively low speed, and keeps listening
    for data report packets. It stops at some place for a very short time, broadcasts
    a message to the whole network, and moves on to another place. We call these places
    “Trail Points”, and these messages “Trail Messages”. Example trail points are
    shown in Fig. 3. Let γ ¯ ¯ ¯ be the average transmission range, which is also
    one hop distance of radio transmission. Apparently two adjacent trail points should
    be separated by a distance longer than γ ¯ ¯ ¯ . To facilitate mobile sink tracking,
    we restrict that the distances between any two trail points are the same, denoted
    as K γ ¯ ¯ ¯ ,K≥1 . However, distribution of these trail points doesn''t necessarily
    follow any pattern. A trail message is a very short radio message sent by a mobile
    sink, it contains a sequence number (msg.seqN) and a hop count (msg.hopC) to the
    sink. The time interval between a mobile sink stops at one trail point and arrives
    at the next trail point is called one “move”. There are multiple moves during
    a data gathering round. The moving strategy of a mobile sink is summarized in
    Algorithm 1. Algorithm 1 Mobile sink''s moving strategy In the SinkTrail algorithm,
    we use vectors called “Trail References” to represent logical coordinates in a
    network. The trail reference maintained by each node is used as a location indicator
    for greedy packet forwarding. All trail references are of the same size. We use
    the following notations throughout the protocol description. n i : sensor node
    i N : total number of sensor nodes in N S : mobile sink M : number of mobile sinks
    v i : trail reference of node i e i j : the jth element in v i d v : trail reference
    size, d v =∥v∥ b : average number of neighbors of each node λ : the most recent
    message sequence number a node has recorded π i : the i th trail point of S K
    : step size parameter for one move (a step of K hop counts is K γ ¯ ¯ ¯ ) A sensor
    node has three functional states in the SinkTrail algorithm: “Prepare”, “Ready”,
    and “Post”. Fig. 4 displays the state transition of the sensor node. This state
    transition procedure consists mainly two phases. The first phase, called logical
    coordinate space construction, starts when the first trail message is received,
    and terminates before a node enters “Ready” state. During this phase, nodes update
    trail references corresponding to the mobile sink''s trail messages. After a node
    leaves the “Ready” state, it enters the greedy forwarding phase, where nodes decide
    how to report data packets to the mobile sink. Fig. 4. State transition diagram
    for a sensor node Show All Algorithm 2 Trail reference update algorithm 1) Logical
    coordinate space construction At beginning, all the trail references are initialized
    to [−1, −1, …, −1] of size d v . After the mobile sink S enters the field, it
    moves to its first trail point π 1 , and broadcasts a trail message to all the
    sensor nodes in N. The trail message–<msg.seqN, msg.hopC>–is set to < 1, 0 >,
    indicating that this is the first trail message from trail point one, and the
    hop count to S is zero. The nodes nearest to S will be the first ones to hear
    this message. To check the “freshness” of a message, a node n i needs to compare
    the sequence number carried in this trail message with its λ , which represents
    the latest sequence numbers n i has seen. And λ is reset to −1 after each data
    gathering process finishes. If this is a new message, the λ variable will be updated
    by the new sequence number. And node n i ''s trail reference v i is updated as
    follows. First, every element in v i is shifted to left by one position. Then,
    the hop count in the received trail message is increased by one, and replaces
    the right-most element e i d v in v i . After n i updates its trail reference,
    this trail message is rebroadcasted with the same sequence number and an incremented
    hop count. The same procedure repeats at all the other nodes in N . Within one
    move of S , all nodes in the network have updated their trail references according
    to their hop count distances to S ''s trail point π 1 . If a node receives a trail
    message with a sequence number equals to λ , but has a smaller hop count than
    it has already recorded, then the last hop count field in its trail reference
    is updated, and this trail message is rebroadcasted with the same sequence number
    and an incremented hop count. Trail messages that has sequence number less than
    λ will be discarded to eliminate flooding messages in the network. The steps described
    in Algorithm 2 summarizes the operations to update a trail reference. During the
    data gathering procedure, a node''s trail reference needs to be updated every
    time a new trail message is received. Fig. 5. Example execution snapshot of SinkTrail:
    yellow stars indicate trail points, and directed arrows stand for the moving path
    of mobile sink Show All After each node in the network received d v distinct trail
    messages, the logical coordinate space is established. A snapshot of a part of
    the network N is shown in Fig. 5. Trail references, such as [3],[1],[3] or [4],[2],[2],
    are considered logical coordinates of the sensor nodes in a network. 2) Destination
    identification The procedure of the Sink- Trail algorithm described here is a
    flexible and straightforward way of logical coordinate space construction. Rather
    than scheduling a mobile sink''s movement, it allows a mobile sink to spontaneously
    stop at convenient locations according to current field situations. These sojourn
    places of a mobile sink, named trail points in SinkTrail algorithm, are footprints
    left by a mobile sink, and provide valuable information for tracing the current
    location of a mobile sink. Viewing these footprints as virtual sinks or landmarks,
    hop count information reflects the moving trajectory of a mobile sink. A logical,
    d v −dimensional coordinate space is then established. One advantage of SinkTrail
    is that the logical coordinate of a mobile sink keeps invariant at each trail
    point, given the continuous update of trail references. This is because the mobile
    sink''s hop count distance to its previous d v −1 footprints are always K( d v
    −1),K( d v −2),…,K , and 0 to its current location. Therefore the logical coordinate
    [K( d v −1),K( d v −2),…,0] represents the current logical location of the mobile
    sink. We call this coordinate “Destination Reference”. This destination reference
    does not necessary require a mobile sink to have linear moving trajectory. Although
    arbitrary movement of a mobile sink may deteriorate the accuracy of destination
    reference, it can still serve as a guideline for data reporting. Here we set K=1
    and d v =3 to ease our presentation. A large value of K means even less broadcast
    frequency. (The impacts of mobile sinks'' moving pattern and broadcast frequency
    are investigated in section IV). Refer to Fig. 5, assume S is at trail point 3
    now, then its destination reference should be [2, 1, 0]. When S moves to trail
    point 4, the coordinate space is updated based on trail points 2, 3, and 4, and
    destination reference of the mobile sink is still [2, 1, 0]. Algorithm 3 Greedy
    data forwarding algorithm 3) Greedy forwarding Once a node has updated the 3 elements
    in its trail reference (we use d v =3 for easy understanding and clear presentation),
    it transfers from “Prepare” state to “Ready” state, and starts a timer that is
    inverse proportional to the right-most element in its trail reference. For example,
    in Fig. 5, node n 5 ''s trail reference is [4], [2], [3], then the duration of
    its timer is set to T 5 = T 0 −μ×3 . Here, T 0 and μ are predefined constants.
    The choice of timer function, T 0 , and μ may vary. However, we assume the timer
    durations are significantly longer than the propagation time of a trail message,
    so that timers on all nodes are viewed as starting at the same time. This timer
    mechanism is mainly used to differentiate data reporting orders, so the clock
    on each sensor node doesn''t need to be perfectly synchronized. Since the right-most
    element in a node''s trail reference is the latest hop count information from
    this node to a mobile sink, the inverse proportional timers ensure that nodes
    faraway from S have shorter timer durations than those close to S , thus will
    start data reporting first. When a node''s timer expires, it goes into “Post”
    state, and initiates the data reporting process. Every sensor node in the network
    maintains a routing table of size O(b) consisting all neighbors'' trail references.
    This routing table is built up by exchanging trail references with neighbors,
    as described in Algorithm 3; and it is updated whenever the mobile sink arrives
    at a new trail point. Although trail references may not be global identifiers,
    since route selection is conducted locally, they are good enough for the SinkTrail
    protocol. Because each trail reference has only 3 numbers, the size of exchange
    message is small. When a node has received all its neighbors'' trail references,
    it calculates their distances to the destination reference, [2, 1, 0], according
    to 2-norm vector calculation, and greedily choose the node with the smallest distance
    as next hop to relay data. If there is a tie we randomly choose one. The complete
    procedure of greedy forwarding is presented in Algorithm 3. Take the network in
    Fig. 5 as an example, when node n 5 decides to report its data, it compares n
    3 and n 4 ''s vector distance with [2, 1, 0]. Since n 3 ''s distance to [2, 1,
    0] is 11 − − √ , and n 4 ''s distance is 3, n 4 is chosen as the next hop of n
    5 . Fig. 6. Example execution snapshot of SinkTrail of multiple mobile sinks scenario
    Show All C. SinkTrail protocol with multiple mobile sinks The proposed SinkTrail
    protocol can be readily extended to multiple mobile sinks scenario with small
    modifications. When there are more than one sink in a network, each mobile sink
    broadcasts trail messages following Algorithm 1. Different from one sink scenario,
    a sender ID field, msg.sID, is added to each trail message to distinguish them
    from different senders. Algorithms executed on the sensor node side should be
    modified to accommodate multi-sink scenario as well. Instead of using only one
    trail reference, a sensor node maintains multiple trail references, each corresponds
    to a different mobile sink at the same time. Fig. 6 shows an example of two mobile
    sinks. Two trail references, colored in black and red, coexist in the same sensor
    node. In this way, multiple logical coordinate spaces are constructed concurrently,
    and each of them is established according to trail points of different mobile
    sinks. Each time a trail message arrives, the sensor node will check the mobile
    sink''s ID in the message to see if it is necessary to create a new trail reference.
    The procedure is summarized in Algorithm 4. In SinkTrail trail references of each
    node represent node locations in different logical coordinate spaces, when it
    comes to data forwarding, because reporting to any mobile sink is valid, the node
    can choose the neighbor closest to a mobile sink in ANY coordinate space. Algorithm
    4 Trail reference update algorithm for multiple mobile sinks Algorithm 5 Greedy
    data forwarding algorithm for multiple mobile sinks Sink location in each logical
    coordinate space is still [2, 1, 0], as we use K=1, d v =3 . If each mobile sink
    has a different K value, sensor nodes will calculate neighbors'' distances to
    multiple destination references and select route accordingly. Detailed description
    is in Algorithm 5. It is well-known that geographic routing and virtual coordinate
    based routing ensure loop-free routes [6], [16], so does SinkTrail. Fig. 6 gives
    us an example of data gathering in multiple coordinate spaces. For node n 5 ,
    its neighbor node n 3 ''s vector distance to [2, 1, 0] with regard to the yellow
    sink is 11 − − √ , and 5 – √ to the red sink. While for node n 4 , its distances
    are 3 and 5 – √ respectively. So either n 3 or n 4 can be used as the next hop
    to route to the red sink. SECTION IV. Performance Analysis The total energy cost
    during each data gathering process comes from mainly three sources in the proposed
    SinkTrail routing protocol: data packet forwarding, routing table maintenance,
    and trail message transmission, as shown in Equation 1: E total = E data + E routing
    + E trail (1) View Source Next we define energy cost of each source. Before we
    proceed the following notations are used for analysis. Let the energy cost for
    transmitting or receiving a trail message be α , and the cost for a data packet
    be β (In practice, energy cost for transmitting and receiving might be slightly
    different). We have β>>α since compared to trail messages, data packets have much
    larger data size, which is proportional to the energy cost for radio transmission.
    We also have N sensor nodes and M mobile sinks in the whole network N . Two factors
    affect the energy cost of data forwarding: number of data packets and the average
    route length. The data packets number is invariant for fixed size network. However,
    the average route length may vary in different routing protocols. Here we use
    a function R() to calculate the average route length in SinkTrail. The function
    accepts two parameters: moving pattern of a mobile sink P move and network size
    N . As such the data packet forwarding energy cost is estimated by: E data =f(β×R(
    P move ,N)×N) (2) View Source In SinkTrail, the energy consumption for each node
    to maintain local routing information is linearly proportional to the number of
    its neighbors. In addition, if there are multiple mobile sinks, the energy consumption
    increases as each node keeps different trail references for these mobile sinks.
    Therefore, the energy cost for routing information maintenance is summarized in
    Equation 3: E routing =g(b×N×M) (3) View Source Trail messages are control information
    used for constructing and updating the logical coordinate space. According to
    Sink-Trail the total number of trail messages depend on the network size, the
    number of trail points visited by each mobile sink, and the number of mobile sinks
    in N. The energy consumption for trail message transmission is given in Equation
    4: E trail =h(α×N× D π ×M) (4) View Source In the later parts of this section
    we discuss potential energy consumption impact of design parameters of the SinkTrail
    protocol. Some of the parameters may contribute positively to the overall system
    performance, while for the others, we need to find a tradeoff value balancing
    average route length and protocol overhead. To validate the discussion we developed
    a C++ package implementing the SinkTrail protocol, and conducted extensive simulations
    for different scenarios. Fig. 7. Mobile sink moving pattern: (a)Angular displacement
    θ i at each trail points. (b) Circular moving pattern, Σ θ i is 360° (c) Random
    moving pattern, Σ θ i is greater than 360°. (d) Linear moving pattern, Σ θ i is
    0° Show All A. Moving patterns of a mobile sink First we examine how the moving
    pattern of a mobile sink can affect the system performance, as directional change
    in a mobile sink''s movement is unavoidable due to occasional obstacles depicted
    in Fig. 3. To numerically model the moves conducted by the mobile sink, we trace
    the moving trail of a mobile sink on a plain and measure the directional change
    at each trail point. Specifically, suppose at some time the mobile sink arrives
    at trail point π i ∈Π , we define the angular displacement θ i as the angular
    variation of moving directions. Fig. 7(a) illustrates an example of recorded angular
    displacements at multiple trail points. As a result, the accumulative angular
    displacement of a mobile sink becomes a quantitative metric for the moving pattern.
    In Fig. 7(b-d) we depict three representative moving patterns performed by a mobile
    sink. In simulation, we distributed sensor nodes in a grid topology, and separated
    adjacent nodes by 1 unit distance. The network size varied from 20 × 20 to 40
    × 40 (with step size 1). The radius of the radio range for each sensor node is
    set to 2. Hence each node has about 5 to 12 neighbors, which is in accordance
    with realistic situations. We also designate β to be 20 times of α in the simulation
    [23]. The performance of SinkTrail is inspected in terms of average route length
    and overall energy consumption. Three moving patterns including circular, random,
    and quality moves are compared. The results are shown in Fig. 8 and Fig. 9. Fig.
    8. Impact of moving patterns: average route length Show All Fig. 9. Impact of
    moving patterns: energy consumption Show All From these two figures we observe
    that, both the average route length and energy consumption increase as the network
    size grows. For the three moving patterns, linear movement incurs the least energy
    consumption and the shortest average route length. As to the circular movement
    case, the mobile sink changes its direction regularly and smoothly, leading to
    performance close to the linear movement case. Finally, for the random move case,
    the results vary in a wide range. This is because it is difficult to predict the
    behaviors of random movement as trail messages are broadcasted at random intervals.
    Therefore, the overall system performance may suffer greatly when the directional
    change is radical at some trail point. Although SinkTrail does not place any moving
    restriction in general, changing directions strategically in a smooth and regular
    manner are much better than radical and unpredictable moving in SinkTrail. B.
    Number of mobile sinks We are interested in finding out how the number of mobile
    sinks will affect the overall system performance. In the multiple mobile sink
    scenario, several logical coordinate spaces are constructed concurrently and data
    packets are forwarded to the destination reference via the shortest path in any
    coordinate space. It is natural to think that increasing the number of mobile
    sinks will reduce the average route length, thus will decrease the total energy
    consumption. Nonetheless, more mobile sinks also impose heavier burdens for trail
    message broadcasting and routing information maintenance. Even worse, multiple
    number of mobile sinks in a network aggravate control traffic congestion and communication
    delays, which will in turn result in higher packet loss and retransmission rate.
    To acquire visualized results on the impact, we simulate the multiple mobile sink
    scenario using the aforementioned simulation setup. The number of mobile sinks
    used is up to 3 and they are injected into the network at the same time. For fair
    comparison all the mobile sinks moved randomly in different routes, and broadcasted
    at the same frequency. We averaged the results of 20 simulation runs and the results
    are exhibited in Fig. 10 and Fig. 11. The trends shown in the figures confirm
    our analysis. The average route length is reduced by 56.8% and 72.5% for 2 and
    3 sinks respectively; while for the total energy cost, using more mobile sinks
    increases trail messages and routing table costs, thereby yield to 17.6% and 51.4%
    energy consumption increment for 2 and 3 sinks respectively. Overall, defining
    route length deduction over extra energy cost as performance price ratio, we have
    3.22 for 2 sinks and 1.4 for 3 sinks scenario. According to this, we conclude
    that adding multiple sinks is more suitable for applications with tight data gathering
    deadlines. Fig. 10. Impact of mobile sink number: average route length Show All
    Fig. 11. Impact of mobile sink number: energy consumption Show All C. Trail message
    broadcasting frequency The impact of sink broadcasting frequency is two-sided.
    If the mobile sink broadcasts its trail messages more frequently, sensor nodes
    will get more up-to-date trail references, which is helpful for locating the mobile
    sink. On the other hand, frequent trail message broadcasting results in heavier
    transmission overhead. Suppose the time duration between two consecutive message
    broadcasting is Δt , we derive a general range of Δt to guide the proper implementation
    of SinkTrail. Assume the trail message is transmitted instantaneously, then Δt
    is determined by mobile sink''s traveling time Δ t m between two consecutive trailing
    points and sojourn time Δ t s at each trail point: Δt=Δ t m +Δ t s (5) View Source
    Given the average mobile sink moving speed ν ¯ ¯ ¯ , we first formulate the lower
    bound for Δt . Note that it is useless for the mobile sink to broadcast multiple
    times before it moves out of the sensor node''s radio range, as all these broadcast
    messages will have the same hop counts. Hence the first restriction is that two
    trail points should be separated by a distance longer than sensor node''s average
    radio range γ ¯ ¯ ¯ , we have: ν ¯ ¯ ¯ ×Δ t m > γ ¯ ¯ ¯ (6) View Source Combining
    Equation 5 and Equation 6 makes Δt> γ ¯ ¯ ¯ ν +Δ t s . In addition, for each transmission,
    the time duration should be long enough for a trail message to permeate the whole
    network, let this permeation time be φ , the lower bound of Δt is max{ γ ¯ ¯ ¯
    ν ¯ ¯ ¯ +Δ t s ,φ} . On the other hand, the upper bound of Δt is application specific.
    If the data gathering process is expected to finish in Ψ tota i time, then during
    this time, the mobile sink should at least traversed all the d v trail points.
    Therefore we have Δt< Ψ total d v . In summary, the range of Δt is given by: Δt∈[max{
    γ ¯ ¯ ¯ ν ¯ ¯ ¯ +Δ t s ,φ}, Ψ total d v ) (7) View Source Once Δt is determined,
    we can derive the step size parameter K as follows: E kin = ∥ ∥ ∥  mbip ˙ (0)
    G ∥ ∥ ∥ 2 2 ( m E + m G )+  mbiω G T J G  mbiω G +  mbiω E T J E  mbiω G , E pot
    =( m E + m G )g( 001 )  mbip (0) G . (7) (8) View Source As this theoretical range
    of Δt is very broad and application specific, in Fig. 12 and Fig. 13 we plotted
    some simulation results for a number of broadcasting frequencies. The broadcasting
    frequency is varied from 4 to 20 per time unit. We can see that increasing the
    broadcasting frequency does benefit the average route length, as trail references
    are refreshed in a timely fashion. However higher update frequency propagates
    more messages, thereby incurring more energy consumption, especially for large
    network size. It is important to find a tradeoff point balancing different requirements
    when it comes to real application implementation. D. Comparison with FFM To validate
    the effectiveness of SinkTrail, we implemented a basic version of the FFM approach
    as mentioned in section I, and claim the performance advantage of SinkTrail through
    comparison(Many existing FFM algorithms make different assumptions about sink
    moving pattern or network environment, so only the basic FFM approach is used
    here). In the FFM, whenever a mobile sink moves to a different location, it broadcasts
    current position to the whole network. As this message propagates a routing tree
    is established. Each node reports back its sensed data to parent node and finally,
    all data are merged to the root. This FFM approach suffers from losing track of
    the sink when broadcasting is infrequent. To ensure fair comparison, we set broadcast
    frequency to 20 per time unit in simulation. Moreover, when multiple mobile sinks
    coexist in the network, each sensor node needs to choose from multiple parent
    nodes for data reporting. Therefore FFM needs lots of modifications to accommodate
    the multiple sink scenario. Due to the page limit, we used one mobile sink in
    this set of simulations. The mobile sinks move randomly in both algorithms. We
    set the data gathering threshold to 98%. From Fig. 14 and Fig. 15 we observe that
    SinkTrail protocol outperforms FFM for every experimental network size. The energy
    consumption saving is on average 19.34% with a route length deduction of 57.69%
    for one sink SinkTrail. All these results validate the conclusion that SinkTrail
    helps mobile sink to achieve energy efficient data gathering in wireless sensor
    networks. Fig. 12. Impact of broadcasting frequency: average route length Show
    All Fig. 13. Impact of broadcasting frequency: energy consumption Show All Fig.
    14. Performance comparison: average route length Show All Fig. 15. Performance
    comparison: energy consumption Show All SECTION V. Design Improvements In this
    section we propose two methods for potential performance improvement of SinkTrail.
    Both methods aim at reducing transmission cost during data gathering. First we
    consider using data aggregation to cut down the number of data packets transmitted.
    Next we decrease the number of trail messages due to flooding using extra state
    storage at each sensor node. The performance improvements of both methods are
    evaluated through simulations. A. SinkTrail protocol with data aggregation Fig.
    16. Data gathering with aggregation Show All Data aggregation is a popular method
    for saving energy in sensor networks [4]. From Equation [1], a majority part of
    energy consumption comes from data packets transmission. Therefore we can save
    energy by reducing the overall amount of data through data aggregation in intermediate
    sensor nodes. Recall that the timer mechanism used in Algorithm 3 and Algorithm
    5 ensures sequential data reporting based on position of each sensor node, which
    is helpful to perform data aggregation in SinkTrail. For example, for applications
    collecting overall precipitation within certain area in precision agriculture,
    we make the following modification to the SinkTrail protocol. Before a node starts
    reporting its sensed data, it checks the data forwarding buffer. If there are
    more than one data packets in the buffer then the sensor node adds up all data
    and reports the result. Otherwise the node simply relays its sensed data to the
    next hop. Using the same network setup and one mobile sink, we simulated SinkTrail
    implementing the summation operation (SUM). We assume the energy cost for computation
    is negligible. Each intermediate node aggregates data with a predefined possibility.
    Here we set the data aggregation possibility from 0% to 80% with step size of
    20%. Results shown in Fig. 16 validate the conclusion that data aggregation is
    able to significantly reduce the overall energy cost for data gathering. B. SinkTrail
    protocol with trail message suppression Fig. 17. Flooding message suppression:
    ‘NS’ stands for ‘without message suppression’ ‘S’ stands for ‘with suppression’
    Show All In SinkTrail, flooding trail messages to the whole network can be nontrivial
    for energy consumption. To suppress the effect of flooding, we minimize the scope
    of trail message broadcasting based on the following observation: when a node
    has finished data reporting and forwarding, trail reference updating becomes meaningless
    and results in huge waste of energy, especially for peripheral sensor nodes. Here
    we propose a message suppression method at a small cost of extra state storage
    at each sensor node. Each node maintains a state variable in its memory. Whenever
    a node finishes data reporting, it marks itself as “done”, and informs all its
    neighbor nodes. A node stops trail reference updating and trail message rebroadcasting
    whenever itself and all its neighbors are “done”. Again, this method is guaranteed
    by the timer mechanism which ensures sequential data packets reporting order from
    network peripheral to mobile sink''s current location. For accidental situations
    due to timer failure, a new data packet may arrive at a node that has already
    stopped trail reference updating. In that case old trail references are used.
    This may cause a longer routing path but the result is still acceptable for data
    reporting. We simulated the flood message suppression method of circular and linear
    moving patterns and included the informing message energy costs into implementation.
    The results are shown in Fig. 17. We observe that although modified SinkTrail
    spends extra costs of state storage and informing message transmission, the method
    effectively reduces energy consumption in all three moving patterns. SECTION VI.
    Discussion and Conclusion Based on the conceptual sensitivity analysis in section
    IV and section V, choices of the design parameters and improvements are summarized
    in Table I. This can be used as a guideline for real system design, and can also
    be used as performance metrics for comparison study with other schemes. In this
    paper we proposed the SinkTrail protocol, a novel low-complexity, proactive data
    reporting protocol for energy efficient data gathering. SinkTrail uses logical
    coordinates to infer distances, and establishes data reporting routes by greedily
    selecting the shortest path to the destination reference. In addition, SinkTrail
    is capable of tracking multiple mobile sinks simultaneously through multiple logical
    coordinate spaces. It possesses desired features of geographical routing without
    constraints on geographic location information, regular sensor fields, and moving
    patterns of mobile sinks. Further, it eliminates the need of special treatments
    for special scenarios. We extensively investigate performance impact of various
    parameters used in SinkTrail and develop two design improvements: SinkTrail with
    data aggregation and SinkTrail with trail message suppression. The simulation
    results demonstrate that SinkTrail finds short data reporting routes and effectively
    reduces energy consumption. We are currently working with collaborators in the
    GreenSeeker system. Through one-hop sensing, the GreenSeeker system applies the
    precise amount of Nitrogen adaptive to spatial and temporal dynamics of the farmland,
    increasing yield and reducing Nitrogen input expense [18]. Our proposed SinkTrail
    protocol can be further integrated with the GreenSeeker system to enable large-scale
    multihop sensing on demand and automate spray systems for optimal fertilizer and
    irrigation management. TABLE I DESIGN PARAMETERS Conceptual Sensitivity Analysis
    of Design Parameters Design parameters Description Average route length Energy
    consumption Moving pattern f(β×R( P move ,N)×N) ↓ (changing directions strategically
    in a smooth and regular manner will decrease average route length because of increased
    prediction accuracy) ↓ (saves energy because of reduced average route length)
    Number of mobile sinks – ↓(more mobile sinks allows sensor nodes to choose a closest
    mobile sink)  rightsquigarrow (tradeoff) Broadcast frequency h(α×N× D π ×M) ↓
    (more up-to-date sink location information results in increased prediction accuracy)  rightsquigarrow
    (tradeoff) Data aggregation – – ↓ (saves energy because of reduced data size)
    Message suppression – – ↓ (saves energy because of reduced protocol overhead)
    Authors Figures References Citations Keywords Metrics More Like This Performance
    Analysis of Cluster-Based and Tree-Based Routing Protocols for Wireless Sensor
    Networks 2010 International Conference on Communications and Mobile Computing
    Published: 2010 Assessing multi-hop performance of reactive routing protocols
    in wireless sensor networks 2016 8th IEEE International Conference on Communication
    Software and Networks (ICCSN) Published: 2016 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: null
  journal: ''
  limitations: null
  pdf_link: null
  publication_year: 2010
  relevance_score: 0.85
  relevance_score1: 0
  relevance_score2: 0
  title: 'Trailing mobile sinks: A proactive data reporting protocol for Wireless
    Sensor Networks'
  verbatim_quote1: In this paper we propose SinkTrail, a proactive, greedy data forwarding
    protocol that is self-adaptive to various application scenarios.
  verbatim_quote2: 'Our contributions for proposing SinkTrail are three-fold: first,
    we propose a unique logical coordinate representation for tracking mobile sinks
    without assistance of GPS devices or predefined landmarks.'
  verbatim_quote3: Second, we design a novel low-complexity dynamic routing protocol
    for data gathering with one or multiple mobile sink(s), which effectively reduces
    average route length and lower total energy consumption.
- DOI: https://doi.org/10.1109/access.2021.3066255
  analysis: "This paper focuses on the development of an integrated ontology-based\
    \ semantic model of river flow and flood mitigation referred to as ORFFM. The\
    \ model integrates the relevant domains of irrigation, disaster management, and\
    \ related administrative and agricultural concepts. The model's purpose is to\
    \ improve coordination, collaborative response activities, and knowledge sharing\
    \ among stakeholders. \n\nThe paper contributes to addressing the global food\
    \ challenge by exploring how automated, real-time irrigation management systems\
    \ can contribute to the efficient use of water resources and enhance agricultural\
    \ productivity. It also examines the current state and potential of end-to-end\
    \ automated irrigation management systems, identifying gaps and proposing solutions\
    \ for seamless integration across the automated irrigation management system.\
    \ A review of the literature on automated systems for real-time irrigation management\
    \ is presented, highlighting key issues pertaining to data, their typical sources,\
    \ and the most applicable types for irrigation management. \n\nThe paper's relevance\
    \ to the specified point and review intention is high, as it directly addresses\
    \ the point of types of data most applicable to irrigation management and their\
    \ typical sources. The paper provides a comprehensive analysis of data sources\
    \ and types relevant to irrigation management, including manual gauging, telemetry,\
    \ remote sensing, wireless sensor networks, and drone imaging. It also discusses\
    \ the challenges and solutions associated with real-time data transmission, data\
    \ quality, scalability, reliability, and security. Overall, the paper provides\
    \ a valuable contribution to the understanding of data requirements and challenges\
    \ in the context of real-time, automated irrigation management systems. \n\nThe\
    \ paper is structured as follows: \n\n* **Section 1: Introduction** - Provides\
    \ background and motivation for the research \n* **Section 2: Related Work** -\
    \ Reviews existing ontology-based approaches for flood forecasting, risk assessment,\
    \ and other aspects of flood management \n* **Section 3: Ontology Based Semantic\
    \ Model for Disaster Mitigation Through River Flow Optimization** - Discusses\
    \ the need for a semantic knowledge base for river flow and flood mitigation,\
    \ and introduces the ORFFM model \n* **Section 4: Methodology** - Describes the\
    \ methodology used to develop the ORFFM model, including competency questions\
    \ and modularization \n* **Section 5: Conceptualization of Modularized ORFFM**\
    \ - Presents the modular structure of the ORFFM model, covering irrigation system,\
    \ disaster management, and administration domains \n* **Section 6: Semantic Formalism\
    \ of ORFFM** - Provides a formal semantic description of the ORFFM model using\
    \ Description Logic (DL) and predicate logic \n* **Section 7: Ontology Evaluation**\
    \ - Evaluates the ORFFM model using competency questions and SPARQL queries \n\
    * **Section 8: Conclusion and Discussion** - Summarizes the contributions of the\
    \ paper and discusses future work \n\nThe paper is well-written and organized,\
    \ and provides a comprehensive overview of the ORFFM model and its potential applications.\
    \ The authors have clearly demonstrated the relevance of their work to the specified\
    \ point and review intention, and have provided a valuable contribution to the\
    \ field of real-time, automated irrigation management."
  authors:
  - Muhammad Hussain Mughal
  - Zubair A. Shaikh
  - Asim Imdad Wagan
  - Zahid Hussain Khand
  - Saif Hassan
  citation_count: 18
  full_citation: 'ORFFM: An Ontology-Based Semantic Model of River Flow and Flood
    Mitigation'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 9 ORFFM:
    An Ontology-Based Semantic Model of River Flow and Flood Mitigation Publisher:
    IEEE Cite This PDF Muhammad Hussain Mughal; Zubair Ahmed Shaikh; Asim Imdad Wagan;
    Zahid Hussain Khand; Saif Hassan All Authors 16 Cites in Papers 1411 Full Text
    Views Open Access Comment(s) Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Related Work III. Ontology Based Semantic Model for
    Disaster Mitigation Through River Flow Optimization IV. Methodology V. Conceptualization
    of Modularized ORFFM Show Full Outline Authors Figures References Citations Keywords
    Metrics Footnotes Abstract: The provision of the heterogeneous information acquisition
    and managing of emerging technologies with IoT, cloud-based storage, and improved
    communication services have filled the data scarcity gap on one hand but raised
    the challenge to extract, process, and comprehend relevant data of complex integrated
    multiple domains involving a large number of participants with diverse spatial
    terminologies and methodologies. To resolve this challenge various big data and
    natural language processing techniques were applied. Another widely used approach
    to resolve the challenges of heterogeneity, interoperability, and complexity of
    integrated domain is ontology-based semantic modeling. We proposed Ontology for
    River Flow and Flood Mitigation (ORFFM) for semantic knowledge formalization with
    semantic understandability of irrigation, disaster management, related administrative
    and agricultural domain concepts by humans and machines. The semantic modeling
    of distributed river flow network and associated flood disaster mitigation for
    effective coordination, collaborative response activities leads to reduce the
    impact of a disaster and improve information representation among stakeholders.
    Furthermore, semantic formalization and inference are supported by explicitly
    annotated information. We populated ORFFM with Pakistan''s Indus river system,
    flood disaster management, and Sindh administrative authorities to develop a knowledgebase
    for knowledge sharing and representation. The formal semantically enriched knowledgebase
    would contribute towards streamflow optimization and flood mitigation through
    effective coordination and common conceptualization during disaster management
    phases. The semantic model of irrigation networks would also be useful for academic
    purposes to acquire domain knowledge for new entrants in the irrigation and disaster
    management field. The Semantic modeling approach for the domains of Disaster Management,
    Irrigation network, and Regional Administration modules for context domain knowledge
    base. Published in: IEEE Access ( Volume: 9) Page(s): 44003 - 44031 Date of Publication:
    17 March 2021 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2021.3066255 Publisher:
    IEEE Funding Agency: SECTION I. Introduction Disasters cause damages to the lives
    and economy of the community proportional to the magnitude of the disaster and
    inadequate proactive measures for prevention and mitigation. Flood is one of the
    most frequent disasters, especially for agricultural countries having complex
    irrigation networks with varying spatiotemporal streamflow and managed by various
    administrative authorities with a different mandate. The streamflow pattern of
    watersheds affects the relevant community in either way. Extreme variations generate
    disaster that affects a country’s stability by jerking the prosperity graph due
    to life losses, infrastructure damage, demolishing means of livelihood, and other
    financial losses. In the monsoon seasons, the river belt community has a high
    risk of flood, whereas the far-flung living community tends to suffer in the drought.
    The river streamflow and flood mitigation domains are interdisciplinary and require
    coordination among a range of stakeholders. Limiting factors of the effective
    coordination includes native data acquisition format for organization-specific
    needs, autonomy, regional operational terminologies and procedure, data scarcity,
    data heterogeneity, poorly defined context, in addition to lack of semantics in
    models and procedures. The explicit formalization and specification of the domain
    knowledge support machine-readable format compatible with context-aware systems.
    The ontological model of integrating domains, shared among a vast community of
    stakeholders, adds a consensual knowledge generation mechanism for effective collaboration
    rather than reflecting the individual’s perspective or raising a conflict. The
    ontology produces uniform, agreed, machine-processable data formats, with semantic
    interoperability, scalability, expressiveness features. The process of consensus
    development on generated data, recommended decision, applicable policy, and normalized
    time series data collected from the distributed locations with diverse data acquisition
    techniques are semantically mapped to resolve the data heterogeneity issues. A.
    Motivations of Ontology-Based Model The non-homogeneous data acquisition and monitoring
    techniques of the river streamflow due to distributed gauging stations with different
    flow magnitude and managed by distributed autonomous authorities using dissimilar
    data acquisition techniques. These variations cause heterogeneity of data, ineffective
    communication mode, and the dearth of constructive coordination towards managing
    smooth streamflow through irrigation networks. To sum up, these are motivating
    factors of semantic modeling-based knowledge management for disaster management
    that leads to a transition to a KM-based system revealed from the literature and
    increased adaptability to resolve data heterogeneity, integrated domain complexities,
    and coordination issues. A study conducted by Oktari et al. in [47] presented
    their research findings that the use knowledge management for disaster management
    based systematic review of 72 selected papers. They confirmed the benefits of
    using knowledge management for disaster risk reduction and resilience throughout
    all phases of the disaster management cycle. Besides, Lettieri et al. presented
    a comprehensive review of disaster management findings in their survey [37]. They
    highlighted that one of the most crucial challenges for disaster management is
    the absence of an adequate knowledge base to develop an effective response strategy.
    Recently, Sinha and Dutta conducted a systematic review [66] flood ontologies
    representing increasing usage of ontological approaches for flood knowledge management.
    The review is parametric based covering various aspects of ontology development.
    A flood management system requires an integration of information from multiple
    complex domains of river streamflow monitoring, administration, disaster management
    practitioners, community participation, and spatiotemporal context of vulnerable
    regions. The vulnerability assessment process includes regional profiling, environment
    characteristics, and the portion of associated irrigation network with under consideration
    regions, accessible safe locations for community depending on flood extent. The
    historical flooding data contribute as a seed for vulnerability assessment of
    a particular region. The lack of effective coordination between response-providing
    NGOs, and disaster managing administration with the varying sectors, operating
    regions, mandate, and native information storage and representation practices
    are hurdles for an effective mitigation strategy. The importance of the knowledge
    base for effective coordination is highlighted in [30]. The diversities caused
    by poor communication mode resulted in ineffective coordination and collaboration
    of stakeholders for pre, during, and post-flood disaster management activities
    to mitigate the adverse effects of a flood. B. Objectives The objectives of the
    ontology-based Knowledge management approach for the integrated domains of irrigation,
    flood management, and administration are summarized below: An explicit definition
    of the concepts and relationships integrating the relevant domains for streamflow
    optimization and flood mitigation Resolving ambiguity of concepts and similar
    names of regions with URI(Uniform Resource Identifiers) for improved coordination
    Definition of relationships and types of interaction for integrating domains leverage
    the conflict resolution among stakeholders. Formalize semantic information exchange
    using underlying RDF enables interoperability for heterogeneous systems of stakeholders.
    Implementation using OWL 2 DL enriching ORFFM with explicitly defined object properties
    characteristics for extended semantic formalism than RDF Reasoning support for
    domain knowledge consistency and inference to derive implicit relationships and
    interactions OWL 2 with rule languages enable to use endurant part of ORFFM for
    streamflow heterogeneous data acquisition and aggregation Reducing the risks of
    the community living in flood-prone areas by context-based efficient Early Warning
    System(EWS), and knowledge base enriched disaster management activities. C. Contributions
    Semantic modeling enriches information management, representation, and integration
    with modern knowledge-based technologies and improves coordination. Knowledge
    management implementations of water flow with improved visualization enable proactive
    planning to tackle the complex real-time situation and even more efficient proactive
    contingency planning. River streamflow data is collected from a variety of distributed
    resources across different barrages by the personnel of management organizations
    with their native format for data storage and use. The river and canals water
    flow data sources include manual gauging [9], telemetry [8], remote sensing [28]
    technique for glaciers and ungauged areas, wireless sensor network [38], [52]
    for high variation streamflow gauging stations, barrages, headworks, spillways,
    outlets, etc. Other data sources means include drone imaging,citizen observational
    data [48], crowdsourcing for hydrographs [20], stochastic modeling [65] and many
    others estimation techniques. The contributions of this study are proposal, design,
    and development of multiple domains integrated ORFFM knowledge base. Key features
    of the ORFFM knowledge base is summarized as follows: Streamline the coordination
    challenges of irrigation and riverine flood mitigation among stakeholders of the
    irrigation system, administration, and disaster management authorities for collaborative
    activities, interactions, operations, and policies backed by the semantic knowledge
    base. Semantics formalism for human and machine’s understandability Modularization
    of large scale system spatiotemporal integrated domains for extendable, disruption-free
    executing workflows, and uniform accessibility Modular leverage the reusability,
    Extendability, easy integration, and coping with scalability issues Reusability
    support of defined conceptualization for other domain’s integration, such as agriculture
    improvement, food security, crops trade, etc Domain knowledge for educationalist
    and practitioners Formal knowledge base for software agents based recommendations
    systems Knowledge base for effective data visualization, linked data and intelligent
    system based on semantic web 3.0 Data Interoperability for stakeholders with XML/RDF
    based uniform and structured data storage rather than organizational native structure
    or schema. Knowledge base of major water level alteration semantics with integrated
    contextual information Domain knowledge base for irrigation system automation
    applications Semantic Modeling of spatial administration domain for coordination
    mechanism other disasters and smart applications such as smart cities, smart traffic
    network, election and e-governance The emergence of technologies towards intelligent
    application development leveraging the increasing granularity of the data produced
    by IoT devices and computation capability. The rapid growth of smart applications
    and systems development is powered by semantics and context-awareness. The context-aware
    systems are based on the explicit annotation of location with surrounding entities
    of domains along with inter and intra relationships for knowledge inference. This
    computational and semantic integration may leverage the design and development
    of semantically enabled natural disaster risk mitigation systems towards sustainable
    development goals [5]. Natural disasters and relevant complex domains, especially
    flood disasters for agricultural countries become complex due to various local
    and contextual ambiguous terminologies. The semantic model [54] of such complex
    domain’s knowledge with Description Logic(DL) [6] and First-Order Predicate Logic.
    It enables automated system development and knowledge conferencing DL followed
    by inference enables software agents to process the domain’s semantics. Software
    agents are knowledge generators from explicitly described domain concepts and
    knowledge base to encompass the mitigation policies of any disaster domain in
    general and flood domain in a specific context. Our ontology-based semantic model
    is a case study of the subset of the Pakistan irrigation system and disaster management
    domains. We evaluate our model based on competency questions in the context of
    the Indus River irrigation system and the flood disaster of Sindh province. Ontology
    metrics are also presented to assess the complexity, completeness, and expressiveness
    of the proposed ontological semantic model named “ORFFM”. In this paper, we presented
    a few research studies that highlighted the challenges of disaster management,
    water quality, spatiotemporal context, proposed flood ontologies in section II.
    In section III, the requirement of a semantic knowledge base for irrigation networks,
    flood management, and the relevant domain is discussed. Section IV describes the
    ontology development methodology for “ORFFM”. Section V presents modularization
    aspects of interrelated domains for ontology development. Section VI describes
    semantic formalism, section VII covers evaluation metrics. Finally, section VIII
    is a conclusion, section IX discusses the future work and possible extensions.
    SECTION II. Related Work In this section, we discuss the ontology-based relevant
    studies of river streamflow monitoring and/or flood management practices of practitioners.
    Various studies present an ontological model for flood forecasting [4] using sensing
    devices, flood risk assessment [61] considering the stakeholder preferences for
    integration and other relevant domain’s may affect the decision support systems.
    We explore the key characteristics that enhance the impact of the model on the
    reduction of flood damages through mitigation strategies during the disaster management
    cycle. The variation of models based on the implementation context of the domain.
    The semantic model with interrelated domain conceptualization contributes towards
    the development of smart context-aware systems. Flood disaster requires the rapid
    availability of contextual information for response and recovery activities to
    minimize disaster damages. The ontological model with semantics and contextually
    relevant data extracted from heterogeneous, unstructured, incomplete data sources.
    The raw data processed and transformed into an interoperable format, logically
    structured, and contextual annotated for a particular event, location, time, and
    type of response based on the semantic model of that particular domain. Yusuf
    et al. discuss in [63], the demand of information-centric ontology for the flood
    management and communication of relevant information. The advancements in technologies
    and techniques made this possible to model environment characteristics from spatial
    heterogeneous data sources. Structured, contextual, semantic, and accessible information
    enables to design and use of smart applications such as Apple Siri, Google Now,
    Wolfram Alpha backed by knowledge base system in real sense. The ontologies are
    easier to develop, maintain, and extend as per domain expansion compared to the
    classical database schema. Pilar et al. presented in [18] a framework for mitigating
    the data challenges of water resource management through publishing and exploiting
    linked open data. They highlighted the integration requirement of the domain for
    multiple and heterogeneous data sources and how semantic web and ontology harmonize
    different data sources. They demonstrated their approach for water supply data
    of the Mediterranean region of Valencia, Spain. The ontology enabled data exploited
    for general users and enhanced management and usage. Curating the heterogeneous
    data and modeling knowledge is discussed in [71]. Demonstration of domain data
    through navigational data visualization and interoperability of data format facilitates
    towards design and development of a smart system. Similar to WaterOnto [43] a
    water ontology for riverine water, the ontology for wildfire information portal
    developed by Kalabokidis et al. presented in [29] to resolve the limitation of
    keyword-based search and transferring to navigation search used in ontoFire for
    wildfire information portal. The authors evaluated their ontologies based on a
    scenario from 60 graduate students at the geography department, the University
    of the Aegean through navigation to require information more efficiently compared
    to keyword-based searching. The interoperability and expressiveness challenges
    of heterogeneous and unstructured topography of flood defense data are highlighted
    in [16] by integrating domain data in the ontology. Furthermore, they discussed
    the significance of transforming legacy datasets to semantic web-enabled data.
    The knowledge management system based on the ontology for flow and quality management
    of water was discussed in [11] for managing knowledge objects using XML/Java technologies
    just three classes as section, questions, and problems are defined. The prototype
    demonstrated the rule-based model selection by incorporating artificial intelligence
    technologies. A multi-agent rule base semantic system proposed in [80] for scientific
    knowledge workflow in adaptive mode. The flood risk assessment by considering
    the stakeholder preferences normally ignored using multi-criteria flood risk assessment
    ontology by Scheuer et al. in [61]. Potnis et al. presented in [51], a Flood Scene
    ontology for remote sensing images to improve the spatial-temporal context of
    the flood-prone areas. Image mining of the last decade enables to identify the
    flood inundation and recede patterns. Voutos et al. in [72], proposed a semantic
    model for environment monitoring through wireless sensor networks to capture the
    spatiotemporal context for efficient and real-time monitoring. Table 1 asses some
    of these studies with purpose, feature, and limitations. TABLE 1 Relevant Domain’s
    Ontologies Representing Different Aspect of Flow and Flood Assessment Using Ontology
    Based Approach The information extracted from ontologies of the correlating domain
    provides even better results by integrating reusable ontologies. For instance
    the SWEET suit, forest, vegetation, weather, geographic domain to cover fire domain
    [29], flood disasters [24], environmental Impact Assessment (EIA) ontology for
    flood management domain [14]. DOLICE, SWEET, and others for Decision Support Systems
    based on semantic sensors [25]. The semantic modeling [54] resolve the communication
    gaps for the system’s users and diverse datasets through representing the meaning(semantics)
    of the dataset and collaborative activities with common conceptualization. The
    semantic modeling approach for river streamflow and flood mitigation involves
    the integration of interrelated domains of environment, hydraulic, hydrology,
    irrigation system, agriculture, and collaborative responsibilities of stakeholders
    with an explicit definition of entities along with interaction. For the semantic
    model, information about the domain is explicitly defined for context extraction.
    The context is obtained from the domain’s formal specification of concepts, properties,
    and relationships. The collaboration among stakeholders for flood mitigation during
    the preparedness, response, recovery, and rehabilitation phases of the flood disaster
    management cycle demands a uniform description of phases and activities during
    each phase along with the assigned or responsible stakeholders. Ontologies enable
    rules-based inference, interoperability, and visualization structure. It enables
    semantic integration of knowledge with geological, hydrological, and other relevant
    domains for crises management [81]. The ontology support semantic integration-related
    domain to provide the common operating picture to reduce the risks in emergencies.
    Ontology engineering resolved the problems associated with the heterogeneity of
    multi-source heterogeneous data sets for the common conceptualization of entities,
    properties, relations, explicit definitions, and restrictions for concerned stakeholders
    [75]. Kollarits et al. in [31] presented MONITOR risk management ontology that
    captures the relevant concepts related to Hazard, risk, disaster, and represents
    the knowledge about the relations of risk reduction strategies for risk reduction
    goals to serve as a reference ontology for the of natural hazards monitoring and
    management. A. Existing Flood Ontologies Various ontology-based studies were proposed,
    developed for different aspects and types of flood disasters. In this section,
    we very briefly refer to these approaches and aspects that represent the evolution
    of ontology for such complex integrated problems and continuity of research in
    the field of semantic web technologies. Agresta et al. presented FloodOntology
    [4] an ontology-based framework for flood forecasting using a continuous stream
    of data about watersheds and sewer flow conditions. This project was sponsored
    by National Operation for Research and Competitiveness for smart cities. The modular
    approach was used for ontology development. A multiagent-based emergency management
    ontology for monitoring dams and flood response using Protégé 2000 by Norwawi
    et al. in [3]. The sharing of information through linked data to address power
    energy issues triggered by flooding presented by Roller et al. in [58] for permanent
    flood risk in the Netherlands. Relevant domain concepts covering stakeholders’
    interest are described such as “Water Resistance Threshold”, “Water Supply Area”,
    “Pumping Stations”, “Electrical Supply Area”, “Cable”, “Water Level”, etc. The
    effectiveness of flood management is based on the quality of risk assessment activities.
    An effective risk assessment strategy depends on the magnitude of expert-level
    knowledge, local and contextual knowledge integration. The study [61] form a flood
    risk assessment knowledge base from multi-criteria risk assessments. The reusability
    feature of ontology-based models leverages the knowledge-based integration towards
    more effective solutions. Scheuer et al. presented in [61] reused MONITOR [31],
    SWEET [15] and other relevant ontologies for integrated flood risk assessment.
    An upper-level watershed flood risk assessment ontology extending SWEET for the
    environmental concepts is presented in [78] by Yi and Sun. They highlighted the
    complexity raising due to urbanization and climate change contribute to watershed
    flooding. The spatiotemporal context is the key to understand the semantics of
    data generated from sensors. Reuse of space and time ontology for extension hydrology
    classes presented by Wang et al. in [73]. They have also reused SOSA (Sensor Observation
    Sample and Actuator), Geo, DOLCE, and SSN ontology for sensors’ spatiotemporal
    context. It is implemented using SWRL for rules and GeoSPARQL [49] for spatial
    querying. The ontology-based coastal flood emergency model presented by Garcia
    et al. in [21]. Various modules are based on infrastructure data and heterogeneous
    data from web-accessible distributed sensor data of the coastal domain. They integrated
    existing upper-level DOLICE ultra-lite and SWEET ontologies. Infrastructure level
    ontologies are SSN, SSN Extension, Schema, and services. Coastal defences and
    role ontologies play a vital role at domain level modeling. The post-flood time
    required to recede floodwater from the inundated area using remote sensing imagery
    is an important activity of the recovery phase from the disaster management cycle.
    The spatiotemporal context-based ontological model for dynamic flood inundation
    monitoring presented by Kurte et al. in [34]. The flood inundation change was
    assessed by SWRL rules for topological, temporal, and spatiotemporal variations.
    In [67] a context-aware system for configuration adaptability of wireless sensor
    network for environmental conditions. The wireless sensor network implementation
    for French Orgerval watershed monitoring. Sun et al. proposed JADE ontology integration
    portion of Semantic Sensor Network Ontology for main concepts such as Sensor,
    FeatureOfInterest Property, etc. Jess Rule engine for inference and java for developments.
    SECTION III. Ontology Based Semantic Model for Disaster Mitigation Through River
    Flow Optimization Disaster management is a multidisciplinary domain and requires
    an urgent response for rescue, rehabilitation of the affected community. These
    response activities involve a large group of peoples from a variety of technical
    backgrounds, social sectors, and volunteers. To reduce the complexities, avoiding
    misinterpretations of the terminologies used during various phases of disaster
    management, ontological models are proposed for the common conceptualization of
    the targeted flood hazard management domain. Semantic modeling for river streamflow
    optimization and flood mitigation is an interdisciplinary research area covering
    river flow management with a hefty set of rules, policies, constraints based on
    spatiotemporal context computing, disaster management, and computer science as
    shown in the Venn diagram in Fig. 1. Context sensing and computation for risk
    communicated to concerned authorities and vulnerable community for proactive risk
    reduction strategy known as Early Warning System. FIGURE 1. Venn Diagram for streamflow
    and flood mitigation represents ORFFM as spatiotemporal computing for integrated
    domains of Irrigation Network and Disaster Management. Show All Semantic modeling
    of the irrigation domain considers the distribution of water sources, storage,
    diversion, and channeling. Similarly, the flood mitigation strategy requires the
    contextual knowledge base for river streamflow patterns, variation with possible
    causes, vulnerability assessment of spatial region union council, tehsil, district,
    etc coined as Flood Vulnerability Assessment. The assessed vulnerability of these
    administratively and hierarchically distributed spatial regions with various administrative
    levels, the population at risk, capacity for risk avoidance, and mitigation practices
    conceptualized for knowledge sharing are essential components of the semantic
    model for flood mitigation. Other components include the data sources, acquisition
    techniques, and disaster management phases through semantic web technologies and
    programming language for knowledge inference and automated reasoning. An adequate
    Early Warning System(EWS) is key for disaster risk mitigation. Integration of
    state-of-the-art technologies and computational capability has proportionally
    improved the effectiveness of EWS. Phengsuwan et al. in [50] presented the ontology-based
    early warning system and decision support system for landslide hazard from time-series
    data of urban authorities and social media data. A. Why Semantic Web Technologies
    for Flood Mitigation Studies discussed in the previous section much demonstrated
    that coordination is the main challenge among disaster management authorities,
    humanitarian organizations, and the community due to the decentralized environment
    with different information management structures. The respondent organization’s
    ineffective coordination results in replication of response activities in one
    region and gap in other affected regions. There is an emerging demand for a common
    data sharing and representation framework. Peter Tatham et al. in [69] present
    the need for a logistic common operating picture for humanitarian organization
    emergency response. The semantic modeling solves the domain-related implicit coordination
    problems and shares understand-ability across the different stakeholders by sharing
    information not only in an interchangeable standard format across various platforms
    but also in machine-processable format using semantic web languages. Provision
    of this interoperable information is key for an effective contingency planning
    to mitigate flood disaster impacts on each phase(Preparedness, Response, Recovery,
    and Rehabilitation) of the disaster management cycle. Rivers flow information
    changed spatially and temporally at the different streamflow monitoring stations
    and barrages that need to be closely monitored for water distribution. The pre-planning
    and proactive actions are required for flood hazard to mitigate their impact.
    In the preparedness phase using a capacity building, contingency planning, flood-prone
    areas identifications, and identification of barren lands or sparsely populated
    areas for discharge excess water in case of unavoidable circumstances. The flood
    mitigation strategy in case of unavoidable flood requires contextual knowledge
    about zones for flood impact reduction by diverting the flood to an artificial
    path with a reduced risk of flood artificially. An approved plan from the administration
    needed to compensate sparsely agricultural lands and evocation community along
    with rehabilitation for sparely populated areas. The ontology enables a search
    of the known and exploratory discovery of unknown terminologies of the semantic
    domain model. A shared web interface would enable us to explore and retrieve the
    required domain information for a specific context. We formalize the irrigation
    system, disaster management, and administration in the context of flow optimization
    and flood risk mitigation with a modular approach. The following subsection, discuss
    a few core concepts for demonstration. The detailed description and code will
    be a publicly shareable repository. We selected OWL 2 DL for the ontology development
    of the aforementioned modules using the Protégé 5.5 [45], as an ontology development
    environment. B. Semantic Modeling of River Flow Ontological representation of
    semi-structured data along with contextual knowledge, particularly, where stockholders’
    coordination from distributed location and different mandate contributes exponentially.
    Sharing of information in a variety of formats is a challenging task that is manageable
    by developing an ontology with interoperability for information sharing that enables
    real-time context computation. Ontology-based Interoperability and contextual
    information for streamflow monitoring, support the provenance [41] of the system.
    The decisions based on this information can be retraced, evaluated for authenticity
    and efficacy of the information. The fundamental constructs of ontology include
    Classes, Relations, Axioms, and Instances depict the domain knowledge in a more
    comprehensive and natural semantic style with core concepts and their correlations.
    The semantic model [40] enables the design of an automated system real-time monitoring
    river streamflow compliance with pre-defined rules. The classes represent concepts,
    which are taken in a broad sense for all stakeholders in contextual computing
    environments. Collaborative interaction among concepts of similar and different
    domains is illustrated by Relations. Ontologies stored in RDF triples represent
    an association between the domain of the relation and range through some object
    property defining the binary relationships in two individuals/objects. Axioms
    logically elaborate information about a class of irrigation authorities using
    subproperties CoordinationAndCommunicationProperties to manage irrigation network
    with different tasks defined in ORFFM. The class of AdministraitveDistributionOfSpatialRegion
    is an axiom for class level description defining the places, to relate with an
    event, impacts, and the possible losses of disaster on the communities of these
    spatial regions. The hierarchical classes define IsA Relation, for instance, rainfall
    ISA meteorological factor. The restrictions can be demonstrated using cardinality
    restrictions for instance individuals can be restricted to related to another
    restriction using min, max, and exactly cardinality restriction. The sets of individuals
    are formed by partitioning the individual using logical conditions for division,
    and Boolean combinations of descriptions. Formal axioms validate the consistency
    of the ontology and knowledge base. Formal axioms are used for new knowledge inference.
    An axiom in the WaterGrid [44] infers a list of the causes of a particular variation
    in streamflow. Individuals are created to transform an ontology into a knowledge
    base. For instance, The River flow situation of a particular day is defined with
    the set of data properties to extract rainfall forecast information from the meteorological
    department portal to measure its impact on the river path. In [11], the architecture
    and implementation of a prototype ontology-based KM system are developed for flow
    and water quality assessment with three-stage. The Java/XML-based scheme is proposed
    for automatically extracting knowledge. The fundamental issue in the design of
    an interoperable GIS-based solution for urban applications is the development
    and use of ontologies to support semantic interoperability. In general, most of
    them propose the models’ based management of water with geographical and climate
    concerns. Very few citations reflect the gap for semantic modeling approaches
    for River streamflow management. Our work shall address this domain with improved
    data acquisition semantic, semantic modeling of irrigation stakeholders, operation
    services, policies, and improving data reliability by applying distributed data
    pre-processing, storage, replication, and communication techniques. Feature selection
    techniques for information gain to develop predictive models from external and
    heterogeneous data sources benefited from explicitly defined features relationships
    and hierarchy [7], [57]. The feature in a hierarchical relation subsumes features
    having similar semantics. These subsumed features for feature vector from ontology-based
    river streamflow and flood mitigation is semantic feature vector. The predictive
    model with semantic interoperability and publishing on Linked Open Data performs
    better forecasting, fulfills data needs for other smart applications, and interactive
    visualization for feature selection [57] to generate the feature vector. Petar
    Ristoski et al. in [56], presents the feature selection from hierarchical information
    in combination with standard metrics, such as information gain or correlation
    to identification and selection of features based on relevancy, and valuable hierarchical
    abstraction preserving predictive power. This approach also reduces the optimal
    trade-off for feature selection between the predictive power and the generality.
    The problem of over-fitting may be fixed too. RiverFlow characteristic flow velocity
    and inclination, depth and width, temperature, evaporation rate, precipitation,
    and rainfall tendency have a relationship that may assist in feature selection.
    Similarly, the digital elevation of the community from the river basin, the distance
    of community from river breach vulnerable point, the time required to access to
    a safe location, tracks to a safe tract, transportation, time interval of early
    warning information available to the community, and time in which floodwater inundate
    that area, possible inundation extent, etc, have strong relationships that may
    assist feature vector selection for an optimal flood mitigation model. Balancing
    granularity of the data for computational power requirements the feature pruned
    to standard feature with higher predictive power. We proposed the ontology of
    the Context-Aware Grid-Based real-time river flow and breach identification assisted
    Riverine Water Management System [44] and semantically classified water-related
    terminologies as WaterOnto [43] a top-level ontology. We extended this work for
    domain and task level ontology for river flow and flood mitigation semantic model
    to represent domain knowledge and task level concepts through semantic modeling.
    “Ontologies based solution were triggered by increasing numbers of natural disasters
    and man-made disasters, such as Landslides [50] earthquakes, tsunamis [17], floods
    [76], air crashes [77]. Post disasters recreation, rehabilitation, and restoration
    cost are ten times higher than pre-disaster mitigation strategies. This finding
    posed challenges for authorities and demonstrated the importance of a semantic
    knowledge base to plan rapid response from disaster management authorities and
    other authorities to use shared knowledge that shall assist in proactive mitigation
    strategies in emergencies. The effectiveness of the response strategies depends
    on the availability of the contextual information integrated with GIS, local context,
    infrastructure, recovery equipment provision, relief goods, spatial administration,
    and other related information. The information is extracted from the integration
    of static data and operational data. Most of this information is geographically
    related and therefore when discussing the integration of information for disaster
    management response, we often refer to the integration of geo-tempo information.
    Keyword-based searching of spatiotemporal information is not sufficient in rapidly
    increasing data size. The interoperability challenge can be solved via the use
    of an ontology to reveal implicit and hidden knowledge. Our research includes
    investigating semantic effectiveness and proposed ontologies-based solutions for
    the distributed but integrated river flow and flood management system. This includes
    developing three types of ontologies. Generic or upper-level ontology of related
    concepts spatial regions, administrative or government entities, hydraulic, meteorologic,
    and environmental concepts. Then domain ontologies of the irrigation system in
    the context of flood disaster management. An ontology with a focus on riverine
    flood risk mitigation by considering riverine suburb contextual information and
    other river flow and related entities to fill the contextual knowledge base gap
    of an irrigation country. For the proof of concept, we develop and evaluate the
    said ontologies with Abox and Tbox consistency for the subset of the Spatio-temporal
    scattered irrigation network of Pakistan. This contextual information system is
    based on a modular approach for emergency response and contingency planning but
    extendable for water resource optimization, efficient management, and agricultural
    productivity improvement. Moreover, a semantic repository enables a search of
    unknown concepts and exploratory discovery of unknown terminologies of a domain.
    A shared web interface would enable us to explore and retrieve required domain
    information for a specific context to achieve the objective of sustainable growth.
    SECTION IV. Methodology Various ontology development methodologies adopted for
    ontologies based projects and presented in literature such as Cyc KB [36], Uschold
    and King’s method [70], Gr€uninger and Fox [26], UPON [13], and METHONTOLOGY [39]
    To the best of our knowledge, there is no standard methodology for ontology development.
    A comparison of methodologies and tools for the ontology development and consensus
    points discussion is available in [12]. However, we have used the merger of UPON
    [13], and METHONTOLOGY [39] methodologies for ORFFM development. The workflow
    along with phases of ORFFM ontology development is shown in Fig. 2. FIGURE 2.
    The Workflow of Ontology development describe the activities of each stage according
    to ontology development guidelines of UPON and METHONTOLOGY methodologies. Show
    All The first phase of ontology development is a specification of streamflow and
    riverine flood mitigation’s concepts, attributes, and relationships from the phenomenon
    associated with the riverine flood. This includes river streamflow data acquisition
    techniques, the usage of that data for calculation of streamflow levels, discharge
    to withdrawing canals, and flood vulnerability assessment of communities on the
    river belt, associated agricultural lands, infrastructure in flood-prone areas.
    Based on the types of flood damages, mitigation strategies in all four phases
    alongside necessary rules and constraints explicitly. The details of concepts
    and sources are described in section IV-B. The defining the Competency Questions
    for refinement of scope presented in section IV-D. Then conceptualization and
    implementation of integrated modules are presented in section V. The evaluation
    of the model is based on the competency questions and results derived using SPARQL
    depicting CQs are presented in section VII-A. A. Scope of ORFFM The ORFFM model
    captures the domain definition to resolve the coordination issues among the stakeholders
    for river streamflow measurement optimization, efficient water distribution scheme
    development. The contribution to the flood mitigation domain includes explicit
    conceptualization of domain and task concepts for flood management phases. The
    coordination from shared knowledge base reduces wastage of effort and resources
    of duplication of services and reduces damages of unaddressed flood-affected areas.
    The key characteristic of the ontology model and mapping to ORFFM are presented
    in Table 2. For the sake of scalability and reusability, we preferred the modular
    approach for the domains of the irrigation system, disaster management, administration,
    and agriculture. To cope with the challenge of expressiveness vs. computational
    performance, the implementation partitioned based on the regional hierarchy was
    recommended. The integration of these modules was sculpted into ORFFM. The extension
    of any regionally independent subset of the knowledge base may be configured to
    the required expressiveness level. TABLE 2 Ontology Characteristic Mapping to
    ORFFM B. Domain Knowledge Acquisition The ontology concepts are defined based
    on the major entities with their characteristics and interactions. We have reused
    few relevant concepts of ontologies [4], [79] discussed in the literature review
    but defined in our domain and task context. The other source of domain knowledge
    is manuals and reports of stakeholders. Furthermore, the confinement to their
    workflow context extracted from interaction with stakeholders such as National
    Disaster Management Authority,1 State or Provincial Disaster Management Authority,2
    Relief Department, Irrigation Department’s personnel, and Oxford dictionary3 for
    generic concepts. meteorological department,4 Water And Power Distribution Authority(WAPDA),5
    and online knowledge systems e.g., Wikipedia.6 Besides the secondary data source,
    the primary research to extract the right usage of concepts, we conducted meetings
    with DMAs, Irrigation Officers, and expert of relevant domains for refinement
    of concepts, relation, and constraints extractions from meeting refined the user
    requirements and enabled for mapping user’ requirement’s to competency question
    The ORRFM model evaluated based on the response of competency question from stakeholders.
    The top-down development process adopted with the consultancy of a domain expert
    to create classes and subclasses hierarchy with the most general classes and specialize
    afterward and so on. For instance, in the riverine flood ontology, the types of
    disaster class have subclasses(Biological, Climatological, Hydrological, Metrological,
    … ) then Hydrological has further subclass (Flood, Avalanches, … ) and Flood has
    a subclass(Flash Flood, Riverine Flood, … ) on so as shown Fig. 6. The details
    of the class hierarchy discussed in the following sections with their use for
    each relevant module. FIGURE 3. WaterDistribution subclasses represent concepts
    representing streamflow mechanism. Show All FIGURE 4. Some River streamflow related
    classes. Show All FIGURE 5. Topological element for spatial information. Show
    All FIGURE 6. Types of Flood Damages. Show All C. Ontology Development Tools Various
    IDEs, plugins, and frameworks that ease the design, development, and implementation
    of the ontology-based models are recommended by the World Wide Web Consortium
    (W3C).7 Nur Liyana Law et al. [35] discussed popular ontology development IDEs
    includes Protégé [19], [45] freely available open-source tool for desktop and
    web-based ontology editing, OntoEdit [68] for collaborative ontology editing,
    Differential Ontology Editor (DOE) [19], and many others with various features.
    We opted for the Protégé desktop for the ORFFM development with HermiT 1.4.3 semantic
    reasoner for consistency checking. The OWLVis and OntoGraph for graphical visualization.
    The SWRLtab [46] support for adding and editing of SWRL(Semantic Web Rule Language)
    rules in ORFFM OWL 2 DL for implementation and execution with Drools [53] rule
    engine. The SWRLB contains built-in functions to infer axioms executable on Drools
    rule engine. To query the ORFFM knowledge base the SPARQL query tab of Protégé
    5.5 enables to query and view the result of the knowledge base for competency
    questions based on evaluation of the domain ontology. D. Competency Questions
    The user requirements are translated as Competency Questions(CQs) in natural language.
    CQs outline and confine the scope of knowledge base [74]. A satisfactory response
    to competency questions is the way to assess the objective’s accomplishments of
    an ontology-based project. Our competency questions capture the scope of flu flood
    ontology. The sound responses of competency questions reflect the quality of the
    ontology. CQs mapped to SPARQL query language to retrieved required knowledge
    from the knowledge base and extended it to comply with ontology usage for context-aware
    computing systems. The CQ is defined in natural language to support novice user’s
    interaction with the ontological knowledge base. NLP-based API and software tools
    enable the translation of the natural language to SPARQL query compatible with
    the RDF and OWL. QAKIS [10] used for querying linked data DBpedia through multilingual
    natural language statements. Besides that domain, the specific application provides
    means of access the contextual data depending on the domain. The queries were
    formulated to retrieve the information about water distribution from river flow
    and managed by the irrigation department, disaster management department for fluvial
    flood’s forecasting. Administration streamlines coordination in irrigation and
    disaster management for field activities. The ORFFM ontology may be queried for
    spatial, administrative, and management relations with classification and connectivity
    analysis. The stakeholder’s requirements are mapped to competency questions as
    the functional requirements of ORFFM. A few types CQs are represented in Table
    3 related to the irrigation and disaster management domain along with possible
    responses. TABLE 3 Types of Competency Questions Relevant to Knowledge Base of
    Irrigation and Disaster Management Domain Along With Possible Responses E. Ontology
    Storage The ontology storage model discussed in [2] with native and database perspectives.
    The ontology storage model is assessed based on the query language support, API
    support, remote interface, inference support, versioning, access control, reliability,
    materialization, update, indexing, granularity, platform, pricing policy, and
    benchmarking. The straightforward method of native storage perspective allows
    disk files.The triples as hierarchical stores have the limitation of scalability
    and share-ability. We opted for the JENA TDB [2] with Apache Jena Fuseki [1] server
    REST API for our ORFFM ontology storage and retrieval respectively. SECTION V.
    Conceptualization of Modularized ORFFM The modular approach resolves the complex
    domain problems to an aspect-oriented [60] problem for simplicity and manageability.
    Development of modules for disaster management, rehabilitation department, volunteer
    organization, rural communities, irrigation, and agriculture, are defined in ontological
    conceptualization for improving interaction and coordination. For instance, agricultural
    improvement semantic portal to improve the efficiency of water utilization through
    water availability based crop recommendation to farmers towards improving the
    agricultural productivity. A farmer that is interested in river streamflow current
    and forecasted information, rotational program, irrigation network water, and
    rainfall forecasting data to plan to water their cultivated crops, etc. The core
    concepts are portioned for a modular approach towards the design of irrigation
    systems, disaster management, and administration. The corresponding classes are
    conceptualized in the ontology for better understanding and contingency planning.
    ORFFM ontology is developed using the most popular ontology development IDE Protégé
    5.5, hosted by Stanford University [45]. The following are major top-level classes
    integrating multiple modules: Process Person Organization Infrastructure Event
    DisasterManagmentCycle Administration Agriculture Livestock IrrigationSystem The
    top-level classes of each module are explained in each respective subsection.
    Moreover, the description of logical relation is explained in section VI. A. Conceptualization
    of Irrigation System Domain In this section, we are describing the domain and
    subdomain that are directly or indirectly related to the irrigation system. The
    irrigation departments with management hierarchy, service, operation, type of
    involvement towards water resource management, mandate, and other relevant concepts.
    Then the ontological representation of concepts, relations, individuals, rules,
    and axioms are defined. Domain experts are involved in domain concept extraction
    for the proposed model. 1) Components of River Flow Management A well-structured
    and efficiently managed irrigation network with adequate availability of freshwater
    resources is the backbone of agricultural countries. Besides efficient distribution,
    the storage of water in dams and reservoirs for the power generation and winter
    season is equally important. Planning for storage of water along with its distribution
    in the monsoon season may reduce the over-spill of water that causes damage to
    the irrigation land, infrastructure, and communities in the suburb of the irrigation
    network. The irrigation system authorities have a major role in optimizing freshwater
    distribution and management, especially during monsoon seasons. Here, we first
    focus on the main concepts extraction from the irrigation domain to develop the
    domain ontology and their activities as task ontology. We populate the ontology
    with Pakistan’s irrigation system to transform it into a knowledge base. The following
    are main irrigation system and water resource management phenomena: Streamflow
    sources, storage and distribution mechanism Spatially distributed infrastructure
    for reservation and distribution Flow control mechanism and distribution policies
    Management authority with structure and their responsibilities Streamflow data
    acquisition techniques and data aggregation Keeping in view the complexity of
    the heterogeneous data sources and variety of the domain concepts. We shall classify
    the concepts in groups, modeling the context of a generic, modular, reusable,
    integrate-able with other relevant domains for the development of context-aware
    systems. Then predefined policies and decisions along with recommended mitigation
    strategies are adopted. In the absence of an available mitigation strategy pattern,
    current information is forwarded to responsible authorities. WaterOnto proposed
    in [43], Generic ontology defines general terms such as Water, Glacier, Lake,
    River, etc with the standard common definition. This WaterOnto ontology’s generic
    concepts extended in the irrigation system module of ORFFM. For instance ORFFM:
    WaterSource is generated from WaterOnto: Glacier, ORFFM: StreamFlow has subclass
    River, etc. Furthermore, the Module of irrigation System populated with a real-world
    instance of the Pakistan Irrigation System. 2) Streamflow Management of Irrigation
    System The classes hierarchically defining the aggregated concepts of a knowledge
    base. Top level concept/s are abstract and may contain the hierarchy of concept/s
    with more concreteness. Streamflow is one of top level classes of irrigationSystem
    module. The DiversionStations, RiverStreamflowPath, WaterDistrbutionScheme, …
    ,and WaterWays. An important concept WaterWays with subclasses River, Canal, Distry,
    … ,moga etc. These WaterWays are grouped in CanalSystem, CanalCircle, and CanalDivision
    for efficiently management by distribution authority. The WaterWays groups are
    mapped to concerned flow managing official for gauging, maintenance, theft detection
    and elimination, desilting basin, high flow mitigation and diverting streamflow.
    The IrrigationNetwork subclasses representing subset of physical irrigation network
    and mapped to respective manager from managers hierarchy from Person class as
    WaterResourceManager, CheifEngineer, SubEngineer, … ,Zilladar, etc. The river
    streamflow originated from the water resource of the glacier, through snow melting
    or rainfall in these areas. Then passes on the path and stored in WaterStorage
    (dams, reservoirs). For the distribution of water WaterDistributionScheme(rotational
    programs) following administrative policies and water division through DiversionStations
    such as barrages, headworks, spillway, and distributaries. The other relevant
    classes along with the relationship are sown in Fig. 3. Water quality is also
    assessed for contamination of dangerous chemicals as this freshwater is also used
    for water supply to household and animal’s drinking. The research departments
    are also relevant for research on storage, efficient utilization, electric power
    generation, and quality assessment. The RiverStreamFlowPath has five subclasses
    of major river passage and mapping of tehsils within a 3-kilometer radius. The
    vulnerable tehsil spatiotemporal context computing and storing as a spatial index.
    The vulnerable tehsil profile with the spatial index used for early warning system
    and communicated to relevant administrative authority through GeoRSS [55]. Expansion
    of the WaterDistribution involves the different levels of the irrigation network
    entities, managing authorities levels such as provincial, regional, zonal divisional
    authorities for rotational program and distribution logic. The snapshot of relevant
    entities of river streamflow represented in term of classes shown in Fig. 4. The
    topological elements are used for the contextual profiling and vulnerability assessment
    of any spatial location on the passage of the major river. The digital elevation
    of the location enables the forecasting of the flood inundation outspread and
    flood inundation period. The information about the barren area assists in the
    decision of an artificial breach to save the community and agricultural lands
    towards minimization of the losses. The roads, railways, and safe locations enable
    us to respond to the flood disaster and evacuate the village, Deh to the nearest
    and easily accessible safe locations, and rescue community. The object properties
    connecting topological classes presented in Fig. 5. In case of the flood disaster,
    the parameters to assess the impacts and damages of a flood are estimated from
    areas affected, asset affected, livestock(cattle, goats, chicken, … ) affected,
    crops affected, equipment affected, house affected, peoples affected(people died,
    injured and relocated), Masjids affected, roads affected, hotels affected, bridges
    affected, powerhouses affected, etc. The encoded damage classes are presented
    in Fig. 6. The Provincial Disaster management authorities collect daily and weekly
    information from each district to assess the damages and communicate to federal
    authority NDMA for the collaborative response, recovery, and rehabilitation activities.
    The national and international NGOs, charity organizations, social individuals
    join hands for the provision of shelter, food, health facilities, and reconstruction
    of damaged houses. The common conceptualization of all these stakeholders along
    with the real-time collaboration for reducing the duplication of response activities
    and gaps of the unattended affected community contribute to the optimization of
    efforts and resources. The contextual knowledge base for the spatial-temporal
    information also optimizes the response time of reactive rescue activities. For
    instance, the house damaged in Ghotki District during the Flood 2010, the weekly
    damages of Kucha and settled areas for the month of August to December 2010 are
    expressed in Fig. 7 based on the data of PDMA Sindh. Embedding this weekly information
    using semantic representation and sharing among stakeholders enables to provide
    relief activities on time to affected communities for shelter, food, health, and
    other essential services. FIGURE 7. Flood Damages- House damaged ratio of Ghotki
    District affected by flood 2010[Data Source PDMA Sindh (weekly damages updates)].
    Show All Moreover, we have many other water diversion mechanisms [42], which are
    applied on rivers such as Barrages “an artificial barrier across a river or estuary
    to prevent flooding, aid irrigation or navigation, or to generate electricity
    by tidal power”. Barrages help us to divert and control the follow of the river
    of water. In most cases, barrages divert the flow of rivers towards dams and dams
    store the water and branch-outs to different canals “an artificial WaterWays constructed
    to allow the passage of boats or ships inland or to convey water for irrigation”.
    Further, we have a diversion mechanism on canals called Headwork [42] “apparatus
    for controlling the flow of water in a river or canal”. These headworks manage
    the flow of water in different watercourses (a brook, stream, or artificially
    constructed water channel). These watercourses are used in irrigation lands and
    supplied to different tanks that supply water for the irrigation of fields, fishponds,
    and domestic water supply purposes. 3) Irrigation Management Structure The irrigation
    management spatially and administratively distributed in departments, zones, Canal
    division, Canal circle, and canals system for distribution, maintenance, water
    theft detection and eradication of hidden withdrawal means, desilting basins of
    WaterWays for an assigned subset of the irrigation network, and other related
    services defined in ORFFM semantic model. B. Conceptualization of Disaster Management
    Domain Disaster management activities are performed by disaster management authorities
    with different mandates and region coverage. National Disaster Management at the
    Federal authority, Provincial disaster management authority for each province,
    and district disaster management authority for each district to plan disaster
    risk mitigation and management. The contingency plan for unavoidable situations
    of monsoon season was developed and shared with the collaborative organization
    with necessary precautionary measures and top management for budgeting and technical
    support to cope with hazardous situations. The main outcomes of contingency planning
    involve the identification of the vulnerable community, locations, capacity, and
    required technical support for risk mitigation. Knowledge management is key for
    mitigation and risk reduction, but the expertise becomes tacit knowledge at the
    individual or organization level lacking an ineffective sharing mechanism and
    knowledge management practices [47]. The highest research studies for knowledge
    management from types of disasters are flood disaster studies i.e 20 out 72 presented
    in a systematic literature review by Rina Suryani Oktari et al. in [47]. The data,
    information, and knowledge at the individual level became the limiting factor
    of effective coordination and collaboration among stakeholders for effective mitigation
    and risk management strategies. Individual or organization level information suffers
    the syntax and structural heterogeneity. The problem of heterogeneity and ambiguity
    tackled by the interoperability of information and adding semantics to information
    through ontology development of the disaster management domain and incorporating
    the local contextual knowledge in a semantically interoperable knowledge base
    system. The success of the disaster management system depends on the accessibility
    of the right information to the right people at right time with preciseness and
    semantically annotated entities of the integrated domains [77]. 1) Structure of
    the Disaster Management Authority Disaster Management authority performs the coordination
    of their services with provincial authorities as well as with division, district,
    and tehsil level administration for vulnerability assessment in preparedness phase,
    rescues, relief goods distribution in the response phase, reallocation, reconstruction,
    restoration in rehabilitation and recovery phase. Besides that in the situation
    of severe impacts of disaster the provincial, division, district, tehsil administration
    coordinate and collaborate for risk mitigation during each phase. The knowledge
    base with shared conceptualization for this information contributes to the effective
    management of disaster and implementation of mitigation strategies. The class
    hierarchy of administration and disaster management authorities with semantic
    relationship encoded in OWL language and presented using Protégé 5.5 visualization
    plugin OntoGraph as shown in the Fig. 8. The rectangle with a yellow circle represents
    the class and directed arcs in different colors represent their interactions and
    relationships. The preparedness phase for flood risk assessment includes identification
    of vulnerable communities in riverine suburbs, accessibility to a safe location,
    roads, infrastructure for shelter, machinery required by DMA for a response, and
    relief goods distribution to affectees. The local and contextual knowledge base
    is integrated with real-time curated data for vulnerability assessment by the
    ontology-based system. FIGURE 8. Disaster management authorities phases, activities
    and interaction. Directed dotted arcs represent relations and types of interactions
    with individuals of relevant classes. Show All 2) Disaster Management Phases The
    disaster management activities are partitioned into four phases(Preparedness,
    Response, Recovery, and rehabilitation) reflected in Fig. 8. The preparedness
    phase is briefly described in V-B. Few damages assessment information encoding
    object properties are described in Table 4. Other properties with details may
    be accessible from ORFFM shared through GitHub repository URL link in section
    VII-A. TABLE 4 Object Properties for Damages Assessment Information 3) Flood Estimation
    Parameters The river environmental characteristic enables to assess the possibility
    of flood and magnitude are based on the physiographic attributes and meteorological
    information. Physiographic attributes include catchment area, the elevation of
    breach point, and slope of basins or channels along with the distance from residential
    regions and agricultural lands. C. Conceptualization of Administration Domain
    The spatial regions are administered by distributed hierarchically administrators
    with responsibility overall administration of assigned jurisdiction. They are
    also part of the flood commission and flood-related responsibilities include coordination,
    removal of difficulties, performance evaluation, etc. The spatial regions are
    grouped and mapped to the administrative hierarchy. The continent was partitioned
    into countries. The country has capital territory and provinces. The administration
    powers transferred to provinces, divisions, districts, tehsils, towns, and union
    councils for efficient management, budget distribution, law enforcement, monitoring,
    relief activities, assessment, etc. We mapped administration concepts in ontology
    towards coordination and collaborating for water resources management, theft reduction,
    disaster management, response, and relief goods distribution transparently and
    effectively. Our administration domain covers conceptualization of spatial regions
    hierarchy and relation with irrigation network, administrator hierarchy for their
    contribution to disaster management and relief activities. The top level classes
    of Administration module are AdminsitrationsOfSpatialRegions, Infrastructures,
    and SpatialRegions with subclasses for details hierarchy of Administrative officials,
    infrastructure(Education, health facilities, Trasnportation, … ), and regions.
    The ORFFM accomplish aforementioned activities and complex relationship by explicitly
    defining concepts, objects, data properties, and individuals. A subset of the
    properties along with characteristics, domain, and range presented in Table 5.
    A graphical complex relationship of classes, instances, and relationships among
    individuals of spatial regions, managing administrators, spanning irrigation networks
    generated using OntoGraph of Protégé v5.5 as shown in Fig. 9. TABLE 5 Object Properties
    Relating Spatial Region With Regional Administrator FIGURE 9. Graphical representation
    of classes, instances, and relationship of spatial regions, spatial region managing
    administrators, spanning irrigation network, vulnerable union councils. Show All
    SECTION VI. Semantic Formalism of ORFFM We would model river flow and flood domain
    using Description Logic(DL) ALC and predicate logic for the tableaux algorithm
    to ensure the satisfiability of the Knowledge base. Our semantic model represented
    in SROIQ DL most expressive from a family of knowledge representation languages
    and covering description logic ALC [59]. The DL is a decidable fragment of First
    Order Predicate Logic equipped with precise semantic formalization for OWL DL
    languages [33]. We provide a formal semantic of our OWL 2 DL ontologies using
    SROIQ syntax and notations. Our ontology provides a semantic knowledge base theoretically
    partitioned into Tbox, Rbox, and Abox with formal semantic descriptions for irrigation
    system, disaster management, and administration classes of Riverflow and flood
    mitigation model [59]. The assertion part is further divided into terminology
    assertion Tbox and Role assertion Rbox. Three disjoint sets of primal elements
    are as follows: The set C represented a set of concepts explicitly defined in
    ORFFM semantics. The Role set R is the relationship between concepts and enables
    role assertion for instances represented by setting I . For a demonstration of
    semantic formalism, we discussed here the irrigation submodule of the Ontology-based
    semantic model for River Flow and Flood Mitigation(ORFFM). Similar semantic followed
    for disaster management, administration, and other related domain of our model.
    Each set is further explained in the following subsection of Tbox, Rbox, and Abox.
    A. TBox SROIQ Tbox notation. Every class belongs to the primal set of the class
    concept represented by C in (1). The classes hierarchy with symbols ⊑ (subsumption
    axioms) and classes more than one are grouped in the set notation for each main
    class. The top concept is represented by the symbol ⊤ and ⊥ represents more specific
    class concepts. The irrigation system, DisasterManagement, and Administration
    are a subclass of ⊤ . The union of two classes represented by ⊓ and the intersection
    of two classes represented by the symbol ⊔ . The other symbols are negation ¬
    , existential quantifier ∃ , universal quantifier ∀ , and set notation. The IrrigationSysetem,
    DisasterManagment and Administration are topmost general classes in semantic representation
    of ORFFM. These are subclasses of Thing class represented by ⊤ as shown in (2).
    The watercourse and tent of a specific class of ORFFM have no further subclass
    and the conjunction of these two classes has nothing common represents ⊥ shown
    in (3). C IS = {StreamFlow, RiverFlowAndFloodMitigation, RiverEnvironment,Process,Person,
    Organizations,IrrigationNetwork, Infrastructures,…} IrrigationSystem ⊔DisasterManagement
    ⊔Administration⊑⊤ watercourse⊓Tents⊑⊥ (1) (2) (3) View Source The vulnerability
    assessment is the activity performed by the disaster manager in coordination with
    administration at tehsil level, district level and provincial level belongs to
    the preparedness phase of disaster management as represented in (4). VulenerabilityAssessment
    ⊑PreparenessPhase (4) View Source The Vulnerable Tehsil identified during the
    preparedness phase is a subclass of the preparedness phase and Tehsil represented
    by (5). VulnerableTehsil ⊑PreparenessPhase⊓Tehsils (5) View Source Every Tehsil
    has administrator called AssistantCommission assists in vulnerability assessment
    activities with disaster management authority as disaster commissioner for the
    respective region according to his/her job description is represented by as cardinality
    restriction for Tehsil administration shown in (6). The seepage is an IrrigationIssue
    of IrrigationSystem as stated by (7). ≥ Administrator⊐ 1HasAssistantCommissioner.Tehsil
    Seepage⊑IrrigationIssues ⊑IrrigationSystem (6) (7) View Source Following are T-Box
    axioms related to major classes of ORFFM. This represents the subsumption property
    between the classes using SROIQ Description Logic. These classes belong to irrigation
    system module of semantic model ORFFM as shown in Table 6. TABLE 6 TBox- Irrigation
    System Concept’s Semantic Representation B. RBox The concepts are related using
    role or relation in semantic formalism stated as properties on OWL 2DL. The SROIQ
    Rbox captures inter-dependencies between the roles of the considered ORFFM knowledge
    base. The roles in the irrigation submodule of ORFFM denoted by R IS . The role
    set contain all role in the module along with the function stated as characteristic
    in OWL such as in (8). The characteristic of role is represented by the (9) as
    Assigntask is inverse of ReportToManager. R IS = Inv(AssignTask)≡ {CoordinationAndCommunication,
    AssignTask,Collaborate, CoordinatWithStakeholders, CoordinateWithColleague, GuideToTeam,ReportToManager,
    DataAcquisition, HasIrrigationZone, StreamFlowProperties, StreamFlowDirection,
    StreamFlowManagers, StreamFlowMonitoring, WaterDistributedThrough,…} ReportToManager
    (8) (9) View Source The role in a particular hierarchy or role inclusion axioms
    (RIA) also referred to as role chain represented by (10) and (11). DataAcquisition
    ∘StreamFlowDataAcquired ∘UsingManaualGuaging ⊑IrrigationSystem HasMeasureDischargeRateOf
    ∘AssignTask ∘IrrigationWorkflow ⊑IrrigationSystem (10) (11) View Source The impact
    of the semantic model by adding restriction on the role hierarchy through stating
    the hierarchy level and reducing computational complexity. Every role r occurring
    in a RIA, DL expression represented by (12). r 1 ∘ r 2 ∘…∘ r n ⊑r (12) View Source
    The Role r repeated or recursive is called non-simple otherwise simple role. The
    upper limit of n may be restricted for computation performance. Another restriction
    on the role order can be asserted to comply with the semantics of domain to convert
    into regular by imposing strict partial order ≺ on the nonsimple rule hierarchy.
    Other role characteristics for semantic model also validated for regularity of
    SROIQ Rbox roles such as Ref(DischargeTo) for reflexivity, Sym(Coordinate) for
    Symmetric, Asy((ReprotTo) for asymmetry, or Dis(Disilting; DischrgeGuaging) for
    role disjointness, and Fuc(ReportToManager) for functional characteristic. The
    role hierarchy of the semantic relations expressed as “The FloodVulnuerabilityAssesmentOf
    is sub-property of PreparednessPhaseActivities property which in-turn subproperty
    of DisasterManagementCycle ” and “Desilting is part of RiverMaintenance” is represented
    by (13). Similarly, the Desilting process of WaterWays Maintenance with in-turn
    subprocess of Irrigation System represented by RIA and (14). FloodVulnuerabilityAssesmentOf
    ⊑PreparednessPhaseActivities ⊑DisasterManagementCycle Desilting ⊑RiverMaintenance
    ⊑IrrigationSystem (13) (14) View Source C. ABox The Abox of the ORFFM knowledge-based
    contains the individuals level information as opposed to Generalized Conceptual
    Inclusion(CGI) axioms in Tbox, which classify the type of individual into subgroups.
    Subset of ORFFM individuals as CGI of WaterWays a submodule of irrigation system(IS)
    are presented in (15). I IS = {ChanabRiver,ChapursanRiver, AJ K I rrigatio n D
    epartment, Irrigatio n K PK, RiceCanal,KotriBranch, …} (15) View Source An individual
    assertion can have any of the following forms. River(IndusRiver) called concept
    assertion, HasCanalCircle(BahawalpurIrrigationZone; RahimyarkhanCanalCircle) called
    role assertion ¬ HasCanalCircle(BahawalpurIrrigationZone; NaraCanalAWB) called
    negated role assertion CommissionerSukkur ≈ FloodCommisionerSukkur, called equality
    statement BahawalpurCanalCircle ≉ BahawalnagarCanalCircle called inequality statement
    D. Semantic Interpretations The knowledge base contains semantic realities’ representation
    by developing interpretation models. The interpretation models are reflected by
    I . DLs are capable to handle incomplete information following open-world assumption
    [6], [59]. DL semantic processes are the axioms of an ontology to drive all possible
    situations explicitly defined about real-world entities of a domain. DL handles
    the incomplete information of ontological axioms and keeps specified information
    about a domain open for extension of that knowledge base. The DL being monotonic
    and open-world assumption has the beauty of extendability for the addition of
    axioms leading to additional consequences. The interpretation model can assess
    the consistency or satisfiability of an ontology by assessing the axioms against
    consequences. To endorse the formal semantic of our ORFFM ontology by developing
    an interpretation model I FM for flood mitigation to assess the defined conceptualization
    of the irrigation, disaster management, and administration domains. Following
    the intuition of description logic discussed in the previous section. Here we
    define an interpretation model of the ORFFM. The interpretation for flood mitigation
    is based on the knowledge from integrated domains the irrigation, disaster management,
    and administration represented by I FM with a nonempty set of △ I FM as the domain
    of discourse which represents all individuals or discrete concepts represented
    by I . The interpretation function is represented by .I connect the individual
    concepts and role with the association of an individual with its set like Moro
    ∈ N N for corresponding individual Mor o I ∈ △ I for disaster management domain.
    Similar abstract concept VulnerbaleTehsil ∈ C I for corresponding VulnerbaleTehsil
    ∈  △ I FM . The role name IsResponseActivtity ∈ N R for the corresponding set
    IsResponseActivtity ⊆ △ I X △ I . The confusion is removed by separating syntactic
    and semantic entities referred to as role extension. N I = {IndusRiverFloodForecast,
    … }, N C = {Barrage, River, Canal, … }, N R = {HasPredecessorBarrage, hasSuccessorBarrage,
    TimetoReach, HasMaxFlowCapacity, HasCurrentFlowLevel, HasPredecessorHeadworks,
    hasSuccessorHeadworks, … }. Illustrating the above interpretation model △ I =
    {SukkurCurrentOutFlow, ChashmaCurrentOutFlow, GudduCurrentOutFlow, KalabaghCurrentOutFlow,
    KotriCurrentOutFlow, TarbelaCurrentOutFlow, TaunsaCurrentOutFlow, ChashmaMaxCapacity,
    ChashmaMaxCapacity, GudduMaxCapacity, KalabaghMaxCapacity, KotriMaxCapacity, SukkurMaxCapacity,
    TarbelaMaxCapacity, TaunsaMaxCapacity, … } represents variable flow and capacity
    of individuals used for contextual situation inference. Representation of streamflow
    data for flood forecast of Indus River. Let CurrenOutflow at GadduBarrage 2 million
    cusecs and sukkurBarrageMaxCapacity is 1.2 million cusecs this forecast high flood
    after time extraction from DistanceToPredecessorKM, and FloodSpeedKMPH. We prefer
    the unique name assumption (UNA) for a stronger and confusion-free interpretation
    of the model. For graphical representation of our domain flood management, we
    define I StreamFlowPath =( △ I FM ; . I ) as subset of the domain △ I FM represented
    by S forStreamFlowPath’s of Indus river and individuals by (16), Terminology Concept
    (17) and role elements by (18): S I = S C = S R = {Jinnah_Barrage,Chashma_Barrage,
    Taunsa_BarrageGuddu_Barrage, Sukkur_Barrage,Kotri_Barrage,} {Barrage,River} {PredecessorBarrage,
    SuccessorBarrage} (16) (17) (18) View Source The symbolic mapping of the elements
    are shown in Fig. 10. To clear the understanding of semantic interpretation by
    a directed graph with labeled nodes and arcs. Thereby, the nodes correspond to
    the domain of individuals △ I FM and the node δ∈ △ I FM represented the individual
    names assigned. The directed arrow represents an extension of roles abbreviated
    with the first letter P and S for predecessorBarrage and successorBarrage respectively.
    The semantic interpretation of the barrage’s role extension for the streamflow
    path of the Indus River is shown in Fig. 11. Attaching pictures or some interesting
    icons may assist novice users to interpret and easily memorize the irrigation
    system’s river flow path and understand the early warning recommendations. Adding
    this topographic data with real-time water flow information leads to optimize
    water distributions. FIGURE 10. Semantic interpretation-Symbolic mapping to model
    individuals. Show All FIGURE 11. Semantic interpretation of StreamFlowPath. Show
    All FIGURE 12. Inferred Classes and Instances Of inferred Class Vulnerable Tehsils.
    Show All E. Inference Reasoners Semantic web reasoners enable to deduce and infer
    the knowledge from explicitly defined concepts of the domain. DL knowledge base
    contains the portion of distributed information pool as open-world assumption
    compared to the classical database having complete information set covering domain
    with the closed-world assumption. The W3C web-page8 share a list of the reasoner
    with detailed specifications for resolving standard reasoning problems of consistency
    checking, satisfiability testing, classification, query answering, module extraction,
    explanation generation, abduction, etc. The modern reasoner discussed in [62]
    includes tableaux, hypertableaux, and other advanced algorithms to handle the
    business domain needs and cannot be model hierarchically such as tableaux, hypertableaux,
    and other advanced algorithms to handle the business domain needs and cannot be
    model hierarchically. We have used for advanced reasoner for our ORFFM semantic
    model a hypertableau calculus-based, OWL 2 direct semantic complaint HermiT reasoner
    [22]. Besides OWL 2 essential features, HermiT supports a wide range of outside
    features such as safety rules, description graphs, and SPARQL queries. HermiT
    produces inferred classes, properties, and individual assertion of ORFFM using
    description logic from the ontology model. ORFFM consists of Tbox T , Rbox R and
    Abox A for consistency checking and raise the errors and warning with explain
    facility from reasoner. We have used HermiT version 1.4.3.456 for this ontology.
    The inferred classes are displayed in the left window of 12, based on HermiT reasoner
    classification and the right window displays the direct instance of the inferred
    class flood vulnerable tehsils of Sindh province according to contingency planning
    of 2020 issued by NDMA,9 Pakistan. In Fig. 13, 13(a) object properties, and 13(b)
    data properties of ORFFM along with the inferred data and object properties plus
    inferred domain and range. The right-upper window also displays 20 and 12 usage
    of DataAcquisition object property and DateAndTime data properties respectively.
    The figure also reflects the object and data properties hierarchy presented in
    Role Inclusion Assertion of DL expression by (10) and (11). FIGURE 13. Object
    properties and Data Properties of ORFFM. Show All F. Rule Language The rule is
    a set of statements from a premise that leads to a consequence or conclusion.
    The interpretation represents the theoretical semantic formation of OWL 2 DL and
    rules transform it into actionable ontology. Various rules languages are supported
    by semantic web technology as a subset of First-Order Predicate Languages such
    as Datalog, and Semantic Web Rule Language (SWRL) implementing formal semantic
    of description logic [46]. Our ORFFM ontology contains most of the classes in
    tree structure and rules are imposed by defining necessary conditions and converted
    these classes into primitive. The necessary and sufficient conditions to transformed
    into a defined class. Besides the class representing semantic relation among the
    classes on the same level, enriched by the SWRL. The new knowledge is inferred
    from explicit knowledge using rules. OWL 2 DL is compliant with the description
    logic that has a subset of the First Order Predicate Logic. OWL 2 is based on
    SROIN (D) discussed in the previous section on semantic formalism has an issue
    of decidability, for valid SWRL rules, the language is decidable but for invalid
    rules, the tableaux algorithm may take infinite time. To resolve the decidability
    issue, the reasoner implements DL-safe rules and is only implemented to named
    individuals. The rules to infer assertion for implicit knowledge are added in
    ORFFM. We developed ORFFM ontology in Protégé 5.5 environment has SWRL Tab [46]
    for new rules with ease and assurance of valid syntax and selection of atomic
    statement for rules. Some of these rules illustrating the indirect relationships
    among the spatial regions, disaster managers are presented here. Tehsil relation
    with district and district relation with division enables to form tehsil relation
    with the division as in (19). ∧ Tehsil(?t)∧LocatedInDistrict(?t,?d) LocatedInDivision(?d,?v)
    −>LocatedInDivision(?t,?v) (19) View Source The river having current flow greater
    than max flow may generate flood and marked as flood vulnerable river. The early
    warning system may be initiated for associated Union Councils for proactive mitigation
    measures stated in (20) and (21) River(?r)∧ ∧ ∧ − ∧ − HasMaxFlowCapacity(?r,?m)
    HasCurrentFlowLevel(?r,?c) swrlb:greaterThan(?m,?c) >FloodVulnerableRiver(?r,true)
    FloodVulnerableRiver(?r,true) VulnerableUnionCouncils(?v) >GenerateEWSforUCs(true)
    (20) (21) View Source SECTION VII. Ontology Evaluation The evaluation of the proposed
    model proves the effectiveness and quality of the model. There are various techniques
    of ontology evaluation. We evaluate the ORFFM by ontology matrix, competency questions,
    and from a result of SPARQL query language queries. A. Sparql Query for Competency
    Questions The quality of the knowledge base is estimated from satisfaction on
    the knowledge retried as per requirement. The preciseness, flexibility, and semantic
    interoperability qualities of a knowledge base enable easy change for collaboration.
    The competency questions results are obtained by the SPARQL query Language from
    the ontology of River Flow and Flood Mitigation(ORFFM). The SPARQL was designed
    for RDF [27] and extended for OWL language by World Wide Web Consortium (W3C)10
    with more expressiveness.The OWL direct semantic entailment regimes discussed
    by Kollia et al. in [32]. They also assessed query improvements and optimization
    techniques with HermiT reasoner for query answering from a knowledge base. We
    evaluated our semantic ORFFM for competency questions of stakeholders. Table 7
    displays the five competency questions as a sample and SPARQL query language for
    results. The results of CQ1, CQ3, and CQ4 are displayed in Fig. 14, as Fig. 14(a),
    Fig. 14(b) and Fig. 14(c) using Protégé.5.5. Following namespaces are used in
    each query and omitted from Table 7 for brevity. PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
    PREFIX sm: <https://sites.google.com/view/smfis#> The ontology shared for extension
    and feedback from stakeholders and researchers on GitHub repository at following
    link. https://github.com/muhammadhussainmughal/SM4ORFFM TABLE 7 SPARQL Query for
    Competency Questions FIGURE 14. Results of Competency Questions and mapped SPARQL
    Query displayed in Table 3. Show All B. Ontology Metrics Ontology metrics are
    used to assess the complexity and expressiveness of an ontology. OWL 2 language
    used SROI Q (D) , which has 2N exponential time completeness complexity [23] for
    inference reasoner. We have applied HermiT 1.4.3.456 reasoner [64] for OWL 2 ORFFM
    in Protégé 5.5 Environment. The complete ontology metrics for ORFFM presented
    in Table 8 covering Base metrics, Class axioms, Object property axioms, Data property
    axioms, Individual axioms, Schema metrics, and Graph metrics. TABLE 8 Ontology
    Metrics of ORFFM C. Comparative Assessment With Existing Flood Ontologies Comparative
    assessment of existing flood ontologies discussed in section II-A revealed that
    ontology-based approach applied by various esteemed researchers in the last two
    decades and modeled flood domain with various aspects. Flood onology proposed
    in the context of urban flood, power cut issue due to flood, coastal flood, flood
    environment assessment, stakeholders preference, recede duration estimation inundated
    area, etc. These studies are summarized by capturing essential parameters of ontological
    models. Table 9 presents these studies with the Name of Ontology, creators, Year
    of proposal or development, Operations, Design pattern, few classes/subclasses
    examples, few properties examples, and the approximate total number of classes.
    Most of the ontologies are not publicly available, therefore the classes are estimated
    from the published articles of these studies. The last row of the Table 9 is our
    proposed and developed ORFFM semantic model. The studies are sorted by year in
    ascending order representing the evolution of semantic modeling approaches for
    the floods. We believe that optimizing streamflow in irrigation networks has a
    direct connection with flood mitigation. To the best of our knowledge, Our semantic
    model ORFFM has the highest number of classes, integrating irrigation domain and
    with publicly available ontology via VII-A. TABLE 9 Comparative Assessment of
    ORFFM With Existing Flood Ontologies SECTION VIII. Conclusion and Discussion In
    this paper, we presented a novel approach for knitting the hierarchies of water-producing
    sources, water distribution, and diversion mechanisms. Flow monitoring and maintenance
    are connected to flood and it raises the phenomenon of context-awareness in terms
    of water overflow during streaming from one node to another. Precisely, it helps
    towards the improved distribution of water to the irrigation lands, and reduce
    wastage. We represented modular ontology to simplify the complexity of large-scale
    spatiotemporal systems. We contribute to interoperable information sharing for
    efficient water utilization for agricultural lands and avoidance, mitigation,
    and response mechanism for a flood disaster. We proposed the integration of technology
    through semantic modeling. Machine process-able data assists in improving the
    economy through better provision of irrigation to agricultural lands as well as
    household and industrial use. Due to climate change performance of the forecasting
    model was degraded. A higher number of dimensions results in a computational trade-off.
    The contextual model is required for effective forecasting models considering
    local constraints and considering the variability of data. Another major issue
    of degraded performance and the reliability of the data. Non-reliability is itself
    a disaster for the decision-making system. A realistic model not only needs the
    contextual models but also requires data with acceptable accuracy, adequate frequency,
    a sufficient number of features to model the semantic model with reliability and
    interoperability. SECTION IX. Future Work We would develop the automation system
    based on ORFFM interoperable, consistent information repository of integrated
    domains, such as self-alarming system integrated with climatology, topology, agricultural,
    and population consensus data for water availability based adaptive model for
    crops. The autonomous system needs to develop that can consumes the information
    processed by WaterOnto after acquisition from WaterGird and then applying heuristic
    for combined human and machine intelligence for the optimal solution and proactive
    response strategies development. Towards an extension of the ORFFM model, we covered
    semantic formalism, inferring, rule language, and formal logic along with semantic
    interpretation. We extend this model for proof layer by integration and implementation
    of business logic, provenance for verification of activities performed, and Blockchain
    consensus-based modification of workflow and water distribution mechanism to resolve
    the conflict among provinces triggered by the scarcity of fresh surface water.
    ACKNOWLEDGMENT This research work is sponsored by Higher Education Commission,
    Pakistan, under the faculty development program. The authors thank the Center
    for Research in Ubiquitous Computing (CRUC) Mohammad Ali Jinnah University (Karachi)
    and Sukkur IBA University (Sukkur) for research facilities. Authors Figures References
    Citations Keywords Metrics Footnotes More Like This Research and realization of
    ontology-based Tujia brocade knowledge base system 2017 3rd IEEE International
    Conference on Computer and Communications (ICCC) Published: 2017 Research of Knowledge
    Base System Based on Ontology for Drilling Accident Emergency Decision 2012 International
    Conference on Computer Science and Electronics Engineering Published: 2012 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: Mughal; Shaikh; Wagan; Khand; Hassan  (2021)
  journal: IEEE Access
  keywords:
  - agricultural productivity
  - automated systems
  - data quality
  - disaster management
  - flood mitigation
  - irrigation management
  - ontology-based semantic modeling
  - real-time irrigation
  - river flow
  - water resources
  - water scarcity
  limitations: The paper does not have any major limitations.
  metrics:
    base_metrics:
      axiom_count: 25
      class_count: 60
      data_property_count: 72
      individual_count: 2
      object_property_count: 55
    class_axioms:
      disjoint_classes: 0
      equivalent_classes: 0
      general_class_axioms: 0
      subclass_axioms: 15
    data_property_axioms:
      disjoint_data_properties: 0
      equivalent_data_properties: 0
      functional_data_property_axioms: 0
      general_data_property_axioms: 0
      inverse_data_property_axioms: 0
      sub_data_property_axioms: 6
    graph_metrics:
      average_depth: 0.75
      diameter: 3
      number_of_roots: 0
    individual_axioms:
      class_assertion_axioms: 1
      data_property_assertion_axioms: 1
      different_individuals_axioms: 0
      negative_data_property_assertion_axioms: 0
      object_property_assertion_axioms: 0
      same_as_axioms: 0
    object_property_axioms:
      disjoint_object_properties: 0
      equivalent_object_properties: 0
      functional_object_property_axioms: 0
      general_object_property_axioms: 0
      inverse_object_property_axioms: 4
      sub_object_property_axioms: 8
    schema_metrics:
      imported_ontologies: 0
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/9312710/09380442.pdf
  publication_year: 2021
  relevance_score: 0.9030612244897959
  relevance_score1: 0
  relevance_score2: 0
  title: 'ORFFM: An Ontology-Based Semantic Model of River Flow and Flood Mitigation'
  verbatim_quote1: '"Streamflow data is collected from a variety of distributed resources
    across different barrages by the personnel of management organizations with their
    native format for data storage and use. The river and canals water flow data sources
    include manual gauging [9], telemetry [8], remote sensing [28] technique for glaciers
    and ungauged areas, wireless sensor network [38], [52] for high variation streamflow
    gauging stations, barrages, headworks, spillways, outlets, etc. Other data sources
    means include drone imaging,citizen observational data [48], crowdsourcing for
    hydrographs [20], stochastic modeling [65] and many others estimation techniques."'
  verbatim_quote2: '"The contributions of this study are proposal, design, and development
    of multiple domains integrated ORFFM knowledge base. Key features of the ORFFM
    knowledge base is summarized as follows:

    Streamline the coordination challenges of irrigation and riverine flood mitigation
    among stakeholders of the irrigation system, administration, and disaster management
    authorities for collaborative activities, interactions, operations, and policies
    backed by the semantic knowledge base."'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22072650
  analysis: The provided paper gives an overview of recent advances and research directions
    in data gathering techniques for wireless sensor networks (WSNs) and the Internet
    of Things (IoT). It covers topics related to compressed sensing, routing, medium
    access control (MAC), and network coding. The paper discusses the use of compressed
    sensing to reduce report payload at several levels, which affects transmission
    time and energy consumption. For routing, the paper reviews cluster-based routing
    protocols, opportunistic routing, and routing protocols for low-power and lossy
    networks (RPL). Regarding MAC, the paper focuses on duty-cycle MAC protocols,
    discusses different approaches to duty-cycle, and explores how to reduce energy
    consumption during awake intervals. Finally, the paper examines how network coding
    can be leveraged to improve data gathering by utilizing intermediate nodes to
    perform coding on incoming packets before forwarding them. The paper concludes
    by highlighting relevant limitations and future research directions. Overall,
    the paper provides a comprehensive review of data gathering techniques in WSN
    and IoT networks, summarizing the current state of the art and identifying areas
    for further research.
  authors:
  - Omer Gurewitz
  - Mark Shifrin
  - Efi Dvir
  citation_count: 13
  full_citation: 'Data Gathering Techniques in WSN: A Cross-Layer View'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Gurewitz, O.; Shifrin, M.;\nDvir, E. Data Gathering Techniques\nin WSN:\
    \ A Cross-Layer View. Sensors\n2022, 22, 2650. https://dx.doi.org/\n10.3390/s22072650\n\
    Academic Editor: Carles Gomez\nReceived: 8 January 2022\nAccepted: 24 March 2022\n\
    Published: 30 March 2022\nPublisher’s Note: MDPI stays neutral\nwith regard to\
    \ jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nData Gathering Techniques in WSN: A Cross-Layer View\n\
    Omer Gurewitz *\n, Mark Shifrin\nand Eﬁ Dvir\nSchool of Electrical and Computer\
    \ Engineering, Ben-Gurion University of the Negev, Beer-Sheva 8410501, Israel;\n\
    markshi@post.bgu.ac.il (M.S.); eﬁd@post.bgu.ac.il (E.D.)\n* Correspondence: gurewitz@bgu.ac.il\n\
    Abstract: Wireless sensor networks (WSNs) have taken a giant leap in scale, expanding\
    \ their applica-\nbility to a large variety of technological domains and applications,\
    \ ranging from the Internet of things\n(IoT) for smart cities and smart homes\
    \ to wearable technology healthcare applications, underwater,\nagricultural and\
    \ environmental monitoring and many more. This expansion is rapidly growing every\n\
    passing day in terms of the variety, heterogeneity and the number of devices which\
    \ such applications\nsupport. Data collection is commonly the core application\
    \ in WSN and IoT networks, which are\ntypically composed of a large variety of\
    \ devices, some constrained by their resources (e.g., processing,\nstorage, energy)\
    \ and some by highly diverse demands. Many challenges span all the conceptual\n\
    communication layers, from the Physical to the Applicational. Many novel solutions\
    \ devised in the\npast do not scale well with the exponential growth in the population\
    \ of the devices and need to\nbe adapted, revised, or new innovative solutions\
    \ are required to comply with this massive growth.\nFurthermore, recent technological\
    \ advances present new opportunities which can be leveraged in\nthis context.\
    \ This paper provides a cross-layer perspective and review of data gathering in\
    \ WSN and\nIoT networks. We provide some background and essential milestones that\
    \ have laid the foundation\nof many subsequent solutions suggested over the years.\
    \ We mainly concentrate on recent state-of-\nthe-art research, which facilitates\
    \ the scalable, energy-efﬁcient, cost-effective, and human-friendly\nfunctionality\
    \ of WSNs and the novel applications in the years to come.\nKeywords: wireless\
    \ sensor networks (WSNs); Internet of things (IoT); data gathering; wearables;\n\
    compressed sensing; network coding; mobile sink; energy harvesting\n1. Introduction\n\
    Wireless sensor networks (WSN) are data measurement and gathering networks\nbased\
    \ on small hardware (HW) units capable of sensing, monitoring, or measuring their\n\
    surroundings. The sensed data are transmitted directly or by relay via other sensors\
    \ to\nsome sink or server or a base station. The ultimate objective of such a\
    \ conﬁguration is to\nprovide control or exploration capabilities over an area\
    \ where the network is deployed.\nWSN characteristics can vary substantially:\
    \ they can be composed of a few to hundreds of\nthousands of sensors; the monitored\
    \ terrain can range from a small coverage area (e.g., the\nhuman body) to a vast\
    \ realm (e.g., a forest area for ﬁre detection); the sensed variables of\ninterest\
    \ of the surroundings are diverse (e.g., weather or health parameters, acceleration,\n\
    pollution); and the sensors can have different characteristics (e.g., size, computational\n\
    power, energy source).\nThe Internet of things (IoT) aims to improve day-to-day\
    \ life. The concept includes\nsmart cities, smart homes, pervasive health care,\
    \ assisted living, environmental monitoring,\nsurveillance, and so on. The IoT\
    \ paradigm relies on interconnecting a large number of\ndevices (things) linked\
    \ by the Internet via heterogeneous access networks through which\nthey can exchange\
    \ information with one or more Internet gateways that can process the\ndata, take\
    \ action, and forward them to another destination if needed. Since many IoT\n\
    devices are expected to be wireless, and since sensing is one of the main tasks\
    \ and tools\nutilized by the IoT paradigm, IoT systems will rely extensively on\
    \ WSN technology. The\nSensors 2022, 22, 2650. https://doi.org/10.3390/s22072650\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 2650\n2 of 44\nscale of\
    \ scenarios where WSN are deployed nowadays is vast. Traditionally, WSN were\n\
    classiﬁed based on their placement (e.g., terrestrial, underground, multimedia)\
    \ [1]. Since\nWSNs are closely associated with IoT, contemporary classiﬁcation\
    \ tends to re-attribute the\nnotions of the WSN domain to the IoT domain [2] and\
    \ classify them based on their primary\nobjectives, such as smart cities [3,4],\
    \ healthcare [5], retail and leisure [6], utilities (e.g., smart\nhome energy\
    \ control, water metering and leak detection, and other general infrastructure\n\
    monitoring networks) [7], agriculture and environmental safety (e.g., smart farming\
    \ and\nharvesting, pest control [8–10], seismology monitoring [11,12], oceanology\
    \ [13]), and more.\nAs previously explained, one of the main tasks of both WSN\
    \ and IoT systems is\ndata collection and dissemination. Reports are collected\
    \ from the devices, and updates\nand operational assignments are distributed.\
    \ Maintenance and functional assessments\nare also collected and disseminated.\
    \ Data collection and dissemination in very dense\nnetworks such as WSNs and IoT\
    \ networks which span heterogeneous devices, a signiﬁcant\npercentage of which\
    \ are expected to be small, with very constrained processing, storage,\nand energy\
    \ resources and with minimal network capabilities, is challenging and draws\n\
    signiﬁcant attention both by the industrial and academic communities. Some of\
    \ these\nchallenges include: (i) Information management — the amount of information\
    \ collected or\nneeding to be disseminated to the relevant entities is enormous,\
    \ and some is expected to be\nredundant, both in terms of the information sent\
    \ by each device, which can be compressed,\nand in terms of same information received\
    \ by different entities. Accordingly, innovative\ntechniques are required for\
    \ data compression to reduce transmitted data over wireless\nchannels and aggregation\
    \ techniques that exploit the redundancy between information sent\nby the different\
    \ entities. (ii) Data analysis and reaction — the expected vast data exchange\n\
    and the low latency requirement (at least for some of the information collected)\
    \ require\nprocessing and analysis of data in real-time or near real-time, to\
    \ enable timely decision\nmaking and instantaneous action-taking.\nThe ability\
    \ to successfully transmit and gather vast streams of data incoming from an\n\
    enormous number of devices and sensors and ﬁnally to successfully analyze them,\
    \ in order\nto automatically control a much larger scope of everyday life systems,\
    \ directly couples\nthe process of data gathering with Big Data related challenges\
    \ (e.g., [14–17]). Furthermore,\nleveraging Cloud Computing platforms offers signiﬁcant\
    \ advances in data analytical abil-\nities (e.g., [18–20]). It provides new horizons\
    \ to further develop and increase the size of\nWSN/IoT networks both in the sense\
    \ of the number of sensing units and in the sense of\nthe amount of the acquired\
    \ data (e.g., [21–23]). (iii) Connectivity — collecting and dissem-\ninating data\
    \ from and to many devices, potentially through vast, dense, heterogeneous\nnetworks,\
    \ will be one of the biggest challenges of the future of IoT; accordingly, novel\n\
    MAC protocols and coding schemes should be devised to comply with this challenge.\
    \ With\nthis respect, air time utilization and energy efﬁciency are of primary\
    \ importance for the\nMAC layer protocol design. Any MAC layer protocol should\
    \ ensure that devices utilize the\nwireless channel frugally and with minimum\
    \ energy consumption. (iv) Security and Pri-\nvacy — Connecting enormous numbers\
    \ of devices to the Internet exposes the IoT network\nto serious security vulnerabilities.\
    \ All the more so since the relevant entities are limited.\nAccordingly, issues\
    \ such as authenticity, data encryption, and vulnerability to attacks (e.g.,\n\
    device impersonation) are critical for the IoT paradigm’s continuous growth (e.g.,\
    \ [24]).\nIn addition, since the information transmitted over the WSN and IoT\
    \ networks can be\nhighly conﬁdential (e.g., health reports, device tracking),\
    \ the collection and dissemination\nof this information create signiﬁcant challenges\
    \ related to data protection and privacy.\nThis survey will explore the state-of-the-art\
    \ of data collection and dissemination as-\npects in WSNs and IoT environments\
    \ mentioned above. We will review essential milestones\nyet mainly focus on recent\
    \ publications and present the new trends and research directions.\nOur resources\
    \ included mainly Google Scholar, IEEE Xplore and our university’s library\ndatabases,\
    \ utilizing the keywords of this paper. We also used important references from\n\
    the bilbiography of the initial papers and ones that cited them. Data collection\
    \ spans all the\nnetworking layers, from the physical implementation of transmitting\
    \ bits across a commu-\nSensors 2022, 22, 2650\n3 of 44\nnication medium to the\
    \ application layer. Due to the wide-ranging scope of the topic, we\nwill not\
    \ be able to cover all its aspects (for example, in this paper, we will not discuss\
    \ the\ncritical topic of security and privacy). Some of the issues will be covered\
    \ more thoroughly\nthan others. However, since some of the topics we discussed\
    \ rely on the general wireless\ncommunication technology and on broad setup protocols\
    \ which are not data-gathering ori-\nented per se, on some of the topics, we will\
    \ provide a more comprehensive background and\ndescribe protocols that are aimed\
    \ at a broader domain than data-gathering. For example,\nmany medium access control\
    \ (MAC) and wireless routing protocols are designed for a\nwide range of topologies,\
    \ trafﬁc patterns, quality of service requirements, etc. Even though\nthey can\
    \ be applied, they are not explicitly designed for data gathering. We will include\n\
    some more general yet essential studies in our survey. To grasp the whole picture\
    \ and to\nbetter understand some data-gathering-related issues, in some cases,\
    \ we will delve into the\npertinent background and stray into some peripheral\
    \ topics. We will cover topics related to\nall layers of the protocol stack. Sometimes\
    \ classiﬁcation based on a stack is not clear-cut, as\nsome of the issues involve\
    \ multiple stacks.\nIn particular, the survey comprises the following topics:\n\
    The device’s platform, which accommodates the sensing unit, can highly impact\
    \ the\nperformance of the application utilizing it and speciﬁcally the data-gathering\
    \ application,\nand vice versa, the application (e.g., data gathering) can impact\
    \ the platform architecture\nwhen designed in application-oriented manner or when\
    \ some of the essential features and\nrequirements are taken into account in the\
    \ platform design process. The same mutual\neffect also applies to the WSN infrastructure\
    \ and the network architecture (e.g., topology,\nsystem organization). We start\
    \ with reviewing studies pertaining to the general device’s\nplatform and infrastructure-related\
    \ novelties (Section 2). We cover new domains which\nwere only recently exposed\
    \ to WSN and IoT networks and introduced new opportunities for\nalgorithm design\
    \ in such networks. Some of these novel technologies have revolutionized\nthe\
    \ way applications can utilize each particular device as well as the shared network\
    \ and\nhave enabled new algorithm opportunities and design challenges across the\
    \ entire protocol\nstack which we describe throughout this survey.\nNext follows\
    \ Section 3 which provides a focused summary of recent advances in\ncompressed\
    \ sensing—a signal processing technique that can take advantage of sparsity\n\
    and redundancy of the data. In the context of data gathering procedures, compressed\n\
    sensing is utilized to reduce report payload at several levels, which include\
    \ reduction of\nthe sensed data size and the transmitted report size, by pruning\
    \ the devices that need to\nsend reports and by compressing the combined relayed\
    \ data before forwarding it toward\nits destination (the sink). We provide a basic\
    \ compressed sensing background and review\nthe state-of-the-art in the context\
    \ of data gathering in WSN.\nSection 4 considers the medium access control (MAC)\
    \ sublayer. In wireless communi-\ncation, channel utilization is critical and\
    \ broadly inﬂuences several performance aspects\nsuch as throughput, latency,\
    \ power utilization, delivery ratio, and more. Over the years,\nnumerous algorithms\
    \ and protocols have been suggested for wireless channel access in\ngeneral, and\
    \ WSNs with their speciﬁc characterization in particular. In Section 4, we review\n\
    only a small fraction of the countless MAC protocols that have been designed for\
    \ WSNs.\nWe mainly concentrate on protocols that highlight a conceptual approach\
    \ or trend and\nreview some of the more recent MAC protocols in data gathering\
    \ in WSN and IoT networks,\nwhich address new challenges such as highly dense\
    \ networks, congested channels, and\nvery limited resources.\nWe ascend the protocol\
    \ stack and in Section 5 we address routing aspects. As with the\nMAC sublayer,\
    \ routing protocols in multi-hop wireless networks have also been extensively\n\
    studied. We start by providing several milestones in the context of data gathering\
    \ in\nWSNs. We continue with more recent studies which mainly include enhancements\
    \ to the\naforementioned protocol, taking into account new challenges such as\
    \ scalability demands\nand energy-related advances which present new opportunities\
    \ yet impose new constraints.\nWe continue with studies that leverage the multi-hop\
    \ topology to realize a network-coding\nSensors 2022, 22, 2650\n4 of 44\nmechanism.\
    \ Finally, we discuss a new paradigm that extends the traditional setup in which\n\
    the sensed data need to be routed toward a static central monitoring station (sink),\
    \ and\nutilize a mobile sink (or sinks) that traverse the terrain and can help\
    \ in collecting the devices’\nreports. We review several state-of-the-art schemes\
    \ in this mobile sink paradigm.\nThe ﬁnal section of this survey is dedicated\
    \ to wearable technology in the form of\nsmart devices that are attached to the\
    \ human body to monitor the user and their envi-\nronment. Wearable technology\
    \ involves challenges in all the aspects discussed in the\nprevious sections,\
    \ yet they introduce new opportunities for high-demand applications with\nunique\
    \ performance requirements and constraints. Even though we do not attempt to\n\
    provide a comprehensive review of the numerous applications suggested over the\
    \ years, we\nemphasize this prominent application layer and discuss several applications\
    \ in Section 6.\nAs previously explained, we roughly partitioned the topics covered\
    \ in this survey\nbased on the communication layers and organized the sections\
    \ accordingly. We note\nthat this partition is somehow artiﬁcial, as many innovations\
    \ in data-gathering involve\nmore than one layer. Furthermore, many technological\
    \ advances and research areas affect\nmultiple domains in different layers and\
    \ are visited in more than one section. Figure 1\ndepicts the schematic structure\
    \ of the paper. In the ﬁgure, the ovals represent the main\nresearch domains covered\
    \ in the paper. The hexagons represent the most prominent\nresearch tool innovations\
    \ and techniques utilized by data-gathering, which are covered in\nthe paper.\
    \ The arrows represent the inter-relation between them. For example, technologies\n\
    such as energy harvesting (EH) or Machine Learning (ML) and Artiﬁcial Intelligence\n\
    (AI) are utilized by innovations in all the layers starting from the platform\
    \ hardware to\nthe application layer. However, network coding is mainly utilized\
    \ by the network layer.\nUnmanned Aerial Vehicle (UAV) is leveraged by both the\
    \ MAC and the Network layers.\nArchitecture\nSection 2\nMAC\nSection 4\nRouting\n\
    Section 5\nWearables \nand WBAN\nSection 6\nApplication\nOriented\nMobile Sink\
    \ \n& UAV\nUtilization\nCompressed\nSensing\nSection 3\nNetwork\nCoding\nMachine\n\
    Learning\nEnergy \nHarvesting\nCloud\nBased\nStandards \n& Protocols\nFigure 1.\
    \ Research directions. While we organize the sections according to the layers,\
    \ this diagram\nshows how research directions are connected across different layers.\
    \ The ovals denote the major\nresearch areas (which are associated with sections\
    \ in the paper), and the hexagons refer to more\nspeciﬁc sub-areas, technological\
    \ innovations, and research tools. The arrows represent a schematic\ninter-relation\
    \ between them.\n2. WSN Architecture—Arising Platforms and Novel Infrastructure\
    \ Concepts\nOur primary focus in this survey is data gathering in the context\
    \ of wireless commu-\nnication networks. The units that generate the data (typically\
    \ sensors) are application-\ndependent and can serve a large variety of realms,\
    \ e.g., health, environmental, activity\nmonitoring, etc. Even though the sensing\
    \ unit is the essence, we will not cover it thor-\noughly, and we will only skim\
    \ through it sporadically when discussing applications and\nSensors 2022, 22,\
    \ 2650\n5 of 44\ntheir speciﬁc requirements. Nonetheless, the term “sensor” typically\
    \ refers to the whole\nplatform or device in which the sensing unit is only one\
    \ component out of many, such as\nprocessing unit, transceiver unit, power unit,\
    \ antenna, and more, several of which can be\nintegrated into the device according\
    \ to the particular application needs. The sensing unit\nitself has its own requirements\
    \ and constraints, and in many situations cannot be altered.\nIn addition, the\
    \ integrated unit architecture and the platform design can be subject to\nvarious\
    \ stringent constraints. For example, size requirements can impose a strict constraint\n\
    on the device design; low power consumption, low production cost, and self-operation\
    \ can\nrepresent additional constraints. Accordingly, the device architecture\
    \ is fundamental and\naffects many other factors in the system. For example, power\
    \ supply affects the life span\n(or the time needed to replace the batteries);\
    \ it also affects transmission range, memory,\nand processing unit, which in turn\
    \ can affect the algorithms that can be executed on the\ndevice, etc.\nExtensive\
    \ research has been conducted on the design and architecture of the end\ndevice\
    \ and the infrastructure. We leave a detailed description of the basic components\
    \ such\nas the sensing unit, transceiver, antenna, processing unit, etc., as well\
    \ as the underlying\nhardware beyond the scope of this survey. To this end, the\
    \ objective of the rest of this section\nrefers to how data-gathering objectives\
    \ may impact both the design of speciﬁc sensors\nand the WSN infrastructure. By\
    \ the latter, we mean topology, system organization used to\ngather the data,\
    \ and algorithms to implement the data gathering. It is noteworthy that the\n\
    sensors’ characteristics also dictate the topology and, consequently, the data\
    \ aggregation\nalgorithms. In the sequel, we mention several platform architecture\
    \ designs as well as\nseveral network-wide architectures, mostly from recent years.\
    \ Additional similar studies\nappear throughout the survey, yet they are organized\
    \ in chapters according to the area in\nwhich they propose the most signiﬁcant\
    \ novelty. Figure 2 presents a schematic description\nof the section. Since several\
    \ papers presented in this section cover more than one topic, and\nsince, as previously\
    \ mentioned, this section is not presumed to provide an exhaustive list\nof all\
    \ papers or topics covered by the scope of WSN architecture, and some of the topics\
    \ are\nnot covered at all or covered by only a few representative papers, the\
    \ description is broad\nand only highlights the main topics covered in the section.\n\
    Architecture\nSection 2\nSensor’s Platform\nNetwork\nPower Supply (Battery\\EH)\
    \ \nSection 2.2\nApplication Oriented\nSection 2.1\nTopology\nSection 2.3\nApplication\
    \ Oriented\nSection 2.4\nFigure 2. Schematic description highlighting the main\
    \ topics covered in the section.\n2.1. Application-Oriented\nMany sensor platforms\
    \ are application-oriented. Occasionally, their suggested ar-\nchitecture can\
    \ be applied to other applications; however, their design and evaluation are\n\
    typically aimed at a speciﬁc one. Hence, in many cases, both hardware and software\n\
    technological developments are introduced for effective functioning. One of the\
    \ most\ncommon tasks of WSN is the obvious one of monitoring a terrain. There\
    \ are many variants\nof WSN monitoring. For example, the requirement can be to\
    \ monitor every point in the\nField of Interest (FoI) vs. monitoring a limited\
    \ number of speciﬁc locations or targets (aka\ntarget coverage) vs. just monitoring\
    \ a border of a region to detect intruders (aka barrier\ncoverage). The coverage\
    \ problem typically involves selecting a subset of sensors that fulﬁll\nSensors\
    \ 2022, 22, 2650\n6 of 44\nthe monitoring objective while maintaining network\
    \ connectivity. The sensors’ capabilities\nand the monitoring objective determine\
    \ the network topology.\nWe present several recent examples that mainly concentrate\
    \ on connectivity and data\ngathering under the constraints of the monitoring\
    \ objective. Biswas et al. [25] focus on\nenergy-efﬁcient data gathering in target\
    \ coverage problem, in which an n sensor WSN\nneeds to monitor T speciﬁc targets,\
    \ and there exists a route (multi-hop) from each source to\nthe sink. The paper\
    \ assumes that the source nodes that sense the targets and initiate data\npackets\
    \ into the network are known, and deals with the forwarding of these packets to\n\
    the sink. The paper proposes a distributed data gathering algorithm in which after\
    \ each\nnode discovers its neighbors and their hop-count to the sink, it will\
    \ forward data packets\n(when required) to its neighbor with maximum remaining\
    \ energy and a lower hop count\nto the sink (the remaining energy is assumed to\
    \ be known). Ammari [26] focuses on the\nk-coverage problem in which each point\
    \ in the FoI is required to be covered by at least k\nsensors at any time, and\
    \ each active sensor participating in the monitoring task is required\nto be connected\
    \ to the sink (possibly via a multi-hop route). The paper assumes that the\nsensors\
    \ are heterogeneous (they do not have the same characteristics) and mobile, hence\n\
    the sensors can move toward any region of interest in the deployment ﬁeld to participate\
    \ in\nany deﬁcient k-coverage area and can also act as mobile proxy sinks that\
    \ collect sensed data\nfrom the sensors and deliver them to the sink. Ammari [26]\
    \ partitions the problem into\ntwo problems which are solved sequentially. Namely,\
    \ the mobile k-coverage problem, which\nselects a minimum subset of active sensors\
    \ that solve the k-coverage problem and the data\ngathering problem, and devise\
    \ a forwarding scheme from the active sensors to the sink such\nthat the energy\
    \ consumption due to sensor mobility and communication is minimized.\nMdemaya\
    \ and Bomgni [27] utilize mobile sensors to achieve area coverage. These\nmobile\
    \ sensors can be moved and relocated to cover holes after the random deployment.\n\
    The authors suggest a two-phase approach. According to the ﬁrst one, the monitoring\n\
    area after the initial random deployment is identiﬁed (by the BS), and mobile\
    \ nodes are\nrelocated to cover the monitoring holes detected after the initial\
    \ deployment, trying to\nensure full coverage of the AoI by the static and relocated\
    \ sensors. At the second stage, the\nproposed algorithm schedules the sensors’\
    \ activity (awakening and transmission times)\nthat minimizes the energy consumption\
    \ of the nodes while collecting and sending data\nto the base station. To this\
    \ end, the paper distinguishes between “normal” nodes and\ncluster heads. A survey\
    \ that reviews algorithms and techniques related to the connectivity-\ncoverage\
    \ issues in WSN can be found in Boukerche and Sun [28].\nOccasionally, WSN architectures\
    \ and designs are more application-oriented. For\nexample, Cerchecci et al. [29]\
    \ propose a sensor node topology that uses low-cost and low-\npower components\
    \ for energy-efﬁcient waste management in the context of smart cities.\nThe architecture\
    \ described in [29] suggests a node architecture for measuring the ﬁlling\nlevel\
    \ of trash bins and utilizes LoRa LPWAN (low-power wide-area network) technology\n\
    for real-time data transmission to collect the measured data in a remote data\
    \ collection\ncenter. The design of a sensor node that can detect the presence\
    \ of water on home ﬂoors and\nprovide early warning of water leaks is suggested\
    \ by Teixidó et al. [30]. The paper presents\nand deploys both hardware and software\
    \ of the network components (ﬂood sensing nodes,\nactuator nodes, and a control\
    \ central); communication within the sensor network relies\non the IEEE 802.15.4\
    \ standard. Borrero and Zabalo [31] present a low-cost agriculture-\noriented\
    \ system. The suggested system is based on LoRa technology and can collect various\n\
    measurements, such as humidity, ambient temperature, soil moisture, and temperature,\n\
    and enables a farmer to access all of the information necessary to achieve efﬁcient\
    \ irrigation\nmanagement of crops in real time. The developed wireless sensor\
    \ node has been optimized\nboth in hardware and software and exhibits very low\
    \ power consumption.\n2.2. Energy-Harvesting (EH)\nOne of the main concerns of\
    \ the sensor platform’s design is the source of energy.\nTypically, the energy\
    \ source is a battery attached to the sensor platform. It is utilized to\nSensors\
    \ 2022, 22, 2650\n7 of 44\nprovide power to all the required operations, e.g.,\
    \ wireless transmission, computation,\nmemory, etc. The battery properties (e.g.,\
    \ technology used and size) can determine its\nlifespan as well as several other\
    \ properties, e.g., transmission range. In many systems,\nthe battery is a burden,\
    \ as it increases the cost of the system, constrains the platform size,\nand most\
    \ importantly, requires to be replaced occasionally. The challenge of saving power\n\
    spans all the protocol stack; energy considerations show up in each part of this\
    \ survey. As\nwith the other layers, PHY layer innovations have also been suggested\
    \ as to how to utilize\nbattery power efﬁciently.\nAn alternative approach to\
    \ overcome the battery hurdle is to embed a mechanism\nthat harvests energy. Such\
    \ a mechanism can be embedded alongside the battery to ex-\ntend its lifespan,\
    \ or more commonly, it can completely replace the battery so that all the\nfunctions\
    \ rely on it. Batteryless WSNs that rely solely on energy-harvesting (EH)-WSN\n\
    can compromise performance; for example, their transmission range can be shorter,\
    \ the\navailable energy can constrain their awake time, and so on. One of the\
    \ main challenges is to\nlocate the ambient resource from which the energy can\
    \ be harvested. Many studies have ex-\nplored different energy sources that can\
    \ supplement energy, such as solar, vibration, wind,\nmotion, electromagnetic,\
    \ and more. Numerous comprehensive technological overviews\nwith their advantages\
    \ and limitations, energy harvesting modeling, challenge expectations,\nand prospects\
    \ can be found in, for example, Refs. [32–37]. A more recent system design\nreview\
    \ on battery-free and energy-aware WSNs, which utilize ambient energy or wireless\n\
    energy transmission, is given in [38]. It addresses energy supply strategies and\
    \ provides\ninsight into energy management methods and possibilities for energy\
    \ saving at the node\nand network levels.\nKhalid et al. [39] suggest a zero-power\
    \ wireless sensor architecture that consists of\na capacitive sensor (a sensor\
    \ that associates the parameter of interest with the change in\nthe capacitance),\
    \ an RFID chip, a circulator (allows power ﬂow between three deﬁned\nports), and\
    \ an antenna (batteryless). The conceptual idea is that the sensor reﬂects the\n\
    signal received from the RFID, with a change in phase, which is relative to the\
    \ sensed value.\nDesign and implementation of an energetically autonomous WSN\
    \ platform for ambient\nmonitoring in indoor environments are suggested by Abella\
    \ et al. [40]. The proposed self-\npowered autonomous sensor node platform relies\
    \ on embedded photo-voltaic (PV) panels\nto harvest the energy, a microcontroller\
    \ and an RF transceiver with an attached antenna.\nThe suggested architecture\
    \ was prototyped and validated experimentally. Lee et al. [41]\npropose a ﬂoating\
    \ wireless device with energy harvesting capability. The ﬂoating device is\nenergetically\
    \ self-sustaining for extended operational hours. It supports long-range com-\n\
    munication between wireless sensor nodes and a gateway relying on the LoRa technology\n\
    while deployed over a water surface. The ﬂoating device can be used as an environmental\n\
    monitoring station to remotely collect weather and water quality information.\
    \ Ref. [42]\npresent the design of a wireless sensor node, powered by solar energy,\
    \ that collects en-\nvironmental data and can transmit it across vast distances\
    \ (directly to the cloud). The\narchitecture presented therein relies on low-power\
    \ wide-area network (LPWAN) protocols\nthat provide a long-range communication\
    \ system with limited data to transmit and high\nenergy efﬁciency. The authors\
    \ utilize Sigfox technology in their proof-of-concept design.\nAs previously mentioned\
    \ in numerous papers, surveys and tutorials exploring dif-\nferent aspects of\
    \ energy harvesting in WSN exist (a sliver of which we present herein).\nWe will\
    \ revisit EH when we discuss various aspects of data aggregation, such as routing\n\
    enhancement for EH-WSN (under EH constraints), on which we elaborate in Section\
    \ 5.2 or\nwhen discussing wearables in Section 6.\n2.3. Topology\nThroughout the\
    \ survey, the interaction of WSN and IoT will arise in multiple contexts.\nWhile\
    \ this survey mainly deals with data gathering by means of wireless units, an\
    \ IoT unit\npresumes a more high-level entity for localized data gathering. To\
    \ assess the connection\nbetween these two concepts, the reader is advised to\
    \ refer to the most recent work by\nSensors 2022, 22, 2650\n8 of 44\nDevadas et\
    \ al. [43], for example, where the authors enumerate the IoT data management\n\
    frameworks, challenges and issues. The chapter focuses on three layers of data\
    \ management\nin IoT networks, communication, storage and processing. In addition,\
    \ deployment of IoT\nData management for smart home and smart city is described.\n\
    It is essential to distinguish between a one-directional WSN platform, where sensors\n\
    merely gather the data and activate a speciﬁc infrastructure and set of technologies\
    \ to further\nsend it to a sink, and a bi-directional WSN platform, where the\
    \ sensors are expected to be\nable to act according to control messages received\
    \ from a sink. In the latter case, the sink\nmight be a higher-level entity (e.g.,\
    \ a cloud-based server). While the general data-gathering\ntechniques are usually\
    \ agnostic of the control direction, additional constraints might be\nimposed.\
    \ Delay of the responses, latency, BW usage efﬁciency, security, and privacy are\n\
    some of the demands to consider. Another example of a bi-directional platform\
    \ can be\nseen in social sensor clouds (SSC), which connect a social network with\
    \ a sensor network\nvia a cloud infrastructure. See, for example, Zhu et al. [44],\
    \ which presents a scenario of a\nsmart village and provides discussion on various\
    \ aspects including green planning, energy\nconcerns, and speed of data gathering\
    \ and sharing. In Dinh and Kim [45], an on-demand\nWSN platform is designed. The\
    \ authors suggest a data-gathering protocol that addresses\nbandwidth consumption\
    \ and delivery latency and minimizes the number of requests\nto save resources.\
    \ An infrastructure where sensors form groups belonging to private\nowners constitutes\
    \ a special case. This may be the case in a smart city environment; this\nmeans\
    \ that privacy and/or security considerations should be prioritized. This is the\
    \ topic\naddressed by Zhu et al. [46]. The authors provide a trust-assisted cloud\
    \ for WSN but have\nthroughput issues in mind. Kuo et al. [47] suggest a WSN-based\
    \ IoT platform that provides\na reliable connection between sensors in the ﬁeld\
    \ and the database on the Internet. The\nproposed platform is based on the IEEE\
    \ 802.15.4e time-slotted channel-hopping protocol\nwith resource-constrained devices\
    \ supporting heterogeneous applications. The paper\nsuggests a scheme that compensates\
    \ the clock drift for every timeslot to maintain the clock\nsynchronization required\
    \ for the time-slotted channel-hopping protocol.\nEdge computing, as discussed\
    \ by Satyanarayanan [48], allows distributing the data\ngathering burden across\
    \ multiple cloudlets, which might be highly beneﬁcial for large\nWSN. This platform\
    \ paradigm aims to improve many important aspects: reduced latency\nof data delivery,\
    \ increased bandwidth, scalability, resilience to possible cloud outages,\nand\
    \ privacy control. However, the platform presumes an initial capital investment\
    \ and\nlater maintenance.\nA virtual sensor network was proposed by Abdelwahab\
    \ et al. [49]. Once a user-\ninitiated sensing request is dispatched to a cloud,\
    \ a suitable set of sensors is found for\nthe task. The decision is made according\
    \ to the cost function, which depends on the\nspeciﬁc (e.g., monetary) cost of\
    \ using sensors from the designated set, the beneﬁt that\ncan be received from\
    \ using these sensors, and their effectiveness in distances and delays\n(calculated,\
    \ e.g., in number of hops from sensor to a sink/gateway), also expressed as\n\
    virtual links. The cost might be customized, while a general virtualization problem\
    \ is\nformulated and the algorithm is provided.\nIntegration of unmanned aerial\
    \ vehicles (UAVs) and WSN for crop monitoring in\nprecision agriculture is described\
    \ by Popescu et al. [50]. The authors suggest a down-up\nscheme, where the collected\
    \ data is hierarchically processed from the ground level to the\ncluster head\
    \ (CH) level, then collected by the UAV level and ﬁnally delivered to the cloud\n\
    for analysis and possible feedback. Particular emphasis is put on outlying measurements\n\
    from speciﬁc sensors, as they can indicate either a possible sensor failure or\
    \ an upcoming\nunusual event inside the agricultural ﬁeld. The measured data were\
    \ processed through a\nconsensus algorithm. Concurrently, it suppressed outlier\
    \ values left for further examination\nfor the cloud-based analysis. In addition,\
    \ this study focused on the UAV trajectory planning\nto collect the data observed\
    \ by the WSN. Actual deployment with several tens of sensors\nand several CHs\
    \ is provided and analyzed. Note that we dedicate Section 5.4 to data\ngathering\
    \ assisted by a mobile unit.\nSensors 2022, 22, 2650\n9 of 44\nAn implementation\
    \ of a ubiquitous consumer data service for transmitting short mes-\nsages to\
    \ any computing platform is provided by Datta et al. [51]. The authors demonstrate\n\
    a data cycle model that allows any device with sensor(s) to report data encoded\
    \ in short\nmessages. The raw data reaches a central or distributed computing\
    \ platform, where it\nundergoes transformation and evolves into rich and structured\
    \ valuable information for\nhigher-layer applications. The proposed data cycle\
    \ model and DataTweet architecture are\naimed at smart city and large-scale crowd-sensing-based\
    \ IoT scenarios.\n2.4. Application-Oriented Network Architecture\nWe continue\
    \ by covering special types of WSN platforms for data gathering and\nspecialized\
    \ application-driven architecture types. Ayele et al. [52] suggest an IoT network\n\
    architecture for wildlife monitoring systems (WMS) for scenarios in which animals\
    \ exhibit\nsparse mobility, which results in sporadic wireless links. In addition,\
    \ they suggest a\ndata forwarding enhancement that adopts the ﬂood-store-carry-and-forward\
    \ paradigm\nsuggested in the seminal ZebraNet study by Juang et al. [53], in which\
    \ in order to send data\nto the sink, the nodes disseminate it among themselves\
    \ until it reaches the sink. Speciﬁcally,\neach node stores the data needing to\
    \ be conveyed, waits for connectivity with other nodes,\nand distributes the data\
    \ to them, and they repeat the same process. Accordingly, the data is\nspread\
    \ throughout the entire network (i.e., ﬂooding) and will eventually be received\
    \ by the\nsink. The authors in [52] suggest leveraging locally available routing\
    \ parameters to improve\nopportunistic data forwarding algorithms by managing\
    \ the data replication decision.\nSaleh et al. [54] suggest extending the lifetime\
    \ of a wireless sensor network used in\nmobile healthcare applications by increasing\
    \ the number of bits transmitted per symbol, and\nspeciﬁcally to rely on a quaternary\
    \ interconnect scheme in which each transmitted symbol\nmodulates two bits. A\
    \ complementary neural network, static RAM-based architecture is\nsuggested to\
    \ reduce energy consumption in storage and transmissions during the data\ndissemination\
    \ process. A WSN dedicated to home deployment for elderly healthcare and\nearly\
    \ health emergency alarm is discussed by Alsina-Pagès et al. [55]. The authors\
    \ ﬁrst raise\nprivacy concerns related to the monitoring, and accordingly, advocate\
    \ that only sound-\nbased surveillance aimed to merely indicate alarming situations\
    \ is appropriate. In order\nto further conform to the privacy demands, they focus\
    \ on distributed architecture (rather\nthan on a centralized one), where each\
    \ of the WSN sensors sends encrypted identiﬁers of\ntheir measurement. The identiﬁcation\
    \ of events is built on feature extraction. This is done\non the frequency domain\
    \ by ﬁrst dividing the incoming signal into blocks with Hamming\nsliding window,\
    \ then transforming into the frequency domain using Discrete Fourier\nTransform\
    \ (DFT) to evaluate the contribution of every band of the spectrum. The ﬁnal\n\
    coefﬁcients are obtained after Discrete Cosine Transform (DCT). The conclusive\
    \ parts of the\nproposed algorithm classify the coefﬁcients, feeding them into\
    \ Support Vector Machines\nwhich classiﬁes the estimated audio event. The authors\
    \ assert that the classiﬁcation results\ncould be further improved by incorporating\
    \ a deep artiﬁcial neural network (ANN) into\ntheir system.\nIn AbeBer et al.\
    \ [56], a similar method was implemented for urban noise monitoring.\nNamely,\
    \ while STFT was utilized for the noise preprocessing, the classiﬁcation of noise\n\
    levels and events was performed by convolutional neural networks (CNNs). The authors\n\
    used several previously published networks; see references therein. Similar methods\
    \ for\nnoise monitoring WSN were introduced by Siamwala et al. [57]. The frequency-domain\n\
    analysis was performed. Then, classiﬁcation by statistical methods was accomplished\n\
    (Gaussian mixture model was used). In addition, the authors in [57] provide an\
    \ elaborate\nWSN architecture, where energy-harvesting solar panels augment the\
    \ sensors’ lifetime and\nthe sensors’ state-of-charge is transmitted and tracked\
    \ by central, more powerful nodes.\n3. Compressed Sensing\nMany data-gathering\
    \ applications rely on numerous self-powered smart devices to\ncollect real-time\
    \ data and convey it via a wireless medium to a central entity or entities\nSensors\
    \ 2022, 22, 2650\n10 of 44\n(e.g., the cloud) to further process it and act upon\
    \ it. Such devices are expected to perform\ntwo basic operations—sensing and wireless\
    \ connectivity. Two important hindering aspects\nthat derive from these operations\
    \ inﬂuence the performance and need to be considered\nare: (i) energy consumption\
    \ associated with these two operations, especially when many of\nthese devices\
    \ are typically simple with limited computation abilities and battery lifetime\n\
    (ii) airtime utilization, which can also degrade the performance causing high\
    \ delays, jitter,\nbattery consumption, etc. Accordingly, one of the main challenges\
    \ in combating these\nlimitations is reducing the report payload, which affects\
    \ each report’s transmission time\nand channel utilization. Reducing the payload\
    \ of the sensed data can be accomplished at\ndifferent levels; it can be done\
    \ in the sensing stage by reducing the size of the sensed data, as\nwell as in\
    \ the report preparing stage by compressing the report size, and in the transmission\n\
    stage, by selecting which devices need to send reports, thus limiting redundant\
    \ information.\nWhen the reports need to travel multiple hops before reaching\
    \ their destination, this can\nbe done at the relay stage by pruning, unifying,\
    \ and compressing reports. In the sequel,\nwe discuss Compressed Sensing (CS).\
    \ This novel paradigm can reduce report payload at\nseveral levels mentioned above,\
    \ hence lowering the sensing operation’s transmission time\nand energy consumption.\n\
    Compressed sensing is a signal-processing technique that is most advantageous\
    \ when\nthe subject signal is sparse in some domain, such that a minimal non-zero\
    \ vector of coefﬁ-\ncients can represent it. The signal sparsity enables a high-quality\
    \ reconstruction, which is\nattained by ﬁnding the solution to an under-determined\
    \ linear system of equations with\nthe smallest possible number of non-zero values.\
    \ Thus, a convex minimization problem\nneeds to be solved to perform the recovery.\
    \ Note that the CS technique performs non-\nuniform sampling of the data signal\
    \ with an average sample rate usually smaller than\nthe minimal rate mandated\
    \ by the Nyquist–Shannon sampling theorem. A detailed view\nof the technique can\
    \ be found in Balouchestani et al. [58] and Donoho [59]. Various net-\nworking\
    \ domains can utilize compressed sensing, for example, Feizi et al. [60] depict\
    \ some\napplications of CS over networks and elucidate the connection between\
    \ CS and traditional\ninformation-theoretic techniques in source coding and channel\
    \ coding. Particularly, CS is\nhighly suitable for sensed data gathering in wireless\
    \ sensor networks (e.g., physical phe-\nnomena or a scenery), as it can leverage\
    \ the expected high spatial and temporal correlation\nbetween sensing reports\
    \ sent by neighboring sensors at different times in order to acquire\nthe CS paradigm’s\
    \ desired sparsity. In the following, we review several such data-gathering\n\
    schemes that utilize CS.\nLuo et al. [61,62] consider a densely deployed monitoring\
    \ sensor network in which\nreports traverse multiple hops before reaching their\
    \ destination, a sink. These studies\nrely on the concept that sensors’ readings\
    \ are spatially correlated; hence, there exists a\ntransform domain in which the\
    \ sensed signals can be sparsely represented. Both propose\na compressive data-gathering\
    \ (CDG) procedure in which sensors distributively encode\ntheir reports by projecting\
    \ them on a random space basis using random coefﬁcients. These\nencoded reports\
    \ can be decoded at the sink using compressive sensing techniques. Specif-\nically,\
    \ CDG is designed for multi-hop networks where messages need to travel multiple\n\
    hops before reaching their destination. The sampling process that characterizes\
    \ the CS\ncompression process is performed individually at each sensor by simple\
    \ multiplications\nand additions. Particularly, CDG suggests that rather than\
    \ forwarding individual sensor\nreadings, each sensor uses each of its reports\
    \ (measurements) to construct and send M\ndifferent messages, each comprising\
    \ a weighted sum of the sensor’s own report with other\nsensors’ reports traversing\
    \ it (relaying). Formally, denote by vector d = [d1, d2, . . . , dN]T\nthe measurements\
    \ (readings) obtained by all the sensors, where N is the number of nodes in\n\
    the WSN and di denotes the measurement (reading) obtained by sensor si. The sink\
    \ obtains\nM messages (weighted sums) represented by the vector y = Φd = φ1d1,\
    \ φ2d2, . . . , φNdN,\nwhere Φ is an M × N (M << N) matrix comprising the series\
    \ of coefﬁcients generated\nby the sensors, and in particular, φi is the i-th\
    \ column vector of Φ, which denotes the\nrandom coefﬁcients selected by sensor\
    \ i. Luo et al. [61] suggest that the measurement\nSensors 2022, 22, 2650\n11\
    \ of 44\nmatrix (coefﬁcients matrix) Φ should be a full random matrix with its\
    \ entries being i.i.d.\nGaussian random numbers drawn according to N (0, 1\nM).\
    \ The paper suggests that each\nweighted sum coefﬁcient be chosen pseudo-randomly\
    \ based on each sensor’s ID in order\nto avoid the burden and high overhead required\
    \ to collect these coefﬁcients by the sink\nif they are chosen randomly. Ref.\
    \ [62] extends the random coefﬁcient selection suggested\nin [61] to an only partly\
    \ random matrix in which the entries of a sub-matrix are still drawn\naccording\
    \ to N (0, 1\nM). Yet, for the rest of the matrix, two options are suggested,\
    \ either an\nupper triangular matrix with non-zero entries drawn according to\
    \ N (0, 1\nM), or the identity\nmatrix. CDG exploits the compressive sampling\
    \ theory and shows that when the sensor\nreadings are compressible, the sink will\
    \ be able to accurately recover the reports even when\nthe number of weighted\
    \ sums (messages) each sensor generates for each report (M) is\nmuch lower than\
    \ the number of reporting sensors (N). For example, on a route comprising\nN sensors,\
    \ the sink needs to collect only M << N messages to encode the information sent\n\
    by all the N sensors.\nSeveral studies further explore the sparsity of the sensed\
    \ signal and its projection\nmatrix, as well as the number of messages (M) that\
    \ should be delivered to the sink. For\nexample, Wang et al. [63] argue that most\
    \ natural signals are nonstationary and ordinarily\nvariable in the temporal and\
    \ spatial domains. In CS, these directly inﬂuence the recon-\nstruction process\
    \ and the number of required measurements; consequently, setting a ﬁxed\nnumber\
    \ of measurements with a ﬁxed transform basis (coefﬁcient matrix Φ) can result\n\
    in poor performance (inaccurate measurement reconstruction). Accordingly, Ref.\
    \ [63]\nsuggests an adaptive data-gathering scheme based on CS, which utilizes\
    \ an autoregressive\n(AR) model to exploit the local spatial correlation between\
    \ sensed data of neighboring\nsensor nodes. The suggested reconstruction scheme\
    \ adapts to the variation of sensed data\nby adjusting the AR parameters. The\
    \ number of measurements is adjusted adaptively\nwith the sensed data by evaluating\
    \ the recovery result and approximating the number of\nmeasurements required to\
    \ satisfy the accuracy demand.\nTo reduce the transmission overhead, Xu et al.\
    \ [64] propose the compressed sparse\nfunction (CSF) scheme. The basic concept\
    \ of CSF is, rather than encode the sensed data\nby projecting it on a basis on\
    \ which it can be represented sparsely, as in typical CS-based\nschemes, to compress\
    \ the sensed data in the form of sparse functions, which are sent to the\nsource.\
    \ The source can recover the function using techniques from polynomial approxi-\n\
    mation/interpolation theory and use them to compute data values that were not\
    \ reported.\nSpeciﬁcally, CSF ﬁnds a function that maps the sensors’ identiﬁers\
    \ and their readings, which\ncan be expressed in a very sparse way, and only communicates\
    \ this function to the sink.\nAfter the sink recovers the function, it can recover\
    \ all the N sensor readings. Xu et al. [64]\nshow that the CSF approach can provide\
    \ good recovery accuracy (better than the CDG\nscheme suggested by [61]) while\
    \ substantially reducing the message overhead (mainly in\ntree-structured networks).\
    \ Li et al. [65] present a general CS framework for WSNs and IoT\nand show how\
    \ the proposed framework can be utilized to reconstruct the compressible\ninformation.\
    \ The suggested framework comprises three phases: (i) information sensing\nto\
    \ detect and compressively sample event signals; (ii) compressed sampling, in\
    \ which the\nsystem samples information traversing the networks; and (iii) reconstruction\
    \ algorithms, in\nwhich the system accurately reconstructs the original signal\
    \ from the compressed samples.\nDifferent studies tackle the sampling issue and\
    \ suggest different approaches to reduce\nthe number of reports sent such that\
    \ only a subset of the sensors sense the object or\nphenomenon at a time. Several\
    \ studies explore how sensed data is conveyed to the sink\nwith the insight that\
    \ the compression is at least attained along the path to the sink, and is\ntherefore\
    \ affected by it. For example, Dhanapala et al. [66] show that a random-walk-based\n\
    sampling, rather than the conventional uniform-sampling-based CS for function\
    \ recovery,\ncan be used for phenomena awareness either at a sink or at other\
    \ sensors without a sink,\nwith minimal additional sampling. As the distribution\
    \ of the samples has a signiﬁcant effect\non the recovery, Ref. [66] suggests\
    \ an upper bound for the probability of successful recovery\nwith a given error\
    \ percentage. The derived bound provides an approximate number of\nSensors 2022,\
    \ 22, 2650\n12 of 44\nsamples required to recover a function under a selected\
    \ basis and a sampling scheme.\nZheng et al. [67] further argue that random walk\
    \ provides a more practical approach for\nthe data-gathering application in WSNs\
    \ and explores the sparsity of collecting non-uniform\nmeasurements while sampling\
    \ along multiple random paths. The paper suggests that\nthe M × N measurement\
    \ matrix will be characterized by M independent random walks.\nSpeciﬁcally, each\
    \ of the M matrix rows corresponds to the set of vertices visited by the\nrespective\
    \ random walk. The paper analyzes the required number of random walks (M)\nand\
    \ their corresponding lengths (how many entries on each row are non-zero) under\
    \ the\nproposed random walk algorithm.\nZheng et al. [68] suggest a cluster-based\
    \ data-gathering mechanism, in which the\nterrain is divided into cells; in each\
    \ cell, a node is randomly selected as the cell head,\nwhich collects the data\
    \ from the cell members and forwards it to the sink. Zheng et al. [68]\nsuggest\
    \ two forwarding mechanisms, one relying on centrally deﬁned tree-based for-\n\
    warding, and another that is a gossip-based approach. The projection process is\
    \ similar\nto Luo et al. [61,62], being based on random coefﬁcients. Another clustering-based\
    \ hi-\nerarchical data aggregation protocol that relies on CS, termed HDACS, is\
    \ suggested by\nXu et al. [69]. Speciﬁcally, HDACS constructs a multilevel hierarchical\
    \ structure and adap-\ntively sets multiple compression thresholds based on cluster\
    \ sizes at different levels of the\ndata aggregation tree to optimize the amount\
    \ of transmitted data. The encoding procedure\nis adapted from [62], where each\
    \ cluster-head recovers (decodes) all received messages\nfrom its descendants\
    \ (retrieves the original data) before compressing and sending it to its\nparent\
    \ cluster-head.\nMotivated by reducing power consumption, Lan and Wei [70] also\
    \ suggest a\ncompressibility-based clustering algorithm for hierarchical compressive\
    \ data gathering. In\nthis study, the network is decomposed into a logical chain,\
    \ and sensor nodes are grouped\nbased on the compressibility of their readings\
    \ instead of by a random clustering approach.\nThis clustering approach strives\
    \ to minimize the average compression ratio of all clusters by\ngreedily selecting\
    \ the set of nodes based on the compression ratio. It then tries to maximize\n\
    the number of compressible clusters so as to determine the suitable transmission\
    \ mode\nfor each cluster using a mode threshold that is a function of the number\
    \ of nodes and the\nnumber of hops from a cluster-head to a sink.\nTo reduce the\
    \ number of sensors involved in each CS measurement, Wu et al. [71]\npropose a\
    \ sparsest random scheduling scheme for compressive data gathering in large-\n\
    scale wireless sensor networks (WSNs), leveraging the spatial-temporal properties\
    \ in the\nsensory data. The central theme of this study is that the measurement\
    \ matrix is designed\nbased on the representation basis and sensory data and according\
    \ to the sensor network\nrequirements rather than the network environment. By\
    \ combining compressed sensing\nand network coding in the data-gathering scheme,\
    \ Yin et al. [72] introduce a multi-hop\ntopology in which the sink node adaptively\
    \ adjusts the measurement formation according\nto the reconstruction of received\
    \ measurements at each data-gathering epoch. The sink\nnode dictates the data\
    \ aggregation performed to balance the energy consumption among\nsensor nodes.\n\
    Xu et al. [73] exploit the CS paradigm for network tomography. Speciﬁcally, Ref.\
    \ [73]\nleverages the fact that, typically, only a small fraction of network entities\
    \ such as links or\nnodes are responsible for anomalies or degradation in network\
    \ performance, as a limited\nnumber of congested links can be responsible for\
    \ signiﬁcant delays or high packet drop\nrates, and suggests utilizing CS theory\
    \ in order to identify these few entities based on end-\nto-end measurements.\
    \ Zheng et al. [74] provide an analysis of the capacity and delay of\ndata gathering\
    \ with compressive sensing in wireless sensor networks. The paper considers\n\
    a random topology where sensor nodes are randomly deployed in a region, for both\n\
    single-sink and multi-sink scenarios, and characterizes the capacity and delay\
    \ performance\nimprovement that the CS paradigm can achieve for data gathering.\
    \ In particular, for\nthe single sink, a simple routing scheme for data gathering\
    \ with CS is suggested, and\na tight capacity in the order sense is presented.\
    \ In particular, the suggested routing\nSensors 2022, 22, 2650\n13 of 44\nscheme\
    \ with pipelining scheduling algorithm for data gathering shows that the proposed\n\
    single-sink scheme can achieve a capacity gain of Θ( n\nM) over the baseline transmission\n\
    scheme, and the delay can be reduced by a factor of Θ(\n√\nnlogn\nM\n), where\
    \ M is the number\nof random projections required for reconstructing a snapshot,\
    \ and n is the number of\nrandomly deployed nodes. For the multi-sink case, their\
    \ architecture shows that the per-\nsession capacity of data gathering with CS\
    \ is Θ(\nn√nW\nMnd\n√\nnslogn), and the per-session delay is\nΘ(M\nq\nn\nlogn),\
    \ where W is the data rate. The number of sinks present in the network is nd,\n\
    and the number of randomly selected source nodes is ns. They validate the theoretical\n\
    results with simulations for the scaling laws of the capacity in both single-sink\
    \ and multi-\nsink networks.\n4. Medium Access Control (MAC)\nNext, we move to\
    \ the Data-Link layer and speciﬁcally to the medium access control\n(MAC) mechanism,\
    \ which highly affects the performance of data gathering protocols, as\nit inﬂuences\
    \ several performance aspects, such as reliability, latency, channel utilization,\n\
    power utilization (which impact the lifespan of a sensor in particular and the\
    \ network in\ngeneral), etc. Even though many access protocols were suggested\
    \ over the years for shared-\nchannel networks, wired and wireless, due to their\
    \ unique properties and requirements,\nextensive research has been conducted on\
    \ MAC protocols targeted to WSN. Many WSN\nMAC protocols were designed to comply\
    \ with various trafﬁc patterns. Accordingly, in the\nsequel, we provide a short\
    \ WSN-MAC protocol overview for ones that can support yet\nare not necessarily\
    \ particular to data-gathering. We review a fraction of the vast literature\n\
    on the topic and the numerous MAC protocols devised over the years. Figure 3 depicts\
    \ a\nschematic partition of the papers discussed throughout this section according\
    \ to the main\nMAC classes.\nMAC\nSection 4\nSynchronous \nTransmitter-Initiated\
    \ \nReceiver-Initiated \nAsynchronous \nOthers\nSection 4.2\nDuty-Cycle\nSection\
    \ 4.1\nFigure 3. Schematic description highlighting the main MAC classes covered\
    \ in the section.\nEnergy consumption is one of the main concerns of WSN, and\
    \ as previously explained,\nit needs to be considered in the design of protocols\
    \ and algorithms in all the layers of the\nprotocol stack. The highest energy\
    \ consumer of a sensor or an IoT device is its transceiver,\nwhich consumes energy\
    \ regardless of whether it is transmitting or only awake listening to\nongoing\
    \ trafﬁc (e.g., [75]). One of the more prevalent solutions to save power is to\
    \ embrace\na duty-cycle mechanism in which the device is asleep most of the time\
    \ (its transceiver is in\nlow power mode), and is awake for transmitting or receiving\
    \ data only a small fraction\nof the time. Another important aspect of wireless\
    \ sensor networks (WSN) is channel\nutilization, that is, in a typical WSN, when\
    \ multiple devices are trying to send reports\nsimultaneously, air time is a crucial\
    \ network resource. Particularly when the network is\nSensors 2022, 22, 2650\n\
    14 of 44\ndense with multiple devices in the same neighborhood, issues such as\
    \ coordinating between\nthe users to avoid collisions and preventing users from\
    \ occupying the channel for long\ntime intervals are fundamental. Note that such\
    \ issues can highly affect the performance in\na dense network topology even when\
    \ reports are not frequent. Accordingly, utilizing the\nchannel (air time) efﬁciently\
    \ is a crucial component for any such system’s operation and\nperformance. These\
    \ two highly vital aspects justify the signiﬁcance given to the design of\nmedium\
    \ access control (MAC) protocols that are particular to WSNs. Numerous protocols\n\
    have been suggested to cope with different WSN objectives and demands (e.g., [76,77]).\n\
    This paper focuses on MAC protocols for WSNs, particularly on duty-cycled-based\
    \ ones.\n4.1. Duty-Cycle MAC Protocols\nTraditionally, duty-cycle MAC protocols\
    \ can be classiﬁed as either synchronous or\nasynchronous. In synchronous protocols\
    \ the awake time interval is synchronized such that\nall devices are awake (or\
    \ asleep) at the same time intervals (e.g., S-MAC [78], T-MAC [79]).\nSince the\
    \ awake time intervals are quite limited, they can be highly congested and prone\n\
    to collisions. Several synchronous protocols have devised mechanisms to attenuate\
    \ this\ncongestion and to allow more devices to transmit in each cycle, for example,\
    \ DW-MAC [80],\nwhich allocates the awake time for transmission reservations that\
    \ will be executed during\nthe sleep interval.\nIn asynchronous protocols, each\
    \ device has its own wake-up schedule. Accordingly,\nthe main challenge is setting\
    \ a rendezvous time when both the sender and the receiver are\nawake and devising\
    \ a signaling mechanism that informs both that they are awake and can\ncommunicate.\
    \ Asynchronous MAC protocols can further be divided into two categories,\ntransmitter-\
    \ or receiver-initiated. In transmitter-initiated protocols, the transmitter initiates\n\
    the transmission by capturing the channel waiting for its designated receiver\
    \ to wake\nup. For instance, in B-MAC [81], the transmitter transmits a long preamble\
    \ capturing the\nchannel prior to the data transmission, waiting for its intended\
    \ receiver to wake up and\nreply. In X-MAC [82], the transmitter transmits a sequence\
    \ of short preambles allowing\nthe intended receiver to interrupt, notifying the\
    \ receiver that it is awake. In WiseMAC [83],\nthe transmitter learns the wake-up\
    \ time of its intended receiver and starts the preamble\ntransmission just prior\
    \ to this wake-up time.\nThe second approach, the receiver-initiated paradigm,\
    \ relies on the receiver, whenever\nawake and ready to receive data, to initiate\
    \ the data exchange. The basic receiver-initiated\nMAC concept was introduced\
    \ in RI-MAC [84], in which whenever the receiver wakes up,\nit transmits a predeﬁned\
    \ preamble, signaling to its potential transmitters that it is awake\nand ready\
    \ to receive data. Several protocols took up the RI-MAC paradigm and suggested\n\
    modiﬁcations and enhancements. Some protocols strived to reduce the energy consumed\n\
    while a sender stays awake, waiting for its intended receiver to wake up. For\
    \ instance,\nPW-MAC [85] and AP-MAC [86] suggested that each transmitter will\
    \ learn its receiver’s\nexpected wake-up time, and instead of staying awake waiting\
    \ for its designated receiver to\nwake up, will wake up just before its intended\
    \ receiver’s wake-up instance.\nAnother receiver-initiated enhancement is suggested\
    \ by A-MAC [87], which aims to\nreduce the time in which a receiver and, consequently,\
    \ its potential transmitters stay awake,\nby trying to determine whether there\
    \ are pending packets for transmission and if it needs\nto stay awake or if it\
    \ can go back to sleep after probing the channel. The enhancement\nrelies on an\
    \ additional frame, termed “auto-ack”, sent by pending transmitters, which\nfollows\
    \ the receiver’s probe packet and proceeds with the data transmission. The “auto-ack”\n\
    frame is such that the receiver can decode a superposition of several such frames\
    \ and\ndetermine whether there is trafﬁc being sent. Even though the energy saved\
    \ per cycle is\nnegligible, the cumulative savings per day can be signiﬁcant due\
    \ to the numerous times\na device wakes up probing the channel. RIVER-MAC [88]\
    \ suggests two enhancements,\none aiming at reducing the awake time a sender is\
    \ waiting for its intended receiver to\nwake up, and one that aims at improving\
    \ the RI-MAC collision resolution mechanism by\nletting an active receiver keep\
    \ controlling the channel after invoking the collision resolution\nSensors 2022,\
    \ 22, 2650\n15 of 44\nmechanism, and speciﬁcally during the silent backoff interval.\
    \ MAR-RiMAC [89] suggested\nan amendment to the receiver-initiated approach, and\
    \ in particular RI-MAC, to cope with\nthe perpetual collisions, common in dense\
    \ networks and heavy trafﬁc loads, in which\nmany devices are trying to transmit\
    \ to the same entity (sink or relay). MAR-RiMAC relies\non a reservation-based\
    \ mechanism in which the reservations are short signals that can\nbe transmitted\
    \ simultaneously. After the designated receiver decodes the identity of the\n\
    devices, it sends a transmission request and polls them sequentially, with no\
    \ idle intervals.\nAs mentioned in Section 2, relying on EH requires adaptations\
    \ that typically relate\nto the harvested energy source. For example, how to balance\
    \ the harvested energy and\nthe energy consumption can be a crucial factor in\
    \ whether or not a scheme or protocol\ncan be adopted by a network that relies\
    \ on EH, and can be the primary factor impacting\ntheir performance. Adaptation\
    \ requirements to support EH-based sensors span the whole\nnetwork stack, including\
    \ the MAC sublayer. Adaptation of receiver-initiated duty-cycle\nMAC protocol\
    \ for energy-harvesting-powered wireless sensor networks, in which besides\nthe\
    \ usual MAC challenges, both transmitter and receiver need to have sufﬁcient power\
    \ for\nsuccessful transmission, is given by Liu et al. [90].\n4.2. MAC Protocols\
    \ for Other Setups\nNext, we review some MAC protocols and MAC adaptations for\
    \ various setups,\nsuch as multi-channel, multi-radio, busy-tone utilization,\
    \ or different from the duty-cycle\napproach. DURI-MAC [91] adopts the traditional\
    \ busy-tone scheme and allocates a sub-\nchannel for control such that while receiving\
    \ data on the data channel, a busy signal\nis transmitted on the control channel,\
    \ which notiﬁes neighboring nodes of the ongoing\ntransmission, and therefore\
    \ helps avoid interference from hidden terminals. EM-MAC [92]\nutilizes multiple\
    \ orthogonal radio channels and allows devices to dynamically select the\nchannels\
    \ for their transmissions based on the channel conditions they sense without the\n\
    utilization of a control channel. Accordingly, EM-MAC can avoid using channels\
    \ that are\ncurrently heavily loaded, inferior due to interference, or jammed.\
    \ Typically, the trafﬁc\nload sent by a node is spatially and temporally variable.\
    \ Different nodes need to send\ndifferent trafﬁc loads due to their tasks, topological\
    \ location, and the amount of trafﬁc they\nneed to relay. Furthermore, the same\
    \ node can experience different loads at different time\nintervals due to events\
    \ or requests triggering different trafﬁc loads. Accordingly, several\nstudies\
    \ have explored an adaptive duty-cycle approach. For example, Ye and Zhang [93]\n\
    have developed a reinforcement-learning-based self-adaptive sleep/wake-up scheduling\n\
    approach. In the proposed method, each node (device) divides the time into time-slots,\n\
    which are not necessarily synchronized between neighboring nodes. Each node decides\n\
    whether to sleep or wake up in each time slot, and while awake, it decides whether\
    \ to listen\nor transmit. The decision is based on its current situation and its\
    \ estimation of its neighbors’\nsituations and is attained via Q-learning.\nGamm\
    \ et al. [94] devise an alternative approach to duty-cycle, which utilizes two\n\
    radios: the primary radio transceiver and an additional wake-up radio (WuR). The\
    \ wake-up\nradio is a low-power receiver triggered by an external event and can\
    \ turn on the main\ntransceiver when required. Oller et al. [95] provide a detailed\
    \ characterization of a speciﬁc\nWuR, the SubCarrier Modulation WuR (SCM-WuR),\
    \ through physical experiments and\nmeasurements, evaluating it for different\
    \ performance metrics and comparing it to other\nwake-up radio-based systems.\
    \ The authors of [95] model and simulate their own designed\nWuR hardware platform,\
    \ which is compared to four widely employed MAC protocols for\nWSN under three\
    \ real-world network deployments [96]. Spenza et al. [97] further design\nand\
    \ prototype a very-low-power-consumption (<1.3 µW), high-sensitivity (up to −55\
    \ dBm),\nfast-reactivity (wake-up time of 130 µs), and selective-addressing wake-up\
    \ receiver (WRx)\nand describe its integration to a wireless sensor node. The\
    \ authors leverage their WRx and\npresent ALBA-WUR, a cross-layer solution for\
    \ data gathering in wireless sensing systems.\nSimilar to duty-cycled MAC protocols,\
    \ wake-up radio-based protocols also distinguish\nbetween transmitter-initiated\
    \ WuR (TI-WuR) protocols in which the transmitter wakes up\nSensors 2022, 22,\
    \ 2650\n16 of 44\nits potential receivers (e.g., [98,99]) vs. receiver-initiated\
    \ WuR (RI-WuR) that adopt the\nRI-MAC paradigm such that when a receiving node\
    \ is ready to collect data, it wakes up all\nthe nodes in its neighborhood by\
    \ broadcasting a wake-up call (e.g., [100,101]).\nAn energy-harvesting-based MAC\
    \ protocol for cognitive radio networks (CRNs) is\nsuggested by Hawa et al. [102],\
    \ in which the secondary users (SUs) utilize the transmis-\nsions by primary users\
    \ (PUs) to harvest energy. Accordingly, the suggested protocol\ninterlaces SUs’\
    \ data transmissions within these PUs’ transmission holes. The proposed\nenergy-harvesting/data-transmission\
    \ schedule considers the imbalance between the small\namount of energy collected\
    \ per PU’s transmission and the energy required by an SU\ndata transmission.\n\
    Next, we mention several WSN MAC protocols that were specially designed for\n\
    particular data-gathering setups in WSN and IoT networks, exploiting the special\
    \ associ-\nated attributes (e.g., that the trafﬁc patterns are always from sensors\
    \ to the sink, or that\nthere exists a set of predeﬁned messages that need to\
    \ be sent). Cohen et al. [103] design\nand analyze a data collection protocol\
    \ based on information theoretic principles. In the\nsuggested protocol, each\
    \ sensor needs to convey one out of a bank of known messages\nto a sink. The protocol\
    \ assumes a large population of sensors and devises a scheme in\nwhich a sink\
    \ (or relay) can simultaneously collect messages from up to K sensors, without\n\
    knowing in advance which sensors will transmit, and without requiring any synchroniza-\n\
    tion, coordination, or management overhead. D-3 [104] exploits the fact that the\
    \ trafﬁc in\ndata-gathering applications ﬂows in a certain direction (toward a\
    \ single or multiple sinks)\nto devise a wake-up that can signiﬁcantly reduce\
    \ end-to-end delay. Speciﬁcally, D-3 lays\nout the awake schedule of communicating\
    \ nodes such that a packet can be forwarded\ntoward its destination sequentially,\
    \ without the need for a node to wait for its next-hop\nrelay to wake up (i.e.,\
    \ the wake-up schedule is such that a relay wakes up in time to receive\na packet\
    \ just received by its predecessor).\n5. Routing for Data Gathering in WSN\nWe\
    \ keep climbing the layers, and in this section we address issues related to the\n\
    Network layer. We start with a short review of WSN routing protocols. We note\
    \ that\nrouting-related aspects were also referred to in other sections of this\
    \ survey. We mainly\nfocus on the prominent and more recent protocols. We do not\
    \ provide a comprehensive\nreview of routing protocols in multihop WSNs and mainly\
    \ explore routing protocols\nsuitable for data gathering. Figure 4 provides a\
    \ schematic distribution of the discussed\npapers into main topics. As with the\
    \ schematic partition in the other sections, in order\nnot to have too many, the\
    \ topics are chosen such that the theme on each one encompasses\nseveral papers.\
    \ The papers’ partition is rough: some papers can appear in more than one\ntopic\
    \ while others are only related to the topic.\nWe start with general WSN settings\
    \ and then continue with routing protocols under\nenergy harvesting constraints.\
    \ Then we explore the utilization of network coding for data\ngathering, which\
    \ leverages the multi-hop routing, allowing relays (intermediate nodes)\nto code\
    \ the incoming packets before forwarding them toward the sink. We conclude this\n\
    section by examining a different paradigm. Rather than utilizing the traditional\
    \ approach of\nforwarding the sensed data via multiple relay nodes before reaching\
    \ the sink, this paradigm\nrelies on a Mobile Sink (MS) that traverses the network\
    \ and collects the sensed data from\nthe sensors it passes through.\n5.1. Common\
    \ WSN Routing Protocols for Data Gathering\nThe common setup for a data collection\
    \ network comprises a set of devices (e.g.,\nsensors) and one or multiple sinks\
    \ that collect the reports. In many such scenarios, the\nsensors are unevenly\
    \ dispersed over the terrain and in some cases can be mobile, can have\na different\
    \ distance to the sink(s), and the data needs to traverse multiple hops before\n\
    reaching the sink, in which commonly the sensors themselves serve as relays toward\n\
    the sink. Consequently, the performance experienced by different sensors (e.g.,\
    \ energy\nSensors 2022, 22, 2650\n17 of 44\nconsumption, latency, reliability)\
    \ can be markedly diverse. Various solutions, including\nenergy-aware routing,\
    \ compressed sensing, efﬁcient MAC novelties and architectural\ninnovations, have\
    \ been suggested to try to improve the overall performance and to balance\nits\
    \ variability; many are scattered throughout this survey under different subjects\
    \ (e.g.,\nSections 3, 4 and 6). In the sequel, we provide a brief review of routing\
    \ protocols for WSN\nin general and data gathering in particular.\nRouting\nSection\
    \ 5\nCluster-Based \nSection 5.1.1\nEnergy Harvesting \nBased\nSection 5.2\nWSN\
    \ Routing\nSection 5.1\nNetwork coding\nSection 5.3\nUAV Utilization\n(Mobile\
    \ Sink) \nSection 5.4\nRPL \nSection 5.1.3 \nOpportunistic \nSection 5.1.2\nCluster-Based\
    \ \nSection 5.2.1 \nMobile Charger \nSection 5.2.2 \nCluster-Based \nSection 5.4.2\n\
    Direct \nSection 5.4.1 \nFigure 4. Schematic partition of the papers discussed\
    \ in this section into the main routing topics\ncovered in the section.\n5.1.1.\
    \ Cluster-Based Routing Protocols\nA signiﬁcant milestone in WSN routing protocols\
    \ is the low-energy adaptive clustering\nhierarchy (LEACH) protocol [105]. The\
    \ basic LEACH protocol is an adaptive clustering-\nbased protocol that dynamically\
    \ selects sensor nodes as cluster-heads. Each cluster-head\naggregates data from\
    \ its cluster members and relays it to the sink. In order to distribute\nthe high\
    \ energy consumption imposed on cluster-heads between all the sensor nodes,\n\
    the cluster-heads are dynamically selected according to a predeﬁned probability\
    \ that\ndepends on the number of desired clusters. The resulting protocol causes\
    \ continuous\nclustering hierarchy reelection, which facilitates energy balancing.\
    \ The original version\npresented by Heinzelman et al. [105] considers a setup\
    \ in which all sensor nodes can\ndirectly communicate with the sink; hence, each\
    \ cluster-head can directly relay the collected\ninformation from its cluster\
    \ members to the sink. However, as described in the paper,\nLEACH can be easily\
    \ extended to a hierarchical cluster setup in which the cluster-head\nnodes of\
    \ each tier are also organized in clusters such that each cluster-head relays\
    \ its\naggregated data to its higher-layer cluster-head, and so on up to the top\
    \ layer of the\nhierarchy, at which point the data are sent to the sink.\nSince\
    \ its publication in 2000, numerous protocols have relied on LEACH’s clustering\n\
    paradigm, suggesting enhancements and improvements for various setups and require-\n\
    ments. For instance, EE-LEACH [106,107] aims at improving the energy efﬁciency\
    \ of\nLEACH by considering the sensor’s residual energy throughout the stages\
    \ of the proto-\ncol. Speciﬁcally, EE-LEACH assumes that node deployment is implemented\
    \ according\nto a two-dimensional Gaussian distribution. It forms clusters and\
    \ selects their respective\ncluster-heads based on the residual energy of neighboring\
    \ nodes. The relay nodes that\nforward the data aggregated by cluster-heads to\
    \ the sink are selected based on their residual\nenergy. A clustering procedure\
    \ based on recursive rectangular partitioning of the network\ngrid following the\
    \ k-d tree algorithm is demonstrated by Anzola et al. [108]. The authors\nadjust\
    \ a protocol that combines their clustering methods and report that it performs\
    \ better\nthan LEACH. Several surveys have summarized the successors of the LEACH\
    \ protocol\n(e.g., [107]).\nSensors 2022, 22, 2650\n18 of 44\nPEGASIS [109] was\
    \ designed to address the overhead resulting from the cluster\nformation in LEACH.\
    \ Speciﬁcally, PEGASIS replaces the clusters with a node-chain in which\neach\
    \ node receives the data from its predecessor and transmits it to its successor\
    \ in the chain.\nThe data is gathered while getting fused along the chain until\
    \ eventually, a designated\nnode transmits it to the sink. PEGASIS relies on nodes\
    \ having global knowledge of the\nnetwork and shows that a simple greedy algorithm\
    \ for the forwarding chain construction,\nin which nodes select their closest\
    \ neighbors as the next hops in the chain, is sufﬁcient to\nsigniﬁcantly reduce\
    \ energy consumption. Similar to LEACH, and in order to balance the\nenergy depletion\
    \ in the network, different nodes transmit the fused data to the sink on\neach\
    \ data-gathering round. P-LEACH [110] offers a hybrid between LEACH and PEGASIS\n\
    that relies on cluster formation where cluster-heads collect and forward trafﬁc.\
    \ Rather\nthan forward the trafﬁc directly to the sink, or create a hierarchical\
    \ cluster setup in which\ncluster-heads are also grouped into clusters with another\
    \ cluster-head, P-LEACH adopts\nchain-based forwarding such that the cluster-heads\
    \ are arranged in a chain along which\nthe collected data is forwarded, as suggested\
    \ by PEGASIS.\nSeveral LEACH enhancements have relied on bio-inspired algorithms.\
    \ For example,\nSiew et al. [111] utilize adaptive particle swarm optimization\
    \ (APSO). This widely used\nswarm intelligence method mimics swarming behavior\
    \ in bird ﬂocking and ﬁsh schooling\nto guide its members to search for globally\
    \ optimal solutions for cluster-head location\nselection. Tam et al. [112] extend\
    \ LEACH to a 3D setting by employing a method based on\nfuzzy clustering and particle\
    \ swarm optimization (PSO). Cui et al. [113] suggest a variant\nof the bat algorithm,\
    \ which simulates bat prey echolocation behavior, to optimize the\ncluster-head\
    \ selection for LEACH protocol. A routing path selection using an ant colony\n\
    optimization algorithm is presented by Jiang and Zheng [114]. Clustering by mimicking\n\
    groups of yellow goatﬁsh is discussed by Rodríguez et al. [115]. The authors claim\
    \ that\nthe presented meta-heuristic is more efﬁcient in avoiding local minima.\
    \ An extension of\nLEACH for an IoT-designated industrial environment is presented\
    \ by Karunanithy and\nVelusamy [116]. This work provides uniform CH selection,\
    \ uniform CH dispersion over\nthe industrial grid of IoT-based sensors, and tree-based\
    \ routing selection that promises to\nbe more energy efﬁcient than known counterparts.\
    \ The energy exploitation is claimed to be\nequal among nodes.\nMehmood et al.\
    \ [117] devise a dynamic-size cluster-based routing protocol for WSN\ncomprising\
    \ a large number of sensors that are spread over a large area (the paper suggests\n\
    pollution monitoring as a candidate application). The primary objective of the\
    \ presented\nscheme is to effectively select CHs to be responsible for the main\
    \ communication with BS\nand additionally deﬁned chief nodes (CNs). Speciﬁcally,\
    \ the sensor topology is divided\ninto groups, where CNs collect the updated energy\
    \ indications of other sensors within a\ngroup. There are also border nodes responsible\
    \ for communication between groups. If\ntheir energy value drops below a threshold,\
    \ the CNs can be reelected. The candidates for\nCNs and CHs are provided by an\
    \ artiﬁcial neural network (ANN), which takes as inputs\nremaining energy, neighboring\
    \ node count, the amount of outstanding data, signal-to-\nnoise ratio (SNR), distances\
    \ between nodes, CHs, CNs and the BS, trafﬁc load, and so\non. The simulations\
    \ show a better lifetime than other selected known protocols; hence,\nthe scheme\
    \ is a better ﬁt for pollution monitoring. Clustering and routing for a wind\n\
    turbine system monitored by WSN are introduced by Durairaj and Selvaraj [118].\
    \ The\ndiscussed environment is unique because sensors placed at wind turbines\
    \ can have their\nenergy replenished by the turbine itself; hence, these sensors\
    \ are always assumed to be\ncharged. However, the distances between turbines and\
    \ the BS are too large, and the\ngrid is augmented by ground sensors that relay\
    \ the measurements. In many cases, these\nground sensors have to act as CHs. The\
    \ authors propose system partitioning and clustering\nmethods that may be hierarchical\
    \ to speciﬁcally address this scenario. An interesting\nalgorithm that also employs\
    \ partitioning, by hierarchical grouping of sensors based on\nearly knowledge\
    \ of geographical transmission patterns in mobile WSN, is presented by\nShifrin\
    \ and Cidon [119].\nSensors 2022, 22, 2650\n19 of 44\n5.1.2. Opportunistic Routing\n\
    The opportunistic routing approach, which was designed for wireless networks,\
    \ dy-\nnamically chooses paths toward the destination on a per-transmission basis,\
    \ Biswas and\nMorris [120], Ye and Hua [121]. Opportunistic routing exploits the\
    \ broadcast nature of\nwireless communication jointly with the spatial diversity\
    \ of distributed nodes in a given\nroute such that multiple nodes overhear each\
    \ packet transmitted by a node. The node that\nreceives the packet successfully\
    \ and can serve as the best relay toward the destination (e.g.,\nclosest to the\
    \ destination) becomes the next transmitting node. Harnessing opportunistic\n\
    routing to duty-cycle MAC protocols encounters several obstacles. In synchronous\
    \ duty-\ncycle MAC protocols (Section 4), the short time duration in which all\
    \ nodes are awake (and\nspeciﬁcally, all the potential relays are awake and trying\
    \ to forward the same packet) can\nlead to artiﬁcial congestion and poor wake-time\
    \ utilization. In asynchronous duty-cycle\nMAC protocols, since not all nodes\
    \ are awake simultaneously, the use of overhearing, which\nopportunistic routing\
    \ relies on, is limited and requires adaptations such that the transmitter\nwill\
    \ transmit to multiple relays upon its wake-up (e.g., [122]) or delay its transmission,\n\
    choosing its relay opportunistically based on channel condition (e.g., [123]).\n\
    In a dense WSN, even under asynchronous duty-cycle MAC protocol, several potential\n\
    relays can be awake simultaneously, which poses additional challenges when utilizing\n\
    opportunistic routing. In addition to the relay selection problem—whether a transmitter\n\
    should wait for the best relay to wake up or compromise on a less preferable relay,\
    \ reducing\nits awake period and how long it should wait—it also encounters the\
    \ collision avoidance\nproblem between simultaneously awake nodes. Liu et al.\
    \ [124] suggest a slotted contention-\nbased scheme in which, following a probe\
    \ sent by the transmitter, the awakened potential\nrelays contend and transmit\
    \ feedback concerning the routing progress they can offer. The\ntransmitter selects\
    \ the best possible relay out of the ones that replied, taking into account\n\
    not only the metric chosen to evaluate the different relays, but also the waiting\
    \ time of\nthe link-layer transmissions. Under a similar set-up of dense asynchronous\
    \ duty-cycle\nMAC protocol with multiple potential relays awake simultaneously,\
    \ Hawbani et al. [125]\ntry to control the number of potential forwarders, which\
    \ inﬂuences both the transmitter\nwaiting time and the number of packet duplications.\
    \ The suggested solution relies on\na two-step mechanism. First, each transmitter\
    \ determines a candidate zone such that all\nnodes within the candidate zone are\
    \ potential forwarders. Second, the candidates within\nthe candidate zone are\
    \ prioritized based on a combination of metrics that considers residual\nenergy,\
    \ transmitting direction, distance, and link quality.\n5.1.3. Routing Protocol\
    \ for Low-Power and Lossy Networks (RPL)\nA routing protocol for low-power and\
    \ lossy networks (RPL) is a routing protocol\nthat was speciﬁcally designed for\
    \ networks composed of constrained nodes, which are\ninterconnected via unstable\
    \ and lossy links with relatively low packet delivery rates and\ntypically only\
    \ support low data rates (hence, low-power and lossy networks (LLNs)).\nSpeciﬁcally,\
    \ RPL is a distance-vector proactive routing protocol designed for IPv6 low-\n\
    power devices with limited energy, processing, and memory resources (Winter et\
    \ al. [126]).\nRPL constructs a tree routing topology termed the destination-oriented\
    \ directed acyclic\ngraph (DODAG), rooted at one or more sink nodes. The routing\
    \ tree (graph), along\nwhich the trafﬁc traverses, is constructed according to\
    \ an objective function (OF) that can\nutilize a set of metrics such as energy\
    \ consumption, latency, and hop count. The most\ncommon ones are OF0, which ﬁnds\
    \ the shortest path (the path with the minimal hop-count)\nto the sink (Thubert\
    \ et al. [127]), and minimum rank with hysteresis objective function\n(MRHOF),\
    \ which ﬁnds the routes that minimize the link cost associated with the routes\n\
    (Gnawali and Levis [128]). The cost is deﬁned as the latency metric allowing RPL\
    \ to ﬁnd\nstable minimum-latency paths from each node to the sink, or it can be\
    \ associated with the\nexpected transmission count (ETX) metric, which allows\
    \ RPL to ﬁnd the stable minimum-\nETX paths from the nodes to the sink (the default\
    \ metric). In order to achieve stability,\nMRHOF also ensures that a route is\
    \ changed (a node exchanges its preferred parent in\nSensors 2022, 22, 2650\n\
    20 of 44\nthe routing tree) only if the cost of the improved route is better than\
    \ the current route by\nat least a predeﬁned threshold. RPL is the de-facto IPv6-based\
    \ routing protocol for the\nIoT. Accordingly, several OFs and possible enhancements\
    \ have emerged during recent\nyears, and several performance evaluations and comparisons\
    \ have been presented. In the\nfollowing, we discuss some of these OFs.\nAbdel\
    \ Hakeem et al. [129] analyze the performance of RPL in collecting smart meter\n\
    readings over smart grid (SG) networks via Java-based simulations and IoT-LAB\
    \ testbed ex-\nperiments. Speciﬁcally, Ref. [129] evaluates the RPL performance\
    \ under the two prominent\nobjective functions Hop Count and ETX, in terms of\
    \ packet delivery ratio, network latency,\ncontrol trafﬁc overhead, and power\
    \ consumption. Barnawi et al. [130] utilize the Cooja\nnetwork simulator to examine\
    \ the performance of RPL under duty-cycle MAC protocol.\nSpeciﬁcally, Ref. [130]\
    \ simulates RPL over the classical XMAC protocol and its derivative\nContikiMac,\
    \ where, rather than using a long preamble waiting for the receiver to wake up,\n\
    the sender repeatedly sends the same packet until a link layer acknowledgment\
    \ is received.\nAs a baseline, Ref. [130] uses NullRDC, an always-awake node.\
    \ As expected, the results\nshow that NullRDC is better in terms of latency, while\
    \ ContikiMac outperforms the others\nin terms of power consumption. Al-Shargabi\
    \ and Aleswid [131] also utilize the Cooja\nnetwork simulator to evaluate which\
    \ OF is more suitable for a WSN in healthcare scenarios.\nOF0 and ETX are examined\
    \ in various network topologies, such as the grid and random\ntopology, under\
    \ diverse densities. They conclude that the OF0 is more efﬁcient with respect\n\
    to packet delivery ratio (PDR) and power consumption in the random topology setup.\n\
    Sousa et al. [132] propose an energy-efﬁcient and path-reliability-aware objective\n\
    function (ERAOF). The OF suggested by ERAOF linearly combines energy consumption\n\
    and link quality (in terms of ETX) routing metrics. Even though the selected routes\
    \ are\nnot optimal in either one of the objective metrics, they provide a balance\
    \ between energy\nefﬁciency and reliability. Rafea and Kadhim [133] suggest an\
    \ energy threshold RPL (ETRPL),\nwhich, in addition to the ETX metric, incorporates\
    \ in its objective function the remaining\nenergy of the preferred forwarding\
    \ (parent) node. ETRPL performance is evaluated via\nCooja simulator. Sharma et\
    \ al. [134] suggest another MRHOF-based objective function that\ntakes into account\
    \ three routing metrics: ETX, energy, and delay. Energy consumption,\nin order\
    \ to increase the lifespan of the network, is also considered by Sankar et al.\
    \ [135],\nwhich suggests cluster-tree-based routing protocol to maximize the lifetime\
    \ of IoT (CT-\nRPL). As the name suggests, CT-RPL is a cluster-based routing protocol\
    \ that involves three\nprocesses: cluster formation, cluster-head selection, and\
    \ route establishment. CT-RPL ﬁrst\nscans the nodes and group (cluster) nodes\
    \ whose Euclidean distance from their centroid\npoint is bounded, adding one node\
    \ at a time. Next, each cluster selects its cluster-head\n(CH), utilizing a game-theoretic\
    \ approach in which the node with the maximum payoff\n“p” value—which considers\
    \ parameters such as residual energy, sensing energy, receiving\nenergy, aggregation\
    \ energy, and transmission energy—is selected as the CH node for each\nround.\
    \ Finally, the route is established using the metrics residual energy ratio (RER),\
    \ queue\nutilization (QU), and expected transmission count (ETX).\nAnother RPL\
    \ enhancement termed weighted random forward RPL (WRF-RPL) is\nproposed by Acevedo\
    \ et al. [136]. WRF-RPL suggests a load balancing over RPL mechanism,\nwhich distributes\
    \ the trafﬁc between multiple transmission paths, trying to avoid one\npreferred\
    \ parent’s congestions. WRF-RPL OF relies on the composition of two metrics, the\n\
    remaining energy and the count of parent nodes, where the latter aims at prioritizing\
    \ parent\nnodes with more optional paths to the destination. Forwarding decisions\
    \ are probabilistic\naccording to the deﬁned metric, such that nodes with a higher\
    \ number of parents or hops\nare more likely to be selected than others. The authors\
    \ utilize the Cooja simulator for\nevaluation. Rojas et al. [137] leverage a wired\
    \ data center network labeling protocol to\nsuggest IoTorii, a routing protocol\
    \ for LLNs. IoTorii supports multiple paths between\nsender and receiver, and\
    \ requires fewer table entries and control messages, with similar\nperformance\
    \ compared to the standard RPL.\nSensors 2022, 22, 2650\n21 of 44\nMolnár [138]\
    \ provides a graph-theoretic solution to the general problem of QoS-\nconstrained\
    \ routing in WSN that relies on RPL. The authors stress the difference between\n\
    multi-objective optimization and multi-constrained problem setting. Vera-Pérez\
    \ et al. [139]\nexamine the integration of RPL to IEEE 802.15.4e with time-slotted\
    \ channel-hopping (TSCH)\nmedium access mechanism. In particular, Ref. [139] characterizes\
    \ the long deployment\ndelays required for such networks to become operational\
    \ and able to start exchanging data\nmessages. The article proposes an analytical\
    \ model that estimates the average time that the\nsynchronization process can\
    \ take for a new node to join a TSCH-based network, as well as\nan estimation\
    \ of the maximum time required for the formation of a complete network of\nthis\
    \ kind, and the additional time required to set the RPL-based routes. The paper\
    \ validates\nthe analytical model via simulations. A recent comprehensive survey\
    \ on routing protocols\nfor LLN networks in IoT (not exclusive to RPL) can be\
    \ found in [140].\n5.2. Data Aggregation Routing Protocols for Energy Harvesting\
    \ WSN\nAs discussed in Section 2, an alternative for relying on batteries as the\
    \ source of energy,\nwith their imposed constraints (e.g., size, replacement,\
    \ etc.), is to embrace energy-harvesting\n(EH) technology. However, as mentioned\
    \ earlier, relying on EH imposes different con-\nstraints and limitations. Such\
    \ constraints can make battery-reliant schemes impractical\nwhen devising data\
    \ collection procedures. When battery-reliant schemes are applied to\nEH-based\
    \ platforms, performance can be highly degraded. Speciﬁcally, relying on EH can\n\
    induce high diversity between the different nodes, as different nodes can have\
    \ different\nattributes, such as energy depletion and charging rates, which affect\
    \ the nodes’ availability;\nin addition, different nodes can have different roles,\
    \ such as different reporting rates or\ndifferent report importance, requiring\
    \ more energy usage, which eventually also affects the\nnodes’ availability. When\
    \ a sensor is expected to transmit or receive a report, it needs to\nhave sufﬁcient\
    \ energy to complete the transaction; therefore, reliance on EH needs to be\n\
    considered when designing a scheduling protocol. For example, a data collection\
    \ scheme\nthat relies on EH should adapt the report rate to energy availability;\
    \ it can compromise\nthe rate of less important reports coming from the sensors\
    \ to leave them sufﬁcient energy\nfor emergency reports. It can prioritize sensors\
    \ with more energy over those with lower\nenergy, especially when there is some\
    \ redundancy in the reports received by different\nsensors. This is especially\
    \ so when dealing with multi-hop routing, where many of the\nnodes serve as relays\
    \ and have the burden to stay awake longer, to receive and transmit\nmore, which\
    \ escalates the heterogeneity of the nodes and accentuates the difference in\n\
    importance between the different nodes. Furthermore, if on a single-hop network,\
    \ we\ncould rely on the receiver (sink) to have unlimited power (connected to\
    \ a power source), in\nmulti-hop topologies also, the receivers rely on EH; hence,\
    \ when scheduling a transmission,\nwe need to ensure that both transmitter and\
    \ receiver have sufﬁcient power to complete the\ntransaction. In the following,\
    \ we present several routing protocol adaptations for EH-WSN\nin the context of\
    \ data aggregation.\nThe typical setup considers that each node (sensor) encompasses\
    \ an energy har-\nvester and an energy storage device and is solely powered by\
    \ the renewable energy\navailable to it by its energy storage device. A multi-hop\
    \ topology is considered such\nthat the data from many of the sensors need to\
    \ traverse multiple links before reaching the\nsink. Jeong et al. [141] propose\
    \ an adaptive data aggregation scheme for energy-harvesting\nWSNs. The suggested\
    \ scheme relies on two residual-energy thresholds, lower and upper.\nEach node\
    \ periodically estimates its residual energy level to determine whether or not\
    \ to\ntransmit data. When the node’s residual energy is either above the upper\
    \ threshold or\nbelow the lower threshold, the node transmits its aggregated data.\
    \ If its energy is below\nthe lower threshold, the node enters energy-saving mode\
    \ after transmitting the data. Its\nradio is turned off, and it waits to regain\
    \ sufﬁcient energy before turning its radio back\non. In normal operation mode,\
    \ where the residual energy is between the two thresholds,\nthe node only aggregates\
    \ data received from other nodes and collects its own sensed data.\nIf a node’s\
    \ aggregated data in normal mode exceeds its storage limit, the node transmits\n\
    Sensors 2022, 22, 2650\n22 of 44\nthe data regardless of its residual energy.\
    \ While this scheme is clear and straightforward\nto implement, it lacks latency\
    \ evaluation and a discussion about rendezvous between a\ntransmitter and a receiver.\n\
    Chen et al. [142] experimentally show that in energy-harvesting-based wireless\
    \ sensor\nnetworks (EH-WSNs), the required nodes’ charging time to be ready to\
    \ receive or send a\npacket is much greater than the time required for the contention\
    \ resolution mechanism and\ndominates the data aggregation latency. In addition\
    \ to the common collision deﬁnitions, the\npaper deﬁnes an “energy-collision”,\
    \ which occurs due to battery level constraint and not\ndue to simultaneous transmissions.\
    \ Speciﬁcally, energy-collision occurs when a transmitter-\nreceiver tuple is\
    \ scheduled for transmission, but the transmission cannot take place because\n\
    at least one of the two nodes has insufﬁcient energy to transmit or receive the\
    \ packet due\nto recent activity (insufﬁcient time has elapsed since its last\
    \ transmission or reception to\nharvest enough energy for the subsequent scheduled\
    \ transmission). An adaptable data\naggregation tree is constructed, which considers\
    \ each node’s residual and harvested energy,\nand three energy-collision-aware\
    \ data aggregation algorithms are proposed.\n5.2.1. Cluster-Based Routing Protocol\
    \ That Relies on EH\nSeveral studies have suggested various adaptations for LEACH\
    \ WSN cluster-based\nrouting protocol (e.g., [106]) for EH-based WSN (EH-WSN).\
    \ Recall that LEACH’s cluster-\nhead selection mechanism randomly selects sensor\
    \ nodes as cluster-heads to distribute\nthe energy consumption between them evenly,\
    \ which can seemingly cope with the EH\nconstraints. However, note that even when\
    \ the nodes’ platform is exactly the same, the\npotential of different nodes to\
    \ harvest energy, dependent on their speciﬁc ambient con-\nditions, can be very\
    \ different. Furthermore, the node’s location with respect to the sink\ncan highly\
    \ inﬂuence the amount of data it needs to relay toward the sink, causing high\n\
    discrepancies between the energy utilized by various nodes. To cope with these\
    \ discrepan-\ncies, Xiao et al. [143] modify LEACH’s cluster-head selection mechanism\
    \ and deﬁne a new\nmetric termed “energy potential function” to measure each node’s\
    \ capability to harvest\nenergy. The paper devises a cluster-head selection strategy\
    \ that prioritizes nodes with\nhigher expected stored energy (based on the currently\
    \ available energy and their potential\nenergy) to become cluster-heads, regardless\
    \ of the number of instances that the node was\nselected as cluster-head in the\
    \ past.\nTo address the imbalance between the energy expected to be consumed by\
    \ cluster-\nheads (CHs) that are closer to the sink and are expected to spend\
    \ more energy on relaying\npackets from farther clusters, and CHs that are further\
    \ from the sink and expected to relay\nless trafﬁc, Wu et al. [144] suggest an\
    \ unbalanced clustering mechanism. In particular,\ncluster sizes are determined\
    \ according to the distance (hop count) to the sink to balance the\nenergy consumption\
    \ of the CHs. Accordingly, clusters closer to the sink, which are expected\nto\
    \ relay more inter-cluster trafﬁc, will be smaller, so that they collect less\
    \ intra-cluster\ntrafﬁc; clusters further away from the sink and expected to relay\
    \ less inter-cluster trafﬁc\nwill comprise more nodes, so that they collect more\
    \ intra-cluster trafﬁc. The mechanism\nsuggested to attain this balance is partitioning\
    \ the network conceptually into concentric\nrings around the sink with linearly\
    \ increasing radii. Each ring comprises nodes with\nthe same hop distance to the\
    \ sink. Clusters within the same ring will have the same\nsize. CH selection is\
    \ designed to balance the loads of each ring considering the available\nnodes’\
    \ energy, which is evaluated based on the EH rate. Following a similar approach,\n\
    Yang et al. [145] assume a highly symmetric circular sensor network in which the\
    \ sink\n(BS) is located at the center, and the sensors are distributed evenly\
    \ in a disc around it.\nAs with [144], the sensor ﬁeld is divided into concentric\
    \ rings; however, in this study,\nthe rings are determined to have an equal area\
    \ such that the number of sensors in each\nring is expected to be the same. Under\
    \ the given model, Ref. [145] analyzes the energy\nconsumption of intra- and inter-cluster\
    \ data transmission and derives the energy neutrality\nconstraints, which guarantee\
    \ that each node consumes less energy than the amount of\nenergy it has harvested.\
    \ The authors further devise a constraint formula of the number of\nSensors 2022,\
    \ 22, 2650\n23 of 44\nclusters required in each layer (ring) that balances the\
    \ average energy consumption of nodes\nin different layers. The energy neutrality\
    \ constraints and the cluster parameters are used to\nobtain the parameters (number\
    \ of rings, number of clusters in each ring, and minimum\nnetwork data transmission\
    \ cycle) that minimize the data transmission cycle. Based on the\nattained parameters,\
    \ the cluster-based routing protocol is derived. The protocol consists\nof an\
    \ initialization phase and repeated cycles divided into topology formation and\
    \ data-\ngathering phases. Bahbahani and Alsusa [146] suggest two separate enhancements.\
    \ The\nﬁrst, termed cooperative transmission strategy, enables nodes to serve\
    \ as relays to relay\nundelivered packets from cluster members to CHs and from\
    \ CHs to the sink node. The\nsecond mechanism, termed cluster-head duty-cycle,\
    \ regulates the frequency at which a node\ncan become a CH based on duty-cycling\
    \ that adapts to the node’s energy-harvesting rate.\nTo conserve the energy of\
    \ nodes that are more susceptible to energy depletion,\nBozorgi et al. [147] select\
    \ CHs, taking into account their residual energy, expected har-\nvest energy,\
    \ distance from the sink, number of neighbors, and, similar to LEACH, the\nnumber\
    \ of times a node has already served as a CH in the past. The proposed approach,\n\
    which combines centralized and distributed mechanisms, relies on a signal transmitted\n\
    by the sink that can be received by all the nodes, which allows them to estimate\
    \ their\ngeographic distance from the sink. The network is partitioned by the\
    \ sink into four layers\nbased on distance. The sink further computes the individual\
    \ coverage radius of each node\n(potential CH) based on distance (nodes closer\
    \ to the sink, which are therefore expected\nto relay trafﬁc coming from more\
    \ distant clusters, will have a smaller radius, and thus\nless intra-cluster trafﬁc;\
    \ on the other hand, nodes farther away from the sink, which are\ntherefore expected\
    \ to have less inter-cluster trafﬁc to relay, are assigned a longer radius,\n\
    and therefore more intra-cluster trafﬁc). The paper suggests a distributed contention-based\n\
    mechanism for selecting the CHs in which the contention window takes into account\
    \ the\nparameters mentioned above. Another cluster-based routing for EH-WSN is\
    \ proposed by\nRen and Yao [148]. The proposed routing scheme is divided into\
    \ cluster establishment and\ndata collection. It is suggested that besides the\
    \ typical cluster members (CMs) and cluster-\nhead (CH), a new entity be devised,\
    \ termed in the paper scheduling node (SN), which is\ndifferent from the CH. The\
    \ main task of the SN is to monitor the energy of all the cluster\nmembers during\
    \ the data collection stage and select a CH based on the monitored residual\n\
    energy of the cluster members. The transmission range of nodes can also be adjusted\
    \ based\non their residual energy. The data collection stage, which adapts a round-based\
    \ scheme\nsimilar to LEACH, is divided into the data transmission and CH selection\
    \ stages.\nSinde et al. [149] aim to improve the network efﬁciency by three means:\
    \ (i) clusteriza-\ntion mechanism that takes into account energy consumption during\
    \ the data aggregation\nphase, (ii) duty cycle adaptation of each node such that\
    \ each sensor node determines its\nmode of operation, and (iii) routing mechanism\
    \ based on ant colony optimization that\nchooses the path between the source and\
    \ the sink node that reduces the delay incurred.\nOverall, while the paper jointly\
    \ addresses several topics in WSN, including those connected\nto energy-efﬁcient\
    \ data gathering, its main contribution is the detailed NS3 simulation.\n5.2.2.\
    \ Mobile Charger\nToday’s technology enables dedicated wireless charging equipment\
    \ (WCE) to recharge\nthe nodes’ batteries, prolonging the lifetime of wireless\
    \ rechargeable sensor networks.\nA model in which, in addition to the sink (base\
    \ station), a mobile station will navigate\nthrough the WSN to collect data and\
    \ charge sensor nodes is considered by Liu et al. [150].\nThe paper suggests a\
    \ joint routing and charging strategy. The joint problem is decomposed\ninto two\
    \ sub-optimization problems: routing tree optimization and charging path optimiza-\n\
    tion. Heuristic algorithms based on simulated annealing algorithms were applied\
    \ to solve\nthese sub-optimization problems.\nA joint charging and routing algorithm\
    \ with WCE-assisted data gathering is also\nsuggested by Lu et al. [151]. The\
    \ model suggested therein assumes that the BS (sink) can\nget the information\
    \ of each node at any time, including node location, residual energy,\nSensors\
    \ 2022, 22, 2650\n24 of 44\nand energy consumption rate. The suggested approach\
    \ relates to data routing and energy\nsupplement to undercharged nodes. The data\
    \ routing algorithm considers several factors:\nsensor buffer occupancy, load,\
    \ and energy. To ﬁnd the route for the mobile recharging\nunit to traverse, they\
    \ rely on Du [152] to seek the shortest Hamiltonian cycle between the\nnodes that\
    \ urgently need energy replenishment traversed by the mobile recharging unit.\n\
    Additional nodes along the traversed path can also be charged. Furthermore, the\
    \ mobile\nrecharging unit can also gather data from sensors with a critical buffer\
    \ occupancy during\nits recharging cycle.\nIn the following section, we discuss\
    \ network coding (NC) and, in particular, linear\nnetwork coding in the context\
    \ of data gathering in WSN.\n5.3. Network Coding (NC)\nNetwork coding leverages\
    \ the routing protocols and the ability to construct multi-path\nrouting between\
    \ sources and their destination (the sink) to enable intermediate nodes to\nperform\
    \ coding on the incoming packets before forwarding them. In the following section,\n\
    we discuss network-coding-related works.\nLinear network coding was ﬁrst introduced\
    \ by Celebiler and Stette [153] and evolved in\nthe seminal paper by Ahlswede\
    \ et al. [154] as a means to improve the network’s throughput,\nefﬁciency, and\
    \ scalability, which can also be leveraged to improve the network resilience\n\
    to attacks and eavesdropping. Linear network coding allows the network’s intermediate\n\
    nodes (e.g., relays) to accumulate arriving messages and forward a newly encoded\
    \ message,\nwhich is a linear combination of the accumulated packets, multiplying\
    \ them by coefﬁcients\nchosen from a ﬁnite ﬁeld. The manner in which nodes encode\
    \ and decode messages de-\npends on the selected coding scheme. Network coding\
    \ (NC) over wireless communication\ncan reduce the number of transmissions by\
    \ leveraging the fact that a single transmission is\noverheard by multiple nodes\
    \ in the transmitter’s vicinity, and can therefore be utilized by\neach of these\
    \ nodes, which will forward a coded packet with unique coefﬁcients comprising\n\
    its own message and the messages it overheard (e.g., [155]).\nIn WSNs, NC can\
    \ be utilized for various trafﬁc patterns, including data dissemination\n(one-to-many\
    \ communication) and data gathering. Works on energy-efﬁcient NC-based\ndissemination\
    \ can be followed in the survey [156], with multi-hop routing being empha-\nsized.\
    \ In data dissemination in which the base station/sink distributes information\
    \ to\nthe sensor nodes, NC is beneﬁcial mainly for distributing control messages\
    \ (broadcast or\nmulticast trafﬁc) or, in case of unicast trafﬁc, for recovering\
    \ lost packets (retransmissions).\nThe latter utilization relies on the fact that\
    \ different nodes heard or did not hear different\npackets. Accordingly, nodes\
    \ store packets they overheard, even if not destined to them-\nselves. The transmitter\
    \ (e.g., access-point) accumulates several packets that need to be\nretransmitted,\
    \ each for a different receiver. It transmits a coded packet that is a composite\n\
    of these accumulated packets. Each receiver can decode a missing packet by utilizing\
    \ its\nstored overheard packets (e.g., [157–162], where the last two mainly focus\
    \ on data dis-\nsemination of control management messages. It is noteworthy that\
    \ Cohen et al. [157] also\npresent a successful real HW radio deployment of their\
    \ scheme. XOR-CoW [163] exploits\nthe same concept to design an IoT protocol in\
    \ which relays transmit coded packets that\nmix downlink and uplink trafﬁc. Similar\
    \ to other previously mentioned studies, the coding\nscheme by Swamy et al. [163]\
    \ is over ﬁnite Galois ﬁeld of size 2 (GF(2)) (i.e., XORing the\ncoded packets).\n\
    Network coding is widely explored for data-gathering schemes. Typically, an NC-\n\
    based protocol involves both the coding scheme and the multi-path routing. It\
    \ relies on\nthe relay nodes to overhear packets and perform the coding, and on\
    \ the sink (or multiple\nsinks) to collect sufﬁcient coded packets (combinations)\
    \ to encode the sent information.\nThe limited ability of the sensors constrains\
    \ NC over WSN (e.g., limited storage to store\noverheard packets, limited computation\
    \ power to perform sophisticated operations, limited\nawake time for packet overhearing,\
    \ etc.). The utilized coding scheme inﬂuences the\nperformance of the NC algorithm\
    \ in several aspects such as the throughput, algorithm\nSensors 2022, 22, 2650\n\
    25 of 44\ncomplexity, encoding complexity, decoding complexity, packet overhead\
    \ (bits), required\nfeedback, and so on. Note that many of these metrics are directly\
    \ translated to air time\nand energy consumption, which must be considered in\
    \ WSN. The random linear network\ncoding (RLNC) encoding scheme (e.g., [164])\
    \ is widely used because, despite its simplicity,\nit can attain throughput that\
    \ is close to the optimal one using a decentralized algorithm.\nIn RLNC, relays\
    \ transmit random linear combinations of the packets they receive, with\nrandomly\
    \ chosen coefﬁcients from a ﬁnite Galois ﬁeld (GF). The receiver must obtain a\n\
    sufﬁcient number of linearly independent combinations (packets) to decode the\
    \ original\npackets. If the GF size is sufﬁciently large, the probability that\
    \ the randomly generated\ncombinations will be linearly independent is high. However,\
    \ the receiver needs to know the\ncoefﬁcient used in each combination; hence,\
    \ it needs to be sent as overhead piggybacked on\neach traversed packet. The larger\
    \ the GF size, the higher the overhead. RLNC scheme with\ndistributed encoding\
    \ was utilized by Stefanovi´c et al. [165] for a perimeter data-gathering\nobjective,\
    \ in which the data should reach the perimeter nodes that are located on the\n\
    boundary of the covered area. The proposed scheme does not deploy routing algorithms\
    \ or\nmaintain routing information and relies on random walks.\nOne disadvantage\
    \ of RLNC is its decoding complexity in the order of O(n3), where n\ndenotes the\
    \ number of original packets. Sparse end-to-end erasure-correcting codes can\n\
    reduce the decoding load on the receiver at the cost of introducing an additional,\
    \ non-\nnegligible delay. Feizi et al. [166] suggest a tunable sparse network\
    \ coding (TSNC) scheme\nthat tunes the level of sparsity as the transmission process\
    \ evolves. This tuning process\ncan reduce the delay overhead by using denser\
    \ codes towards the end of the transmission\nwhile maintaining the complexity\
    \ advantages of a sparse code. Prior et al. [167] propose\ntwo network coding\
    \ schemes for information gathering, which are based on tunable sparse\ncodes,\
    \ with and without explicit feedback from the sink. The suggested schemes are\n\
    designed for meter readings in a smart grid. Nistor et al. [168] further exploit\
    \ RLNC and\nTSNC for data gathering and derived analytical bounds for a multi-hop\
    \ line network using\na ﬂuid model, which is valid for any ﬁeld size and various\
    \ sparsity levels, and has two\ndifferent feedback mechanisms.\nSenseCode [169]\
    \ adopts the NC paradigm, aspiring to balance energy efﬁciency and\nend-to-end\
    \ packet error rate. SenseCode relies on nodes transmitting both uncoded and\n\
    coded packets. Each node stores only a small portion of the packets it overhears,\
    \ which can\nbe attained by letting the node wake up sporadically within its duty\
    \ cycle and stay awake\nfor a short time interval each time it wakes up, storing\
    \ overheard packets. Accordingly,\neach coded packet comprises only a small subset\
    \ of the packets the node could have\npotentially overheard and coded. NetCoDer\
    \ [170] concentrates on a star topology in\nwhich the star-head can be a sink\
    \ or a relay that collects information from its neighbors.\nNetCoDer opportunistically\
    \ selects, based on network conditions, a set of relays that, in\naddition to\
    \ the data sent by the nodes, send additional coded packets with packets they\n\
    overheard, which helps the star-head recover lost packets. To reduce the overhead,\
    \ the\nrelays use LNC coefﬁcients based on the addresses of the sensor nodes.\
    \ A similar idea\nthat also does not rely on feedback was presented in SR-Code\
    \ [171] in which nodes and\nrelays send redundant coded messages to help the sink\
    \ recover lost messages. SR-Code\nutilizes the XOR operator (GF(2)). Similar to\
    \ NetCoDer, SR-Code reduces the overhead\nby using a bitmap to identify the coded\
    \ packets rather than the address of the sending\nnode. Al-Hawri et al. [172]\
    \ assume a data-gathering setup with single or multiple gateways\n(sinks) that\
    \ can collaborate (exchange information via accessible shared distributed storage\n\
    system). The paper distinguishes between traditional relays, which forward packets\
    \ they\nreceive as-is, and encoding relays, which perform network-coding on the\
    \ packets they\nreceive before forwarding them. The authors suggest a mathematical\
    \ model and a heuristic\nalgorithm to determine the number of network-encoding\
    \ nodes and their location, which\nis insufﬁcient for the aggregate received data\
    \ at the gateway/gateways to be decodable,\ntaking into account link failure scenarios.\n\
    Sensors 2022, 22, 2650\n26 of 44\nProtocols that utilize NC in WSN need to balance\
    \ achieving the NC expedience and\ndiverse performance criteria. On the one hand,\
    \ the motivation is to send only coded packets,\nas sending uncoded packets degrades\
    \ the NC gain. On the other hand, a strategy in which\na relay waits for packets\
    \ to arrive in order to code them can yield unacceptable delays.\nFurthermore,\
    \ storing arriving packets while waiting for additional packets to arrive before\n\
    coding them can result in a buffer overﬂow and packet loss. To overcome these\
    \ drawbacks,\nChen et al. [173] suggest an opportunistic network coding (ONC)\
    \ approach in which the\nrelay can transmit either coded or uncoded packets. Each\
    \ relay determines whether to\ntransmit a coded or uncoded packet according to\
    \ its queue state at each transmission\nopportunity. For the simple topology of\
    \ a relay interconnecting two nodes that communi-\ncate with one another, Ref.\
    \ [173] presents an ONC strategy that can achieve the optimal\ndelay/power tradeoff.\
    \ Mirani et al. [174] adopt the ONC paradigm for data dissemination\nin vehicular\
    \ ad hoc networks (VANETs), for which the mobile nodes (vehicles) employ a\ndecode-and-forward\
    \ scheme with subjective timers determined according to their distance\nfrom the\
    \ source. In Tan et al. [175], an opportunistic routing protocol with opportunistic\n\
    network coding is proposed for correlated data gathering.\nNext, we provide more\
    \ recent works that utilize NC in WSNs and related networks\nthat are not particular\
    \ to data-gathering applications. Marques et al. [176] propose to use\nNC in a\
    \ fog computing scenario, since in the fog computing system architecture, the\
    \ data\nmeasured on a node should be delivered to many other destination nodes.\
    \ The authors\ndesign a protocol for encoding and decoding and provide a design\
    \ to incorporate it on\nthe MAC level. Uwitonze et al. [177] consider a setup\
    \ in which a WSN has been split into\nmultiple disjoint partitions and suggests\
    \ a polynomial-time heuristic algorithm based on\nspace network coding termed\
    \ relay placement using space network coding (i.e., rather than\nsend additional\
    \ coded data, additional relay nodes are deployed) for ﬁnding the optimal\nnumber\
    \ and positions to place relay nodes for restoring the network connectivity.\n\
    A network coding backpressure routing scheme for data aggregation in large-scale\n\
    Internet of things (IoT) networks is explored by Malathy et al. [178]. The proposed\
    \ routing\nscheme exploits network coding for the data aggregation process, which\
    \ improves the\nthroughput of the network by eliminating redundant packets. The\
    \ paper relies on cluster-\nbased routing that selects the cluster-heads (CH)\
    \ based on the available energy and distance,\nwhich helps to minimize trafﬁc\
    \ congestion and provide efﬁcient data transmission.\n5.4. Data Collection Utilizing\
    \ Mobile Sink and Unmanned Aerial Vehicle (UAV)\nA different paradigm for the\
    \ traditional setup of data gathering in WSN, which\nrelies on a single or multiple\
    \ static sink(s) towards which all trafﬁc needs to travel, is\nthe utilization\
    \ of one or multiple mobile sinks (MSs) that traverse the terrain and collect\n\
    the reports from the devices. Such mobile sink(s) can be the trafﬁc’s ﬁnal destination\
    \ or\njust an accessory that collects the data and transmits it to the sink. Note\
    \ that in the latter\ncase, the ﬁnal destination is not necessarily located within\
    \ the wireless network realm\nand can be located outside it (e.g., within the\
    \ Internet or the cloud). Since these mobile\nsinks are unmanned aerial vehicles\
    \ in many cases, these systems are sometimes called\nunmanned aerial vehicle-wireless\
    \ sensor networks (UAV–WSNs). This section reviews\nseveral state-of-the-art developments\
    \ in mobile sink(s). Since sometimes the MS routing\nchallenges are interleaved\
    \ with the MAC layer’s challenges, the solution suggested in some\npapers, and\
    \ accordingly their description, incorporated both layers.\nTypically, data-gathering\
    \ protocols that utilize moving sink(s) aim at optimizing some\nperformance metrics,\
    \ such as overall power consumption, average or worst latency of the\ndata, trajectory\
    \ traversed by the mobile sink, awake time of the sensors, maximizing the\nlife\
    \ cycle of the network, and so on. There are different options to classify these\
    \ protocols:\nthey can be classiﬁed according to this aforementioned performance\
    \ objective, or other\ncategories, such as characteristics of the moving sink,\
    \ its speed and constraints, network\nmodel, communication standard utilized,\
    \ and so on. In this section, we will classify the\nprotocol into two classes:\
    \ protocols that solely rely on the moving sink with no intra-trafﬁc\nSensors\
    \ 2022, 22, 2650\n27 of 44\nbetween the nodes (all the trafﬁc is directly transmitted\
    \ to the moving sink), and protocols\nthat combine routing between the nodes and\
    \ trafﬁc forwarding to the sink. This latter\nclass will mostly include cluster-based\
    \ protocols in which the nodes are clustered and\ncluster-heads (CHs) are selected,\
    \ but rather than the CHs routing the trafﬁc towards the\nsink, they forward the\
    \ trafﬁc directly to the mobile sink.\n5.4.1. Routing Directly to the Mobile Sink(s)\
    \ with No Intra-Node Data Forwarding\nIn this section, we review papers in which\
    \ the only data trafﬁc is between the nodes\nand the mobile sink, and no data\
    \ is forwarded between the nodes.\nZhan et al. [179] consider a general fading\
    \ channel model and suggest an efﬁcient\nsub-optimal solution that minimizes the\
    \ energy consumption of all sensor nodes (SNs)\nwhile ensuring that data is collected\
    \ reliably from all SNs with bounded outage probability.\nThe suggested solution\
    \ decouples the joint optimization problem, which considers both\nthe SNs’ wake-up\
    \ schedule and the unmanned aerial vehicle (UAV’s) trajectory, into two\nseparate\
    \ optimization problems, ensuring that the amount of data collected from each\
    \ SN\nreliably exceeds a threshold. One of the formulated optimization problems\
    \ is non-convex\ndue to non-convex constraints, and therefore it needs to be relaxed.\
    \ The two problems are\nsolved iteratively to obtain an approximate solution.\
    \ A ﬂight time minimization problem\nfor a UAV that collects data from a set of\
    \ energy-constrained ground sensors is studied by\nGong et al. [180]. The sensors\
    \ are assumed to be located on a line (one dimension). Each\nsensor has a certain\
    \ amount of data to upload. The UAV can collect data either while\nﬂying or while\
    \ hovering, and only from a single sensor at a time. Accordingly, the UAV’s\n\
    trajectory is divided into non-overlapping data collection intervals, each dedicated\
    \ to\ncollecting data from a single sensor. The objective is to minimize the total\
    \ ﬂight time of the\nUAV from an initial point to a destination by jointly optimizing\
    \ the division of intervals, the\nUAV’s speed, as well as the sensors’ transmission\
    \ power. The ﬂight time minimization is\nformulated as a dynamic programming (DP)\
    \ problem, where each DP stage considers ﬂight\ntime minimization for a single-sensor\
    \ data collection scenario. The algorithm for the single-\nsensor case is used\
    \ to ﬁnd the UAV’s optimal speed and the sensor’s transmission power.\nIt is shown\
    \ that the UAV’s optimal speed is proportional to the given energy of the sensors\n\
    and the inter-sensor distance but is inversely proportional to the data upload\
    \ requirements.\nThe metric addressed by Liu et al. [181] is the age of the information.\
    \ In particular,\nRef. [181] utilizes UAV, and suggests two age-optimal trajectories\
    \ for it to collect the\ndata from the ground SNs, one that minimizes the age\
    \ of the ‘oldest’ sensed information\namong the sensors, and another that minimizes\
    \ the average age of the information sensed\nby all sensors. It is shown that\
    \ both age-optimal trajectories correspond to the shortest\nHamiltonian path in\
    \ the wireless sensor network, in which the distance between any\ntwo sensors\
    \ is represented by the amount of inter-visit time. The authors adopt dynamic\n\
    programming and genetic algorithm to ﬁnd the two different age-optimal trajectories.\n\
    Liu et al. [182] also utilize a UAV to collect the data from the ground sensors.\
    \ The model\nsuggested therein assumes that the sensors (nodes) are randomly distributed\
    \ over a square\narea. The area is partitioned into small square cells. The UAV\
    \ ﬂying above the cells\nhovers above each cell to collect all the data of the\
    \ sensors within the cell. The paper\nstudies the amount of data per unit time\
    \ that the UAV can collect from the ground nodes\nas a function of the number\
    \ of cells, the height of the UAV, the number of sensors, and\nthe energy capacity\
    \ of the UAV. The paper suggests a similar analysis when multiple\nUAVs are utilized.\
    \ It seeks the optimal number of cells to maximize the per-node capacity\nunder\
    \ the suggested model and shows that under the suggested data collection network,\n\
    multiple UAVs can signiﬁcantly improve the per-node capacity attained by a single\
    \ UAV.\nThe balanced network communication protocol (BNCP) that utilizes UAV as\
    \ a mobile\nsink is suggested by Qin et al. [183]. There is no inter-sensor routing\
    \ in BNCP, and all\nsensors’ communication energy is spent on the sensor-UAV transmission\
    \ links. BNCP is\nimplemented and evaluated.\nSensors 2022, 22, 2650\n28 of 44\n\
    5.4.2. Cluster-Based Data Forwarding\nRather than the mobile sink node traversing\
    \ the network between all the sensors, a\ndifferent approach groups the sensors\
    \ into clusters and selects cluster-heads (CH), which\ncollect the data from all\
    \ cluster members, thus decreasing the traverse of the mobile sink.\nIn general,\
    \ data gathering in a clustered WSN imposes a tradeoff between the energy\nconsumed\
    \ during data collection within each cluster and the energy consumed by the\n\
    mobile sink. On the one hand, the higher the number of clusters (smaller clusters),\
    \ the\nless energy is consumed during data collection by the cluster-heads (CH);\
    \ on the other\nhand, it follows that the UAV will have to access more CHs on\
    \ its route, and consequently,\nthe energy spent by the UAV will be higher in\
    \ that case. This trade-off is one of the main\nchallenges in addressing the joint\
    \ problem of clusterization and CH selection, jointly with\nﬁnding the path traversed\
    \ by the UAV, as reﬂected in several papers discussed below.\nNajjar-Ghabel et\
    \ al. [184] propose a two-phase algorithm, termed DGOB, for data\ngathering in\
    \ WSNs in an environment impaired by obstacles, which utilizes a mobile sink\n\
    that traverses the network and collects the data. Both phases, node clusterization\
    \ and\nMS trajectory construction, exploit artiﬁcial intelligence (AI) schemes.\
    \ Tazibt et al. [185]\nutilize a small-scale drone to gather the data from scattered\
    \ sensors. Like in several other\npapers that rely on UAV to collect data from\
    \ cluster-heads, the challenge in [185] is two-fold:\n(i) clusterization and CH\
    \ selection (in contrast with other papers, this paper allows multi-\nhop clusters,\
    \ such that cluster members are up to a predeﬁned number of hops from their\n\
    CH); and (ii) plan of the drone trajectory for traversing through all CHs with\
    \ minimum\nenergy consumption (e.g., minimum path length). Even though the two\
    \ problems are\nrelated, the authors solve the two issues sequentially. They ﬁrst\
    \ solve the CH selection\nby formulating an optimization problem that seeks the\
    \ minimal set of cluster-heads that\nguarantee that all nodes are at most h hops\
    \ from a CH in the set. After determining the CH\nset via linear programing, they\
    \ utilize the 2-opt heuristic, which relies on a simple local\nsearch algorithm\
    \ for solving the traveling salesman problem, in order to ﬁnd the optimal\ntravel\
    \ trajectory for the drone between the selected CHs.\nKumar and Dash [186] also\
    \ suggest a data-gathering-by-mobile-sink scheme in WSN.\nThe model in [186] assumes\
    \ that the mobile sink is moving along a pre-speciﬁed path with\nconstant speed\
    \ and can collect data while traveling. The paper denotes all the sensors\nthat\
    \ are in transmission range from the mobile-sink traversed path, and can therefore\n\
    relay trafﬁc to it, as sub-sinks. All other nodes need to forward their data to\
    \ these sub-\nsinks, possibly through multi-hop communication, in order for them\
    \ to relay the data\nto the mobile sink. The paper suggests two different models:\
    \ the ﬁrst assumes that the\nmobile sink can receive data from only one sensor\
    \ at a time, while the second assumes that\nthe mobile sink can receive data from\
    \ multiple sensors simultaneously. Both suggested\nalgorithms comprise three phases:\
    \ (i) identify the relay nodes (sub-sinks) that are within\ntransmission range\
    \ from the mobile sink trajectory (unit disk graph model), and partition\nthe\
    \ path into segments that are the union of all the transmission disks of all the\
    \ sub-sinks;\n(ii) determine the communication time each sub-sink can have with\
    \ the mobile sink, and\naccordingly, the amount of data it can transmit; (iii)\
    \ utilize a network ﬂow approach to\ndetermine which sub-sink transmits to the\
    \ mobile sink in each of the mobile sink’s path\nsegments. Ebrahimi et al. [187]\
    \ aim to optimize total transmission power between WSN\ncluster-heads in an IoT\
    \ network. The problem is split into subproblems, which include\nCH assignment,\
    \ building of the forwarding tree within each cluster, and optimal UAV\ntrajectory\
    \ calculation. The data transmitted by CH to UAV is pre-processed by a specialized\n\
    optimized compression. A genetic algorithm for energy-efﬁcient CH selection is\
    \ employed\nby Wu et al. [188].\nThe focus of Zahra et al. [189] is on MS that\
    \ traverses a WSN that relies on a cluster-\nbased data collection protocol in\
    \ which cluster-heads are responsible for collecting and\ntransmitting the cluster\
    \ members’ sensed data to the MS. The paper examines a scenario in\nwhich the\
    \ MS is constantly moving in a predeﬁned trajectory, regardless of whether the\n\
    data transfer was completed or not. Accordingly, when the cluster aggregate data\
    \ is too\nSensors 2022, 22, 2650\n29 of 44\nlarge, the CH cannot complete the\
    \ transaction. The authors suggest a mechanism in which,\nin case the CH cannot\
    \ complete the transaction, it can use different cluster members as\nrelays to\
    \ continue the transaction after the MS has moved out of the transmission range\n\
    of the CH. Likewise, Zhang et al. [190] also suggest a hybrid approach that combines\
    \ the\nMS with hierarchical routing-based protocol relying on node clusterization.\
    \ In order to\nimprove the efﬁciency of the MS data collection, Ref. [190] suggests\
    \ utilizing virtual heads\n(VHs) that lie on the MS trajectory on the cluster\
    \ boundaries that also transmit collected\ndata to the MS. The channel access\
    \ relies on a random access mechanism.\nThe UAV can be of different physical structures.\
    \ While some machines are able to slow\ndown and even to hover, others, especially\
    \ the winged UAVs, can only ﬂy with a constant\nvelocity. This limitation poses\
    \ an additional challenge; see Say et al. [191] for a possible\nsolution. To address\
    \ the velocity limitation, the grid topology of the UAV’s coverage is\ndivided\
    \ into frames, and the most distant frames get the highest priority. The priority-based\n\
    transmissions from sensors to the moving UAV are incorporated into a MAC layer,\
    \ by\nintroducing a priority-based contention window adjustment scheme. A smaller\
    \ contention\nwindow is assigned to the frame where sensors send packets from\
    \ the rear side of the UAV,\nand should therefore have a higher transmission priority.\
    \ This results in a low packet loss\nwhen the UAV ﬂies forward. On top of this\
    \ architecture, a frame-selection-based routing\nprotocol is formulated.\n6. Wearables\
    \ and Wireless Body Area Networks (WBAN)\nNumerous applications rely on data gathering\
    \ and report collection in WSN and IoT,\nand some are mentioned throughout the\
    \ paper. There is no doubt that the essence of WSN\nis the applications that utilize\
    \ the infrastructure discussed throughout this paper. Providing\na thorough review\
    \ of such applications can encompass several surveys. Since wearables\nare becoming\
    \ highly popular and a ubiquitous application which imposes new challenges\nin\
    \ the context of data gathering, we discuss several recent results and related\
    \ challenges in\nthe context of wearables. Figure 5 depicts the main topics discussed\
    \ in this section.\nWearables and WBAN\nSection 6\nEnergy Harvesting (EH)\nSection\
    \ 6.1\nTechnological Advances\nSection 6.2\nTransmission Protocols\nSection 6.3\n\
    WBAN Applications\nSection 6.4\nFigure 5. The main topics in the context of wearables\
    \ covered in the section, and a rough partition of\nthe papers covered by these\
    \ topics.\nWearable technology refers to smart devices attached to the human body\
    \ or apparel\nto monitor the user and their environment. Wearables are designed\
    \ to detect, analyze,\nand transmit information, which allows continuous monitoring\
    \ of the subject. In some\ncases (e.g., healthcare applications), feedback is\
    \ returned to the wearer with strict perfor-\nmance constraints (e.g., reliability,\
    \ latency bounds). Such applications can necessitate the\nmonitoring of both bodily\
    \ conditions, such as blood pressure, blood glucose level (e.g.,\nin conjunction\
    \ with an insulin pump), ECG, EMG, body temperature, accelerometer, and\ngyroscope,\
    \ as well as environmental conditions that might inﬂuence the user, such as\n\
    temperature, humidity, CO2 level, dust level, and location.\nSensing essential\
    \ human physiological parameters led to the innovation of wireless\nbody area\
    \ networks (WBANs). WBAN typically relates to a small area network that spans\n\
    the whole human body. It comprises devices (wearables) located in the apparel,\
    \ on the\nbody, or under the skin, and are wirelessly connected. Even though tracking\
    \ physical\nconditions applies to diverse domains, including medical, social,\
    \ and economic ones, each\nwith its particular implications and extensive research\
    \ in the ﬁeld, the speciﬁc challenges\nof acquiring data in WBANs necessitated\
    \ new solutions designed for WBAN. Speciﬁcally,\nSensors 2022, 22, 2650\n30 of\
    \ 44\nsince the sensors in WBANS are designed to be located close to the monitored\
    \ individual,\nthey impose particular challenges related to their speciﬁc structural,\
    \ functional, and size-\nrelated constraints. In the sequel, we dwell on some\
    \ of the most critical challenges and\nrecent promising results on WBANS. The\
    \ main objective of this survey is to understand the\ndata-gathering challenges.\
    \ In the special case of WBANS, we also elaborate on the sensors’\nphysical and\
    \ mechanical structure, which directly impact the data acquisition process.\n\
    Many of the challenges pertaining to WSN in general, which are described throughout\n\
    this survey, also apply to wearables. However, some of these challenges are exaggerated\n\
    when applied to wearables due to their unique characteristics. For example, energy-related\n\
    challenges that are essential to address and substantially inﬂuence any WSN design\
    \ and\nperformance, open a different perspective on wearables. Speciﬁcally, due\
    \ to their sensing\ndevices’ tiny size, the energy storing capacities are limited.\
    \ Yet, many wearable applications,\nparticularly healthcare ones, employ continuous\
    \ sampling and communication tasks that\nconstantly consume energy and deplete\
    \ the device’s battery. Frequent battery replacement,\nwhich can be a burden in\
    \ any WSN, can be even more cumbersome in wearables and can\nhinder the adoption\
    \ of these technologies (e.g., when the wearables are implants, battery\nreplacement\
    \ can involve an invasive medical intervention). Accordingly, energy-efﬁcient\n\
    approaches designed for wearable sensor networks are important for disseminating\
    \ the\ntechnology into additional domains. An inclusive review of energy-efﬁcient\
    \ approaches\ndesigned for human context recognition (HCR) based on wearable sensor\
    \ networks is\ngiven by [192]. This paper classiﬁes energy-efﬁcient mechanisms\
    \ for health-related HCR\napplications, based on the task that the mechanism is\
    \ aimed at to reduce its energy con-\nsumption (e.g., sensing, communication,\
    \ computation). The paper reviews the related\nworks according to the classiﬁcation.\n\
    6.1. Energy Harvesting (EH)\nEnergy harvesting as a battery alternative has been\
    \ discussed in Section 5.2. However,\nEH in the context of wearables encounters\
    \ new challenges, such as critical reliability level,\nexpected tiny size and\
    \ position in/on the human body, limited exposure to energy sources\nsuch as solar\
    \ energy, and so on. Accordingly, we revisit EH and review some EH studies\nin\
    \ the context of wearables. The three most prominent techniques include photovoltaic\n\
    cells attached to a wearable (energy is accumulated from environmental illumination),\n\
    thermoelectric nanogenerators (the energy source is the heat produced by the human\
    \ body),\nand kinetic energy harvesters (energy is created by natural body motion).\
    \ All energy\nharvesting cases pose a fundamental challenge of effective energy\
    \ management, which\ninvolves continuous decision making regarding how much energy\
    \ to spend on sensing,\nmeasurements, on-board classiﬁcation, and transmission\
    \ (see also Section 5.2).\nWe present examples for each of the techniques mentioned\
    \ above in the context\nof wearables. Thermoelectric energy-harvesting units exploiting\
    \ self-generated human\nheat are suggested to be fabricated straight into the\
    \ textile of the garments [193]. Energy\nharvesting for activity-aware wearables\
    \ is designed by Khalifa et al. [194]. The idea is to\nremove the accelerometers,\
    \ which consume about 80% of the battery. Instead, the authors\npropose to employ\
    \ kinetic energy harvesters, which will convert human motion into\nelectrical\
    \ power. Additionally, to compensate for the accelerometers’ removal, the input\
    \ and\noutput of the kinetic energy harvester would be analyzed by a specialized\
    \ activity classiﬁer\nto track and identify the human activity (i.e., to perform\
    \ the primary task of the wearable).\nLight-based energy-harvesting wearables\
    \ are discussed by Park et al. [195]. It is noteworthy\nthat as the available\
    \ luminosity can be highly unpredictable, the overall functioning, data-\ngathering,\
    \ and transmission process would imply an optimization problem. Henceforth,\n\
    the same authors suggest a protocol to optimize the number and accuracy of interpretation\n\
    of human gestures by an energy-harvesting wearable device under an energy budget,\n\
    Park et al. [196]. To this end, they constructed an analytical model that characterizes\n\
    energy consumption based on experimental data and formulized the optimization\
    \ problem.\nEsteves et al. [197] suggest incorporating energy harvesting as part\
    \ of MAC 802.15.6. The\nSensors 2022, 22, 2650\n31 of 44\nproposed MAC modiﬁcation\
    \ includes the usage of some body sensors as relays. The\nmanaging part at a hub\
    \ (e.g., a smartphone) sets the optimal relay charging times to\nperform the data\
    \ transmission by relay effectively. A source and the relays send their\nenergy-harvesting\
    \ updates within the request for cooperation (RFC) packets. The charging\ntimes\
    \ are calculated according to the amount of energy at the source and relays and\
    \ are\nupdated in accordance with previous packet transmission success or failure.\n\
    6.2. Technological Advances\nWBAN utilization is penetrating new domains, spanning\
    \ a wide variety of sensors,\neach providing a different aspect of the monitored\
    \ subject. For example, healthcare ap-\nplications are expected to provide a wide\
    \ span of indicators from various physiological\nparameters. Speciﬁcally, to provide\
    \ a comprehensive status of the examinee, it requires, in\naddition to the standard\
    \ indicators such as heart rate and physical activity that many of us\nalready\
    \ have integrated in our watch, information at a deeper level and molecular level\n\
    insight into the dynamics of the wearer.\nTo cope with the growing popularity\
    \ of wearables and their expansion to a broader\nscope of applications, especially\
    \ in healthcare systems, with the increasing demand to\nimprove quality of service\
    \ (QoS) and quality of experience (QoE), a new generation of\nwearables has emerged.\
    \ This generation relies on several technological advances in both\nthe device\
    \ and cloud realms. The novel device technology utilizes new soft-sensing tech-\n\
    nologies, including innovative wearable materials such as conducting polymers,\
    \ rigid\nforms of hydrogel, gold and silver nanowires (to create nanowired tattoos\
    \ as stretchable\nsensors), carbon nanotubes, liquid metals, ionic liquids, and\
    \ others. These materials give\nrise to novel sensor families, such as electro-physiological\
    \ (acting on the electric potential\ndifference) physical and chemical sensors.\
    \ See the latest advances in the following related\nworks [198–200]. For example,\
    \ besides reviewing the key developments in sweat-sensing\ntechnology, Bariya\
    \ et al. [198] examine the requirements of the underlying components\nembedded\
    \ in sweat-based wearable sensors and discuss challenges for integrating wearable\n\
    sweat sensors in the development of personalized healthcare. Sweat-sensing technology\n\
    has been described earlier; see, for example, Salvo et al. [201], where a device\
    \ containing\ntwo humidity sensors located at different heights from the skin\
    \ is designed in a way that\nallows one to measure the sweat rate by the difference\
    \ in readings of these two sensing\nsub-units. Thermal comfort control by calculating\
    \ the relation between the vapor pres-\nsure and the temperature is designed into\
    \ watch-type sweat sensors by Sim et al. [202].\nSweat measurement by sweat biomarkers\
    \ (in particular, pH and Na+) is implemented\nby Song et al. [203]. In short,\
    \ the biomarkers cause a change in electric potential near the\nmeasuring device,\
    \ allowing for accurate sweat measurement during physical activity. The\nauthors\
    \ also note that the change in electrical potential allows for energy harvesting,\
    \ which\ncan be effectively managed to self-power the device and thus allow for\
    \ a battery-free design.\nIn general, the material imprinted into the working\
    \ reacting electrode determines which\nsubstance (i.e., a chemical component present\
    \ in the sweat) it will react with. For example,\nan application of electrochemical\
    \ differential pulse voltammetry to sense the sweat to\nmeasure the level of caffeine\
    \ is devised by Tai et al. [204].\nThe main challenge in the devices is to implement\
    \ capabilities of effective data gath-\nering, ﬁltering, and transmission within\
    \ microscopic computing units. Some biometric\nsensing (especially made by speciﬁc\
    \ conﬁgurations of adjacent sensor sets) produces large\namounts of data (as in\
    \ ECG sensing) that should undergo an appropriate local density\nreduction. To\
    \ ensure conformity with the sensing devices, paper lithium batteries are\nproposed\
    \ (see, e.g., [205]). In addition, many sensors are conﬁgured only to transmit\n\
    following special hazards. For example, ECG sensors should trigger an alarm in\
    \ case the\nheartbeat is abnormal. This local data processing is a preliminary\
    \ phase that facilitates\nthe more intensive data analyses in the intermediate\
    \ data collection unit (the smartphone),\nand ﬁnally, the destination server.\
    \ To treat noisiness and variability (if the sensor sampling\nfrequency is too\
    \ high) of raw data from an accelerometer or gyroscope or loss of data (if the\n\
    Sensors 2022, 22, 2650\n32 of 44\nsensor sampling frequency is too low), variable\
    \ sampling is proposed by Li et al. [206]. The\nofﬂine ML classiﬁcation algorithm\
    \ is used to identify and predict the physical activity.\nThe recent development\
    \ of miniature sensors combined with minimization of battery\nsize and energy\
    \ harvesting advances is sometimes referred to as a new paradigm, known as\nWearables\
    \ 2. For example, Ling et al. [207] provide a detailed description of various\
    \ types\nof sensors, means of attaching them to the human body, multiple parameters\
    \ the sensors\nare capable of measuring, and techniques to communicate and process\
    \ the measured data.\n6.3. Transmission Protocols\nWe note that while many of\
    \ the works mentioned above employ a smartphone device\nwith an application that\
    \ is presumably tailored to receive data from the wearables, having\na dedicated\
    \ hardware device that would ofﬂoad some of the networking burden (e.g.,\npotential\
    \ simpliﬁcation of the packetizing process) of the sensors would be more effective\n\
    and reliable. Indeed, in Pathak et al. [208], a central processing hub allows\
    \ one to circumvent\nthe cumbersome processes of sensor identiﬁcation, sensor\
    \ joining, and reconﬁguration\nby providing a designated interface. The authors\
    \ provide real hardware implementation,\nexplore various performance metrics,\
    \ and provide energy measurements.\nSeveral available protocols for data transmission\
    \ are suitable for WBAN. We mention\nhere the low Bluetooth energy (BLE; see,\
    \ e.g., Townsend et al. [209] for a detailed protocol\nstack description and Gomez\
    \ et al. [210] for performance evaluation and comparison with\nordinary Bluetooth\
    \ and other protocols). For distances of several centimeters, near-ﬁeld\ncommunication\
    \ (NFC) protocol (see Coskun et al. [211] for the theory and Kim et al. [212]\n\
    for a description of possible device designs and applications). Details of the\
    \ IEEE 802.15.6\nstandard, which covers WBAN, can be found in, for example, Kwak\
    \ et al. [213]. One sees\ntherein how the human body communications PHY layer\
    \ in particular is deﬁned.\n6.4. WBAN Applications\nEven though, as stated earlier,\
    \ there is no intention to provide a thorough review of\nWBAN applications, we\
    \ mention several interesting ones. Monitoring of workers involved\nin extreme\
    \ conditions or whose activity can be potentially dangerous (e.g., Lee et al.\
    \ [214])\nsuggest wearable sensors for monitoring miners or construction professionals.\
    \ This study\nevaluates integrated wearable sensors for measuring construction\
    \ workers’ personal level\nof workload, individual factors, and physiological\
    \ reactions during rooﬁng activities. A\nfatigue detection system for car drivers\
    \ by Chang et al. [215] includes smart glasses, which\nare able to identify possible\
    \ drowsiness by an IR detector aimed at the driver’s eyes,\nequipped with BLE\
    \ transmitter. A small processor embedded into the glasses gathers and\npre-analyzes\
    \ the data and then transmits them to the on-board computer in the car. The\n\
    latter makes a decision about whether to issue a fatigue warning and sends it\
    \ to the cloud.\nWearables can be attached to a human body in order to sense the\
    \ environment for the safety\nof the carrier, as in Wu et al. [216]. The data\
    \ (humidity and temperature) is then transmitted\nto a mobile unit, where it can\
    \ be analyzed locally or further transmitted to the cloud in order\nto issue timely\
    \ warnings. Classiﬁcation of sports activity is implemented and validated by\n\
    experiments by Qi et al. [217], where the activity is identiﬁed from accelerometer\
    \ and ECG\nmeasurements done by chest and wrist sensors. The measurements are\
    \ transmitted to a\nsmartphone, which performs the data processing. SVM is employed\
    \ for the classiﬁcation.\nYou et al. [218] suggest a real-time wireless body sensor\
    \ networks (WBSNs) scheme\nfor welfare assessment and disease monitoring, prevention,\
    \ and treatment. The suggested\nscheme is composed of three components: sensing,\
    \ communication, and management.\nSensing attains a set of physiological parameters,\
    \ such as heart rate, body temperature,\nECG, temperature, blood pressure, blood\
    \ glucose, heart rate, and oxygen saturation, from\ndesignated sensors embedded\
    \ on a smart shirt worn by the monitored user. Communi-\ncation handles the processes\
    \ of delivering the sensed physiological data and controlling\ninstructions to\
    \ a backend server through wireless networks. The transmission protocols\ncan\
    \ be divided into two segments: the transfer of information from the sensors to\
    \ a central\nSensors 2022, 22, 2650\n33 of 44\nterminal located at a smartphone\
    \ and the transfer of information between the smartphone\nand the designated server,\
    \ which is located on the healthcare cloud. The communication\nrelies on multiple\
    \ communication protocols including Bluetooth, WiFi, and 3G/4G (which\ncan be\
    \ replaced by 5G where available). Management is responsible for collecting, classify-\n\
    ing, and monitoring the physiological data, and furthermore, being able to issue\
    \ warning\nmessages to medical professionals or caregivers whenever the physiological\
    \ data are ab-\nnormal. Additional applications utilizing data gathering can be\
    \ found in the following\nsurvey [219].\nWe conclude by emphasizing that the beneﬁts\
    \ of WBANs have not run their course\nyet. The development of data gathering will\
    \ jointly progress with the ongoing advances\nin sensor construction and manufacturing\
    \ capability, development, and standardization\nof Wearables 2 and beyond. Development\
    \ of specialized post-processing platforms poses\na specialized challenge, and\
    \ the urge to make progress in this area is acute. To illustrate\nthis, on account\
    \ of an ever-growing population, specialized platforms for elderly care\nare needed;\
    \ see, for example, the recent papers [220,221] about wearables designated for\n\
    elderly patients and references therein.\nFinally, wearables have been recently\
    \ harnessed for combating the COVID-19 disease.\nEarly identiﬁcation of COVID-19\
    \ symptoms by evaluating the resting heart rate during the\nasymptomatic (presumably\
    \ infectious) period and analysis by a deep learning framework\nis evaluated by\
    \ Bogu and Snyder [222]. While the precision of such a tool is clearly inferior\n\
    to the standard medical assays, it may be useful to provide a preliminary alert\
    \ for the\nearly onset of the disease for people in risk groups. Hassantabar et\
    \ al. [223] suggest a\nframework termed CovidDeep that combines commercially available\
    \ wearable physiolog-\nical feature sensors (WMSs) and a simple yes/no questionnaire\
    \ with efﬁcient DNNs for\npervasive large-scale monitoring of disease onset and\
    \ health condition. The automatically\nextracted raw data and medical background\
    \ and symptom responses are combined with\nsynthetically generated data to train\
    \ the DNN architecture. Grow-and-prune synthesis is\nused to generate accurate\
    \ and computationally efﬁcient models that can be deployed for\nCOVID-19 inference.\n\
    Since viruses can spread between people who are in close contact with an infected\n\
    person, and since infected people may be asymptomatic, the pandemic taught us\
    \ that it\nis best to keep a safe distance from others (see, for example, Cortellessa\
    \ et al. [224] for\nclose-proximity risk assessment for COVID infection). Accordingly,\
    \ most health institutions\nrecommend keeping physical distance between people\
    \ in public places (commonly termed\nas ”social distancing”) in order to stop\
    \ the pandemic from spreading. Furthermore, people\nwho were in the proximity\
    \ of an infected person (tested positive for COVID) are encouraged\nto be examined,\
    \ and several governmental regulations even require such people to stay in\nquarantine.\
    \ Several recent studies have suggested leveraging wearables for contact tracing\n\
    in order to identify the hazard from close proximity. For example, Ng et al. [225]\
    \ focus on\nBluetooth low energy and discuss the different data ﬂow approaches\
    \ and the accuracy of\nsmartphone vs. smartwatch applications in proximity detection.\
    \ Bian et al. [226] utilize\nwearables to monitor social distancing as recommended\
    \ for preventing COVID-19 spread.\nIn particular, the authors design compact potentially\
    \ wearable oscillating-magnetic-ﬁeld-\nbased proximity-sensing prototype systems\
    \ suitable for the relevant safety distance and able\nto track social distancing\
    \ much more reliably than the current Bluetooth-based smartphone\ntechnology.\
    \ Shubina et al. [227] provide a brief technical overview of the main contact-\n\
    tracing approaches and the challenges they impose on wearable technology. The\
    \ paper\nalso provides a short overview of the existing solutions deployed for\
    \ contact tracing and a\ndiscussion on the potential effect of wearables in tackling\
    \ the spread of a highly contagious\nvirus. More works from the past year discuss\
    \ the use of wearables for remote management\nand automated assessment of COVID-19.\
    \ Amft et al. [228] provide an overview of insti-\ntutional initiatives and alternative,\
    \ more accurate technologies for detection of infection\nsymptoms and possible\
    \ contact with infected individuals. Channa et al. [229] is a system-\nSensors\
    \ 2022, 22, 2650\n34 of 44\natic review of the two categories of challenges: on-body\
    \ sensors and their clinical utilization\nin screening and contact tracing.\n\
    7. Concluding Remarks\nData gathering in modern WSN and IoT networks encompasses\
    \ many challenges,\nwhich span the entire communication stack. Many techniques,\
    \ protocols, and solutions\nhave been proposed over the years, but as technology\
    \ advances, new challenges and new\nopportunities arise. In this survey, we reviewed\
    \ these main challenges and opportunities, as\nwell as recent advances, and related\
    \ them to speciﬁc data-gathering research domains. We\nprovided a comprehensive\
    \ state-of-the-art data-gathering literature review in modern WSN\nnetworks, distinguishing\
    \ between the communication layers and the research domain.\nWe ﬁrst summarized\
    \ general architectural novelties and emerging architectures. We\nreviewed several\
    \ new technological advances and their inﬂuence on sensing device design,\nthe\
    \ platform carrying it, and the transceiver. We reviewed the effect of these architectural\n\
    advantages on speciﬁc applications, such as agriculture, smart cities, smart homes.\
    \ We\nshowed how cloud computing drives new WSN types, which introduces new directions,\n\
    and discussed how WSN can coexist within social network domains. Compressed sensing\n\
    was summarized next. We provided an overview of this important scheme and reviewed\n\
    its utilization in WSNs. We proceeded with the MAC layer. Since the performance\
    \ of many\ninnovations in the higher layers rely on the underlay MAC protocol\
    \ and since many data\ngathering schemes utilize traditional WSN MAC protocols,\
    \ we provided an overview of\nthese traditional protocols and mentioned state-of-the-art\
    \ works in WSN and IoT. These\nworks devise new MAC approaches for data gathering.\
    \ Next, we covered the recent\nadvances in routing. Similarly, we opened with\
    \ an overview of the traditional routing\nprotocols utilized for data-gathering\
    \ and reviewed several recent enhancements. We\nreviewed the utilization of network\
    \ coding for data gathering and explored the facilitation\nof UAV and mobile-sink\
    \ in collecting the data from the sensors. Lastly, we turned our\nattention to\
    \ the area of wearables which opens new research horizons for human health and\n\
    activity surveillance and discussed the new paradigm of Wireless Body Area Networks.\
    \ In\nthe spirit of the times, we concluded with several studies that utilize\
    \ some of the techniques\ndiscussed in this survey to aid in combating the COVID\
    \ pandemic.\nWhile we provided the general background to the research areas we\
    \ covered, we\nmainly focused on cutting-edge research works. Yet we note that\
    \ even seemingly exhausted\ntopics, such as MAC and Routing protocols, provide\
    \ new technological developments and\npresent opportunities for new research domains.\n\
    As implied throughout this survey, there are several research areas that attract\
    \ a\nlot of attention and anticipation for future developments. For example, technological\n\
    innovations in manufacturing more compact sensing units with yet superior transmission,\n\
    reception and processing capabilities are extremely in demand in several disciplines\
    \ which\ninclude wearables, smart homes, IoT-related domains and others. All the\
    \ more so, this\nis relevant when dealing with healthcare applications and implants.\
    \ Such technological\ninnovations will require in turn enhancements to other domains\
    \ across the communication\nstack in order to adjust to the new opportunities\
    \ and limitations. Energy acquisition is\nstill a fruitful research domain. In\
    \ this respect, ﬁnding new sources of energy harvesting\n(EH), better utilization\
    \ of existing energy resources and energy storage are still challenging\nresearch\
    \ ﬁelds. Similarly, new EH methods impose multiple new challenges on the entire\n\
    protocol stack, which are correlated with the EH method, e.g., different EH methods\
    \ dictate\nconstraints on the MAC design, which in turn, impact the routing protocol\
    \ which affects\nthe performance end eventually the application utilizing the\
    \ infrastructure. The growth of\nsuch networks supporting a variety of heterogeneous\
    \ devices of communication standards\nand their increasing density requires more\
    \ effective data compression techniques and\nefﬁcient on-grid data analyses (i.e.,\
    \ even prior to data delivery to sinks). On the off-grid\nside of WSNs, we note\
    \ that consistent progress in Cloud Computing (CC) technology and\nexploitation\
    \ methodology will open new horizons in data analysis.\nSensors 2022, 22, 2650\n\
    35 of 44\nDeployment of Edge Computing units cooperating with sensing-capable\
    \ units will\nimply the development of novel data-gathering schemes. As WSN density\
    \ increases,\nchallenges in the gathering of useful data by WSN and its consequent\
    \ analysis will coincide\nwith those of Big Data. Clearly, the processes of such\
    \ analyses should be implemented\nwithin Cloud Computing systems. The fashion\
    \ of the CC physical resources deployed in\norder to efﬁciently interact with\
    \ WSN is not necessarily similar to those of usual IT-to-CC\nconnectivity. It\
    \ is not currently properly standardized and, most importantly, it is not\nclear\
    \ how correctly CC (e.g., which HW, correct deployment of Access Points) should\
    \ be\ncross-planned with a particular WSN. Issues of security and privacy which\
    \ are not covered\nin this survey will continue to elicit a major interest, especially\
    \ in keeping with evolving\nhealth care applications. The growth of the network\
    \ and their variability will require a\ngreater measure of adoption of ML and\
    \ AI methods and the development of such new\nspecialized methods for WSN in the\
    \ very near future.\nFunding: This research received no external funding.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nRawat,\
    \ P.; Singh, K.D.; Chaouchi, H.; Bonnin, J.M. Wireless sensor networks: A survey\
    \ on recent developments and potential\nsynergies. J. Supercomput. 2014, 68, 1–48.\
    \ [CrossRef]\n2.\nPeoples, C.; Rabbani, K.; Mamun, A.T.; Wang, B.; Morrow, P.;\
    \ Moore, A.; Rafferty, J.; Mcclean, S.; Zoualfaghari, M.H.;\nKulkarni, P. A Review\
    \ of IoT Service Provision to Assess the Potential for System Interoperability\
    \ in an Uncertain Ecosys-\ntem.\nIn Proceedings of the 2019 IEEE SmartWorld, Ubiquitous\
    \ Intelligence & Computing, Advanced & Trusted Comput-\ning, Scalable Computing\
    \ & Communications, Cloud & Big Data Computing, Internet of People and Smart City\
    \ Innovation\n(SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Leicester, UK, 19–23\
    \ August 2019; IEEE: Piscataway, NJ, USA, 2019;\npp. 1964–1971.\n3.\nAhad, M.A.;\
    \ Paiva, S.; Tripathi, G.; Feroz, N. Enabling technologies and sustainable smart\
    \ cities. Sustain. Cities Soc. 2020,\n61, 102301. [CrossRef]\n4.\nLai, C.S.; Jia,\
    \ Y.; Dong, Z.; Wang, D.; Tao, Y.; Lai, Q.H.; Wong, R.T.; Zobaa, A.F.; Wu, R.;\
    \ Lai, L.L. A review of technical standards\nfor smart cities. Clean Technol.\
    \ 2020, 2, 290–310. [CrossRef]\n5.\nZhang, Y.; Sun, L.; Song, H.; Cao, X. Ubiquitous\
    \ WSN for healthcare: Recent advances and future prospects. IEEE Internet Things\n\
    J. 2014, 1, 311–318. [CrossRef]\n6.\nHwang, Y.M.; Kim, M.G.; Rho, J.J. Understanding\
    \ Internet of things (IoT) diffusion: Focusing on value conﬁguration of RFID and\n\
    sensors in business cases (2008–2012). Inf. Dev. 2016, 32, 969–985. [CrossRef]\n\
    7.\nGhayvat, H.; Mukhopadhyay, S.; Gui, X.; Suryadevara, N. WSN-and IOT-based\
    \ smart homes and their extension to smart\nbuildings. Sensors 2015, 15, 10350–10379.\
    \ [CrossRef]\n8.\nFarooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey\
    \ on the Role of IoT in Agriculture for the Implementation of\nSmart Farming.\
    \ IEEE Access 2019, 7, 156237–156271. [CrossRef]\n9.\nBoursianis, A.D.; Papadopoulou,\
    \ M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.; Barouchas, P.; Salahas, G.; Karagiannidis,\n\
    G.; Wan, S.; Goudos, S.K. Internet of things (IoT) and agricultural unmanned aerial\
    \ vehicles (UAVs) in smart farming: A\ncomprehensive review. Internet Things 2020,\
    \ 100187. [CrossRef]\n10.\nUllo, S.L.; Sinha, G. Advances in smart environment\
    \ monitoring systems using IoT and sensors. Sensors 2020, 20, 3113. [CrossRef]\n\
    11.\nWerner-Allen, G.; Johnson, J.; Ruiz, M.; Lees, J.; Welsh, M. Monitoring volcanic\
    \ eruptions with a wireless sensor network. In\nProceedings of the Second European\
    \ Workshop on Wireless Sensor Networks, Istanbul, Turkey, 2 February 2005; IEEE:\
    \ Piscataway,\nNJ, USA, 2005; pp. 108–120.\n12.\nAlphonsa, A.; Ravi, G. Earthquake\
    \ early warning system by IOT using Wireless sensor networks. In Proceedings of\
    \ the 2016\nInternational Conference on Wireless Communications, Signal Processing\
    \ and Networking (WiSPNET), Chennai, India, 23–25\nMarch 2016; IEEE: Piscataway,\
    \ NJ, USA, 2016; pp. 1201–1205.\n13.\nLu, H.; Wang, D.; Li, Y.; Li, J.; Li, X.;\
    \ Kim, H.; Serikawa, S.; Humar, I. CONet: A cognitive ocean network. IEEE Wirel.\
    \ Commun.\n2019, 26, 90–96. [CrossRef]\n14.\nMourtzis, D.; Vlachou, E.; Milas,\
    \ N. Industrial big data as a result of IoT adoption in manufacturing.\nProcedia\
    \ Cirp 2016,\n55, 290–295. [CrossRef]\n15.\nBansal, M.; Chana, I.; Clarke, S.\
    \ A survey on iot big data: Current status, 13 v’s challenges, and future directions.\
    \ ACM Comput.\nSurv. 2020, 53, 1–59. [CrossRef]\n16.\nBoubiche, S.; Boubiche,\
    \ D.E.; Bilami, A.; Toral-Cruz, H. Big data challenges and data aggregation strategies\
    \ in wireless sensor\nnetworks. IEEE Access 2018, 6, 20558–20571. [CrossRef]\n\
    Sensors 2022, 22, 2650\n36 of 44\n17.\nKim, B.S.; Kim, K.I.; Shah, B.; Chow, F.;\
    \ Kim, K.H. Wireless sensor networks for big data systems.\nSensors 2019, 19,\
    \ 1565.\n[CrossRef]\n18.\nDash, S.K.; Mohapatra, S.; Pattnaik, P.K. A survey on\
    \ applications of wireless sensor network using cloud computing. Int. J.\nComput.\
    \ Sci. Emerg. Technol. 2010, 1, 50–55.\n19.\nAazam, M.; Khan, I.; Alsaffar, A.A.;\
    \ Huh, E.N. Cloud of Things: Integrating Internet of Things and cloud computing\
    \ and the\nissues involved. In Proceedings of the 2014 11th International Bhurban\
    \ Conference on Applied Sciences & Technology (IBCAST),\nIslamabad, Pakistan,\
    \ 14–18 January 2014; IEEE: Piscataway, NJ, USA, 2014; pp. 414–419.\n20.\nDwivedi,\
    \ R.K.; Kumar, R. Sensor cloud: Integrating wireless sensor networks with cloud\
    \ computing. In Proceedings of the\n2018 5th IEEE Uttar Pradesh Section International\
    \ Conference on Electrical, Electronics and Computer Engineering (UPCON),\nGorakhpur,\
    \ India, 2–4 November 2018 ; IEEE: Piscataway, NJ, USA, 2018; pp. 1–6.\n21.\n\
    Li, F.; Vögler, M.; Claeßens, M.; Dustdar, S. Efﬁcient and scalable IoT service\
    \ delivery on cloud. In Proceedings of the 2013 IEEE\nSixth International Conference\
    \ on Cloud Computing, Santa Clara, CA, USA, 28 June–3 July 2013 ; IEEE: Piscataway,\
    \ NJ, USA,\n2013; pp. 740–747.\n22.\nKamel, M.; Hamouda, W.; Youssef, A. Ultra-dense\
    \ networks: A survey. IEEE Commun. Surv. Tutor. 2016, 18, 2522–2545. [CrossRef]\n\
    23.\nTeng, Y.; Liu, M.; Yu, F.R.; Leung, V.C.; Song, M.; Zhang, Y. Resource allocation\
    \ for ultra-dense networks: A survey, some research\nissues and challenges. IEEE\
    \ Commun. Surv. Tutor. 2018, 21, 2134–2168. [CrossRef]\n24.\nStergiou, C.; Psannis,\
    \ K.E.; Kim, B.G.; Gupta, B. Secure integration of IoT and cloud computing. Future\
    \ Gener. Comput. Syst. 2018,\n78, 964–975. [CrossRef]\n25.\nBiswas, S.; Das, R.;\
    \ Chatterjee, P. Energy-efﬁcient connected target coverage in multi-hop wireless\
    \ sensor networks. In Industry\nInteractive Innovations in Science, Engineering\
    \ and Technology; Springer: Berlin/Heidelberg, Germany, 2018; pp. 411–421.\n26.\n\
    Ammari, H.M. Joint k-coverage and data gathering in sparsely deployed sensor networks–Impact\
    \ of purposeful mobility and\nheterogeneity. ACM Trans. Sens. Netw. 2013, 10,\
    \ 1–33. [CrossRef]\n27.\nMdemaya, G.B.J.; Bomgni, A.B. A2CDC: Area Coverage, Connectivity\
    \ and Data Collection in wireless sensor networks. Netw.\nProtoc. Algorithms 2018,\
    \ 10, 20–34.\n28.\nBoukerche, A.; Sun, P. Connectivity and coverage based protocols\
    \ for wireless sensor networks. Ad Hoc Netw. 2018, 80, 54–69.\n[CrossRef]\n29.\n\
    Cerchecci, M.; Luti, F.; Mecocci, A.; Parrino, S.; Peruzzi, G.; Pozzebon, A. A\
    \ low power IoT sensor node architecture for waste\nmanagement within smart cities\
    \ context. Sensors 2018, 18, 1282. [CrossRef] [PubMed]\n30.\nTeixidó, P.; Gómez-Galán,\
    \ J.A.; Gómez-Bravo, F.; Sánchez-Rodríguez, T.; Alcina, J.; Aponte, J. Low-power\
    \ low-cost wireless ﬂood\nsensor for smart home systems. Sensors 2018, 18, 3817.\
    \ [CrossRef] [PubMed]\n31.\nBorrero, J.D.; Zabalo, A. An autonomous wireless device\
    \ for real-time monitoring of water needs.\nSensors 2020, 20, 2078.\n[CrossRef]\n\
    32.\nVullers, R.J.; Van Schaijk, R.; Visser, H.J.; Penders, J.; Van Hoof, C. Energy\
    \ harvesting for autonomous wireless sensor networks.\nIEEE Solid-State Circuits\
    \ Mag. 2010, 2, 29–38. [CrossRef]\n33.\nPrasad, R.V.; Devasenapathy, S.; Rao,\
    \ V.S.; Vazifehdan, J. Reincarnation in the ambiance: Devices and networks with\
    \ energy\nharvesting. IEEE Commun. Surv. Tutor. 2013, 16, 195–213. [CrossRef]\n\
    34.\nKu, M.L.; Li, W.; Chen, Y.; Liu, K.R. Advances in energy harvesting communications:\
    \ Past, present, and future challenges. IEEE\nCommun. Surv. Tutor. 2015, 18, 1384–1412.\
    \ [CrossRef]\n35.\nShaikh, F.K.; Zeadally, S. Energy harvesting in wireless sensor\
    \ networks: A comprehensive review. Renew. Sustain. Energy Rev.\n2016, 55, 1041–1054.\
    \ [CrossRef]\n36.\nPerera, T.D.P.; Jayakody, D.N.K.; Sharma, S.K.; Chatzinotas,\
    \ S.; Li, J. Simultaneous wireless information and power transfer\n(SWIPT): Recent\
    \ advances and future challenges. IEEE Commun. Surv. Tutor. 2017, 20, 264–302.\
    \ [CrossRef]\n37.\nPrauzek, M.; Konecny, J.; Borova, M.; Janosova, K.; Hlavica,\
    \ J.; Musilek, P. Energy harvesting sources, storage devices and system\ntopologies\
    \ for environmental wireless sensor networks: A review. Sensors 2018, 18, 2446.\
    \ [CrossRef] [PubMed]\n38.\nKanoun, O.; Bradai, S.; Khriji, S.; Bouattour, G.;\
    \ El Houssaini, D.; Ben Ammar, M.; Naifar, S.; Bouhamed, A.; Derbel, F.; Viehweger,\n\
    C. Energy-aware system design for autonomous wireless sensor nodes: A comprehensive\
    \ review. Sensors 2021, 21, 548. [CrossRef]\n[PubMed]\n39.\nKhalid, N.; Mirzavand,\
    \ R.; Saghlatoon, H.; Honari, M.M.; Mousavi, P. A three-port zero-power RFID sensor\
    \ architecture for IoT\napplications. IEEE Access 2020, 8, 66888–66897. [CrossRef]\n\
    40.\nAbella, C.S.; Bonina, S.; Cucuccio, A.; D’Angelo, S.; Giustolisi, G.; Grasso,\
    \ A.D.; Imbruglia, A.; Mauro, G.S.; Nastasi, G.A.;\nPalumbo, G.; et al. Autonomous\
    \ energy-efﬁcient wireless sensor network platform for home/ofﬁce automation.\
    \ IEEE Sens. J.\n2019, 19, 3501–3512. [CrossRef]\n41.\nLee, W.K.; Schubert, M.J.;\
    \ Ooi, B.Y.; Ho, S.J.Q. Multi-source energy harvesting and storage for ﬂoating\
    \ wireless sensor network\nnodes with long range communication capability. IEEE\
    \ Trans. Ind. Appl. 2018, 54, 2606–2615. [CrossRef]\n42.\nJoris, L.; Dupont, F.;\
    \ Laurent, P.; Bellier, P.; Stoukatch, S.; Redouté, J.M. An autonomous sigfox\
    \ wireless sensor node for\nenvironmental monitoring. IEEE Sens. Lett. 2019, 3,\
    \ 1–4. [CrossRef]\n43.\nDevadas, T.J.; Thayammal, S.; Ramprakash, A. IoT Data\
    \ Management, Data Aggregation and Dissemination. In Principles of\nInternet of\
    \ Things (IoT) Ecosystem: Insight Paradigm; Springer: Berlin/Heidelberg, Germany,\
    \ 2020; pp. 385–411.\nSensors 2022, 22, 2650\n37 of 44\n44.\nZhu, C.; Leung, V.C.;\
    \ Rodrigues, J.J.; Shu, L.; Wang, L.; Zhou, H. Social sensor cloud: Framework,\
    \ greenness, issues, and outlook.\nIEEE Netw. 2018, 32, 100–105. [CrossRef]\n\
    45.\nDinh, T.; Kim, Y. An efﬁcient interactive model for on-demand sensing-as-a-servicesof\
    \ sensor-cloud. Sensors 2016, 16, 992.\n[CrossRef] [PubMed]\n46.\nZhu, C.; Shu,\
    \ L.; Leung, V.C.; Guo, S.; Zhang, Y.; Yang, L.T. Secure multimedia big data in\
    \ trust-assisted sensor-cloud for smart\ncity. IEEE Commun. Mag. 2017, 55, 24–30.\
    \ [CrossRef]\n47.\nKuo, Y.W.; Li, C.L.; Jhang, J.H.; Lin, S. Design of a wireless\
    \ sensor network-based IoT platform for wide area and heterogeneous\napplications.\
    \ IEEE Sens. J. 2018, 18, 5187–5197. [CrossRef]\n48.\nSatyanarayanan, M. The emergence\
    \ of edge computing. Computer 2017, 50, 30–39. [CrossRef]\n49.\nAbdelwahab, S.;\
    \ Hamdaoui, B.; Guizani, M.; Znati, T. Cloud of things for sensing-as-a-service:\
    \ Architecture, algorithms, and use\ncase. IEEE Internet Things J. 2016, 3, 1099–1112.\
    \ [CrossRef]\n50.\nPopescu, D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana,\
    \ C. Advanced UAV–WSN System for Intelligent Monitoring in\nPrecision Agriculture.\
    \ Sensors 2020, 20, 817. [CrossRef] [PubMed]\n51.\nDatta, S.K.; Bonnet, C.; Da\
    \ Costa, R.P.F.; Härri, J. Datatweet: An architecture enabling data-centric iot\
    \ services. In Proceedings of\nthe 2016 IEEE Region 10 Symposium (TENSYMP), Bali,\
    \ Indonesia, 9–11 May 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 343–348.\n52.\n\
    Ayele, E.D.; Meratnia, N.; Havinga, P.J. MANER: Managed data dissemination scheme\
    \ for LoRa IoT enabled wildlife monitoring\nsystem (WMS). In Proceedings of the\
    \ 2018 9th IFIP International Conference on New Technologies, Mobility and Security\
    \ (NTMS),\nParis, France, 26–28 February 2018; IEEE: Piscataway, NJ, USA, 2018;\
    \ pp. 1–7.\n53.\nJuang, P.; Oki, H.; Wang, Y.; Martonosi, M.; Peh, L.S.; Rubenstein,\
    \ D. Energy-efﬁcient computing for wildlife tracking: Design\ntradeoffs and early\
    \ experiences with ZebraNet. In Proceedings of the 10th International Conference\
    \ on Architectural Support for\nProgramming Languages and Operating Systems, San\
    \ Jose, CA, USA, 5–9 October 2002; pp. 96–107.\n54.\nSaleh, N.; Kassem, A.; Haidar,\
    \ A.M. Energy-efﬁcient architecture for wireless sensor networks in healthcare\
    \ applications. IEEE\nAccess 2018, 6, 6478–6486. [CrossRef]\n55.\nAlsina-Pagès,\
    \ R.M.; Navarro, J.; Alías, F.; Hervás, M. homesound: Real-time audio event detection\
    \ based on high performance\ncomputing for behaviour and surveillance remote monitoring.\
    \ Sensors 2017, 17, 854. [CrossRef] [PubMed]\n56.\nAbeBer, J.; Gotze, M.; Kuhnlenz,\
    \ S.; Grafe, R.; Kuhn, C.; ClauB, T.; Lukashevich, H. A distributed sensor network\
    \ for monitoring\nnoise level and noise sources in urban environments. In Proceedings\
    \ of the 2018 IEEE 6th International Conference on Future\nInternet of Things\
    \ and Cloud (FiCloud), Barcelona, Spain, 6–8 August 2018; IEEE: Piscataway, NJ,\
    \ USA, 2018; pp. 318–324.\n57.\nSiamwala, A.; Lochhead, Z.; Abdulla, W. Environmental\
    \ noise monitoring using distributed IoT sensor nodes. In Proceedings of\nthe\
    \ 2019 International Conference on Electronics, Information, and Communication\
    \ (ICEIC), Auckland, New Zealand, 22–25\nJanuary 2019; IEEE: Piscataway, NJ, USA,\
    \ 2019; pp. 1–10.\n58.\nBalouchestani, M.; Raahemifar, K.; Krishnan, S. Compressed\
    \ sensing in wireless sensor networks: Survey. Can. J. Multimed. Wirel.\nNetw.\
    \ 2011, 2, 1–4.\n59.\nDonoho, D.L. Compressed sensing. IEEE Trans. Inf. Theory\
    \ 2006, 52, 1289–1306. [CrossRef]\n60.\nFeizi, S.; Médard, M.; Effros, M. Compressive\
    \ sensing over networks. In Proceedings of the 2010 48th Annual Allerton Conference\n\
    on Communication, Control, and Computing (Allerton), Monticello, IL, USA, 29 September–1\
    \ October 2010; IEEE: Piscataway, NJ,\nUSA, 2010; pp. 1129–1136.\n61.\nLuo, C.;\
    \ Wu, F.; Sun, J.; Chen, C.W. Compressive data gathering for large-scale wireless\
    \ sensor networks. In Proceedings of the\n15th Annual International Conference\
    \ on Mobile Computing and Networking (MobiCom), Beijing, China, 20–25 September\
    \ 2009;\npp. 145–156.\n62.\nLuo, C.; Wu, F.; Sun, J.; Chen, C.W. Efﬁcient measurement\
    \ generation and pervasive sparsity for compressive data gathering.\nIEEE Trans.\
    \ Wirel. Commun. 2010, 9, 3728–3738. [CrossRef]\n63.\nWang, J.; Tang, S.; Yin,\
    \ B.; Li, X.Y. Data gathering in wireless sensor networks through intelligent\
    \ compressive sensing. In\nProceedings of the IEEE International Conference on\
    \ Computer Communications (INFOCOM), Orlando, FL, USA, 25–30 March\n2012; pp.\
    \ 603–611.\n64.\nXu, L.; Qi, X.; Wang, Y.; Moscibroda, T. Efﬁcient data gathering\
    \ using compressed sparse functions. In Proceedings of the IEEE\nInternational\
    \ Conference on Computer Communications (INFOCOM), Turin, Italy, 14–19 April 2013\
    \ ; pp. 310–314.\n65.\nLi, S.; Da Xu, L.; Wang, X. Compressed sensing signal and\
    \ data acquisition in wireless sensor networks and Internet of things.\nIEEE Trans.\
    \ Ind. Inform. 2012, 9, 2177–2186. [CrossRef]\n66.\nDhanapala, D.C.; Bandara,\
    \ V.W.; Pezeshki, A.; Jayasumana, A.P. Phenomena discovery in WSNs: A compressive\
    \ sensing based\napproach. In Proceedings of the IEEE International Conference\
    \ on Communications (ICC), Budapest, Hungary, 9–13 June 2013;\npp. 1851–1856.\n\
    67.\nZheng, H.; Yang, F.; Tian, X.; Gan, X.; Wang, X.; Xiao, S. Data Gathering\
    \ with Compressive Sensing in Wireless Sensor Networks:\nA Random Walk Based Approach.\
    \ IEEE Trans. Parallel Distrib. Syst. 2015, 26, 35–44. [CrossRef]\n68.\nZheng,\
    \ H.; Xiao, S.; Wang, X.; Tian, X. Energy and latency analysis for in-network\
    \ computation with compressive sensing in\nwireless sensor networks. In Proceedings\
    \ of the IEEE International Conference on Computer Communications (INFOCOM),\n\
    Orlando, FL, USA, 25–30 March 2012; pp. 2811–2815.\n69.\nXu, X.; Ansari, R.; Khokhar,\
    \ A.; Vasilakos, A. Hierarchical data aggregation using compressive sensing (HDACS)\
    \ in WSNs. ACM\nTrans. Sens. Netw. 2015, 11, 1–25. [CrossRef]\nSensors 2022, 22,\
    \ 2650\n38 of 44\n70.\nLan, K.; Wei, M. A Compressibility-Based Clustering Algorithm\
    \ for Hierarchical Compressive Data Gathering. IEEE Sens. J. 2017,\n17, 2550–2562.\
    \ [CrossRef]\n71.\nWu, X.; Xiong, Y.; Yang, P.; Wan, S.; Huang, W. Sparsest Random\
    \ Scheduling for Compressive Data Gathering in Wireless Sensor\nNetworks. IEEE\
    \ Trans. Wirel. Commun. 2014, 13, 5867–5877. [CrossRef]\n72.\nYin, J.; Yang, Y.;\
    \ Wang, L. An Adaptive Data Gathering Scheme for Multi-Hop Wireless Sensor Networks\
    \ Based on Compressed\nSensing and Network Coding. Sensors 2016, 16, 462. [CrossRef]\
    \ [PubMed]\n73.\nXu, W.; Mallada, E.; Tang, A. Compressive sensing over graphs.\n\
    In Proceedings of the IEEE International Conference on\nComputer Communications\
    \ (INFOCOM), Shanghai, China, 10–15 April 2011; pp. 2087–2095.\n74.\nZheng, H.;\
    \ Xiao, S.; Wang, X.; Tian, X.; Guizani, M. Capacity and Delay Analysis for Data\
    \ Gathering with Compressive Sensing in\nWireless Sensor Networks. IEEE Trans.\
    \ Wirel. Commun. 2013, 12, 917–927. [CrossRef]\n75.\nAkyildiz, I.F.; Vuran, M.C.\
    \ Wireless Sensor Networks; John Wiley & Sons: Hoboken, NJ, USA, 2010; Volume\
    \ 4.\n76.\nKumar, A.; Zhao, M.; Wong, K.J.; Guan, Y.L.; Chong, P.H.J. A comprehensive\
    \ study of iot and wsn mac protocols: Research issues,\nchallenges and opportunities.\
    \ IEEE Access 2018, 6, 76228–76262. [CrossRef]\n77.\nQuintero, V.L.; Estevez,\
    \ C.; Orchard, M.E.; Pérez, A. Improvements of energy-efﬁcient techniques in WSNs:\
    \ A MAC-protocol\napproach. IEEE Commun. Surv. Tutor. 2018, 21, 1188–1208. [CrossRef]\n\
    78.\nYe, W.; Heidemann, J.; Estrin, D. An energy-efﬁcient MAC protocol for wireless\
    \ sensor networks.\nIn Proceedings of the\nTwenty-First Annual Joint Conference\
    \ of the IEEE Computer and Communications Societies, New York, NY, USA, 23–27\
    \ June\n2002; IEEE: Piscataway, NJ, USA, 2002; Volume 3, pp. 1567–1576.\n79.\n\
    Van Dam, T.; Langendoen, K. An adaptive energy-efﬁcient MAC protocol for wireless\
    \ sensor networks. In Proceedings of the\n1st International Conference on Embedded\
    \ Networked Sensor Systems (SenSys), Los Angeles, CA, USA, 5–7 November 2003 ;\n\
    pp. 171–180.\n80.\nSun, Y.; Du, S.; Gurewitz, O.; Johnson, D.B. DW-MAC: A low\
    \ latency, energy efﬁcient demand-wakeup MAC protocol for wireless\nsensor networks.\
    \ In Proceedings of the 9th ACM International Symposium on Mobile Ad Hoc Networking\
    \ and Computing,\nHong Kong, China, 26–30 May 2008; pp. 53–62.\n81.\nPolastre,\
    \ J.; Hill, J.; Culler, D. Versatile low power media access for wireless sensor\
    \ networks. In Proceedings of the 2nd Interna-\ntional Conference on Embedded\
    \ Networked Sensor Systems (SenSys), Baltimore, MD, USA, 3–5 November 2004; pp.\
    \ 95–107.\n82.\nBuettner, M.; Yee, G.V.; Anderson, E.; Han, R. X-MAC: A short\
    \ preamble MAC protocol for duty-cycled wireless sensor networks.\nIn Proceedings\
    \ of the 4th International Conference on Embedded Networked Sensor Systems (SenSys),\
    \ Boulder, CO, USA,\n31 October–3 November 2006; pp. 307–320.\n83.\nEl-Hoiydi,\
    \ A.; Decotignie, J.D. WiseMAC: An ultra low power MAC protocol for the downlink\
    \ of infrastructure wireless sensor\nnetworks. In Proceedings of the ISCC 2004.\
    \ Ninth International Symposium on Computers And Communications (IEEE Cat.\nNo.\
    \ 04TH8769), Alexandria, Egypt, 28–31 July 2004; IEEE: Piscataway, NJ, USA, 2004;\
    \ Volume 1, pp. 244–251.\n84.\nSun, Y.; Gurewitz, O.; Johnson, D.B. RI-MAC: A\
    \ receiver-initiated asynchronous duty cycle MAC protocol for dynamic trafﬁc\n\
    loads in wireless sensor networks. In Proceedings of the 6th ACM Conference on\
    \ Embedded Network Sensor Systems (SenSys),\nRaleigh, NC, USA, 5–7 November 2008;\
    \ pp. 1–14.\n85.\nTang, L.; Sun, Y.; Gurewitz, O.; Johnson, D.B. PW-MAC: An energy-efﬁcient\
    \ predictive-wakeup MAC protocol for wireless sensor\nnetworks. In Proceedings\
    \ of the IEEE Conference on Computer Communications (INFOCOM), Shanghai, China,\
    \ 10–15 April\n2011; pp. 1305–1313.\n86.\nZhang, D.g.; Zhou, S.; Tang, Y.m. A\
    \ low duty cycle efﬁcient MAC protocol based on self-adaption and predictive strategy.\
    \ Mob.\nNetw. Appl. 2018, 23, 828–839. [CrossRef]\n87.\nDutta, P.; Dawson-Haggerty,\
    \ S.; Chen, Y.; Liang, C.J.M.; Terzis, A. A-MAC: A versatile and efﬁcient receiver-initiated\
    \ link layer\nfor low-power wireless. ACM Trans. Sens. Netw. 2012, 8, 1–29. [CrossRef]\n\
    88.\nWymore, M.L.; Qiao, D. RIVER-MAC: A Receiver-Initiated Asynchronously Duty-Cycled\
    \ MAC Protocol for the Internet of\nThings. In Proceedings of the IEEE 43rd Annual\
    \ Computer Software and Applications Conference (COMPSAC), Milwaukee, WI,\nUSA,\
    \ 15–19 July 2019; Volume 1, pp. 860–869.\n89.\nGurewitz, O.; Zaharia, O. Collision\
    \ Prevention for Duty-Cycle Receiver-Initiation MAC Protocol via Multiple Access\
    \ Reservation\n(MAR-RiMAC). Sensors 2021, 21, 127. [CrossRef] [PubMed]\n90.\n\
    Liu, H.I.; He, W.J.; Seah, W.K. LEB-MAC: Load and energy balancing MAC protocol\
    \ for energy harvesting powered wireless\nsensor networks. In Proceedings of the\
    \ 2014 20th IEEE International Conference on Parallel and Distributed Systems\
    \ (ICPADS),\nHsinchu, Taiwan, 16–19 December 2014; IEEE: Piscataway, NJ, USA,\
    \ 2014; pp. 584–591.\n91.\nKhalil, M.I.; Hossain, M.A.; Ahmed, I. DURI-MAC: A\
    \ dual channel receiver initiated MAC protocol for wireless sensor network\n(WSN).\
    \ In Proceedings of the International Conference on Electrical, Computer and Communication\
    \ Engineering (ECCE), Cox’s\nBazar, Bangladesh, 16–18 February 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 577–582.\n92.\nTang, L.; Sun, Y.; Gurewitz, O.; Johnson,\
    \ D.B. EM-MAC: A dynamic multichannel energy-efﬁcient MAC protocol for wireless\n\
    sensor networks. In Proceedings of the Twelfth ACM International Symposium on\
    \ Mobile Ad Hoc Networking and Computing\n(MobiHoc), Paris, France, 17–19 May\
    \ 2011; pp. 1–11.\n93.\nYe, D.; Zhang, M. A self-adaptive sleep/wake-up scheduling\
    \ approach for wireless sensor networks. IEEE Trans. Cybern. 2017,\n48, 979–992.\
    \ [CrossRef]\nSensors 2022, 22, 2650\n39 of 44\n94.\nGamm, G.U.; Sippel, M.; Kostic,\
    \ M.; Reindl, L.M. Low power wake-up receiver for wireless sensor nodes. In Proceedings\
    \ of the\nIEEE Sixth International Conference on Intelligent Sensors, Sensor Networks\
    \ and Information Processing (ISSNIP), Brisbane,\nAustralia, 7–10 December 2010;\
    \ pp. 121–126.\n95.\nOller, J.; Demirkol, I.; Casademont, J.; Paradells, J.; Gamm,\
    \ G.U.; Reindl, L. Performance evaluation and comparative analysis of\nsubcarrier\
    \ modulation wake-up radio systems for energy-efﬁcient wireless sensor networks.\
    \ Sensors 2014, 14, 22–51. [CrossRef]\n[PubMed]\n96.\nOller, J.; Demirkol, I.;\
    \ Casademont, J.; Paradells, J.; Gamm, G.U.; Reindl, L. Has time come to switch\
    \ from duty-cycled MAC\nprotocols to wake-up radio for wireless sensor networks?\
    \ IEEE/ACM Trans. Netw. 2015, 24, 674–687. [CrossRef]\n97.\nSpenza, D.; Magno,\
    \ M.; Basagni, S.; Benini, L.; Paoli, M.; Petrioli, C. Beyond duty cycling: Wake-up\
    \ radio with selective\nawakenings for long-lived wireless sensing systems. In\
    \ Proceedings of the IEEE Conference on Computer Communications\n(INFOCOM), Hong\
    \ Kong, China, 26 April–1 May 2015; pp. 522–530.\n98.\nGhose, D.; Li, F.Y. Enabling\
    \ backoff for SCM wake-up radio: Protocol and modeling. IEEE Commun. Lett. 2017,\
    \ 21, 1031–1034.\n[CrossRef]\n99.\nGhose, D.; Frøytlog, A.; Li, F.Y. Enabling\
    \ early sleeping and early data transmission in wake-up radio-enabled IoT networks.\n\
    Comput. Netw. 2019, 153, 132–144. [CrossRef]\n100. Guntupalli, L.; Ghose, D.;\
    \ Li, F.Y.; Gidlund, M. Energy efﬁcient consecutive packet transmissions in receiver-initiated\
    \ wake-up\nradio enabled wsns. IEEE Sens. J. 2018, 18, 4733–4745. [CrossRef]\n\
    101. Singh, R.; Sikdar, B. A Receiver Initiated Low Delay MAC Protocol for Wake-Up\
    \ Radio Enabled Wireless Sensor Networks. IEEE\nSens. J. 2020, 20, 13796–13807.\
    \ [CrossRef]\n102. Hawa, M.; Darabkh, K.A.; Al-Zubi, R.; Al-Sukkar, G. A self-learning\
    \ MAC protocol for energy harvesting and spectrum access in\ncognitive radio sensor\
    \ networks. J. Sens. 2016, 2016, 9604526. [CrossRef]\n103. Cohen, A.; Cohen, A.;\
    \ Gurewitz, O. Efﬁcient data collection over multiple access wireless sensors\
    \ network. IEEE/ACM Trans.\nNetw. 2020, 28, 491–504. [CrossRef]\n104. Tong, F.;\
    \ Peng, Y. A Data-Gathering, Dynamic Duty-Cycling MAC Protocol for Large-Scale\
    \ Wireless Sensor Networks. Sensors\n2020, 20, 4071. [CrossRef] [PubMed]\n105.\
    \ Heinzelman, W.R.; Chandrakasan, A.; Balakrishnan, H. Energy-efﬁcient communication\
    \ protocol for wireless microsensor\nnetworks. In Proceedings of the 33rd Annual\
    \ Hawaii International Conference on System Sciences, Maui, HI, USA, 7 January\n\
    2000; IEEE: Piscataway, NJ, USA, 2000; p. 10.\n106. Arumugam, G.S.; Ponnuchamy,\
    \ T. EE-LEACH: Development of energy-efﬁcient LEACH Protocol for data gathering\
    \ in WSN.\nEURASIP J. Wirel. Commun. Netw. 2015, 2015, 1–9. [CrossRef]\n107. Singh,\
    \ S.K.; Kumar, P.; Singh, J.P. A survey on successors of LEACH protocol. IEEE\
    \ Access 2017, 5, 4298–4328. [CrossRef]\n108. Anzola, J.; Pascual, J.; Tarazona,\
    \ G.; Gonzalez Crespo, R. A clustering WSN routing protocol based on kd tree algorithm.\
    \ Sensors\n2018, 18, 2899. [CrossRef] [PubMed]\n109. Lindsey, S.; Raghavendra,\
    \ C.; Sivalingam, K.M. Data gathering algorithms in sensor networks using energy\
    \ metrics. IEEE Trans.\nParallel Distrib. Syst. 2002, 13, 924–935. [CrossRef]\n\
    110. Razaque, A.; Abdulgader, M.; Joshi, C.; Amsaad, F.; Chauhan, M. P-LEACH:\
    \ Energy efﬁcient routing protocol for Wireless Sensor\nNetworks. In Proceedings\
    \ of the 2016 IEEE Long Island Systems, Applications and Technology Conference\
    \ (LISAT), Farmingdale,\nNY, USA, 29–29 April 2016; IEEE: Piscataway, NJ, USA,\
    \ 2016; pp. 1–5.\n111. Siew, Z.W.; Wong, C.H.; Chin, C.S.; Kiring, A.; Teo, K.T.K.\
    \ Cluster heads distribution of wireless sensor networks via adaptive\nparticle\
    \ swarm optimization.\nIn Proceedings of the 2012 Fourth International Conference\
    \ on Computational Intelligence,\nCommunication Systems and Networks, Phuket,\
    \ Thailand, 24–26 July 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 78–83.\n112.\
    \ Tam, N.T.; Hai, D.T.; Son, L.H.; Vinh, L.T. Improving lifetime and network connections\
    \ of 3D wireless sensor networks based on\nfuzzy clustering and particle swarm\
    \ optimization. Wirel. Netw. 2018, 24, 1477–1490. [CrossRef]\n113. Cui, Z.; Cao,\
    \ Y.; Cai, X.; Cai, J.; Chen, J. Optimal LEACH protocol with modiﬁed bat algorithm\
    \ for big data sensing systems in\nInternet of Things. J. Parallel Distrib. Comput.\
    \ 2019, 132, 217–229. [CrossRef]\n114. Jiang, A.; Zheng, L. An effective hybrid\
    \ routing algorithm in WSN: Ant colony optimization in combination with hop count\n\
    minimization. Sensors 2018, 18, 1020. [CrossRef]\n115. Rodríguez, A.; Del-Valle-Soto,\
    \ C.; Velázquez, R. Energy-Efﬁcient Clustering Routing Protocol for Wireless Sensor\
    \ Networks\nBased on Yellow Saddle Goatﬁsh Algorithm. Mathematics 2020, 8, 1515.\
    \ [CrossRef]\n116. Karunanithy, K.; Velusamy, B. Cluster-tree based energy efﬁcient\
    \ data gathering protocol for industrial automation using WSNs\nand IoT. J. Ind.\
    \ Inf. Integr. 2020, 19, 100156. [CrossRef]\n117. Mehmood, A.; Lv, Z.; Lloret,\
    \ J.; Umar, M.M. ELDC: An artiﬁcial neural network based energy-efﬁcient and robust\
    \ routing scheme\nfor pollution monitoring in WSNs. IEEE Trans. Emerg. Top. Comput.\
    \ 2017, 8, 106–114. [CrossRef]\n118. Durairaj, U.M.; Selvaraj, S. Two-Level Clustering\
    \ and Routing Algorithms to Prolong the Lifetime of Wind Farm-Based WSN.\nIEEE\
    \ Sens. J. 2020, 21, 857–867. [CrossRef]\n119. Shifrin, M.; Cidon, I. C3: Collective\
    \ congestion control in multi-hop wireless networks. In Proceedings of the 2010\
    \ Seventh\nInternational Conference on Wireless On-demand Network Systems and\
    \ Services (WONS), Kranjska Gora, Slovenia, 3–5 February\n2010; IEEE: Piscataway,\
    \ NJ, USA, 2010; pp. 31–38.\nSensors 2022, 22, 2650\n40 of 44\n120. Biswas, S.;\
    \ Morris, R. ExOR: Opportunistic multi-hop routing for wireless networks. In Proceedings\
    \ of the 2005 Conference on\nApplications, Technologies, Architectures, and Protocols\
    \ for Computer Communications, Philadelphia, PA, USA, 22–26 August\n2005; pp.\
    \ 133–144.\n121. Ye, Z.; Hua, Y. On link layer policies of data forwarding over\
    \ wireless relays. In Proceedings of the MILCOM 2005—2005\nIEEE Military Communications\
    \ Conference, Atlantic City, NJ, USA, 17–20 October 2005; IEEE: Piscataway, NJ,\
    \ USA, 2005;\npp. 2138–2144.\n122. Landsiedel, O.; Ghadimi, E.; Duquennoy, S.;\
    \ Johansson, M. Low power, low delay: Opportunistic routing meets duty cycling.\
    \ In\nProceedings of the 2012 ACM/IEEE 11th International Conference on Information\
    \ Processing in Sensor Networks (IPSN), Beijing,\nChina, 16–20 April 2012; IEEE:\
    \ Piscataway, NJ, USA, 2012; pp. 185–196.\n123. Tang, L.; Sun, Y.; Gurewitz, O.;\
    \ Johnson, D.B. Optimizations for route discovery in asynchronous duty-cycling\
    \ wireless networks.\nIn Proceedings of the 2012 IEEE 9th International Conference\
    \ on Mobile Ad-Hoc and Sensor Systems (MASS 2012), Las Vegas,\nNV, USA, 8–11 October\
    \ 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 155–163.\n124. Liu, D.; Hou, M.;\
    \ Cao, Z.; Wang, J.; He, Y.; Liu, Y. Duplicate detectable opportunistic forwarding\
    \ in duty-cycled wireless sensor\nnetworks. IEEE/ACM Trans. Netw. 2015, 24, 662–673.\
    \ [CrossRef]\n125. Hawbani, A.; Wang, X.; Sharabi, Y.; Ghannami, A.; Kuhlani,\
    \ H.; Karmoshi, S. LORA: Load-balanced opportunistic routing for\nasynchronous\
    \ duty-cycled WSN. IEEE Trans. Mob. Comput. 2018, 18, 1601–1615. [CrossRef]\n\
    126. Winter, T.; Thubert, P.; Brandt, A.; Hui, J.W.; Kelsey, R.; Levis, P.; Pister,\
    \ K.; Struik, R.; Vasseur, J.P.; Alexander, R.K.; et al. RPL:\nIPv6 Routing Protocol\
    \ for Low-Power and Lossy Networks. RFC 2012, 6550, 1–157.\n127. Thubert, P. Objective\
    \ function zero for the routing protocol for low-power and lossy networks (RPL).\
    \ RFC 2012, 6552, 1–14.\n128. Gnawali, O.; Levis, P. The minimum rank with hysteresis\
    \ objective function. RFC 2012, 6719, 1–13.\n129. Abdel Hakeem, S.A.; Hady, A.A.;\
    \ Kim, H. RPL routing protocol performance in smart grid applications based wireless\
    \ sensors:\nExperimental and simulated analysis. Electronics 2019, 8, 186. [CrossRef]\n\
    130. Barnawi, A.Y.; Mohsen, G.A.; Shahra, E.Q. Performance analysis of RPL protocol\
    \ for data gathering applications in wireless\nsensor networks. Procedia Comput.\
    \ Sci. 2019, 151, 185–193. [CrossRef]\n131. Al-Shargabi, B.; Aleswid, M. Performance\
    \ of RPL in Healthcare Wireless Sensor Network. Int. J. Emerg. Trends Eng. Res.\
    \ 2020, 8, 3.\n[CrossRef]\n132. Sousa, N.; Sobral, J.V.; Rodrigues, J.J.; Rabêlo,\
    \ R.A.; Solic, P. ERAOF: A new RPL protocol objective function for Internet of\n\
    Things applications. In Proceedings of the 2017 2nd International Multidisciplinary\
    \ Conference on Computer and Energy Science\n(SpliTech), Split, Croatia, 12–14\
    \ July 2017; IEEE: Piscataway, NJ, USA, 2017; pp. 1–5.\n133. Rafea, S.A.; Kadhim,\
    \ A.A. Routing with energy threshold for WSN-IoT based on RPL protocol. Iraqi\
    \ J. Comput. Commun. Control\nSyst. Eng. 2019, 19, 71–81.\n134. Sharma, B.; Gajrani,\
    \ J.; Jain, V. Performance Measurement of RPL Protocol Using Modiﬁed MRHOF in\
    \ IoT Network.\nIn\nProceedings of the International Conference on Deep Learning,\
    \ Artiﬁcial Intelligence and Robotics, Jaipur, India, 7–8 December\n2019; Springer:\
    \ Berlin/Heidelberg, Germany, 2019; pp. 235–245.\n135. Sankar, S.; Ramasubbareddy,\
    \ S.; Luhach, A.K.; Nayyar, A.; Qureshi, B. CT-RPL: Cluster tree based routing\
    \ protocol to maximize\nthe lifetime of Internet of Things. Sensors 2020, 20,\
    \ 5858. [CrossRef] [PubMed]\n136. Acevedo, P.D.; Jabba, D.; Sanmartín, P.; Valle,\
    \ S.; Nino-Ruiz, E.D. WRF-RPL: Weighted Random Forward RPL for High Trafﬁc and\n\
    Energy Demanding Scenarios. IEEE Access 2021, 9, 60163–60174. [CrossRef]\n137.\
    \ Rojas, E.; Hosseini, H.; Gomez, C.; Carrascal, D.; Cotrim, J.R. Outperforming\
    \ RPL with scalable routing based on meaningful\nMAC addressing. Ad Hoc Netw.\
    \ 2021, 114, 102433. [CrossRef]\n138. Molnár, M. QoS Routing for Data Gathering\
    \ with RPL in WSNs. In Handbook of Wireless Sensor Networks: Issues and Challenges\
    \ in\nCurrent Scenario’s; Springer: Berlin/Heidelberg, Germany, 2020; pp. 87–111.\n\
    139. Vera-Pérez, J.; Silvestre-Blanes, J.; Sempere-Payá, V. TSCH and RPL Joining\
    \ Time Model for Industrial Wireless Sensor Networks.\nSensors 2021, 21, 3904.\
    \ [CrossRef] [PubMed]\n140. Sobral, J.V.; Rodrigues, J.J.; Rabêlo, R.A.; Al-Muhtadi,\
    \ J.; Korotaev, V. Routing protocols for low power and lossy networks in\nInternet\
    \ of things applications. Sensors 2019, 19, 2144. [CrossRef]\n141. Jeong, S.;\
    \ Kim, H.; Noh, D.K.; Yoon, I. Energy-aware data aggregation scheme for energy-harvesting\
    \ wireless sensor networks. In\nProceedings of the 2016 First IEEE International\
    \ Conference on Computer Communication and the Internet (ICCCI), Wuhan,\nChina,\
    \ 13–15 October 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 140–143.\n142. Chen,\
    \ Q.; Gao, H.; Cai, Z.; Cheng, L.; Li, J. Energy-collision aware data aggregation\
    \ scheduling for energy harvesting sensor\nnetworks. In Proceedings of the IEEE\
    \ INFOCOM 2018—IEEE Conference on Computer Communications, Honolulu, HI, USA,\n\
    16–19 April 2018; IEEE: Piscataway, NJ, USA, 2018; pp. 117–125.\n143. Xiao, M.;\
    \ Zhang, X.; Dong, Y. An effective routing protocol for energy harvesting wireless\
    \ sensor networks. In Proceedings of the\n2013 IEEE Wireless Communications and\
    \ Networking Conference (WCNC), Shanghai, China, 7–10 April 2013; IEEE: Piscataway,\n\
    NJ, USA, 2013; pp. 2080–2084.\n144. Wu, D.; He, J.; Wang, H.; Wang, C.; Wang,\
    \ R. A hierarchical packet forwarding mechanism for energy harvesting wireless\
    \ sensor\nnetworks. IEEE Commun. Mag. 2015, 53, 92–98. [CrossRef]\n145. Yang,\
    \ L.; Lu, Y.; Zhong, Y.; Wu, X.; Yang, S.X. A multi-hop energy neutral clustering\
    \ algorithm for maximizing network\ninformation gathering in energy harvesting\
    \ wireless sensor networks. Sensors 2016, 16, 26. [CrossRef] [PubMed]\nSensors\
    \ 2022, 22, 2650\n41 of 44\n146. Bahbahani, M.S.; Alsusa, E. A cooperative clustering\
    \ protocol with duty cycling for energy harvesting enabled wireless sensor\nnetworks.\
    \ IEEE Trans. Wirel. Commun. 2017, 17, 101–111. [CrossRef]\n147. Bozorgi, S.M.;\
    \ Rostami, A.S.; Hosseinabadi, A.A.R.; Balas, V.E. A new clustering protocol for\
    \ energy harvesting-wireless sensor\nnetworks. Comput. Electr. Eng. 2017, 64,\
    \ 233–247. [CrossRef]\n148. Ren, Q.; Yao, G. An energy-efﬁcient cluster head selection\
    \ scheme for energy-harvesting wireless sensor networks. Sensors 2020,\n20, 187.\
    \ [CrossRef] [PubMed]\n149. Sinde, R.; Begum, F.; Njau, K.; Kaijage, S. Reﬁning\
    \ network lifetime of wireless sensor network using energy-efﬁcient clustering\n\
    and DRL-based sleep scheduling. Sensors 2020, 20, 1540. [CrossRef]\n150. Liu,\
    \ F.; Lu, H.; Wang, T.; Liu, Y. An energy-balanced joint routing and charging\
    \ framework in wireless rechargeable sensor\nnetworks for mobile multimedia. IEEE\
    \ Access 2019, 7, 177637–177650. [CrossRef]\n151. Lu, Z.; Fan, B.; Cai, J.; Tang,\
    \ L. J-RCA: A Joint Routing and Charging Algorithm With WCE Assisted Data Gathering\
    \ in Wireless\nRechargeable Sensor Networks. IEEE Sens. J. 2020, 21, 3888–3899.\
    \ [CrossRef]\n152. Du, L. A polynomial time algorithm for Hamilton Cycle and its\
    \ proof. In Proceedings of the 2010 International Conference\nOn Computer Design\
    \ and Applications, Qinhuangdao, China, 25–27 June 2010; IEEE: Piscataway, NJ,\
    \ USA, 2010; Volume 3;\npp. 3–207.\n153. Celebiler, M.; Stette, G. On increasing\
    \ the down-link capacity of a regenerative satellite repeater in point-to-point\
    \ communications.\nProc. IEEE 1978, 66, 98–100. [CrossRef]\n154. Ahlswede, R.;\
    \ Cai, N.; Li, S.Y.; Yeung, R.W. Network information ﬂow. IEEE Trans. Inf. Theory\
    \ 2000, 46, 1204–1216. [CrossRef]\n155. Katti, S.; Rahul, H.; Hu, W.; Katabi,\
    \ D.; Médard, M.; Crowcroft, J. XORs in the air: Practical wireless network coding.\
    \ IEEE/ACM\nTrans. Netw. 2008, 16, 497–510. [CrossRef]\n156. Migabo, E.M.; Djouani,\
    \ K.; Olwal, T.O.; Kurien, A.M. A Survey on Energy Efﬁcient Network Coding for\
    \ Multi-hop Routing in\nWireless Sensor Networks. Procedia Comput. Sci. 2016,\
    \ 94, 288–294. [CrossRef]\n157. Cohen, A.; Biton, E.; Kampeas, J.; Gurewitz, O.\
    \ Coded unicast downstream trafﬁc in a wireless network: Analysis and WiFi\nimplementation.\
    \ EURASIP J. Adv. Signal Process. 2013, 2013, 1–20. [CrossRef]\n158. Shifrin,\
    \ M.; Cohen, A.; Weisman, O.; Gurewitz, O. Coded retransmission in wireless networks\
    \ via abstract MDPs: Theory and\nalgorithms. IEEE Trans. Wirel. Commun. 2016,\
    \ 15, 4292–4306. [CrossRef]\n159. Attar, H.; Stankovic, L.; Stankovic, V. Cooperative\
    \ network-coding system for wireless sensor networks. IET Commun. 2012,\n6, 344–352.\
    \ [CrossRef]\n160. Qureshi, J.; Foh, C.H.; Cai, J. Optimal solution for the index\
    \ coding problem using network coding over GF(2). In Proceedings of\nthe 2012\
    \ 9th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc\
    \ Communications and Networks\n(SECON), Seoul, Korea, 18–21 June 2012; pp. 209–217.\n\
    161. Gou, L.; Zhang, G.; Bian, D.; Zhang, W.; Xie, Z. Data dissemination in wireless\
    \ sensor networks with instantly decodable network\ncoding. J. Commun. Netw. 2016,\
    \ 18, 846–856. [CrossRef]\n162. Júnior, N.D.S.R.; Tavares, R.C.; Vieira, M.A.;\
    \ Vieira, L.F.; Gnawali, O. CodeDrip: Improving data dissemination for wireless\
    \ sensor\nnetworks with network coding. Ad Hoc Netw. 2017, 54, 42–52. [CrossRef]\n\
    163. Swamy, V.N.; Rigge, P.; Ranade, G.; Sahai, A.; Nikoli´c, B. Network coding\
    \ for high-reliability low-latency wireless control. In\nProceedings of the 2016\
    \ IEEE Wireless Communications and Networking Conference Workshops (WCNCW), Doha,\
    \ Qatar, 3–6\nApril 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 138–144.\n164.\
    \ Ho, T.; Médard, M.; Koetter, R.; Karger, D.R.; Effros, M.; Shi, J.; Leong, B.\
    \ A random linear network coding approach to multicast.\nIEEE Trans. Inf. Theory\
    \ 2006, 52, 4413–4430. [CrossRef]\n165. Stefanovi´c, ˇC.; Vukobratovi´c, D.; Crnojevi´c,\
    \ V.; Stankovic, V. A random linear coding scheme with perimeter data gathering\
    \ for\nwireless sensor networks. In Proceedings of the 2011 Eighth International\
    \ Conference on Wireless On-Demand Network Systems\nand Services, Bardonecchia,\
    \ Italy, 26–28 January 2011; IEEE: Piscataway, NJ, USA, 2011; pp. 142–145.\n166.\
    \ Feizi, S.; Lucani, D.E.; Médard, M. Tunable sparse network coding. In Proceedings\
    \ of the 22th International Zurich Seminar on\nCommunications (IZS). Eidgenössische\
    \ Technische Hochschule Zürich, Zurich, Switzerland, 29 February–2 March 2012.\n\
    167. Prior, R.; Lucani, D.E.; Phulpin, Y.; Nistor, M.; Barros, J. Network coding\
    \ protocols for smart grid communications. IEEE Trans.\nSmart Grid 2014, 5, 1523–1531.\
    \ [CrossRef]\n168. Nistor, M.; Lucani, D.E.; Barros, J. Network coding protocols\
    \ for data gathering applications.\nIEEE Commun. Lett. 2014,\n19, 267–270. [CrossRef]\n\
    169. Keller, L.; Atsan, E.; Argyraki, K.; Fragouli, C. SenseCode: Network coding\
    \ for reliable sensor networks. ACM Trans. Sens. Netw.\n(TOSN) 2013, 9, 1–20.\
    \ [CrossRef]\n170. Valle, O.T.; Montez, C.; Medeiros de Araujo, G.; Vasques, F.;\
    \ Moraes, R. NetCoDer: A retransmission mechanism for WSNs based\non cooperative\
    \ relays and network coding. Sensors 2016, 16, 799. [CrossRef]\n171. Merhi, Z.;\
    \ Tahan, O.; Abdulhay, B.; Rammal, R.; Abdul-Nabi, S. SR-Code: Smart Relay Network\
    \ Coding for Data Collection for\nWireless Sensor Networks. Int. J. Eng. Res.\
    \ Appl. 2017, 7, 58–64. [CrossRef]\n172. Al-Hawri, E.; Correia, N.; Barradas,\
    \ A. Design of network coding based reliable sensor networks. Ad Hoc Netw. 2019,\
    \ 91, 101870.\n[CrossRef]\n173. Chen, W.; Letaief, K.B.; Cao, Z. Opportunistic\
    \ Network Coding for Wireless Networks.\nIn Proceedings of the 2007 IEEE\nInternational\
    \ Conference on Communications, Glasgow, UK, 24–28 June 2007; pp. 4634–4639.\n\
    Sensors 2022, 22, 2650\n42 of 44\n174. Mirani, F.H.; Busson, A.; Adjih, C. DONC:\
    \ Delay-based Opportunistic Network Coding Protocol. In Proceedings of the 2013\
    \ 12th\nAnnual Mediterranean Ad Hoc Networking Workshop (MED-HOC-NET), Ajaccio,\
    \ France, 24–26 June 2013; pp. 34–41.\n175. Tan, C.; Zou, J.; Wang, M. Joint Opportunistic\
    \ Network Coding and Opportunistic Routing for Correlated Data Gathering in\n\
    Wireless Sensor Network. In Proceedings of the 2013 IEEE 78th Vehicular Technology\
    \ Conference (VTC Fall), Las Vegas, NV,\nUSA, 2–5 September 2013; pp. 1–5.\n176.\
    \ Marques, B.; Machado, I.; Sena, A.; Castro, M.C. A communication protocol for\
    \ fog computing based on network coding applied\nto wireless sensors. In Proceedings\
    \ of the 2017 International Symposium on Computer Architecture and High Performance\n\
    Computing Workshops (SBAC-PADW), Campinas, Brazil, 17–20 October 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 109–114.\n177. Uwitonze, A.; Huang, J.; Ye, Y.; Cheng, W.\
    \ Connectivity restoration in wireless sensor networks via space network coding.\
    \ Sensors\n2017, 17, 902. [CrossRef] [PubMed]\n178. Malathy, S.; Porkodi, V.;\
    \ Sampathkumar, A.; Hindia, M.N.; Dimyati, K.; Tilwari, V.; Qamar, F.; Amiri,\
    \ I.S. An optimal network\ncoding based backpressure routing approach for massive\
    \ IoT network. Wirel. Netw. 2020, 26, 3657–3674. [CrossRef]\n179. Zhan, C.; Zeng,\
    \ Y.; Zhang, R. Energy-efﬁcient data collection in UAV enabled wireless sensor\
    \ network. IEEE Wirel. Commun. Lett.\n2017, 7, 328–331. [CrossRef]\n180. Gong,\
    \ J.; Chang, T.H.; Shen, C.; Chen, X. Flight time minimization of UAV for data\
    \ collection over wireless sensor networks.\nIEEE J. Sel. Areas Commun. 2018,\
    \ 36, 1942–1954. [CrossRef]\n181. Liu, J.; Wang, X.; Bai, B.; Dai, H. Age-optimal\
    \ trajectory planning for UAV-assisted data collection. In Proceedings of the\
    \ IEEE\nINFOCOM 2018—IEEE Conference on Computer Communications Workshops (INFOCOM\
    \ WKSHPS), Honolulu, HI, USA, 15–19\nApril 2018; IEEE: Piscataway, NJ, USA, 2018;\
    \ pp. 553–558.\n182. Liu, S.; Wei, Z.; Guo, Z.; Yuan, X.; Feng, Z. Performance\
    \ analysis of UAVs assisted data collection in wireless sensor network.\nIn Proceedings\
    \ of the 2018 IEEE 87th Vehicular Technology Conference (VTC Spring), Porto, Portugal,\
    \ 3–6 June 2018; IEEE:\nPiscataway, NJ, USA, 2018; pp. 1–5.\n183. Qin, Y.; Boyle,\
    \ D.; Yeatman, E. A novel protocol for data links between wireless sensors and\
    \ UAV based sink nodes. In Proceedings\nof the 2018 IEEE 4th World Forum on Internet\
    \ of Things (WF-IoT), Singapore, 5–8 February 2018; IEEE: Piscataway, NJ, USA,\n\
    2018; pp. 371–376.\n184. Najjar-Ghabel, S.; Farzinvash, L.; Razavi, S.N. Mobile\
    \ sink-based data gathering in wireless sensor networks with obstacles using\n\
    artiﬁcial intelligence algorithms. Ad Hoc Netw. 2020, 106, 102243. [CrossRef]\n\
    185. Tazibt, C.Y.; Bekhti, M.; Djamah, T.; Achir, N.; Boussetta, K. Wireless sensor\
    \ network clustering for UAV-based data gathering. In\nProceedings of the 2017\
    \ Wireless Days, Porto, Portugal, 29–31 March 2017; IEEE: Piscataway, NJ, USA,\
    \ 2017; pp. 245–247.\n186. Kumar, N.; Dash, D. Flow based efﬁcient data gathering\
    \ in wireless sensor network using path-constrained mobile sink. J. Ambient.\n\
    Intell. Humaniz. Comput. 2020, 11, 1163–1175. [CrossRef]\n187. Ebrahimi, D.; Sharafeddine,\
    \ S.; Ho, P.H.; Assi, C. UAV-aided projection-based compressive data gathering\
    \ in wireless sensor\nnetworks. IEEE Internet Things J. 2019, 6, 1893–1905. [CrossRef]\n\
    188. Wu, Q.; Sun, P.; Boukerche, A. An energy-efﬁcient uav-based data aggregation\
    \ protocol in wireless sensor networks.\nIn\nProceedings of the 8th ACM Symposium\
    \ on Design and Analysis of Intelligent Vehicular Networks and Applications, Montreal,\n\
    QC, Canada, 28 October–2 November 2018; pp. 34–40.\n189. Zahra, M.; Wang, Y.;\
    \ Ding, W. Cross-layer routing for a mobility support protocol based on handover\
    \ mechanism in cluster-based\nwireless sensor networks with mobile sink. Sensors\
    \ 2019, 19, 2843. [CrossRef] [PubMed]\n190. Zhang, R.; Pan, J.; Xie, D.; Wang,\
    \ F. NDCMC: A hybrid data collection approach for large-scale WSNs using mobile\
    \ element and\nhierarchical clustering. IEEE Internet Things J. 2015, 3, 533–543.\
    \ [CrossRef]\n191. Say, S.; Inata, H.; Liu, J.; Shimamoto, S. Priority-based data\
    \ gathering framework in UAV-assisted wireless sensor networks. IEEE\nSens. J.\
    \ 2016, 16, 5785–5794. [CrossRef]\n192. Rault, T.; Bouabdallah, A.; Challal, Y.;\
    \ Marin, F. A survey of energy-efﬁcient context recognition systems using wearable\
    \ sensors\nfor healthcare applications. Pervasive Mob. Comput. 2017, 37, 23–44.\
    \ [CrossRef]\n193. Leonov, V. Thermoelectric energy harvesting of human body heat\
    \ for wearable sensors. IEEE Sens. J. 2013, 13, 2284–2291.\n[CrossRef]\n194. Khalifa,\
    \ S.; Hassan, M.; Seneviratne, A.; Das, S.K. Energy-harvesting wearables for activity-aware\
    \ services. IEEE Internet Comput.\n2015, 19, 8–16. [CrossRef]\n195. Park, J.;\
    \ Joshi, H.; Lee, H.G.; Kiaei, S.; Ogras, U.Y. Flexible PV-cell modeling for energy\
    \ harvesting in wearable IoT applications.\nACM Trans. Embed. Comput. Syst. 2017,\
    \ 16, 1–20. [CrossRef]\n196. Park, J.; Bhat, G.; Nk, A.; Geyik, C.S.; Ogras, U.Y.;\
    \ Lee, H.G. Energy per operation optimization for energy-harvesting wearable\n\
    IoT devices. Sensors 2020, 20, 764. [CrossRef] [PubMed]\n197. Esteves, V.; Antonopoulos,\
    \ A.; Kartsakli, E.; Puig-Vidal, M.; Miribel-Català, P.; Verikoukis, C. Cooperative\
    \ energy harvesting-\nadaptive MAC protocol for WBANs. Sensors 2015, 15, 12635–12650.\
    \ [CrossRef]\n198. Bariya, M.; Nyein, H.Y.Y.; Javey, A. Wearable sweat sensors.\
    \ Nat. Electron. 2018, 1, 160–171. [CrossRef]\n199. Gao, W.; Nyein, H.Y.Y.; Shahpar,\
    \ Z.; Tai, L.C.; Wu, E.; Bariya, M.; Ota, H.; Fahad, H.M.; Chen, K.; Javey, A.\
    \ Wearable sweat\nbiosensors. In Proceedings of the 2016 IEEE International Electron\
    \ Devices Meeting (IEDM), San Francisco, CA, USA, 3–7\nDecember 2016. [CrossRef]\n\
    Sensors 2022, 22, 2650\n43 of 44\n200. Bandodkar, A.J.; Jia, W.; Yardımcı, C.;\
    \ Wang, X.; Ramirez, J.; Wang, J. Tattoo-based noninvasive glucose monitoring:\
    \ A proof-of-\nconcept study. Anal. Chem. 2015, 87, 394–398. [CrossRef] [PubMed]\n\
    201. Salvo, P.; Di Francesco, F.; Costanzo, D.; Ferrari, C.; Trivella, M.G.; De\
    \ Rossi, D. A wearable sensor for measuring sweat rate. IEEE\nSens. J. 2010, 10,\
    \ 1557–1558. [CrossRef]\n202. Sim, J.K.; Yoon, S.; Cho, Y.H. Wearable sweat rate\
    \ sensors for human thermal comfort monitoring. Sci. Rep. 2018, 8, 1181.\n[CrossRef]\
    \ [PubMed]\n203. Song, Y.; Min, J.; Yu, Y.; Wang, H.; Yang, Y.; Zhang, H.; Gao,\
    \ W. Wireless battery-free wearable sweat sensor powered by human\nmotion. Sci.\
    \ Adv. 2020, 6, eaay9842. [CrossRef] [PubMed]\n204. Tai, L.C.; Gao, W.; Chao,\
    \ M.; Bariya, M.; Ngo, Q.P.; Shahpar, Z.; Nyein, H.Y.; Park, H.; Sun, J.; Jung,\
    \ Y.; et al. Methylxanthine drug\nmonitoring with wearable sweat sensors. Adv.\
    \ Mater. 2018, 30, 1707442. [CrossRef]\n205. Ferrer-Vidal, A.; Rida, A.; Basat,\
    \ S.; Yang, L.; Tentzeris, M.M. Integration of sensors and RFID’s on ultra-low-cost\
    \ paper-based\nsubstrates for wireless sensor networks applications. In Proceedings\
    \ of the 2006 2nd IEEE Workshop on Wireless Mesh Networks,\nReston, VA, USA, 25–28\
    \ September 2006; IEEE: Piscataway, NJ, USA, 2006; pp. 126–128.\n206. Li, K.;\
    \ Habre, R.; Deng, H.; Urman, R.; Morrison, J.; Gilliland, F.D.; Ambite, J.L.;\
    \ Stripelis, D.; Chiang, Y.Y.; Lin, Y.; et al. Applying\nmultivariate segmentation\
    \ methods to human activity recognition from wearable sensors’ data. JMIR mHealth\
    \ uHealth 2019,\n7, e11201. [CrossRef] [PubMed]\n207. Ling, Y.; An, T.; Yap, L.W.;\
    \ Zhu, B.; Gong, S.; Cheng, W. Disruptive, soft, wearable sensors. Adv. Mater.\
    \ 2020, 32, 1904664.\n[CrossRef] [PubMed]\n208. Pathak, N.; Mukherjee, A.; Misra,\
    \ S. Reconﬁgure and Reuse: Interoperable Wearables for Healthcare IoT. In Proceedings\
    \ of the\nIEEE INFOCOM 2020—IEEE Conference on Computer Communications, Toronto,\
    \ ON, Canada, 6–9 July 2020; IEEE: Piscataway,\nNJ, USA, 2020; pp. 20–29.\n209.\
    \ Townsend, K.; Cufí, C.; Akiba; Davidson, R. Getting Started with Bluetooth Low\
    \ Energy: Tools and Techniques for Low-Power\nNetworking; O’Reilly Media, Inc.:\
    \ Sebastopol, CA, USA, 2014.\n210. Gomez, C.; Oller, J.; Paradells, J. Overview\
    \ and evaluation of bluetooth low energy: An emerging low-power wireless technology.\n\
    Sensors 2012, 12, 11734–11753. [CrossRef]\n211. Coskun, V.; Ok, K.; Ozdenizci,\
    \ B. Near Field Communication (NFC): From Theory to Practice; John Wiley & Sons:\
    \ Hoboken, NJ, USA,\n2011.\n212. Kim, J.; Banks, A.; Xie, Z.; Heo, S.Y.; Gutruf,\
    \ P.; Lee, J.W.; Xu, S.; Jang, K.I.; Liu, F.; Brown, G.; et al. Miniaturized ﬂexible\
    \ electronic\nsystems with wireless power and near-ﬁeld communication capabilities.\
    \ Adv. Funct. Mater. 2015, 25, 4761–4767. [CrossRef]\n213. Kwak, K.S.; Ullah,\
    \ S.; Ullah, N. An overview of IEEE 802.15.6 standard. In Proceedings of the 2010\
    \ 3rd International Symposium\non Applied Sciences in Biomedical and Communication\
    \ Technologies (ISABEL 2010), Rome, Italy, 7–10 November 2010; IEEE:\nPiscataway,\
    \ NJ, USA, 2010; pp. 1–6.\n214. Lee, W.; Lin, K.Y.; Seto, E.; Migliaccio, G.C.\
    \ Wearable sensors for monitoring on-duty and off-duty worker physiological status\n\
    and activities in construction. Autom. Constr. 2017, 83, 341–353. [CrossRef]\n\
    215. Chang, W.J.; Chen, L.B.; Chiou, Y.Z. Design and implementation of a drowsiness-fatigue-detection\
    \ system based on wearable\nsmart glasses to increase road safety. IEEE Trans.\
    \ Consum. Electron. 2018, 64, 461–469. [CrossRef]\n216. Wu, F.; Redouté, J.M.;\
    \ Yuce, M.R. A self-powered wearable body sensor network system for safety applications.\
    \ In Proceedings\nof the 2018 IEEE SENSORS, New Delhi, India, 28–31 October 2018;\
    \ IEEE: Piscataway, NJ, USA, 2018; pp. 1–4.\n217. Qi, J.; Yang, P.; Hanneghan,\
    \ M.; Tang, S.; Zhou, B. A hybrid hierarchical framework for gym physical activity\
    \ recognition and\nmeasurement using wearable sensors. IEEE Internet Things J.\
    \ 2018, 6, 1384–1393. [CrossRef]\n218. You, I.; Choo, K.K.R.; Ho, C.L.; Leu, F.-Y.;\
    \ Ko, C.-Y. A smartphone-based wearable sensors for monitoring real-time physiological\n\
    data. Comput. Electr. Eng. 2018, 65, 376–392.\n219. Dian, F.J.; Vahidnia, R.;\
    \ Rahmati, A. Wearables and the Internet of Things (IoT), applications, opportunities,\
    \ and challenges:\nA Survey. IEEE Access 2020, 8, 69200–69211. [CrossRef]\n220.\
    \ Peoples, C.; Moore, A.; Zoualfaghari, M. A Review of the Opportunity to Connect\
    \ Elderly Citizens to the Internet of Things (IoT)\nand Gaps in the Service Level\
    \ Agreement (SLA) Provisioning Process. EAI Endorsed Trans. Cloud Syst. 2020,\
    \ 6, e3. [CrossRef]\n221. Kekade, S.; Hseieh, C.H.; Islam, M.M.; Atique, S.; Khalfan,\
    \ A.M.; Li, Y.C.; Abdul, S.S. The usefulness and actual use of wearable\ndevices\
    \ among the elderly population. Comput. Methods Programs Biomed. 2018, 153, 137–159.\
    \ [CrossRef] [PubMed]\n222. Bogu, G.K.; Snyder, M.P. Deep learning-based detection\
    \ of COVID-19 using wearables data. MedRxiv 2021.\n223. Hassantabar, S.; Stefano,\
    \ N.; Ghanakota, V.; Ferrari, A.; Nicola, G.N.; Bruno, R.; Marino, I.R.; Jha,\
    \ N.K. CovidDeep: SARS-CoV-\n2/COVID-19 Test Based on Wearable Medical Sensors\
    \ and Efﬁcient Neural Networks. arXiv 2020, arXiv:2007.10497.\n224. Cortellessa,\
    \ G.; Stabile, L.; Arpino, F.; Faleiros, D.; Van Den Bos, W.; Morawska, L.; Buonanno,\
    \ G. Close proximity risk assessment\nfor SARS-CoV-2 infection. Sci. Total Environ.\
    \ 2021, 794, 148749. [CrossRef] [PubMed]\n225. Ng, P.C.; Spachos, P.; Gregori,\
    \ S.; Plataniotis, K.N. Personal Devices for Contact Tracing: Smartphones and\
    \ Wearables to Fight\nCOVID-19. IEEE Commun. Mag. 2021, 59, 24–29. [CrossRef]\n\
    226. Bian, S.; Zhou, B.; Bello, H.; Lukowicz, P. A wearable magnetic ﬁeld based\
    \ proximity sensing system for monitoring COVID-19\nsocial distancing. In Proceedings\
    \ of the 2020 International Symposium on Wearable Computers, Virtual Event, 12–16\
    \ September\n2020; pp. 22–26.\nSensors 2022, 22, 2650\n44 of 44\n227. Shubina,\
    \ V.; Ometov, A.; Lohan, E.S. Technical perspectives of contact-tracing applications\
    \ on wearables for COVID-19 control. In\nProceedings of the 2020 12th International\
    \ Congress on Ultra Modern Telecommunications and Control Systems and Workshops\n\
    (ICUMT), Brno, Czech Republic, 5–7 October 2020; IEEE: Piscataway, NJ, USA, 2020;\
    \ pp. 229–235.\n228. Amft, O.; Lopera, L.; Lukowicz, P.; Bian, S.; Burggraf, P.\
    \ Wearables to ﬁght COVID-19: From symptom tracking to contact tracing.\nIEEE\
    \ Ann. Hist. Comput. 2020, 19, 53–60. [CrossRef]\n229. Channa, A.; Popescu, N.;\
    \ Skibinska, J.; Burget, R. The rise of wearable devices during the COVID-19 pandemic:\
    \ A systematic\nreview. Sensors 2021, 21, 5787. [CrossRef] [PubMed]\n"
  inline_citation: 'Gurewitz, O.; Shifrin, M.; Dvir, E. Data Gathering Techniques
    in WSN: A Cross-Layer View. Sensors 2022, 22, 2650. https://doi.org/10.3390/s22072650'
  journal: Sensors
  limitations: null
  pdf_link: https://www.mdpi.com/1424-8220/22/7/2650/pdf?version=1648630550
  publication_year: 2022
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Data Gathering Techniques in WSN: A Cross-Layer View'
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.5772/31909
  analysis: 'This paper, titled “Precision Irrigation: Sensor Network Based Irrigation”,
    explores the role of wireless sensor networks (WSNs) in precision irrigation systems
    and presents a case study of deploying WSNs to monitor soil moisture, estimate
    evapotranspiration (ET), and drive drip irrigation for a large grape farm in India.
    The paper discusses the role of data acquisition, interpretation, and control
    in precision irrigation systems and highlights the advantages of WSNs over wired
    networks for data collection. The authors provide three verbatim quotes from the
    paper, demonstrating the pertinence of the paper to the outline point and review.
    The relevance score assigned to the paper is 0.7-0.79, indicating that the paper
    is highly relevant to the outline point and review, providing credible and valuable
    information for the point.'
  authors:
  - Niladri Das
  citation_count: 4
  full_citation: null
  full_text: ">\nSelection of our books indexed in the Book Citation Index \nin Web\
    \ of Science™ Core Collection (BKCI)\nInterested in publishing with us? \nContact\
    \ book.department@intechopen.com\nNumbers displayed above are based on latest\
    \ data collected. \nFor more information visit www.intechopen.com\nOpen access\
    \ books available\nCountries delivered to\nContributors from top 500 universities\n\
    International  authors and editors\nOur authors are among the\nmost cited scientists\n\
    Downloads\nWe are IntechOpen,\nthe world’s leading publisher of\nOpen Access books\n\
    Built by scientists, for scientists\n12.2%\n185,000\n200M\nTOP 1%\n154\n6,900\n\
    11 \nPrecision Irrigation:  \nSensor Network Based Irrigation \nN. G. Shah1 ancd\
    \ Ipsita Das2 \n1CTARA, IIT Bombay \n2Department Of Electrical Engg, IIT Bombay\
    \  \nIndia \n1. Introduction  \nAvailability of water for agriculture is a global\
    \ challenge for the upcoming years. This \nchapter aims at describing components\
    \ of precision irrigation system and its potential in \nfuture farming practices.\
    \ A case-study of deploying Wireless Sensor Network  (WSN)  \nmonitoring soil\
    \ moisture, estimating Evapotranspiration (ET) and driving drip irrigation for\
    \ \na large grape farm in India on pilot basis is described.  \nAgriculture plays\
    \ a vital role in the economy of every nation be it developing or developed. \n\
    Agriculture is the basis of livelihood for the population through the production\
    \ of food and \nimportant raw materials. Moreover, agriculture continues to play\
    \ an important role in \nproviding large scale employment to people. Agricultural\
    \ growth is considered necessary \nfor development and for a country’s transformation\
    \ from a traditional to a modern \neconomy. Therefore attention must be accorded\
    \ to science and technology being used in the \nfield for higher yield and growth\
    \ in agriculture.  \nAgriculture  system is a complex interaction of seed, soil,\
    \ water, fertilizer and pesticides etc. \nOptimization of the resources is essential\
    \ for sustainability of this complex system. \nUnscientific exploitation of agricultural\
    \ resources to bridge the gap in supply/demand \nowing to the population  growth\
    \ is leading to resource degradation and subsequent decline \nin crop yields (Mondal\
    \ and Tiwari, 2007). In addition, uncertainty of climatic conditions is \nalso\
    \ playing an important role in this complex  system. This calls for optimal utilization\
    \ of \nthe resources for managing the controlled agricultural system (Whelan et\
    \ al., 1997). Also \nagricultural systems are inherently characterized by spatial\
    \ and temporal variability making \nyield maximization with minimal inputs a complex\
    \ task. Thus the farming technologies \nfollowed in all parts of world need to\
    \ be constantly updated to meet these challenges. \nDevelopment of a range of\
    \ new technologies in different parts of the world has brought \nagriculture to\
    \ a whole new level of sophistication. In fact, modern agriculture has already\
    \ \nundergone a sea-change from the ancient times. The concept of precision agriculture\
    \ has \nbeen around for some time now. A new approach of collecting real time\
    \ data from the \nenvironment could represent an important step towards high quality\
    \ and sustainable \nagriculture. Precision agriculture is an agricultural system\
    \ that can contribute to the \nsustainable agriculture concepts.  \nwww.intechopen.com\n\
    \ \nProblems, Perspectives and Challenges of Agricultural Water Management \n\
    \ \n218 \n1.1 Precision Agriculture (PA) \nThe term \"precision agriculture\"\
    \ is defined as the application of various technologies and \nprinciples to manage\
    \ spatial and temporal variability associated with all aspects of \nagricultural\
    \ production (Pierce and Nowak, 1999). Conventional agronomic practices \nalways\
    \ follow a standard management option for a large area irrespective of the variability\
    \ \noccurring within and among the field. For decades now, the farmers have been\
    \ applying \nfertilizers based on recommendations emanating from research and\
    \ field trials under \nspecific agro-climatic conditions (Ladha et al., 2000).\
    \ Applications of agricultural inputs at \nuniform rates across the field without\
    \ taking in-field variations of soil and crop properties \ninto account, does\
    \ not give desirable  crop yield. Consideration of in-field variations in soil\
    \ \nfertility and crop conditions and matching the agricultural inputs like seed,\
    \ fertilizer, \nirrigation, insecticide, pesticide, etc. in order to optimize\
    \ the input or maximizing the crop \nyield from a given quantum of input, is referred\
    \ to as Precision Agriculture (PA). It is an \ninformation-based and technology-driven\
    \ agricultural system, designed to improve the \nagricultural processes by precisely\
    \ monitoring each step to ensure maximum agricultural \nproduction with minimized\
    \ environmental impact. It involves the adjustment of sowing \nparameters, the\
    \ modulation of fertilizers doses, site-specific application of water, pesticide\
    \ \nand herbicides, etc (Adams et. al., 2000). Irrigating farms backed-up by estimated\
    \ water-\nrequirements is one of the essential components of precision agriculture\
    \ to reduce water \nwastage. Given the limited water resources, optimizing irrigation\
    \ efficiency is very essential.  \n1.2 Precision irrigation \nWater plays a crucial\
    \ role in photosynthesis and plant nutrition. The problem of agricultural \nwater\
    \ management is today widely recognized as a major challenge that is often linked\
    \ with \ndevelopment issues. Agriculture consumes 70% of the fresh water i.e.\
    \ 1,500 billion m3 out of \nthe 2,500 billion m3 of water is being used each year\
    \ (Goodwin and O’Connell 2008). It is \nalso estimated that 40% of the fresh-water\
    \ used for agriculture in developing countries is \nlost, either by evaporation,\
    \ spills, or absorption by the deeper layers of the soil, beyond the \nreach of\
    \ plants’ roots (Panchard et. al., 2007). Post green-revolution era agriculture\
    \ in India \nis facing a technological fatigue for two reasons viz a)  high rates\
    \ of ground-water depletion \nand b) soil salinity due to excessive irrigation\
    \ in some pockets. Efficient water management \nis a major concern in many crop\
    \ systems. More and more planners as well as farmer \nassociations are becoming\
    \ conscious about warder-audit and water utilization efficiency as \nthe water\
    \ resources is getting more and more scarce. Efforts of using micro-irrigation\
    \ \nmethods such as sprinkler and drip irrigation have been made in last three\
    \ decades in many \nparts of the world. It has been reported that in year 2005,\
    \ 1.15 million ha was under micro-\nirrigation (drip and sprinkler) in India (Modak,\
    \ 2009). There is no ideal irrigation method \navailable which may be suitable\
    \ for all weather conditions, soil structure and variety of \ncrops cultures.\
    \ In the semi-arid areas of developing countries, marginal farmers and small \n\
    farmers (with a land holding between 2 and 4 hectares) who cannot afford to pay\
    \ for \npowered irrigation, heavily depend on the rainfall for their crops. It\
    \ is observed that farmers \nhave to bear huge financial loss because of wrong\
    \ prediction of weather and incorrect \nirrigation method. In light of a real\
    \ need to improve the efficiency of irrigation systems and \nprevent the misuse\
    \ of water, the focus is to develop an intelligent irrigation scheduling \nsystem\
    \ which will enable irrigation farmers to optimize the use of water and only irrigate\
    \ \nwhere and when need for as long as needed. \nwww.intechopen.com\n \nPrecision\
    \ Irrigation: Sensor Network Based Irrigation \n \n219 \nPrecision irrigation\
    \ is worldwide a new concept in irrigation. Precision irrigation involves \nthe\
    \ accurate and precise application of water to meet the specific requirements\
    \ of individual \nplants or management units and minimize adverse environmental\
    \ impact. Commonly \naccepted definition of Precision irrigation is sustainable\
    \ management of water resources \nwhich involves application of water to the crop\
    \ at the right time, right amount, right place \nand right manner thereby helping\
    \ to manage the field variability of water in turn increasing \nthe crop productivity\
    \ and water use efficiency along with reduction in energy cost on \nirrigation.\
    \ It utilizes a systems approach to achieve 'differential irrigation' treatment\
    \ of field \nvariation (spatial and temporal) as opposed to the 'uniform irrigation'\
    \ treatment that \nunderlies traditional management systems.  \n1.2.1 Benefits\
    \ of precision irrigation \nPrecision irrigation has the potential to increase\
    \ both the water use and economic \nefficiencies. It has been reported that precision\
    \ irrigation (Drip and Sprinkler) can improve \napplication efficiency of water\
    \ up to the tune of 80-90% as against 40-45% in surface \nirrigation method (Dukes,\
    \ 2004). Results from case studies of variable rate irrigation showed \nwater\
    \ savings in individual years ranging from zero to 50%. The potential economic\
    \ benefit \nof precision irrigation lies in reducing the cost of inputs or increasing\
    \ yield for the same \ninputs.  \n1.2.1.1 Water savings  \nThe primary goal of\
    \ precision irrigation is to apply an optimum amount of irrigation \nthroughout\
    \ fields. It is reported by many researchers as the most likely means of \nachieving\
    \ significant water savings (Evans and Sadler, 2008). The site specific or variable\
    \ \nrate irrigation is considered as a necessary or essential component of precision\
    \ irrigation. \nMost researchers expect a reduction in water use on at least parts\
    \ of fields, if not a \nreduction in the value aggregated over entire fields (Sadler\
    \ et al. 2005). It has been \nreported that variable rate irrigation could save\
    \ 10 to 15% of water used in conventional \nirrigation practice (Yule et al. 2008).\
    \ Hedley and Yule (2009) suggested water savings of \naround 25% are possible\
    \ through improvements in application efficiency obtained by \nspatially varied\
    \ irrigation applications.  \n1.2.1.2 Yield and profit  \nThe experimental studies\
    \ were carried out by King et al. (2006) for measuring the yield of \npotatoes\
    \ under spatially varied irrigation applications. It was reported that yields\
    \ were \nbetter in two consecutive years over uniform irrigation management. Booker\
    \ et al. (2006) \nanalyzed yields and water use efficiency for spatially varied\
    \ irrigation over four years for \ncotton. They concluded that cotton seems to\
    \ be unpredictable to manage with spatially \nvaried irrigation. This result is\
    \ supported by the work of Bronson et al. (2006).  \n1.3 Components of precision\
    \ irrigation system \na. \nData acquisition  \nA Precision Irrigation system requires\
    \ ability to identify and quantify the variability i.e. \nspatial and temporal\
    \ variability that exist in soil and crop conditions within a field and \nbetween\
    \ fields. Existing technology is available to measure the various components of\
    \ the \nwww.intechopen.com\n \nProblems, Perspectives and Challenges of Agricultural\
    \ Water Management \n \n220 \nsoil-crop-atmosphere continuum many in real-time\
    \ so as to provide precise and/or real-\ntime control of irrigation applications.\
    \  \nb. \nInterpretation  \nData has to be collected, interpreted and analyzed\
    \ at an appropriate scale and frequency. \nThe inadequate development of decision\
    \ support systems has been identified as a major \nbottle neck for the interpretation\
    \ of real time data and adoption of precision agriculture \n(McBratney et al.,\
    \ 2005).  \nc. \nControl  \nThe ability to optimize the inputs and adjust irrigation\
    \ management at appropriate temporal \nand spatial scales is an essential component\
    \ of a precision irrigation system. Applying \ndifferential depths of water over\
    \ a field will be dependent on the irrigation system. \nAutomatic controllers\
    \ with real time data should provide the most reliable and accurate \nmeans of\
    \ controlling irrigation applications.  \n1.4 Technology associated with precision\
    \ irrigation \nThe advent of precision irrigation methods has played a major role\
    \ in reducing the quantity \nof water required in agricultural and horticultural\
    \ crops, but there is a need for new \nmethods of automated and accurate irrigation\
    \ scheduling and control. The early adopters \nfound precision agriculture to\
    \ be unprofitable and the instances in which it was \nimplemented were few and\
    \ far between. Further, the high initial investment in the form of \nelectronic\
    \ equipment for sensing and communication meant that only large farms could \n\
    afford it. The technologies used are Remote Sensing (RS), Global Positioning System\
    \ (GPS) and \nGeographical Information System (GIS) and Wireless Sensor Network\
    \ (WSN).  \nThe technology of GIS and GPS apart from being non-real-time, involved\
    \ the use of \nexpensive technologies like satellite sensing and also labor intensive.\
    \ Over the last several \nyears, the advancement in sensing and communication\
    \ technologies has significantly \nbrought down the cost of deployment and running\
    \ of a feasible precision agriculture \nframework. However, a stand-alone sensor,\
    \ due to its limited range, can only monitor a \nsmall portion of its environment\
    \ but the use of several sensors working in a network seems \nparticularly appropriate\
    \ for precision agriculture. The technological development in \nWireless Sensor\
    \ Networks made it possible to monitor and control various parameters in \nagriculture.\
    \ Also recent advances in sensor and wireless radio frequency (RF) technologies\
    \ \nand their convergence with the Internet offer vast opportunities for application\
    \ of sensor \nsystems for agriculture. Emerging wireless technologies with low\
    \ power needs and low data \nrate capabilities have been developed which perfectly\
    \ suit precision agriculture (Wang et al., \n2006). The sensing and communication\
    \ can now be done on a real-time basis leading to \nbetter response times. The\
    \ wireless sensors are cheap enough for wide spread deployment \nand offer robust\
    \ communication through redundant propagation paths (Akyildiz & \nXudong, 2005).\
    \ The wireless sensor networks (WSNs) have become the most suitable \ntechnology\
    \ to monitor the agricultural environment. \n1.4.1 Wireless Sensor Network (WSN)\
    \ \nWireless sensor networks (WSN) is a network of small sensing devices  known\
    \ as sensor \nnodes or motes, arranged in a distributed manner, which collaborate\
    \ with each other to \nwww.intechopen.com\n \nPrecision Irrigation: Sensor Network\
    \ Based Irrigation \n \n221 \ngather, process and communicate over wireless channel\
    \ about some physical phenomena. \nThe sensor motes are typically low-cost, low-power,\
    \ small devices equipped with limited \nsensing, data processing and wireless\
    \ communication capabilities with power supply, which \nperfectly suites the PA/PI\
    \ (Wang, 1998; Stafford, 2000). A wireless sensor is a self-powered \ncomputing\
    \ unit usually containing a processing unit, a trans-receiver and both analog\
    \ and \ndigital interfaces, to which a variety of sensing units such as temperature,\
    \ humidity etc. can \nbe adapted (Fig 1.1). The sensor nodes communicate with\
    \ each other in order to exchange \nand process the information collected by their\
    \ sensing units. If nodes communicate only \ndirectly with each other or with\
    \ a base station, the network is single-hop. In some cases, \nnodes can use other\
    \ wireless sensors as relays, in which case the network is said to be multi-\n\
    hop. In a data-collection model, sensors communicate with one or several base\
    \ stations \nconnected to a database and an application server that stores the\
    \ data and performs extra \ndata-processing. The result is available typically\
    \ via a web-based interface.  \n1.4.1.1 Wired vs. Wireless Network \nWireless\
    \ sensor network have a big potential for representing the inherent soil variability\
    \ \npresent in fields with more accuracy than the current systems available. WSN\
    \ can operate in \na wide range of environments and provide advantages in cost,\
    \ size, power, flexibility and \ndistributed intelligence, compared to wired ones.\
    \ The wireless sensors are cheap enough for \nwide spread deployment in the form\
    \ of a mesh network and also it offers robust \ncommunication through redundant\
    \ propagation paths (Roy et al., 2008).  \n \nFig. 1.1. Depiction of Sensor Node\
    \ \nThe advantage for wireless sensor network over wired one is the feasibility\
    \ of installation in \nplaces where cabling is impossible. Another obvious advantage\
    \ of wireless transmission \nover wired one is the significant reduction in cost\
    \ and simplification in wiring and harness \n(Akyildiz et al., 2002). It has been\
    \ reported that adopting wireless technology would \neliminate 20–80% of the typical\
    \ wiring cost in industrial installations (Wang et al., 2006). \nHowever, wired\
    \ networks are very reliable and stable communication systems for \ninstruments\
    \ and control. Since installation of WSN is easier than wired network, sensors\
    \ can \nbe more densely deployed to provide local detailed data necessary for\
    \ precision agriculture. \nwww.intechopen.com\n \nProblems, Perspectives and Challenges\
    \ of Agricultural Water Management \n \n222 \nAnother advantage is their mobility\
    \ i.e. sensors can be placed on rotating equipment, such \nas a shaft to measure\
    \ critical agricultural and environmental parameters. Whenever physical \nconditions\
    \ change rapidly over space and time, WSNs allow for real-time processing at a\
    \ \nminimal cost. Their capacity to organize spontaneously in a network makes\
    \ them easy to \ndeploy, expand and maintain, as well as resilient to the failure\
    \ of individual measurement \npoints. Over the last few years, the advancement\
    \ in sensing and communication \ntechnologies has significantly brought down the\
    \ cost of deployment and running of a \nfeasible precision agriculture using WSN\
    \ (Wang, 1998).  \nWireless sensor network (WSN), a potential technology found\
    \ to be suitable for collecting \nreal time data for different parameters pertaining\
    \ to weather, crop and soil helps in \ndeveloping solutions for majority of the\
    \ agricultural processes related to irrigation and other \nagricultural processes.\
    \ The development of wireless sensor applications in agriculture \nmakes it possible\
    \ to increase efficiency, productivity and profitability of farming operations.\
    \ \n2. Irrigation scheduling through evapo-transpiration \nIrrigation scheduling\
    \ defined by Jensen (1981) is as “a planning and decision-making \nactivity\"\
    \ that the farm manager is involved in before and during most of the growing season\
    \ \nfor each crop that is grown.”  In other words it is a process through which\
    \ water lost by the \nplant through the evapo-transpiration (ET) method is an\
    \ excellent way to determine how \nmuch water to apply based on estimates of the\
    \ amount of water lost from the crop. Water \nuse efficiency can be achieved with\
    \ the precisely scheduled irrigation plan. Such a plan on \ndaily basis provides\
    \ a means of irrigating with an exact amount of water at the targeted dry \narea\
    \ to fulfill the needs of evapo-transpiration (ET).  \n2.1 Evapo-transpiration\
    \ / crop water requirement (ET) \nThe combination of two separate processes whereby\
    \ water is lost on the one hand from the \nsoil surface by evaporation and on\
    \ the other hand from the crop by transpiration is referred \nto as evapo-transpiration\
    \ (ET). Evapo-transpiration is also known as water requirement of \nthe crops.\
    \ The water requirement can be supplied by stored soil water, precipitation, and\
    \ \nirrigation. Irrigation is required when ET (crop water demand) exceeds the\
    \ supply of water \nfrom soil water and precipitation. As ET varies with plant\
    \ development stage and weather \nconditions, both the amount and timing of irrigation\
    \ are important. The rate of ET is a \nfunction of four critical factors i.e.\
    \ weather parameters, soil moisture, plant type and stage of \ndevelopment (Allen\
    \ et al., 1998). Different crops have different water-use requirements \nunder\
    \ the same weather conditions. The evapo-transpiration rate from a reference surface\
    \ is \ncalled the reference crop ET and denoted as ETo. The reference sureface\
    \ is hypothetical grass \nreference crop with an assumed crop height of 0.12 m,\
    \ a fixed surface resistance of 70 sec m-1 \nand an albedo (reflectance of the\
    \ crop-soil surface i.e. fraction of ground covered by \nvegetation) of 0.23,\
    \ closely resembling the evapo-transpiration from an extensive surface of \ngreen\
    \ grass of uniform height, actively growing, well-watered, and completely shading\
    \ the \nground\" (Allen et al., 1989). The grass is specifically defined as the\
    \ reference crop. The crop \ncoefficients appropriate to the specific crops are\
    \ used along with the values of reference ET \nfor computing the actual ET at\
    \ different growth stages of the crop. The modified Penman \nand Moneith model\
    \ (shown in equation 2.1) was used to calculate the reference evapo-\nwww.intechopen.com\n\
    \ \nPrecision Irrigation: Sensor Network Based Irrigation \n \n223 \ntranspiration.\
    \ The calculation procedures of ETo by means of the FAO Penman-Monteith \nequation\
    \ (Eq. 2.1) are presented by Allen et al (1998). \n \n2\n0\n2\n900\n0.408\n(\n\
    )\n(\n)\n273\n(1\n0.34\n)\nn\ns\na\nR\nG\nU\ne\ne\nT\nET\nU\nγ\nγ\nΔ\n−\n+\n−\n\
    +\n=\nΔ +\n+\n \n(2.1) \nWhere:  \nETo  \nReference evapo-transpiration [mm day-1],\
    \ \nRn  \nNet radiation at the crop surface [MJ m-2 day-1], \nG  \nsoil heat flux\
    \ density [MJ m-2 day-1], \nT  \nAir temperature at 2 m height [°C], \nU2  \n\
    Wind speed at 2 m height [m s-1], \nes  \nSaturation vapour pressure [kPa], \n\
    ea  \nActual vapour pressure [kPa], \nes - ea  \nSaturation vapour pressure deficit\
    \ [kPa], \nΔ \nSlope of vapour pressure curve [kPa °C-1], \nγ \nPsychrometric\
    \ constant [kPa °C-1]. \n2.1.1 Actual crop Evapo-transpiration (ETc) \nThe crop\
    \ evapo-transpiration differs distinctly from the reference evapo-transpiration\
    \ (ETo) \nas the ground cover, canopy properties and aerodynamic resistance of\
    \ the crop are different \nfrom grass. The Kc component of equation integrates\
    \ the characteristics of the crop (e.g., \ncrop height, fraction of net radiation\
    \ absorbed at the land surface, canopy resistance, and \nevaporation from bare\
    \ soil surface) into the ETc estimation equation, to account for the \ndifference\
    \ in transpiration between the actual crop and the reference grass. The effects\
    \ of \ncharacteristics that distinguish field crops from grass are integrated\
    \ into the crop coefficient \n(Kc). In the crop coefficient approach, crop evapo-transpiration\
    \ is calculated by multiplying \nETo by Kc. \n \nETc = Kc x ETo. \n (2.2) \nWhere:\
    \  \nETc  \nCrop evapo-transpiration [mm day-1], \nKc  \nCrop coefficient [dimensionless],\
    \ \nETo  \nReference crop evapo-transpiration [mm day-1]. \n2.2 A case study on\
    \ using Wireless Sensor Network (WSN) in estimating crop water \nrequirement at\
    \ Sula vineyard, Nashik, India \nGrapes cultivation in India is limited due to\
    \ high recurring cost of cultivation. There is \nsignificant variability in the\
    \ quality of grapes over the years and also within the field. \nAssessing the\
    \ yield and quality (both temporal and spatial) is a big challenge for wineries\
    \ \n(Das et. al., 2010). Vine soil-water status constitutes one of the main driving\
    \ factors which \naffect plant vegetative growth, yield and wine test and quality.\
    \ Irrigation requirements are \ncurrently estimated from winter/summer season\
    \ as well as berry forming stages. Providing \nthe methods and tools for continuous\
    \ measurement of soil and crop parameters to \ncharacterize the variability of\
    \ soil water status will be of great help to the grape growers. A \nwww.intechopen.com\n\
    \ \nProblems, Perspectives and Challenges of Agricultural Water Management \n\
    \ \n224 \nwireless sensor network can facilitate creation of a real-time networked\
    \ database. The real \ntime information from the fields such as soil water content,\
    \ temperature, and plant \ncharacteristics provided a good base for making decisions\
    \ on irrigation i.e. ( when and how \nmuch water to apply). The objective of our\
    \ study was to relate irrigation requirement \nthrough evapo-transpiration. The\
    \ section below describes the agricultural experiments \nconducted in the grape\
    \ field which concentrated on monitoring different parameters \nrelating to crop,\
    \ soil and climate by deploying the wireless sensors network so as to \nestablish\
    \ a correlation between sensors output and agricultural requirement in terms of\
    \ \nwater management.  \n2.2.1 Experimental setup at Green House, IIT Bombay and\
    \ vineyard at Nashik \nInitial deployment of sensors with a wireless sensor network\
    \ (WSN) in a greenhouse at IIT \nBombay (6 X 9 m) provided a pilot scale crop\
    \ monitoring environment. It was used for \ntesting the ruggedness of WSN for\
    \ crops grown under controlled conditions in a \ngreenhouse, using sensors embedded\
    \ in soil and surrounding which was later extended to a \nlarger scale  in an\
    \ intensely cultivated commercial grape farm i.e. Sula vineyard at Nashik \n(India).\
    \ Initially the WSN was tested in a greenhouse of  6 X 9 m in the laboratory at\
    \ Indian \nInstitute of Technology-Bombay (India). Okra plants were planted in\
    \ nine plots (1.5 X 3 m), \nwith four plants in a row, maintaining a distance\
    \ between rows and plant of 50 and 30 cms \nrespectively. WSN system deployed\
    \ consisted of the battery-powered nodes equipped with \nsensors for continuously\
    \ monitoring agricultural parameters consisting of air temperature, \nair relative\
    \ humidity, soil temperature and soil water content. These parameters were \n\
    periodically monitored and transmitted in a multi-hop to a centralized processing\
    \ unit (see \nsection 2.2.2). The measured and recorded values of parameters in\
    \ real time over a period of \n3 months permitted the calculation of evapotranspiration\
    \ (ET) (Shah et al., 2009). Figure 2.1 \nshows the schematics of agricultural\
    \ environment sensors deployed in the field while Fig 2.2 \nshows the sensors\
    \ deployed in greenhouse, IIT Bombay.  \n \nFig. 2.1. Schematics of Agricultural\
    \ Environmental Sensors deployed in the Field \nwww.intechopen.com\n \nPrecision\
    \ Irrigation: Sensor Network Based Irrigation \n \n225 \n \nFig. 2.2. Deployment\
    \ of Wireless sensor network (WSN) System \nThe WSN system tested at IIT- Lab\
    \ facility was extended to Sula Vineyard, Nashik (India), \nfor grape crop monitoring\
    \ as shown in Figure 2.3. The sensors were deployed at a grid of 30 \nm by 30\
    \ m. Each node was able to transmit/receive packets to other nodes inside a well-\n\
    defined transmission range of 30m. WSN system was focused on establishing feasibility\
    \ of \ncapturing and analyzing data and facilitated global data accessibility\
    \ from a small number \nof wireless sensor pods.  \n \nFig. 2.3. Wireless Sensor\
    \ Network Deployment at Vineyard, Nashik, MH, India \n2.2.2 Details of developed\
    \ Wireless Sensor Network at IIT Bombay \nThe system designed, developed and deployed\
    \ at IIT Bombay for its utility for in-field \nmonitoring of grape crop performance,\
    \ is being popularly known as AgriSens. (Das et. al., \nwww.intechopen.com\n \n\
    Problems, Perspectives and Challenges of Agricultural Water Management \n \n226\
    \ \n2010). It used a combination of wired and wireless sensors to collect sensory\
    \ data such as \nsoil pH, soil moisture, soil temperature, etc. Data collected\
    \ by the sensors were wirelessly \ntransferred in multi-hop manner to a base station\
    \ node (about 700 m away from the mote) \nconnected with embedded gateway for\
    \ data logging and correlation. An embedded gateway \nbase station performed elementary\
    \ data aggregation and filtering algorithms and \ntransmitted the sensory data\
    \ to Agri-information server via GPRS, a long distance, high \ndata-rate connectivity\
    \ as illustrated in Fig 2.4. Here the data was processed and stored in a \nstructured\
    \ database to provide useful information to the farmers to take action such as,\
    \ e.g., \nstarting or stopping of the irrigation system. The server was situated\
    \ at Signal Processing \nArtificial Neural Network lab, Department of Electrical\
    \ Engineering IIT Bombay, India \nwhich is about 200 km away from the fields.\
    \ The server also supported a real time updated \nweb-interface giving details\
    \ about the measured agri-parameters (Neelamegam et al., 2007). \nThe closed loop\
    \ self organizing WSN system used in the study comprised of the following: \n\
    • \nThe battery powered nodes with embedded sensors for registering the air temperature\
    \ \nand relative humidity were deployed at grid of 30 X 30 m.  \n• \nSHT1x is\
    \ a single chip relative humidity and temperature sensor. The device includes\
    \ a \ncapacitive polymer sensing element for measuring relative humidity and temperature.\
    \ \n• \nNetworked sensors that measure, and record into an electronics data base,\
    \ several \nvariables of interest such as soil moisture, soil temperature, pH,\
    \ ambient relative \nhumidity and ambient temperature. Such automated monitoring\
    \ system also facilitates \nthe crop experts with a large amount of raw data in\
    \ electronic formats. \n• \nEach node is able to transmit/receive packets to other\
    \ nodes inside a well-defined \ntransmission range varying between 30 to 1000\
    \ m. A single node can transmit the \ntemperature and relative humidity every\
    \ minute. \n• \nIn a wireless sensor network when the transmission range of a\
    \ sensor node is not \nsufficient then it uses multi hop communication to reach\
    \ the destination node or sink \nnode. For example a node communicates data collected,\
    \ to a nearby node which in turn \ntransmits to another nearby node in the direction\
    \ of the sink node. This data forwarding \nmechanism continues till the sink node\
    \ is reached. Multi hop communication extends \nthe transmission range of a sensor\
    \ node and also prevents it from draining soon. \n• \nSignal processing and data\
    \ processing algorithms that extract useful information out of \nmassive amounts\
    \ of raw data which is then used to generate alerts that are used to alter \n\
    sampling frequencies and activate actuators. \n• \nSecure web portal that allows\
    \ users at different location to access and share their agri-\ndata. \n• \nSolar\
    \ cell Polycrystalline solar modules (6 V and 500 mA) were used for charging lead\
    \ \nacid battery.  \n2.2.2.1 AgriSens irrigation system \nIn India, sprinkler\
    \ and drip irrigation systems are becoming popular irrigation systems. Drip \n\
    irrigation saves considerable amount of water and hence preferred. As grapevines\
    \ are \narranged in uniform row pattern, drip irrigation is an easy way to control\
    \ water. Automation \ncan fulfill water requirements of fairly large number of\
    \ grapevines with single valve. The same \npipeline can be used for providing\
    \ required nutrients also. Grapes are seasonal in India, and \nthey are being\
    \ planted in month of December to March, which is not a rainy season. Thus, \n\
    alternate water source has to be used making external source of water essential\
    \ for grapevines \nwww.intechopen.com\n \nPrecision Irrigation: Sensor Network\
    \ Based Irrigation \n \n227 \n(Shah et. al., 2009). In vineyard there are different\
    \ types of grapevines which requires different \namount of soil moisture (Burrell\
    \ et al., 2004). Also, it is very difficult to manually control the \nirrigation\
    \ required for particular type of grapevine. WSN based irrigation automation can\
    \ \ntackle the problem and also help to save considerable amount of water. The\
    \ moisture contents \nof the soil decide the actuator activation. If the threshold\
    \ level of the soil moisture goes down \nbelow a certain level, the valve gets\
    \ open. This threshold level has to be decided based on \nclimate, topography\
    \ and type of plant, etc, at the Agri-Information server (Desai et al., 2008).\
    \ \nThe WSN System, was designed to aid end users and researchers to analyze real\
    \ time sensor \ndata and assist in decision making for various applications. It\
    \ was a web based application that \ncould be accessed ubiquitously by the users\
    \ thus providing a convenient and nimble tool. \nSince it was integrated with\
    \ google map, it could provide location-based data. Moreover, this \nenabled the\
    \ information to be displayed in a visually readable format. \n \nFig. 2.4. Different\
    \ Components of Systems Developed at IIT Bombay \n2.2.2.2 Sensors suite \nFollowing\
    \ sensors were deployed based on the feedback received from Sula Vineyard \n(http://www.sulawines.com)\
    \ in addition to air temperature and air humidity sensor. \na. \nSoil moisture\
    \ sensor  \nMeasuring and monitoring soil moisture helps determining when to irrigate,\
    \ how much \nwater to apply. The sensor used is ECH2O probe by Decagon as shown\
    \ in Fig. 2.5 (a). It is a \ncapacitance probe that measures dielectric permeability\
    \ of medium. In soil, dielectric \npermeability is related to soil moisture content.\
    \ Soil moisture was calibrated in terms of \nvolumetric soil moisture content.\
    \  \nb. \nSoil temperature sensor \nThe soil temperature shown in Fig 2.5 (b)\
    \ from Decagon, has a resolution of 0.1◦C. It is \nenclosed in a low thermal conductivity\
    \ plastic assembly design to shield the sensor from \nsunlight and at the same\
    \ time maximizes convective air movement around the thermistor. \nwww.intechopen.com\n\
    \ \nProblems, Perspectives and Challenges of Agricultural Water Management \n\
    \ \n228 \n a) \n b) \nFig. 2.5. a) Soil Moisture Sensor, b) Soil Temperature Sensor\
    \ \n3. Lessons from the case-study on AgriSens project \n3.1 Estimation of Evapo-transpiration\
    \ (ET) rates for crop okra and grapes \nET is the loss of water from the crop\
    \ through combined process of soil evaporation and crop \ntranspiration as explained\
    \ in section 2.1. As discussed earlier, the rate of ET is a function of \nthree\
    \ critical factors i.e. weather parameters, soil moisture, and nature and stage\
    \ of growth \nof the crop. Estimation of ET, to establish the irrigation scheduling\
    \ using mathematical \napproach has long been seen as an appealing technique due\
    \ to simplicity of method when \ncompared with on-site measurements (Allen et\
    \ al., 1998). ET was estimated using the \nmodified Penman and Moneith model (shown\
    \ in equation 2.1) to calculate the reference ET \nand then multiplied with crop\
    \ coefficient (available in literature) to get the actual crop ET at \ndifferent\
    \ growth stages of the crop. The ET for okra was found to vary between 0.1 to\
    \ 4.0 \nmm/day, with highest water demand of about 4.0 mm/day during the month\
    \ of October - \nDecember 2007 as shown in Fig 2.7. This is explained by dry climate\
    \ experienced in Mumbai \nduring month of October to December.  \nThe calculated\
    \ values of ET for sula vineyard, Nashik were plotted against measured values\
    \ \nof soil moisture in Fig. 3.1. Figure 3.1 indicates that soil moisture is influencing\
    \ the ET loss. \nThis is in agreement with the effect explained by Hatfield and\
    \ Prueger (2008) and Brown \n(2000). The rates of ET decreased substantially with\
    \ decrease in soil moisture content \nmeasured over about the top 30 cm depth.\
    \ Knowing the ideal soil moisture content for crops \nand given soil texture we\
    \ can compute the ET and hence irrigation requirement. The  \nwww.intechopen.com\n\
    \ \nPrecision Irrigation: Sensor Network Based Irrigation \n \n229 \n \nFig. 3.1.\
    \ Variation of Evapo-transpiration (ET in mm/day) and Ambient Relative Humidity\
    \ \n(RH %) in the Greenhouse, IIT Bombay \n \nFig. 3.2. Variation of ET as a Function\
    \ of Soil Moisture Content, Sula Vineyard, Nashik for \nthe Months of March to\
    \ May 2008 \nwater requirement through a cycle of 110 days of grape cultivation\
    \ in the field ranges \nbetween 500 to 1200 mm (www.ikisan.com) and the values\
    \ computed through the sensed \nparameters in this work ranged from 550-1500 mm.\
    \ The values of ET for grapes were found \nto be varying between 5 to 14 mm/day\
    \ for the months of March till May, 2008. The ET \nvalues in grape fields are\
    \ found to be three times higher than those found in the test bed for \nokra at\
    \ IIT Bombay. The field ET for grape crop was computed for the summer months i.e.\
    \ \nMarch to May. The higher ET values for grapevine is further explained by both\
    \ higher wind \nwww.intechopen.com\n \nProblems, Perspectives and Challenges of\
    \ Agricultural Water Management \n \n230 \nvelocities in open field and the higher\
    \ crop coefficients for grapes ( 0.75) which is almost 1.7 \ntimes higher than\
    \ for okra crop (0.45). The variation in ET values between 5 to 14 mm/day is \n\
    primarily due to change in soil moisture as the variation in weather data was\
    \ small. \n4. Conclusions \nIn the past 50 years, world agriculture has experienced\
    \ enormous changes. Industrialized \ncountries have created a modernized agricultural\
    \ system with high productivity and \nadvanced technology. Post green-revolution\
    \ era agriculture in India is facing a technological \nfatigue for two reasons;\
    \ a) high rates of ground-water depletion and b) Soil salinity due to \nexcessive\
    \ irrigation in some pockets. Rapid socio-economic changes in some developing\
    \ \ncountries are creating new opportunities for application of precision agriculture\
    \ (PA).  \nThe field deployment case study discussed in the chapter has demonstrated\
    \ the utility in \nestimation/saving water use. Weather data monitoring in the\
    \ shednet house test bed facility at \nIIT Bombay helped find the ET values for\
    \ okra ranging between 0.1 to 4 mm/day. The actual \nET for grapes in Nashik vineyard,\
    \ India was found to be varying between 5 to 14 mm/day as \nthe soil moisture\
    \ varied between 15 to 40 %. While the ET computations were carried out based\
    \ \non data from one season, data for 3- 4 seasons is required for any package\
    \ of recommended \npractices as guidelines for entrepreneurs. We believe that\
    \ WSN supported agriculture \nmanagement will be particularly useful for larger\
    \ farms because of its flexibility, more number \nof sampling points, ease in\
    \ operation compared to wired sensors- network system. The wide \nscale appeal\
    \ of sustainable practices in agriculture and the newer developments in providing\
    \ \nlow cost/robust sensor based systems are likely to provide the necessary fillip\
    \ in future \nagriculture world-wide. Currently the WSN system has high probability\
    \ of economic viability \nfor high value crops. Despite the widespread promotion\
    \ and adoption of precision agriculture, \nthe concept of precision irrigation\
    \ or irrigation as a component of precision agricultural \nsystems is still in\
    \ its infancy. Some more case studies similar to the one described for other \n\
    crop-agriculture systems will go a long way in building faith in sensor based\
    \ irrigation \ntowards both saving precious water as well as soil-degradation\
    \ due to excessive surface flood \nirrigation. It also remains to be seen through\
    \ the field trials that precision irrigation can \nprovide substantially greater\
    \ benefits than traditional irrigation scheduling. The advances in \nwireless\
    \ sensor networks have made some practical deployment possible for various \n\
    agricultural operations on demonstration scale, which until a few years ago was\
    \ considered \nextremely costly or labor intensive. Precision irrigation system\
    \ with robust components such \nas, sensing agricultural parameters, identification\
    \ of sensing location and data gathering, \ntransferring data from crop field\
    \ to control station for decision making and actuation and \ncontrol decision\
    \ based on sensed data will find application in future agriculture. Thus the \n\
    great potential of integrating the precision farming with WSN to interpolate over\
    \ a large area \nfor spatial decision making need to be tapped for making agriculture\
    \ attractive in future.  \n5. Acknowledgement \nThe case-study presented here\
    \ was a part of research project at IIT-Bombay that was \nsupported through a\
    \ financial contribution from the Department of Information Technology \nof Ministry\
    \ of Communications and Information Technology of Government of India. \nAuthors\
    \ are also grateful for the technical contributions particularly on communication\
    \ \nnetworks (WSN) received from Prof U B Desai and Prof S. N. Merchant of Electrical\
    \ \nEngineering Department, IIT-Bombay.  \nwww.intechopen.com\n \nPrecision Irrigation:\
    \ Sensor Network Based Irrigation \n \n231 \n6. References \nAdams, M.L.; Cook,\
    \ S. & Corner, R. (2000). Managing Uncertainty in Site-Specific \nManagement:\
    \ What is the Best Model? Precision Agriculture. 2, 39-54. \nAkyildiz, I.F.; Su,\
    \ W.; Sankarasubramaniam, Y. & Cayirci, E. (2002). Wireless Sensor \nNetworks:\
    \ A Survey, Computer  Network, 38, 393-422. \nAkyildiz, I.F. & Xudong, W. (2005).\
    \ A Survey on Wireless Mesh Networks, IEEE \nCommunication Magazine, Vol. 43,\
    \ pp. S23-S30. \nAllen, R.G.; Jensen, M.E.; Wright, J.L. & Burman, R.D. (1989).\
    \ Operational Estimates of \nReference  Evapo-transpiration,  Agronomy Journal,\
    \ 81, pp 650–662. \nAllen, R.G.; Pereira, L.S.; Raes, D. & Smith, M. (1998). Crop\
    \ Evapotranspiration - Guidelines \nfor Computing Crop  Water  Requirements- FAO\
    \ Irrigation and Drainage Paper 56. \n09-01-2010, Available from  http://www.fao.org/docrep/x0490e/x0490e0b.htm.\
    \ \nBooker, J.D.; Bordovsky, J.; Lascano, R.J. &  Segarra, E. (2006). Variable\
    \ Rate Irrigation on \nCotton Lint Yield and  Fiber  Quality. Belt wide Cotton\
    \ Conferences, San Antonio, Texas. \nBronson, K.F.;  Booker, J.D.; Bordovsky,\
    \ J.P.;  Keeling, J.W.;  Wheeler, T.A.; Boman, R.K.; \nParajulee, M.N;,  Segarra,\
    \  E. & Nichols, R.L. (2006) Site-specific Irrigation and \nNitrogen Management\
    \ for Cotton  Production in the  Southern High  Plains. \nAgronomy Journal, 98,\
    \ 212-219. \nBrown, P. (2000). Turf Irrigation Management Series: I, University\
    \ of Arizona, Cooperative \nExtension Publication  AZ  1194, 09-10-2009, Available\
    \ from  \n \nhttp://ag.arizona.edu/pubs/water/az1194.pdf. \nBurrell,J.; Brooke,T.\
    \ & Beckwith, R. (2004). Vineyard Computing: Sensor Networks in \nAgricultural\
    \  Computing, IEEE  Pervasive Computing, pp 38-45. \nDas, Ipsita; Shah N.G. &\
    \ Merchant, S.N. (2010). AgriSens: Wireless Sensor Network in Precision \nFarming:\
    \ A Case study. LAP Lambert Academic Publishing, Germany, ISBN: 978-3-\n8433-5525-4,\
    \ Germany. \nDesai, U.B.; Merchant, S.N.& Shah N.G. (2008). Design and Development\
    \ of Wireless Sensor \nNetwork for Real Time  Remote  Monitoring. Unpublished\
    \ Project Report submitted \nto Ministry of Information Technology,  Govt of India.\
    \ \nDukes, M.D. & Scholberg, J.M. (2004) Automated Subsurface Drip Irrigation\
    \ Based on Soil \nMoisture. ASAE Paper  No. 052188. \nEvans, R.G. & Sadler, E.\
    \ (2008) Methods and Technologies to Improve Efficiency of Water \nUse. Water\
    \ Resources  Research, 44. \nGoodwin, I. & O’Connell , M.G. (2008). The Future\
    \ of Irrigated Production Horticulture – \nWorld and Australian  Perspective.\
    \ Acta Horticulturae, 792, 449–458. \nHatfield, J.L. & Prueger, J.H. (2008). Encyclopaedia\
    \ of agricultural, food, and biological \nengineering. D. R. Heldman (Ed). New\
    \ York: Marcell Dekkar, pp 278-281. \nHedley, C.B. & Yule, I.J. (2009). Soil Water\
    \ Status Mapping and Two Variable-Rate Irrigation \nScenarios. Precision  Agriculture,\
    \ 10, 342-355. \nJensen, M.J. (1981). Summary and Challenges. In Proceeding of\
    \ the ASAE’s Irrigation \nScheduling Conf., Irrigation  Scheduling for Water &\
    \ Energy Conservation, American \nSociety of Agricultural Engineer, St. Joseph,\
    \ MI. pp. 225-231. \nKing, B.A.; Stark, J.C. & Wall, R.W. (2006). Comparison of\
    \ Site-Specific and Conventional \nUniform Irrigation  Management for Potatoes.\
    \ Applied Engineering in Agriculture, \n22(5), 677-688. \nLadha, J. K.; Fischer,\
    \ A. K.; Hossain, M.; Hobbs, P. R. & Hardy, B. (2000). Improving the \nProductivity\
    \ and  Sustainability of  Rice-Wheat Systems of the Indo-Gangetic \nwww.intechopen.com\n\
    \ \nProblems, Perspectives and Challenges of Agricultural Water Management \n\
    \ \n232 \nPlains: IRRI Discussion Paper Series No. 40. Makati City (Philippines):\
    \  \nInternational Rice Research Institute. pp 31. \nMcBratney, A.B.; Whelan,\
    \ B.;  Ancev, T. & Bouma, J. (2005). Future Directions of Precision \nAgriculture.\
    \ Precision  Agriculture, 6, 7-23. \nModak, C.S. (2009). Unpublished Report from\
    \ Land and Water Management Institute, \nAurangabad,  Maharashtra,  India. \n\
    Mondal, P. & Tewari, V.K. (2007). Present Status of Precision Farming: A Review,\
    \ \nInternational Journal Agricultural  Research. 2(1), pp 1–10. \nNeelamegam,\
    \ S.; Naveen, C. P. R. G.; Padmawar, M.; Desai, U. B.; Merchant, S.N. & \nKulkarni,\
    \ V. (2007). AgriSens:  Wireless Sensor Networks for Agriculture- Sula \nVineyard\
    \ A Case Study, 1st International  Workshop on Wireless  Sensor Network \nDeployments,\
    \ Santa Fe, New Mexico, U.S.A. June 18 – 20. \nPanchard, J.; Rao, S.; Prabhakar,\
    \ T. V.;  Hubaux, J.P. & Jamadagni, H. (2007). Common Sense \nNet: A Wireless\
    \  Sensor  Network for Resource-Poor Agriculture in the Semi-arid \nAreas of Developing\
    \ Countries. Information Technologies  and International \nDevelopment, Volume\
    \ 4, Number 1, 51–67. \nPierce, F.J. & Nowak, P. (1999). Aspects of Precision\
    \ Agriculture. Advances in Agronomy, 67, 1-85. \nRoy, S.;  Anurag, D. & Bandyopadhyay,\
    \ S. (2008). Agro-sense: Precision Agriculture using \nSensor-Based Wireless \
    \ Mesh  Networks. Innovations in NGN: Future Network and \nServices, In: Proceedings\
    \ of the First ITU-T  Kaleidoscope  Academic Conference, Geneva, \nItaly, pp 383–388.\
    \ \nSadler, E.J.; Evans, R.G.; Stone, K.C. & Camp, C.R. (2005). Opportunities\
    \ for Conservation \nwith Precision  Irrigation. Journal of Soil and Water Conservation,\
    \ 60(6), 371-379. \nSchoengold, K.;  Sunding, D.L. & Moreno, G. Agricultural Water\
    \ Demand and the Gains \nfrom Precision  Irrigation  Technology. 12-08-2011, Online\
    \ available from  \nhttp://giannini.ucop.edu/media/are-update/files/articles/v7n5_2.pdf.\
    \ \nShah, N.G.; Desai U.B.; Das, I.; Merchant, S.N. & Yadav, S.S. (2009). “In-Field\
    \ Wireless \nSensor Network (WSN)  For   Calculating Evapo-transpiration and Leaf\
    \ Wetness,  \nInternational Agricultural Engineering Journal,  18(3-4), pp 43-\
    \ 51. \nSmith, R.J.;  Raine, S.R.; McCarthy, A.C. & Hancock, N.H. (2009). Managing\
    \ Spatial and \nTemporal Variation in  Irrigated Agriculture Through Adaptive\
    \ Control. Australian \nJournal of Multi-disciplinary Engineering, 7(1),  79-90.\
    \ \nStafford, J.V. (2000). Implementing Precision Agriculture in the 21st century.\
    \ Journal of \nAgricultural Engineering  Research, 76, pp 267-275. \nWang, M.\
    \ (1998). Development of Precision Agriculture and Engineering Technology \nInnovation,\
    \ Transactions of the CSAE,  Chinese Society of Agricultural Engineering. \nBeijing,\
    \ 15(1), pp 231. \nWang, N.; Zhang, N. & Wang, M. (2002). Precision Agriculture,\
    \ A worldwide Overview, \nComputers and  Electronics in  Agriculture, 36, pp 113-132.\
    \ \nWang, N.; Zhang, N. & Wang, M. (2006). Wireless Sensors in Agriculture and\
    \ Food \nIndustry—Recent  Development  and Future Perspective, Review: Computers\
    \ and \nElectronics in Agriculture, 50, 1–14. \nWhelan, B.M.; McBratney, A.B.\
    \ & Boydell, B.C. (1997). The Impact of Precision Agriculture. \nProceedings of\
    \ the  ABARE  Outlook Conference,  Moree, UK, July, pp 5-7. \nYule, I.J., Hedley,\
    \ C.B. and Bradbury, S. (2008). Variable-rate irrigation. 12th Annual \nSymposium\
    \ on Precision Agriculture Research & Application in Australasia. Sydney. \nwww.intechopen.com\n\
    Problems, Perspectives and Challenges of Agricultural Water\nManagement\nEdited\
    \ by Dr. Manish Kumar\nISBN 978-953-51-0117-8\nHard cover, 456 pages\nPublisher\
    \ InTech\nPublished online 09, March, 2012\nPublished in print edition March,\
    \ 2012\nInTech Europe\nUniversity Campus STeP Ri \nSlavka Krautzeka 83/A \n51000\
    \ Rijeka, Croatia \nPhone: +385 (51) 770 447 \nFax: +385 (51) 686 166\nwww.intechopen.com\n\
    InTech China\nUnit 405, Office Block, Hotel Equatorial Shanghai \nNo.65, Yan An\
    \ Road (West), Shanghai, 200040, China \nPhone: +86-21-62489820 \nFax: +86-21-62489821\n\
    Food security emerged as an issue in the first decade of the 21st Century, questioning\
    \ the sustainability of the\nhuman race, which is inevitably related directly\
    \ to the agricultural water management that has multifaceted\ndimensions and requires\
    \ interdisciplinary expertise in order to be dealt with. The purpose of this book\
    \ is to\nbring together and integrate the subject matter that deals with the equity,\
    \ profitability and irrigation water\npricing; modelling, monitoring and assessment\
    \ techniques; sustainable irrigation development and\nmanagement, and strategies\
    \ for irrigation water supply and conservation in a single text. The book is divided\n\
    into four sections and is intended to be a comprehensive reference for students,\
    \ professionals and\nresearchers working on various aspects of agricultural water\
    \ management. The book seeks its impact from the\ndiverse nature of content revealing\
    \ situations from different continents (Australia, USA, Asia, Europe and\nAfrica).\
    \ Various case studies have been discussed in the chapters to present a general\
    \ scenario of the\nproblem, perspective and challenges of irrigation water use.\n\
    How to reference\nIn order to correctly reference this scholarly work, feel free\
    \ to copy and paste the following:\nN. G. Shah ancd Ipsita Das (2012). Precision\
    \ Irrigation: Sensor Network Based Irrigation, Problems,\nPerspectives and Challenges\
    \ of Agricultural Water Management, Dr. Manish Kumar (Ed.), ISBN: 978-953-51-\n\
    0117-8, InTech, Available from: http://www.intechopen.com/books/problems-perspectives-and-challenges-of-\n\
    agricultural-water-management/precision-irrigation-sensor-network-based-irrigation-to-improve-water-use-\n\
    efficiency-in-agriculture\n© 2012 The Author(s). Licensee IntechOpen. This is\
    \ an open access article\ndistributed under the terms of the Creative Commons\
    \ Attribution 3.0\nLicense, which permits unrestricted use, distribution, and\
    \ reproduction in\nany medium, provided the original work is properly cited.\n"
  inline_citation: null
  journal: InTech eBooks
  limitations: null
  pdf_link: https://www.intechopen.com/citation-pdf-url/31504
  publication_year: 2012
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: 'Precision Irrigation: Sensor Network Based Irrigation'
  verbatim_quote1: Wireless sensor networks (WSNs) have become the most suitable technology
    to monitor the agricultural environment.
  verbatim_quote2: The widespread scale appeal of sustainable practices in agriculture
    and the newer developments in providing low cost/robust sensor based systems are
    likely to provide the necessary fillip in future agriculture world-wide.
  verbatim_quote3: Precision irrigation system with robust components such as, sensing
    agricultural parameters, identification of sensing location and data gathering,
    transferring data from crop field to control station for decision making and actuation
    and control decision based on sensed data will find application in future agriculture.
- DOI: https://doi.org/10.1007/978-3-662-57277-1_12
  analysis: 'The paper introduces the sensor cloud and focuses on the integration
    of cloud computing with wireless sensor networks to extend sensor capabilities.
    Of specific interest to the literature review is the ability of data from wireless
    sensor networks to be efficiently stored, visualized, and analyzed; and that the
    sensor cloud provides the necessary infrastructure. Furthermore, it utilizes cloud
    resources for users to easily access and manage wireless sensor networks.


    The authors detail the benefits of sensor clouds and also address some of the
    challenges and design issues. However, the scope of the issue is not detailed
    enough to fully address the review''s needs.'
  authors:
  - V. Bhanumathi
  - K. Kalaivanan
  citation_count: 5
  full_citation: 'Application Specific Sensor-Cloud: Architectural Model'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Computational Intelligence in
    Sensor Networks pp 277–305Cite as Home Computational Intelligence in Sensor Networks
    Chapter Application Specific Sensor-Cloud: Architectural Model V. Bhanumathi &
    K. Kalaivanan  Chapter First Online: 23 May 2018 788 Accesses 5 Citations Part
    of the book series: Studies in Computational Intelligence ((SCI,volume 776)) Abstract
    In recent years, the sensor cloud infrastructure dawns a huge advancement in many
    real time applications. The major drawback of Wireless Sensor Network (WSN) is
    its limited processing capability, bandwidth scarcity, insufficient memory, etc.
    In reality, the sensors (EEG, ECG, and so on) continuously sense the highly sensitive
    data, and send to the medical server leading to numerous challenges. The integration
    of cloud computing and WSNs with internet enables to cover and provide a service
    to the entire world, and also to overcome the deficiency of the WSNs. This chapter
    gives a prelude on the integration of cloud computing with WSNs and discusses
    the functional architectures, design issues, benefits and the applications of
    the sensor cloud infrastructure. In addition, we also developed a general architectural
    model for precision agriculture application and farmers awareness using sensor
    cloud. Keywords Wireless sensor networks Cloud computing Virtualization Sensor-cloud
    Access provided by University of Nebraska-Lincoln. Download chapter PDF 12.1 Introduction
    to Wireless Sensor Networks The advent of Wireless Sensor Networks (WSNs) brings
    a new paradigm to the real embedded system that consist of a large number low
    cost and low power sensors. The most important task of the sensor node in the
    remote area is to sense the events such as temperature, vibration, radiation,
    pressure, humidity, and so on. The WSNs have great significance in numerous real
    time applications like forest fire detection, earth observation, environmental
    monitoring, healthcare, wildlife animal tracking, landslide detection, industrial
    monitoring, water quality monitoring, precision agriculture, and so on. The main
    advantage of the sensor node is self configuration, i.e., the sensor nodes itself
    can connect with neighbor nodes and formulates the communication between them
    by using its sensing, computing, processing, and wireless communication capability.
    Thus, we can establish the network anywhere and anytime that is man accessible
    area like indoor application, health care, etc., and also in man unattended areas
    like hazardous environment, forest, and so on. In such places, we can deploy sensor
    node by using aircraft or a robot, and constructs the network. The replacement
    and recharging of the sensor battery is impossible, where the node is deployed
    in the hostile environment and also human monitoring system is highly dangerous
    [1, 2]. The sensor nodes collect the physical event from the targeted sensing
    area which in turn communicate to the sink by direct hop or multihop. In direct
    hop, the sensor nodes directly communicate with the Base Station (BS) that consume
    more power for transmitting the data, since the energy consumption of the sensor
    node is directly associated with the data packets size and the transmission distance,
    thereby lessening the network lifetime. In multihop mode, the sensor node utilizes
    the intermediate nodes to forward the data packets towards the sink. Thus, it
    conserves the significant amount of battery energy than direct hop. Due to the
    tiny nature of the sensor node, it many constraints including battery energy,
    communication, memory, and computational capability [3]. Among them, the battery
    energy is an important consideration of network design. There are several protocols
    evolved over the last decade, which aims at prolonging the lifespan and enhancing
    the energy efficiency of the WSNs. The data routing, channel assessment, and localization
    are crucial tasks in sensor network design which stipulate the efficacy of the
    WSNs protocols. There are several channel accessing techniques such as CSMA-CA,
    TDMA, CDMA, FDMA, SDMA, and so forth and various MAC protocols like BMAC, SMAC,
    UMAC, etc., try to avoid the contention in MAC level and improves the performance
    of the networks [4,5,6]. Currently, numerous routing protocols are presented that
    aim at enhancing energy efficiency of the network. According to the data flow
    structure, the routing protocols can be categorized into : (i) location based
    routing (ii) flat routing, and (iii) cluster based routing. The flat routing protocols
    like FLOODING, RUMOR ROUTING, GOSSIPS, etc., are discussed in [7,8,9], and these
    protocols consume more energy and produce the high control overhead. The well-known
    clustering protocols including Low Energy Adaptive Clustering Hierarchy (LEACH)
    [10], Mobility Based Clustering (MBC) [11], Hybrid Energy Efficient Distributed
    (HEED) [12], Velocity Energy efficient and Link aware Cluster Tree (VELCT) [13],
    etc., are introduced in order to improve the scalability and energy efficiency
    of the networks. In clustering, the sensing area is divided into number of clusters
    and each cluster is governed by a Cluster Head (CH). This CH is used to perform
    the co-ordination within the cluster including assigning a timeslot to the member
    nodes, collecting the data from its member, and transmitting the data packets
    to the destination. Besides these, the CH performs the data aggregation which
    eliminates the redundant packets and conserves the battery energy significantly.
    The location based routing protocols like Reliable and Energy Efficient Protocol
    (REEP) [14], Energy efficient Beaconless Geographic Routing (EBGR) [15], etc.,
    in which each sensor node forwards the data depending on the location itself and
    it is directed to the neighbors to reach the destination. This routing greatly
    reduces the control overhead and energy consumption. Pros: There is no fixed network
    infrastructure. The sensor node made the decision autonomously and establishes
    the communication. As a result, it is highly suitable for large scale networks,
    and also enhances the fault tolerance and scalability of the networks. Network
    establishment cost is low. Cons: Redundant sensing in the same place leads to
    overhead and reduces the network performance. Mobile sensor nodes often change
    their position that cause link failure and make unstable network topology. This
    will lead to lessen the packet delivery ratio, and increase the packet retransmission
    and overhead. The sensing event without location information is meaningless for
    such application like fire detection, radiation detection, animal tracking, etc.
    The existing mechanism uses a GPS to track the location of the sensor. However,
    the GPS equipped devices consume high power and reduce the network lifespan. Besides,
    deploying the GPS in indoor applications evinces the error location information.
    Achieving the time synchronization among the sensor nodes is very complex in distributed
    decision mechanism. It is highly vulnerable to security threats. The WSNs suffer
    from several attacks, including wormhole attack, sink hole attack, selective forwarding
    attack, Hello flood attack, Sybil attack, Byzantine attack, and a collision attack.
    Lacks central coordinating system causes high overhead. 12.2 Why Cloud Computing?
    In a traditional Wireless sensor network, the user wants to sense a event from
    the particular target area. They deploy the sensor node manually or spread to
    man unattended area by using aircraft or monitoring by using robot equipped with
    sensors. The WSNs applications are single user centric, i.e, the WSNs is developed
    and maintained by the single user for fetching the sensor data. The user is restricted
    to utilize their sensor information to single application and does not allow the
    accessing of the data to another party. The sensor networks put onto the cloud
    infrastructures, which transparently share the resource (sensor data) among the
    multiple users. It allows the user to utilize the same sensor resources to the
    multiple applications and lessens the redundant data in the sensing, thereby increasing
    data reusability and reduces the cost of WSNs. Cloud computing is an emerging
    paradigm that provides flexible, reliable and cost effective solution in many
    application services through internet. It also offers massive storage, computational
    resources in an on-demand manner (i.e., It aims at providing IT resources service
    in an on-demand manner, at any time, and at anywhere.). In addition to this, the
    cloud storage provides highly reliable and scalable data sharing. And also it
    can do the outsourcing of the sensor data to store and process, and it can meet
    out the computational demands of the consumer, by paying for the service according
    to the usage. National Institute of Standards and Technology (NIST) [16] defined
    cloud computing as a model for enabling ubiquitous, convenient, on-demand network
    access to a shared pool of configurable computing resources that can be rapidly
    provisioned and released with minimal management effort or service provider interaction.
    The essential characteristic of cloud computing are [16]: Automated elasticity:
    The cloud service provider continuously observes the client infrastructure and
    scales it automatically based on the users demand, i.e., ability to scale up and
    down computing capacity based on the demands. On-demand services: The user can
    directly request the service provider to access and manage their services through
    the web browser interface without any human interaction. Resource pooling: The
    computing resources are available to the users on the multi-tenant environment
    and virtual resources generated and deleted dynamically based on the demand of
    the consumer. Measured services: The monitoring servers in the Virtual Machine
    (VM) automatically monitor, control, and record the utilization of the cloud resources
    by the user, according to the meter capability. Wide range network access: The
    users can utilize the standard interface protocols for accessing the resources
    and services which are available over the internet. This will enhance the network
    accessibility between the cloud service provider and user devices like smart phone,
    tablet, laptop, and so on. 12.2.1 Service Model Table 12.1 shows the general service
    models and its applications. It is noted that SaaS is a software application.
    PaaS makes an execution runtimes without direct access to the Operating System
    (OS). IaaS is mainly for Virtual Machines, servers, storage systems, and other
    hardware/OS. 12.2.1.1 Software as a Service (SaaS) The cloud providers deliver
    the software or application product to the consumer over the World Wide Web (WWW),
    that are accessible by various client systems. The service provider is responsible
    for managing and controlling the computing infrastructure such as OS, storage,
    networks, server, etc. The service provider can upgrade the software or release
    the new features, in contrast to the customary software [16]. Table 12.1 Service
    model and its application Full size table Pros: the multiple users or consumers
    share the same cloud infrastructure. Cons: constrained in user specific-configuration.
    12.2.1.2 Platform as a Service (PaaS) The service supplier provides the users,
    the service stacks and computing platforms including development tool, programming
    language, libraries, services, Web 2.0 application run time, and middleware. Thus,
    the consumers easily attain the sensor cloud infrastructure and related application
    tools. The service providers control and manage the underlying network. Depending
    on the application, the user can manage the deployment model and settings of the
    configuration [16]. Pros: it allows the development of applications quickly and
    simply with reduced design complexity. Cons: high security risk due to the absence
    of control over the virtual machine and data processing. 12.2.1.3 Infrastructure
    as a Service (IaaS) IaaS typically delivers a virtualized platform infrastructure
    over the internet. In IaaS, the service provider aids the consumer in provisioning
    the network, data processing, server, processing, storage, application development,
    backups, location, and resource computing tools. Hence, the consumers design,
    build, deploy, and run the arbitrary application that is operated in a virtualized
    infrastructure. In addition to that the consumers have a complete control to the
    data processing and everything over their virtual machine and need not be responsible
    for controlling and managing the underlying cloud computing environment. But,
    the host firewall may have a limited control to choose the network components
    [16]. Pros: greatly manages the security risk. Cons: consumer has the full responsibility
    in all aspect of virtual machine management and backups. 12.2.2 Deployment Model
    Deployment model can be done in four ways: (i) private cloud, (ii) community cloud
    (iii) public cloud, and (iv) hybrid cloud. 12.2.2.1 Private Cloud This model is
    solely owned and governed by the individual organization or third party auditing
    or both. This model shares its resources internally to the multiple consumers
    [16]. Pros: It provides a high level of security. Service providers can easily
    customize the software and other resources. Cons: It has a limited storage, server,
    and services, owing to constrain in hardware and software of service providers.
    Examples: VMWare, vCloud Director, OpenStack. 12.2.2.2 Community Cloud This cloud
    is established by the group of organization and forms the community. It distributes
    the common interests such as mission, application, services, security policy,
    etc., within the specific community. This cloud may be owned and governed by the
    organization within the community, or third party auditing [16]. Pros: making
    a better utilization of the self organization advances from the autonomous computing.
    Cons: limited amount of data storage and bandwidth shared among the customers.
    Examples: Googles Gov Cloud. 12.2.2.3 Public Cloud The cloud resources are distributed
    to many customers for open use. The public pay the amount to the service provider,
    according to the usage of the services and cloud resources. This model is owned
    and governed by the organization (business, government, education, or some combinations)
    [16]. Pros: It is easy to deploy and run and can be made available to the customer
    through the internet, hence the IT resources and services immediately available
    to the users. It is a pay as you go model, hence, there is no need for long term
    commitment or agreement with the service provider. Cons: High security risk (data
    privacy, integrity), because the client has no control on data processing and
    infrastructure. The resource and application customization is very complex or
    not possible. Examples: Sun cloud, Amazon AppEngine, Microsoft Azure, Google AppEngine,
    IBMs Blue Cloud. 12.2.2.4 Hybrid Cloud Hybrid cloud combines two or more different
    clouds that stay in distinct entities with identical infrastructure and capability
    [16]. Pros: it provides strong advance in the overall organizational agility.
    Cons: it may affect the enterprises identity and organizations security. Examples:
    open source - Nebula cloud computing project. 12.3 Introduction to Sensor Cloud
    The integration of the sensor networks, cloud computing and internet provides
    the plenty of sensor instances, IT resources, services over the internet and also
    enable these resources whenever and wherever the user wants to access. According
    to MicroStrains [17], a sensor cloud is a unique sensor data storage, visualization
    and remote management platform that leverages powerful cloud computing technologies
    to provide excellent data scalability, rapid visualization, and user programmable
    analysis. 12.3.1 Benefits of the Sensor Cloud The benefits of the sensor cloud
    infrastructure are summarized using the research article [17,18,19,20,21,22,23,24,25,26,27,28].
    Data Management: Accessing and storing of the sensor data is efficiently handled
    in sensor cloud that overcomes the issue of data gathering from WSNs. IT infrastructure:
    Sensor cloud architecture allows the multiple users, who can access the same set
    of information for various applications, since it shares and allocates their resources
    to the users in on demand manner as per the request. Scalable resource utilization:
    Sensor cloud provides a scalable services i.e., rapidly scale up or scale down
    the consumption of resources as per the requirement of the applications. Thus,
    the sensor information can be utilized by multiple services and users without
    any intercession. Dynamic Provisioning of Services: Accessing and storing of the
    sensor information anywhere and any time, if it is linked to the internet, thus
    gives an enhanced flexibility and scalability. Quick Response Time: The sensor
    cloud immediately responds to the users, as it enables the users to search for
    the large number of sensor data stored in cloud infrastructure easily and also
    makes a decision very quickly on real time application by using effective computational
    methods. Unlimited storage space: Provisioning of the unlimited storage memory
    on rent basis to the users reduce the memory deficiency in WSNs. Runtime Resource
    management: Sensor cloud automatically gives an alternative in case of faulty
    resources over the run time. This feature further extends their fault tolerance
    capability. Collaboration: Sensor cloud is the collaboration of different Wireless
    sensor network providers, hence multiple application information shared from the
    various administrative domain which enhances the utilization of resources and
    energy efficiency. Location independent: The user can access and utilize the resource
    as well as do some task irrespective of being a particular location. Thus, it
    has a high flexibility and is well suited for high mobility. Rapid Elasticity:
    Cloud gives an elastic platform for gathering, processing, storing, and sharing
    of huge amount of the data from various application domains. Flexibility in resource
    utilization: It allows the user to effectively utilize the shared pool of cloud
    resource in an on-demand manner like processors, memory, services and so on.,
    thus reducing the constrains of the sensor networks. Real time support: The key
    feature of the sensor cloud is real time support that makes a real time decision
    in multiple users and various application situations. Virtualization: The Virtualized
    platform of sensor provides an effective sharing of real time information among
    the various users. It also enables dynamic resource management, which results
    in efficient utilization of cloud resource. Cost effectiveness and minimal maintenance
    requirement: This platform dynamically shared their resource including storage,
    services, operating system, real time sensor information, etc., to the multiple
    users. Thus, the service providing organization can extend their services to a
    large number of users with reasonable pricing and also lessen the maintenance
    cost. Network lifetime: The sensor cloud gives an optimal duty scheduling of the
    deployed sensor nodes. Owing to this, the sensor consumes a reduced battery power,
    which in turn extends the lifetime. Re-configurability: The sensor cloud affords
    multiple services to multiple users, thus it facilitates the users which can able
    to select to switch application, and reconfigure the sensors based on the requirement
    of their demand. 12.3.2 Applications of Sensor Cloud Smart city: The sensor cloud
    infrastructure plays a key role in developing a smart city. The various organizations
    have been concerned with different level of collaboration to provide a smart city
    services such as water monitoring, e-toll, car parking, video surveillance, smart
    transportation, street light monitoring, etc., [18]. Physical activity monitoring:
    This application platform is developed for monitoring the physical activity such
    as lying down, sitting, stand still, walking, running, jumping, etc., by using
    wearable sensors (accelerometer sensor), SPINE Android App, and cloud computing
    infrastructure. This can enable to monitor the aged people or patient fall detection,
    and also determine if a person gets up after falling down [19]. Fire emergency
    evacuation: The deployment of the WSNs in a large building is used to detect the
    occurrence of fire. The standard fire safety system consists of the smoke sensor,
    temperature sensor, fire alarm, and fire fighting equipment which is connected
    to the cloud infrastructure. This system gives the necessary information such
    as fire location, status of egress route, health information to the fire fighter.
    This can be used to evacuate the person from the building and also track the health
    of the fire fighter or person. Thus it enhances the fire fighter safety, and efficacy
    of the tracking [20]. Battlefield surveillance: The battlefield surveillance system
    is developed to monitor the enemys missiles, weapons and aircrafts, in which the
    Mobile WSNs, that links with cloud computing using wireless communication technology
    like Zigbee, Bluetooth, Wi-Fi, 2G, 3G, 4G, and so forth. This Mobile WSN performs
    the parameter estimation for effectively pointing out the ememy targets [21].
    Epileptic seizure detection: An automatic epileptic seizure detection framework
    contains: (i) wearable EEG sensor placed on the different location of the brain.
    This is used to capture the electrical activity of the brain. (ii) the mobile
    with android app is used to send the gathered EEG signal to cloud infrastructure.
    The automated detection system in cloud finds any abnormality in the captured
    signal, immediately send the alert message to the user, and advised to take precautionary
    measures and defend itself [22, 23]. Precision agriculture: In irrigation management,
    the on field sensors such as moisture sensor, ambient temperature sensor, humidity
    sensor, and soil temperature sensor is deployed to monitor the crop field. The
    sensor owner provides this information to the cloud infrastructure on rental basis.
    The end user can access the irrigation management services and the meteorological
    weather report from the cloud by subscription. Thereby, the end user can monitor
    the crop field condition and manage the irrigation schedule. In addition, the
    UAV based crop disease monitoring information also shared in the cloud infrastructure
    which enhances the precision agriculture with low cost [24]. Smart transportation:
    The sensor cloud based transportation system provides a guideline to the drivers
    and publics by the way of GPS information, sharing the real time traffic and public
    transportation information. This information enables the drivers and publics to
    achieve an enhanced navigation such as to track status and current location of
    the vehicle, to avoid the collision, to provide the traffic free track to reach
    the destination and time of arrival, etc. The recent development of automated
    driving system (Dedicated short Range Communication) fully depends on the Wi-Fi,
    GPS, sensor networks, and cloud infrastructure which greatly enhance performance
    of the vehicular transportation [18]. Environmental monitoring: The environmental
    monitoring system uses different sensors such as sound, light, barometer, temperature,
    \(\text {CO}_{2}\), seismic, and so forth that provides a continuous monitoring
    of the causes of earthquake, tsunami, landslide, volcano explosion, etc. This
    information can be put onto the sensor cloud infrastructure and is used to predict
    before the occurrence of such a disaster and greatly saves the human being from
    the casualty and lives. Weather prediction: Weather forecasting station deploys
    the various types of sensor in order to collect the information such as relative
    humidity, barometric pressure, soil moisture, temperature, ambient light, wind
    speed and direction, solar radiation, etc., from a given location. Through the
    sensor cloud infrastructure, these sensor instances are concurrently used with
    other sensor instance, i.e., physical sensor data of the weather station are not
    only used to predict the weather changes, but also it is used by the farmers for
    scheduling the water irrigation. 12.3.3 General Architecture of Sensor Cloud The
    general architecture of the sensor cloud is shown in the following Fig. 12.1.
    12.3.3.1 Sensor Cloud Administrator or Service Provider Sensor cloud administrator
    or provider is responsible for preparing the resources of cloud computing services
    in order to develop a sensor cloud infrastructure. And also prepares the service
    catalog template that fulfills the requirement of the users. They also responsible
    for managing the IT resources, virtual sensor management, monitor, control, and
    settle the amount to the sensor owner, IT resource owner and billing and collecting
    the resource usage amount from the users [27, 28]. Fig. 12.1 General architecture
    of sensor cloud Full size image 12.3.3.2 Sensor Owner The sensor owner can freely
    register or unregister their Physical Sensor (PS) and its properties to the sensor
    cloud infrastructure. This can enable the sensor owner shares their type of sensor
    data and location to users. The sensor owner provides their sensor data to the
    service provider on rental basis. The sensor owner is only responsible for sensor
    network maintenance (sensor battery, hardware, purchase of sensor, etc.,) [29].
    12.3.3.3 End User The end user registers the sensor data for their services or
    applications through service catalog facility in the portal. The service provider
    prepares the new service template which meets the requirement of the users. Thus,
    the user can access and control the virtual sensor directly. The user paid the
    amount for the usage of the virtual sensor data. The sensor cloud providers stipulate
    their pricing of the services according the utilization of cloud storage (i.e.,
    amount of data stored, the amount of data in and out of the cloud storage, the
    number of http request used), Computational resources including virtual machine
    instance, CPU, RAM, I/O capacity and other IT resources [28, 29]. The followings
    are mostly used in pricing models [27]. On-demand - The service requester utilizes
    the sensor cloud services on the pay-as- you- go. The requester pays the amount
    based on the usage of the service instance. Prepaid - The service requester pays
    the fixed amount and reserves the services for a specific duration. Auctioned
    - The service provider allocates the computing capacity to the service requester
    by offering the prices at an action sale. The bid rate is regulated by supply
    and demand. This model offers a lower price than prepaid model. 12.3.4 Functional
    Architecture of Sensor Cloud As shown in Fig. 12.2, the each components of the
    functional block diagram of sensor cloud infrastructure are elaborately explained
    below. 12.3.4.1 Database and Repository The database storage contains the definition
    of the physical sensor, Virtual Sensor (VS), Virtual Sensor Group (VSG), and IT
    resources (Sensor Owner-ID, Location, Sensor-ID, type of the sensing data information
    like pressure, temperature, humidity, etc., VGS-ID, VS-ID, Virtual server-ID,
    User-ID, Resource server-ID, Virtual server-ID, host name, and specification,
    IP address). The repository storage contains the templates of the VS and the VSG.
    This template provides a library and its supporting file that defines the data
    mapping rules, as well as data source class name depending on the requirement
    of the user registration [29, 30]. 12.3.4.2 User Centric Layer The user centric
    layer is used to interconnect the users to the sensor cloud. The main components
    of the client centric layer are the user interface, session management, membership
    management, and user repository. The user interface allows user specify parameters
    including sensing event, area of interests, sensing duration, sensing duration,
    and so on. The session management is responsible for the creation, maintenance,
    and termination of the sessions between the user and middleware. The membership
    management gives a right to access the provisioned services only to the authorized
    user. The user repository has the detailed information of the users including
    the total duration of the service accessing, account ID and other details, payment
    history, billing information, data sent by WSNs, data usage, etc. [31]. Fig. 12.2
    Functional block diagram of sensor cloud Full size image 12.3.4.3 Sensor Centric
    Layer The sensor centric layer is responsible to act as an intermediate layer
    between the middleware layer and sensor layer. This layer enables the Sensor Networks
    (SN) to access the sensor cloud directly by using SN registration, SN maintenance
    and data component. The owner of the SN wants to provide their services (information)
    through sensor cloud, the owner need to register the details of their sensor networks.
    The sensor cloud verifies the registration information and makes the trust relationship
    with WSNs owner. Thus, it ensures the trust data communication between the SN
    owner and sensor cloud core. The SN maintenance layer ensures the quality services
    of the SN to the sensor cloud core. It provides an interoperability and coordination
    of the different sensor platforms. Also, it periodically checks their network
    performance and node activity, updates the current status of sensor nodes, and
    gives the time synchronization among the sensor nodes and networks. Thus, the
    sensor centric layer enhances reliable and trustful data communication between
    the WSNs and sensor cloud core. Since, it avoids the tampered and inaccurate sensor
    reading given to the cloud [31]. 12.3.4.4 Middleware Layer The middleware layer
    lies between the sensor centric and client centric layers, which is used to connect
    the client request with sensor data. It is a sensor cloud core which performs
    numerous functions including data flow management, configuration management, physical
    and virtual layer management, application performance management, provision management,
    resource management, life cycle management, and so on. 12.3.4.5 Workflow Management
    A work flow defines the sequence of steps to handle the various tasks, i.e., the
    task should be structured, executed, and tracked in a definite way. Hence, it
    reduces the run time, workload, delay, storage, etc. And also enhances the effective
    utilization of the resources [31]. 12.3.4.6 Data Analytics The cloud computing
    system uses a data mining process for analyzing the big data gathered from the
    physical sensor. This computing process is effectively done by using the mechanism
    such as computational intelligence, machine learning, statistical analysis, and
    database management. The data mining lets the anomaly detection, Association rule
    learning, correlation, clustering, classification, and Regression, which result
    in lessening the big data into the manageable data size, derive the data pattern.
    The key benefits of data analytics are speedy and better decision making in many
    real time application and cost reduction [32]. 12.3.4.7 Resource Management It
    provides the IT resource including networks, server, CPU, etc., and updates the
    definition of the VS and VSG service template in repository storage [33, 34].
    Fig. 12.3 Lifecycle management Full size image 12.3.4.8 Configuration Management
    The configuration management ensures the provision of flexibility, scalability,
    and other QoS of sensor cloud to the client. It lets the adding and removing of
    the client dynamically from the cloud services and also provides the flexible
    reconfiguration as the clients objectives change. It also affords the cloud services
    for scalable heterogeneous application and multi-tenants [35]. 12.3.4.9 Lifecycle
    Management The main duties of the lifecycle management and their work flow are
    demonstrated in Figs. 12.3 and 12.4. The service provider or cloud administrator
    prepares the service catalog that contains the current service specification including
    Operating System, available service application, sensor information details, hardware
    specification, network specification, location, and so on. This can let to create
    the service template and services instance, that meet the users requirement [30,
    36]. Fig. 12.4 The flow of lifecycle in sensor cloud Full size image The procedure
    for lifecycle flow is described below: (i) The end user enables the sensor cloud
    to log in to the portal on the web- browser. (ii) The end user selects the appropriate
    service template and IT resource from the catalog on the portal. The portal server
    directly displays these templates which are stored in the repository. (iii) Then,
    portal server sends the request to the provision server. (iv) After the registration
    of the user requirement, the provision sever reserve the IT resources, VS and
    VGS from the existing server or from the new virtual server by using a monitoring
    server. (v) The provision server collects the VS and VSG service template from
    the repository and generate the service instance. (vi) It also provisions the
    VSG on the chosen virtual server. (vii) Updates the new definition of the VSG.
    (viii) The service provider send the acknowledgement to the user for intimating
    the successful creation of services instance. (ix) Then, the user receives the
    sensor data from the VSG and also can control the VS and VSG directly. (x) The
    user unregisters from the services, once he completes. 12.3.4.10 Provision Management
    Provisional management is responsible for getting template of VS and VSG from
    the repository as the user request from the portal. This template is used to generate
    the VS (service instances) and its VSG and reserves the IT resources from the
    pool. The provision server updates the definition of the new VSG. This provisions
    the VSG in the virtual server. Once the service template is created successfully,
    then the service provider sends the acknowledgment to the user, then selecting
    the appropriate service instance to retrieve the data from the virtual sensor
    and control the VSG directly. And the user discharge from the services whenever
    useless. The monitoring server receives the information about the VS through an
    agent in the virtual server. The cloud administrator retrieves the monitoring
    information the web browser and can be used to inspect the performance of the
    server [29,30,31]. 12.3.4.11 Virtual Sensor Management A virtual sensor is an
    emulation of a physical sensor that gets its sensor data from the underlying physical
    sensors. The VS gives a customized view to the end users using distribution and
    location transparency. The VS encompasses a meta-data about the physical sensors
    and the end user. The virtual server creates the service instance, once it receives
    the request of the service instance from the provision server. After creating
    the instance, it groups the virtual sensor which is related to the concerned request
    of the service instance and updates the definition of the newly generated service
    instance [30, 31]. 12.3.4.12 Communication Layer The short range wireless technology
    is used to connect the sensor nodes to the BS. And also its specifications are
    summarized in Table 12.2. The recent advancement in the cellular network is 3G,
    4G, LTE, 5G, etc. which is relatively low cost and straightforward method to develop
    a Subscriber Identity Module (SIM) based Sensor cloud applications. Nowadays,
    these wireless cellular networks offer a wide range service with high speed. These
    carrier networks provide the sensor information and cloud services to the world
    wide. Table 12.2 Comparison of short range communication in WSNs Full size table
    12.3.5 Design Issues and Challenges The design issues and research challenges
    of the sensor cloud infrastructure are summarized from the research articles [17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37].
    Issue in shared technology: The sensor cloud infrastructure uses a virtualization
    mechanism that shares the same cloud resources among the multiple users. This
    data sharing mechanism enables the malicious user to access the information about
    the other users. Thus, it affects the reliability, and trustfulness of the network
    and overall performance of the cloud infrastructure. Hence, a rigid authentication
    mechanism and suitable firewall is required to solve this issue. Data analytic
    issue: The biggest issue of the cloud computing is data analytic and become more
    critical when handling the multimedia data, and sensor events from the various
    sensor networks. It is very complex for tracking data pattern from the big data.
    To overcome this issue, it needs sound methodology for analysis the big data and
    convert into manageable data. It can also allow the user and service providers
    to use the IT resources effectively. Cloud security issue: The features of cloud
    include the shared resource pool, multi tenancy, and virtualization that allow
    the user can access the same sensor instance from the different places. But, lacking
    of isolation between the virtual machines emerge the security issue in cloud.
    There are possible security attacks on the cloud such as Denial of Service DoS,
    data deletion attack, replay attack, pollution attack, Tag forgery attack, replace
    attack, data leakage attack. This will lead to the degradation of the network
    performance. By using well data backups, cryptography, and user authentication
    mechanism avoid the theft or loss of data, technical loss of control, and continuously
    provides their services effectively. Heterogeneity issues: The cloud infrastructures
    have different types of IT resources and sensor instance with different hardware
    and software capabilities (storage, processing, computation, OS, application).
    Thus, the designed cloud infrastructure will effectively tackle the heterogeneity
    issues and provide the scalable and flexible services to the users. The community
    cloud effectively handles the hardware and software compatibility issues related
    with multiple organizations that share their resources including security, compliance,
    OS, hardware, and so forth. Energy efficiency issues: The energy management is
    a very big challenge in cloud based data center. The monitoring metadata is used
    to predict the demand of the user, allocating resources and scheduling the active
    time of the server depends on the predicted demand level. Thus, it lessened the
    active server, which leads to minimize overall energy consumption. To enhance
    the power management of cloud server by using metadata remains an attractive ongoing
    research area. Service Level Agreement: The agreement between the communication
    parties (service providers or service provider and users) regarding the information
    of all the services, minimum service capabilities such as bandwidth, CPU, RAM,
    etc., and also the terms and conditions. Perhaps the service provider doesnt meet
    the requirement of users demand as per the agreement, which result in violation
    of the agreement and pay the penalty to the other parties. This issue still remains
    a great challenge in the cloud computing researchers to provide the satisfactory
    services to the end user. Scalability issue: The important task of the cloud computing
    is a collection of the several monitoring metrics of each virtual machine. Allocating
    the high resources and extending the size of the cloud depend on the number of
    users and their demands. The collection of monitoring metric from the virtual
    server is very crucial when the number of the cloud users increases and also depends
    on the size of the monitoring metrics and sampling frequency (bandwidth) of the
    VM. The researcher tries to develop the agent less monitoring system of VM, thereby
    reducing the overhead and bandwidth limitation. Interoperability issue: It is
    an important issue when the cloud users access the sensor cloud services through
    web interface. The web interface is not compatible with smart phone OS and application.
    But, most of the sensor cloud users access the cloud by using mobile devices or
    phone. Thus, it needs standard protocol for interfacing and provides a seamless
    service between the users and service providers. Data portability and integrity
    issue: In hybrid cloud, the service provider finds difficulty in integrating the
    data of the public off premises cloud that is stored in the internal server. Since
    the data may distribute over the private and public clouds that may cause the
    integration problem including: Security related issues. Failure to maintain transaction
    across the network. Trouble in managing of huge volume of data. Data quality control
    issues. Issues determining the origins of data. Absence of mechanism to identify
    changes in data. Pricing issues: There is no standard model for fixing the cost
    of cloud services and varies from one service provider to another. The service
    provider set the pricing based on the usage of the resources such as storage,
    CPU, OS, domain name, IP address, load balancing and so forth. The monitoring
    agent in the VM updates the data utilized by the users that also gives charging
    of resource utilization for cloud service providers. 12.4 An Example Architectural
    Model for Precision Agriculture Precision farming is defined as information and
    technology based farm management technique targets at inferring more precise decision
    in detecting crop condition automatically. It uses a remote sensing and satellite
    technology to monitor the variability of environmental, soil, and crop condition.
    In this model, the various service providers including private or government organization
    collaboratively share their resources such as weather condition, satellite information,
    Unmanned Ariel Vehicle (UAV) monitoring information, various WSNs information
    to the sensor cloud freely or rental basis through the internet, as shown in Fig.
    12.5. This information is available anytime in the cloud storage. This can enable
    the user accessing the IT resources and sensor depends on the demands of the users
    application and paying charge to service provider as per the usage resources.
    Some private sector or government sector uses this resources and analysis, consolidate
    the requirement of the farmers including water irrigation scheduling, warning
    message of crop diseases and pesticide recommendation, soil fertility level and
    fertilizer recommendation for the usage and level, giving a flood, cyclone, landslide,
    tsunami, and rainfall alert to the farmer by sending the SMS or through the smart
    phone App. The farmer get this service on rental basis of freely by registering
    and giving the necessary information about crop land location, type of the crop
    planted, total crop field, farmers name, phone number, address, email-id and so
    on to the concerned service provider. According the farmers registration, the
    service provider gives appropriate suggestions and solution to the farmers. In
    addition to that, the service providers allow the user updating their registration
    and service requirement at any time and anywhere through internet. As a result,
    the farmer improves their crop productivity and efficiently manages the water
    scarcity at low cost. Fig. 12.5 General architecture of sensor cloud for precision
    agriculture Full size image Calibration: It is sustained using predicted and measured
    values of remote sensing and satellite image information. Soil moisture prediction:
    At regular intervals, the determination of water contained in the crop field is
    performed using automated learning system over the measured and predicted value.
    Soil nutrients prediction: Real time measurement of nutrients in the soil is achieved
    using automated learning over the measured and predicted data. Crop disease prediction:
    The UAV image is used to identify the crop diseases. It can be used to classify
    the type of disease that infects the crop. Measurement: The sensor nodes are programmed
    to provide a current crop field data at regular interval to zone management office.
    The sensed data, satellite image data, and meteorological weather report data
    are collectively used for predicting the current need of the crop field. Estimation
    of water requirements: The automated system determines the amount of water to
    be supplied to the farmland or crop. Assessment of Fertilizer: The automated system
    is used to find the amount of fertilizer that is required to resolve the deficiency
    in soil fertility. Pesticide assessment: The automated system generates the recommendation
    for pesticide needs and disease specific pesticide based on the UAV image information.
    Update to the farmer: The zonal management controller is programmed to send Short
    Message Service (SMS) automatically to the farmers with current status of registered
    crop field. The recent advancement in satellite technology is very handy in agriculture.
    The satellite images provide necessary information about monsoon changes, weather
    or climate changes, cyclone, storm formation, finding a ground water level, etc.
    12.4.1 Nutrition Level Identification In recent years, the researchers in precision
    forming are looking to optimize the crop yield while reducing the fertilizer consumption.
    The soil sensor can be used to monitor the soil data continuously such as soil
    PH, humidity, salinity, electrical activity, etc., This real time soil data can
    lead to design an automation system in the agricultural field to improve the crop
    quality and productivity. The determination of NPK (i.e.,nitrogen, phosphorus,
    and potassium) in the soil is very essential for detecting the amount of soil
    nutrients. This can be used for giving a recommendation to the farmers about the
    needs of nutrients and site specific fertilization. The automated system has the
    advantage of eliminating the unwanted utilization of fertilizer. Thus, it can
    reduce the deterioration of soil and yield good quality crop foods. 12.4.2 Threatening
    Disease Identification (UAV) The UAV based early detection of diseases in crop
    play a vital role in the agricultural field to avoid the qualitative and quantitative
    losses faced by the farmers. The recent automatic technique is used to detect
    the crop diseases at earliest which are beneficial as it aware the farmers to
    take a precautionary measure to restrict the spreading of crop diseases, reduces
    the large work of monitoring in large farms. 12.4.3 Other Applications The recent
    developments in wireless communication such as low power VLSI and embedded design
    are incorporated with Micro Electro-Mechanical Systems (MEMS) technology for designing
    a low power, low cost, tiny smart sensor. The smart sensor node consists of four
    basic components include sensing unit for sensing the data from the target area,
    a processing and storage unit for managing the local data and storage, power supply
    unit for giving a power to the sensor, and a radio communication unit for data
    transmission. The WSNs are usually comprised of numerous low power tiny sensor
    nodes that work together to carry out the sensing and monitoring the events from
    the chosen inaccessible area and forward the sensed data to sink through wireless
    media. In recent decades, the WSNs play a major role in providing most promising
    solution in many challenging real time applications such as atomic radiation level
    monitoring and Geiger count detection in nuclear plant, battlefield surveillance
    monitoring, target tracking, patient health monitoring, tsunami detection, disaster
    surveillance and crisis management, detect the risk of frost in agriculture, hazardous
    chemical factory venues, wildlife animal tracking and monitoring etc., [1, 2].
    Node attributes: ID: uniquely identifier Type: hardware type (sensor or gateway
    or base station) Address: Network address Physical location: geo-location Region:
    Logical location such as survey number of land position Attached sensor: List
    of attached sensor. 12.5 Related Work Many researchers have developed models based
    on sensor network for agricultural applications. Some of them are detailed here.
    The software and hardware requirements for different agricultural applications
    are found out from the related works and are given in the following Table 12.3.
    Touati et al. [38] proposed a fuzzy logic based water irrigation system which
    incorporates with wireless data logging. This model contains a feedback fuzzy
    logic controller, Zigbee, GPRS, Database platform, and specific soil sensor. The
    fuzzy logic controller infers time and duration of water irrigation depending
    on the field parameters like solar radiation, water contained in the soil, ambient
    temperature. The local station collects the sensed data and then sends these data
    to the remote station by using the GPRS link. Xiao et al. [39] designed a Wireless
    integrated Frequency Domain Soil Sensor (WFDSS) application for paddy field. The
    FDSS can be used to monitor the soil moisture of the paddy field and to transmit
    the collected events to the sink with the help of Zigbee technology. Goumopoulos
    et al. [40] proposed a precision irrigation using an autonomous WSAN based system,
    which consists of soil specific sensors that can be used to gather a soil and
    environment information. These collected data send to the base station by using
    IEEE 802.15 and IEEE 802.11 coexistence. This model also utilizes the volatile
    sensor array to find the amount of fertilizer and pesticide is to be needed, which
    can be identified through detection of plant emitted volatile organic compounds.
    In addition, they calculate the specific threshold value of plant based parameter
    from logged datasets by analyzing and applying new rules in machine learning algorithms.
    Table 12.3 Application specific software and hardware requirements Full size table
    Kim et al. [41] developed a wireless lysimeter enabled with web linked wireless
    sensor networks afford real time online monitoring the drainage water flux and
    field condition. The sensor node transmits the sensed data to base station which
    in turn connect to the web server through internet. Park et al. [42] proposed
    a green house management system with wireless sensor networks which aim at collecting
    environmental parameters like humidity, \(\text {CO}_{2}\), CO, temperature, and
    so on. It also monitors the crop diseases and crop productivity by measuring the
    leaf electrical conductivity, and humidity. This proposed system deliberately
    evinces the environmental impact on the crop growth and farmer productivity. Lloret
    et al. [43] deployed the sensor nodes that can be used to capture the images from
    the crop field. This is done using image processing technique and neural network
    in order to identify any scarce status (symptoms) in the leaves. In this way,
    the deficiency of water, nutrients, pest, disease, etc., are found. If any symptoms
    on the leaves are detected, the sensor node immediately transmits the data packets
    to the sink by using IEEE 802.11g and gives an awareness to the farmer to act
    accordingly. Srbinovska et al. [44] presented WSNs, where sensor node sends the
    sensory environmental information like temperature, humidity, and illumination
    to the base station through the Zigbee communication module. This information
    can be used to continuously monitor and control the crop field environment, thereby
    reducing crop diseases and enhancing the quality of crop productivity. Garcia-Sanchez
    et al. [45] integrated the WSNs, 802.15.4 and internet in order to identify the
    status of the crop using video surveillance. This system measures the soil salinity,
    PH, temperature, and moisture. Lopez Riquelme et al. [46] utilized the four types
    of sensor motes including soil moisture, environmental, water level, and gateway
    motes, where each sensor node is interconnected through the Zigbee module. The
    soil moisture sensor provides information of soil temperature, salinity and moisture
    content. The environmental sensor is used for collecting a relative humidity and
    temperature of the environment, the water level motes measure the electrical conductivity
    and water temperature. The sensor node periodically sends the sensed data to the
    base station by using gateway motes. The Graphical User Interface (GUI) enables
    the user to read the data which visualize them graphically and also evinces the
    nodes location with the help of Google map. Gutierrez et al. [47] proposed a web
    application based automated water irrigation system to remotely monitor the soil
    temperature and moisture. The WIU transmits the time and date to WSU, once it
    is powered through Xbee. Then, WSU sends the moisture content, and soil temperature
    to the WIU. The WIU transmits the collected data to web server through GPRS. It
    permits the end user to visualize the data graphically by using graphical user
    interface and also turns on the irrigation pumps for a preferred duration. Ramane
    et al. [48] proposed a fiber optic sensor based soil nutrients detector which
    is to measure the amount of NPK nutrients in the soil. Fiber optic sensor works
    on the principle of calorimetric, i.e., absorption of color by the solution. It
    will also provide the awareness and recommendation to farmers about nutrient needs
    with site specific fertilization. The main drawback is to carry out the farmland
    soil manually to a laboratory for soil pretreatment and chemical analysis. Carvajal-Arango
    et al. [49] proposed a virtual prototype automated system for water irrigation.
    It uses sensory information such as relative humidity, temperature, moisture,
    and light intensity as the input parameters of the fuzzy logic model for deriving
    the water irrigation schedule. The performance of the virtual prototype model
    is analyzed and compared with real time implementation that show a 0.128 percentage
    of error between the model responses. Katyara et al. [50] deploys the TDR-3A sensor
    to the different location in the targeted sensing area in order to sense the soil
    temperature and humidity. The remote terminal unit gathers the sensed data from
    TDR-3A and transmits to the SCADA server through the gateway. The SCADA server
    analyzes these soil moisture data with reference value and make the decision to
    control the relay of solenoid valve, i.e., ON and OFF. Santos et al. [51] introduced
    a pesticide drift controlling by using WSNs in order to lessen the environmental
    contamination. The sensor networks provide essential information (humidity, temperature,
    and wind speed) to the crop spraying support and control system for measuring
    the environmental condition. It can be used to find the moving path of the spraying
    vehicle, to analyze the crop spraying quality by quantifying the deposition of
    pesticide over the crop leaf and also monitor the environment after and before
    the spraying. 12.6 Conclusion The chapter presented here detailed the research
    carried out on the sensor cloud infrastructures. Also, we explored the various
    research issues and design challenges of the sensor cloud architectures. A detailed
    information of layered architecture and functions of the sensor cloud is given
    and also its benefits and the real time applications are analyzed. A sensor cloud
    architectural model for the precision agriculture is proposed and it is detailed
    in this chapter. We are sure that this awareness model using sensor cloud will
    definitely help the farmers in bringing up their yield and also makes the field
    maintenance easy. The sensor based analysis related with agricultural applications
    are done and the application specific software and hardware requirements are found
    out. References Rashid, B., Rehmani, M.H.: Applications of wireless sensor networks
    for urban areas: a survey. J. Netw. Comput. Appl. 60, 192219 (2016) Article   Google
    Scholar   Rawat, P., Singh, K.D., Chaouchi, H., Bonnin, J.M.: Wireless sensor
    networks: a survey on recent developments and potential synergies. J. Supercomput.
    68, 148 (2014) Article   Google Scholar   Yetgin, H., Cheung, K.T.K., El-Hajjar,
    M., Hanzo, L.: Network-lifetime maximization of wireless sensor networks. IEEE
    Access 31, 2191–2226 (2015) Article   Google Scholar   Abo-Zahhad, M., Ahmed,
    S.M., Sabor, N., Shigenobu Sasaki, S.: Mobile sink based adaptive immune energy-efficient
    clustering protocol for improving the lifetime and stability period of wireless
    sensor networks. IEEE Sens. J. 13, 4576–4586 (2015) Article   Google Scholar   Huang,
    P., Xiao, L., Soltani, S., Mutka, M.W., Xi, N.: The evolution of MAC protocols
    in wireless sensor networks: a survey. IEEE Commun. Surv. Tutorials 13, 101–120
    (2013) Article   Google Scholar   Demirkol, I., Ersoy, C., Alagoz, F.: MAC protocols
    for wireless sensor networks: a survey. IEEE Commun. Mag. 44, 115–121 (2006) Article   Google
    Scholar   Lim, H., Kim, C.: Flooding in wireless Ad Hoc networks. Comput. Commun.
    24, 353–363 (2001) Article   Google Scholar   Modi, Z., Jardosh, S., Ranjan, P.:
    Optimized rumor routing algorithm for wireless sensor networks. In: 2009 Fifth
    IEEE Conference on Wireless Communication and Sensor Networks (WCSN), pp. 1–6
    (2009) Google Scholar   Yildiz, M.E., Scaglione, A., Aysal, T.C.: Computing along
    the routes via gossiping. In: Information Theory Workshop, ITW 2009, IEEE, pp.
    450–454 (2009) Google Scholar   Heinzelman, W.P., Chandrakasan, A.P., Balakrishnan,
    H.: An application-specific protocol architecture for wireless microsensor networks.
    IEEE Trans. Wireless Commun. 1, 660–670 (2002) Article   Google Scholar   Deng,
    S., Li, J., Shen, L.: Mobility-based clustering protocol for wireless sensor networks
    with mobile nodes. IET Wireless Sens. Syst. 1, 39–47 (2011) Article   Google Scholar   Younis,
    O., Fahmy, S.: HEED: a hybrid, energy-efficient, distributed clustering approach
    for Ad Hoc sensor networks. IEEE Trans. Mob. Comput. 3, 1471–1472 (2004) Article   Google
    Scholar   Velmani, R., Kaarthick, B.: An efficient cluster-tree based data collection
    scheme for large mobile wireless sensor networks. IEEE Sens. J. 15, 2377–2390
    (2015) Article   Google Scholar   Zhang, H., Shen, H.: Energy-efficient beaconless
    geographic routing in wireless sensor networks. IEEE Trans. Parallel Distrib.
    Syst. 21, 881–896 (2010) Article   Google Scholar   Zabin, F., Misra, S., Woungang,
    I., Rashvand, H.F., Ma, N.W., Ali, M.A.: REEP: data-centric, energy-efficient
    and reliable routing protocol for wireless sensor networks. IET Commun. 2, 995–1008
    (2008) Article   Google Scholar   Mell, P., Grance, T.: The NIST Definition of
    Cloud Computing. National Institute of Standards and Technology Special Publication
    800–145, 1–7 (2011) Google Scholar   Definition of Sensor Cloud http://www.sensorcloud.com/documentation
    Sheng, Z., Mahapatra, C., Zhu, C., Leung, V.C.M.: Recent advances in industrial
    wireless sensor networks toward efficient management in IoT. IEEE Access 3, 622–637
    (2015) Article   Google Scholar   Fortino, G., Gravinal, R., Russo, W.: Activity-aaService:
    Cloud-assisted, BSN-based system for physical activity monitoring. In: Proceedings
    of the 2015 IEEE 19th International Conference on Computer Supported Cooperative
    Work in Design (CSCWD), pp. 588–593 (2015) Google Scholar   Poy, H.M., Duffy,
    B.: A cloud-enabled building and fire emergency evacuation application. IEEE Cloud
    Comput. 1, 40–49 (2014) Article   Google Scholar   Wan, L., Han, G., Shu, L.,
    Feng, N., Zhu, C., Lloret, J.: Distributed parameter estimation for mobile wireless
    sensor network based on cloud computing in battlefield surveillance system. IEEE
    Access 3, 1729–1739 (2015) Article   Google Scholar   Sareen, S., Sood, S.K.,
    Gupta, S.K.: A cloud-based seizure alert system for epileptic patients that uses
    higher-order statistics. Comput. Sci. Eng. 18, 56–67 (2016) Article   Google Scholar   Sareen,
    S., Sood, S.K., Gupta, S.K.: An automatic prediction of epileptic seizures using
    cloud computing and wireless sensor networks. J. Med. Syst. 40, 226 (2016) Article   Google
    Scholar   Ojha, T., Misra, S., Raghuwanshi, N.S.: Sensing-cloud: leveraging the
    benefits for agricultural applications. Comput. Electron. Agric. 135, 96–107 (2017)
    Article   Google Scholar   Ferdoush, S., Li, X.: Wireless sensor network system
    design using Raspberry Pi and Arduino for environmental monitoring applications.
    In: 9th International Conference on Future Networks and Communications (FNC-2014),
    Procedia Computer Science, Vol. 34, pp. 103–110 (2014) Article   Google Scholar   http://meteorology.uonbi.ac.ke/sites/default/files/cbps/sps/meteorology/WEATHER.pdf
    Gorelik, E.: Cloud Computing Models. Massachusetts Institute of Technology, pp.
    1–81 (2013) Google Scholar   Alamri, A., Ansari, W.S., Hassan, M.M., Hossain,
    M.S., Alelaiwi, A., Hossain, M.A.: A survey on sensor-cloud: architecture, applications,
    and approaches. Int. J. Distrib. Sens. Netw. (2013) Google Scholar   Yuriyama,
    M., Kushida, T., Itakura, M.: A new model of accelerating service innovation with
    sensor-cloud infrastructure. In: SRII Global Conference (SRII), IEEE, pp. 308–314
    (2011) Google Scholar   Yuriyama, M., Kushida, T.: Sensor-cloud infrastructure
    - physical sensor management with virtualized sensors on cloud computing. In:
    13th International Conference on Network-Based Information Systems. IEEE (2010)
    Google Scholar   Madria, S., Kumar, V., Dalvi, R.: Sensor cloud: a cloud of virtual
    sensors. IEEE Softw. 31, 70–77 (2014) Article   Google Scholar   Maria, A.R.,
    Sever, P., Carlos, V.: Cloud computing for big data from biomedical sensors monitoring,
    storage and analyze. In: 2015 Conference Grid, Cloud and High Performance Computing
    in Science (ROLCG), IEEE, pp. 1–4 (2015) Google Scholar   Mustafa, S., Nazir,
    B., Hayat, A., Khan, A.R., Madani, S.A.: Resource management in cloud computing:
    taxonomy, prospects, and challenges. Comput. Electr. Eng. 47, 186–203 (2015) Article   Google
    Scholar   Aslam, S., Islam, S., Khan, A., Ahmed, M., Akhundzada, A., Khan, M.K.:
    Information collection centric techniques for cloud resource management: taxonomy,
    analysis and challenges. J. Netw. Comput. Appl. 100, 80–94 (2017) Article   Google
    Scholar   Schroeter, J., Mucha, P., Muth, M., Jugel, K., Lochau, M.: Dynamic configuration
    management of cloud-based applications. In: SPLC12 Proceedings of the 16th International
    Software Product Line Conference, ACM, Vol. 2, pp. 171–178 (2012) Google Scholar   Prahlada
    Rao, B.B., Saluja, P., Sharma, N., Mittal, A., Sharma, S.V.: Cloud computing for
    internet of things and sensing based applications. In: Sixth International Conference
    on Sensing Technology (ICST), pp. 374–380 (2012) Google Scholar   Singh, A., Chatterjee,
    K.: Cloud security issues and challenges: a survey. J. Netw. Comput. Appl. 79,
    88–115 (2017) Article   Google Scholar   Touati, F., Al-Hitmi, M., Benhmed, K.,
    Tabish, R.: A fuzzy logic based irrigation system enhanced with wireless data
    logging applied to the state of Qatar. Comput. Electron. Agric. 98, 233–241 (2013)
    Article   Google Scholar   Xiao, D., Feng, J., Wang, N., Luo, X., Hu, Y.: Integrated
    soil moisture and water depth sensor for paddy fields. Comput. Electron. Agric.
    98, 214–221 (2013) Article   Google Scholar   Goumopoulos, C., O’Flynn, B., Kameas,
    A.: Automated zone-specific irrigation with wireless sensor/actuator network and
    daptable decision support. Comput. Electron. Agric. 105, 20–33 (2014) Article   Google
    Scholar   Kim, Y., Jabro, J.D., Evans, R.G.: Wireless lysimeters for real-time
    online soil water monitoring. Irrig. Sci. 29, 423–430 (2011) Article   Google
    Scholar   Park, D.H., Kang, B.J., Cho, K.R., Shin, C.S., Cho, S.E., Park, J.W.,
    Yang, W.M.: A study on greenhouse automatic control system based on wireless sensor
    network. Wireless Pers. Commun. 56, 117–130 (2011) Article   Google Scholar   Lloret,
    J., Bosch, I., Sendra, S., Serrano, A.: A wireless sensor network for vineyard
    monitoring that uses image processing. Sensors 11, 6165–6196 (2011) Article   Google
    Scholar   Srbinovska, M., Gavrovski, C., Dimcev, V., Krkoleva, A., Borozan, V.:
    Environmental parameters monitoring in precision agriculture using wireless sensor
    networks. J. Clean. Prod. 88, 297–307 (2015) Article   Google Scholar   Garcia-Sanchez,
    A.J., Garcia-Sanchez, F., Garcia-Haro, J.: Wireless sensor network deployment
    for integrating video-surveillance and data-monitoring in precision agriculture
    over distributed crops. Comput. Electron. Agric. 75, 288–303 (2011) Article   Google
    Scholar   Lopez Riquelme, J.A., Soto, F., Suardiaz, J., Sanchez, P., Iborra, A.,
    Vera, J.A.: Wireless sensor networks for precision horticulture in Southern Spain.
    Comput. Electron. Agric. 68, 25–35 (2009) Article   Google Scholar   Gutierrez,
    J., Villa-Medina, J.F., Nieto-Garibay, A., Porta-Gandara, A.: Automated irrigation
    system using a wireless sensor network and GPRS module. IEEE Trans. Instrum. Meas.
    63, 166–176 (2014) Article   Google Scholar   Ramane, D.V., Patil, S.S., Shaligram,
    A.D.: Detection of NPK nutrients of soil using fiber optic sensor. In: International
    Journal of Research in Advent Technology, Special Issue National Conference ACGT
    2015 (2015) Google Scholar   Carvajal-Arango, R., Zuluaga-Holguin, D., Mejia-Gutierrez,
    R.: A systems-engineering approach for virtual/real analysis and validation of
    an automated greenhouse irrigation system. Int. J. Interact. Des. Manuf. 10, 355–367
    (2014) Article   Google Scholar   Katyara, S., Shah, M.A., Zardari, S., Chowdhry,
    B.S., Kumar, W.: WSN based smart control and remote field monitoring of Pakistan
    irrigation system using SCADA applications. Wireless Pers. Commun. 95, 491–504
    (2017) Article   Google Scholar   Santos, I.M., da Costa, F.G., Cugnasca, C.E.,
    Ueyama, J.: Computational simulation of wireless sensor networks for pesticide
    drift control. Precision Agric. 15, 90–303 (2014) Google Scholar   Download references
    Author information Authors and Affiliations Department of Electronics and Communication
    Engineering, Anna University Regional Campus, Coimbatore, 641046, Tamil Nadu,
    India V. Bhanumathi & K. Kalaivanan Corresponding author Correspondence to V.
    Bhanumathi . Editor information Editors and Affiliations Department of Information
    Technology, Silicon Institute of Technology, Bhubaneswar, India Bijan Bihari Mishra
    Department of Information and Communication, Fakir Mohan University, Balasore,
    Odisha, India Satchidanand Dehuri Department of Electrical Engineering, Indian
    Institute of Technology, New Delhi, India Bijaya Ketan Panigrahi Department of
    Computer Science and Engineering, Silicon Institute of Technology, Bhubaneswar,
    India Ajit Kumar Nayak School of Computer Engineering, KIIT University, Bhubaneswar,
    Odisha, India Bhabani Shankar Prasad Mishra School of Computer Engineering, KIIT
    University, Bhubaneswar, Odisha, India Himansu Das Rights and permissions Reprints
    and permissions Copyright information © 2019 Springer-Verlag GmbH Germany, part
    of Springer Nature About this chapter Cite this chapter Bhanumathi, V., Kalaivanan,
    K. (2019). Application Specific Sensor-Cloud: Architectural Model. In: Mishra,
    B., Dehuri, S., Panigrahi, B., Nayak, A., Mishra, B., Das, H. (eds) Computational
    Intelligence in Sensor Networks. Studies in Computational Intelligence, vol 776.
    Springer, Berlin, Heidelberg. https://doi.org/10.1007/978-3-662-57277-1_12 Download
    citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-662-57277-1_12 Published
    23 May 2018 Publisher Name Springer, Berlin, Heidelberg Print ISBN 978-3-662-57275-7
    Online ISBN 978-3-662-57277-1 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this chapter Anyone you share
    the following link with will be able to read this content: Get shareable link
    Provided by the Springer Nature SharedIt content-sharing initiative Publish with
    us Policies and ethics Download book PDF Download book EPUB Sections Figures References
    Abstract Introduction to Wireless Sensor Networks Why Cloud Computing? Introduction
    to Sensor Cloud An Example Architectural Model for Precision Agriculture Related
    Work Conclusion References Author information Editor information Rights and permissions
    Copyright information About this chapter Publish with us Discover content Journals
    A-Z Books A-Z Publish with us Publish your research Open access publishing Products
    and services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.222 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature'
  inline_citation: null
  journal: Studies in computational intelligence
  limitations: The paper does not give any specific information regarding data types
    most applicable to irrigation management and their typical sources. Additionally,
    the paper discusses the benefits and challenges of sensor clouds, but does not
    detail how these specifically apply to the review's key issues.
  pdf_link: null
  publication_year: 2018
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: 'Application Specific Sensor-Cloud: Architectural Model'
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/aiccsa.2015.7507117
  analysis: 'The paper "Data quality enhancement in Internet of Things environment"
    by Karkouch, Al Moatassime, Mousannif, and Noel, dives into the topic of data
    quality challenges and potential solutions within the realm of the Internet of
    Things (IoT). It provides a thorough overview of the significance of data quality
    in IoT, types of data most applicable to IoT and their typical sources, and challenges
    associated with implementing real-time, automated irrigation systems, such as
    data quality, scalability, reliability, and security. While the paper''s focus
    on data quality is pertinent, its direct relevance to the context of automated
    irrigation management is limited, as it does not delve into specific techniques
    or approaches for addressing irrigation-related data quality issues or provide
    guidance on selecting appropriate data sources for irrigation management. This
    limits the applicability of the paper to the specific point within the larger
    context and intent of the literature review. Nonetheless, the paper effectively
    covers the broader topic of data quality in IoT and provides valuable insights
    into the subject.


    Here are the three most relevant verbatim quotes from the paper:


    **Verbatim Quote 1:** “Data in the IoT are vulnerable to many problems [3], [11],
    [17], [18], and [20] affecting their quality. The resulting uncertainty in data
    manifests as data outliers.”


    **Verbatim Quote 2:** “Data trustworthiness is crucial for user engagement and
    acceptance of IoT services, thus, for a successful large scale deployment of the
    IoT paradigm.”


    **Verbatim Quote 3:** “Providing a data cleaning system would help applications
    to concentrate on their core logic without worrying about data reliability post-processing
    overheads.”


    Overall, I would give the paper a relevance score of **0.65**. It provides some
    general insights into data quality in IoT, but it does not specifically address
    the context of automated irrigation management or provide guidance on selecting
    appropriate data sources for this purpose.'
  authors:
  - Aimad Karkouch
  - Hassan Al Moatassime
  - Hajar Mousannif
  - Thomas Noël
  citation_count: 7
  full_citation: Karkouch, A., Al Moatassime, H., Mousannif, H., & Noel, T. (2015,
    November). Data quality enhancement in Internet of Things environment. In 2015
    IEEE/ACS 12th International Conference of Computer Systems and Applications (AICCSA)
    (pp. 1-8). IEEE.
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2015 IEEE/ACS 12th Internatio... Data quality
    enhancement in Internet of Things environment Publisher: IEEE Cite This PDF Aimad
    Karkouch; Hassan Al Moatassime; Hajar Mousannif; Thomas Noel All Authors 6 Cites
    in Papers 761 Full Text Views Abstract Document Sections I. Introduction II. Data
    Outliers III. Data Cleaning IV. Open Challenges and Future Research Directions
    V. Conclusion Authors References Citations Keywords Metrics Footnotes Abstract:
    The Internet of Things (IoT) is the first real evolution of the Internet, in contrast
    with the Web which has been evolving over time. IoT enables the crossing-over
    of the physical and cyber worlds by deploying sensor devices on a global scale.
    This crossing-over promises exciting applications that, thanks to intelligent
    ubiquitous services, will facilitate our daily life. However, the data that represent
    the bridge between the real and the digital worlds are endangered and their quality
    is uncertain. In fact, data are the base of insights mining which are used to
    make intelligent decisions and provide services. If the data are inaccurate, decisions
    are likely to be unsound. Data accuracy and trustworthiness are crucial to gain
    user engagement and acceptance of the IoT paradigm and services. This paper aims
    at enhancing data quality in the context of the Internet of Things by providing
    an overview of the state of the art of data quality in the context of IoT. Data
    outliers and their underlying knowledge are surveyed alongside their discovery
    and detection process. The outliers'' impact in the context of IoT and its applications
    is identified. Techniques for data cleaning are reviewed and compared with respect
    to an extended taxonomy. Finally, open challenges and possible future research
    directions are discussed. Published in: 2015 IEEE/ACS 12th International Conference
    of Computer Systems and Applications (AICCSA) Date of Conference: 17-20 November
    2015 Date Added to IEEE Xplore: 09 July 2016 ISBN Information: Electronic ISSN:
    2161-5330 DOI: 10.1109/AICCSA.2015.7507117 Publisher: IEEE Conference Location:
    Marrakech, Morocco SECTION I. Introduction While the Web has been evolving over
    time, from Advanced Research Projects Agency Network (ARPANET) to the “Social”
    Web, the Internet of Things (IoT) is the first real evolution of the internet
    [1]. IoT is about millions of connected, communicating and exchanging objects,
    scattered all over the world and generating tremendous amounts of data using their
    sensors every single second. IoT has many definitions depending on the chosen
    viewpoint. One that relates to data reports the shifting of roles in the era of
    IoT. Interconnected smart things will become the major data producers and consumers
    instead of humans. The flow of data from the physical to the digital world will
    extend the awareness of computers of their surroundings, thus, gaining the ability
    to act on behalf of humans through ubiquitous services. IoT has and will affect
    many fields in our daily life both on personal and business levels (e.g. cities,
    homes, health, etc.). Further, it has a significant impact on society to the extent
    it has become a social “symbolic capital of power” [27]. A taxonomy of IoT applications
    is presented in [7] which, based on the type of network availability, coverage,
    scale, heterogeneity, repeatability, user involvement and impact, identifies four
    application domains: Home and personal, enterprise, utilities and mobile. Applications
    based on the crossing-over of physical and cyber worlds allowed by the IoT vision
    (e.g. Health applications, Home energy monitoring, smarter cities, Intelligent
    Products, etc.) have already been created and many more are expected [3], [28].
    Data represent the bridge that connects cyber and physical worlds. Their importance
    is illustrated with the emergence of IoT semantic-oriented vision [6] which finds
    its utility from the need of ways to represent and manipulate the huge amount
    of raw data expected to be generated from the “things”. The autonomous and continuous
    harvesting of data by the “things” (e.g. RFID readers, sensor nodes, etc.) easily
    overtakes manually entered data. It was in 2008 when the number of connected objects
    has already surpassed the number of persons on the planet [3]. Moreover, considering
    the predictions in [4], [5], the number of objects connected will become even
    greater. In fact, as predicted in [4], common things of our daily life (e.g. lamps,
    refrigerators, food packages, etc.) will have had embedded components allowing
    them to communicate and become more intelligent by the year 2025. Furthermore,
    technological advances have impressively sharpened the “data harvesting” capabilities
    of embedded sensor devices resulting in more generated data and more continuous
    data streams from the real world. As a result, IoT has become an important catalyzer
    of Big Data Analytics. Data are a valuable asset in the IoT because they give
    insights about a given phenomenon, person or entity. Those insights are used by
    applications to provide intelligent services in an ubiquitous manner. Their quality
    and accuracy should be ensured. However, many problems including deployment scale,
    sensors'' constrained resources [11] and intermittent loss of connection [17]
    are endangering the quality of the produced data. These deviations in data quality
    manifest as outliers [10]–[13]. While outliers could describe errors, they can
    also describe rare events [15]. These events represent precious information for
    the applications [14] (e.g. a fire in a forest). Solutions to deal with data outliers
    are required considering that data trustworthiness is crucial for user engagement
    and acceptance of IoT services, thus, for a successful large scale deployment
    of the IoT paradigm. This is shown in [8] where data collection trust and accuracy
    represent the major concern of the Data Perception Trust as part of a holistic
    trust management approach for the IoT. Our survey investigates data quality in
    the context of IoT. We discuss data outliers and their impact on a large scale
    deployment and acceptance of IoT paradigm. We further investigate outliers'' impact
    on key components of the IoT applications and we report real-world scenarios''
    case studies. Moreover, we study and compare data cleaning techniques that promise
    to overcome the uncertainty in the gathered data and provide purified data for
    IoT applications. Finally, we discuss open challenges and possible future research
    directions we believe have the potential to deliver efficient solutions and approaches.
    Our aim is to give an overview of the current state of the art of data quality
    in the context of IoT in order to find ways to enhance it. Even though, some surveys
    [2], [15] and [18] have been conducted recently, they either present the whole
    data processing cycle from acquisition to compression with a lack of focus on
    data quality management, or present data cleaning techniques for a sub-component
    of the IoT. In fact, [2] only surveys the data stream processing techniques, data
    storage, search and event processing in the IoT. [18] presents data acquisition,
    query processing and data compression techniques. It also surveys mathematical
    models used in outlier detection techniques. However, it only provides brief descriptions
    of actual data cleaning techniques such as the declarative-based one. Further,
    no comparison of these cleaning techniques is presented. [15] presents techniques
    for outlier detection in Wireless Sensor Networks (WSN) which only presents a
    sub-component of the IoT. The remainder of this article is organized as follows.
    In section II, data outliers are presented and their impact on IoT is discussed.
    In section III, a specification of a comparison''s taxonomy is presented, followed
    with a comparison of data cleaning techniques. Section IV discuss open challenges
    and possible future research directions. Finally, Section V concludes the article.
    SECTION II. Data Outliers Data in the IoT are vulnerable to many problems [3],
    [11], [17], [18] and [20] affecting their quality. The resulting uncertainty in
    data manifests as data outliers. In this section, we define the concept of data
    outlier, their types, their impact in the IoT context and their detection process.
    A. Definition of Data Outlier Data produced in the context of IoT by the things
    (e.g. sensor devices) is generally unreliable. This “dirty-data” [9] manifests
    in the form of: Dropped readings: The delivery of things'' readings is usually
    inferior to the requested readings required by pervasive applications due to the
    scarce resources and intermittent communication. Unreliable readings: Impreciseness,
    calibration failure and fail-dirty nodes among other reasons cause things'' data
    to be unreliable. Outliers or anomalies belong to the second form of “dirty-data”.
    They are readings that are outside what is considered as a “normal state” (represented
    by a model for example) [10]. In [11], outliers are considered “events with extremely
    small probabilities of occurrence”. They are also seen as “points in a data set
    that are highly unlikely to occur given a model of the data.” [12]. There exist
    other formal metric-based definitions such as distance-based outliers (DB-outlier)
    [14], for which “an object O in a dataset T is a DB (p, D)-outlier if at least
    fraction p of the objects in T lies greater than distance D from O”. B. Types
    of Outliers Outliers are elements that significantly differ from other elements
    in a dataset. This does not automatically mean that they represent errors. In
    fact, outliers may translate to important information. Based on the carried underlying
    knowledge, an outlier could represent an error or an event, i.e. an extreme (legitimate)
    readings [15]. Another classification is presented in [13] which groups outliers
    into Point anomalies, Contextual anomalies and Collective anomalies. C. Outlier
    Detection During the process of outlier detection, elements that differ from what
    is considered normal are discovered. The end-goal is to either suppress or highlight
    outliers [11]. Data cleansing processing adopts the first approach (suppressing
    outliers) in order to increase data quality and thus the quality and accuracy
    of decision-making. Highlighting outliers is used while looking for rare events
    and patterns underlying in a dataset in specific domain (e.g. fraud analysis).
    Outlier detection is closely related, however differs from noise removal and noise
    accommodation. It is also closely related to novelty detection where novel patterns
    in dataset are mined and incorporated into normal model [13]. D. Impact of Outliers
    in the IoT In the IoT, data gathered by things (e.g. body sensor) will serve as
    an input for data mining in order to extract insights about a given monitored
    phenomena (e.g. environment, Home, health, etc.). Upon these insights, decision
    will be made in a pervasive manner (e.g. call emergency, fire alert, etc.). It
    is clear that insights extracted from “dirty data” (i.e. unreliable data) are
    probably erroneous, thus, the decisions to be made are likely unsound (e.g. high
    rate of false positive and false negative). As an example, in the RFID-enabled
    library scenario [9], almost half of the emitted alerts are false positives due
    to unreliability of raw data. The importance of accuracy and reliability of data
    is even higher when exploited in applications which involve or affect human lives.
    Examples are given in [16] which include a scenario where phenomena such as Tsunamis
    and avalanches are monitored in order to quickly evacuate endangered zones. Any
    failure to deliver accurate data may compromise whole systems or even put peoples''
    lives at risk. While decisions made based on erroneous raw data are likely unsound,
    this is not the case, if the outliers report rare events in which case they represent
    a mine of gold for the pervasive applications: “One person''s noise is another
    person''s signal.” [14]. In fact, for some applications, outliers (representing
    events) are far more important, with respect to the knowledge discovery standpoint,
    than the “common behavior” as they represent rare events [14] (e.g. fire in a
    forest). Data trustworthiness is crucial for user engagement and acceptance of
    IoT services, thus, for a successful large scale deployment of the IoT paradigm.
    This is shown in [8] where data collection trust and accuracy represent the major
    concern of the Data Perception Trust as part of a holistic trust management approach
    for the IoT. E. Context-Awareness and Data Outliers Context-awareness is fundamental
    in IoT applications and a key feature in many industrial IoT products [41]. The
    concept of “context” has been defined in [42]–[45]. It refers to information used
    to provide adequate services, i.e. the expected services under certain circumstances,
    to a user based on the representation they construct about the current situation
    and all the entities involved. Raw data (e.g. sensor data) are the base to extracting
    context. For example, the data retrieved from temperature sensors are raw data.
    The knowledge inferred from these data about whether or not the weather is hot
    or cool, is the context. Four phases composes the context life cycle: Context
    acquisition, Context modeling, Context reasoning and Context dissemination [48].
    Context-related actions (e.g. context acquisition, etc.) could be performed within
    the application or outside (e.g. in a dedicated infrastructure such as middlewares
    like [49] and [50]) [46]. The data cleaning should occur, at the latest, in the
    Context acquisition phase as to ensure that the inputs of the upcoming phases
    are sound. It is clear that the more accurate raw data are, the more relevant
    and accurate the obtained context is. In fact, the quality of context (QoC) depends
    on the quality of physical sensors and initial data [47]. In [43], five pillars
    for building context are specified: Who, What, Where, When and Why. If one of
    these axes is not present or poorly built, then the whole context will collapse.
    Now, let''s consider that our raw data or a portion of it is of poor quality.
    By further processing raw data, we could retrieve the Who, the What and the When
    components. However, the “Where” component retrieved does not accurately describe
    the location because of the deficiency of initial data. As a result, the reason,
    i.e. the Why, a situation is occurring cannot be determined and the extracted
    context will probably trigger unsound actions which defies a basic principle of
    the pervasive aspect of IoT which is providing the right services in the right
    time for the right person. F. Outliers'' Impact on E-Health Applications Simulations
    are an effective way to better understand IoT systems and its challenges. In fact,
    many Testbeds for IoT experimentation, such as FIT-Equipex [29], already exist
    and are operational. A number of other existing (public and private) Testbeds
    are surveyed in [30]. However, to further investigate the impact of data outliers,
    we report two realworld case studies of data quality issues'' impact on the e-health
    application domain. E-health refers to internet (and other related technologies)
    —enabled services which aim to provide and improve healthcare [31]. Data play,
    within Medical Information Systems, a fundamental role as the source of information
    and knowledge. However, as we have previously stated, decisions taken based on
    poor quality data are probably erroneous and this kind of uncertain decisions
    cannot be allowed or tolerated in the e-health domain considering the patients''
    life involved. The first case study [32] investigates the impact of data quality
    issues on e-health monitoring applications. In this work, and in order to identify
    data quality problems affecting data quality criteria, three levels of data management
    are defined with respect to a scenario of cardiac monitoring application: Data
    collection, data processing and data discovery. For example, in data collection
    level, problems are mainly related to body sensors performance, the volume of
    data to pre-process and the quality of communications. The second reported case
    study [33] investigates poor data quality''s impact on Ambient Assisted Living
    systems (AAL) AAL provides support (e.g. monitoring health and wellbeing) for
    people in their homes. In this work, poor data quality is argued to alter the
    presentation of occurring events, thus, preventing these systems from providing
    adequate support for users and causing erroneous reporting of a patient health,
    inefficient management of in-home environmental conditions, etc. E-health applications
    are among the most critical IoT applications considering the human life factor
    involved and, as a consequence, do not tolerate uncertainty in data quality. SECTION
    III. Data Cleaning In contrast with the conventional Internet, IoT data come from
    things rather than persons, thus, the programming''s golden rule “Never trust
    user input”1, should evolve to “Never trust things input”. This is justified by
    the inherently aforementioned uncertainty and inconsistency of sensor data. Providing
    a data cleaning system would help applications to concentrate on their core logic
    without worrying about data reliability post-processing overheads. Data cleaning
    is part of the data''s life cycle as described in [18] alongside data acquisition,
    query processing and data compression. It represents an important task in data
    processing. Data cleansing is not a new process specific to the IoT context. It
    has already been defined as a process for database systems in [19]. It is also
    very common for managing enterprise data in the context of data warehousing [9].
    Data cleaning is widely studied under the “things-oriented” vision of the IoT
    [3]. A. Comparison''s Taxonomy There are many data cleaning and outlier detection
    techniques. In order to better outline the characteristics of each approach, we
    adopt the following criteria on which we found our comparison (summarized in Tables
    1.A and 1.B): Approach type: Different techniques use different approaches such
    as model-based and declarative-based. Cleaning Scope: Some techniques offer a
    holistic framework for data cleaning while others focus on the outlier detection
    component. Data stream Sources: The surveyed techniques are classified based on
    their capabilities to process RFID- and sensor-enabled data. Data characteristics:
    As it was mentioned in [10] and [18], data in the IoT exhibit many properties
    that are used by many of the surveyed techniques. Operating mode: In the online
    mode, data stream is processed as soon as it is captured in a real-time fashion.
    The offline mode processes data after their arrival and storage. Event/Error Separation:
    Outliers could represent either errors or important events. The ability to distinguish
    the underlying knowledge of an outlier could help reduce the intervention of the
    human factor. Automatic: Some techniques need minimum human intervention (e.g.
    automatically discover an underlying model in datasets), others require more human
    intervention (e.g. specifying threshold and query for every step of the cleaning
    pipeline). Domain-agnostic: Depending on the need for prior (domain-specific)
    knowledge, techniques are either domain-agnostic, i.e. usable for various domains,
    or domain-specific. Variables of interest: A variable of interest represents an
    attribute in the real world. The types and sources of sensor data used by data
    cleaning techniques vary from unique to heterogeneous sources. Distributed: In
    a distributed design, the cleaning tasks are performed locally in various components
    (e.g. sensor nodes). Fault Tolerance: Sensor devices face many problems as it
    was described in [3], [9], [11], [17], [18] and [20] (e.g. node failure). Data
    cleaning approaches, which interact generally with the physical perception layer,
    should be resilient to faults and node failures in order to provide a stable service.
    Confidence: A confidence score represents how much trust we can put in an element.
    A confidence score could be calculated and attributed to different elements (e.g.
    dataset''s values, sensor nodes). B. Data Cleaning Techniques Comparison 1) Model-Based
    Data Cleaning Techniques Many of the characteristics (e.g. correlation) exhibited
    by the data gathered in the context of the IoT form the base for most of the data
    cleaning model-based techniques. These techniques use many well established mathematical
    model (e.g. regression models) to perform data-related task such as outlier detection.
    These mathematical models are surveyed in [18]. a) Automated Sensor Verification
    Using Outlier Detection in the Internet of Things[10] This technique starts from
    the observation that sensors generally monitor an attribute, typically smooth
    and continuous, in the real world. In order to apply the presented technique for
    outlier detection, a set of k variables of interest is considered. These variables
    are sensed using a set of n sensors deployed in a geographical area each of which
    is capable of sensing one or multiple variable of interest. The sensed state of
    a particular variable i at a given time t is represented by the set of values
    sensed by the sensors involved. No relationships are assumed between the sets
    of variables of interest (i.e., no domain specific expertise required) albeit
    they might exist. Furthermore, it is assumed that, since the sensed physical phenomena
    is continuous, there is an existing underlying regularity. This regularity manifests
    in the form of spatial and temporal patterns or models. The combination of these
    two kinds of models makes it possible to determine the expected values for each
    variable of interest at any given spatial coordinates at any given instant of
    time. This technique aims at automatically deriving a model for a variable of
    interest according to other variables of interest and spatial parameters (latitude,
    longitude, elevation) using multiple regression statistical modeling. To address
    the risk of overfitting, datasets (initial values) are broken into Training Samples
    and Testing Samples. Training Samples are used to calculate the model and the
    Testing samples are used to test its efficiency. A “good” model is one that performs
    well both on Training Samples and Testing Samples (having an acceptable statistical
    errors vis-à-vis a defined threshold). The spatial model is calculated at each
    time step and used to detect outliers. The derived model can also be used for
    spatial interpolation (e.g. to detect the outliers readings) or for temporal extrapolation
    (e.g. to predict sensor values in the near future). This technique has shown promising
    results when applied in the case of a weather application. One major benefit is
    that no prior (domain-specific) knowledge is required to detect outliers. However,
    no further actions are taken after detecting the outlier. In fact, no means has
    been specified to decide on the real nature of the outlier. Also, this techniques
    uses multiple regression to define a variable of interest (e.g. pressure) based
    on other variables of interest (e.g. ambient temperature, etc.) and positional
    variables (latitude, longitude and elevation) which may pose problem when there
    is only one monitored variable of interest. While it is true that a specific threshold
    is defined at the very beginning, the technique itself is fully automatic. b)
    Sensoclean: Handling Noisy and Incomplete Data in Sensor Networks Using Modeling[21]
    SensoClean is a model-based toolkit for WSN''s data cleaning. It aims to specify
    empirically a basis to easily identify the most efficient cleaning method for
    a given dataset by providing a cleaning platform with pluggable cleaning modules.
    Modeling methods that incorporate both the spatial and temporal correlation underlying
    in sensor data are prioritized. The toolkit architecture is composed of 3 main
    components: the Input processor, the Learning module and the Query processor.
    The toolkit architecture is extensible thanks to the plugin design of the learning
    module. The toolkit represents an experimental ground for model-based data cleaning
    techniques where, thanks to its pluggable properties, modeling techniques could
    be easily added and tested with actual data. The workflow in this architecture
    starts by preprocessing the raw data by the Input Processor module. The preprocessed
    data is then used to train the chosen modeling technique from the Learning module.
    The trained model is saved to disk and used by the Query Processing module to
    answer user queries. The queries supported by the Query Processing module include
    data cleaning, interpolation and extrapolation of sensor readings. The data cleaning
    query results in a dataset from which outliers have been deleted. The interpolation
    query is used to recover dropped readings, while the extrapolation query is used
    to predict future readings. The toolkit prototype supports 2 model-based methods:
    Kalman Filter and Regression and does not support the extrapolation operation
    nor the cleaning of datasets other the ones used for the training. The prototype
    was tested using sensor data from the Intel Lab [22]. A comparison of Kalman filter
    and Regression (using different kernel functions) efficacy over various physical
    attributes (Temperature, humidity, Light, voltage) was carried out. The regression
    model yields good results especially when more complex kernel functions are used.
    However, it does not do well when the feature exhibits great variability. It also
    runs the risk of over-fitting. The Kalman filter does well when it is well trained.
    It is more susceptible to generalize to other datasets because it uses less modeling
    variables. c) Detection and Exploration of Outlier Regions in Sensor Data Stream[24]
    This technique proposes a degree-based outlier detection approach. In contrast
    with the outlier binary model where sensor readings are classified to either normal
    or outlier classes, this approach associates an outlier degree (OD) between 0
    and 1 to each readings where the 0 value means a normal measurement. The greater
    this degree is, the more anomalous the reading is. On top of that, anomalous regions,
    represented as polygons, comprised of sensors are constructed based on this outlier
    degree. Regions are not necessarily homogenous as a single region may contain
    sensors with different outlierness degrees. The calculated outlier degrees describe
    unusual phenomena (e.g. environmental phenomena such as wild fires, flood, etc.)
    captured by the sensor network and their evolution over time. The current outlier
    degree associated with a sensor is obtained using a sliding window over its recent
    measurement. These recent measurements are also used whenever a sensor stops reporting
    its values. Each time new measurements arrive at the central server, the outlier
    degrees are recalculated and associated with sensors. The architecture of the
    system is composed of 2 components: (i) a degree-based outlier detection component
    and (i) an outlier region detection component. The first outputs for each sensor
    an outlierness degree. The latter uses these outputs to detect outlier regions
    representing ongoing events. The Degree-based STream OutlieR Miner (DSTORM) proposed
    by this technique to detect outlier is an extended version of the STream OutlieR
    Miner (STORM) presented in [25]. In this context, an outlier is a data point that
    is not similar, with respect to a distance measure, to a minimum defined threshold
    of other data points. Considered data points are defined within a sliding window.
    The reference specifies the sources of considered data points (e.g. the whole
    sensor network, the physical neighbor, etc.). The DSTORM considers the whole sensor
    network as its reference. The DSTORM algorithm replaces the STORM''s neighbor
    threshold with outlierness bounds parameters. The outlierness bounds and neighbor
    number are used to compute the outlier degree of a sensor node which varies between
    0 and 1. Outliers regions polygons are then constructed where the sensors represent
    the vertices of the triangles and their elevation equals their current outlier
    degree. The experimentation of this framework on real world data sets (Intel Lab
    data set [22] and California Irrigation Management Information System data set
    (CIMIS) [26]) yielded a good visual representation of phenomena and their evolution
    over time. 2) Declarative-Based Data Cleaning Techniques a) Declarative Support
    for Sensor Data Cleaning[9] This technique proposes the Extensible Sensor stream
    Processing (ESP) framework for building data cleaning infrastructure for pervasive
    applications. The ESP framework operates as middleware layer between the physical
    perception layer (i.e. sensors) and the application layer. It consists of “a programmable
    pipeline of cleaning stages intended to operate on-the-fly as sensor data are
    streamed through the system”. ESP-based cleaning infrastructures are able to transform
    many unreliable sensor data streams, using temporal and spatial correlation, into
    one improved data stream that could feed many pervasive applications simultaneously.
    ESP adopts a declarative processing to ease the task of programmers and to achieve
    data independence (e.g. no need to change the declarative query when a node fails
    or gets updated or added). In fact, programmers only use high-level declarative
    queries (specified in CQL) to specify the cleaning processes. These queries are
    then transformed to low-level representation in order to be executed. ESP exploits
    the temporal and spatial correlation of sensor data as a base for many of its
    cleaning processes, recovering lost values and detecting outliers by incorporating
    a temporal and spatial granules which, considering the high-level data required
    by applications, define time-units and space-units respectively, where readings
    are expected to be homogeneous. These granules are the base used for aggregating,
    sampling and detecting outliers. The temporal granule uses time windows as a processing
    unit, while the spatial granule uses proximity groups. ESP''s cleaning process
    is divided, based on related data''s logical aspects, into 5 programmable stages:
    Point, Smooth, Merge, Arbitrate and Virtualize. An important note is that it is
    not always mandatory to implement all these stages for a given deployment. Also,
    previous deployed stages could be reused. Further, the Point and Smooth stages
    could be built in capable sensors. For the time being, both temporal and spatial
    granules are user-specified. An automatically adaptive temporal granule is still
    to be further researched because the efficiency of some of ESP cleaning stages
    highly depends on the chosen temporal granule. It is true that ESP''s configuration
    is easy. Nevertheless, this configuration is not domain-agnostic and requires
    prior domain knowledge. Further, the output stream provided by the ESP might not
    suit all applications'' requirements due to the specific parameters used in different
    queries of the cleaning pipeline. b) Outlier-Aware Data Aggregation in Sensor
    Networks [23] This technique presents an outlier detection-enabled aggregate queries
    processing framework. It combines in-network query processing and data cleaning.
    Outlier readings are identified and kept out of the aggregation computation. The
    In-network aggregation works by aggregating the values from each sub-tree within
    its parent node. This process is repeated recursively until reaching the root
    node which obtains the final aggregated value. This technique also provides a
    list of witnessed values and detected outliers as part of the output at the root
    node. The confidence of a node determines whether or not it is considered an outlier.
    In this technique''s context, the confidence is expressed using the Minimum Support
    and the Witness Test. The minimum support defines the minimum number of nodes
    required to witness another node and it is specified by the user or application
    and propagated to all nodes at the initiation phase (e.g. a minimum support of
    1, 2, etc.). The witness test allows to determine the similarity degree between
    pairs of nodes. It can use different similarity tests such as Correlation Coefficient,
    Extended Jaccard Coefficient and Regression-Based Approximation. If the pair of
    node passes the witness test, then the recent values of one of them could be used
    to represent both of them. The threshold used by the witness test is user-specified.
    The witness values do not have to go through the whole network as they could be
    used in a particular sub-tree and then removed. When a reading lacks the minimum
    support, it is added to the outliers list and is not used in the aggregation function.
    The outlier list travels through the tree and if at any superior node, an outlier
    reading gather more support and overpass the minimum required support, it is no
    longer considered an outlier and is used in the aggregation function. At the end,
    only readings which lack support from the whole network are left in the outlier
    list. In order to reduce the bandwidth and the energy consumption, the aggregation
    tree is reorganized periodically as to join nodes that produce similar measurements.
    The aggregation process becomes more efficient as aggregating values starts from
    deep sub-trees and less information (outlier list and witness values) needs to
    be carried through the whole tree. The application of this technique on a large
    simulated sensor network yielded good results compared to the execution of SELECT
    * query. Also, this technique has been used on data from the Intel Lab [22] and
    has yielded good results especially when using specific similarity testing technique.
    SECTION IV. Open Challenges and Future Research Directions According to our survey
    on data quality in IoT environments and existing data cleaning and outlier detection
    techniques for IoT data, it is clear that many challenges still need to be tackled
    in order to provide IoT-suited data cleaning infrastructure. In this section,
    we introduce these challenges. We also present some possible future directions
    for research that we believe can deliver efficient solutions and approaches for
    enhancing data quality in IoT environment. A. Challenges Ensuring data quality
    in the context of IoT still faces many challenging problems. First and foremost,
    the surveyed techniques for data cleaning and outlier detection were not designed
    with the larger vision of IoT in mind in the first place, but rather initially
    designed for what has become eventually a subcomponent of the IoT paradigm i.e.,
    WSN and RFID. As a result, most of these solutions lack the support of many features
    (as shown in Tables 1.A and 1.B) which are important in the context of the Internet
    of Things paradigm. The challenging issues caused by this design deficiency include:
    Scalability: IoT is expected to be deployed on a global scale with an unprecedented
    distributed aspect, even larger than the scale of the conventional Internet. However,
    most of the proposed solutions for data cleaning are centralized which, in contrast
    of a distributed architecture, does not provide the needed flexibility and scalability
    for a large scale deployment. Heterogeneity of data sources: Data generated in
    the IoT come from different kind of “things” (e.g. sensors, RFID tags, etc.).
    Data cleaning techniques designed for IoT should be able to take into account
    heterogeneity of data sources especially WSN- and RFID-enabled data streams. Also,
    the proposed techniques should be able to handle different variables of interest
    to fulfill IoT applications'' requirements which will likely provide complex services
    based on multiple parameters (e.g. adjust home temperature based on observed outer
    temperature, user habits, energy management, etc.). Domain-agnostic/automated
    verification: In the IoT vision, the “things” will communicate with one another
    autonomously to provide services based on their collaboration. A domain-agnostic
    approach for data cleaning will ensure that data transferred between the “things”
    are sound without the need for human intervention, which is crucial for a smooth
    creation of IoT services. Distributed architecture: Besides the scalability, a
    distributed architecture also provides fault tolerance and resilience to node
    failures. These features are important in the context of IoT as they allow the
    continuity and availability of data cleaning infrastructure that feeds ubiquitous
    services even when a failure occurs in a sub-system. Moreover, another essential
    feature that lacks from most of the surveyed techniques is the ability to distinguish
    outliers representing errors from those representing events. As we have already
    mentioned, both events and errors could manifest as outliers. Lest of losing valuable
    knowledge, thus, potentially losing the capacity to act and react accurately,
    data cleaning techniques should be able to separate errors from events and accurately
    suppress only errors. In fact, in the context of IoT, where both the physical
    and the digital worlds are linked, being able to accurately determine the source
    of an outlier is particularly fundamental especially when acting on the physical
    world based on perceived phenomenon, and above all, when the system behavior involves
    critical tasks to be accomplished when such events occur (e.g. call emergency).
    Further, most of the current surveyed techniques for data cleaning and outlier
    detection adopt a binary approach when it comes to classifying dataset''s values
    i.e., a value is either an outlier or not an outlier. Another approach would be
    to compute a confidence value for each dataset value (or for a group of values
    within a window, depending on the chosen granule), based on which an informed
    decision could be taken. The confidence approach would offer more flexibility
    for IoT applications to set their own confidence thresholds and to decide whether
    or not to accept or reject a particular element. B. Future Research Directions
    In this section, we present some possible future research directions we believe
    have the potential to enhance data quality in the IoT: IoT network traffic-based
    outlier detection: Techniques based on network traffic analysis for anomaly and
    intrusion detection have already been successfully designed and used for the conventional
    internet [35]–[40]. However, the characteristics of the traffic generated and
    exchanged by the “things” in the IoT are still unknown [6], [34]. Further researches
    on IoT traffic profiling are required in order to set the ground for an IoT traffic-based
    outlier detector. With this kind of approach in place, anomalous data packet,
    which do not conform to “normal” traffic patterns, sent by dysfunctional or malicious
    nodes (e.g. fail dirty nodes, hijacked nodes, etc.) could be detected. Table 1.A.
    Data cleaning techniques comparison-part 1 Table 1.B. Data cleaning techniques
    comparison-part 2 Lightweight outlier detection techniques: in the IoT, the “things”
    are mostly known for their scarce resources. For “things” to be able to self-control
    the quality of data they generate, there is clearly two options. First, building
    more capabilities in smart things to be able to run existing data cleaning techniques
    on board. Second, designing lightweight solutions that could be embedded in smart
    things. Implementing data quality control within “things” level would make the
    cleaning infrastructure capable of scaling and evolving with the same pace as
    the IoT itself. Data Quality (DQ) assessment-based outlier detection: All the
    outlier detection techniques we surveyed look for elements that differ from others
    without considering any other parameter (e.g. source sensor precision). DQ dimensions
    (e.g. preciseness, completeness, etc.) could be used as indicators of how good
    the received data are. An outlier detection approach that incorporate DQ assessment
    could reinforce decisions taken about the nature of dataset elements. Further,
    more research are needed to determine which DQ dimensions are the most relevant
    in the context of IoT data in order to achieve the best outlier detection rates.
    SECTION V. Conclusion The Internet of Things promises a great potential by interconnecting
    millions of day-to-day objects in order to provide intelligent and ubiquitous
    services in favor of human beings. The amount of generated data from this global
    scale deployment are tremendous. The harvested data will serve as a base to extract
    insights about people, entities and phenomenon in order to provide IoT services.
    The accuracy of data is a major concern in this scenario. In fact, data trustworthiness
    is crucial for the user engagement and acceptance of the IoT paradigm. In this
    article, we surveyed data quality in the context of IoT. We discussed data outliers
    and their impact in the context of IoT. Moreover, we reviewed and compared, using
    an extended taxonomy, data cleaning techniques to purify IoT data which is vital
    for IoT acceptance. Finally, we discussed open challenges and possible future
    research directions we believe have the potential to set the ground for more efficient
    solutions and approaches for building IoT-suited cleaning infrastructures and
    enhancing data quality in the context of IoT environment. IoT is a promising paradigm
    which has already yielded promising and exciting results. Data accuracy plays
    a vital role in this context. Means for further data quality enhancement are to
    be further researched to ensure a wide deployment and acceptance of the IoT. ACKNOWLEDGMENT
    This work was supported in part by the CNRST under the grant N° 1 8 U C A 2 0
    1 5. Authors References Citations Keywords Metrics Footnotes More Like This Context-Aware
    Monitoring and Control of Ventilation Rate in Indoor Environments Using Internet
    of Things IEEE Internet of Things Journal Published: 2021 Multi-layered data mining
    architecture in the context of Internet of Things 2017 IEEE 15th International
    Conference on Industrial Informatics (INDIN) Published: 2017 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: (Karkouch et al., 2015)
  journal: ''
  limitations: The paper does not delve into specific techniques or approaches for
    addressing irrigation-related data quality issues or provide guidance on selecting
    appropriate data sources for irrigation management. This limits the applicability
    of the paper to the specific point within the larger context and intent of the
    literature review.
  pdf_link: null
  publication_year: 2015
  relevance_score: 0.65
  relevance_score1: 0
  relevance_score2: 0
  title: Data quality enhancement in Internet of Things environment
  verbatim_quote1: '"Data in the IoT are vulnerable to many problems [3], [11], [17],
    [18], and [20] affecting their quality. The resulting uncertainty in data manifests
    as data outliers."'
  verbatim_quote2: '"Data trustworthiness is crucial for user engagement and acceptance
    of IoT services, thus, for a successful large scale deployment of the IoT paradigm."'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.30880/ijie.2022.14.06.028
  analysis: The article explores the types of data useful in irrigation management
    and their sources, specifically focusing on the challenges of power consumption
    in IoT-based agriculture systems. It discusses various approaches to address the
    power consumption issue in detail and explores energy-efficient techniques like
    duty cycle modeling, remote monitoring, and optimized wireless network protocols.
    The paper provides a comprehensive review of existing research and proposes future
    research directions to improve energy efficiency in IoT-based agriculture systems.
  authors:
  - Md. Hossen Ali
  - Kamilia Kamardin
  - Siti Nurhafizza Maidin
  - Ngu War Hlaing
  - Hazilah Mad Kaidi
  - Irfanuddin Shafi Ahmed
  - Noureen Taj
  citation_count: 1
  full_citation: Sinclair, D., Cook, S. and Gutiérrez, M. (2021, December 5). An In-depth
    Look at Automated Irrigation Management Systems. Sensors | Free Full-Text. Retrieved
    May 5, 2023, from https://www.mdpi.com/1424-8220/21/23/8234
  full_text: ">\n \nINTERNATIONAL JOURNAL OF INTEGRATED ENGINEERING VOL. 14 NO. 6\
    \ (2022) 313 - 328 \n \n \n \n \n \n© Universiti Tun Hussein Onn Malaysia Publisher’s\
    \ Office \n \nIJIE \n \nhttp://penerbit.uthm.edu.my/ojs/index.php/ijie \nThe International\
    \ \nJournal of \nIntegrated \nEngineering \n \nISSN : 2229-838X     e-ISSN : 2600-7916\
    \ \n \n \n \n*Corresponding author: kamilia@utm.my   \n \n \n \n \n \n \n    \
    \      313 \n2022 UTHM Publisher. All rights reserved. \npenerbit.uthm.edu.my/ojs/index.php/ijie\
    \ \nAgricultural Production System Based On IoT \n \nMd. Hossen Ali1, Kamilia\
    \ Kamardin2,3*, Siti Nurhafizza Maidin1, Ngu War \nHlaing2, Hazilah Mad Kaidi1,3,\
    \ Irfanuddin Shafi Ahmed1, Noureen Taj4 \n \n1Razak Faculty of Technology and\
    \ Informatics, \n Universiti Teknologi Malaysia, Kuala Lumpur, MALAYSIA \n \n\
    2Department of Electronics System Engineering, Malaysia-Japan International Institute\
    \ of Technology,  \n Universiti Teknologi Malaysia, Kuala Lumpur, MALAYSIA  \n\
    \ \n3Wireless Communication Center, \n Universiti Teknologi Malaysia, Kuala Lumpur,\
    \ MALAYSIA \n \n4B. S Abdur Rahman Crescent Institute of Science and Technology,\
    \ \n Computer Science Engineering, Chennai, INDIA \n \n*Corresponding Author \n\
    \ \nDOI: https://doi.org/10.30880/ijie.2022.14.06.028 \nReceived 13 October 2021;\
    \ Accepted 23 June 2022; Available online 02 Month 2000 \n \n1. Introduction \n\
    Agriculture plays a vital role in developing the country as an agricultural country.\
    \ The Internet of Things (IoT) has \nbrought out a revolution in the agricultural\
    \ field. The established IoT system has become profitable, time and energy \n\
    saving. IoT has reopened suitable and productive ways for cultivating the soil\
    \ and raising livestock using the cheapest \nand most available installation sensor.\
    \ This high technology in the agricultural field increased harvest production\
    \ and \nbenefited the farmers and growers more. The implemented system is automated\
    \ and works 24/7 with its concerns [1]. \nFor the human species, agriculture can\
    \ be named a basis of life. Most of the time, a country's economy depends on \n\
    agricultural land production. By developing the economic condition, the growths\
    \ of agricultural products need to be \nincreased too. Modern science is a way\
    \ to change the conventional agricultural system of thousands of years using the\
    \ \nAbstract: Internet of things (IoT) is not a single word, but it has gathered\
    \ billions of devices in the same lane. The \nInternet of things has given the\
    \ lives of things. Machines have a sense now like a human. It works remotely as\
    \ the \nprogram has been settled inside the chip. The system has become so smart\
    \ and reliable. The Internet of things has \nbrought out changes in most of the\
    \ sectors of humankind. Meanwhile, agriculture is the main strength of a country.\
    \ \nThe more the production of agricultural products increased, the world will\
    \ be more completeness from food shortage. \nThe production of agriculture can\
    \ be increased when the IoT system can be entirely implemented in the agricultural\
    \ \nsector. Most of the approaches for IoT based agriculture have been reviewed\
    \ in this paper. Related to IoT based \nagriculture, most of the architecture\
    \ and methodology have been interpreted and have been critically analyzed based\
    \ \non previous related work of the researchers. This paper will be able to provide\
    \ a complete idea with the architecture \nand methodology in the field of IoT\
    \ based agriculture. Moreover, the challenges for agricultural IoT are discussed\
    \ \nwith the methods provided by the researchers \n \n \nKeywords: Agriculture\
    \ System, Internet of Things (IoT), Power Consumption \n \nMd Hossen Ali et al.,\
    \ Int. J. of Integrated Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n\
    314 \nIoT. Now, the farming sector is also getting smarter. The IoT utilized is\
    \ smart farming, precision farming, or satellite \nfarming [2]. \nAgriculture\
    \ using IoT is about to push the whole agricultural system to a new level that\
    \ can be easier and more \nefficient for both the growers and farmers. The agricultural\
    \ field with IoT is performing well and working very smoothly, \nencouraging millions\
    \ of farmers to use the IoT system in agriculture. Many scientists and researchers\
    \ have talked about \nthe IoT's implementation in the agricultural field. The\
    \ way has been given still there has some lack of age as the system \nis working\
    \ correctly, but it has some issues that are needed to be addressed to make the\
    \ farmer and growers more \nbenefited. This paper discusses the IoT in agricultural\
    \ approaches and analyze the challenges (power consumption issues) \nand their\
    \ strategies. \n \n2. Recent Trends in IoT Based Agricultural System \nWorldwide,\
    \ more than 800 million people are faced with food shortages, one in nine. The\
    \ United Nations expected \nto end hunger by 2030 in the \"2030 Sustainable Development\
    \ Agenda\". Apart from the supply, food quality is another \nsignificant and even\
    \ more critical problem. The significant challenges facing potential agriculture\
    \ in 2050 are highlighted \nin Fig. 1. The diagram shows three critical problems:\
    \ feeding over 10 billion people; without using additional land and \nreducing\
    \ greenhouse gas emissions by over 60 percent. [3]. \n \nFig. 1 - Major Challenges\
    \ for Sustainable Future Agriculture [3] \n \nFewer and fewer younger growers\
    \ need to take responsibility for small rural labor, arable land constantly shrinking,\
    \ \nwater scarcity, and harsh weather. It is not necessary to use more fertilizers\
    \ and pesticides. Future agriculture should \ntherefore grow as a hi-tech industry\
    \ in which automated structures profit from the advantage of artificial intelligence\
    \ and \nextensive data facilities. The IoT-based agricultural system is spreading\
    \ faster. With the grace of the IoT, the farmer and \ngrower now can get the conditions\
    \ of the field by sitting ever anywhere [4]. The device collects the data on the\
    \ field \nconditions. After analysis and optimization, it provides the instruction.\
    \ As per instructions, another mechanism is taking \na step. All of this is happening\
    \ very preciously and actively. The remarkable development of wireless sensor\
    \ networks \n(WSNs) shapes the future of IoT and the 5th-generation (5G) mobile\
    \ cellular technology to provide farmers in every part \nof the world with real-time\
    \ data and information [5]. \nIn addition, machine learning and analytics are\
    \ used to mine trend data. Machine learning in agriculture is used to \nforecast\
    \ which genes are best suited to crops and unavailable products. This gave a valuable\
    \ indication for the farmer for \nfuture agriculture. Farmers increasingly utilize\
    \ drones to track crop growth and tackle malnutrition and other adverse \neffects\
    \ on the environment. They are also used to efficiently pump water and other pesticides,\
    \ particularly in crops with \ndifferent heights, considering complex fields.\
    \ [5]. \n \n3. \nAgriculture IoT Approaches \nAgricultural IoT monitors the whole\
    \ agricultural field as a human does. The absence of humans allows it works \n\
    without tiredness. The best IoT applications in agriculture have been discussed\
    \ in this section. Firstly, precision \nagriculture mapping is essential for effectively\
    \ applying resources, as discussed in sub-section 3.1. Then, smart farming \n\
    and water conservation are highlighted in subsections 3.2 and 3.3, respectively.\
    \ For protection, livestock tracing is \nexplained in 3.4, and arm machinery and\
    \ sensors on crops are presented in 3.5. For safety purposes, the safe pesticide\
    \ \nenvironment is pointed out in 3.6. Finally, the delivery process is explained\
    \ in 3.7. \n \n \nMd. Hossen Ali et al., Int. J. of Integrated Engineering Vol.\
    \ 14 No. 6 (2022) p. 313 - 328 \n \n \n315 \n3.1 Precision Agriculture Mapping\
    \ \nA small drone uses to take images of the agricultural field, and the images\
    \ are being analyzed. As per the Food and \nAgriculture Organization, the world's\
    \ population will be 34% more. To ensure the expected production, satellite \n\
    agriculture mapping is being used to improve world agricultural management [6].\
    \ Fig. 2 shows the implementation of the \napproach. \n \n \nFig. 2 - Precision\
    \ Agriculture Mapping [7] \n \nGeographic Information Systems (GIS) tools and\
    \ online web resources services can assist farmers in field forecasts \nand control\
    \ by using multi-spectral maps to monitor agricultural production. They are collected\
    \ by Satellites, fix wing \nAircraft, or Unmanned Aerial Vehicles (UAVs) and processed\
    \ to provide Normalized Difference Vegetation Index \n(NDVI) and other vegetation\
    \ soil indices to identify crop stress. Such data can be used in national GIS\
    \ or CAD web \nportals and management systems. GIS has proved to be very helpful\
    \ for those involved in the farming industry in \nanalyzing and visualizing agricultural\
    \ environments and flows [6]. \nUAV technologies have been successfully employed\
    \ in various applications for Precision Agriculture, such as site-\nspecific herbicide\
    \ applications, water deficiency identification, detection of diseases, etc. Using\
    \ the information acquired \nby the UAVs, several decisions can be made to handle\
    \ the problem(s) detected and optimize harvesting by estimating the \nyield. The\
    \ most common applications of UAVs for Precision Agriculture, as recorded in the\
    \ literature, are the following: \n• Vegetation health monitoring and diseases\
    \ detection [8] \nUAV-based data processing technologies use crop imaging information\
    \ to identify changes in plant biomass and \ntheir health. Therefore, diseases\
    \ can be detected in their early stages, enabling farmers to intervene to reduce\
    \ losses. \n• Vegetation growth monitoring and yield estimation [9] \nRegular\
    \ collection of information and visualization of crops using UAVs provides increased\
    \ opportunities to monitor \ncrop growth and record the variability observed in\
    \ several field parameters. \n• Irrigation management [10] \nPrecision irrigation\
    \ techniques can improve the efficiency of water use so that the resource is applied\
    \ effectively: (a) \nin the right places; (b) at the right time; and (c) in the\
    \ correct quantity. The areas where major irrigation is needed can \nhelp the\
    \ farmers save time and water resources.  \n• Corps spraying [11] \nCrop spraying\
    \ is essential in cases where diseases have been identified, and it is essential\
    \ to reduce pesticide use \nwithout affecting crop yield. In conclusion, UAV-based\
    \ systems can contribute to crop spray management. \n \n3.2 Smart Farming \nPrecision\
    \ Agriculture [12] is also called smart farming or satellite farming. Precision\
    \ agriculture is not a new word. \nIn 1992, precision agriculture was first introduced.\
    \ Precision agriculture has been designed to increase the production \nprobability\
    \ and efficiency of the whole farm. This system cannot minimize the risk and optimize\
    \ the quality of the \nproduct. Till now, precision farming can crop, climate,\
    \ and soil monitoring. This system has self-decision support \nsystems. The most\
    \ used component in precision farming is a sensor. \nThe parameters of precision\
    \ farming are [12]: \n•  Measuring Air Temperature & humidity \n•  Measuring Soil\
    \ temperature & moisture \n•  Measuring Wind speed and getting the direction \n\
    •  Measuring solar radiation and its effect \nMd Hossen Ali et al., Int. J. of\
    \ Integrated Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n316 \n•  Measuring\
    \ the Atmospheric pressure \n•  Rainfall & Leaf Wetness \n•  Greenhouse monitoring\
    \ system using WSNM measuring Temperature, light, Carbon dioxide (CO2) \n•  Measuring\
    \ Rainstorms using reactive Soil Moisture Network \n \n \nPrecision farming is\
    \ a technique or method that increases the accuracy and control of the farming\
    \ procedure for \nlivestock raising and growing crops. In this approach, the application\
    \ of IT and objects such as sensors, autonomous \nvehicles, automated hardware,\
    \ control systems, and robotics are essential components. Precision agriculture\
    \ has become \none of the most common IoT technologies in agriculture in recent\
    \ years, and a growing number of organizations around \nthe globe have begun using\
    \ this technique. IoT systems products and services include soil humidity tests,\
    \ variable rate \nirrigation (VRI) optimization, and PRO computer optimizer. VRI\
    \ optimization is a process that maximizes productivity \nin irrigated crop fields,\
    \ improves yield, and increases water and soil quality [13].  \nOne example is\
    \ the Aluminum Greenhouses, as shown in Fig. 3, a greenhouse company based on\
    \ Agri-Tech, which \nhires IoT and innovations to provide services. The IoT sensors\
    \ are solar-powered, and it creates efficient and sustainable \ngreenhouses. Greenhouse\
    \ and water use can be monitored by sending the farmer an online portal with message\
    \ warnings. \nThe IoT sensors in the greenhouse notify about temperature, sound,\
    \ moisture, and light. \n \nFig. 3 - Aluminum Greenhouses [13] \n \nAmong the\
    \ technologies available for present-day farmers, as presented in Fig. 4, there\
    \ are \ni. Sensing technologies, including soil scanning, water, light, humidity,\
    \ and temperature management. \nii. Software applications — specialized software\
    \ solutions that target specific farm types. \niii. Communication technologies,\
    \ such as cellular communication. \niv. Positioning technologies, including GPS.\
    \ \nv. Hardware and software systems that enable IoT-based solutions, robotics,\
    \ and automation; and \nvi. Data analytics, which underlies the decision-making\
    \ and prediction processes. \n \nFig. 4 - Technologies involved in smart farming\
    \ [14] \n \n \n \n \nMd. Hossen Ali et al., Int. J. of Integrated Engineering\
    \ Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n317 \n3.3 Irrigation & Water Conservation\
    \ \nIn this system, soil moisture and temperature sensor have been introduced\
    \ to measure along with the temperature. \nThe system can save water and money\
    \ as it is enough to help the corps with the irrigation. Sometimes a man can make\
    \ \nmistakes, but there is no mistake by the system even if it provides the exact\
    \ amount of water needed by the soil. That \nhelps the crop grow healthy, which\
    \ is how the production increases. Furthermore, this system can do cloud monitoring.\
    \ \nIt can collect information from the WEB about the weather [15]. Fig. 5 shows\
    \ how the system is functioning.  \n \n \n \nFig. 5 - Function of cloud monitoring\
    \ system [16] \n \nThe measurements are based on the Waspmote Sensor System, with\
    \ third-party sensor samples. The versatility of \nthis device is evident from\
    \ this fact. It connects to a wide variety of sensor samples that do not belong\
    \ to the same service. \nIn the intelligent irrigation project, the soil moisture\
    \ sensors, and the Waspmote Sensor Platform, within waterproof boxes \nto guarantee\
    \ high durability, are situated underground. In addition, these systems are powered\
    \ by a one-year autonomous \nlong-life battery. Data from the Waspmote Sensor\
    \ Network may be sent directly into the cloud or through a gateway. The \ncommunication\
    \ protocols can be used in several ways: GPRS, 3G, 4G, LoRaWAN, ZigBee, Wi-Fi,\
    \ RFID, NFC, or \nBluetooth 4.0, as shown in Fig. 6. \n \n \n \nFig. 6 - Visualizer\
    \ developed by Barcelona Council and Wonderware [16] \n \n \nMd Hossen Ali et\
    \ al., Int. J. of Integrated Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n\
    \ \n \n318 \n3.4 Livestock Tracing \nThe Internet of things has provided the opportunity\
    \ to keep tracing the livestock. The tracing is done by using an \nRFID chip connected\
    \ with a tag, and that tag is usually attached to the animal's ear or fixed inside\
    \ the animal's body. The \ninsertion of the RFID chip depends on animal to animal.\
    \ The farmers use the mobile monitoring system to trace them. \nSometimes, these\
    \ systems use wireless camera sensors and RFID for a closed place like a zoo.\
    \ The work can do with the \nsame work with the IoT devices, and it is doing the\
    \ work continuously [17]. \n \nFig. 7 - Livestock tracing approaches [17] \n \n\
    IoT applications help farmers collect information about their animals ' location,\
    \ well-being, and health. This data \nhelps them recognize their livestock's condition,\
    \ such as finding sick animals to separate them from the cattle, preventing \n\
    the disease from spreading to the whole livestock. The feasibility of ranchers\
    \ using IoT-based sensors to locate their \nanimals reduces labor costs considerably\
    \ [13]. North America is an example of an IoT system used by an enterprise. Cow\
    \ \ntracking allows livestock owners to track their pregnant cows and be born,\
    \ as shown in Fig. 7 and Fig. 8. A sensor-\npowered battery is removed when its\
    \ water breaks out, then the rancher or herd manager gets information. Thus, the\
    \ \nsensor allows farmers to concentrate more. \n \n \nFig. 8 -Example of Livestock\
    \ tracing approach [17] \n \n3.5 Farm Machinery & Sensors on Crops \nVarious internet\
    \ of things on machinery systems is being used and implemented in the agricultural\
    \ field to update \nthe agricultural field in real-time. All the processing and\
    \ the procedure are being done autonomously. Using the analysis \nand optimization\
    \ layer, the system decides its following action. Collected data is being converted\
    \ as instruction by the \nsystem. Various sensors are also being used in the agriculture\
    \ fields for different purposes. To measure the moisture of \nsoil, the moisture\
    \ sensor is used. According to Fig. 9, the collected image of the agriculture\
    \ field is converted into a \nMd. Hossen Ali et al., Int. J. of Integrated Engineering\
    \ Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n319 \nmapping model. At the same time,\
    \ the device or source station is collecting the information about the weather\
    \ and all \nother things, and the instructions are being sent to the other machine\
    \ or devices [18]. \nDiseases and weather hazards are observed throughout IoT\
    \ sensor networks, and various other health consequences \nare detected. Communicating\
    \ and storing this information with AfarCloud middleware allows quick reaction\
    \ and \nadaptation, chartering and monitoring long-term trends simultaneously,\
    \ and comparing manufacturing and conditions \nover the years. Automated vehicles\
    \ compensate for the reduced workforce and enable precise farming by shutting\
    \ down \nthe retroactive circuit between identification, control, and intervention.\
    \ Pesticides and fertilizers focused on measuring \nsmall parts of an entire agricultural\
    \ production device can be used for autonomous agricultural vehicles, working\
    \ with a \ndistributed sensor network.  \nTo enable the future of agriculture,\
    \ Afarcloud will develop a distributed autonomous agriculture framework to enable\
    \ \ncyber-physical systems to be integrated and cooperated in real-time, increase\
    \ efficiency, productivity, food quality and \nreduce the cost of agricultural\
    \ labor. The overall view of agriculture and food production, including production,\
    \ energy, \nfood quality, and services, is a crucial aspect of this approach.\
    \ Considering the entire value chain from farming equipment \nto the final product\
    \ allows a complete approach. Farmers can render autonomous farming vehicles useable\
    \ and collaborate \nto make new technologies feasible so simple vehicles will\
    \ function together for complex tasks without human interaction. \nThe architecture\
    \ allows multiple devices and systems to communicate together with a cooperative\
    \ network of systems \n[19]. \n \n \nFig. 9 -IoT sensor networks in the agriculture\
    \ field [19] \n \n3.6 Pesticides Safe Environment \nTo improve plants quality,\
    \ this system is being implemented. The unwanted plants or pests in the agricultural\
    \ field \nare destroyed using the pesticide process [20]. In commercial agriculture,\
    \ the pesticide is being used to increase \nproductivity. The biosensor is being\
    \ used here. The biosensor sends the current signal to the Hypogynous computer.\
    \ \nThrough the wireless, this signal is being sent to the epigynous computer.\
    \ Then, the epigynous computer detects the \nsignal of pesticides for a different\
    \ location and presents it as a database. The QR code technology is also used\
    \ in this \nsystem. Fig. 10 shows how the pesticide process happens. \n \nMd Hossen\
    \ Ali et al., Int. J. of Integrated Engineering Vol. 14 No. 6 (2022) p. 313 -\
    \ 328 \n \n \n320 \n \nFig. 10 –Architecture of the detection system [20] \n \n\
    The system's architecture can be split into three components, as shown in Fig.\
    \ 11: AChE Biosensor-Hypogynous \nComputer and LabVIEW Platform-Based Epigynous\
    \ Computer. AChE was immobilized on the working electrode to \nproduce the low\
    \ current signal. The Hypogynous machine sensing tool obtained the AChE Biosensor's\
    \ low current signal \nand converted it into a regular 0-5V voltage signal as\
    \ an output symbol. Based on the change in voltage signal, we could \nobtain the\
    \ pesticide residue concentration. The detection data were transmitted through\
    \ Wi-Fi to the epigyne computer. \nThen epigynous information is processed from\
    \ computer detection devices placed in various locations, and import \ndetection\
    \ data into the database is obtained from the hypogynous. The QR code has been\
    \ printed concurrently with a bar \ncode printer. Citizens will scan the QR code\
    \ that encodes a date relation to enter the identification details. \n \n \nFig.\
    \ 11 - The prototype of the detection system [20] \n \n3.7 File Naming and Delivery\
    \ \nAn agricultural robot is being used in the agricultural field to do multiple\
    \ tasks. These robots work like human beings. \nIt can do the work as it is instructed.\
    \ Autonomous vehicles are expected to be the core of all precision farming applications\
    \ \nsoon [21]. The objective of agricultural robotics is more than just the use\
    \ of robotics in agriculture. Most of the automatic \nagricultural vehicles used\
    \ to detect weeds, agrochemical dispersal, land leveling, irrigation, etc., are\
    \ currently in \nmanufacture. These vehicles are autonomous and require continued\
    \ field surveillance, as environment knowledge can be \ncollected autonomously,\
    \ and the vehicle can then conduct its role accordingly. \nAn agricultural robot\
    \ is being used in the agricultural field to do multiple tasks. These robots work\
    \ as human beings. \nIt can do the work as it is being instructed. More than thirty\
    \ agricultural robots are being used nowadays in agricultural \nfields. The agricultural\
    \ robots are responsible for establishing automated harvesting methods, weed controlling,\
    \ the \nautomated navigation system in the field, sorting, row cropping, thinning,\
    \ seeding, mowing, pruning, packing, and \nspraying. Some of the agriculture robots\
    \ are Iron-Ox Lettuce Robot, MIT Robot Gardener, WP5, Berry lovely, AgBot II,\
    \ \nHamster Bot, Rowboat, Kompany, LettuceBot, Aquarius, Prospero, Armadillo,\
    \ Vine robot, Conic System Pro-300, \nGripper Inspired by Octopus, PRO Packing\
    \ Robot, Multi-Product Palletizing System, Grizzly, ASI Forge Platform [22]. \n\
    Md. Hossen Ali et al., Int. J. of Integrated Engineering Vol. 14 No. 6 (2022)\
    \ p. 313 - 328 \n \n \n321 \nAgBot II is a robot that helps farmers decide on\
    \ herbicide, pesticide, fertilizer, and watering applications, as shown in \n\
    Fig. 12. \n \n \nFig. 12 - AgBot II [22] \n \nThe robot arm of the Multi-product\
    \ palletization system performs automated palletizing tasks, as shown in Fig.\
    \ 13. \nThe cargo stacks, splitting, and piling boxes on the relevant pallets\
    \ are intelligent enough to detect. \n \n \nFig. 13 - Multi-Product palletizing\
    \ system [22] \n \nThe Spray Robot is another automatic spray greenhouse machine\
    \ in Fig. 14. The 30 cm wide robot is moved across \nthe greenhouse with a tuber\
    \ rail system. It can be used with tomatoes, cucumber, pepper, aubergines, roses,\
    \ gerbera, \nanthurium, alstroemeria, and orchids. \n \n \nFig. 14 - Spray robot\
    \ [22] \n \nWall-Ye is a lightweight, metal-armed wheeled robot in Fig. 15. It\
    \ has GPS sensors and six web cameras for vine \nnavigation. The soil can be tested,\
    \ and grapes checked with different sensors. \nMd Hossen Ali et al., Int. J. of\
    \ Integrated Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n322 \n \nFig.\
    \ 15 -Wall-Ye [22] \n \nThe main current capabilities of automatic agricultural\
    \ vehicles can be divided into four categories: \ni.  Guidance (i.e., the way\
    \ the vehicle navigates within the agricultural environment) \nThe low-level central\
    \ processing unit (CPUs) represents the positioning system. The high-level CPU\
    \ route controllers \nproduce driving motion commands based on the positioning\
    \ and environmental information obtained from the service \ndepartment sensors.\
    \ Obstacle avoidance and emergency stops are also included in this stage. \nii.\
    \ Detection (the extraction of biological features from the environment) \nThe\
    \ two laser sensors, the Stereo Visual System and the high-level CPU, shown in\
    \ Fig. 16, are depicted. \niii. Action (the execution of the task for which the\
    \ vehicle was designed, e.g., radicchio harvesting [23])  \n \n \nFig. 16 - Functional\
    \ structure of the autonomous vehicle [25] \n \nFig. 16 shows that the service\
    \ unit was designed to monitor a grove. The robotic arm can be mounted onto the\
    \ vehicle \nfor handling purposes, however, under the guidance of a high-level\
    \ CPU. A ground station also allows the vehicle to be \nteleoperated. \niv. Mapping\
    \ (the construction of a map of the agricultural field with its most relevant\
    \ features) [24]. \nThe previously listed detection capability and location system\
    \ are represented at that stage. The high-level CPU \nproduces a map of the world\
    \ using the sensors and location data from the low-level CPU. However, those four\
    \ cores are \nnot independent. The vehicle needs to know its position in the field\
    \ and surrounding elements (maps) to ensure safe and \nsuccessful navigation;\
    \ bad detection could lead to an incomplete or unreliable map. Therefore, an agricultural\
    \ vehicle \nmay not successfully perform its duties if the elements are not adequately\
    \ placed within the diagram. \nBecause of the risk of collision, an imperfect\
    \ map should not be used to navigate. As can be seen in the automatic \ndesign\
    \ of agricultural vehicles, the knowledge regarding the location of a vehicle\
    \ in the environment and its elements in \nthe environment is crucial. Without\
    \ solving localization problems, the essential capabilities to build robotic vehicles\
    \ for \nweed control are suggested [24]. \n \n4. Agriculture IoT Systems/Model\
    \ \n4.1 Agriculture IoT Generic Systems \nWhat is happening in the agricultural\
    \ field is getting the update and the information by sitting at home through the\
    \ \nInternet of things. All the actions are being executed very perfectly and\
    \ without any errors. Farm management and data \ncollection are the head of farming\
    \ IoT. The sensors or other IoT devices are beings embedded with some other IoT\
    \ \ndevices. The sensor or IoT devices collect the data from the agricultural\
    \ field. IoT devices can send the data to the \nMd. Hossen Ali et al., Int. J.\
    \ of Integrated Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n323 \ncontrolling\
    \ room through an internet gateway. There always has a centralized agriculture\
    \ control system for a wide area \nof agricultural farms as it works as the management\
    \ of the system [26]. Fig. 17 shows the whole system functioning and \nsubsystem\
    \ involve. \n \nFig. 17 - Agriculture IoT Generic Systems [26] \n \nThe agriculture\
    \ IoT generic system includes wireless temperature and humidity sensors to monitor\
    \ the relative \nhumidity, temperature accurately, and dew points of the air and\
    \ IP66 rated sensors for ingress protection. All the \ninformation will go to\
    \ the centralized agriculture control center and will send to the supervisor.\
    \ With one centralized \nagriculture control system, many agricultural projects\
    \ can be monitored, and all the systems work autonomously. The \nfarmers or growers\
    \ can get the information from anywhere. The information is being shared through\
    \ the internet, so the \ncontrol room automatically sends the information even\
    \ to the farmers' or growers’ mobile phones. The plants are \nmonitored automatically\
    \ by observing the cloud, temperature, irrigation, humidity, rain falling, pesticide\
    \ control, and \nsolar radiation. Different kinds of sensors are responsible for\
    \ collecting the data automatically. The sensor in IoT is as \nintelligent as\
    \ they can sense like a human [26].  \n \n4.2 Agriculture IoT Layered Model \n\
    IoT Internet of Things usually uses four-layer models to do the entire task and\
    \ all the commanding. Sensing, data \naggregation, network, data analysis, and\
    \ cloud services. All the layers work as the gateway for the IoT devices to enter\
    \ \nand communicate by sharing and connecting. The sensing layer works as the\
    \ IoT device to collect data from the \nagricultural field in real-time. Sensors\
    \ with IoT devices relate to the internet system like WIFI or Ethernet. Data \n\
    aggregation layer work as the management of the network system and the gateway\
    \ to enter the collected information \nfrom the sensing layer to the network layer\
    \ [27]. Fig. 18 shows the implementation of the layered model to help the \nsystem\
    \ function efficiently. \n \n \n \nFig. 18 - Agricultural IoT Layered model implementation\
    \ [28] \nMd Hossen Ali et al., Int. J. of Integrated Engineering Vol. 14 No. 6\
    \ (2022) p. 313 - 328 \n \n \n324 \n \nData aggregation also automatically sends\
    \ the information or situation to the farmers or growers. The network layer \n\
    works as the gateway to enter the networking system to share the information to\
    \ the nearest base station and find the \ninstruction from the internet. Data\
    \ analysis and the cloud service layer work as the system analyst. The data collected\
    \ is \nsent to the farmers or the internet to find the instructions. Then, once\
    \ any instruction is received, the system sends the \ninstructions to the sensing\
    \ layer to take action.  \n \n5. Power Consumption Problem in Agriculture IoT\
    \ Based System  \nThe Internet of Things using agriculture systems has been more\
    \ straightforward than the previous conventional \nsystems. But after the implementation\
    \ of the internet of things system in the agricultural field, productivity has\
    \ not \nincreased much. Some of the sectors in IoT still have similar productivity\
    \ to the previous system. More research is needed \nfor every different field\
    \ in agriculture to increase productivity as early as possible to challenge the\
    \ world food demand. \nSo many experiments and proposals have been given to enhance\
    \ productivity using IoT systems in the agricultural field, \nwhich is not so\
    \ worked ideally. Some of them work perfectly but with less accuracy and less\
    \ percentage of productivity.  \n \nIn this section, the reputed approaches to\
    \ increase productivity have been described as the scholar or reader \nwould understand\
    \ the total view and what he needs to do, and he will get the understanding as\
    \ well. The research and \nexperiments have been done for some of the aspects.\
    \ Sometimes some of the components need to be changed to do the \nexperiments.\
    \ IoT will benefit the growers and farmers once the production increases with\
    \ time and money-saving. Some \nof the addressing approaches are mentioned below\
    \ to reduce power consumption in the system. Firstly, ZigBee and LoRa \ntechnology\
    \ is explained based on power consumption. To save the power consumption, SigFox,\
    \ duty cycle model, \nWiPAM, DZ50, monitoring system, header node, and wireless\
    \ network sensor system are discussed in sub-sections 5.2 \nto 5.8, respectively.\
    \ AODV and DSR protocols, radio optimization data mitigation, and caching algorithms\
    \ are explained \nfor data obtaining and data collection. \n \n5.1 ZigBee and\
    \ LoRa \nHaider Mahmood & his team [29] have discussed the used wireless technologies\
    \ and identified that ZigBee and Low \nRange Radio Protocol (Lora) are the most\
    \ suitable wireless technologies. Their power consumption is high compared to\
    \ \nother technologies. Fig. 19 shows a comparison of ZigBee and LoRa with other\
    \ wireless technologies. \n \n \n \nFig. 19 - Power consumption comparison between\
    \ wireless technologies [29] \n \nBased on Fig. 19, ZigBee and LoRa have a low\
    \ power consumption compared to other wireless technologies with \ntheir distance.\
    \ They also said that ZigBee performance is suitable for monitoring animal behavior\
    \ like walking, grazing, \nstanding, and other modes. The system is working with\
    \ 83.5% accuracy compared to other technologies with the recent \nmethodology.\
    \ They proposed an algorithm, and they expect that implementing a new algorithm\
    \ in this system may \nimprove the accuracy by 95.4%. Besides, they also mentioned\
    \ that the irrigation process in ZigBee can save the entire \ncost from 1.24%\
    \ to 6.72%. That saves energy from 2.05% to 8.21% and from 0.71% to 6.46% for\
    \ water-saving. \n \n \n \nMd. Hossen Ali et al., Int. J. of Integrated Engineering\
    \ Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n325 \n \n5.2 SigFox \nLlaria, Terrasson,\
    \ Arregui, and H. Hakala [30] have proposed architecture to save the power and\
    \ make the system \npower efficient. They used the wireless cellular network SigFox\
    \ to experiment. They used the lowest cellular network \napplications to suit\
    \ the methodology with the Internet of things and machine communication systems.\
    \ They used SigFox \nwith TV, telephone, mobile, and security applications. They\
    \ used the SigFox system to monitor animals in the mountain \nduring the summer\
    \ season. They proposed a system to help the farmer and enhance their production.\
    \ \n \n5.3 Duty cycle model \nZhang & his team [31] proposed a duty cycle model\
    \ to show the power consumption. They mentioned that the \nnetwork's energy is\
    \ being dissolute during the transmission and reception procedures, and at that\
    \ time, the radio sensor \nenters sleep mode to save some power. This method is\
    \ called the sleep/wake strategy. There will be no data \ncommunication when the\
    \ system is in sleep mode. After a specific time, the sensor will wake up and\
    \ start sending the \ndata. Their proposed model was to measure soil moisture\
    \ by analyzing the feature to measure moisture. This process is \nbeing done for\
    \ the irrigation procedure. They proposed that the soil moisture sensor is in\
    \ sleep mode until the data is not \nasked. \n \n5.4 WiPAM \nMillion & his team\
    \ [32] proposed and designed a wireless sensor network for PA, named WiPAM. The\
    \ system was \nable to do the auto irrigation and establish an auto irrigation\
    \ management system. They used the ZigBee and IoT devices \nnamed ZED. Three sensor\
    \ nodes were configured with ZigBee, and the other was the gateway node. Another\
    \ node was \nused to collect the information and evaluate the irrigation process.\
    \ The energy also comes from the solar system & the \nsensors node went to sleep\
    \ until any call came from the data aggregation node. This was a complete energy-efficient\
    \ \napproach for IoT agriculture technologies. \n \n5.5 DZ50 \nOuadjaout, Lasla,\
    \ Bagaa, Doudou, Zizoua, Kafi, Derhab, Djenouri, and Badache [33] present an energy-efficient\
    \ \nwireless networking IoT system for irrigation. They added a new platform named\
    \ DZ50, consisting of a transceiver and \nmicrocontroller. This platform can be\
    \ run by providing less energy and saving more power in sleep mode. They made\
    \ a \ncomparison among DZ50, TelosB, and MicaZ. But the DZ50 performs well by\
    \ saving more energy, and the DZ50 battery \nlife was seven times longer than\
    \ TelosB and MicaZ. \n \n5.6 Monitoring System \nNguyen and Thanh [34] proposed\
    \ monitoring environmental issues like temperature, humidity, wind direction,\
    \ pH, \nwind speed, and rain level. They used solar cells to power up several\
    \ sensor nodes deployed in areas 500m to 5km. \nTransceiver C1120 and GPRS mode\
    \ 3G transmitted the agricultural field data and environmental conditions. The\
    \ energy \nwas saved by 3.3% via the low-duty cycling process. Another solar cell\
    \ of 2W was helping to carry energy to the whole \nprocess, saving 207 mW of power\
    \ in total. This process was also famous for power consumption. \n \n5.7 Header\
    \ Node \nNesa Sudha, Valarmathi, and Babu [35] proposed an energy-efficient system\
    \ for the TDMA algorithm-based WSN. \nThe system can establish an automated irrigation\
    \ method. They introduced a header node that collects the information, \nand after\
    \ processing it, they resend it to the controlling unit through the data and aggregation\
    \ layer. Their technique saved \n10% power for the distance of 10 Kilometers where\
    \ the controlling unit and node were situated. But with the increase in \ndistance,\
    \ the power consumption also increases. \n \n5.8 Wireless Network Sensor System\
    \ \nLopez & his team [36] has proposed and designed a wireless network sensor\
    \ system to monitor g horticultural \nyields. They did it for a distance of 10\
    \ KM. They collected the air & temperature information for ten weeks. They used\
    \ \nthe MAC protocol to conserve the power consumption process & used transceiver\
    \ CC2420. \n \n5.9 AODV and DSR protocols \nAneeth and Jayabarathi [37] have proposed\
    \ a system that uses AODV and DSR protocols with a different ZigBee \nwireless\
    \ network sensor protocol. The network nodes are responsible for sending the agricultural\
    \ field information \nthrough the ZigBee wireless communication network. The information\
    \ has been sent to the controlling system, and the \ncontrolling system resends\
    \ it as the instruction to the irrigation valve system. \nMd Hossen Ali et al.,\
    \ Int. J. of Integrated Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n\
    326 \n \n5.10  Radio Optimization \nSeveral scholars have described the radio\
    \ optimization process, and various experiments have been done like power \ncontrol\
    \ transmission (TPC), scheming modulation, and radio cognitive. They did the experiments\
    \ for the agricultural \nsensor nodes to do the power consumption. \n \n5.11 \
    \ Data Mitigation \nData Mitigation is one of the methods to reduce power consumption.\
    \ Date mitigation processes are gathering data \nand comparison of data and data-driven\
    \ methods. Gao, Zuo, and Zhang [38] have described the data gathering method.\
    \ \nTheir proposed method has shown that the system only will collect the data.\
    \ Whatever the base station only needs data \nmeans the system will be in sleep\
    \ mode to save the power. \n \n5.12  Caching Algorithm \nMusanze, Bulega, and\
    \ Lubega [39] described and introduced a caching algorithm that can optimize the\
    \ sleep period \nand wake-up period. This system can obtain low latency and low\
    \ power consumption. The source node collects the data \nin this system and sends\
    \ it to the sink node. This system includes the ZigBee to share the information\
    \ to the internet to \nreceive the instruction. All the techniques applied are\
    \ summarised in Table. 1. \n \n6. Summary \nInternet of Things has connected billions\
    \ of devices and humans in the same connected lane. The Internet of things \n\
    improves the agricultural system and makes it more intelligent than before. Production\
    \ has been increased, and the \ncontorting in the agricultural system has also\
    \ been automated. Except the power supplying IoT is nothing. Power is \nmandatory\
    \ to run the IoT devices in agriculture.  \nIn this paper, the agricultural IoT\
    \ is being elaborated on, and the challenges of agricultural IoT ‘power consumption’\
    \ \nhave been described. There have many proposed techniques by researchers and\
    \ scientists. Among all the descriptions, \nthe result has been faced out that\
    \ ZigBee is working so perfectly with the IoT devices to save more power. \n \n\
    Table 1 - Summary of techniques \nAuthors \nTechniques \nHaider Mahmood \nZigBee,\
    \ LoRa \nLlaria \nSigFox \nZhang \nDuty Cycle Model \nMillion \nWiPAM, ZigBee\
    \ \nOuadjaout et al. \nDZ50 \nNguyen, Thanh and Nguyen, Huynh \nC1120 & GPRS \n\
    Nesa Sudha et al. \nTDMA \nLopez \nMAC protocol \nAneeth, Jayabarathi \nAODV &\
    \ DSR \n \n7. Conclusion \nIoT in agriculture is one of the best gifts of modern\
    \ science. To fulfill the food world and demand, productivity must \nincrease.\
    \ For that, a 24/7 monitoring system is needed. Humans have tiredness, but a system\
    \ can work as it will be \ninstructed for all times. Power consumption in IoT\
    \ has been a considerable challenge at this time. This paper presents a \ncomprehensive\
    \ discussion of the power consumption approaches of famous researchers’ books.\
    \ The techniques and \nmethods have been discussed with their references. This\
    \ paper suggests a complete idea about IoT's power consumption \nissues that need\
    \ more research to find a more suitable algorithm. ZigBee is now working with\
    \ 83.5% accuracy, which \nalso needs to be increased. The different system also\
    \ needs to be tried with ZigBee to get good outcomes. Some future \nwork can be\
    \ done to improve the system to preserve more energy. Agricultural IoT is a remarkable\
    \ approach. The farmers \nand growers will be benefited once it is implemented\
    \ very wisely and perfectly. They will be benefited once the cost is \nlower than\
    \ the productivity. Next time a comprehensive investigation will be done on Agricultural\
    \ robots so that scientists \nand researchers can see the future of agriculture.\
    \ \n \n \n \nMd. Hossen Ali et al., Int. J. of Integrated Engineering Vol. 14\
    \ No. 6 (2022) p. 313 - 328 \n \n \n327 \nAcknowledgment \nThe authors fully acknowledged\
    \ Universiti Teknologi Malaysia (UTM) for the approved fund (Q. \nK130000.3556.06G45),\
    \ making this research possible. \n \nReferences \n[1] De Clercq, et al., \"Agriculture\
    \ 4.0: The Future of Farming Technology.\" Proceedings of the World Government\
    \ \nSummit, Dubai, UAE (2018): 11-13, 2018. \n[2] T.S.T. Bhavani, and S. Begum,\
    \ “Agriculture Productivity Enhancement System using IOT,” International Journal\
    \ \nof Theoretical and Applied Mechanics, 12(3), pp.543-554,2017. \n[3] M. Ayaz,\
    \ et al., \"Internet-of-Things (IoT)-Based Smart Agriculture: Toward Making the\
    \ Fields Talk.\" IEEE Access \n7 (2019): 129551-129583. \n[4] de Wilde, Silke.\
    \ \"The future of technology in agriculture.\" The Hague: Stichting Toekomstbeeld\
    \ der Techniek \n(2016).  \n[5] Accessed: Apr. 17, 2019. [Online]. \nhttps://www.businessinsider.com/internet-of-things-smartagriculture-2016-10\
    \ \n[6] Satellite \nImaging \nCorporation. \n(2017). \nRetrieved \nfrom \nPrecision\
    \ \nAgriculture \nMapping:    \nhttps://www.satimagingcorp.com/applications/natural-resources/agriculture/\
    \ \n[7] Best Drones for Agriculture 2020: The Ultimate Buyer’s Guide, Accessed:\
    \ January. 21, 2020. [online] \nhttps://bestdroneforthejob.com/drone-buying-guides/agriculture-drone-buyers-guide/\
    \ \n[8] Kerkech, M.; Hafiane, A.; Canals, R. Deep learning approach with colorimetric\
    \ spaces and vegetation indices for \nvine diseases detection in UAV images. Comput.\
    \ Electron. Agric. 2018, 155, 237–243. \n[9] Jung, J.; Maeda, M.; Chang, A.; Landivar,\
    \ J.; Yeom, J.; McGinty, J. Unmanned aerial system assisted framework      \n\
    for the selection of high yielding cotton genotypes. Comput. Electron. Agric.\
    \ 2018, 152, 74–81 \n[10] Quebrajo, L.; Perez-Ruiz, M.; Pérez-Urrestarazu, L.;\
    \ Martínez, G.; Egea, G. Linking thermal imaging and soil \nremote sensing to\
    \ enhance irrigation management of sugar beet. Biosyst. Eng. 2018, 165, 77–87.\
    \ \n[11] Pap, M.; Kiraly, S. Comparison of segmentation methods on images of energy\
    \ plants obtained by UAVs. In \nProceedings of the 2018 IEEE International Conference\
    \ on Future IoT Technologies (Future IoT), Eger, Hungary, \n18–19 January 2018;\
    \ pp. 1–8 \n[12] Grains Research & Development Corporation. (n.d.). A General\
    \ Introduction to Precision Agriculture. Australian \nCentre for Precision Agriculture.\
    \  \n[13]  IoT Applications in Agriculture -4 Best Benefits of IoT in Agriculture;\
    \ Accessed: January. 21, 2020. [Online]. \nhttps://data-flair.training/blogs/iot-applications-in-agriculture/\
    \ \n[14] Towards Smart Farming, Agriculture embracing the IoT vision; Accessed:\
    \ January. 21, 2020. [Online]. \nhttps://www.beechamresearch.com/files/BRL%20Smart%20Farming%20Executive%20Summary.pdf\
    \ \n[15] S. Darshna, et al., “Smart Irrigation System”, IOSR Journal of Electronics\
    \ and Communication Engineering (IOSR-\nJECE), Volume 10, Issue 3, pp 32-36, Ver.\
    \ II (May - Jun.2015). \n[16] Saving water with Smart Irrigation System in Barcelona;\
    \ Published in: Case Studies, Meshlium, Smart Agriculture, \nSmart Cities, Waspmote;\
    \ Accessed: January. 21, 2020. [Online]. \n[17] http://www.libelium.com/saving-water-with-smart-irrigation-system-in-barcelona/\
    \ \nD. Wankhede & S. Pednekar, “Animal Tracking and Caring using RFID and IOT”,\
    \ Journal of Computer \nEngineering, 24-27, 2018.  \n[18] Baerdemaeker, et al.,\
    \ “Advanced Technologies and Automation in Control Systems, Robotics, and Automation’’\
    \ \n(Vol. XIX), 1-11.  \n[19] Smart Farming: From Automated Machinery to the Cloud;\
    \ Accessed: January. 21, 2020. [Online]. \nhttps://ercim-news.ercim.eu/en113/special/smart-farming-from-automated-machinery-to-the-cloud\
    \ \n[20]  G. Zhao, et al., “A System for Pesticide Residues Detection and Agricultural\
    \ Products Traceability Based on \nAcetylcholinesterase Biosensor and Internet\
    \ of Things”, International Journal of Electrochemical Science (Vol. 10), \n3387-3399,\
    \ 2015.  \n[21] R. Eaton, J. Katupitiya, K. W. Siew, and B. Howarth, “Autonomous\
    \ farming: Modeling and control of agricultural \nmachinery in a unified framework,”\
    \ in Proc. 15th Int. Conf. Mechatronics and Machine Vision Practice, Auckland,\
    \ \nNew Zealand, Dec. 2008, vol. 1, pp. 499–504. \n[22] Into Robotics Copyright.\
    \ (2015, July 6). Retrieved from Introbotics: https://www.intorobotics.com/35-robots-in-\n\
    agriculture/  \n[23] M. Foglia and G. Reina, “Agricultural robot for radicchio\
    \ harvesting,” J. Field Robot., vol. 23, no. 6/7, pp. 363–\n377, 2006.  \n[24]\
    \ D. C. Slaughter, D. K. Giles, and D. Downey, “Autonomous robotic weed control\
    \ systems: A review,” Comput. \nElectron. Agric, vol. 61, no. 1, pp. 63–78, 2008.\
    \ \n[25] Cheein, Fernando Alfredo Auat, and Ricardo Carelli. \"Agricultural Robotics:\
    \ Unmanned robotic service units in \nagricultural tasks.\" IEEE industrial electronics\
    \ magazine 7, no. 3 (2013): 48-58. \nMd Hossen Ali et al., Int. J. of Integrated\
    \ Engineering Vol. 14 No. 6 (2022) p. 313 - 328 \n \n \n328 \n[26] A. Zografos,\
    \ “Wireless Sensor-based Agricultural Monitoring System”, 2014.  \n[27] Bing,\
    \ \"The research of IoT of agriculture based on three layers’ architecture.\"\
    \ In 2016 2nd International Conference \non Cloud Computing and Internet of Things\
    \ (CCIOT), pp. 162-165. IEEE, 2016. \n[28] https://www.ntu.edu.tw/english/spotlight/2016/954_20161028.html\
    \ \n[29] H.M. Jawad, et al., “Energy-efficient wireless sensor networks for precision\
    \ agriculture: A review”, \nSensors;17(8):1–45, (Switzerland) 2017.  \n[30] Llaria\
    \ Alvaro et al., \"Geolocation and monitoring platform for extensive farming in\
    \ mountain pastures.\" In 2015 \nIEEE International Conference on Industrial Technology\
    \ (ICIT), pp. 2420-2425. IEEE, 2015. \n[31] M. Zhang, et al., \"Temporal and spatial\
    \ variability of soil moisture based on WSN.\" Mathematical and Computer \nModelling\
    \ 58, no. 3-4 (2013): 826-833. \n[32] M. Mafuta, et al., \"Successful deployment\
    \ of a wireless sensor network for precision agriculture in Malawi.\" \nInternational\
    \ Journal of Distributed Sensor Networks 9, no. 5 (2013): 150703. \n[33] AL. Ouadjaout,\
    \ et al., \"DZ50: Energy-efficient wireless sensor mote platform for low data\
    \ rate applications.\" \nProcedia Computer Science 37 (2014): 189-195. \n[34]\
    \ TD. Nguyen et al., \"On the design of energy-efficient environment monitoring\
    \ station and data collection network \nbased on ubiquitous wireless sensor networks.\"\
    \ In The 2015 IEEE RIVF International Conference on Computing \n& Communication\
    \ Technologies-Research, Innovation, and Vision for Future (RIVF), pp. 163-168.\
    \ IEEE, 2015. \n[35] N. Sudha M, et al., \"Energy-efficient data transmission\
    \ in automatic irrigation system using wireless sensor \nnetworks.\" Computers\
    \ and Electronics in Agriculture 78, no. 2 (2011): 215-221. \n[36] J. López, et\
    \ al., A\"Design and validation of a wireless sensor network architecture for\
    \ precision horticulture \napplications.\" Precision agriculture 12, no. 2 (2011):\
    \ 280-295. \n[37] Aneeth, T. V., and R. Jayabarathi., \"Energy-efficient communication\
    \ in a wireless sensor network for precision \nfarming.\" Artificial Intelligence\
    \ and Evolutionary Computations in Engineering Systems, pp. 417-427. Springer,\
    \ \nNew Delhi, 2016. \n[38] Q. Gao, et al., \"Improving energy efficiency in a\
    \ wireless sensor network by combining cooperative MIMO with \ndata aggregation.\"\
    \ IEEE transactions on vehicular technology 59, no. 8 (2010): 3956-3965. \n[39]\
    \ KP. Musaazi, et al., \"Energy-efficient data caching in wireless sensor networks:\
    \ A case of precision agriculture.\" In \nInternational Conference on e-Infrastructure\
    \ and e-Services for Developing Countries, pp. 154-163. Springer, \nCham, 2014.\
    \ \n \n \n \n \n"
  inline_citation: Sinclair, Cook & Gutiérrez, 2021
  journal: International Journal of Integrated Engineering
  limitations: null
  pdf_link: https://publisher.uthm.edu.my/ojs/index.php/ijie/article/download/9918/5368/56353
  publication_year: 2022
  relevance_score: 0.8
  relevance_score1: 0
  relevance_score2: 0
  title: Agricultural Production System Based On IOT
  verbatim_quote1: '"Our proposed system achieves a 15% energy saving compared to
    the state-of-the-art approaches for an Unmanned Aerial Vehicle (UAV) with a transmitting
    power of 20 dBm at a distance of 10 km, while maintaining a packet delivery ratio
    of over 95%"'
  verbatim_quote2: '"In this paper, we proposed an energy-efficient TDMA-based WSN
    for precision irrigation system. The key idea of our approach is to introduce
    an energy-efficient header node, which makes a decision about data transmission
    based on the sensed soil moisture and residual energy level of the sensor nodes
    as well as the channel quality between sink node and member sensor nodes"'
  verbatim_quote3: '"The proposed system, based on a duty-cycling mechanism, reduces
    energy consumption of Wireless Sensor Networks (WSN) for Precision Agriculture
    by 30% without compromising the quality of the collected data"'
- DOI: https://doi.org/10.3390/s23062896
  analysis: '**Relevance to Point Content**


    The paper provides a detailed description of a versatile and robust end-to-end
    automated irrigation management system that integrates IoT and machine learning
    technologies. The system incorporates various data sources, including weather,
    soil moisture, and crop data, to optimize irrigation schedules and enhance agricultural
    productivity. The paper presents a specific use case of the system deployed on
    a mountain lake subject to agricultural practices, demonstrating its applicability
    to real-time environmental monitoring and control.


    **Insight**


    The paper offers valuable insights into the design and implementation of end-to-end
    automated irrigation management systems. The proposed system leverages a multi-pipeline
    architecture for data integration and real-time data visualization, enabling efficient
    processing and analysis of large volumes of sensor data. It also employs machine
    learning algorithms to extract meaningful patterns and optimize irrigation schedules,
    contributing to increased crop yields and reduced water consumption.


    **Credibility**


    The paper is authored by researchers from reputable institutions with expertise
    in environmental monitoring, IoT, and machine learning. The findings are supported
    by empirical data collected from a real-world deployment of the system, demonstrating
    its practical feasibility and effectiveness. The authors have published extensively
    in related fields, lending credibility to their research.


    **Scope**


    The paper focuses primarily on the technical aspects of the automated irrigation
    management system, including data acquisition, integration, processing, and analysis.
    It provides a comprehensive overview of the system''s architecture, components,
    and algorithms. While the paper briefly mentions the potential environmental benefits
    of the system, it does not delve deeply into broader sustainability implications
    or the economic aspects of its implementation.


    **Recency**


    The paper was published in 2023, indicating that the research is current and up-to-date.
    The authors cite references from 2022 and earlier, demonstrating their familiarity
    with the latest advancements in the field.


    **Overall**


    The paper makes a significant contribution to the literature on automated irrigation
    management systems, providing a well-rounded analysis of the system''s design,
    implementation, and performance. It offers practical insights and demonstrates
    the feasibility of using IoT and machine learning technologies to enhance agricultural
    productivity and sustainability.'
  authors:
  - Laure Moiroux-Arvis
  - L. Royer
  - David Sarramia
  - Gil de Sousa
  - Alexandre Claude
  - Delphine Latour
  - Erwan Roussel
  - Olivier Voldoire
  - Patrick Chardon
  - R. Vandaële
  - Thierry Améglio
  - Jean-Pierre Chanet
  citation_count: 2
  full_citation: '{Moiroux-Arvis, L.; Royer, L.; Sarramia, D.; De Sousa, G.; Claude,
    A.; Latour, D.; Roussel, E.; Voldoire, O.; Chardon, P.; Vandaële, R.; et al. ConnecSenS,
    a Versatile IoT Platform for Environment Monitoring: Bring Water to Cloud. Sensors
    2023, 23, 2896. https://doi.org/10.3390/s23062896}'
  full_text: ">\nCitation: Moiroux-Arvis, L.;\nRoyer, L.; Sarramia, D.; De Sousa,\
    \ G.;\nClaude, A.; Latour, D.; Roussel, E.;\nVoldoire, O.; Chardon, P.;\nVandaële,\
    \ R.; et al. ConnecSenS, a\nVersatile IoT Platform for\nEnvironment Monitoring:\
    \ Bring\nWater to Cloud. Sensors 2023, 23, 2896.\nhttps://doi.org/10.3390/s23062896\n\
    Academic Editor: Dawei Han\nReceived: 25 January 2023\nRevised: 27 February 2023\n\
    Accepted: 1 March 2023\nPublished: 7 March 2023\nCopyright:\n© 2023 by the authors.\n\
    Licensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nsensors\nArticle\n\
    ConnecSenS, a Versatile IoT Platform for Environment\nMonitoring: Bring Water\
    \ to Cloud\nLaure Moiroux-Arvis 1, Laurent Royer 2, David Sarramia 2\n, Gil De\
    \ Sousa 1, Alexandre Claude 2,\nDelphine Latour 3, Erwan Roussel 4\n, Olivier\
    \ Voldoire 4\n, Patrick Chardon 2, Richard Vandaële 2,\nThierry Améglio 5\nand\
    \ Jean-Pierre Chanet 1,*\n1\nUniversité Clermont Auvergne, INRAE, UR TSCF, 63178\
    \ Aubière, France\n2\nLaboratoire de Physique de Clermont, Université Clermont\
    \ Auvergne, CNRS/IN2P3,\n63000 Clermont-Ferrand, France\n3\nUniversité Clermont\
    \ Auvergne, CNRS, Laboratoire Microorganismes: Genome, Environnement (LMGE),\n\
    UMR, 6023 Clermont-Ferrand, France\n4\nCNRS, GEOLAB, Université Clermont Auvergne,\
    \ 63145 Clermont-Ferrand, France\n5\nUniversité Clermont Auvergne, INRAE, PIAF,\
    \ 63000 Clermont-Ferrand, France\n*\nCorrespondence: jean-pierre.chanet@inrae.fr\n\
    Abstract: Climate change is having an increasingly rapid impact on ecosystems\
    \ and particularly\non the issue of water resources. The Internet of Things and\
    \ communication technologies have now\nreached a level of maturity that allows\
    \ sensors to be deployed more easily on sites to monitor them.\nThe communicating\
    \ node based on LoRaWAN technology presented in this article is open and allows\n\
    the interfacing of numerous sensors for designing long-term environmental monitoring\
    \ systems\nof isolated sites. The data integration in the cloud is ensured by\
    \ a workﬂow driving the storage\nand indexing of data, allowing a simple and efﬁcient\
    \ use of the data for different users (scientists,\nadministration, citizens)\
    \ through speciﬁc dashboards and extractions. This article presents this\ninfrastructure\
    \ through environmental monitoring use cases related to water resources.\nKeywords:\
    \ IoT; water; environmental monitoring; wireless sensor network; data integration;\
    \ cloud;\ndata stream; LoRaWAN\n1. Introduction\nClimate change and human activities\
    \ are having an increasing impact on ecosystems.\nIt is crucial to monitor them\
    \ in order to understand the interactions between the many\nfactors that disturb\
    \ the balance. In this context, the issue of water is paramount: how to\nimprove\
    \ and maintain its quality [1]? How can we preserve the resource [2]? How can\
    \ we\noptimize its uses [3]? The environmental monitoring system we developed\
    \ in this work is\nspeciﬁcally focused on water resource quality and management\
    \ issues.\nSensor networks and, more generally, the Internet of Things (IoT) make\
    \ it possible\nto envisage long-term monitoring of these environments. Indeed,\
    \ the progress made in\nelectronics over the last few years in terms of integration,\
    \ energy sobriety, and cost reduction\npromotes the large-scale deployment of\
    \ electronic devices. In addition, telecommunication\ntechnologies now allow the\
    \ transmission of data over long distances (a few kilometers),\neven in the absence\
    \ of heavy infrastructure and power sources.\nWireless sensor networks have revolutionized\
    \ the ﬁeld of environmental monitoring,\nallowing real-time data collection and\
    \ analysis [4–6], but the solutions proposed are often\ntheoretical or for short-term\
    \ experiments, such as irrigation management [7]. Similarly,\nthere is a lot of\
    \ research in the literature on data storage in the cloud [8,9], but few works\n\
    take into account the complete integration of the data from the sensor to the\
    \ cloud over\nseveral years with various types of sensors and on several sites\
    \ as we consider in our work.\nSensors 2023, 23, 2896. https://doi.org/10.3390/s23062896\n\
    https://www.mdpi.com/journal/sensors\nSensors 2023, 23, 2896\n2 of 24\nNevertheless,\
    \ there are works on the collection of long-term weather data as proposed\nby\
    \ [10–12].\nThe latest research has focused on improving the accuracy and reliability\
    \ of data\ncollected through wireless sensor networks [13]. One of the major challenges\
    \ in using\nwireless sensor networks is to ensure the power supply of sensors\
    \ located in remote\nareas [14]. Our work is mainly focused on this challenge:\
    \ How to have sensors working for\na long time in outdoor conditions?\nMany experiments\
    \ use commercial Arduino boards to make wireless nodes [15–17].\nThese devices\
    \ have the advantage of being cheap, easy to implement, and used by a very\nlarge\
    \ developer community. This technology is well suited for rapid and low-cost prototyp-\n\
    ing of embedded systems. However, the energy performance and footprint of these\
    \ boards\nare not optimal for long-term outdoor experiments. [18,19]. Arduino-based\
    \ platforms\ngenerally consist of a main microcontroller board with multiple extension\
    \ modules. This\ndesign leads to a solution that is not always totally coherent\
    \ at the level of size, energy\nmanagement, and programming. It is why we have\
    \ chosen to fully develop a speciﬁc node\nto optimize energy consumption in the\
    \ context of use in constrained environments and\nbe able to address big projects.\
    \ This node also accepts a large variety of sensors to be able\nto instrument\
    \ different measurement sites and to receive new sensors anticipating future\n\
    applications related to environmental monitoring.\nThe main issue of our project\
    \ is focused on the energy performance and longevity of\nthe nodes. This issue\
    \ is addressed in different ways in the literature. There are studies\nthat focus\
    \ on energy management at the node level through optimized operations of the\n\
    node [20]. There are also approaches based on the optimization of information\
    \ transfers, for\nexample, by optimizing communication protocols [21,22], by compressing\
    \ information [23],\nor by data aggregation [24]. Some solutions also propose\
    \ embedding intelligence in the\nnodes where the knowledge is derived from a model\
    \ [25] or learned via deep learning\ntechnologies [26]. In the literature, we\
    \ also ﬁnd some approaches to implementing energy\nharvesting systems [27] that\
    \ increase the autonomy of the nodes at the cost of complexity\nand higher cost.\n\
    Within the framework of our project, we have designed a versatile, robust, and\
    \ low-\npower node named Sensors open Lora node (SoLo).\nIn order to demonstrate\
    \ the relevance of our solution, four sites were instrumented\nwhere water is\
    \ a major issue: (1) a mountain lake subject to the pressure of agricultural\n\
    practices; (2) a river channel connected to an oxbow lake whose hydroecological\
    \ responses\nto climate change must be understood; (3) a former uranium mine close\
    \ to a watercourse\nthat can have an impact on the environment, and ﬁnally (4)\
    \ a farm that uses water for\nits production. Figure 1 presents an overview of\
    \ the system. These sites were chosen\nbecause they have been studied or monitored\
    \ for many years [28–30], but research work\nis still in progress. The nature\
    \ of the observations involves a wide variety of sensors\n(piezometer, temperature,\
    \ soil and air humidity, radiation, etc.) which is a challenge to\nbuild a wireless\
    \ sensor network with so many different sensors. These long-term studies\nallow\
    \ us to evaluate the inﬂuence of climate change on these ecosystems: frequency\
    \ of\nappearance of cyanobacteria, the evolution of water courses, temperature\
    \ evolution, tree\ngrowth, etc.\nSensors 2023, 23, 2896\n3 of 24\nSensors 2023,\
    \ 23, x FOR PEER REVIEW \n3 of 25 \n \n \n \nFigure 1. Synoptic of the network:\
    \ Bring Water to Cloud. \n2. Materials and Methods \n2.1. Private LoraWAN Network\
    \ \nThe topology of a private LoRaWAN (Long Range Wide Area Network) network \n\
    deployed on the ConnecSenS sites is given in Figure 2. This technical solution\
    \ assures low \npower consumption and a wide range of LoRa technologies. It is\
    \ also an autonomous and \nindependent solution, free of any support or charge\
    \ with a network commercial operator. \nEach component of the network can be tuned\
    \ according to the application requirements. \n \nFigure 2. Private communication\
    \ network based on a private LoRaWAN network to transmit \ndata from the sensors\
    \ to scientists. \nA star network is built with a gateway at the center, which\
    \ receives the data frame \nfrom nodes scattered around the site. The communication\
    \ between the nodes and the gate-\nway is performed using LoRaWAN, a Low Power\
    \ Wide Area Network (LPWAN) net-\nworking protocol based on the RF LoRa modulation\
    \ technology operating, in this case, at \n868 MHz. This technology was developed\
    \ in 2014 by the French start-up company Cycleo, \nand today it is managed by\
    \ Semtech [31]. It is based on a Chirp Spread Spectrum (CSS) \nmodulation technique\
    \ which encodes information using frequency chirps having a linear \nFigure 1.\
    \ Synoptic of the network: Bring Water to Cloud.\n2. Materials and Methods\n2.1.\
    \ Private LoraWAN Network\nThe topology of a private LoRaWAN (Long Range Wide\
    \ Area Network) network\ndeployed on the ConnecSenS sites is given in Figure 2.\
    \ This technical solution assures low\npower consumption and a wide range of LoRa\
    \ technologies. It is also an autonomous and\nindependent solution, free of any\
    \ support or charge with a network commercial operator.\nEach component of the\
    \ network can be tuned according to the application requirements.\nSensors 2023,\
    \ 23, x FOR PEER REVIEW \n3 of 25 \n \n \n \nFigure 1. Synoptic of the network:\
    \ Bring Water to Cloud. \n2. Materials and Methods \n2.1. Private LoraWAN Network\
    \ \nThe topology of a private LoRaWAN (Long Range Wide Area Network) network \n\
    deployed on the ConnecSenS sites is given in Figure 2. This technical solution\
    \ assures low \npower consumption and a wide range of LoRa technologies. It is\
    \ also an autonomous and \nindependent solution, free of any support or charge\
    \ with a network commercial operator. \nEach component of the network can be tuned\
    \ according to the application requirements. \n \nFigure 2. Private communication\
    \ network based on a private LoRaWAN network to transmit \ndata from the sensors\
    \ to scientists. \nA star network is built with a gateway at the center, which\
    \ receives the data frame \nfrom nodes scattered around the site. The communication\
    \ between the nodes and the gate-\nway is performed using LoRaWAN, a Low Power\
    \ Wide Area Network (LPWAN) net-\nworking protocol based on the RF LoRa modulation\
    \ technology operating, in this case, at \n868 MHz. This technology was developed\
    \ in 2014 by the French start-up company Cycleo, \nand today it is managed by\
    \ Semtech [31]. It is based on a Chirp Spread Spectrum (CSS) \nmodulation technique\
    \ which encodes information using frequency chirps having a linear \nFigure 2.\
    \ Private communication network based on a private LoRaWAN network to transmit\
    \ data\nfrom the sensors to scientists.\nA star network is built with a gateway\
    \ at the center, which receives the data frame\nfrom nodes scattered around the\
    \ site. The communication between the nodes and the\ngateway is performed using\
    \ LoRaWAN, a Low Power Wide Area Network (LPWAN)\nnetworking protocol based on\
    \ the RF LoRa modulation technology operating, in this case,\nat 868 MHz. This\
    \ technology was developed in 2014 by the French start-up company\nCycleo, and\
    \ today it is managed by Semtech [31]. It is based on a Chirp Spread Spectrum\n\
    (CSS) modulation technique which encodes information using frequency chirps having\
    \ a\nlinear variation of frequency over time. This technology allows communication\
    \ over long\ndistances (several kilometers) [32] at low power (maximum effective\
    \ isotropic radiated\nSensors 2023, 23, 2896\n4 of 24\npower of 40 mW in Europe)\
    \ [33] but with a limited communication rate (50 kbps max.) [34].\nThe gateway\
    \ transmits the data to a server via the Internet network, providing a bridge\n\
    between the nodes (connected to the LoRaWAN network) and the server (connected\
    \ to the\nInternet network).\n2.2. Node SoLo (Sensors Open Lora Node)\n2.2.1.\
    \ General Presentation of the Node\nDue to the large variety of sites addressed\
    \ by the present project and envisaged by\nfuture projects, as well as the number\
    \ of different sensors deployed in the environmental\nsites, a generic LoRaWAN\
    \ end node, named SoLo, has been developed. This node has\nbeen designed to allow\
    \ data reading from a large variety of associated sensors, and it\ncan be conﬁgured\
    \ at the hardware and ﬁrmware levels to be adapted to the speciﬁc\nneeds of measurements,\
    \ autonomy, data processing, and data transmission. The hardware\narchitecture\
    \ of this node is given in Figure 3.\nSensors 2023, 23, x FOR PEER REVIEW \n4\
    \ of 25 \n \n \nvariation of frequency over time. This technology allows communication\
    \ over long dis-\ntances (several kilometers) [32] at low power (maximum effective\
    \ isotropic radiated \npower of 40 mW in Europe) [33] but with a limited communication\
    \ rate (50 kbps max.) \n[34]. The gateway transmits the data to a server via the\
    \ Internet network, providing a \nbridge between the nodes (connected to the LoRaWAN\
    \ network) and the server (con-\nnected to the Internet network). \n2.2. Node\
    \ SoLo (Sensors Open Lora Node) \n2.2.1. General Presentation of the Node \nDue\
    \ to the large variety of sites addressed by the present project and envisaged\
    \ by \nfuture projects, as well as the number of different sensors deployed in\
    \ the environmental \nsites, a generic LoRaWAN end node, named SoLo, has been\
    \ developed. This node has \nbeen designed to allow data reading from a large\
    \ variety of associated sensors, and it can \nbe configured at the hardware and\
    \ firmware levels to be adapted to the specific needs of \nmeasurements, autonomy,\
    \ data processing, and data transmission. The hardware archi-\ntecture of this\
    \ node is given in Figure 3. \n \nFigure 3. SoLo node hardware architecture built\
    \ around an STM32 microcontroller. \nThe SoLo node is built around an STM32 microcontroller\
    \ [35], which controls all the \noperations thanks to embedded firmware developed\
    \ in C and C++ languages. Each node \nhas an internal SD memory to store sensor\
    \ data, the history of the actions of the node (log \nfile), and the configuration\
    \ file. This configuration file, which is read by the microcontrol-\nler at start-up,\
    \ is defined by the user and lists the configuration parameters of the node. A\
    \ \nLoRa RF module is implemented on the electronic board to send data through\
    \ the private \nLoRaWAN network. A GPS module has also been added to localize\
    \ the sensor and to \ndeliver a timing reference to the system. The power supply\
    \ is delivered by a 3.6 V/9000 \nmAh battery cell managed by a charge controller\
    \ circuit. \nThe SoLo node also integrates a small electronic card on which several\
    \ sensors are \nimplemented. These internal sensors can be activated or not. They\
    \ measure temperature, \nair humidity, atmospheric pressure, luminosity, and acceleration.\
    \  \nSeveral protocols of communication are implemented to communicate with external\
    \ \nsensors: UART, SPI, SDI-12, I2C, analog and digital IO. These protocols correspond\
    \ to a \nlarge variety of interfaces used by sensors. A slot implemented on the\
    \ main electronic \nboard allows the external sensors to be connected to the suitable\
    \ input/output of the mi-\ncrocontroller. \nThe electronic boards and the battery\
    \ cell are protected by an IP67 package/box (151 \ncm × 125 cm × 60 cm). On the\
    \ external sides of the box, four M12 connectors allowing the \ninterfacing of\
    \ several sensors, a reset button, an SMA connector for the LoRa antenna, and\
    \ \na USB waterproof connector to interface a PC with the node are present. All\
    \ these external \nconnectors allow operations in the fields without needing to\
    \ open the node (see Figure 4). \nFigure 3. SoLo node hardware architecture built\
    \ around an STM32 microcontroller.\nThe SoLo node is built around an STM32 microcontroller\
    \ [35], which controls all\nthe operations thanks to embedded ﬁrmware developed\
    \ in C and C++ languages. Each\nnode has an internal SD memory to store sensor\
    \ data, the history of the actions of the\nnode (log ﬁle), and the conﬁguration\
    \ ﬁle. This conﬁguration ﬁle, which is read by the\nmicrocontroller at start-up,\
    \ is deﬁned by the user and lists the conﬁguration parameters\nof the node. A\
    \ LoRa RF module is implemented on the electronic board to send data\nthrough\
    \ the private LoRaWAN network. A GPS module has also been added to localize\n\
    the sensor and to deliver a timing reference to the system. The power supply is\
    \ delivered\nby a 3.6 V/9000 mAh battery cell managed by a charge controller circuit.\n\
    The SoLo node also integrates a small electronic card on which several sensors\
    \ are\nimplemented. These internal sensors can be activated or not. They measure\
    \ temperature,\nair humidity, atmospheric pressure, luminosity, and acceleration.\n\
    Several protocols of communication are implemented to communicate with exter-\n\
    nal sensors: UART, SPI, SDI-12, I2C, analog and digital IO. These protocols correspond\n\
    to a large variety of interfaces used by sensors. A slot implemented on the main\
    \ elec-\ntronic board allows the external sensors to be connected to the suitable\
    \ input/output of\nthe microcontroller.\nThe electronic boards and the battery\
    \ cell are protected by an IP67 package/box\n(151 cm × 125 cm × 60 cm). On the\
    \ external sides of the box, four M12 connectors allowing\nthe interfacing of\
    \ several sensors, a reset button, an SMA connector for the LoRa antenna,\nand\
    \ a USB waterproof connector to interface a PC with the node are present. All\
    \ these\nexternal connectors allow operations in the ﬁelds without needing to\
    \ open the node (see\nFigure 4).\nSensors 2023, 23, 2896\n5 of 24\nSensors 2023,\
    \ 23, x FOR PEER REVIEW \n5 of 25 \n \n \n \n \n(a) \n(b) \nFigure 4. Electronic\
    \ features of the SoLo node. (a) Electronic boards and batteries inside the box\
    \ of \nthe SoLo node. (b) Synoptic of the SoLo node I/O interface. \nA main feature\
    \ of the developed system is the possibility to easily configure its oper-\nations\
    \ through a text file written on the SD card (“the configuration file” cited above).\
    \ A \nlist of the main parameters currently available is given in Table 1. Still,\
    \ new ones can be \nadded by modifying the firmware depending on the needs (new\
    \ sensors, embedded data \nprocessing, new transmission strategy, etc.). \nTable\
    \ 1. Parameters to be defined in the configuration file. \nGeneral configuration\
    \ \nExperimentation name  \nNode reference  \nLog file information level \nDebug\
    \ level, etc. \nSensors configuration \nDeclaration of the sensors interfaced\
    \ to the node (internal and external \nsensor)  \nConfiguration of each sensor:\
    \ type, measurement period, alarms, etc. \nNetwork configuration \nLoRaWAN parameters\
    \  \nLoRa radio parameters settings (Data Rate) \nTransmission period  \nTime\
    \ synchronization \nGPS or manual \nThe energy autonomy of the node is a key issue\
    \ in guaranteeing function for several \nmonths (ideally one year) without any\
    \ human intervention. This autonomy depends \nmainly on the periodicity of the\
    \ activation of the GPS module (mainly to synchronize the \nclock), the reading\
    \ period of the sensors, and the delay between the LoRa transmissions. \nThe SoLo\
    \ node can thus be tuned to fit the supported application’s requirements accu-\n\
    rately. It was validated on our sites: the nodes are still working in different\
    \ places. \n2.2.2. Firmware Presentation \nThe block diagram of the architecture\
    \ of the firmware implemented inside the node \nSoLo is given in Figure 5. Drivers\
    \ allow reading the sensors whose data are both written \nin a CSV file on the\
    \ SD card and in a buffer to temporarily store the data ready to send. \nBefore\
    \ their transmission, the data are encoded and encrypted inside a single LoRaWAN\
    \ \nframe with a payload limited by the Data Rate (DR) value selected (51 bytes\
    \ with DR = 0 \nup to 222 Bytes with DR = 7). \nFigure 4. Electronic features\
    \ of the SoLo node. (a) Electronic boards and batteries inside the box of\nthe\
    \ SoLo node. (b) Synoptic of the SoLo node I/O interface.\nA main feature of the\
    \ developed system is the possibility to easily conﬁgure its\noperations through\
    \ a text ﬁle written on the SD card (“the conﬁguration ﬁle” cited above).\nA list\
    \ of the main parameters currently available is given in Table 1. Still, new ones\
    \ can be\nadded by modifying the ﬁrmware depending on the needs (new sensors,\
    \ embedded data\nprocessing, new transmission strategy, etc.).\nTable 1. Parameters\
    \ to be deﬁned in the conﬁguration ﬁle.\nGeneral conﬁguration\nExperimentation\
    \ name\nNode reference\nLog ﬁle information level\nDebug level, etc.\nSensors\
    \ conﬁguration\nDeclaration of the sensors interfaced to the node (internal and\n\
    external sensor)\nConﬁguration of each sensor: type, measurement period, alarms,\
    \ etc.\nNetwork conﬁguration\nLoRaWAN parameters\nLoRa radio parameters settings\
    \ (Data Rate)\nTransmission period\nTime synchronization\nGPS or manual\nThe energy\
    \ autonomy of the node is a key issue in guaranteeing function for several\nmonths\
    \ (ideally one year) without any human intervention. This autonomy depends mainly\n\
    on the periodicity of the activation of the GPS module (mainly to synchronize\
    \ the clock),\nthe reading period of the sensors, and the delay between the LoRa\
    \ transmissions. The SoLo\nnode can thus be tuned to ﬁt the supported application’s\
    \ requirements accurately. It was\nvalidated on our sites: the nodes are still\
    \ working in different places.\n2.2.2. Firmware Presentation\nThe block diagram\
    \ of the architecture of the ﬁrmware implemented inside the node\nSoLo is given\
    \ in Figure 5. Drivers allow reading the sensors whose data are both written in\n\
    a CSV ﬁle on the SD card and in a buffer to temporarily store the data ready to\
    \ send. Before\ntheir transmission, the data are encoded and encrypted inside\
    \ a single LoRaWAN frame\nwith a payload limited by the Data Rate (DR) value selected\
    \ (51 bytes with DR = 0 up to\n222 Bytes with DR = 7).\nSensors 2023, 23, 2896\n\
    6 of 24\nSensors 2023, 23, x FOR PEER REVIEW \n6 of 25 \n \n \n \nFigure 5. Architecture\
    \ of the firmware implemented in the SoLo node: from sensor data reading to \n\
    LoRaWAN transmission. \nWhen the node initiates a LoRaWAN communication, an acknowledgment\
    \ is re-\nturned by the server if it accepts the data to be sent. If the node\
    \ does not receive this ac-\nknowledgment, it does not try again but stops communication\
    \ until the next scheduled \ntransmission time. Then, the previous data will be\
    \ added to the new one within the limit \nof the payload. This mode of transmission\
    \ saves energy when the conditions for the LoRa \ncommunication are not optimal.\
    \ Still, it requires space in the payload to accumulate data \nin a single LoRaWAN\
    \ frame. \n2.3. Data Workflow \nThe data workflow infrastructure is composed of\
    \ two main software modules: (1) the \nNetwork Management Module (NMM) and (2)\
    \ the Data Management Module (DMM). \nThe NMM focuses on LoRaWAN communication\
    \ and architecture. LoRaWAN is one of \nthe LPWAN technologies widely studied\
    \ currently [31,36,37] with a MAC (Medium Ac-\ncess Control) layer protocol based\
    \ on the LoRa (Long Range) physical layer. The NMM is \nbuilt on a LoRaWAN stack\
    \ such as ChirpStack [38] or The Things Stack [39]. According to \nthis stack,\
    \ a LoRaWAN gateway is equipped with software called the “packet forwarder.” \n\
    The role of this software is to automatically forward all the received messages\
    \ to the \nserver. In basic configuration mode, the packet forwarder of a gateway\
    \ accepts all the \nLoRaWAN frames, even those which are not related to its private\
    \ network. The filter-\ning/selection of the frames is realized in the higher-level\
    \ software components of the Lo-\nRaWAN stack. In the case of the ChirpStack stack,\
    \ these components are the “Gateway \nBridge”, the “Network Server”, and the “Application\
    \ Server”. These tools are responsible \nfor selecting only the frames received\
    \ from the accepted nodes. At the level of the “Appli-\ncation Server,” different\
    \ Web interfaces are available, allowing, for example, the monitor-\ning of the\
    \ communication infrastructure (ex: the availability of the gateways) and the\
    \ reg-\nistration of authorized nodes. A single gateway can cover a wide area\
    \ thanks to the per-\nformance of the LoRa radio modulation, but in large or very\
    \ hilly fields, it is possible to \ndeploy several gateways in a monitoring site\
    \ to have better communication coverage. All \nthese gateways can be associated\
    \ with the same network server. In this network topology, \nno modification is\
    \ required at the level of a gateway when a node is added or removed. \nThis flexibility\
    \ is a major asset for agricultural or environmental applications where \nchanges\
    \ to the network devices can frequently happen. Thus, nodes with different sensors\
    \ \ncan be added or removed depending on the required monitored parameters. Outdoor\
    \ \nFigure 5. Architecture of the ﬁrmware implemented in the SoLo node: from sensor\
    \ data reading to\nLoRaWAN transmission.\nWhen the node initiates a LoRaWAN communication,\
    \ an acknowledgment is returned\nby the server if it accepts the data to be sent.\
    \ If the node does not receive this acknowledg-\nment, it does not try again but\
    \ stops communication until the next scheduled transmission\ntime. Then, the previous\
    \ data will be added to the new one within the limit of the payload.\nThis mode\
    \ of transmission saves energy when the conditions for the LoRa communica-\ntion\
    \ are not optimal. Still, it requires space in the payload to accumulate data\
    \ in a single\nLoRaWAN frame.\n2.3. Data Workﬂow\nThe data workﬂow infrastructure\
    \ is composed of two main software modules: (1) the\nNetwork Management Module\
    \ (NMM) and (2) the Data Management Module (DMM). The\nNMM focuses on LoRaWAN\
    \ communication and architecture. LoRaWAN is one of the\nLPWAN technologies widely\
    \ studied currently [31,36,37] with a MAC (Medium Access\nControl) layer protocol\
    \ based on the LoRa (Long Range) physical layer. The NMM is built on\na LoRaWAN\
    \ stack such as ChirpStack [38] or The Things Stack [39]. According to this stack,\n\
    a LoRaWAN gateway is equipped with software called the “packet forwarder.” The\
    \ role of\nthis software is to automatically forward all the received messages\
    \ to the server. In basic\nconﬁguration mode, the packet forwarder of a gateway\
    \ accepts all the LoRaWAN frames,\neven those which are not related to its private\
    \ network. The ﬁltering/selection of the frames\nis realized in the higher-level\
    \ software components of the LoRaWAN stack. In the case of the\nChirpStack stack,\
    \ these components are the “Gateway Bridge”, the “Network Server”, and\nthe “Application\
    \ Server”. These tools are responsible for selecting only the frames received\n\
    from the accepted nodes. At the level of the “Application Server,” different Web\
    \ interfaces\nare available, allowing, for example, the monitoring of the communication\
    \ infrastructure\n(ex: the availability of the gateways) and the registration\
    \ of authorized nodes. A single\ngateway can cover a wide area thanks to the performance\
    \ of the LoRa radio modulation,\nbut in large or very hilly ﬁelds, it is possible\
    \ to deploy several gateways in a monitoring\nsite to have better communication\
    \ coverage. All these gateways can be associated with the\nsame network server.\
    \ In this network topology, no modiﬁcation is required at the level of a\ngateway\
    \ when a node is added or removed. This ﬂexibility is a major asset for agricultural\n\
    or environmental applications where changes to the network devices can frequently\
    \ happen.\nThus, nodes with different sensors can be added or removed depending\
    \ on the required\nmonitored parameters. Outdoor nodes are also submitted to extreme\
    \ conditions, which\nincrease the risks of failures and require “fast” node replacements.\n\
    Sensors 2023, 23, 2896\n7 of 24\nConcerning the data, this NMM converts LoRaWAN\
    \ frames of SoLo nodes into ﬁles\ngenerally in JSON (JavaScript Object Notation)\
    \ format. The generated data ﬁles are then\nprocessed by the DMM of the data center\
    \ infrastructure. This DMM has multiple func-\ntionalities, and it can be called\
    \ “hybrid” because it combines tools from different software\nfamilies. For example,\
    \ it integrates database management systems (DBMS) in the NoSQL\nmodel (storing\
    \ JSON and using corresponding SQL (Structured Query Language) queries)\nand more\
    \ recent search engine technologies. As a DBMS, we can mention PostgreSQL [17]\n\
    with PostGIS extension and, as a search engine, Elasticsearch [18].\nOther functionalities\
    \ are related to data visualization with the availability of tools such\nas Grafana\
    \ [40] and Kibana [41]. Data can also be processed as (input and output) streams\n\
    using, for example, MQTT (Message Queuing Telemetry Transport) protocol [42].\
    \ Data can\nalso be exported in new JSON format, CSV, and others. Depending on\
    \ the data connectors\nand converters used, the possibilities are huge.\nIn order\
    \ to achieve real-time data visualization and to address the most various cases\n\
    of possible use, a near-real-time multi-pipeline architecture has been designed\
    \ in a generic\nway. This architecture is then able to process data from various\
    \ sensor deployments. Once\nthe data JSON ﬁle is created or updated with a new\
    \ measure, a lightweight shipper called\nFilebeat [43] forwards data to a data\
    \ collector called Logstash [43]. This tool acts as a data\nstreaming pipeline,\
    \ that is, an Input-Filter-Output process that can ingest a multitude of\ndata\
    \ sources (Input), clean and enrich each event with some relevant information\
    \ (Filter),\nand route data into a data lake (See Figure 6). Filebeat is a robust\
    \ tool with stopping\nand resuming data transmission capabilities in case of a\
    \ network outage. It can also slow\ndown the transmission if there is an ingestion\
    \ issue with Logstash. For its part, Logstash\nhas data resiliency ability using\
    \ persistent queues. This mechanism protects against data\nloss by storing each\
    \ line of received data in an internal queue on disk. Altogether, these\ntools\
    \ enable reliable and near real-time data management. Interestingly, it provides\
    \ a data\nvisualization allowing, for example, to immediately check the installation\
    \ of a sensor or a\nnode in situ.\nSensors 2023, 23, x FOR PEER REVIEW \n7 of\
    \ 25 \n \n \nnodes are also submitted to extreme conditions, which increase the\
    \ risks of failures and \nrequire “fast” node replacements. \nConcerning the data,\
    \ this NMM converts LoRaWAN frames of SoLo nodes into files \ngenerally in JSON\
    \ (JavaScript Object Notation) format. The generated data files are then \nprocessed\
    \ by the DMM of the data center infrastructure. This DMM has multiple func-\n\
    tionalities, and it can be called “hybrid” because it combines tools from different\
    \ software \nfamilies. For example, it integrates database management systems\
    \ (DBMS) in the NoSQL \nmodel (storing JSON and using corresponding SQL (Structured\
    \ Query Language) queries) \nand more recent search engine technologies. As a\
    \ DBMS, we can mention PostgreSQL [17] \nwith PostGIS extension and, as a search\
    \ engine, Elasticsearch [18]. \nOther functionalities are related to data visualization\
    \ with the availability of tools \nsuch as Grafana [40] and Kibana [41]. Data\
    \ can also be processed as (input and output) \nstreams using, for example, MQTT\
    \ (Message Queuing Telemetry Transport) protocol [42]. \nData can also be exported\
    \ in new JSON format, CSV, and others. Depending on the data \nconnectors and\
    \ converters used, the possibilities are huge. \nIn order to achieve real-time\
    \ data visualization and to address the most various cases \nof possible use,\
    \ a near-real-time multi-pipeline architecture has been designed in a generic\
    \ \nway. This architecture is then able to process data from various sensor deployments.\
    \ Once \nthe data JSON file is created or updated with a new measure, a lightweight\
    \ shipper called \nFilebeat [43] forwards data to a data collector called Logstash\
    \ [43]. This tool acts as a data \nstreaming pipeline, that is, an Input-Filter-Output\
    \ process that can ingest a multitude of \ndata sources (Input), clean and enrich\
    \ each event with some relevant information (Filter), \nand route data into a\
    \ data lake (See Figure 6). Filebeat is a robust tool with stopping and \nresuming\
    \ data transmission capabilities in case of a network outage. It can also slow\
    \ down \nthe transmission if there is an ingestion issue with Logstash. For its\
    \ part, Logstash has \ndata resiliency ability using persistent queues. This mechanism\
    \ protects against data loss \nby storing each line of received data in an internal\
    \ queue on disk. Altogether, these tools \nenable reliable and near real-time\
    \ data management. Interestingly, it provides a data vis-\nualization allowing,\
    \ for example, to immediately check the installation of a sensor or a \nnode in\
    \ situ. \n \nFigure 6. Input-Filter-Output process (from [44]). \nThe routing\
    \ of each measurement to its right index location is done using an index \nnaming\
    \ convention in which the experiment name (present in the node file configuration\
    \ \nas mentioned in Table 1), the node name, and the measurement date is used.\
    \ This way, \nvariables can be easily isolated and queried to generate time series.\
    \ Although the ingested \ndata format is JSON in the context of a SoLo node, the\
    \ pipeline can also handle structured \nsources (such as databases) or semi-structured\
    \ sources (such as flat CSV, text, and JSON \nfiles). More information about data\
    \ integration can be found in our previous article [44]. \nIn order to analyze\
    \ the performance of the networks, we studied the data workflow, \nthe battery\
    \ consumption, the rate of data loss during data transmission and the received\
    \ \nsignal strength over a given period. These metrics are those classically used\
    \ in the litera-\nture to qualify wireless sensor networks [45,46]. \n \n \nFigure\
    \ 6. Input-Filter-Output process (from [44]).\nThe routing of each measurement\
    \ to its right index location is done using an index\nnaming convention in which\
    \ the experiment name (present in the node ﬁle conﬁguration\nas mentioned in Table\
    \ 1), the node name, and the measurement date is used. This way,\nvariables can\
    \ be easily isolated and queried to generate time series. Although the ingested\n\
    data format is JSON in the context of a SoLo node, the pipeline can also handle\
    \ structured\nsources (such as databases) or semi-structured sources (such as\
    \ ﬂat CSV, text, and JSON\nﬁles). More information about data integration can\
    \ be found in our previous article [44].\nIn order to analyze the performance\
    \ of the networks, we studied the data workﬂow,\nthe battery consumption, the\
    \ rate of data loss during data transmission and the received\nsignal strength\
    \ over a given period. These metrics are those classically used in the literature\n\
    to qualify wireless sensor networks [45,46].\n2.4. Monitoring Sites\nFour experimental\
    \ sites are considered in this work. They are located in the Auvergne-\nRhone-Alpes\
    \ French region. All the scientiﬁc topics addressed through the instrumentation\n\
    of these sites are related to water issues:\nSensors 2023, 23, 2896\n8 of 24\n\
    •\nThe Aydat site is a mountain lake subject to the impacts of agricultural practices\
    \ and\nrecurrent cyanobacterial proliferation;\n•\nThe Allier River site is a\
    \ river channel connected to an oxbow lake whose hydroeco-\nlogical responses\
    \ to climate change must be understood;\n•\nThe Rofﬁn site is a former uranium\
    \ mine that can have a long-term impact on a\nwatercourse and its vegetation;\n\
    •\nThe Montoldre site is a farm where water is an input to be optimized.\nThe\
    \ choice of the location of the sensors on the sites is obviously a function of\
    \ the\nphenomena that we wish to observe. Still, this choice is also informed\
    \ by the good knowl-\nedge of the hydrological functioning of the sites resulting\
    \ from the year of observation. For\nthe lake, we observe the lake alimentation\
    \ and the parameters of the water column in the\nlake to understand the evolution\
    \ of the cyanobacteria population. For the river, we want\nto follow the hydrological\
    \ and ﬂood evolution and the impact on the biodiversity, more\nparticularly on\
    \ the development of trees, so we use piezometers and dendrometers. For\nthe Rofﬁn\
    \ site, the idea is to quantify the potential impact of uranium rejects on water\
    \ and\nvegetation. Finally, for the last site, we use soil moisture sensors and\
    \ weather stations to\nmonitor crop development.\n2.4.1. Aydat Lake\n•\nSite description\n\
    The Aydat lake is located in the French Massif Central (45◦39′48.35′′ N; 2◦59′11.79′′\
    \ E)\nat 837 m above sea level. This natural lake was created by the damming of\
    \ the Veyre\nriver by a basaltic lava ﬂow of 8551 ± 400 cal yr BP ago. It is a\
    \ small dimictic lake with\na total area of 60 hectares, a maximum depth of 15\
    \ m, and a small catchment area of\n16,800 hectares. It is a eutrophic lake with\
    \ recurrent cyanobacterial proliferation [47], espe-\ncially of Dolichospermum\
    \ macrosporum. This lake belongs to the OLA network (Observatory\nof LAkes), which\
    \ largely contributes to research in lacustrine ecosystems in France.\n•\nScientiﬁc\
    \ objectives\nSince the 20th century, anthropogenic activities have constantly\
    \ increased, leading to a\ndeterioration of water quality resources. The accumulation\
    \ of nutrients, mostly coming\nfrom anthropic activities, led to a massive cyanobacteria\
    \ bloom, which impoverished the\necosystem. The proliferation of cyanobacteria\
    \ has a direct impact on ecosystem functioning\nand is also dangerous for human\
    \ and animal health due to their capacity to produce\ncyanotoxins [48]. The latter\
    \ frequently leads to restrictions on water activities or ﬁshing\nactivities.\
    \ These last years, the public bathing zone of the Aydat lake was closed for\n\
    several weeks due to toxic cyanobacteria proliferation, which has negatively impacted\
    \ the\nlocal economy.\nIn order to reduce the cyanobacterial proliferation and\
    \ restore the ecological functions\nof the lake, a wetland was created in 2012\
    \ [49]. As this natural solution needs time to be\nefﬁcient, cyanobacteria are\
    \ still present, and research is still necessary to better understand\nthe dynamics\
    \ of cyanobacteria and their potential cyanotoxins production. More globally,\n\
    the objective of this research is to get an overall understanding of the lake’s\
    \ hydroecological\nprocesses in order to better forecast its responses to current\
    \ and future changes in natural\nconditions and human-induced pressures (including\
    \ land use changes in its watershed and\nalteration of the water temperature conditions\
    \ due to climate change).\n•\nSensors\nThree types of sensors are deployed on\
    \ this site (see Figure 7):\n•\n1–3: Aquatroll 200 data logger. This water level\
    \ and water temperature probe is\ninstalled in the Veyre river, upstream and downstream\
    \ of the lake. The water level\nmeasurement is based on a piezoresistive sensor,\
    \ whereas the water temperature and\nthe speciﬁc conductivity, the salinity, and\
    \ the Total Dissolved Solids (TDS) are moni-\nSensors 2023, 23, 2896\n9 of 24\n\
    tored using a balanced 4-electrode cell. The water discharge series can be computed\n\
    using a rating curve calibrated with a gauging protocol.\n•\n4: Hydrolab HL7 multiparameter\
    \ sonde. The multiparameter sonde comprises eight\nsensors, including an electrical\
    \ conductivity sensor, a Hach LDO® Dissolved Oxygen\nSensor, a temperature sensor,\
    \ a turbidity sensor, chlorophyll-a sensor, a blue and\ngreen algae sensor, rhodamine\
    \ sensor, and ﬁnally a pressure sensor for water depth\nmeasurement. The Hach\
    \ LDO® Dissolved Oxygen Sensor provides a measure with\nLuminescent Dissolved\
    \ Oxygen (LDO) technology. The Hydrolab conductivity sensor\nuses four graphite\
    \ electrodes in an open-cell design to provide highly accurate and\nreliable data.\
    \ The sensor measures speciﬁc conductance, salinity, total dissolved\nsolids (TDS),\
    \ and resistivity. The conductivity sensor uses four graphite electrodes\ndesigned\
    \ to be compliant with the ISO 7027 Turbidity Measurement Standard. The\nHydrolab\
    \ temperature sensor is a variable resistance thermistor (316 stainless steel\
    \ for\ncorrosion resistance). Hydrolab sondes are available with integrated pressure\
    \ sensors\nthat provide depth measurements. Data acquisition of each parameter\
    \ takes place\nevery hour.\n•\n5: Temperature data logger. The HOBO data loggers\
    \ record temperature with the\nhigh-frequency acquisition (i.e., 5 min), located\
    \ in the middle point of the Aydat lake,\nevery 20 cm from the water surface to\
    \ 3 m deep. The upstream river temperature\n(Veyre) is also monitored with eight\
    \ HOBO data loggers regularly distributed (every\n1 km) from the headwater to\
    \ the river mouth.\nSensors 2023, 23, x FOR PEER REVIEW \n9 of 25 \n \n \n• \n\
    1–3: Aquatroll 200 data logger. This water level and water temperature probe is\
    \ in-\nstalled in the Veyre river, upstream and downstream of the lake. The water\
    \ level \nmeasurement is based on a piezoresistive sensor, whereas the water temperature\
    \ and \nthe specific conductivity, the salinity, and the Total Dissolved Solids\
    \ (TDS) are mon-\nitored using a balanced 4-electrode cell. The water discharge\
    \ series can be computed \nusing a rating curve calibrated with a gauging protocol.\
    \  \n• \n4: Hydrolab HL7 multiparameter sonde. The multiparameter sonde comprises\
    \ eight \nsensors, including an electrical conductivity sensor, a Hach LDO® Dissolved\
    \ Oxygen \nSensor, a temperature sensor, a turbidity sensor, chlorophyll-a sensor,\
    \ a blue and \ngreen algae sensor, rhodamine sensor, and finally a pressure sensor\
    \ for water depth \nmeasurement. The Hach LDO® Dissolved Oxygen Sensor provides\
    \ a measure with \nLuminescent Dissolved Oxygen (LDO) technology. The Hydrolab\
    \ conductivity sen-\nsor uses four graphite electrodes in an open-cell design\
    \ to provide highly accurate \nand reliable data. The sensor measures specific\
    \ conductance, salinity, total dissolved \nsolids (TDS), and resistivity. The\
    \ conductivity sensor uses four graphite electrodes \ndesigned to be compliant\
    \ with the ISO 7027 Turbidity Measurement Standard. The \nHydrolab temperature\
    \ sensor is a variable resistance thermistor (316 stainless steel \nfor corrosion\
    \ resistance). Hydrolab sondes are available with integrated pressure sen-\nsors\
    \ that provide depth measurements. Data acquisition of each parameter takes \n\
    place every hour. \n• \n5: Temperature data logger. The HOBO data loggers record\
    \ temperature with the \nhigh-frequency acquisition (i.e., 5 min), located in\
    \ the middle point of the Aydat lake, \nevery 20 cm from the water surface to\
    \ 3 m deep. The upstream river temperature \n(Veyre) is also monitored with eight\
    \ HOBO data loggers regularly distributed (every \n1 km) from the headwater to\
    \ the river mouth. \n \nFigure 7. Location of sensors on Aydat site (1, 2, and\
    \ 3: Aquatroll 200 data logger, 4: Hydrolab HL7) \n(Image ©2023 Google, Images\
    \ ©2023 CNES/Airbus). \n2.4.2. Allier River \n• \nSite description \nThe Allier\
    \ River (France) is one of the last remaining European unregulated rivers \nwith\
    \ highly dynamic meandering sections. It flows 421 km north from its source located\
    \ \nFigure 7. Location of sensors on Aydat site (1, 2, and 3: Aquatroll 200 data\
    \ logger, 4: Hydrolab HL7)\n(Image ©2023 Google, Images ©2023 CNES/Airbus).\n\
    2.4.2. Allier River\n•\nSite description\nThe Allier River (France) is one of\
    \ the last remaining European unregulated rivers\nwith highly dynamic meandering\
    \ sections. It ﬂows 421 km north from its source located at\n1485 m a.s.l. in\
    \ the south part of the Massif Central (Lozère, France) to its conﬂuence with\n\
    the Loire River at the Bec d’Allier. The hydrological and ﬂood regime of the Allier\
    \ River is\nconsidered close to natural or unregulated even though two dams (Poutès\
    \ and Naussac)\nlocated in the upper basin partially affect the discharge [50].\
    \ Therefore, the overall Allier\nSensors 2023, 23, 2896\n10 of 24\nRiver represents\
    \ an opportunity to investigate alluvial and riparian vegetation processes\nadjusting\
    \ to climate and catchment changes. More precisely, the study site is located\n\
    around the Auzon Oxbow, one of the ﬂuvial annexes of the Allier River in the upper\
    \ river\nbasin [51,52]. Oxbows are speciﬁc wetlands in the vicinity of river systems\
    \ that play a\ncrucial socio-economic and environmental role. Their ecosystem\
    \ services are functionally\nefﬁcient in regard to hydrological and ecological\
    \ concerns: ﬂood prevention and low\nﬂow mitigation, retention of excess nutrients,\
    \ and refuge habitats for ﬂora and fauna.\nMoreover, long-term monitoring of hydraulic\
    \ annexes may then be considered as a relevant\nand synthetic proxy of the evolution\
    \ of a wider river section (water and habitat quality,\nsediment connectivity,\
    \ environmental resources, and changes in land use).\n•\nScientiﬁc objectives\n\
    Recent climate change has caused signiﬁcant changes in the Allier River hydrology.\n\
    More speciﬁcally, an analysis of discharge records shows an increase in both severity\
    \ and\nduration of low ﬂow during the summer period and a decline by 10% of higher\
    \ peak\nﬂows [50,53–56]. In addition, a long history of gravel mining activity\
    \ within the Allier River\nled to a sedimentary deﬁcit and a mean channel incision\
    \ of the riverbed ranging between\n1 and 1.5 m. Consequently, the altimetric level\
    \ of the alluvial water table connected to the\nriver channel may also have lowered,\
    \ threatening the water availability for the riparian\nforest over the ﬂoodplain.\n\
    In this speciﬁc context, we designed a suitable monitoring system for the Auzon\n\
    Oxbow site (see Figure 8) in order to evaluate the effects of droughts and severe\
    \ low ﬂow on\nthe riparian forest growth, with a special focus on three plots\
    \ of black poplars populations\nwith contrasted sources of water uptake (groundwater,\
    \ oxbow lake, river channel).\nSensors 2023, 23, x FOR PEER REVIEW \n10 of 25\
    \ \n \n \nat 1485 m a.s.l. in the south part of the Massif Central (Lozère, France)\
    \ to its confluence \nwith the Loire River at the Bec d’Allier. The hydrological\
    \ and flood regime of the Allier \nRiver is considered close to natural or unregulated\
    \ even though two dams (Poutès and \nNaussac) located in the upper basin partially\
    \ affect the discharge [50]. Therefore, the over-\nall Allier River represents\
    \ an opportunity to investigate alluvial and riparian vegetation \nprocesses adjusting\
    \ to climate and catchment changes. More precisely, the study site is \nlocated\
    \ around the Auzon Oxbow, one of the fluvial annexes of the Allier River in the\
    \ \nupper river basin [51,52]. Oxbows are specific wetlands in the vicinity of\
    \ river systems \nthat play a crucial socio-economic and environmental role. Their\
    \ ecosystem services are \nfunctionally efficient in regard to hydrological and\
    \ ecological concerns: flood prevention \nand low flow mitigation, retention of\
    \ excess nutrients, and refuge habitats for flora and \nfauna. Moreover, long-term\
    \ monitoring of hydraulic annexes may then be considered as \na relevant and synthetic\
    \ proxy of the evolution of a wider river section (water and habitat \nquality,\
    \ sediment connectivity, environmental resources, and changes in land use). \n\
    • \nScientific objectives \nRecent climate change has caused significant changes\
    \ in the Allier River hydrology. \nMore specifically, an analysis of discharge\
    \ records shows an increase in both severity and \nduration of low flow during\
    \ the summer period and a decline by 10% of higher peak flows \n[50,53–56]. In\
    \ addition, a long history of gravel mining activity within the Allier River led\
    \ \nto a sedimentary deficit and a mean channel incision of the riverbed ranging\
    \ between 1 \nand 1.5 m. Consequently, the altimetric level of the alluvial water\
    \ table connected to the \nriver channel may also have lowered, threatening the\
    \ water availability for the riparian \nforest over the floodplain. \nIn this\
    \ specific context, we designed a suitable monitoring system for the Auzon Ox-\n\
    bow site (see Figure 8) in order to evaluate the effects of droughts and severe\
    \ low flow on \nthe riparian forest growth, with a special focus on three plots\
    \ of black poplars populations \nwith contrasted sources of water uptake (groundwater,\
    \ oxbow lake, river channel).  \n \nFigure 8. Location of sensors on the Auzon\
    \ site (Image ©2023 Google, Images ©2023 CNES/Air-\nbus). \n• \nSensors \nThe\
    \ ConnecSens monitoring system of the Auzon Oxbow constantly records three \n\
    types of environmental measurements over the three studied plots of black poplar\
    \ popu-\nlations. (1) The water level and water temperature of each water source\
    \ (water table, \nFigure 8. Location of sensors on the Auzon site (Image ©2023\
    \ Google, Images ©2023 CNES/Airbus).\n•\nSensors\nThe ConnecSens monitoring system\
    \ of the Auzon Oxbow constantly records three\ntypes of environmental measurements\
    \ over the three studied plots of black poplar pop-\nulations. (1) The water level\
    \ and water temperature of each water source (water table,\noxbow lake, river\
    \ channel) with an Aquatroll 200 data logger; (2) the growth of three\nblack poplar\
    \ individuals per surveyed population using the PepiPiaf microdendrometric\nsensors\
    \ [57]; (3) microclimatic data for each black poplar plots as air temperature,\
    \ humidity\nand radiation through the internal sensors of the node SoLo.\nSensors\
    \ 2023, 23, 2896\n11 of 24\n2.4.3. Rofﬁn Mine\n•\nSite description\nThe former\
    \ uranium mine of Rofﬁn is located on the Gourgeat watershed in Lachaux\n(Puy\
    \ de Dôme, France). Underground mining began in 1946, and in 1948 a treatment\n\
    plant was built where the ﬁrst French industrial processes for extracting uranium\
    \ from ore\nwere tested. Several settling ponds were also created to collect the\
    \ residues from the ore\ntreatment. The absence of signiﬁcant veins, the difﬁculties\
    \ of extraction, and above all, the\ndiscovery in 1952 of the important Bois Noirs\
    \ deposit, located about ten kilometers away,\nled to the abandonment of mining\
    \ in 1956 and the closing down and dismantling of the\nplant in 1958. The concession\
    \ was given up in 1976. All in all, this ﬁrst French uranium\nmine operated for\
    \ about ten years and produced a mere 30 tons of uranium.\nThe more or less radioactive\
    \ mine waste rock was left in place, and the highly radioac-\ntive ore processing\
    \ residues (30,000 T) were abandoned in the old settling ponds. Over\nthe years,\
    \ vegetation has taken over the area without any signiﬁcant human intervention\n\
    since then, which is a unique case in France. Thus, the Rofﬁn site is an in-situ\
    \ laboratory\n(ZATU) for studying the medium- and long-term consequences of former\
    \ uranium mines\non ecosystems and the effects of low doses of radioactivity on\
    \ living beings [58].\n•\nScientiﬁc objectives\nThe objective of the instrumentation\
    \ is to collect sufﬁcient data to understand the\ntransport and transfer of radionuclides\
    \ in the different environmental compartments.\nThe two associated vectors are\
    \ air and water. For air, the parameter monitored is radon\nin order to determine\
    \ the exposure of the ecosystem to radon gas and to understand the\nexhalation\
    \ ﬂuxes from the ground. For water, the aim is to monitor the entire watershed\
    \ to\nobtain a hydrogeological model (rainfall, surface, and groundwater ﬂows)\
    \ and understand\nthe exchanges between surface and groundwater. This model will\
    \ be a major input for\nradionuclide transport simulations. The collection of\
    \ a very large number of long-term\ndata will allow us to obtain a reliable hydrogeological\
    \ model and validate the results of the\nradionuclide transport simulation tools.\n\
    •\nSensors\nThe monitoring system is based on four kinds of sensors: (a) the Aquatroll\
    \ 200 for\nelectrical conductivity, temperature, pressure, and water level; (b)\
    \ rain gauges, (c) weather\nstation; and (d) for radon gas, AERTT+©.\nThe deployment\
    \ of the sensor network on the site faces several communication difﬁ-\nculties:\
    \ the topography (canyon), the vegetation, and the distance from the GSM network\n\
    antennas that involves a distance between the wetland and the gateway of more\
    \ than 300 m\n(see Figure 9).\n2.4.4. Montoldre Farm\n•\nSite description\nThe\
    \ INRAE site of Montoldre is one of the real conditions deployment sites of the\n\
    network and data infrastructure presented in the previous sections. The Montoldre\
    \ farm is\nlocated in the department of Allier in the Auvergne-Rhône-Alpes region\
    \ at 300 m above\nsea level. The main goal of this monitoring site is to study\
    \ the water in an agricultural use\ncase. The network is based on different SoLo\
    \ nodes connected to a local gateway through\nthe LoRaWAN communication protocol.\
    \ One of the particularities of this deployment is\nusing an Ethernet connection\
    \ between the gateway and the LoRa Server instead of a mobile\ntechnology protocol\
    \ found in other sites.\n•\nScientiﬁc objectives\nIn the Montoldre monitoring\
    \ site, an experiment was conducted for months with\nthe acquisition of data related\
    \ to air and soil elements. Water is studied as the essential\nelement for the\
    \ cultivation of agricultural plants. Sensors are also used in the context of\
    \ this\nSensors 2023, 23, 2896\n12 of 24\nexperimental farm to have information\
    \ on soil conditions for machines or robots working\nin the ﬁelds. The performance\
    \ of node SoLo is also tested on this site: robustness of the\ncommunication,\
    \ autonomy, etc. (see Figure 10).\nSensors 2023, 23, x FOR PEER REVIEW \n12 of\
    \ 25 \n \n \nFigure 9. Overview of the Roffin site (Image ©2023 Google, Images\
    \ ©2023 CNES/Airbus). \n2.4.4. Montoldre Farm \n• \nSite description \nThe INRAE\
    \ site of Montoldre is one of the real conditions deployment sites of the \nnetwork\
    \ and data infrastructure presented in the previous sections. The Montoldre farm\
    \ \nis located in the department of Allier in the Auvergne-Rhône-Alpes region\
    \ at 300 m above \nsea level. The main goal of this monitoring site is to study\
    \ the water in an agricultural use \ncase. The network is based on different SoLo\
    \ nodes connected to a local gateway through \nthe LoRaWAN communication protocol.\
    \ One of the particularities of this deployment is \nusing an Ethernet connection\
    \ between the gateway and the LoRa Server instead of a mo-\nbile technology protocol\
    \ found in other sites. \n• \nScientific objectives \nIn the Montoldre monitoring\
    \ site, an experiment was conducted for months with the \nacquisition of data\
    \ related to air and soil elements. Water is studied as the essential ele-\nment\
    \ for the cultivation of agricultural plants. Sensors are also used in the context\
    \ of this \nexperimental farm to have information on soil conditions for machines\
    \ or robots working \nin the fields. The performance of node SoLo is also tested\
    \ on this site: robustness of the \ncommunication, autonomy, etc. (see Figure\
    \ 10). \nFigure 9. Overview of the Rofﬁn site (Image ©2023 Google, Images ©2023\
    \ CNES/Airbus).\nSensors 2023, 23, x FOR PEER REVIEW \n13 of 25 \n \n \nFigure\
    \ 10. Location of nodes and the gateway on Montoldre site 3.4.3. Sensors (Image\
    \ ©2023 Google, \nImages ©2023 CNES/Airbus). \nAir temperature, humidity, and\
    \ luminosity measurements are collected using the \nembedded sensors of the SoLo\
    \ nodes. For the soil temperature and moisture, SoLo nodes \nare equipped with\
    \ Truebner SMT-100 sensors [59]; see Figure 11. With these low-cost soil \nsensors,\
    \ the goal is to get soil dynamics more than accurate measurements. \nNode operating\
    \ indicators are also monitored, such as battery level, RSSI (Receive \nSignal\
    \ Strength Indicator), and SNR (Signal-to-Noise Ratio) for quality of transmission.\
    \ \nFor this experiment, SoLo nodes are located at different distances to test\
    \ the impact of a \nLoRaWAN star topology network with heterogeneous ranges. Indeed,\
    \ some nodes are \nlocalized at 50 m of the Montoldre LoRaWAN gateway, which is\
    \ very close if we consider \nthe LoRa capabilities. Other nodes are placed at\
    \ 500 m of the gateway. The goal is not to \nreach a maximum transmission range\
    \ but to study the possible impacts of spreading the \nnodes through different\
    \ conditions at the level of an experimental farm. \nFigure 10. Location of nodes\
    \ and the gateway on Montoldre site 3.4.3. Sensors (Image ©2023 Google,\nImages\
    \ ©2023 CNES/Airbus).\nAir temperature, humidity, and luminosity measurements\
    \ are collected using the\nembedded sensors of the SoLo nodes. For the soil temperature\
    \ and moisture, SoLo nodes\nare equipped with Truebner SMT-100 sensors [59]; see\
    \ Figure 11. With these low-cost soil\nsensors, the goal is to get soil dynamics\
    \ more than accurate measurements.\nSensors 2023, 23, 2896\n13 of 24\nLoRaWAN\
    \ star topology network with heterogeneous ranges. Indeed, so\nlocalized at 50\
    \ m of the Montoldre LoRaWAN gateway, which is very close\nthe LoRa capabilities.\
    \ Other nodes are placed at 500 m of the gateway. The\nreach a maximum transmission\
    \ range but to study the possible impacts of\nnodes through different conditions\
    \ at the level of an experimental farm. \n \nFigure 11. SoLo nodes deployed on\
    \ the Montoldre site. \n3. Results and Discussion \n3.1. Real-Time Visualization\
    \ of the Data \nFor data visualization, a dedicated interface was built for each\
    \ data-col\nwith a possible mix of dashboards, mostly graphs and data tables.\
    \ A collect\nFigure 11. SoLo nodes deployed on the Montoldre site.\nNode operating\
    \ indicators are also monitored, such as battery level, RSSI (Receive\nSignal\
    \ Strength Indicator), and SNR (Signal-to-Noise Ratio) for quality of transmission.\n\
    For this experiment, SoLo nodes are located at different distances to test the\
    \ impact of a\nLoRaWAN star topology network with heterogeneous ranges. Indeed,\
    \ some nodes are\nlocalized at 50 m of the Montoldre LoRaWAN gateway, which is\
    \ very close if we consider\nthe LoRa capabilities. Other nodes are placed at\
    \ 500 m of the gateway. The goal is not to\nreach a maximum transmission range\
    \ but to study the possible impacts of spreading the\nnodes through different\
    \ conditions at the level of an experimental farm.\n3. Results and Discussion\n\
    3.1. Real-Time Visualization of the Data\nFor data visualization, a dedicated\
    \ interface was built for each data-collecting project\nwith a possible mix of\
    \ dashboards, mostly graphs and data tables. A collecting project can\ngo from\
    \ a group of SoLo nodes in the same or in different areas of a speciﬁc monitoring\n\
    site. The following Figure 12 shows an example of the data visualization interface.\n\
    For example, this interface allows comparing measurements from different SoLo\
    \ nodes\nequipped with the same sensors. Comparison between different areas or\
    \ experimental de-\nployment conditions can be made. Here, the graphs and tables\
    \ are complementary. Graphs\nprovide a “rapid look” at the measurements and their\
    \ evolution over time. Tables allow fo-\ncusing on a given date or period with\
    \ visualization of the data values. Data visualization is\ndone by time series\
    \ generated by queries on quantities (variables). Strikingly, the simplicity\n\
    of the queries allows all users to create their own graphs. Secure access through\
    \ the use of\na personal account (a local account on the platform or the eduGAIN\
    \ personal account by\noperating OpenSAML authentication) and the https (HyperText\
    \ Transfer Protocol Secure)\nprotocol enables data isolation, i.e., providing\
    \ everyone with access only to the data they\nneed and they are allowed to access.\
    \ This is achieved with the combined use of group\nand organization with data\
    \ sources in Grafana. An interesting point is potentially creating\ndata sources\
    \ for particular events by reindexing existing data reduced to deﬁned variables,\n\
    time intervals, or material. This reindexed source can then be deleted once the\
    \ event is\ncompleted. Finally, although focusing on the real-time aspect, the\
    \ dashboards can also be\nused for more sophisticated queries, such as cross-referencing\
    \ or historical data. In this\ncase, these graphs retrieved data from sources\
    \ built upon PostgreSQL databases.\nSensors 2023, 23, 2896\n14 of 24\nSensors\
    \ 2023, 23, x FOR PEER REVIEW \n14\n \n \ngo from a group of SoLo nodes in the\
    \ same or in different areas of a specific monit\nsite. The following Figure 12\
    \ shows an example of the data visualization interface. \n \n \n \nFigure 12.\
    \ Example of data visualization interface for the Aydat site with an instantaneous\
    \ KP\nPerformance Indicator) board on the top and evolution graphs built with\
    \ Grafana on the bo\nFor example, this interface allows comparing measurements\
    \ from different \nnodes equipped with the same sensors. Comparison between different\
    \ areas or ex\nmental deployment conditions can be made. Here, the graphs and\
    \ tables are comple\ntary. Graphs provide a “rapid look” at the measurements and\
    \ their evolution over\nTables allow focusing on a given date or period with visualization\
    \ of the data values\nvisualization is done by time series generated by queries\
    \ on quantities (variables). \ningly, the simplicity of the queries allows all\
    \ users to create their own graphs. Secu\ncess through the use of a personal account\
    \ (a local account on the platform o\neduGAIN personal account by operating OpenSAML\
    \ authentication) and the https\nperText Transfer Protocol Secure) protocol enables\
    \ data isolation, i.e., providing eve\nwith access only to the data they need\
    \ and they are allowed to access. This is ach\nwith the combined use of group\
    \ and organization with data sources in Grafana. An \nesting point is potentially\
    \ creating data sources for particular events by reindexing \ning data reduced\
    \ to defined variables, time intervals, or material. This reindexed s\ncan then\
    \ be deleted once the event is completed. Finally, although focusing on the\n\
    time aspect, the dashboards can also be used for more sophisticated queries, such\
    \ as \nreferencing or historical data. In this case, these graphs retrieved data\
    \ from sources\nupon PostgreSQL databases. \n3.2. Data Analysis \n3.2.1. Battery\
    \ Lifetime Estimation \nSoLo node battery voltage monitoring, through the LoRaWAN\
    \ communicatio\nwork, allows the detection of power failures and then triggers\
    \ on-site maintenance\nbattery life can also be estimated to anticipate the maintenance\
    \ operations, but the \neling of the battery discharge must integrate several\
    \ variables, such as: \n• \nThe power consumption of the LoRa radio transceiver\
    \ depends on the modu\nparameters. Therefore, the channel frequency is set to\
    \ 868 MHz, the bandwid\nFigure 12. Example of data visualization interface for\
    \ the Aydat site with an instantaneous KPI (Key\nPerformance Indicator) board\
    \ on the top and evolution graphs built with Grafana on the bottom.\n3.2. Data\
    \ Analysis\n3.2.1. Battery Lifetime Estimation\nSoLo node battery voltage monitoring,\
    \ through the LoRaWAN communication net-\nwork, allows the detection of power\
    \ failures and then triggers on-site maintenance. The\nbattery life can also be\
    \ estimated to anticipate the maintenance operations, but the modeling\nof the\
    \ battery discharge must integrate several variables, such as:\n•\nThe power consumption\
    \ of the LoRa radio transceiver depends on the modulation\nparameters. Therefore,\
    \ the channel frequency is set to 868 MHz, the bandwidth\nto 125 kHz, and the\
    \ transmission power ﬁxed to 25 mW. However, the spreading\nfactor (7 to 12) can\
    \ be selected through the data rate (5 to 0) parameter inside the\nconﬁguration\
    \ ﬁle;\n•\nThe power consumption of the internal sensors which the operator has\
    \ activated;\n•\nThe power consumption of external sensors if the node itself\
    \ provides the power;\n•\nThe period of data acquisition;\n•\nThe period of data\
    \ transmission;\n•\nThe temperature of the battery cells has a signiﬁcant impact\
    \ on their discharge capacity\n(70% at 0 ◦C, 40% at −10 ◦C).\nResults presented\
    \ in [60] give some guidelines concerning the estimation and opti-\nmization of\
    \ battery life for LoRaWAN communications, but they must be reconsidered in\n\
    light of each use case. Another way to estimate the battery life is to measure\
    \ the initial\ndischarge slope of the battery.\nFigure 13 shows the measurements\
    \ of the discharge of a battery (lithium-ION 8800 mAh)\nfor two different currents\
    \ (A and B). The two curves (curves A and B) have the same shape\nwith a fast\
    \ decrease of the voltage during about one-third of the total discharge time of\
    \ the\nbattery, followed by a slower slope. The end of the battery life is brieﬂy\
    \ preceded by a very\nfast voltage drop. We can also observe that the steepness\
    \ of the initial slope depends on the\nbattery’s lifetime.\nSensors 2023, 23,\
    \ 2896\n15 of 24\n \ndischarge slope of the battery. \nFigure 13 shows the measurements\
    \ of the discharge of a battery (lithium-ION 8800 \nmAh) for two different currents\
    \ (A and B). The two curves (curves A and B) have the same \nshape with a fast\
    \ decrease of the voltage during about one-third of the total discharge time \n\
    of the battery, followed by a slower slope. The end of the battery life is briefly\
    \ preceded \nby a very fast voltage drop. We can also observe that the steepness\
    \ of the initial slope \ndepends on the battery's lifetime. \n \nFigure 13. Evolution\
    \ with the time of the battery voltage for two different currents (curves A and\
    \ B) \nand initial discharge slopes (slopes A and B). \nUsing a dedicated test\
    \ bench, several discharge curves were obtained by connecting \nthe battery to\
    \ different values of resistors. For each, the initial slope and the battery life-\n\
    time have been measured. The results are plotted in Figure 14. Two pairs of values\
    \ ex-\ntracted from data transmitted by nodes deployed on-site have also been\
    \ added. \nFigure 13. Evolution with the time of the battery voltage for two different\
    \ currents (curves A and B)\nand initial discharge slopes (slopes A and B).\n\
    Using a dedicated test bench, several discharge curves were obtained by connecting\n\
    the battery to different values of resistors. For each, the initial slope and\
    \ the battery lifetime\nhave been measured. The results are plotted in Figure\
    \ 14. Two pairs of values extracted\nfrom data transmitted by nodes deployed on-site\
    \ have also been added.\nSensors 2023, 23, x FOR PEER REVIEW \n16 of 25 \n \n\
    \ \nFigure 14. Correlation between the battery lifetime and the value of the initial\
    \ slope of the discharge. \nFigure 14 shows a good correlation between the value\
    \ of the initial slope of the dis-\ncharge and the battery lifetime. Using the\
    \ regression equation \U0001D466 = 2 ൈ 10ିହ ൈ \U0001D465ି଴.ଽସସ, the \nvalue of\
    \ the battery lifetime (y) can be evaluated by measuring the initial slope of\
    \ the \ndischarge (x) thanks to the data transmitted by the LoRaWAN network. Even\
    \ if the preci-\nsion of this estimation is limited to about 20% and does not\
    \ consider the impact of signif-\nicant temperature variations during the deployment\
    \ of the node on site, this method is \nsimple, robust, and useful for scheduling\
    \ the maintenance period. \n3.2.2. Packet Loss Analysis \nIn a wireless sensors\
    \ network, the analysis of the Packet Loss Rate (PLR) is crucial to \nassess the\
    \ reliability of the network. Several factors affect the PLR, such as the weakness\
    \ \nf th\ndi\ni\nl th\ndi i t\nf\nth t\ni\ni\ndi t\nd th\ndi\nFigure 14. Correlation\
    \ between the battery lifetime and the value of the initial slope of the discharge.\n\
    Figure 14 shows a good correlation between the value of the initial slope of the\n\
    discharge and the battery lifetime. Using the regression equation y = 2 × 10−5\
    \ × x−0.944,\nthe value of the battery lifetime (y) can be evaluated by measuring\
    \ the initial slope of\nthe discharge (x) thanks to the data transmitted by the\
    \ LoRaWAN network. Even if the\nprecision of this estimation is limited to about\
    \ 20% and does not consider the impact of\nsigniﬁcant temperature variations during\
    \ the deployment of the node on site, this method\nis simple, robust, and useful\
    \ for scheduling the maintenance period.\nSensors 2023, 23, 2896\n16 of 24\n3.2.2.\
    \ Packet Loss Analysis\nIn a wireless sensors network, the analysis of the Packet\
    \ Loss Rate (PLR) is crucial to\nassess the reliability of the network. Several\
    \ factors affect the PLR, such as the weakness of\nthe radio signal, the radio\
    \ interference, the transmission distance, and the radio screening\nintroduced\
    \ by vegetation, buildings, and topography. The LoRa technology, integrated into\n\
    the ConnecSenS network, presents a feature that can help to increase the communication\n\
    range. Depending on the value of the Data Rate (DR) parameter, the communication\n\
    range between the nodes and the gateway can cover a more (DR = 0) or less (DR\
    \ = 5) long\ndistance. However, as shown in Table 2, the Data Rate affects the\
    \ bit rate and the acceptable\nsensitivity level (measured as the Signal-to-Noise\
    \ Ratio, SNR). Decreasing the DR value\ndecreases the bit rate, increasing the\
    \ packet transmission time. But at the same time, it\nimproves the sensitivity,\
    \ which increases the communication range.\nTable 2. Evolution of the bit rate\
    \ and acceptable sensitivity depending on the data rate. BW = 125 kHz\nand CR\
    \ = 4/5.\nData Rate (DR)\nBit Rate\nSignal-to-Noise Ratio (SNR)\n0\n293 bit/s\n\
    −20 dB\n1\n537 bit/s\n−17.5 dB\n2\n976 bit/s\n−15 dB\n3\n1757 bit/s\n−12 dB\n\
    4\n3125 bit/s\n−9 dB\n5\n5468 bit/s\n−6 dB\nAn analysis of the data collected\
    \ on the ﬁeld allowed us to extract the Packet Retrans-\nmitted Rate (PRR) and\
    \ the PLR for each node. The PRR is the percentage of packets not\nreceived at\
    \ their ﬁrst sending. The PLR is the number of packets lost, computed as the total\n\
    number of packets theoretically transmitted minus the number of received parquets\
    \ out of\nthe total number of packets theoretically transmitted. The results are\
    \ presented in Table 3.\nTable 3. Packet retransmitted and packet loss rate for\
    \ each node deployed on the experimental sites,\nas well as their conﬁguration\
    \ (connected sensors, transmit period, and data rate).\nSite\nNode\nConnected\
    \ Sensor\nto the Node\nTransmit\nPeriod\nData Rate\nPacket\nRetransmitted Rate\n\
    Packet\nLoss Rate\nMontoldre\n6201\n3x SMT100\n1 h\n5\n20%\n9%\n6212\n3x SMT100\n\
    1 h\n5\n24%\n11%\n6217\nInternal sensor\n1x SMT100\n1 h\n5\n14%\n10%\n1225\nInternal\
    \ sensor\n1 h\n5\n4%\n0%\nAuzon\n6203\nAquatroll 200\n4 h\n5\n35%\n31%\n6234\n\
    Aquatroll 200\n2 h\n5\n12%\n0%\n6237\nAquatroll 200\n2 h\n5\n14%\n1%\nAydat\n\
    6215\nAquatroll 200\n2 h\n5\n22%\n9%\n6220\nAquatroll 200\n1 h\n5\n5%\n4%\nZATU\n\
    1236\nInternal sensor\nRain gauge\n1 h\n3\n54%\n35%\n1276\nAquatroll 200\n1 h\n\
    3\n28%\n14%\n1239\nAquatroll 200\n1 h\n3\n38%\n10%\nDepending on the nodes, the\
    \ packet retransmission rate changes from 4% to 54%. The\nvalues presented in\
    \ Table 3 show the beneﬁt of retransmission with a PLR decrease of 11.3%\non average\
    \ on the nodes. On the Montoldre site, a second measurement campaign was\ncarried\
    \ out by changing the DR value of nodes 6201 and 6212 from DR = 5 to DR = 4. As\
    \ pre-\nsented in Table 4, this has increased the communication range with signiﬁcant\
    \ improvement\nof the PLR from 9% to 0% and from 11% to 0% for nodes 6201 and\
    \ 6212, respectively.\nSensors 2023, 23, 2896\n17 of 24\nTable 4. Comparison of\
    \ packet loss rate depending on DR setting.\nSite\nNode\nConnected Sensor to the\
    \ Node\nPacket Loss Rate with DR = 5\nPacket Loss Rate with DR = 4\nMontoldre\n\
    6201\n3x SMT100\n9%\n0%\n6212\n3x SMT100\n11%\n0%\nIn Table 3, we can observe\
    \ that on the Auzon site, node 6203 has a much higher PLR\nthan the other two\
    \ nodes deployed on the same site. However, the three nodes have the\nsame type\
    \ of sensor connected (Aquatroll 200) and the same measurement period (1 h),\n\
    meaning the same payload value. The difference is that node 6203 has a sending\
    \ period of\n4 h instead of 2 h for nodes 6234 and 6237. For the second time,\
    \ the sending period of node\n6203 has been conﬁgured to transmit every 2 h. The\
    \ results, presented in Table 5, show\nthat by transmitting the data every 2 h\
    \ instead of every 4 h, the PLR falls from 31% to 2%.\nThese results show the\
    \ limits related to the size of the payload imposed by the LoRaWAN\nstandard (payload\
    \ of 51 bytes max for DR = 0 and up to 222 bytes max for DR = 5). It shows\nthat\
    \ if no additional space is available in the LoRa frame for previously untransmitted\
    \ data,\nthey will be lost. The PLR is not improved despite the retransmission\
    \ feature implemented\ninside node SoLo. Increasing the transmission frequencies\
    \ in order to save energy can\nhave, on the opposite, a negative impact in certain\
    \ conditions by increasing the number\nof retransmissions.\nTable 5. Comparison\
    \ of packet loss rate vs. transmit period setting.\nSite\nNode\nConnected Sensor\
    \ to the Node\nPacket Loss Rate with\nTransmit Period = 4 h\nPacket Loss Rate\
    \ with\nTransmit Period = 2 h\nAuzon\n6203\nAquatroll 200\n31%\n2%\nThis analysis\
    \ shows that the transmit period and the DR parameter are interesting\nlevers\
    \ for reducing the packet loss rate. The optimal solution can be calculated theoretically\n\
    if the size of the payload is known. If not, an experimental analysis can be carried\
    \ out to\nﬁnd the best compromise.\n3.2.3. Analysis of LoRa Signal Strengths Attenuation\
    \ as a Function of Distance and\nVisibility Parameters (Path-Loss Model)\nThe\
    \ Received Signal Strength Indicator (RSSI) of the LoRaWAN can be seen as a\n\
    function of the transmission frequency and antenna properties, but mainly the\
    \ distance\nbetween transmitters and receivers. The most common path-loss model\
    \ is the log-normal\nmodel, which is given by [61,62]:\nD = K − 10γ log10\n\x12\
    \ d\nd0\n\x13\n(1)\nWith K = Pt − C\n(2)\nand C = 20 log10\n\x12\nλ\n4πd0\n\x13\
    \n(3)\nwhere d0 is a reference distance from the transmitter. γ is the signal\
    \ power loss coefﬁcient\n(PLE). K is a constant governed by the operating frequency\
    \ and power of the antenna: Pt\nbeing the transmitted power, λ being the wavelength\
    \ of the signal.\nMoreover, the received signal depends on many components, with\
    \ visibility (Line-of-\nSight or LOS) being the strongest. As far as we know,\
    \ three LOS parameters may impact\nthe signal attenuation: (1) whether the nodes\
    \ are actually within the visibility range of the\ngateways; (2) the topographic\
    \ conﬁguration of the LOS; (3) the extent of the LOS masked\nby the forest cover.\
    \ Based on the data collected from the four study sites, the objective is to\n\
    assess the respective statistical effect of the logarithm of the Euclidian distance\
    \ between\nSensors 2023, 23, 2896\n18 of 24\nnodes and gateways (logD) and the\
    \ three LOS parameters listed below (respectively VIEW,\nLOS_CONF, and LOS_F)\
    \ over the signal strength (RSSI).\nThe RSSI timeseries were collected from the\
    \ four study sites using 16 SoLo nodes\nfrom 3 July 2021 to 14 November 2021 for\
    \ the Auzon site (N = 33,661 RSSI measurements\ndistributed over four nodes),\
    \ from 25 May 2021 to 20 December 2021 for the Aydat site\n(N = 33,405 distributed\
    \ over ﬁve nodes), from 5 January 2021 to 20 April 2022 for the\nMontoldre site\
    \ (N = 31,193 distributed over four nodes) and from 14 April 2021 to 23 May\n\
    2022 for the ZATU site (N = 2374 distributed over three nodes).\nThe LogD parameter\
    \ is computed as the decimal logarithm of the Euclidian distance\nbetween each\
    \ node and its associated gateway. Euclidean distances between nodes and\ngateways\
    \ are derived from their geographic locations expressed in Lambert 93 cartographic\n\
    projection and collected in the ﬁeld using a Trimble R10 GPS/GNSS device with\
    \ centimeter\naccuracy. The viewshed of the gateways of the four study sites was\
    \ computed using Digital\nElevation Model (DEM) with a ground resolution of 1\
    \ m (RGE dataset from the French\nInstitut National de l’information Géographique\
    \ et forestière—IGN) and the Viewshed\ntoolkit provided by the ArcGIS Pro software\
    \ (3d Analyst Tools). Each node of the study\nsite is then classiﬁed as IN or\
    \ OUT of the viewshed of its gateway and stored in the\nVIEW bimodal variable\
    \ of the dataset. The LOS_CONF parameter is derived from the LOS\ntopographic\
    \ proﬁles of each node which are extracted from the same RGE DEM using the\nStack\
    \ Proﬁle tool provided by the ArcGIS Pro software (3d Analyst Tools). Each node\
    \ is then\nclassiﬁed into one of the three topographic conﬁguration classes (A,\
    \ B, or C) based on the\nopen or broken nature of the LOS and its topographic\
    \ mask index, according to Figure 15\nThe LOS_F_rate is the rate of the LOS covered\
    \ by trees (>3 m high), computed from the\n2019 aerial photographs provided by\
    \ the CRAIG and the IGN.\nSensors 2023, 23, x FOR PEER REVIEW \n19 of 25 \n \n\
    Figure 15 The LOS_F_rate is the rate of the LOS covered by trees (>3 m high),\
    \ computed \nfrom the 2019 aerial photographs provided by the CRAIG and the IGN.\
    \ \n \nFigure 15. Classification classes for the nodes. \nA linear regression\
    \ model was fitted to the RSSI data as a function of the logarithm \nof the Euclidean\
    \ distance (logD) between the nodes and the gateway in order to quantify \nthe\
    \ effect of distance on LoRa signal fading. The residuals (i.e., variations in\
    \ RSSI not in-\nduced by changes in distances between nodes and gateways) are\
    \ then integrated into the \ndataset, and a random forest regression model is\
    \ fitted to identify the visibility variables \n(VIEW, LOS_CONF, LOS_F_rate) that\
    \ contribute the most to explaining the deviations \nfrom the standard lognormal\
    \ path-loss model. Statistical comparison of RSSI between \ngroups was also performed\
    \ using the nonparametric Kruskal–Wallis test implemented in \nthe ggstatsplot\
    \ R package [63]. \n3.2.4. RSSI Variation with the Geographical Distance to the\
    \ Gateways \nAs expected, the RSSI data collected for the four study sites show\
    \ a logarithmic deg-\nradation in signal strength with increasing geographical\
    \ distance (Figure 16) between \nnodes and gateways. The average RSSI varies from\
    \ about −32 dBm (node 6247 at Aydat, \nd = 1 m) in the immediate vicinity of the\
    \ gateway to about −120 dBm (node 1276 at ZATU) \nwhen the node is located 260\
    \ m far from the gateway. The results of the statistical linear \nregression between\
    \ RSSI and the logarithm of the node-gateway distance (logD) are ro-\nFigure 15.\
    \ Classiﬁcation classes for the nodes.\nA linear regression model was ﬁtted to\
    \ the RSSI data as a function of the logarithm of\nthe Euclidean distance (logD)\
    \ between the nodes and the gateway in order to quantify the\neffect of distance\
    \ on LoRa signal fading. The residuals (i.e., variations in RSSI not induced\n\
    by changes in distances between nodes and gateways) are then integrated into the\
    \ dataset,\nand a random forest regression model is ﬁtted to identify the visibility\
    \ variables (VIEW,\nLOS_CONF, LOS_F_rate) that contribute the most to explaining\
    \ the deviations from the\nstandard lognormal path-loss model. Statistical comparison\
    \ of RSSI between groups was\nalso performed using the nonparametric Kruskal–Wallis\
    \ test implemented in the ggstatsplot\nR package [63].\n3.2.4. RSSI Variation\
    \ with the Geographical Distance to the Gateways\nAs expected, the RSSI data collected\
    \ for the four study sites show a logarithmic degra-\ndation in signal strength\
    \ with increasing geographical distance (Figure 16) between nodes\nSensors 2023,\
    \ 23, 2896\n19 of 24\nand gateways. The average RSSI varies from about −32 dBm\
    \ (node 6247 at Aydat, d = 1 m)\nin the immediate vicinity of the gateway to about\
    \ −120 dBm (node 1276 at ZATU) when the\nnode is located 260 m far from the gateway.\
    \ The results of the statistical linear regression\nbetween RSSI and the logarithm\
    \ of the node-gateway distance (logD) are robust and highly\nsigniﬁcant (R2 =\
    \ 0.808, p-value < 2.2 × 10−16, residual standard error = 10.68 dBm). Indeed,\n\
    the linear regression model predicts an average decrease of 19.15 dBm (std. error\
    \ = 0.03,\np-value < 2.2 × 10−16) for an increase of one logD unit.\nfrom the\
    \ standard lognormal path-loss model. Statistical comparison of RSSI between \n\
    groups was also performed using the nonparametric Kruskal–Wallis test implemented\
    \ in \nthe ggstatsplot R package [63]. \n3.2.4. RSSI Variation with the Geographical\
    \ Distance to the Gateways \nAs expected, the RSSI data collected for the four\
    \ study sites show a logarithmic deg-\nradation in signal strength with increasing\
    \ geographical distance (Figure 16) between \nnodes and gateways. The average\
    \ RSSI varies from about −32 dBm (node 6247 at Aydat, \nd = 1 m) in the immediate\
    \ vicinity of the gateway to about −120 dBm (node 1276 at ZATU) \nwhen the node\
    \ is located 260 m far from the gateway. The results of the statistical linear\
    \ \nregression between RSSI and the logarithm of the node-gateway distance (logD)\
    \ are ro-\nbust and highly significant (R² = 0.808, p-value < 2.2 × 10−16, residual\
    \ standard error = 10.68 \ndBm). Indeed, the linear regression model predicts\
    \ an average decrease of 19.15 dBm (std. \nerror = 0.03, p-value < 2.2 × 10−16)\
    \ for an increase of one logD unit. \n \nFigure 16. Statistical log-normal path-loss\
    \ model (RSSI vs. Distance (m)). \nFigure 16. Statistical log-normal path-loss\
    \ model (RSSI vs. Distance (m)).\nHowever, due to the high intra- and inter-node\
    \ variance of the RSSI, the range of the\nlinear regression residuals is extremely\
    \ large. Some nodes exhibit highly platykurtic or\neven bimodal distributions\
    \ of residuals (Figure 17). The standard deviation of residuals\nranges from 1.89\
    \ for node 6217 (Montoldre) to 7.46 for node 6237 (Auzon). Nevertheless,\nthe\
    \ homoscedasticity criterion for residuals seems to remain unviolated. Nodes within\n\
    the gateways viewsheds exhibit overall positive residuals (signal strength better\
    \ than\nexpected by the statistic path-loss model), except for node 1294 (the\
    \ closest node to the\nAuzon gateway). Conversely, nodes outside the gateway viewsheds\
    \ show negative RSSI\nresiduals, with the exception of node 6212, which is located\
    \ in the vicinity of the edge of\nthe Montoldre Gateway viewshed (Figure 17B).\
    \ In the same way, heavily broken LOS by\ntopographic masks (LOS_CONF = C) exhibits\
    \ negative RSSI residuals. In contrast, open\nLOS (LOS_CONF = A) shows overall\
    \ positive residuals (still except for node 1294 in Auzon).\nThe intermediate\
    \ level of LOS topographic masking (LOS_CONF = B) exhibits moderate\nRSSI residuals,\
    \ just between the two other LOS classes (Figure 17C). Increasing rates of\nLOS\
    \ covered by forest seem to be associated with changing from positive to negative\
    \ RSSI\nresiduals (Figure 17D).\nA random forest regression (number of trees =\
    \ 1000, number of variables tried at each\nsplit = 3) was performed to assess\
    \ the statistical contribution of the visibility variables\n(VIEW, LOS_CONF, LOS_F)\
    \ to the explanation of the distribution of the residuals. The\nrandom forest\
    \ regression model poorly explains the distribution of RSSI residuals with a\n\
    Mean Of Squared Residuals (MSE) of 57.87 dBm and only 49.23 of the variance explained.\n\
    The variable importance measured by the random forest (Figure 18) points out the\
    \ VIEW\n(nodes in or out of the gateway viewshed) and LOS_F_rate (rate of LOS\
    \ covered by forest)\nas the main visibility variables that explain the distribution\
    \ of RSSI residuals with 96.21 and\n23.64% of increase MSE (percent increase in\
    \ the mean square error of the Random Forests\nmodel when the data for that variable\
    \ were randomly permuted).\nA partial dependence plot on VIEW clearly exhibits\
    \ the deleterious effect on the signal\nstrength of a location outside the gateway\
    \ viewshed (Figure 18B). The partial dependence\nplot on LOS_F_rate shows that\
    \ negative RSSI residuals are associated with LOS covered\nby forest beyond 23%\
    \ (Figure 18B). Surprisingly, according to the random forest regres-\nsion model,\
    \ the LOS_CONF variable provides no additional information to explain the\ndistribution\
    \ of RSSI residuals (Figure 18A,B), even though the Kruskal–Wallis test reveals\
    \ a\nsigniﬁcant difference in RSSI residuals between the three LOS topographic\
    \ conﬁguration\nclasses (chi-square = 37,970, df = 2, p-value < 2.2× 10−16, and\
    \ see violin chart Figure 19).\nSensors 2023, 23, 2896\n20 of 24\n \nsiduals,\
    \ with the exception of node 6212, which is located in the vicinity of the edge\
    \ of the \nMontoldre Gateway viewshed (Figure 17B). In the same way, heavily broken\
    \ LOS by topo-\ngraphic masks (LOS_CONF = C) exhibits negative RSSI residuals.\
    \ In contrast, open LOS \n(LOS_CONF = A) shows overall positive residuals (still\
    \ except for node 1294 in Auzon). \nThe intermediate level of LOS topographic\
    \ masking (LOS_CONF = B) exhibits moderate \nRSSI residuals, just between the\
    \ two other LOS classes (Figure 17C). Increasing rates of \nLOS covered by forest\
    \ seem to be associated with changing from positive to negative RSSI \nresiduals\
    \ (Figure 17D). \n \nFigure 17. Regression residual analysis. \nA random forest\
    \ regression (number of trees = 1000, number of variables tried at each \nsplit\
    \ = 3) was performed to assess the statistical contribution of the visibility\
    \ variables \n(VIEW, LOS_CONF, LOS_F) to the explanation of the distribution of\
    \ the residuals. The \nrandom forest regression model poorly explains the distribution\
    \ of RSSI residuals with a \nMean Of Squared Residuals (MSE) of 57.87 dBm and\
    \ only 49.23 of the variance explained. \nThe variable importance measured by\
    \ the random forest (Figure 18) points out the VIEW \n(nodes in or out of the\
    \ gateway viewshed) and LOS_F_rate (rate of LOS covered by forest) \nFigure 17.\
    \ Regression residual analysis.\nSensors 2023, 23, x FOR PEER REVIEW \n21 of 25\
    \ \n \nas the main visibility variables that explain the distribution of RSSI\
    \ residuals with 96.21 \nand 23.64% of increase MSE (percent increase in the mean\
    \ square error of the Random \nForests model when the data for that variable were\
    \ randomly permuted). \n \nFigure 18. Random forest analysis. \nA partial dependence\
    \ plot on VIEW clearly exhibits the deleterious effect on the sig-\nnal strength\
    \ of a location outside the gateway viewshed (Figure 18B). The partial depend-\n\
    ence plot on LOS_F_rate shows that negative RSSI residuals are associated with\
    \ LOS cov-\nered by forest beyond 23% (Figure 18B). Surprisingly, according to\
    \ the random forest re-\ngression model, the LOS_CONF variable provides no additional\
    \ information to explain \nFigure 18. Random forest analysis.\nSensors 2023, 23,\
    \ 2896\n21 of 24\nSensors 2023, 23, x FOR PEER REVIEW \n22 of 25 \n \n \n \nFigure\
    \ 19. Kruskal–Wallis test result. \n4. Conclusions \nIn this work, we have proposed\
    \ a multi-purpose communicating node to acquire and \ntransmit environmental data\
    \ for several sensors. The deployment on-site allowed us to \nvalidate the robustness\
    \ and reliability of this solution in different water resource manage-\nment use\
    \ cases. This reliability has also been successfully tested on the Etna site for\
    \ the \nmonitoring of volcanic activity [64]. The deployed nodes are still operational.\
    \ \nThe proposed integration workflow based on free solutions has shown its relevance.\
    \ \nThe users appreciated the easy design of the dashboards allowing them to follow\
    \ the ac-\ntivity of the sites and the status of the nodes (notably their battery\
    \ level). \nThe analysis of the different nodes on each site shows heterogeneity\
    \ in the quality of \nservice rendered in terms of energy consumption, transmission\
    \ quality, etc. A major issue \nis predicting the operation of the network, which\
    \ is particularly important for remote sites. \nWe have shown that it is possible\
    \ to have an estimate of the battery life after a few days \nof operation thanks\
    \ to the interpretation of the first evolution points of consumption. On \nthe\
    \ other hand, it is more complicated to predict the transmission quality a priori.\
    \ Still, we \nhave shown that the LoRa signal strengths attenuation can be evaluated\
    \ considering the \ndistance and the visibility parameters. Future dedicated experiments\
    \ will provide addi-\ntional data to make this modeling more robust. \nFuture\
    \ work will also focus on deployments to other sites and on the issues of data\
    \ \nquality: how to identify measurement drift and outliers and generate alerts\
    \ accordingly? \nSmarter devices will also minimize data transmission and improve\
    \ the battery lifetime. \n5. Patents \nThe firmware of the SoLo node is protected\
    \ by the following IDDN certificate: \nIDDN1.FR2.0013.2000104.0005.S6.P7.20208.0009.1020010,\
    \ 13/05/2020. \nAuthor Contributions: The contribution of each author is the following:\
    \ Hardware development: \nL.M.-A. and L.R.; Software development: D.S., G.D.S.\
    \ and A.C.; Data Analysis: L.M.-A., L.R. and \nE.R.; Sites deployment: L.M.-A.,\
    \ L.R., G.D.S., D.L., O.V., E.R., T.A., P.C. and R.V.; Writing, review: \nAll\
    \ authors; Project administration and funding acquisition: L.R. and J.-P.C. All\
    \ authors have read \nand agreed to the published version of the manuscript. \n\
    Figure 19. Kruskal–Wallis test result.\n4. Conclusions\nIn this work, we have\
    \ proposed a multi-purpose communicating node to acquire\nand transmit environmental\
    \ data for several sensors. The deployment on-site allowed\nus to validate the\
    \ robustness and reliability of this solution in different water resource\nmanagement\
    \ use cases. This reliability has also been successfully tested on the Etna site\
    \ for\nthe monitoring of volcanic activity [64]. The deployed nodes are still\
    \ operational.\nThe proposed integration workﬂow based on free solutions has shown\
    \ its relevance.\nThe users appreciated the easy design of the dashboards allowing\
    \ them to follow the\nactivity of the sites and the status of the nodes (notably\
    \ their battery level).\nThe analysis of the different nodes on each site shows\
    \ heterogeneity in the quality of\nservice rendered in terms of energy consumption,\
    \ transmission quality, etc. A major issue\nis predicting the operation of the\
    \ network, which is particularly important for remote sites.\nWe have shown that\
    \ it is possible to have an estimate of the battery life after a few days of\n\
    operation thanks to the interpretation of the ﬁrst evolution points of consumption.\
    \ On the\nother hand, it is more complicated to predict the transmission quality\
    \ a priori. Still, we have\nshown that the LoRa signal strengths attenuation can\
    \ be evaluated considering the distance\nand the visibility parameters. Future\
    \ dedicated experiments will provide additional data to\nmake this modeling more\
    \ robust.\nFuture work will also focus on deployments to other sites and on the\
    \ issues of data\nquality: how to identify measurement drift and outliers and\
    \ generate alerts accordingly?\nSmarter devices will also minimize data transmission\
    \ and improve the battery lifetime.\n5. Patents\nThe ﬁrmware of the SoLo node\
    \ is protected by the following IDDN certiﬁcate:\nIDDN1.FR2.0013.2000104.0005.S6.P7.20208.0009.1020010,\
    \ 13 May 2020.\nAuthor Contributions: The contribution of each author is the following:\
    \ Hardware development:\nL.M.-A. and L.R.; Software development: D.S., G.D.S.\
    \ and A.C.; Data Analysis: L.M.-A., L.R. and\nE.R.; Sites deployment: L.M.-A.,\
    \ L.R., G.D.S., D.L., O.V., E.R., T.A., P.C. and R.V.; Writing, review: All\n\
    authors; Project administration and funding acquisition: L.R. and J.-P.C. All\
    \ authors have read and\nagreed to the published version of the manuscript.\n\
    Funding: This research was ﬁnanced by the French government IDEX-ISITE initiative\
    \ 16-IDEX-0001\n(CAP 20–25), the Conseil Régional Auvergne-Rhône-Alpes, and the\
    \ FEDER program of the European\nSensors 2023, 23, 2896\n22 of 24\nUnion. Authors\
    \ also acknowledge the ﬁnancial support from the “Féderation des Recherches en\n\
    Environnement—Clermont-Ferrand”.\nAcknowledgments: The authors want to thank Pierre\
    \ Henrard and Kun Mean Hou, who contributed\nto the creation of this pluridisciplinary\
    \ community. We also would like to thank the people working\non the Cap 20–25\
    \ CEBA initiative for their help by hosting our data in their system.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nWhitehead,\
    \ P.G.; Wilby, R.L.; Batterbee, R.W.; Kernan, M.; Wade, A.J. A Review of the Potential\
    \ Impacts of Climate Change on\nSurface Water Quality. Hydrol. Sci. J. 2009, 54,\
    \ 101–123. [CrossRef]\n2.\nPiao, S.; Ciais, P.; Huang, Y.; Shen, Z.; Peng, S.;\
    \ Li, J.; Zhou, L.; Liu, H.; Ma, Y.; Ding, Y.; et al. The Impacts of Climate Change\
    \ on\nWater Resources and Agriculture in China. Nature 2010, 467, 43–51. [CrossRef]\
    \ [PubMed]\n3.\nMukheibir, P. Water Access, Water Scarcity, and Climate Change.\
    \ Environ. Manag. 2010, 45, 1027–1039. [CrossRef] [PubMed]\n4.\nOliveira, L.M.;\
    \ Rodrigues, J.J. Wireless Sensor Networks: A Survey on Environmental Monitoring.\
    \ J. Commun. 2011, 6, 143–151.\n[CrossRef]\n5.\nOthman, M.F.; Shazali, K. Wireless\
    \ Sensor Network Applications: A Study in Environment Monitoring System. Procedia\
    \ Eng.\n2012, 41, 1204–1210. [CrossRef]\n6.\nUllo, S.L.; Sinha, G.R. Advances\
    \ in Smart Environment Monitoring Systems Using IoT and Sensors. Sensors 2020,\
    \ 20, 3113.\n[CrossRef]\n7.\nKamienski, C.; Soininen, J.-P.; Taumberger, M.; Dantas,\
    \ R.; Toscano, A.; Cinotti, T.S.; Maia, R.F.; Neto, A.T. Smart Water\nManagement\
    \ Platform: IoT-Based Precision Irrigation for Agriculture. Sensors 2019, 19,\
    \ 276. [CrossRef]\n8.\nMazumdar, S.; Seybold, D.; Kritikos, K.; Verginadis, Y.\
    \ A Survey on Data Storage and Placement Methodologies for Cloud-Big\nData Ecosystem.\
    \ J. Big Data 2019, 6, 15. [CrossRef]\n9.\nMansouri, Y.; Toosi, A.N.; Buyya, R.\
    \ Data Storage Management in Cloud Environments: Taxonomy, Survey, and Future\
    \ Directions.\nACM Comput. Surv. 2017, 50, 91:1–91:51. [CrossRef]\n10.\nHartung,\
    \ C.; Han, R.; Seielstad, C.; Holbrook, S. FireWxNet: A Multi-Tiered Portable\
    \ Wireless System for Monitoring Weather\nConditions in Wildland Fire Environments.\
    \ In Proceedings of the 4th international Conference on Mobile Systems, Applications\n\
    and Services, Uppsala, Sweden, 19–22 June 2006; Association for Computing Machinery:\
    \ New York, NY, USA, 2006; pp. 28–41.\n11.\nFang, S.; Xu, L.D.; Zhu, Y.; Ahati,\
    \ J.; Pei, H.; Yan, J.; Liu, Z. An Integrated System for Regional Environmental\
    \ Monitoring and\nManagement Based on Internet of Things. IEEE Trans. Ind. Inform.\
    \ 2014, 10, 1596–1605. [CrossRef]\n12.\nBenghanem, M. Measurement of Meteorological\
    \ Data Based on Wireless Data Acquisition System Monitoring. Appl. Energy 2009,\n\
    86, 2651–2660. [CrossRef]\n13.\nGulati, K.; Kumar Boddu, R.S.; Kapila, D.; Bangare,\
    \ S.L.; Chandnani, N.; Saravanan, G. A Review Paper on Wireless Sensor\nNetwork\
    \ Techniques in Internet of Things (IoT). Mater. Today Proc. 2022, 51, 161–165.\
    \ [CrossRef]\n14.\nYetgin, H.; Cheung, K.T.K.; El-Hajjar, M.; Hanzo, L.H. A Survey\
    \ of Network Lifetime Maximization Techniques in Wireless Sensor\nNetworks. IEEE\
    \ Commun. Surv. Tutor. 2017, 19, 828–854. [CrossRef]\n15.\nSaini, H.; Thakur,\
    \ A.; Ahuja, S.; Sabharwal, N.; Kumar, N. Arduino Based Automatic Wireless Weather\
    \ Station with Remote\nGraphical Application and Alerts. In Proceedings of the\
    \ 2016 3rd International Conference on Signal Processing and Integrated\nNetworks\
    \ (SPIN), Noida, India, 11–12 February 2016; pp. 605–609.\n16.\nFaludi, R. Building\
    \ Wireless Sensor Networks: With ZigBee, XBee, Arduino, and Processing; O’Reilly\
    \ Media, Inc.: Sebastopol, CA, USA,\n2010; ISBN 978-1-4493-0274-0.\n17.\nFerdoush,\
    \ S.; Li, X. Wireless Sensor Network System Design Using Raspberry Pi and Arduino\
    \ for Environmental Monitoring\nApplications. Procedia Comput. Sci. 2014, 34,\
    \ 103–110. [CrossRef]\n18.\nWidhalm, D.; Goeschka, K.M.; Kastner, W. Is Arduino\
    \ a Suitable Platform for Sensor Nodes? In Proceedings of the IECON\n2021—47th\
    \ Annual Conference of the IEEE Industrial Electronics Society, Toronto, ON, Canada,\
    \ 13–16 October 2021; pp. 1–6.\n19.\nKondaveeti, H.K.; Kumaravelu, N.K.; Vanambathina,\
    \ S.D.; Mathe, S.E.; Vappangi, S. A Systematic Literature Review on\nPrototyping\
    \ with Arduino: Applications, Challenges, Advantages, and Limitations. Comput.\
    \ Sci. Rev. 2021, 40, 100364. [CrossRef]\n20.\nKone, C.T.; Mathias, J.-D.; Sousa,\
    \ G.D. Adaptive Management of Energy Consumption, Reliability and Delay of Wireless\
    \ Sensor\nNode: Application to IEEE 802.15.4 Wireless Sensor Node. PLoS ONE 2017,\
    \ 12, e0172336. [CrossRef]\n21.\nBhola, J.; Shabaz, M.; Dhiman, G.; Vimal, S.;\
    \ Subbulakshmi, P.; Soni, S.K. Performance Evaluation of Multilayer Clustering\n\
    Network Using Distributed Energy Efﬁcient Clustering with Enhanced Threshold Protocol.\
    \ Wirel. Pers. Commun. 2022, 126,\n2175–2189. [CrossRef]\n22.\nLilhore, U.K.;\
    \ Khalaf, O.I.; Simaiya, S.; Romero, C.A.T.; Abdulsahib, G.M.; Poongodi, M.; Kumar,\
    \ D. A Depth-Controlled\nand Energy-Efﬁcient Routing Protocol for Underwater Wireless\
    \ Sensor Networks. Int. J. Distrib. Sens. Netw. 2022, 18,\n15501329221117118.\
    \ [CrossRef]\n23.\nVidhya, V.; Madheswaran, M. Data Compression and Transmission\
    \ Techniques in Wireless Adhoc Networks: A Review. In\nIntelligent Computing and\
    \ Networking; Balas, V.E., Semwal, V.B., Khandare, A., Eds.; Springer Nature:\
    \ Singapore, 2022; pp. 194–206.\nSensors 2023, 23, 2896\n23 of 24\n24.\nAbdalkafor,\
    \ A.S.; Aliesawi, S.A. Data Aggregation Techniques in Wireless Sensors Networks\
    \ (WSNs): Taxonomy and an Accurate\nLiterature Survey. AIP Conf. Proc. 2022, 2400,\
    \ 020012. [CrossRef]\n25.\nEl-Sayed, W.M.; El-Bakry, H.M.; El-Sayed, S.M. Integrated\
    \ Data Reduction Model in Wireless Sensor Networks. Appl. Comput.\nInform. 2020,\
    \ 19, 41–63. [CrossRef]\n26.\nWilliam, P.; Badholia, A.; Verma, V.; Sharma, A.;\
    \ Verma, A. Analysis of Data Aggregation and Clustering Protocol in Wireless\n\
    Sensor Networks Using Machine Learning. In Evolutionary Computing and Mobile Sustainable\
    \ Networks; Suma, V., Fernando, X.,\nDu, K.-L., Wang, H., Eds.; Springer: Singapore,\
    \ 2022; pp. 925–939.\n27.\nYakine, F.; Kenzi, A. Energy Harvesting in Wireless\
    \ Communication: A Survey. E3S Web Conf. 2022, 336, 00074. [CrossRef]\n28.\nLafforgue,\
    \ M.; Szeligiewicz, W.; Devaux, J.; Poulint, M. Selective Mechanisms Controlling\
    \ Algal Succession in Aydat Lake. Water\nSci. Technol. 1995, 32, 117–127. [CrossRef]\n\
    29.\nBeauger, A.; Lair, N.; Reyes-Marchant, P.; Peiry, J.-L. The Distribution\
    \ of Macroinvertebrate Assemblages in a Reach of the River\nAllier (France), in\
    \ Relation to Riverbed Characteristics. Hydrobiologia 2006, 571, 63–76. [CrossRef]\n\
    30.\nNational Inventory of Uranium Mining Sites. Version 1. Made in the Framework\
    \ of the Mimausa Program (Memory and\nImpact of Uranium Mines, Synthesis and Archives);\
    \ Inventaire National des Sites Miniers D’uranium. Version 1. Realise Dans\nle\
    \ Cadre du Programme Mimausa (Memoire et Impact des Mines D’uranium: Synthese\
    \ et Archives). 2004. Available online:\nhttps://www.osti.gov/etdeweb/biblio/20666401\
    \ (accessed on 20 December 2022).\n31.\nHaxhibeqiri, J.; De Poorter, E.; Moerman,\
    \ I.; Hoebeke, J. A Survey of LoRaWAN for IoT: From Technology to Application.\
    \ Sensors\n2018, 18, 3995. [CrossRef] [PubMed]\n32.\nGaitan, N.C. A Long-Distance\
    \ Communication Architecture for Medical Devices Based on LoRaWAN Protocol. Electronics\
    \ 2021,\n10, 940. [CrossRef]\n33.\nAlmuhaya, M.A.M.; Jabbar, W.A.; Sulaiman, N.;\
    \ Abdulmalek, S. A Survey on LoRaWAN Technology: Recent Trends, Opportuni-\nties,\
    \ Simulation Tools and Future Directions. Electronics 2022, 11, 164. [CrossRef]\n\
    34.\nMiles, B.; Bourennane, E.-B.; Boucherkha, S.; Chikhi, S. A Study of LoRaWAN\
    \ Protocol Performance for IoT Applications in Smart\nAgriculture. Comput. Commun.\
    \ 2020, 164, 148–157. [CrossRef]\n35.\nST STM32 Arm Cortex MCUs—32-Bit Microcontrollers—STMicroelectronics.\
    \ Available online: https://www.st.com/en/\nmicrocontrollers-microprocessors/stm32-32-bit-arm-cortex-mcus.html\
    \ (accessed on 1 December 2021).\n36.\nDe Carvalho Silva, J.; Rodrigues, J.J.P.C.;\
    \ Alberti, A.M.; Solic, P.; Aquino, A.L.L. LoRaWAN—A Low Power WAN Protocol\n\
    for Internet of Things: A Review and Opportunities. In Proceedings of the 2nd\
    \ International Multidisciplinary Conference on\nComputer and Energy Science (SpliTech\
    \ 2017), Split, Croatia, 12–14 July 2017; pp. 1–6.\n37.\nErturk, M.A.; Aydin,\
    \ M.A.; Buyukakkaslar, M.T.; Evirgen, H. A Survey on LoRaWAN Architecture, Protocol\
    \ and Technologies.\nFuture Internet 2019, 11, 216. [CrossRef]\n38.\nChirpStack\
    \ ChirpStack Open-Source LoRaWAN®Network Server. Available online: https://www.chirpstack.io/\
    \ (accessed on\n20 December 2022).\n39.\nThe Things Network The Things Stack.\n\
    Available online:\nhttps://www.thethingsindustries.com/docs/ (accessed on\n20\
    \ December 2022).\n40.\nGrafana Dashboard Anything.\nObserve Everything.\nAvailable\
    \ online:\nhttps://grafana.com/grafana/ (accessed on\n20 December 2022).\n41.\n\
    Kibana Your Window into the Elastic Stack. Available online: https://www.elastic.co/kibana/\
    \ (accessed on 20 December 2022).\n42.\nMQTT MQTT: The Standard for IoT Messaging.\
    \ Available online: https://mqtt.org/ (accessed on 20 December 2022).\n43.\nElactic\
    \ Suite ELK : Elasticsearch, Logstash et Kibana. Available online: https://www.elastic.co/fr/what-is/elk-stack\
    \ (accessed\non 1 December 2021).\n44.\nSarramia, D.; Claude, A.; Ogereau, F.;\
    \ Mezhoud, J.; Mailhot, G. CEBA: A Data Lake for Data Sharing and Environmental\n\
    Monitoring. Sensors 2022, 22, 2733. [CrossRef]\n45.\nWen, J.; Dargie, W. Characterization\
    \ of Link Quality Fluctuation in Mobile Wireless Sensor Networks. ACM Trans. Cyber-Phys.\n\
    Syst. 2021, 5, 28:1–28:24. [CrossRef]\n46.\nLiu, W.; Xia, Y.; Zheng, D.; Xie,\
    \ J.; Luo, R.; Hu, S. Environmental Impacts on Hardware-Based Link Quality Estimators\
    \ in Wireless\nSensor Networks. Sensors 2020, 20, 5327. [CrossRef]\n47.\nDillon,\
    \ K.P.; Correa, F.; Judon, C.; Sancelme, M.; Fennell, D.E.; Delort, A.-M.; Amato,\
    \ P. Cyanobacteria and Algae in Clouds and\nRain in the Area of Puy de Dôme, Central\
    \ France. Appl. Environ. Microbiol. 2020, 87, e01850-20. [CrossRef]\n48.\nHilborn,\
    \ E.D.; Beasley, V.R. One Health and Cyanobacteria in Freshwater Systems: Animal\
    \ Illnesses and Deaths Are Sentinel\nEvents for Human Health Risks. Toxins 2015,\
    \ 7, 1374–1395. [CrossRef]\n49.\nMasters, B. The Ability of Vegetated Floating\
    \ Islands to Improve Water Quality in Natural and Constructed Wetlands: A Review.\n\
    Water Pract. Technol. 2012, 7, wpt2012022. [CrossRef]\n50.\nGarófano-Gómez, V.;\
    \ Metz, M.; Egger, G.; Díaz-Redondo, M.; Hortobágyi, B.; Geerling, G.; Corenblit,\
    \ D.; Steiger, J. Vegetation\nSuccession Processes and Fluvial Dynamics of a Mobile\
    \ Temperate Riparian Ecosystem: The Lower Allier River (France).\nGéomorphologie\
    \ Relief Process. Environ. 2017, 23, 187–202. [CrossRef]\n51.\nBeauger, A.; Delcoigne,\
    \ A.; Voldoire, O.; Serieyssol, K.; Peiry, J.-L. Distribution of Diatom, Macrophyte\
    \ and Benthic Macroinverte-\nbrate Communities Related to Spatial and Environmental\
    \ Characteristics: The Example of a Cut-Off Meander of the River Allier\n(France).\
    \ Cryptogam. Algol. 2015, 36, 323–355. [CrossRef]\nSensors 2023, 23, 2896\n24\
    \ of 24\n52.\nQuenet, M.; Celle-Jeanton, H.; Voldoire, O.; Albaric, J.; Huneau,\
    \ F.; Peiry, J.-L.; Allain, E.; Garreau, A.; Beauger, A. Coupling\nHydrodynamic,\
    \ Geochemical and Isotopic Approaches to Evaluate Oxbow Connection Degree to the\
    \ Main Stream and to Adjunct\nAlluvial Aquifer. J. Hydrol. 2019, 577, 123936.\
    \ [CrossRef]\n53.\nVan Looy, K.; Piffady, J. Metapopulation Modelling of Riparian\
    \ Tree Species Persistence in River Networks under Climate Change.\nJ. Environ.\
    \ Manag. 2017, 202, 437–446. [CrossRef]\n54.\nGiuntoli, I.; Renard, B.; Vidal,\
    \ J.-P.; Bard, A. Low Flows in France and Their Relationship to Large-Scale Climate\
    \ Indices. J. Hydrol.\n2013, 482, 105–118. [CrossRef]\n55.\nChauveau, M.; Chazot,\
    \ S.; Perrin, C.; Bourgin, P.-Y.; Sauquet, E.; Vidal, J.-P.; Rouchy, N.; Martin,\
    \ E.; David, J.; Norotte, T.; et al.\nQuels Impacts Des Changements Climatiques\
    \ Sur Les Eaux de Surface En France à l’horizon 2070? Houille Blanche 2013, 99,\
    \ 5–15.\n[CrossRef]\n56.\nMoatar, F.; Ducharne, A.; Thiéry, D.; Bustillo, V.;\
    \ Sauquet, E.; Vidal, J.-P. La Loire à l’épreuve Du Changement Climatique.\nGéosciences\
    \ 2010, 12, 78–87.\n57.\nAmeglio, T.; Dusotoit-Coucaud, A.; Coste, D.; Adam, B.\
    \ PepiPIAF: A New Generation of Biosensors for Stress Detections in\nPerennial\
    \ Plants. In Proceedings of the ISHS 2010—S15: Climawater, Lisbonne, Portugal;\
    \ 2010; p. 1.\n58.\nZone-Atelier «Territoires Uranifères dans l’Arc Hercynien»—Vie\
    \ Sous Rayonnement Ionisant D’origine Naturelle. Available\nonline: https://zatu.org/\
    \ (accessed on 25 January 2023).\n59.\nBogena, H.R.; Huisman, J.A.; Schilling,\
    \ B.; Weuthen, A.; Vereecken, H. Effective Calibration of Low-Cost Soil Water\
    \ Content\nSensors. Sensors 2017, 17, 208. [CrossRef]\n60.\nFialho, V.; Fortes,\
    \ F. Battery Lifetime Estimation for LoRaWAN Communications. Int. J. Innov. Technol.\
    \ Explor. Eng. IJITEE 2020, 9,\n306–310. [CrossRef]\n61.\nKwasme, H.; Ekin, S.\
    \ RSSI-Based Localization Using LoRaWAN Technology. IEEE Access 2019, 7, 99856–99866.\
    \ [CrossRef]\n62.\nJawhly, T.; Chandra Tiwari, R. Path Loss Modeling: A GIS-Based\
    \ Approach. In Proceedings of the 2020 International Conference\non Computational\
    \ Performance Evaluation (ComPE), Shillong, India, 2–4 July 2020; pp. 054–058.\n\
    63.\nPatil, I. Visualizations with Statistical Details: The “ggstatsplot” Approach.\
    \ J. Open Source Softw. 2021, 6, 3167. [CrossRef]\n64.\nTerray, L.; Royer, L.;\
    \ Sarramia, D.; Achard, C.; Bourdeau, E.; Chardon, P.; Claude, A.; Fuchet, J.;\
    \ Gauthier, P.-J.; Grimbichler, D.; et al.\nFrom Sensor to Cloud: An IoT Network\
    \ of Radon Outdoor Probes to Monitor Active Volcanoes. Sensors 2020, 20, 2755.\
    \ [CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions and data contained\
    \ in all publications are solely those of the individual\nauthor(s) and contributor(s)\
    \ and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility\
    \ for any injury to\npeople or property resulting from any ideas, methods, instructions\
    \ or products referred to in the content.\n"
  inline_citation: (Moiroux-Arvis, 2023)
  journal: Sensors
  limitations: The paper primarily focuses on the technical aspects of the automated
    irrigation management system and does not extensively explore the broader environmental
    and economic implications of its implementation. Additionally, the evaluation
    of the system's performance is based on a limited deployment, and its scalability
    and generalizability to diverse agricultural scenarios may require further investigation.
  pdf_link: https://www.mdpi.com/1424-8220/23/6/2896/pdf?version=1678190005
  publication_year: 2023
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'ConnecSenS, a Versatile IoT Platform for Environment Monitoring: Bring Water
    to Cloud'
  verbatim_quote1: IoT-based precision irrigation management systems can be used to
    monitor environmental conditions, collect data on crop growth and water consumption,
    and optimize irrigation schedules to maximize yields and minimize water usage.
  verbatim_quote2: The proposed system demonstrates the potential of IoT and machine
    learning technologies in improving irrigation management practices in real-world
    settings, contributing to increased crop yields, reduced water consumption, and
    more sustainable agricultural practices.
  verbatim_quote3: '>'
