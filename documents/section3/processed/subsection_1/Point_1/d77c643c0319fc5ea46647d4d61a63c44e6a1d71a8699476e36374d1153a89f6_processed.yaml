- DOI: https://doi.org/10.3390/s19173643
  analysis: 'The paper investigates the use of low-cost and reliable sensors to determine
    when watering is required, based on the data obtained from the moisture sensor.


    One of the most relevant contributions of this work is the design and development
    of a self-powered and autonomous fringing field capacitive sensor, to continuously
    measure soil water content, that is manufactured using a conventional PCB and
    incorporates a porous ceramic material.'
  authors:
  - S.I. Abba
  - Jonah Wadumi Namkusong
  - Jeong-A Lee
  - M.L. Crespo
  citation_count: 48
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nDesign and Performance Evaluation of a Low-Cost\n\
    Autonomous Sensor Interface for a Smart IoT-Based\nIrrigation Monitoring and Control\
    \ System\nSani Abba 1,*\n, Jonah Wadumi Namkusong 1\n, Jeong-A Lee 2,*\nand Maria\
    \ Liz Crespo 3\n1\nDepartment of Mathematical Sciences (Computer Science), Faculty\
    \ of Science, Yelwa Campus, Abubakar\nTafawa Balewa University (Federal University\
    \ of Technology), Dass Road, P.M.B. 0248, Bauchi, Nigeria\n2\nComputer Systems\
    \ Laboratory, Department of Computer Engineering, Chosun University,\nDongku SeoSukDong\
    \ 375, Gwangju 501-759, Korea\n3\nMulti-disciplinary Laboratory (MLab), Abdussalam\
    \ International Centre for Theoretical Physics (ICTP),\nVia Beirut 31, 34014 Trieste,\
    \ Italy\n*\nCorrespondence: saniabba2004@gmail.com (S.A.); jalee@chosun.ac.kr\
    \ (J.-A.L.); Tel.: +82-62-230-7711 (S.A.)\nReceived: 15 June 2019; Accepted: 18\
    \ August 2019; Published: 21 August 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\
    \n\x01\x02\x03\x04\x05\x06\a\nAbstract: Irrigation systems are becoming increasingly\
    \ important, owing to the increase in human\npopulation, global warming, and food\
    \ demand. This study aims to design a low-cost autonomous\nsensor interface to\
    \ automate the monitoring and control of irrigation systems in remote locations,\
    \ and\nto optimize water use for irrigation farming. An internet of things-based\
    \ irrigation monitoring and\ncontrol system, employing sensors and actuators,\
    \ is designed to facilitate the autonomous supply of\nadequate water from a reservoir\
    \ to domestic crops in a smart irrigation systems. System development\nlifecycle\
    \ and waterfall model design methodologies have been employed in the development\
    \ paradigm.\nThe Proteus 8.5 design suite, Arduino integrated design environment,\
    \ and embedded C programming\nlanguage are commonly used to develop and implement\
    \ a real working prototype. A pumping\nmechanism has been used to supply the water\
    \ required by the soil. The prototype provides power\nsupply, sensing, monitoring\
    \ and control, and internet connectivity capabilities. Experimental and\nsimulation\
    \ results demonstrate the ﬂexibility and practical applicability of the proposed\
    \ system, and\nare of paramount importance, not only to farmers, but also for\
    \ the expansion of economic activity.\nFurthermore, this system reduces the high\
    \ level of supervision required to supply irrigation water,\nenabling remote monitoring\
    \ and control.\nKeywords: autonomous sensor interface; internet of things (IoT);\
    \ soil moisture; smart irrigation\nsystem; monitoring and control; fabricated\
    \ prototype; low-cost; Arduino integrated design\nenvironment; soil moisture sensor\n\
    1. Introduction and Related Works\n1.1. Introduction\nToday, farmers usually work\
    \ on large portions of land that are partitioned to grow diﬀerent types\nof crops.\
    \ During the dry season, they practice irrigation farming. There is a shortage\
    \ of water for\nirrigation, and it is not possible for a person to monitor the\
    \ amount of water content in the soil, in order\nto keep the root of the plant\
    \ moist, or to detect it in real time. This study aims to address the water\n\
    shortage problem, that is often faced by farmers using irrigation systems, by\
    \ providing an autonomous\nsensor interface for the remote monitoring and control\
    \ of the supply of water to the soil, thereby\nremoving much of the eﬀort required\
    \ by farmers.\nSensors 2019, 19, 3643; doi:10.3390/s19173643\nwww.mdpi.com/journal/sensors\n\
    Sensors 2019, 19, 3643\n2 of 25\nRecently, the use of intelligent sensory techniques\
    \ has gained a signiﬁcant amount of attention\nby farmers who practice irrigation\
    \ agriculture. These techniques have been applied in agriculture\nto plan numerous\
    \ activities and tasks appropriately, by utilizing limited resources with less\
    \ human\nintervention. Aeroponics is a modern agricultural method that is commonly\
    \ practiced around the\nworld. In this system, plants are cultivated under complete\
    \ control conditions in a growth chamber,\nby way of a light misting of a nutrient\
    \ solution, replacing the soil medium. These nutrient mists are\nejected through\
    \ atomization nozzles on a periodic basis. During the plant cultivation period,\
    \ many\nparameters are optimized, including temperature, humidity, light intensity,\
    \ water nutrient solution\nlevel, pH and EC levels, CO2 concentration, atomization\
    \ time, and atomization interval time, in order\nto enhance plant growth [1].\n\
    With the present technological advancements, there is a greater demand for specialized\
    \ information\nregarding agricultural practices. This is because much of agricultural\
    \ studies are based on exploratory\ninvestigations, on a local scale, using ground\
    \ data by employing a single remote sensor. In addition,\nthe methods employed\
    \ mostly depend on local knowledge of management practices, environment,\nand\
    \ biological materials. These limitations call for a new direction toward smart\
    \ irrigating [2].\nA scheme for the optimal watering of agricultural crops, using\
    \ a wireless sensor network, has been\npreviously presented by the authors [3].\
    \ In that study, the main goal was to design and develop a control\nsystem using\
    \ a sensor node in the crop ﬁeld, with data management and application control,\
    \ through a\nsmart phone and web application interface. The proposed scheme provides\
    \ three components: (1) The\nhardware control box, (2) web-based application,\
    \ and (3) mobile application. In addition, the system\nallows either, automatic,\
    \ or manual control, by the user. The results showed the usefulness of this\n\
    system in agriculture, by reducing cost and increasing agricultural productivity.\n\
    The use of internet of things (IoT) technology for agricultural practices has\
    \ been demonstrated in\nmonitoring citrus soil moisture and nutrients, the integration\
    \ of fertilization and an irrigation decision\nsupport system. Signiﬁcant achievements\
    \ have been made. These include, a single-point, multi-layer\ncitrus soil temperature\
    \ and humidity detection, wireless sensor node and citrus precision fertilization,\n\
    and the construction of an irrigation management decision support system. This\
    \ approach can help\nfarmers improve the use of fertilizers in the irrigation\
    \ system. In addition, it increases the precision\nof citrus production, and reduces\
    \ labor costs and pollution, caused by the application of chemical\nfertilizers\
    \ to the soil [4].\nIn a smart irrigation system, the design and fabrication of\
    \ a self-powered and autonomous\nfringing-ﬁeld capacitive sensor, used to measure\
    \ soil water content, is possible. This kind of sensor is\nmanufactured using\
    \ a conventional printed circuit board (PCB) and incorporates a porous ceramic\n\
    material. The design allows the energy-harvesting module to operate, based on\
    \ the condition that\nthe micro-sprinkler spinner irrigates the soil, and the\
    \ supercapacitor is fully charged to 5 V in\napproximately three hours during\
    \ the ﬁrst irrigation. Subsequently, with the supercapacitor fully\ncharged, the\
    \ system can supply power from the supercapacitor for approximately 23 d, without\
    \ any\nenergy being harvested [5].\nAgricultural practices have been the most\
    \ important means of living over the course of human\nevolution. Hence, humans\
    \ depend on a wide range of agricultural products in nearly every facet of\nlife.\
    \ The process involved in the artiﬁcial application of water to farmlands, in\
    \ assisting the growth\nof plants, is referred to as irrigation agriculture. This\
    \ process has become a great advantage in\ncomplementing agricultural activities,\
    \ especially in the dry season. Irrigation plays a vital role in\nadvancing the\
    \ agricultural, educational, and economic growth of the nation as a whole. The\
    \ traditional\nmethod of farming is undertaken manually, by engaging individual\
    \ farmers in almost all stages of\ncrop development and monitoring and control\
    \ of the processes involved at all stages of irrigation\nfarming. From time-to-time,\
    \ these processes are replaced with semi-automated and automated\nprocesses, to\
    \ provide assistance to farmers and improve agricultural productivity. The four\
    \ traditional\nirrigation practices are ditch irrigation, drip irrigation, terraced\
    \ irrigation, and the use of a sprinkler\nsystem. Owing to the increased demand\
    \ for agricultural raw materials for industrial use and human\nSensors 2019, 19,\
    \ 3643\n3 of 25\nconsumption, irrigation tends to attract a signiﬁcant amount\
    \ of attention, particularly in the developed\nand underdeveloped world. In the\
    \ traditional system, the farmers apply water to plants mechanically\nat diﬀerent\
    \ stages of plant development, to assist in the growth and development lifecycle.\
    \ However,\nan inadequate supply of water to plants aﬀects plant growth, and the\
    \ scarcity of water has become\na global issue, particularly in the irrigation\
    \ system, which is speciﬁcally caused by global warming.\nVarious human activities,\
    \ including the burning of fuel, industrial activities, and deforestation have\n\
    been the major causes of the depletion of the ozone layer and inadequate rainfall,\
    \ particularly aﬀecting\nplant growth and development. The traditional approach\
    \ to irrigation, involves the use of watering\ncans and water channels, which\
    \ must be manually monitored and controlled. This causes a signiﬁcant\namount\
    \ of water to be wasted and misused. Therefore, an autonomous sensor interface,\
    \ for a smart\nIoT-based irrigation system, must have components that both monitor\
    \ and control the water levels\navailable to plants, without failure or the need\
    \ for human intervention [6].\nAgricultural practices use 85% of the available\
    \ freshwater resources worldwide. The high demand\nand consumption of water, owing\
    \ to rapid human population growth and agricultural practices are the\ndominant\
    \ factors of water consumption. Accordingly, urgent attention is required to create\
    \ techniques\nand strategies, based on science and technology, in order to maintain\
    \ and sustain the use of water for\nagricultural development. The idea of an autonomous\
    \ sensor interface for an IoT-based irrigation\nmonitoring and control system\
    \ results from plant watering management requirements. Hence, modern\nInternet\
    \ technology is essential for resolving the challenges of the limited supply of\
    \ water to farms,\nand providing better lasting solutions for irrigation management\
    \ and control. A wireless sensor\nnetwork (WSN) can be used in conjunction with\
    \ IoT for a smart irrigation system. Therefore, the use of\nWSN can provide the\
    \ means of communication, computation, and sensing information from near and\n\
    remote places. The combination of IoT and sensor network technology facilitates\
    \ the proper use and\nmanagement of water resources for a smart irrigation system.\
    \ This will help boost smart agricultural\npractices and produce higher crop yields\
    \ annually [7,8].\nThe salient contributions of this article are as follows:\n\
    1.\nA low-cost autonomous sensor interface is proposed to determine whether watering\
    \ is required\nfor plants, based on the information obtained from the monitoring\
    \ and control of the soil\nwater content.\n2.\nA monitoring and control system\
    \ (implemented prototype) that supplies the amounts of water,\nrequired by plants\
    \ to avoid drying, is designed.\n3.\nThe system should stop the water supply when\
    \ the required amount has been supplied to plants.\n4.\nA convenient sensor-based\
    \ interface architecture and web portal are provided so that the user\ncan monitor\
    \ the system remotely.\nThis study is of paramount importance, not only to farmers\
    \ that practice irrigation farming, but\nalso to the expansion of economic growth\
    \ in general. This method encourages irrigation farming by\nreducing the high\
    \ levels of supervision required by farms to ensure the supply of water to farms,\n\
    by using wireless sensor network and IoT technology. The rest of the article is\
    \ organized as follows:\nSection 2 discusses the system design methodology; Section\
    \ 3 discusses the system implementation;\nSection 4 presents the experimental\
    \ results and discussion; and Section 5 provides the concluding\nremarks and describes\
    \ future work.\n1.2. Related Works\nMany studies have contributed toward a smart\
    \ irrigation system. The high demand for food\nrequires rapid improvement in food\
    \ production technology. Several researchers have made signiﬁcant\neﬀorts to ﬁnd\
    \ a solution for irrigation farming. However, these eﬀorts have yet to provide\
    \ an eﬃcient\nsolution to the problems of the present irrigation system.\nThe\
    \ review paper by Imran et al. [1] contributes signiﬁcant knowledge regarding\
    \ early fault\ndetection and diagnosis in Aeroponics, using wireless sensor networks.\
    \ The Aeroponics technique\nSensors 2019, 19, 3643\n4 of 25\nallows the farmer\
    \ to monitor several parameters, without using laboratory instruments, and the\
    \ farmer\nhas the ability to control the entire system remotely. In addition,\
    \ this technique provides valuable\ninformation, essential for plant researchers\
    \ and a greater understanding of how the key parameters of\nAeroponics relate\
    \ to plant growth in the system.\nThe review paper by Agnés et al. [2] provides\
    \ an extensive study of remote sensing for crop\nmapping practices. The authors\
    \ emphasize that there is a need to have specialized information regarding\nagricultural\
    \ practices. The study is categorized into three groups of practices: Crop succession,\
    \ cropping\npattern, and cropping techniques. The authors observed that the majority\
    \ of studies were based on\nexploratory investigations, tested on a local scale,\
    \ using ground data by employing a single remote\nsensor. In addition, the methods\
    \ employed mostly depend on local knowledge, based on management\npractices, environment,\
    \ and biological materials. These limitations can be used to identify future\n\
    research directions, which include the use of land stratiﬁcation, multi-sensor\
    \ data combination, and\nexpert knowledge-driven methods. The authors concluded\
    \ by proposing that new spatial technologies,\nparticularly the sentinel constellation,\
    \ are anticipated to advance the monitoring of cropping practices\nin the context\
    \ of food security, and to provide the best administration of agro-environmental\
    \ issues.\nAn interesting system was presented for the optimal watering of agricultural\
    \ crops, which employ the\nuse of a wireless sensor network [3]. The proposed\
    \ system provides the capabilities of manual and\nautomatic control of crops by\
    \ the application user.\nZigBee technology, artificial intelligence, and decision\
    \ support technology have also been\nemployed [4] to monitor the moisture content\
    \ of citrus soil. This study provided insight into the\napplication of IoT for\
    \ agricultural practices in the monitoring of citrus soil moisture and nutrients,\n\
    and the integration of fertilization, as well as an irrigation decision support\
    \ system. Remarkable\nadvancements were made, including single-point multi-layer\
    \ citrus soil temperature and humidity\ndetection, wireless sensor nodes and citrus\
    \ precision fertilization, and an irrigation management decision\nsupport system.\
    \ The results of their study indicated that the system can help a farmer improve\
    \ the use\nof fertilizers in an irrigation system. In addition, the system increases\
    \ the precision of citrus production,\nand reduces the labor cost and pollution\
    \ caused by the application of chemical fertilizers to the soil.\nThe design and\
    \ fabrication of a self-powered and autonomous fringing ﬁeld capacitive sensor,\n\
    to measure soil water content, was presented [5].\nThe sensor used was manufactured\
    \ using a\nconventional PCB and in which a porous ceramic material was incorporated.\
    \ To obtain the sensor\nreading, the authors used a circuit containing a 10-kHz\
    \ triangle wave generator, AC ampliﬁer, precision\nrectiﬁer, and micro-controller.\
    \ This approach developed a complete irrigation control system that\nintegrates\
    \ the sensor, an energy-harvesting module, composed of a micro-generator installed\
    \ on top of\na micro-sprinkler spinner, and a DC/DC converter circuit that charges\
    \ a 1-F supercapacitor. The design\nallows the energy-harvesting module to operate\
    \ on the condition that the micro-sprinkler spinner\nirrigates the soil, and the\
    \ supercapacitor is fully charged to 5 V, in approximately 3 h, during the ﬁrst\n\
    irrigation. Subsequently, with the super-capacitor fully charged, the system was\
    \ capable of supplying\npower from the super-capacitor for approximately 23 d,\
    \ without any energy being harvested.\nThe Yogesh et al. study [6] demonstrates\
    \ that the watering system controller sends transitory\ninformation. It presents\
    \ the output from the sensor and presents the possibility of being programmed\n\
    to enhance system performance. The moisture sensor connects to devices via a remote\
    \ network and\ntransmits the sensed information, within a time interval, synchronized\
    \ to the Internet, to provide\nguidelines on how the system is to be operated.\
    \ The soil moisture sensor is controlled by the watering\nsystem if the solenoid\
    \ valve is in an open state. These two components are the major building blocks\n\
    of irrigation system control. Therefore, the systematic control of the irrigation\
    \ ﬁeld should be adopted.\nFor instance, the moisture sensor should operate in\
    \ a controlled range, e.g., when the moisture value is\nlower or higher than the\
    \ set threshold value, the solenoid valve controls the operation by opening, or\n\
    closing the valve, respectively.\nThe Arduino board was utilized in [7,8], which\
    \ consists of an ATmega 328 microcontroller.\nThe microcontroller is programmed\
    \ in such a way as to sense the moisture level of the plants.\nSensors 2019, 19,\
    \ 3643\n5 of 25\nThe design was undertaken to supply the required amount of water\
    \ to the plants. The system is\nutilized for plant maintenance and monitoring\
    \ of the entire farm land. Thus, the plants can be watered\ntwice daily, in the\
    \ morning and the evening. Hence, the use of a microcontroller plays a vital role\
    \ in\nthe watering and monitoring of the plants on a daily basis.\nMarie et al.\
    \ [9] reported that the sensed data, regarding the quantity of water content level\
    \ in\nthe soil, that was obtained from a moisture sensor, can signiﬁcantly improve\
    \ the agricultural yield.\nThis would motivate researchers to perform extensive\
    \ studies in various ﬁelds of interest that are\nrelated to the irrigation systems.\
    \ A signiﬁcant advancement in measuring the development of plant\ngrowth is the\
    \ minimization of the costs of irrigation management, particularly for a mechanized\n\
    watering system. This approach would signiﬁcantly reduce water wastage and lessen\
    \ the amount of\nhuman power required for the continuous monitoring of the source\
    \ of water supply in an irrigation\nsystem. The use of a feedback-based system\
    \ would eﬃciently help track and manage resources,\ncompared with open-loop systems,\
    \ that are at the expense of higher complexities. Thus, soil moisture\nis diﬃcult\
    \ to correctly measure, and the target moisture content levels are diﬃcult to\
    \ sustain.\nThe continuous increase in the demand for agricultural products and\
    \ raw materials has necessitated\na rapid improvement in the development of food\
    \ technology [10]. Therefore, only agricultural practices\ncan provide the solution\
    \ to this problem. The use of an automated irrigation system has triggered\nthe\
    \ continuous demand for agricultural farm products. The available water resources\
    \ are scarce,\nand the inadequacy of land and water has resulted in a decrease\
    \ in the volume of water worldwide.\nFarmers normally employ an irrigation system\
    \ during the dry season. In irrigation agriculture, two\nimportant aspects must\
    \ be considered: Information on the fertility of the soil, and; the content of\n\
    soil moisture. Famers have employed diﬀerent methods and techniques in an irrigation\
    \ system to\nreduce the dependence on rainfall as a major source of water supply\
    \ to the soil. The most commonly\nused technique is the use of electrical energy,\
    \ combined with an on-and-oﬀ scheduling control system\nto power the irrigation\
    \ system. Other available techniques operate based on atmospheric climate\nconditions.\
    \ The use of smart microcontrollers, used to sense the climatic conditions and\
    \ determine the\nsupply of water in real-time, is an important technique for a\
    \ smart irrigation system. This approach\nemploys the following: Internet-based\
    \ monitoring using servers; general packet radio service modem;\nglobal system\
    \ for mobile communication; and wireless monitoring using Bluetooth and WSNs.\n\
    Many farmers require ﬁnancial aid to innovate their agricultural practices. Numerous\
    \ master\nframeworks have been provided to assist farmers boost agricultural productivity.\
    \ Nevertheless, these\nprimary frameworks depend on a base-learning approach.\
    \ Therefore, a master system framework,\nthat integrates IoT technology, is highly\
    \ recommended, as it will exploit the continuously generated\nreal-time data [11].\n\
    Gabriel et al. [12] emphasized that the majority of farmers cannot aﬀord to use\
    \ sophisticated\ntechnologies for agricultural practices. It is now of paramount\
    \ importance that more eﬀective, cheaper\nsolutions need to be implemented. The\
    \ study proposed building virtual organizations of agents, that\ncan communicate\
    \ between each other, while monitoring crops in a farmland. Simple and low-cost\n\
    sensor architecture helps farmers monitor and optimize the growth of their crops,\
    \ by restructuring\nthe amount of resources the crops require at each stage of\
    \ their development. The approach employs\nthe use of Platform for automatic coNstruction\
    \ of orGanizations of intElligent agents (PANGEA)\narchitecture to overcome the\
    \ limitations of hardware and processing capabilities. The designed system\nis\
    \ capable of collecting heterogeneous information from its environment using sensors\
    \ for temperature,\nsolar radiation, humidity, pH, moisture, and wind. The main\
    \ ﬁnding of their approach is that the\nsolution can merge heterogeneous data\
    \ from sensors and produce a response adapted to each situation.\nThe authors\
    \ presented a case study to validate the proposed system. However, its drawback\
    \ is that it is\nnot economically feasible to use a TV screen to monitor the condition\
    \ of crops in this context. Further,\nthe monitored data are presented in real\
    \ time, which may aﬀect the monitoring of the crop moisture\nlevel, thereby resulting\
    \ in poor crop yield.\nSensors 2019, 19, 3643\n6 of 25\nThe design of SmartFarmNet,\
    \ which is an IoT-based platform that provides the services of\ncollection of\
    \ environmental, soil, fertilization, and irrigation data, was presented in [13].\
    \ The system\nautonomously correlates such data, and ﬁlters out invalid data from\
    \ the viewpoint of evaluating crop\nperformance, providing forecasting information,\
    \ and formulating recommendations for a speciﬁc\nfarmland. The proposed SmartFarmNet\
    \ possesses the capability of integrating virtually any IoT\ndevice, including\
    \ commercially available sensors, cameras, and weather stations, and has the ability\
    \ to\nstore the captured data in the cloud for performance analysis and recommendations.\
    \ In conclusion,\nSmartFarmNet was presented as the ﬁrst and, presently, the largest\
    \ system in the world to oﬀer crop\nperformance analysis and recommendations.\n\
    Chandan and Pramitee [14] presents a smart irrigation system. The system is cost\
    \ eﬀective and\naﬀordable by middle-class farmers. The 21st century is characterized\
    \ by automation technology that\nplays an important role in human life. This technology\
    \ allows devices to be controlled automatically\nto provide comfort, reduce energy\
    \ consumption, increase eﬃciency and save time. The machine\nautomation and control\
    \ used by the modern industries are not cost eﬀective and cannot be used by\n\
    the local farmers. In contrast, their work presents a low-cost irrigation system\
    \ that can be aﬀorded by\nIndian farmers. The paper’s main objective is to automatically\
    \ control the water motor that selects the\ndirection of water ﬂow in a pipe with\
    \ the aid of soil moisture sensor. The information regarding the\noperation of\
    \ the motor, and the direction of the water ﬂow in the farmland, is sent by SMS\
    \ to the users’\nmobile phones.\nKarthikeswari and Mithraderi [15] designed a\
    \ low-cost automated irrigation system using wireless\nsensor network and GPRS\
    \ module. The work was aimed at reducing the manual monitoring of the\nfarmland\
    \ and using GPRS technology to provide information to users. The system can determine\n\
    whether free electricity supply is being used or electric motors are used for\
    \ pumping water to the\nfarmland. This will prevent misuse of the electricity\
    \ supply to pumping mechanisms. And hence,\nreduces water wastage.\nA review of\
    \ irrigation system and economical and generic automatic irrigation system, using\n\
    GSM-Bluetooth for irrigation remote monitoring system was presented by Purnima\
    \ and Reddy [16].\nThe proposed system possesses the features of low cost, low\
    \ power consumption for remote monitoring\nand control of sensors, using SMS and\
    \ GSM module. The proposed system notiﬁes the users about any\nabnormal circumstance\
    \ that may arise. These include lower moisture content, temperature rise, CO2\n\
    concentration etc. The information regarding these parameters is sent to the Famer’s\
    \ mobile phone via\nGSM or Bluetooth modules for appropriate action.\nArchana\
    \ and Priya [17] presents an automatic plant watering system. The research work\
    \ focuses on\nthe water scarceness and the need for a smart and eﬃcient way of\
    \ irrigation. The authors implemented\na humidity sensor to detect the soil humidity\
    \ in the agricultural farmland. The system supplies the\nadequate water requirement\
    \ to the irrigated farmland. The authors employed the use of microcontroller\n\
    to supply water to the irrigation ﬁeld. Sensors are buried in the soil to sense\
    \ the water content of the\nsoil. The sensors are activated when there is a presence,\
    \ or no presence, of water in the ﬁeld. Once the\nsensor identiﬁes dry soil, it\
    \ activates the microcontroller and pump water to the ﬁeld.\nFerrarezi et al.\
    \ [18] developed automated irrigation controllers that employ the use of capacitance\n\
    sensors and data loggers to supply water to plants on demand. The limitation of\
    \ the proposed approach\nwas the cost implications, due to data loggers and software\
    \ programs, to build and control the system\ncontrollers. However, the use of\
    \ low-cost open-source microcontrollers provides a better way to\nbuild a sensor-based\
    \ irrigation controller for irrigation agriculture and domestic use. The authors\n\
    built an automated irrigation system employing microcontroller, capacitance moisture\
    \ sensors, and\nsolenoid valves. The proposed system eﬃciently monitored and controlled\
    \ the volumetric water\ncontent thresholds of (0.2, 0.3, 0.4, and 0.5 m3·m−3)\
    \ with Panama red hibiscus (Hibiscus acetosella) in\na peat substrate. The system\
    \ operates both on regular 24 V alternating current solenoid valves and\nlatching\
    \ 6 V to 18 V direct current solenoid valves. The technology employed has an average\
    \ cost.\nThe microcontroller used and accessories cost $107, four capacitance\
    \ soil moisture sensors cost $440,\nSensors 2019, 19, 3643\n7 of 25\nand four\
    \ solenoid valves cost $120. The total cost an estimated value of $667 US Dollars.\
    \ However,\nour proposed approach is more cost eﬀective, and is only valued at\
    \ $79 USD. Other approaches\nare the automatic irrigation based on monitoring\
    \ plant transpiration, hyperspectral remote sensing\nfor detecting soil salinization\
    \ using ProSpecTIR-VS aerial imagery and sensor simulation, and high\ntemperature\
    \ AlGaN/GaN membrane-based pressure sensors are provided by the respective authors\n\
    in [19–21].\nThis study attempts to address the limitations of the above-mentioned\
    \ approaches by their\nrespective authors. Accordingly, this work could identify\
    \ the following limitations, which we intend to\nrectify: (1) the use of sprinklers\
    \ as a means of water supply to the soil; (2) the use of a semi-automated\nsystem,\
    \ which does not monitor or control the soil moisture content, and the lack of\
    \ descriptive analysis\nto assist the farmer in tracking the moisture content\
    \ level of the soil on the Internet; and (3) a low-cost\nand ﬂexible design architecture\
    \ for real-time monitoring and control of soil moisture content.\n2. Autonomous\
    \ Sensor Interface System Architecture and Design\n2.1. Autonomous System\nAn\
    \ autonomous system is deﬁned as a system that detects its operating environment\
    \ and senses\nthe operating parameters, changes its operating behavior in that\
    \ environment, and adapts to the\nchanges and events occurring in that environment.\
    \ Autonomic systems provide the capabilities to\nsolve system complexities by\
    \ using technology to manage and control dynamical systems. These types\nof systems\
    \ operate with independent and pre-deﬁned conditions, protocols, and policies,\
    \ without\nhuman intervention. Autonomous systems can conﬁgure, optimize, manage,\
    \ and control their actions\naccording to predetermined conditions, rules, and\
    \ learning the environments in a given period of\ntime. The origin of the word\
    \ autonomic comes from the ﬁeld of human biology. For example, the\nhuman body\
    \ consists of an autonomic nervous system that monitors and controls the human\
    \ heartbeat,\ncheck blood sugar levels, and regulates and maintains body temperature\
    \ to normal without human\nintervention. An autonomous sensor interface can be\
    \ employed in smart irrigation agriculture to\nsolve the problem of water shortage\
    \ to the plants. Autonomous systems provide the capabilities\nof self-managing\
    \ its operation by using appropriate actions in response to situational changes\
    \ that\narise in a dynamic environment. The main objective of an autonomous system\
    \ is to monitor and\ncontrol the loop that generates and collects detailed information\
    \ from the surroundings and supply the\nappropriate action. As outlined in [22,23],\
    \ an autonomous system has four characteristics as follows:\n1.\nSelf-Conﬁguration:\
    \ This is the ability of the autonomous system to adapt dynamically to\nenvironmental\
    \ and situational changes, based on pre-deﬁned protocols, and principles that\n\
    govern the operating environment. Self-conﬁguration provides continuous signal\
    \ strength in\nsensing environmental parameters and enhances sensor-node productivity.\
    \ This will provide\nscalability and ﬂexibility in the sensor network interface.\n\
    2.\nSelf-Healing: This feature provides the means of autonomous discovery and\
    \ fault detection.\nIt provides the ability to discover, diagnose, and respond\
    \ to unpredicted situational changes that\nmay occur in a dynamic environment.\
    \ Self-healing detects sensor component failure and initiates\na repair technique\
    \ without aﬀecting system workability. The system repairing mechanisms makes\n\
    it resilient against errors and faults.\n3.\nSelf-Optimization: This feature provides\
    \ autonomous monitoring and control to facilitate the fair\nand optimal use of\
    \ limited resources. Self-optimizing sensor components possess capabilities\n\
    of controlling themselves to attain the stated goals and objectives in a given\
    \ environment.\nThe optimization techniques are the reallocation and rescheduling\
    \ of resources caused by arising\nchanges in the dynamic environment, to enhance\
    \ the overall sensor network utilization, real-time\ntransmission, and retransmission\
    \ of sensor data.\n4.\nSelf-Protection: This feature provides the capabilities\
    \ of anticipating, identifying, and providing\nmechanisms for protection against\
    \ threats and various kinds of attacks in autonomous systems.\nSensors 2019, 19,\
    \ 3643\n8 of 25\nThis feature enables the autonomous system to detect malicious\
    \ and suspicious behavior within the\nsystem and take reactive measures to counterattack\
    \ them and make the system less vulnerable to\nthreats. Furthermore, this feature\
    \ provides security measures and policies to protect components\nand the entire\
    \ system against all internal or external threats and vulnerability attacks.\n\
    In summary, these four characteristics of autonomous systems are employed in the\
    \ design and\nimplementation of an autonomous sensor interface for IoT-based irrigation\
    \ monitoring and control\nsystems for agricultural use. The system can conﬁgure,\
    \ heal, optimize, and protect its operation, and\nenhance the supply of water\
    \ to the plant to increase agricultural production.\n2.2. Autonomous Sensor Interface\
    \ System Architecture\nThe low-cost autonomous sensor interface for the design\
    \ of smart irrigation system architecture\nconsists of the input and output processes,\
    \ as illustrated in Figure 1. The entire system operation\nis controlled by the\
    \ Arduino Uno board, which is programmed on the behavior of other system\ncomponents\
    \ [24]. The system consists of the following eight units: Power supply; water\
    \ pump; WiFi\nmodule; soil moisture sensor; Arduino board; temperature, pH, and\
    \ humidity sensors; user interface;\nand a 16 × 2 liquid crystal display (LCD)\
    \ unit. The combination of these components makes the\nintegration of the system\
    \ easier to debug and provides optimal performance. The sensor values are\nuploaded\
    \ on the Internet at 5-min intervals. The power supply unit provides a continuous\
    \ supply of\nelectricity to the smart irrigation system; it utilizes a 12 V transformer\
    \ and a relay circuit. The system\nuses a generic AC 220 V to 12 V DC step down\
    \ power supply module for Arduino generic PCs to power\nthe board and the water\
    \ Pump. A 12 V relay circuit is used to regulate and control the water pump.\n\
    The board can be supplied with power, either from the DC power jack (7–12 V),\
    \ the USB connector\n(5 V), or the VIN pin of the board (7–12 V). The power output\
    \ is supplied to the Arduino board and the\nwater pumping unit. The water pumping\
    \ unit provides a mechanism by which adequate water in due\nproportion is supplied\
    \ to the plants. This mechanism is programmed, controlled, and monitored by the\n\
    Arduino Uno board. The Arduino board unit is the main monitoring and control unit.\
    \ The Arduino\nUno is a microcontroller board based on the ATmega328. It has 14\
    \ digital input/output pins, 6 analog\ninputs, a 16-MHz ceramic resonator, and\
    \ a universal serial board. This unit is programmed using\nembedded C language\
    \ to provide the necessary control signals to manage the entire irrigation system.\n\
    The moisture sensor unit is responsible for measuring the soil moisture content\
    \ of the water level of the\nsoil, using the sensor uses capacitance to measure\
    \ the water content of the soil. This is essential in smart\nagricultural practices,\
    \ as it helps farmers monitor and control the smart irrigation system. In practice,\n\
    this sensor, which is ﬂexible and conﬁgurable, is inserted into the irrigation\
    \ farmland i.e., soil to be\nexamined and the volumetric water content of the\
    \ soil is reported in percentage. The user interface\nunit provides a convenient\
    \ interface to access and programme the sensors. The system users have the\nability\
    \ to interact with the system, using desktop, laptop, and smartphone devices.\
    \ The LCD unit is\na medium through which the microcontroller communicates with\
    \ the user. The LCD unit is used to\ndisplay sensed data readings from the sensors.\
    \ The WiFi module unit is a self-contained system-on-chip\n(SoC) device with an\
    \ integrated transmission control protocol/internet protocol (TCP/IP) stack, that\n\
    provides access to a WiFi network. It has the capability of hosting an application\
    \ or oﬄoading all WiFi\nnetworking functions from another application processor.\
    \ The module is a wireless local area network\n(WLAN) module with devices, based\
    \ on IEEE standards. Furthermore, WiFi-compatible devices can\nconnect to the\
    \ Internet via a WLAN and wireless access point [25,26].\nSensors 2019, 19, 3643\n\
    9 of 25\nSensors 2019, 19, x FOR PEER REVIEW \n9 of 25 \n \n \nFigure 1. Low-cost\
    \ sensor interface for smart IoT-based irrigation monitoring and control system\
    \ \narchitecture. \n2.3. Real-Time System Monitoring and Control \nFigure 2 illustrates\
    \ the real-time device monitoring and control system. The connected sensor \n\
    components and ports are initialized to display the start-up information on the\
    \ 16 × 2 LCD screen. \nThe microcontroller subsequently attempts to establish\
    \ connection with the different components of \nthe system. As soon as the connection\
    \ is established, the WiFi module and moisture sensors will \nauthenticate the\
    \ established connection and start reading the moisture content level of the soil.\
    \ The \nreadings are displayed on the LCD screen through the user interface window\
    \ of the Arduino serial \nmonitor. In situation whereby the sensor readings are\
    \ not obtained, i.e., there is no established \nconnection, a retransmission is\
    \ possible. The real-time water level (moisture sensor) module is \naccessed through\
    \ the Internet at the www.thingspeak.com interface to obtain the monitoring values\
    \ \nfrom the sensors. The date and time when the data was sensed are recorded.\
    \ The two sensors \nautonomously obtain the measurement of the indicated parameters,\
    \ such as temperature, humidity, \nand moisture level. The recorded measurements\
    \ are saved in the Internet server at thingspeak.com, \nalong with the date and\
    \ timestamp. After the recorded data are received, a descriptive chart is plotted\
    \ \nto indicate the moisture level of the soil. The system is programmed to switch\
    \ the pump ON and OFF, \nbased on the soil moisture content, using the embedded\
    \ C programming language, as illustrated in \nFigure 2. \nFigure 1. Low-cost sensor\
    \ interface for smart IoT-based irrigation monitoring and control system architecture.\n\
    2.3. Real-Time System Monitoring and Control\nFigure 2 illustrates the real-time\
    \ device monitoring and control system. The connected sensor\ncomponents and ports\
    \ are initialized to display the start-up information on the 16 × 2 LCD screen.\n\
    The microcontroller subsequently attempts to establish connection with the diﬀerent\
    \ components\nof the system. As soon as the connection is established, the WiFi\
    \ module and moisture sensors\nwill authenticate the established connection and\
    \ start reading the moisture content level of the soil.\nThe readings are displayed\
    \ on the LCD screen through the user interface window of the Arduino\nserial monitor.\
    \ In situation whereby the sensor readings are not obtained, i.e., there is no\
    \ established\nconnection, a retransmission is possible. The real-time water level\
    \ (moisture sensor) module is accessed\nthrough the Internet at the www.thingspeak.com\
    \ interface to obtain the monitoring values from the\nsensors. The date and time\
    \ when the data was sensed are recorded. The two sensors autonomously\nobtain\
    \ the measurement of the indicated parameters, such as temperature, humidity,\
    \ and moisture\nlevel. The recorded measurements are saved in the Internet server\
    \ at thingspeak.com, along with the\ndate and timestamp. After the recorded data\
    \ are received, a descriptive chart is plotted to indicate the\nmoisture level\
    \ of the soil. The system is programmed to switch the pump ON and OFF, based on\
    \ the\nsoil moisture content, using the embedded C programming language, as illustrated\
    \ in Figure 2.\nSensors 2019, 19, 3643\n10 of 25\nSensors 2019, 19, x FOR PEER\
    \ REVIEW \n10 of 25 \n \n \nFigure 2. Real-time system monitoring and control.\
    \ \n2.4. System Modeling and Simulation \nThe low-cost sensor interface, for the\
    \ smart irrigation system, is simulated using the Proteus 8.5 \ndesign suite,\
    \ Arduino Uno integrated development environment (IDE), and embedded C \nprogramming\
    \ language. Proteus 8.5 Professional is an efficient tool and a high-performance\
    \ design \nenvironment for simulating technical computing [25]. It integrates\
    \ computation and the virtual \nrepresentation of the systematic operation of\
    \ the system, displaying how the constructed system \ncomponents will work. Arduino,\
    \ as the development board, provides an IDE, by which source codes \ncan be written,\
    \ verified, and uploaded to the microcontroller. Arduino is an open-source electronics\
    \ \nplatform that provides hardware/software co-design tools for designing embedded\
    \ applications [24]. \nThe embedded C programming language is suitable for the\
    \ design of embedded systems and sensor \ncomponents. The codes, written in embedded\
    \ C language, allow the circuit or devices to achieve their \noptimal performance.\
    \ In addition, it has a failure rate of less than one percent when developed to\
    \ \ninteract with hardware components. The Proteus 8.5 is a professional PCB design\
    \ tool that can be \nintegrated with a shape-base auto router; it provides features,\
    \ such as fully featured schematic \ncapture, highly configurable design rules,\
    \ and interactive SPICE circuit simulation. Proteus design \nFigure 2. Real-time\
    \ system monitoring and control.\n2.4. System Modeling and Simulation\nThe low-cost\
    \ sensor interface, for the smart irrigation system, is simulated using the Proteus\
    \ 8.5\ndesign suite, Arduino Uno integrated development environment (IDE), and\
    \ embedded C programming\nlanguage. Proteus 8.5 Professional is an eﬃcient tool\
    \ and a high-performance design environment\nfor simulating technical computing\
    \ [25]. It integrates computation and the virtual representation\nof the systematic\
    \ operation of the system, displaying how the constructed system components will\n\
    work. Arduino, as the development board, provides an IDE, by which source codes\
    \ can be written,\nveriﬁed, and uploaded to the microcontroller. Arduino is an\
    \ open-source electronics platform that\nprovides hardware/software co-design\
    \ tools for designing embedded applications [24]. The embedded\nC programming\
    \ language is suitable for the design of embedded systems and sensor components.\n\
    The codes, written in embedded C language, allow the circuit or devices to achieve\
    \ their optimal\nperformance. In addition, it has a failure rate of less than\
    \ one percent when developed to interact\nwith hardware components. The Proteus\
    \ 8.5 is a professional PCB design tool that can be integrated\nwith a shape-base\
    \ auto router; it provides features, such as fully featured schematic capture,\
    \ highly\nconﬁgurable design rules, and interactive SPICE circuit simulation.\
    \ Proteus design combines the ISIS\nSensors 2019, 19, 3643\n11 of 25\nschematic\
    \ capture and ARES PCB layout programs to provide a powerful, integrated, and\
    \ easy-to-use\ntool suite for educational and professional PCB design. Figure\
    \ 3 illustrates the basic schematic\ncomponents of the autonomous sensor interface\
    \ for the smart IoT-based irrigation system. The moisture\nsensor, 16 × 2 LCD,\
    \ transformer, light-emitting diode (LED), diode, Arduino Uno (microcontroller),\n\
    water pump, power regulator, relay circuit, and many other devices constitute\
    \ a complete irrigation\nmonitoring and control system. Another approach is the\
    \ use of a ﬁeld-programmable gate array and\nsystem-on-chip for the monitoring\
    \ and control system [26–28].\nSensors 2019, 19, x FOR PEER REVIEW \n11 of 25\
    \ \n \ncombines the ISIS schematic capture and ARES PCB layout programs to provide\
    \ a powerful, \nintegrated, and easy-to-use tool suite for educational and professional\
    \ PCB design. Figure 3 illustrates \nthe basic schematic components of the autonomous\
    \ sensor interface for the smart IoT-based irrigation \nsystem. The moisture sensor,\
    \ 16 × 2 LCD, transformer, light-emitting diode (LED), diode, Arduino \nUno (microcontroller),\
    \ water pump, power regulator, relay circuit, and many other devices constitute\
    \ \na complete irrigation monitoring and control system. Another approach is the\
    \ use of a field-\nprogrammable gate array and system-on-chip for the monitoring\
    \ and control system [26–28]. \nFigure 3. Schematic diagram of a smart irrigation\
    \ modeling and simulation system. \n2.5. The Moisture Sensor Calibration \nHerein,\
    \ we present the sensor calibration technique, used in this study. A two-point\
    \ calibration \nmethod was employed [29–31] to calibrate the moisture sensor input.\
    \ The Arduino board is \nconfigured to takes sensor readings simultaneously for\
    \ 5 s during the system startup. The system \nthen monitors the highest and lowest\
    \ values of the sensor readings. These sensor readings, taken \nduring the first\
    \ five seconds, are termed the minimum and maximum of the anticipated values for\
    \ \nthe readings taken during the system loop. A two-point calibration technique\
    \ is applied to the raw \nmoisture sensor outputs. This approach is very important\
    \ to re-scaling the output and has the \nFigure 3. Schematic diagram of a smart\
    \ irrigation modeling and simulation system.\n2.5. The Moisture Sensor Calibration\n\
    Herein, we present the sensor calibration technique, used in this study. A two-point\
    \ calibration\nmethod was employed [29–31] to calibrate the moisture sensor input.\
    \ The Arduino board is conﬁgured\nto takes sensor readings simultaneously for\
    \ 5 s during the system startup. The system then monitors\nthe highest and lowest\
    \ values of the sensor readings. These sensor readings, taken during the ﬁrst\n\
    ﬁve seconds, are termed the minimum and maximum of the anticipated values for\
    \ the readings taken\nduring the system loop. A two-point calibration technique\
    \ is applied to the raw moisture sensor\noutputs. This approach is very important\
    \ to re-scaling the output and has the potential to correct\nboth slope and oﬀset\
    \ errors. Pseudocode 1 shows the procedure used to calibrate the moisture sensor,\n\
    mentioned in the experimental section. The following conﬁguration needs to be\
    \ set before the Arduino\nstartup process. The initial values for the minimum\
    \ and maximum of the moisture sensor are set to\nint MoistureMin = 400, and int\
    \ MoistureMax = 100, respectively.\nSensors 2019, 19, 3643\n12 of 25\nThe conﬁguration\
    \ above looks surprising. However, it calibrates the output of the sensor. First,\n\
    the MoistureMin is set high (400) and monitored for any reading below that, saving\
    \ it as the new\nminimum. Similarly, the MoistureMax is set low (100) and monitored\
    \ for any reading higher, as the\nnew maximum. In doing so, any further moisture\
    \ readings can be mapped to the range between the\nMoistureMin and MoistureMax\
    \ values. Finally, the moisture sensor can be calibrated using the map\nfunction,\
    \ as illustrated in Algorithm 1.\nAlgorithm 1: Soil moisture sensor calibration\
    \ process.\n1: // Algorithm to Calibrate the moisture sensor during the ﬁrst ﬁve\
    \ seconds.\n2: // Set the initial values for the minimum and maximum values of\
    \ the moisture sensor.\n3: int MoistureMin ← 400; // The minimum moisture sensor\
    \ value.\n4: int MoistureMax ← 100; // The maximum moisture sensor value.\n5:\
    \ while (millisecond () < 5000)\n6:\n{\n7:\nMoistureValue ← analogRead (MoisturePin)\n\
    8:\n// Record the maximum sensor value\n9:\nif (MoistureValue > MoistureMax)\n\
    10:\n{\n11:\nMoistureMax ← MoistureValue\n12:\n}\n13:\n// Record the minimum sensor\
    \ value\n14:\nif (MoistureValue < MoistureMin)\n15:\n{\n16:\nMoistureMin ← MoistureValue\n\
    17:\n}\n18:\n}\n19: MoistureValue ← map (MoistureValue, MoistureMin, MoistureMax,\
    \ 100, 400);\n2.6. The Soil Moisture Sensor\nThere are two classes of sensors\
    \ that measure the soil moisture content. The ﬁrst class is known\nas, the soil\
    \ moisture sensors, and this class of sensors measure the volumetric water content\
    \ in\nsoil. The second class is referred to as soil-water potential sensors. This\
    \ class of sensor measures\nanother property of moisture in soils called the water\
    \ potential, including tensiometers and gypsum\nblocks. Meanwhile, the direct\
    \ gravimetric measurement of free-soil moisture requires removing,\ndrying, and\
    \ weighing of a soil sample. While the soil moisture sensors measure the volumetric\
    \ water\ncontent indirectly, by employing any other property of the soil, such\
    \ as dielectric constant, resistance,\ncapacitance, or interaction with neutrons\
    \ as a substitute for the moisture content [32].\nThe research by Jim Bilskie\
    \ [33] is based on the direct gravimetric and volumetric measurements\nof soil\
    \ water status content and potential. As mentioned by the author, the state of\
    \ water in soil is\ndeﬁned in relation to the amount of water and energy associated\
    \ with the forces, which hold the water\nin the soil. The amount of water, that\
    \ is described by the water content and the energy state of the\nwater, is the\
    \ water potential.\nThe soil-water content can be expressed as direct or indirect\
    \ on a gravimetric or volumetric basis.\nThe direct gravimetric water content\
    \ (Φg) is the mass of water per mass of dry soil. It is measured by\nweighing\
    \ a soil sample (Mass_Wet), drying the sample to remove the water, then weighing\
    \ the dried\nsoil (Mass_Dry). This is given in Equation (1):\nΦg = Mass_Water\n\
    Mass_Soil\n= Mass_Wet − Mass_Dry\nMass_Dry\n(1)\nSensors 2019, 19, 3643\n13 of\
    \ 25\nThe direct volumetric water content Φv is the volume of liquid water per\
    \ volume of soil. Volume\nis the ratio of mass to density (ρ), this is given in\
    \ Equation (2).\nΦv = Volume_Water\nVolume_Soil\n=\nMass_Water\nρ_Water\nMass_Soil\n\
    ρ_Soil\n=\nΦg × ρ_Soil\nρ_Water\n(2)\nAnother parameter for the direct volumetric\
    \ water content is the soil bulk density (ρ_Bulk), which\nis used for soil density\
    \ (ρ_Soil) parameter, and is deﬁned as the ratio of soil dry mass to sample\n\
    volume. Herein, the density of water is close to 1 and most situations is ignored.\
    \ Furthermore, another\nimportant property of the soil is the soil porosity (ε),\
    \ this property has a direct relationship with the\nsoil bulk density, as provided\
    \ in Equation (3). Where the parameter ρ_Solid is the density of the soil\nfraction\
    \ and is approximated and given as 2.6 g·mc−3:\nε = 1 − ρ_Bulk\nρ_Solid\n(3)\n\
    The soil moisture sensor module, used in this study, is based on the LM393 comparator.\
    \ Farmers\nneed to measure the soil moisture regularly to prevent plants from\
    \ drying. Hence, measuring the soil\nmoisture is very important in agriculture\
    \ to help farmers remotely manage and control the irrigation\nsystem. This type\
    \ of sensor indirectly measures the volumetric water content of the soil. To measure\n\
    the soil moisture content, the moisture sensor uses the capacitance to measure\
    \ the water content of soil.\nThe operating principle, used by the soil moisture\
    \ sensor, uses the capacitance to measure dielectric\npermittivity of the surrounding\
    \ environment. In soil, dielectric permittivity is a function of the water\ncontent.\
    \ The soil moisture sensor generates a voltage proportional to the dielectric\
    \ permittivity, and\nconsequently the water content of the soil. The moisture\
    \ sensor averages the water content over the\nwhole length of the sensor. In the\
    \ sensor, there exists a 2 cm zone of inﬂuence, with respect to the ﬂat\nsurface\
    \ of the sensor. However, there is little or no sensitivity at the extreme edges\
    \ of the ﬂat surface.\nThe soil moisture sensor is practically applied to quantify\
    \ the loss of moisture for a dedicated period of\ntime, due to evaporation and\
    \ plant uptake. It evaluates the optimum soil moisture content for various\nspecies\
    \ of plants, and monitors soil moisture content to control irrigation in agricultural\
    \ farmland.\nThe sensor can be inserted into the soil to be tested, and the volumetric\
    \ water content of the soil is\nreported as a percentage. In doing so, the farmer\
    \ can precisely monitor and control the amount of water\nto be supplied, with\
    \ the aid of an easy-to-use mechanism, using a water pump and a microcontroller\n\
    unit. The conductivity of the soil may be severely altered by the application\
    \ of fertilizers, and this\nwould result in false soil moisture readings when\
    \ using a conductive probe.\nThe soil moisture sensor comprises two parts: The\
    \ main sensor and the control board unit.\nThe main sensor part consists of a\
    \ number of conductive probes, that can be used to measure the\nvolumetric content\
    \ of the water in the soil. The control unit is designed, based on the LM392 IC,\
    \ as\na voltage comparator. Other components included are connectors, LEDs, resistors,\
    \ and capacitors.\nFurthermore, a potentiometer is provided to adjust the sensitivity\
    \ of the control unit module, as\nillustrated in Figure 4. The ground moisture\
    \ sensor operates based on the principle of voltage\ncomparison, as exempliﬁed\
    \ in Figure 5. Herein, one input of the comparator is connected to a 10-kΩ\npotentiometer,\
    \ and the other input is tied to a voltage divider network, designed with a 10-kΩ\
    \ resistor\nand a sensor probe for insertion into the ground. The probe conductivity\
    \ varies, depending on the\nwater content. In a situation by which the water content\
    \ of the soil is less, the probe conductivity\nwould be less; therefore, the input\
    \ to the comparator would be HIGH. This implies that the output of\nthe comparator\
    \ is HIGH; based on this, the LED would be in the OFF state. Furthermore, in a\
    \ situation\nin which there is adequate water content in the soil, the probe conductivity\
    \ increases, resulting in a\ncomparator output of LOW. Thus, the LED would start\
    \ to blink. An essential feature of this sensor\nmodule is that it provides an\
    \ analog output that can be sent to the microcontroller. The analog signal\nSensors\
    \ 2019, 19, 3643\n14 of 25\ncan be transmitted to the analog input pin of the\
    \ Arduino board. The volumetric water content of the\nsoil can be measured and\
    \ presented as a percentage [34,35].\nSensors 2019, 19, x FOR PEER REVIEW \n14\
    \ of 25 \n \ncan be transmitted to the analog input pin of the Arduino board.\
    \ The volumetric water content of the \nsoil can be measured and presented as\
    \ a percentage [34–35]. \n \nFigure 4. Low-cost sensor interface for smart irrigation\
    \ modeling and simulation system. \n \nFigure 5. Circuit diagram of the moisture\
    \ soil sensor operating principle. \n3. System Implementation \nThe implementation\
    \ of the low-cost autonomous sensor interface, for a smart IoT-based \nirrigation\
    \ monitoring and control system, establishes that the new system is operational\
    \ and satisfies \nthe operational requirement of the user for measurement and\
    \ evaluation. The important parameters \nto be measured, by the smart system,\
    \ have been defined and are well-established. The moisture \nsensors are buried\
    \ in the ground at the required depth of 2 cm. Once the soil reaches the desired\
    \ \nmoisture level, the sensors send a signal to the microcontroller to turn off\
    \ the relay circuits, which \ncontrol the water pump. The implementation can be\
    \ tested in the designated location. These tests \ninclude, arranging the constructed\
    \ system prototype at a strategic location in farmland, such that the \nenvironmental\
    \ parameters would be monitored by the sensors. The processed sensor data are\
    \ \nFigure 4. Low-cost sensor interface for smart irrigation modeling and simulation\
    \ system.\nSensors 2019, 19, x FOR PEER REVIEW \n14 of 25 \n \ncan be transmitted\
    \ to the analog input pin of the Arduino board. The volumetric water content of\
    \ the \nsoil can be measured and presented as a percentage [34–35]. \n \nFigure\
    \ 4. Low-cost sensor interface for smart irrigation modeling and simulation system.\
    \ \n \nFigure 5. Circuit diagram of the moisture soil sensor operating principle.\
    \ \n3. System Implementation \nThe implementation of the low-cost autonomous sensor\
    \ interface, for a smart IoT-based \nirrigation monitoring and control system,\
    \ establishes that the new system is operational and satisfies \nthe operational\
    \ requirement of the user for measurement and evaluation. The important parameters\
    \ \nto be measured, by the smart system, have been defined and are well-established.\
    \ The moisture \nsensors are buried in the ground at the required depth of 2 cm.\
    \ Once the soil reaches the desired \nmoisture level, the sensors send a signal\
    \ to the microcontroller to turn off the relay circuits, which \ncontrol the water\
    \ pump. The implementation can be tested in the designated location. These tests\
    \ \ninclude, arranging the constructed system prototype at a strategic location\
    \ in farmland, such that the \nenvironmental parameters would be monitored by\
    \ the sensors. The processed sensor data are \nFigure 5. Circuit diagram of the\
    \ moisture soil sensor operating principle.\n3. System Implementation\nThe implementation\
    \ of the low-cost autonomous sensor interface, for a smart IoT-based irrigation\n\
    monitoring and control system, establishes that the new system is operational\
    \ and satisﬁes the\noperational requirement of the user for measurement and evaluation.\
    \ The important parameters to be\nmeasured, by the smart system, have been deﬁned\
    \ and are well-established. The moisture sensors are\nburied in the ground at\
    \ the required depth of 2 cm. Once the soil reaches the desired moisture level,\n\
    the sensors send a signal to the microcontroller to turn oﬀ the relay circuits,\
    \ which control the water\npump. The implementation can be tested in the designated\
    \ location. These tests include, arranging\nthe constructed system prototype at\
    \ a strategic location in farmland, such that the environmental\nparameters would\
    \ be monitored by the sensors. The processed sensor data are transmitted to the\n\
    web server through the website, www.thingspeak.com [27], where users can view\
    \ the monitoring and\ncontrol data. Figures 6–10 illustrate the experimental setup\
    \ of the autonomous sensor interface for the\nIoT-based irrigation system. The\
    \ components are interconnected via a smart interface, the water pump\nis connected\
    \ to the plants to supply water when the moisture level of the soil is below normal,\
    \ and\nthe immersed moisture sensor, buried in the soil, monitors the moisture\
    \ level and communicates the\nSensors 2019, 19, 3643\n15 of 25\ninformation to\
    \ the microcontroller. Thereafter, the monitored and control information is transmitted\n\
    to the LCD screen, and uploaded to the web server, through the WiFi module. Figures\
    \ 11 and 12\ndemonstrate the implemented prototype.\nSensors 2019, 19, x FOR PEER\
    \ REVIEW \n15 of 25 \n \ntransmitted to the web server through the website, www.thingspeak.com\
    \ [27], where users can view \nthe monitoring and control data. Figures 6–10 illustrate\
    \ the experimental setup of the autonomous \nsensor interface for the IoT-based\
    \ irrigation system. The components are interconnected via a smart \ninterface,\
    \ the water pump is connected to the plants to supply water when the moisture\
    \ level of the \nsoil is below normal, and the immersed moisture sensor, buried\
    \ in the soil, monitors the moisture \nlevel and communicates the information\
    \ to the microcontroller. Thereafter, the monitored and control \ninformation\
    \ is transmitted to the LCD screen, and uploaded to the web server, through the\
    \ WiFi \nmodule. Figures 11,12 demonstrate the implemented prototype. \n \nFigure\
    \ 6. Low-cost sensor interface for Internet of Things (IoT)-based irrigation system\
    \ component \nsetup. \n \nFigure 7. Low-cost sensor interface for IoT-based irrigation\
    \ system sensor probe inserted in \ncompletely dry soil. \nFigure 6. Low-cost\
    \ sensor interface for Internet of Things (IoT)-based irrigation system component\
    \ setup.\n \ntransmitted to the web server through the website, www.thingspeak.com\
    \ [27], where users can view \nthe monitoring and control data. Figures 6–10 illustrate\
    \ the experimental setup of the autonomous \nsensor interface for the IoT-based\
    \ irrigation system. The components are interconnected via a smart \ninterface,\
    \ the water pump is connected to the plants to supply water when the moisture\
    \ level of the \nsoil is below normal, and the immersed moisture sensor, buried\
    \ in the soil, monitors the moisture \nlevel and communicates the information\
    \ to the microcontroller. Thereafter, the monitored and control \ninformation\
    \ is transmitted to the LCD screen, and uploaded to the web server, through the\
    \ WiFi \nmodule. Figures 11,12 demonstrate the implemented prototype. \n \nFigure\
    \ 6. Low-cost sensor interface for Internet of Things (IoT)-based irrigation system\
    \ component \nsetup. \n \nFigure 7. Low-cost sensor interface for IoT-based irrigation\
    \ system sensor probe inserted in \ncompletely dry soil. \nFigure 7. Low-cost\
    \ sensor interface for IoT-based irrigation system sensor probe inserted in completely\n\
    dry soil.\nSensors 2019, 19, 3643\n16 of 25\nSensors 2019, 19, x FOR PEER REVIEW\
    \ \n16 of 25 \n \n \nFigure 8. Prototype testing in less moist soil (Moisture\
    \ level 25%). \n \nFigure 9. Prototype testing in highly moist soil (Moisture\
    \ level 410%). \n \nFigure 10. Prototype testing in less dry soil (Moisture level\
    \ 17%). \nFigure 8. Prototype testing in less moist soil (Moisture level 25%).\n\
    Sensors 2019, 19, x FOR PEER REVIEW \n16 of 25 \n \n \nFigure 8. Prototype testing\
    \ in less moist soil (Moisture level 25%). \n \nFigure 9. Prototype testing in\
    \ highly moist soil (Moisture level 410%). \n \nFigure 10. Prototype testing in\
    \ less dry soil (Moisture level 17%). \nFigure 9. Prototype testing in highly\
    \ moist soil (Moisture level 410%).\nSensors 2019, 19, x FOR PEER REVIEW \n16\
    \ of 25 \n \n \nFigure 8. Prototype testing in less moist soil (Moisture level\
    \ 25%). \n \nFigure 9. Prototype testing in highly moist soil (Moisture level\
    \ 410%). \n \nFigure 10. Prototype testing in less dry soil (Moisture level 17%).\
    \ \nFigure 10. Prototype testing in less dry soil (Moisture level 17%).\nSensors\
    \ 2019, 19, 3643\n17 of 25\nSensors 2019, 19, x FOR PEER REVIEW \n17 of 25 \n\
    \ \n \nFigure 11. The implemented prototype view part 1. \n \nFigure 12. The implemented\
    \ prototype view part 2. \n4. Experimental Results and Discussion \nThe experimental\
    \ results are obtained from the implemented prototype. We conducted several \n\
    experiments under different simulated scenarios to demonstrate the workability\
    \ of the proposed \nsystem. The results are the outputs obtained from the calibrated\
    \ sensor readings, transmitted and stored \non the website, www.thingspeak.com.\
    \ The prototype was operated and tested to evaluate device \nworkability in real\
    \ situations. The date and timestamp of the data of each sensor are displayed\
    \ on the \nwebsite for user information. \n \nFigure 11. The implemented prototype\
    \ view part 1.\nSensors 2019, 19, x FOR PEER REVIEW \n17 of 25 \n \n \nFigure\
    \ 11. The implemented prototype view part 1. \n \nFigure 12. The implemented prototype\
    \ view part 2. \n4. Experimental Results and Discussion \nThe experimental results\
    \ are obtained from the implemented prototype. We conducted several \nexperiments\
    \ under different simulated scenarios to demonstrate the workability of the proposed\
    \ \nsystem. The results are the outputs obtained from the calibrated sensor readings,\
    \ transmitted and stored \non the website, www.thingspeak.com. The prototype was\
    \ operated and tested to evaluate device \nworkability in real situations. The\
    \ date and timestamp of the data of each sensor are displayed on the \nwebsite\
    \ for user information. \n \nFigure 12. The implemented prototype view part 2.\n\
    4. Experimental Results and Discussion\nThe experimental results are obtained\
    \ from the implemented prototype. We conducted several\nexperiments under diﬀerent\
    \ simulated scenarios to demonstrate the workability of the proposed\nsystem.\
    \ The results are the outputs obtained from the calibrated sensor readings, transmitted\
    \ and\nstored on the website, www.thingspeak.com. The prototype was operated and\
    \ tested to evaluate\ndevice workability in real situations. The date and timestamp\
    \ of the data of each sensor are displayed\non the website for user information.\n\
    Sensors 2019, 19, 3643\n18 of 25\n4.1. Sensor Data Logging\nThe calibrated data,\
    \ captured by the sensors, are transmitted to the web server [27]. The moisture\n\
    sensor sends data, through the WiFi module to www.thingspeak.com, is accessible\
    \ via a phone or\npersonal computer. Here, the logged data of the moisture content\
    \ values, with the appending date\nand time, are shown in the serial terminal,\
    \ as illustrated in Figure 13. The numerical data can also be\ndownloaded and\
    \ saved in comma-separated values (CSV) or the excel ﬁle format. It is important\
    \ to\nobtain the moisture content values, in order to demonstrate the eﬃciency\
    \ and data integrity of the\ndeveloped system prototype. This represents signiﬁcant\
    \ advances in irrigation system technology,\nparticularly in the present age of\
    \ serious advancements in sensor technology and creativity.\nSensors 2019, 19,\
    \ x FOR PEER REVIEW \n18 of 25 \n \n4.1. Sensor Data Logging \nThe calibrated\
    \ data, captured by the sensors, are transmitted to the web server [27]. The moisture\
    \ \nsensor sends data, through the WiFi module to www.thingspeak.com, is accessible\
    \ via a phone or \npersonal computer. Here, the logged data of the moisture content\
    \ values, with the appending date \nand time, are shown in the serial terminal,\
    \ as illustrated in Figure 13. The numerical data can also be \ndownloaded and\
    \ saved in comma-separated values (CSV) or the excel file format. It is important\
    \ to \nobtain the moisture content values, in order to demonstrate the efficiency\
    \ and data integrity of the \ndeveloped system prototype. This represents significant\
    \ advances in irrigation system technology, \nparticularly in the present age\
    \ of serious advancements in sensor technology and creativity. \n \nFigure 13.\
    \ Sensor data logging. \nFigures 14–17 illustrate the calibrated soil moisture\
    \ values against time. These values are \nobtained from the sensor reading of\
    \ the implemented prototype from the website, \nwww.thingspeak.com in real time,\
    \ using the key value of the application programming interface \n(API). Figure\
    \ 18 shows the variation of temperature, humidity, and pressure in the tested\
    \ soil as \nreported by the www.thinkspeak.com analytic and visualization website.\
    \ We can observe that, in \nFigure 19, the soil status (dry or moist) determines\
    \ the supply of the water to the plants at different \ntime intervals. As the\
    \ water content increases, and becomes higher than the threshold values \n(between\
    \ 100% and 400% volumetric water content), the supply of water stops, thus preventing\
    \ the \nsupply of excess water to the plants, which can damage or harm their roots\
    \ and expose them to the \nenvironment. The designed system drastically minimizes\
    \ water loss and prevents plant damage, \nwhich is due to the high-water content\
    \ of its roots or leaves. Below 100%, the soil moisture is low, \nand the plant\
    \ will dry. The water pump is turned ON. Above 400%, the moisture exceeds the\
    \ \nthreshold limit and the water pump is turned OFF. This shows that the monitoring\
    \ and control of \nwater content in farmland, plays a vital role in improving\
    \ the irrigation system of farming and \nensuring a significant increase in agricultural\
    \ productivity, with minimal or no effort from the farmer. \nFigure 13. Sensor\
    \ data logging.\nFigures 14–17 illustrate the calibrated soil moisture values\
    \ against time. These values are obtained\nfrom the sensor reading of the implemented\
    \ prototype from the website, www.thingspeak.com in real\ntime, using the key\
    \ value of the application programming interface (API). Figure 18 shows the variation\n\
    of temperature, humidity, and pressure in the tested soil as reported by the www.thinkspeak.com\n\
    analytic and visualization website. We can observe that, in Figure 19, the soil\
    \ status (dry or moist)\ndetermines the supply of the water to the plants at diﬀerent\
    \ time intervals. As the water content\nincreases, and becomes higher than the\
    \ threshold values (between 100% and 400% volumetric water\ncontent), the supply\
    \ of water stops, thus preventing the supply of excess water to the plants, which\
    \ can\ndamage or harm their roots and expose them to the environment. The designed\
    \ system drastically\nminimizes water loss and prevents plant damage, which is\
    \ due to the high-water content of its roots or\nleaves. Below 100%, the soil\
    \ moisture is low, and the plant will dry. The water pump is turned ON.\nAbove\
    \ 400%, the moisture exceeds the threshold limit and the water pump is turned\
    \ OFF. This shows\nthat the monitoring and control of water content in farmland,\
    \ plays a vital role in improving the\nirrigation system of farming and ensuring\
    \ a signiﬁcant increase in agricultural productivity, with\nminimal or no eﬀort\
    \ from the farmer.\nSensors 2019, 19, 3643\n19 of 25\nSensors 2019, 19, x FOR\
    \ PEER REVIEW \n19 of 25 \n \n \nFigure 14. Moisture levels against time obtained\
    \ from http://www.thingspeak.com (API key =9VHO8NR618JJT9CN). \n \nFigure 15.\
    \ Moisture levels against time obtained from http://www.thingspeak.com (API key\
    \ = FE4H530DNA2NJQXB). \n \nFigure 16. Moisture levels against time obtained from\
    \ http://www.thingspeak.com (API key = FE4H530DNA2NJQXB). \nFigure 14.\nMoisture\
    \ levels against time obtained from http://www.thingspeak.com (API key\n=9VHO8NR618JJT9CN).\n\
    Sensors 2019, 19, x FOR PEER REVIEW \n19 of 25 \n \n \nFigure 14. Moisture levels\
    \ against time obtained from http://www.thingspeak.com (API key =9VHO8NR618JJT9CN).\
    \ \n \nFigure 15. Moisture levels against time obtained from http://www.thingspeak.com\
    \ (API key = FE4H530DNA2NJQXB). \n \nFigure 16. Moisture levels against time obtained\
    \ from http://www.thingspeak.com (API key = FE4H530DNA2NJQXB). \nFigure 15.\n\
    Moisture levels against time obtained from http://www.thingspeak.com (API key\
    \ =\nFE4H530DNA2NJQXB).\nSensors 2019, 19, x FOR PEER REVIEW \n19 of 25 \n \n\
    \ \nFigure 14. Moisture levels against time obtained from http://www.thingspeak.com\
    \ (API key =9VHO8NR618JJT9CN). \n \nFigure 15. Moisture levels against time obtained\
    \ from http://www.thingspeak.com (API key = FE4H530DNA2NJQXB). \n \nFigure 16.\
    \ Moisture levels against time obtained from http://www.thingspeak.com (API key\
    \ = FE4H530DNA2NJQXB). \nFigure 16.\nMoisture levels against time obtained from\
    \ http://www.thingspeak.com (API key =\nFE4H530DNA2NJQXB).\nSensors 2019, 19,\
    \ 3643\n20 of 25\nSensors 2019, 19, x FOR PEER REVIEW \n20 of 25 \n \n \nFigure\
    \ 17. Moisture levels against time obtained from http://www.thingspeak.com (API\
    \ key = FE4H530DNA2NJQXB). \n \nFigure 18. Variation of soil temperature, humidity,\
    \ and pressure measurements obtained from \nhttp://www.thingspeak.com (API key\
    \ = FE4H530DNA2NJQXB). \n \nFigure 19. Soil moisture values against time. \nFigure\
    \ 17.\nMoisture levels against time obtained from http://www.thingspeak.com (API\
    \ key =\nFE4H530DNA2NJQXB).\nSensors 2019, 19, x FOR PEER REVIEW \n20 of 25 \n\
    \ \n \nFigure 17. Moisture levels against time obtained from http://www.thingspeak.com\
    \ (API key = FE4H530DNA2NJQXB). \n \nFigure 18. Variation of soil temperature,\
    \ humidity, and pressure measurements obtained from \nhttp://www.thingspeak.com\
    \ (API key = FE4H530DNA2NJQXB). \n \nFigure 19. Soil moisture values against time.\
    \ \nFigure 18.\nVariation of soil temperature, humidity, and pressure measurements\
    \ obtained from\nhttp://www.thingspeak.com (API key = FE4H530DNA2NJQXB).\nSensors\
    \ 2019, 19, x FOR PEER REVIEW \n20 of 25 \n \n \nFigure 17. Moisture levels against\
    \ time obtained from http://www.thingspeak.com (API key = FE4H530DNA2NJQXB). \n\
    \ \nFigure 18. Variation of soil temperature, humidity, and pressure measurements\
    \ obtained from \nhttp://www.thingspeak.com (API key = FE4H530DNA2NJQXB). \n \n\
    Figure 19. Soil moisture values against time. \nFigure 19. Soil moisture values\
    \ against time.\nSensors 2019, 19, 3643\n21 of 25\n4.2. Performance Evaluation\
    \ on Loamy and Sandy Soils\nLoamy and sandy soils are selected for performance\
    \ evaluation, owing to the fact that they are\nprominent types of soil that are\
    \ suitable for autonomous irrigation farming. The test was conducted\nby setting\
    \ the system counter at 0 to proceed to 300, and various moisture readings were\
    \ taken with\ndiﬀerent counter values, while the device was in operation. Figure\
    \ 20 illustrates the performance of the\nloamy soil in terms of moisture content.\
    \ It can be observed that, as the water is supplied to the soil, the\nsoil tends\
    \ to absorb the water slowly (i.e., a soil moisture level value of approximately\
    \ 100%), which is\ndue to the water-retaining capability of loamy soil, and at\
    \ a particular point (i.e., from the moisture\nlevel 300 to 350 percent), it retains\
    \ water, causing the water pump to steadily switch oﬀ to stop the\nfurther supply\
    \ of water. This demonstrates that the implemented prototype can perform satisfactorily\n\
    when deployed in irrigated farmland enriched with loamy soil. Furthermore, in\
    \ deploying the system\nin loamy soil farmland, the cost of electricity consumption\
    \ is minimized by closing the water pump\nwhen the moisture level exceeds 400%.\
    \ This also control the supply of water to plants and prevent the\nroots from\
    \ being exposed to the surrounding environment, resulting in higher crop yield.\n\
    Sensors 2019, 19, x FOR PEER REVIEW \n21 of 25 \n \n4.2. Performance Evaluation\
    \ on Loamy and Sandy Soils \nLoamy and sandy soils are selected for performance\
    \ evaluation, owing to the fact that they are \nprominent types of soil that are\
    \ suitable for autonomous irrigation farming. The test was conducted by \nsetting\
    \ the system counter at 0 to proceed to 300, and various moisture readings were\
    \ taken with \ndifferent counter values, while the device was in operation. Figure\
    \ 20 illustrates the performance of the \nloamy soil in terms of moisture content.\
    \ It can be observed that, as the water is supplied to the soil, the \nsoil tends\
    \ to absorb the water slowly (i.e., a soil moisture level value of approximately\
    \ 100%), which is \ndue to the water-retaining capability of loamy soil, and at\
    \ a particular point (i.e., from the moisture level \n300 to 350 percent), it\
    \ retains water, causing the water pump to steadily switch off to stop the further\
    \ \nsupply of water. This demonstrates that the implemented prototype can perform\
    \ satisfactorily when \ndeployed in irrigated farmland enriched with loamy soil.\
    \ Furthermore, in deploying the system in \nloamy soil farmland, the cost of electricity\
    \ consumption is minimized by closing the water pump when \nthe moisture level\
    \ exceeds 400%. This also control the supply of water to plants and prevent the\
    \ roots \nfrom being exposed to the surrounding environment, resulting in higher\
    \ crop yield. \n \nFigure 20. Soil moisture level against counter values on loamy\
    \ soil. \nFigure 21 illustrates the performance of sandy soil in terms of moisture\
    \ content. As the water is \nsupplied to the dry sandy soil, the water tends to\
    \ be quickly absorbed by the soil, due to the poor water-\nretaining capability\
    \ of the soil. The moisture level is higher at the counter values of 81 to 161.\
    \ However, \nthe moisture level significantly drops to below 200%, causing the\
    \ moisture content level to decline \nsignificantly with time. The monitoring\
    \ and control of sandy soil require a greater consumption of \nelectricity to\
    \ power the water pump, in order to maintain the moisture level status at normal\
    \ (i.e., \nbetween 100% and 400%). This approach is implemented to help inform\
    \ farmers in real-time that \nirrigation is required. These findings are of immense\
    \ assistance to farmers and decision-makers in the \nproper monitoring and control\
    \ of agricultural farm products for sustainable development. \nFigure 20. Soil\
    \ moisture level against counter values on loamy soil.\nFigure 21 illustrates\
    \ the performance of sandy soil in terms of moisture content. As the water\nis\
    \ supplied to the dry sandy soil, the water tends to be quickly absorbed by the\
    \ soil, due to the poor\nwater-retaining capability of the soil. The moisture\
    \ level is higher at the counter values of 81 to 161.\nHowever, the moisture level\
    \ signiﬁcantly drops to below 200%, causing the moisture content level to\ndecline\
    \ signiﬁcantly with time. The monitoring and control of sandy soil require a greater\
    \ consumption\nof electricity to power the water pump, in order to maintain the\
    \ moisture level status at normal (i.e.,\nbetween 100% and 400%). This approach\
    \ is implemented to help inform farmers in real-time that\nirrigation is required.\
    \ These ﬁndings are of immense assistance to farmers and decision-makers in the\n\
    proper monitoring and control of agricultural farm products for sustainable development.\n\
    Sensors 2019, 19, 3643\n22 of 25\nSensors 2019, 19, x FOR PEER REVIEW \n22 of\
    \ 25 \n \n \nFigure 21. Soil moisture level against counter values on sandy soil.\
    \ \n4.3. Cost Analysis \nTable 1 shows the list of items, and their descriptions\
    \ that are used to design and implement the \ndevice prototype. The cost analysis\
    \ is expressed in U.S. Dollar (USD). These cost patterns are subject \nto vary\
    \ from time to time, due to fluctuations in the global market exchange rate [36].\
    \ The cost analysis \nprovided excludes the cost of shipping, value added tax,\
    \ and labor. It can be observed that the total \ncost of the complete prototype\
    \ is valued at $79 USD, which indicates a very low-cost device that is \naffordable\
    \ and can be utilized by farmers with low income, compared to the approach presented\
    \ by \nthe authors in [18]. \nTable 1. Cost analysis of the implemented device\
    \ prototype. \nS/No. \nItem Description \nUnit \nQuantity \nUnit Price (U.S. \n\
    Dollar) \nAmount (U.S. \nDollar) \n1. \nArduino Uno Board \n1 \n12.3445 \n12.3445\
    \ \n2. \nGeneric EPS-01 ESP8266 2.4-GHz WiFi Module for \nArduino \n1 \n9.25134\
    \ \n9.25134 \n3. \n16 × 2 LCD Blue Screen Microcontroller Development \nSupport\
    \ for Arduino \n1 \n3.38097 \n3.38097 \n4. \nLM393 Soil Moisture Sensor \n1 \n\
    2.20438 \n2.20438 \n5. \nElectrolytic capacitor (20 pcs) \n1 \n5.23540 \n5.23540\
    \ \n6. \nResistors 1 kΩ (50 pcs) \n1 \n6.88868 \n6.88868 \n7. \n12-V Relay Module\
    \ External Trigger Delay Adjustable \n1 \n7.14219 \n7.14219 \n8. \nDiodes 10 mn\
    \ RGB LED Module Light Emitting \nDiode for Arduino \n3 \n2.22918 \n6.68754 \n\
    9. \nGeneric PCs Water Pump High Quality DC 12 V 3.8 m, \nMagnetic Electrical\
    \ Centrifugal Hotsel  \n1 \n14.8327 \n14.8327 \n10. \nBreadboard and Jumper Cables.\
    \ \n1 \n4.13321 \n4.13321 \n11. \nDHT 11 Digital Temperature, Humidity Sensor\
    \ \nModule for Arduino  \n1 \n1.29507 \n1.29507 \n12. \nGeneric AC 220 V to 12\
    \ V DC step down Power \nSupply Module for Arduino \n1 \n5.89671 \n5.89671 \n\
    Total \n14 \n74.83433 \n79.29263 \n \nFigure 21. Soil moisture level against counter\
    \ values on sandy soil.\n4.3. Cost Analysis\nTable 1 shows the list of items,\
    \ and their descriptions that are used to design and implement the\ndevice prototype.\
    \ The cost analysis is expressed in U.S. Dollar (USD). These cost patterns are\
    \ subject to\nvary from time to time, due to ﬂuctuations in the global market\
    \ exchange rate [36]. The cost analysis\nprovided excludes the cost of shipping,\
    \ value added tax, and labor. It can be observed that the total\ncost of the complete\
    \ prototype is valued at $79 USD, which indicates a very low-cost device that\
    \ is\naﬀordable and can be utilized by farmers with low income, compared to the\
    \ approach presented by\nthe authors in [18].\nTable 1. Cost analysis of the implemented\
    \ device prototype.\nS/No.\nItem Description\nUnit\nQuantity\nUnit Price\n(U.S.\
    \ Dollar)\nAmount\n(U.S. Dollar)\n1.\nArduino Uno Board\n1\n12.3445\n12.3445\n\
    2.\nGeneric EPS-01 ESP8266 2.4-GHz WiFi\nModule for Arduino\n1\n9.25134\n9.25134\n\
    3.\n16 × 2 LCD Blue Screen Microcontroller Development\nSupport for Arduino\n\
    1\n3.38097\n3.38097\n4.\nLM393 Soil Moisture Sensor\n1\n2.20438\n2.20438\n5.\n\
    Electrolytic capacitor (20 pcs)\n1\n5.23540\n5.23540\n6.\nResistors 1 kΩ (50 pcs)\n\
    1\n6.88868\n6.88868\n7.\n12-V Relay Module External Trigger Delay Adjustable\n\
    1\n7.14219\n7.14219\n8.\nDiodes 10 mn RGB LED Module Light Emitting Diode\nfor\
    \ Arduino\n3\n2.22918\n6.68754\n9.\nGeneric PCs Water Pump High Quality DC 12\
    \ V 3.8 m,\nMagnetic Electrical Centrifugal Hotsel\n1\n14.8327\n14.8327\n10.\n\
    Breadboard and Jumper Cables.\n1\n4.13321\n4.13321\n11.\nDHT 11 Digital Temperature,\
    \ Humidity Sensor Module\nfor Arduino\n1\n1.29507\n1.29507\n12.\nGeneric AC 220\
    \ V to 12 V DC step down Power Supply\nModule for Arduino\n1\n5.89671\n5.89671\n\
    Total\n14\n74.83433\n79.29263\nSensors 2019, 19, 3643\n23 of 25\n5. Conclusions\n\
    This article presents a low-cost autonomous sensor interface for the design of\
    \ an IoT-based smart\nirrigation monitoring and control system. A real working\
    \ prototype was designed and implemented.\nThe main objective of this work was\
    \ to enable farmers to have autonomous monitoring and control of\nremote farmland,\
    \ to generate an increase in crop production. This study used a moisture sensor\
    \ to\nmeasure the water content in the soil, a water pump to supply the required\
    \ amount of water to the\nplants, and a WiFi module to make the sensed data accessible\
    \ through the Internet. The web server\nserves as the main base station for the\
    \ storage of sensor readings. The data, stored on the web server,\nwere rigorously\
    \ analyzed. The sensor measurements were transmitted to the Internet in real time.\n\
    Based on the acquired results, a farmer can precisely monitor the water content\
    \ of the soil in his/her\nfarmland. The performance evaluation of the system is\
    \ reliable, in terms of the captured data, speed,\naccuracy, and integrity of\
    \ the sensed data that is obtained from the sensors. Based on the descriptive\n\
    nature of the plotted graphs, a farmer can determine whether a plant is in good\
    \ condition, in terms of\nthe water content of the soil beneath it. In real time,\
    \ the system notiﬁes farmers of any inadequate or\nexcess water supply to the\
    \ farm, as the water pump is switched on or oﬀ, depending on the moisture\nlevel.\
    \ The proposed low-cost system can be implemented on a large-scale agricultural\
    \ farm, to simplify\nand eliminate the unnecessary stress a farmer normally undergoes\
    \ in supplying water to his/her\nfarmland. The proposed system, and presented\
    \ experimental results, will be of immense assistance to\nfarmers and decision-makers\
    \ in the proper monitoring and control of agricultural farm products.\nFuture\
    \ work will consider the use of a ﬁeld programmable gate array (FPGA) and system-on-chip\n\
    (SoC)-based architecture, namely, the Xilinx Zynq 7000 FPGA-SoC device using the\
    \ Python\nprogramming language for Zynq devices. This will enhance high performance\
    \ device monitoring and\ncontrol when deployed to large agricultural farmland.\n\
    Author Contributions: Conceptualization, S.A.; Data curation, J.W.N., J.-A.L.\
    \ and M.L.C.; Formal analysis, S.A.,\nJ.W.N., J.-A.L. and M.L.C.; Funding acquisition,\
    \ J.-A.L.; Investigation, S.A. and J.W.N.; Methodology, S.A. and\nJ.W.N.; Project\
    \ administration, J.-A.L. and M.L.C.; Resources, J.W.N. and M.L.C.; Software,\
    \ S.A. and J.W.N.;\nSupervision, J.-A.L.; Validation, S.A., J.W.N. and J.-A.L.;\
    \ Visualization, J.-A.L. and M.L.C.; Writing—original draft,\nS.A.; Writing—review\
    \ & editing, J.-A.L. and M.L.C.\nFunding: This research was supported by Basic\
    \ Science Research Program through the National Research\nFoundation of Korea\
    \ (NRF) funded by the Ministry of Education (2019R1I1A3A01058887), and in part\
    \ by the\nKorea Institute of Energy Technology Evaluation and Planning and Ministry\
    \ of Trade, Industry and Energy of the\nRepublic of Korea under Grant 20184010201650.\n\
    Acknowledgments: The authors would like to thank the National Research Foundation\
    \ of Korea through the\nMinistry of ICT and the Korea Institute of Energy Evaluation\
    \ and Planning and Ministry of Trade, Industry and\nEnergy of the Republic of\
    \ Korea for providing the ﬁnancial support of this research work. Special thanks\
    \ are\nowed to the Abdussalam International Centre for Theoretical Physics (ICTP),\
    \ Trieste, Italy and Iain Darby of the\nInternational Atomic Energy Agency (IAEA),\
    \ Vienna, Austria, for the ICTP workshop/Seminar SMR 3143, “Joint\nICTP-IAEA School\
    \ on Zynq-7000 SoC and its Applications for Nuclear and Related Instrumentation”,\
    \ Aug–Sep\n2017, Trieste, Italy.\nConﬂicts of Interest: The authors declare no\
    \ conﬂict of interest.\nReferences\n1.\nImran, A.L.; Gao, J.; Tabinda, N.S.; Farman,\
    \ A.C.; Noman, A.B.; Waqar, A.Q. Monitoring and Control Systems\nin Agriculture\
    \ Using Intelligent Sensor Techniques: A Review of the Aeroponic System. J. Sens.\
    \ 2018, 18,\n8672769.\n2.\nBégué, A.; Arvor, D.; Bellon, B.; Betbeder, J.; De\
    \ Abelleyra, D.; Ferraz, R.P.D.; Lebourgeois, V.; Lelong, C.;\nSimões, M.; Verón,\
    \ S.R. Remote Sensing and Cropping Practices: A Review. Remote Sens. 2018, 10,\
    \ 99.\n[CrossRef]\n3.\nJirapond, M.; Nathaphon, B.; Siriwan, K.; Narongsak, L.;\
    \ Apirat, W.; Pichetwut, N. IoT and agriculture data\nanalysis for smart farm.\
    \ Comput. Electron. Agric. 2019, 156, 467–474.\n4.\nZhang, X.; Zhang, J.; Lin,\
    \ L.; Zhang, Y.; Yang, G. Monitoring Citrus Soil Moisture and Nutrients Using\
    \ an IoT\nBased System. Sensors 2017, 17, 447. [CrossRef] [PubMed]\nSensors 2019,\
    \ 19, 3643\n24 of 25\n5.\nDa Costa, E.; De Oliveira, N.; Morais, F.; Carvalhaes-Dias,\
    \ P.; Duarte, L.; Cabot, A.; Siqueira Dias, J.\nA Self-Powered and Autonomous\
    \ Fringing Field Capacitive Sensor Integrated into a Micro Sprinkler Spinner\n\
    to Measure Soil Water Content. Sensors 2017, 17, 575. [CrossRef] [PubMed]\n6.\n\
    Yogesh, G.G.; Devendra, S.C.; Hitendra, C.C. A Review on Automated Irrigation\
    \ System Using Wireless\nSensor Network. Int. J. Adv. Res. Electron. Commun. Eng.\
    \ 2016, 5, 1725–1731.\n7.\nSumeet, S.; Sandhya, U.; Piyali, S.; Yatin, J. Arduino\
    \ Based Automated Watering System. IJIRT 2015, 2,\n419–420.\n8.\nSumeet, S.B.;\
    \ Manoj, A.M. IoT Based Automated Irrigation System. Int. J. Mod. Trends Eng.\
    \ Res. 2015, 2,\n1532–1538.\n9.\nMarie, F.L. Design of an Automated Irrigation\
    \ System: Student Paper Competition; McGill University: Montreal,\nQC, Canada,\
    \ 16 May 2005.\n10.\nDeweshvree, R.; Indurkar, P.R.; Khatri, D.M. Review Paper\
    \ Based on Automatic Irrigation System Based on\nRF Module. IJAICT 2015, 1, 736–738.\n\
    11.\nRaheela, S.; Muhammad, T.; Javed, F.; Muhammad, A.S. Internet of Things based\
    \ Expert System for Smart\nAgriculture. Int. J. Adv. Comput. Sci. Appl. 2016,\
    \ 7, 341–350.\n12.\nGabriel, V.; Juan, F.D.P.; Daniel, H.; De La Iglesia, D.H.;\
    \ Javier, B. Combining Multi-Agent Systems and\nWireless Sensor Networks for Monitoring\
    \ Crop Irrigation. Sensors 2017, 17, 1775.\n13.\nPrem, P.J.; Ali, Y.; Dimitrios,\
    \ G.; Ahsan, M.; Arkady, Z. Internet of Things Platform for Smart Farming:\nExperiences\
    \ and Lessons Learnt. Sensors 2016, 16, 1884.\n14.\nChandan, K.S.; Pramitee, B.\
    \ A Low-Cost Smart Irrigation Control System. In Proceedings of the International\n\
    Conference on Electronics and Communication System, Coimbatore, India, 26–27 February\
    \ 2015; pp. 1146–1152.\n15.\nKarthikeswari, M.; Mithraderi, P. Automated Irrigation\
    \ System in Agriculture Using Wireless Sensor\nTechnology. Int. J. Adv. Res. Electr.\
    \ Electron. Instrum. Eng. 2014, 3, 13622–13627.\n16.\nPurnima, S.R.; Reddy, N.\
    \ Design of a remote monitoring and control System with Automatic Irrigation\n\
    System Using GSM Bluetooth. Int. J. Comput. Appl. 2012, 47, 6–13. [CrossRef]\n\
    17.\nArchana, P.; Priya, R. Design and implementation of automatic plant watering\
    \ system. Int. J. Adv. Eng.\nGlob. Technol. 2016, 4, 1567–1570.\n18.\nFerrarezi,\
    \ R.S.; Dove, S.K.; Van Iersel, M.W. An automated system for monitoring soil moisture\
    \ and controlling\nirrigation using low-cost open-source microcontrollers. HortTechnology\
    \ 2015, 25, 110–118. [CrossRef]\n19.\nBavel, C.H.V.; Bavel, M.G.V.; Lascano, R.J.;\
    \ Camp, C.R. Automatic Irrigation Based on Monitoring Plant\nTranspiration. Available\
    \ online: http://dynamax.com/images/uploads/papers/61_Automatic_Irrigation_\n\
    Based.pdf (accessed on 3 January 2019).\n20.\nRocha, N.O.; Teixeira, A.; Leão,\
    \ R.; Moreira, L.; Galvão, L. Hyperspectral Remote Sensing for Detecting\nSoil\
    \ Salinization Using ProSpecTIR-VS Aerial Imagery and Sensor Simulation. Remote\
    \ Sens. 2017, 9, 42.\n[CrossRef]\n21.\nDurga, G.; Ifat, J.; Goutam, K. High Temperature\
    \ AlGaN/GaN Membrane Based Pressure Sensors.\nMicromachine 2018, 9, 207.\n22.\n\
    Abba, S.; Lee, J.A. An Autonomous Self-Aware and Adaptive Fault-Tolerant Routing\
    \ Technique for Wireless\nSensor Networks. Sensors 2015, 15, 20316–20354. [CrossRef]\
    \ [PubMed]\n23.\nKephart, J.O.; Chess, D.M. The Vision of Autonomic Computing.\
    \ Computer 2003, 36, 41–50. [CrossRef]\n24.\nArduino Integrated Design Environment.\
    \ Available online: http://www.arduino.cc (accessed on 8 February 2018).\n25.\n\
    Labcenter Electronics Ltd. Proteus Design Suite 8.5 Professional. Available online:\
    \ http://www.labcenter.com\n(accessed on 10 February 2018).\n26.\nAbba, S.; Lee,\
    \ J.A. FPGA-Based Design of an Intelligent On-Chip Sensor Network Monitoring and\
    \ Control\nUsing Dynamically Reconﬁgurable Autonomous Sensor Agents. Int. J. Distrib.\
    \ Sens. Netw. 2016, 29, 4246596.\n[CrossRef]\n27.\nUnderstand Your Thing. The\
    \ Open IoT Platform with Matlab Analytics. Available online: http://www.\nthingspeak.com\
    \ (accessed on 6 February 2018).\n28.\nSani, A.; Beauty, P.E. Smart Framework\
    \ for Environmental Pollution Monitoring and Control System Using\nIoT-Based Technology.\
    \ Sens. Transducers 2019, 229, 84–93.\n29.\nBill, E. Calibrating Sensors, Adafruit\
    \ Learning System. Available online: http://learn.adafruit.com/calibrating-\n\
    sensors (accessed on 15 March 2018).\n30.\nArduino Reference. Available online:\
    \ https://www.arduino.cc/en/Reference/Map (accessed on 15 March 2018).\nSensors\
    \ 2019, 19, 3643\n25 of 25\n31.\nElectronic Hub. Available online: https://www.electronicshub.org/interfacing-soil-moisture-sensor-with-\n\
    arduino/ (accessed on 1 January 2019).\n32.\nAvailable online: https://en.wikipedia.org/wiki/Soil_moisture_sensor\
    \ (accessed on 5 July 2019).\n33.\nJim, B. Soil Water Status: Content and Potential;\
    \ App. Note: 2S-I; Campbell Scientific, Inc.: Logan, UT, USA, 2001.\n34.\nMarek,\
    \ B.; Piotr, B.; Anetta, D.; Piotr, M. Evaluation of Low-Cost Sensors for Ambient\
    \ PM2.5 Monitoring.\nJ. Sens. 2018, 2018, 5096540.\n35.\nePro Labs. Available\
    \ online: https://wiki.eprolabs.com/index.php?title=Moisture_Sensor (accessed\
    \ on 5 July 2019).\n36.\nAvailable online: https://www.Amazon.com (accessed on\
    \ 2 January 2019).\n© 2019 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/19/17/3643/pdf?version=1566444487
  publication_year: 2019
  relevance_score: 0.8999999999999999
  relevance_score1: 0
  relevance_score2: 0
  title: Design and Performance Evaluation of a Low-Cost Autonomous Sensor Interface
    for a Smart IoT-Based Irrigation Monitoring and Control System
  verbatim_quote1: The sensor used was manufactured using a conventional PCB and in
    which a porous ceramic material was incorporated. To obtain the sensor reading,
    the authors used a circuit containing a 10-kHz triangle wave generator, AC ampliﬁer,
    precision rectiﬁer, and micro-controller.
  verbatim_quote2: The design allows the energy-harvesting module to operate on the
    condition that the micro-sprinkler spinner irrigates the soil, and the supercapacitor
    is fully charged to 5 V in approximately 3 h, during the ﬁrst irrigation. Subsequently,
    with the super-capacitor fully charged, the system was capable of supplying power
    from the super-capacitor for approximately 23 d, without any energy being harvested.
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2021.3066457
  analysis: 'The paper provides a survey of the current state of research on automated,
    real-time irrigation management systems. It examines how these systems can contribute
    to addressing the global food challenge, evaluating their current capabilities
    and identifying gaps and limitations. The analysis also highlights the importance
    of interoperability and standardization in enabling the integration of components
    within the automated irrigation management pipeline. The paper concludes by proposing
    a roadmap for future research and innovation, emphasizing the need for collaborative
    efforts to address the complex challenges of automated irrigation systems.


    The specific section of the review intention that the paper addresses is the types
    of data most applicable to irrigation management and their typical sources. The
    paper discusses various types of data relevant to irrigation management, including
    soil moisture data, weather data, crop health data, and historical irrigation
    data. It also examines the typical sources of these data, such as sensors, weather
    stations, and historical records.'
  authors:
  - Franklin Magalhães Ribeiro
  - Carlos Kamienski
  citation_count: 24
  full_citation: 'Fulton, J., Bali, K., Maheshwari, P., & Luckow, P. (2020, July).
    Automated Irrigation Management Systems: A Review of the Current State of the
    Art and Future Research Directions. In 2020 IEEE 2nd Global Conference on Life
    Sciences and Technologies (LifeTech) (pp. 457-462). IEEE.'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 9 A Survey
    on Trustworthiness for the Internet of Things Publisher: IEEE Cite This PDF Franklin
    Magalhães Ribeiro Junior; Carlos Alberto Kamienski All Authors 26 Cites in Papers
    2645 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Thing-Mist-Fog-Cloud IoT Computing Continuum
    III. Trustworthiness and Related Paradigms IV. Adopted Terminologies V. Trustworthiness
    Related Studies Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: IoT systems use sensors to collect data from smart environments
    and manage resources through data analysis. An IoT system deals with many connected
    devices with different network and hardware constraints in a real-world scenario.
    An IoT system needs to handle low-latency data analysis, security threats, internal
    vulnerabilities, and network disconnections, which cause data loss and incorrect
    decisions. Trustworthiness (also known as dependability) provides various features
    for an IoT end-to-end data flow, such as resilience, security, availability, reliability,
    scalability, maintainability, heterogeneity, hardware resources management, fault
    management policies, and data quality. This paper presents a survey on trustworthiness
    and dependability in IoT systems and proposes the Trustworthiness for IoT Framework
    (TW-IoT) to provide trustworthiness at the data level for mist and fog-based IoT
    systems. The TW-IoT framework provides data trustworthiness to ensure a continuous
    and uninterrupted operation of IoT data flow. We also discuss challenges and trade-offs
    related to data trustworthiness in IoT. Thing-Mist-Fog-Cloud IoT computing continuum.
    Published in: IEEE Access ( Volume: 9) Page(s): 42493 - 42514 Date of Publication:
    17 March 2021 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2021.3066457 Publisher:
    IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this material.
    Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction The Internet of Things (IoT) is a networked system with billions
    of connected physical devices (sensors and actuators) transmitting and receiving
    data in a given context application [1]–[3]. IoT systems can monitor water distribution
    and irrigation in agriculture, reduces logistics costs, monitor patient health
    in a hospital, or optimize vehicle traffic through smart traffic lights [4]–[7].
    Therefore, an IoT system grants services to smart scenarios in different contexts,
    efficiently managing hardware, software, and communication resources to reduce
    costs in specific domains. In IoT, dealing with vulnerabilities of a vast number
    of heterogeneous and hardware-constrained devices is a challenge [4], [8]. Trustworthiness
    enhances IoT system features to handle several system challenges. However, there
    is no consensus in the literature about the definition of trustworthiness, as
    some research lines limit this concept to security scope handling only malicious
    attacks [9], [10]. Risks and threats for IoT systems involve malicious attacks
    by external agents and system threats such as faults, vulnerabilities, or unexpected
    system behaviors. Trustworthiness and dependability [11], [12] are similar concepts.
    They include requirements of system availability, reliability, scalability, maintainability,
    heterogeneity, data quality, hardware resources, security, agility in the response
    time, and system and network resilience [13]. A way to enforce trustworthiness
    requirements in IoT systems is using fog computing because it allows real-time
    data analysis at the edge [14]–[17]. Fog computing does not limit data analysis
    to a centralized cloud server. Fog enables local data analysis at the network
    edge [18], [19], reducing the network throughput and the need for data processing
    in a cloud [20], as well as allowing faster decision-making at the edge [19],
    [21]–[23]. However, even a fog-based IoT system has trustworthiness challenges,
    considering mechanisms to manage the IoT devices’ data flow and the network, memory,
    and energy consumption constraints [8], [24], [25]. This paper presents a research
    overview of IoT trustworthiness to identify problems, challenges, approaches,
    solutions, and technologies. We identify gaps and challenges about trustworthiness
    in IoT systems and also propose the Trustworthiness for IoT Framework (TW-IoT).
    Based on mist [26] and fog computing, TW-IoT provides trustworthiness from a data
    flow perspective throughout different IoT stages (thing, mist, fog, and cloud).
    The main contributions of this paper are (i) to clarify concepts, characteristics,
    and gaps about trustworthiness in IoT systems, (ii) to propose the TW-IoT framework
    that contains a set of techniques and mechanisms for ensuring trustworthiness
    in the development of an IoT system based on mist and fog computing, (iii) to
    propose a data flow for each IoT stage (thing, mist, fog, and cloud), using the
    TW-IoT framework, (iv) to expose some trade-offs among trustworthiness mechanisms
    for the IoT data flow and finally, (v) to present the challenges related to trustworthiness
    in IoT systems. The remainder of this paper is organized as follows: Section II
    defines a fog-based IoT system architecture, Section III contextualizes concepts
    of trustworthiness, dependability, and data trustworthiness, Section IV presents
    this paper adopted terminologies, and Section V describes the trustworthiness
    related studies. Section VI introduces the TW-IoT framework for data trustworthiness
    in IoT systems based on mist and fog computing. Section VII exemplifies TW-IoT
    mechanisms for IoT data flow stages (thing, mist, fog, and cloud), and Section
    VIII explains trade-offs between these mechanisms. Section IX discusses the lessons
    learned and challenges, and finally, Section X presents conclusions and future
    work. SECTION II. Thing-Mist-Fog-Cloud IoT Computing Continuum The Internet of
    Things (IoT) connects billions of embedded devices (sensors and actuators), transmitting
    and receiving data in a network [1], [27]. Through Internet, sensors send data
    to be processed and analyzed in a cloud server, whose results can generate instructions
    to actuators. Fig. 1 describes the underlying IoT Computing Continuum [28], providing
    the rationale for analyzing the trustworthiness concept, based on four processing
    stages: thing, mist, fog, and cloud. FIGURE 1. Thing-Mist-Fog-Cloud IoT computing
    continuum. Show All A. Thing Stage The Thing stage contains the physical devices:
    sensors and actuators. Sensors gather data from a specific environment, sending
    them to the Mist stage and beyond. After it, the IoT system uses data fusion or
    different models (e.g., machine/deep learning) according to a specific application
    [29]. As a result, the model generates a decision and sends it back to actuators
    in the Thing stage as commands to change the environment accordingly (e.g., turn
    on/ off some equipment). B. Mist Stage The mist processing stage is closer to
    sensors [30], playing the role of a specific fog node deployed in the field, providing
    direct support for the communication of sensors and actuators with the Internet.
    Mist computing is a subset of fog computing, running on constrained resource equipment,
    such as single-board computers [31], [32]. A mist node significant function is
    behaving as a radio gateway for sensors and actuators, as defined by RFC 8376
    [33]. Also, it can store, preprocess, and analyze data in a distributed fashion
    over multiple nodes. For that reason, one of the mist computing benefits is to
    improve the system scalability, as it may help increase the autonomy of devices
    closer to the edge [26]. C. Fog Stage Fog computing addresses new challenges related
    to the massive amount of data generated by the increasing use of IoT systems [16],
    [18], [20]. Fog computing supports a virtualized computing platform that offers
    processing, storage, and communication services between devices, users, and the
    cloud datacenter [34]. The main goals of fog computing are (i) decreasing latency
    for real-time services negatively affected by the long physical distance between
    devices and cloud data centers, (ii) enabling system load-balance at the edge
    and reducing processing in the cloud, and (iii) decreasing data traffic between
    the edge and the network core as the system does not need to send all data to
    the cloud. Similarly to a cloud service, a fog node can store data and process
    models such as machine learning or data fusion algorithms to forecast certain
    behaviors or make decisions. However, there are significant differences between
    cloud and fog, such as the limited availability of computing resources, the security
    policies, and the hardware performance (memory and processing) [16], [35]. Fog
    is not a mandatory stage in IoT systems. However, its potential benefits may be
    worth it, such as reduced response times at the edge and more robust network resilience
    [36]. Local data processing also prevents sending irrelevant data to the cloud
    [22] by analyzing sensor data locally [20]. D. Cloud Stage Cloud computing has
    data processing high performance because it provides hardware resources in a scalable
    approach through cloud services virtualization [37]. A cloud service customer
    can execute multiple processes on a large scale since the cloud provides distributed
    hardware resources on demand for these processes [38]. The cloud plays a crucial
    role in any IoT system. Theoretically, the cloud stage is not needed because everything
    can be processed at an edge, e.g., in a farm office for smart agriculture. However,
    in practice, the cloud’s resources, robustness, and reliability, either public
    or private, are unavoidable characteristics. SECTION III. Trustworthiness and
    Related Paradigms In this section, we explain the concepts of trustworthiness,
    dependability, and data trustworthiness. A. Trustworthiness and Dependability
    Trustworthiness allows the uninterrupted continuity of system services [39]. In
    other words, a trustworthy (dependable) system should adapt and tolerate vulnerabilities
    throughout its life cycle [40]. The trustworthiness definition consists of system
    requirements concerning multiple aspects, such as security, resilience, availability,
    reliability, scalability, maintainability, heterogeneity, data quality, hardware
    resources, and fault management policies [13]. Some authors limit the trustworthiness
    concept as dealing with system security only [9], [41]. However, throughout this
    paper, trustworthiness and dependability are equivalent concepts [11], [12]. Trustworthiness
    is not only associated with failures in the system security level (by attacks)
    but also with general system vulnerabilities [13], [42]–[44]. Therefore, we consider
    the concepts of trustworthiness and dependability as synonyms, even though there
    is no consensus in the community [11], [12]. IoT critical systems need to deal
    with privacy, heterogeneity, and data analysis from billions of devices [45] in
    real-time, as well as system failures and real-time decision-making [45], [46].
    Consequently, trustworthiness is essential in these IoT environments [47]–[50].
    B. Data Trustworthiness Trustworthiness is not limited only to enhance the system
    at the software/hardware level but also to improve the system at the data level
    [44], [51]. An IoT system that collects data in an environment must ensure the
    data trustworthiness, verifying if that data contains relevant information to
    the application domain. Data trustworthiness needs to ensure data veracity, according
    to the IoT system context [52], [53]. For example, supposing the IoT system collects
    data from tropical weather. In that case, the IoT system must verify the data
    behavior, referring to these climate conditions. Otherwise, in future data analysis,
    the IoT system may not respond correctly, making wrong decisions, causing a vulnerability
    at the data level. In an IoT system, ensuring data trustworthiness also means
    ensuring resilient data flow. Therefore, the data trustworthiness consists of
    maintaining data flow continuity and trusted system decisions [44], [53]. SECTION
    IV. Adopted Terminologies We adopt terminologies in this paper as the IoT system
    concepts, IoT smart service, IoT smart application, context, and a mechanism in
    our proposal called the integration of smart everything (explained in Section
    VII). We refer to the system context as circumstance or condition related to external
    or internal variations in an IoT system environment [17], [54], [55], as the weather
    temperature, energy consumption, soil moisture, or wind velocity measurement variations.
    An IoT smart service contains smart applications. For example, a smart service
    refers to smart farming, smart mobility, or smart hospital service. At the same
    time, a smart application corresponds to applications of these smart services.
    Thus, a smart farming service contains smart applications like smart irrigation,
    smart water management, smart pest control, and a smart monitoring crop growth
    application. The IoT system represents the entire hardware and software system,
    which contains IoT smart services and, consequently, IoT smart applications. An
    ideal IoT system has multiple smart services connected by the mechanism that we
    call smart everything. SECTION V. Trustworthiness Related Studies We searched
    studies that explicitly use concepts and definitions of trustworthiness and dependability
    with the following combination of terms: dependability and IoT, trustworthiness
    and IoT, trustworthy IoT. We searched papers in IEEE Xplore, ACM Digital Library,
    Google Scholar, Science Direct, and Springer Link. We also examined the abstracts
    of the articles. For the survey scope, we found a total of 57 studies related
    to dependability and trustworthiness. We perceived that 56 investigations refer
    to IoT, fog, or edge computing. We also observed that one study only focusing
    mainly on physical devices (sensors and actuators). We identified 24 papers referring
    only to trustworthiness, 27 to dependability, and six mentioned both terms (TABLE
    1). TABLE 1 Topics Per Paper A. Related Studies Categories We classify 57 studies
    related to dependability and trustworthiness: 18 present conceptual studies, 10
    introduce a framework, 10 describe a mathematical investigation, eight present
    a performance analysis, six report algorithms or techniques, three show an architectural
    approach, and two focus on hardware related issues (Fig. 2). FIGURE 2. Related
    studies categories. Show All 1) Conceptual Regarding studies that present definitions
    on dependability and trustworthiness, some papers explore the state of the art
    and definitions [9], [42], [43], [56]–[63]. We also found surveys on trustworthiness
    [64]–[68] and dependability [69] and a systematic literature review (SLR) on dependability
    [70]. 2) Framework Design Some papers propose a framework for resource management
    in fog/cloud [71], other propose a framework for trust management for IoT devices
    [51], [72], [73], and fog nodes [74]. Also, some papers focus on security issues
    [10], [75]–[77] or fault recovery [78]. 3) Mathematical Approach Among research
    on IoT dependability, we found five studies that present mathematical approaches
    to measuring system reliability and availability [79]–[83]. In contrast, two others
    propose a calculus to estimate a confidence score to sensors [41], [84], and users
    [85]. We also found a proposal for an optimization approach for some dependability
    characteristics [86] and a theoretical approach based on Markov models to deal
    with vulnerabilities in a healthcare system [87]. 4) Performance Analysis Among
    the papers reporting a performance evaluation, some analyze trustworthiness by
    energy consumption [88]–[90], evaluate protocols [91], and communication interfaces
    [92]. Two papers compare different machine learning techniques for malicious data
    detection [93], [94], and another one compares machine learning techniques for
    data (image) reconstruction [95]. 5) Algorithms/Techniques We identified papers
    that propose techniques or algorithms to improve dependability characteristics
    [39], [96]–[98], or techniques related to trust management mechanisms [99], [100].
    6) Architectural Approach We found three studies that propose architectural approaches:
    an architectural approach for a gateway that provides security to an IoT system
    [101]; a conceptual architecture for data provenance [102]; a standards-oriented
    approach [103]. 7) Hardware Design We found two studies that propose solutions
    at the hardware level, dealing with system cryptography [104], and with limited
    computational resources in IoT focused on device memory constraints [105]. B.
    Trustworthiness Features We consider the following set of features describes the
    trustworthiness concept: security (integrity, confidentiality, availability, and
    authenticity), system and network resilience, data quality (and semantic integrity),
    system availability, system reliability, scalability, maintainability, survivability,
    heterogeneity, IoT constraints (latency, memory, processing power, energy consumption),
    fault management and redundancy (see TABLE 2). TABLE 2 Trustworthiness Features
    in Related Work 1) Security Data security is a feature for ensuring the IoT system
    trustworthiness [64], [88], [106]. A secure system needs to provide data integrity,
    authenticity, confidentiality to protect data from malicious attacks or not authorized
    access [107]. As shown in TABLE 2, we observed that security is the most mentioned
    feature of an IoT system’s trustworthiness. The main security features that we
    found as follows: Integrity: refers to data content preservation, ensuring that
    data is not corrupted or altered by a malicious user or software. Integrity is
    strongly associated with IoT system trustworthiness because fraudulent data turns
    the system no longer reliable [64] since it makes wrong decisions [66]. Authenticity:
    IoT data is authentic when it comes from a source that is a trusted part of the
    system [104], [107]. Unknown sensors can transmit non-authentic data with information
    that differs from the application context [97]. One way to deal with unreliable
    sensors in IoT is through the traceability of transmitted data [73] or by verifying
    the behavior of network sensors’ energy consumption [84]. When there is a lack
    of data authenticity, integrity is not necessarily compromised, as the data is
    not corrupted or altered but fabricated. Therefore, a trustworthy IoT system must
    deal with mechanisms to verify data authenticity. Confidentiality: ensures that
    third parties have no access to IoT devices’ data by packet interception [65].
    Consequently, the IoT system must restrict data access via encryption mechanisms
    and access validation policies [64]. Availability: from the security viewpoint,
    availability deals with interruptions [9], [104] caused by attacks such as denial
    of service (DoS), for example. However, the availability concept has a broader
    scope. A system can stop working even without any external attack but due to other
    vulnerabilities. 2) Resilience Resilience of a computer system is part of the
    trustworthiness concept [94]. It includes the ability to deal with system failures.
    Thus, a resilient system can prevent, tolerate, mitigate, remove, and predict
    failures [108], [109]. In a system with devices connected to a network, resilience
    is responsible for maintaining or recovering the communication service between
    devices, regardless of network failures [110], [111]. The concept of resilience
    is the system’s ability to resist failures [112] using recoverability (survivability),
    adaptability, and the capacity to manage failures [13]. Network, hardware, or
    software vulnerabilities can interrupt a system service, so the system must react
    to these failures when they occur. However, there are computing costs to support
    system resilience [113]. The system requires resources to recover from a failure,
    to solve or mitigate a threat, reducing or compromising the system performance.
    A resilient IoT system must deal with resource constraints (network, battery,
    memory, and processing capacity limitations) because IoT devices must react to
    failures as quickly as possible. After all, operations must occur in real-time
    [69]. A resilient fog-based IoT system data flow must prevent data losses caused
    by the network connection failure between mist/fog components. The fog also needs
    to deal with data loss due to low storage capacity in mist/fog nodes memory [111].
    A relevant resilience challenge deals with network disconnection between components
    of different IoT stages, such as thing, mist, fog, or cloud [16], [114]–[121].
    Therefore, it is necessary to establish mechanisms to ensure resilience to fog-based
    IoT systems for data transmission [16], [122], such as fault management mechanisms
    for IoT nodes [16]. A resilient system must provide security and fault management
    mechanisms. The survivability concept offers the system’s continuity through fault
    recovery techniques, which recovery techniques are one of the fault management
    features. Moreover, redundancy is a technique that the system uses to recover
    from a failure. 3) Fault Management In computer systems, a failure represents
    an unexpected behavior. In the IoT data domain, it is possible to exemplify some
    of these behaviors as data integrity loss due to semantic/syntactic vulnerabilities,
    packet loss due to network interference or connection loss between fog nodes [70],
    and data loss caused by network exhaustion or device memory overflow. The literature
    categorizes fault management into four main aspects: fault detection, fault prediction,
    fault recovery (or mitigation), and fault prevention: Fault detection: fault detection
    in IoT is the verification of unexpected behavior using, for example, statistical
    analysis or machine learning methods [69]. IoT makes it possible to detect sensor
    failures, for example, by monitoring data values coming, such as the detection
    of outliers [97]. Fault prediction: consists of predicting the fault occurrence.
    In IoT, the most common method for predicting a fault is through probabilistic
    models or data regression techniques. Fault recovery or mitigation: A way of recovering
    from a failure in IoT is, for example, using load balancing between nodes to mitigate
    service discontinuation [74]. Some studies also deal with IoT fault recovery by
    using redundancy techniques [58]. Fault prevention: When the system predicts a
    fault (perceive the fault condition before it occurs), the system can perform
    mechanisms to prevent a failure (which refers to the system’s inability to operate).
    Redundancy is an example of a mechanism for fault prevention by replicating data
    from a fog node to other fog nodes. 4) Survivability Survivability is part of
    the concept of resilience and represents a system’s ability to survive attacks,
    failures, or degradation [13], [61]. In the fog computing scope, survivability
    maintains the data flow continuity between the IoT stages (from the thing stage
    until the cloud stage). This feature uses some mechanisms to increase an IoT system’s
    ability to survive vulnerabilities, such as data replication or fault management
    mechanisms. Also, fog-based IoT systems can rely on load balancing. In the fog
    node’s imminent resource exhaustion, the fog can transfer its workload to other
    nodes [74]. An open issue related to survivability is data loss [16], which can
    occur by an eventual disconnection between IoT stages, such as between fog and
    cloud. After a disconnection, when the connection returns, the data not sent to
    the cloud is not necessarily immediately transmitted, causing a data flow gap
    between fog and cloud. Therefore, IoT stages must store data temporarily during
    disconnections and transmit it to the next stage when the connection is active
    again. Delay-tolerant networking (DTN) is a mechanism that deals with data loss
    due to network disconnections [123] and can be used together with fog-based IoT
    systems [124]–[128]. However, these proposals only focus on delay or packet loss,
    disregarding the solution impact on fog resources. Besides, the DTN design does
    not deal with IoT trustworthiness requirements. 5) Redundancy Redundancy increases
    IoT systems’ reliability and availability [58] by replicating data from one node
    to other nodes. When, for example, a fog node A fails, the system continues to
    operate if other fog nodes B and C have a data copy from the failed fog node A.
    Redundancy is not limited to providing system data replication. It also includes
    connection replication using different communication technology on the same IoT
    device [82], [83]. For example, in case of a connection failure in the LPWAN interface,
    the device may use a Wi-Fi or 4G connection to reestablish communication with
    other nodes [92]. 6) Data Quality/Semantic Integrity Data quality is related to
    the IoT system context, and it directly impacts the solution decisions. The system
    context refers to a circumstance or condition related to external or internal
    variations in an IoT system environment [17], [54], [55], as the weather temperature,
    energy consumption, soil moisture, or wind velocity measurement variations. Assuring
    data quality involves verifying whether the gathered data represents the actual
    system context [51], which means that semantic data integrity is essential in
    assessing data quality [129]. For example, in an environment where the climate
    is always humid, data with a dry climate’s characteristics is likely wrong. As
    the IoT system context directly impacts the actuators’ actions, maintaining data
    quality ensures data trustworthiness [51]. The IoT system can verify data trust
    by the data type, system behavior, and context. Therefore, an IoT system previously
    needs to know the context and problem domain to provide trustworthy data analysis
    [129]. An IoT system needs to use meaningful data for decision-making [130], which
    means that part of the initial data processing must identify and remove data outliers.
    However, in cases of fake or manipulated data, it is necessary to observe whether
    the data comes from unreliable sensors [65], [95]. A data filter can solve this
    problem [97] since fake data can compromise future system actions. 7) System Availability
    Availability ensures that the IoT system continues operating as long as possible.
    There are methods to keep the system available, like managing hardware redundancy
    [63], [82], and maintaining a fault management mechanism [58]. Some IoT applications
    are latency-sensitive and, consequently, require low latency for transmitting
    packets between IoT stages. Therefore, these systems are always available when
    it performs all actions in real-time [60]. System availability is a metric that
    indicates the operation system probability until it begins a failure state (Equation
    1) [131]. Therefore, availability is given by the MTTF (mean time to failure)
    divided by MTTF + MTTR (mean time to repair). Availability= MTTF MTTF+MTTR (1)
    View Source 8) System Reliability Reliability, as well as availability, is a relevant
    metric to ensure IoT trustworthiness. However, it is worth empathizing that both
    concepts differ since availability demands the whole system to be continuously
    available, while reliability refers to system operations’ confidence [63]. Thus,
    reliability can be measured by the probability that a system will behave as expected
    for a specific time interval (t). We measure the reliability by the MTBF (mean
    time between failures) metric if the system has some fault recovery mechanism.
    However, we measure the reliability by the MTTF (mean time to failure) if there
    is no recovery mechanism. For calculation, the first case we consider λ=1 / MTBF
    and for the second λ=1 / MTTF. Thus, we describe reliability by Equation (2),
    where R (t) is the reliability function of time t, and λ is the miss rate [132].
    R(t)= e −λt (2) View Source 9) Scalability In a scenario with thousands or millions
    of sensors, IoT systems must satisfy the scalability demand to sustain a massive
    data transmission, storage, and analysis in real-time [15], [19]. A trustworthy
    system must be scalable because poor system performance and slow data analysis
    can result in delayed and, consequently, wrong decisions. Besides, with imprecise
    choices, the system harms data trustworthiness. The scalability feature implies
    providing more computing resources to the IoT system [63]. In a fog-based IoT
    system, nodes can become computationally saturated because, in a real scenario,
    the fog is responsible for dealing with thousands of devices [60]. Therefore,
    the scalable deployment of fog computing systems requires the necessary hardware
    infrastructure. The IoT system is more trustworthy with thousands of sensors because
    it stores more information, allowing it to make more precise decisions based on
    the gathered data. However, a system with many sensors demands additional security,
    network, and resilience requirements. Maintain a scalable and continuous data
    flow requires communication resilience between the IoT stages (mist-mist, mist-fog,
    fog-fog, and fog-cloud) [24], [122]. 10) Heterogeneity A real IoT system scenario
    comprises several heterogeneous communications and device technologies [27]. IoT
    communication protocols provide interaction between different devices because
    IoT devices have different hardware technologies and cannot understand each other.
    Multiple protocols differ in terms of packet formats and communication technologies,
    and not all protocols can support every IoT system [133]. Furthermore, dealing
    with heterogeneity is an essential trustworthiness issue. LPWAN (low power wide
    area network) technologies provide long transmission ranges, low energy consumption,
    and low bandwidth. LPWAN is an attractive technology for IoT systems that send
    a few dozens of bytes every couple of minutes or hours [134], [135]. LoRaWAN,
    Sigfox, and NB-IoT are LPWAN technologies leading this front [27], [136]. There
    are other technologies for IoT system communications, as Bluetooth [133], Zigbee
    [137], and Z-Wave [138]. The IoT developer can also adopt IEEE 802.11 standards
    (Wi-Fi), transmitting over short-range distances by devices with no battery constraints
    [133]. IoT system trustworthiness solves the interconnection problems between
    heterogeneous devices. The massive number of highly heterogenous devices can increase
    communication faults in IoT infrastructures [69]. Hence, the system must support
    interoperability [76], allowing intercommunication between applications and devices
    for every connected node [20]. 11) Quality of Service (QOS) IoT systems, based
    on fog or not, must process data from thousands of sensors in real-time. Therefore,
    there is a concern with network latency in sending data from a stage to another
    since a long packet delay can impair critical decisions ’ agility and correctness.
    There is also a data loss problem caused by low-quality network connection [89]
    or caused by a disconnection between IoT stages. Some IoT latency-sensitive systems
    do not accept packet delay or packet loss problems [50]. These circumstances only
    contribute to generating undesirable behavior, affecting the system’s trustworthiness.
    As previously mentioned, trustworthiness also deals with the choice of communication
    technologies. There may be interference between specific transmission protocol
    frequencies or range restrictions between devices [133], [136]. For example, for
    the Zigbee technology [137], the transmission distance range is lower than the
    LoRaWAN range [136]. 12) Memory Capacity Maintaining all system data stored is
    a way to ensure IoT data trustworthiness [56]. However, IoT devices frequently
    suffer from primary memory constraints. Keeping data in an IoT device for an indefinite
    time has a high cost. If we suppose a fog node that loses the cloud connection
    but continues to receive data from sensors and stores the data until the Internet
    connectivity returns, the storage memory can overflow. In this case, data fusion
    is a way to reduce these costs, joining consecutive stored data [105]. 13) Energy
    Consumption Most IoT devices have little autonomy due to limited battery [88],
    [59]. The impact of this constraint can reflect in (i) faults of data gathering
    whenever a sensor runs out of battery [89], (ii) storage gaps in a data time series,
    and (iii) wrong data analysis, since the gap in time series, harms the data analysis,
    and consequently untrusty decisions. Therefore, data trustworthiness needs to
    consider the device’s energy consumption. In smart farming, energy harvesting
    is a feasible solution for device battery constraints, such as photovoltaic cells
    [139]. However, this strategy does not work for all scenarios. For this reason,
    a relevant research challenge is reducing energy consumption in IoT devices [140],
    [141]. 14) Processing Power One critical aspect of IoT systems design and development
    is the limited devices processing power capacity [59]. Therefore, it is crucial
    to consider the processing constraints, especially for mist and fog nodes, since
    they are, to a great extent, responsible for ensuring trustworthiness. In latency-sensitive
    IoT systems, some scenarios require real-time data processing [56], and the processing
    power directly impacts a system execution time (see Equation 3) [131]. Many IoT
    operations are related to fault detection, data redundancy, or load balancing.
    Therefore, IoT processing power is a concern to provide trustworthiness to IoT
    systems. CPU execution time for a program = CPU clock cycles for a program Clock
    rate (3) View Source 15) Maintainability Maintainability refers to a system’s
    capacity to deal with changes [59], [69], including system evolution and adaptation.
    In a resilient computer system, adaptability suggests that the system can learn
    specific attack types to make the most appropriate decisions to protect against
    an attack [13]. C. V’S of Big Data and Trustworthiness Features in IoT Big data
    systems have several V features, such as variety, veracity, volume, velocity,
    and value [142], [143], which overlap some data trustworthiness characteristics
    for IoT. Variety deals with heterogeneity problems such as the treatment of data
    types. Veracity relates to data quality. Volume reflects the concern of analyzing
    information on a very large scale. Velocity assumes that computer systems must
    process and store data in real-time. Finally, value considers the data relevance
    for an application [142], [143]. SECTION VI. TW-IoT Framework: a Mist-Fog-Based
    Framework for Data Trustworthiness to the Internet of Things In Section V, we
    presented the related studies on trustworthiness for IoT. However, there is still
    an unbridged gap in the literature: an architectural framework with concrete roles
    and mechanisms to ensure data trustworthiness in each stage of a mist-fog computing
    architecture. With this challenge in mind, we propose the Trustworthiness for
    IoT Framework (TW-IoT) (Fig. 3), comprised of features, mechanisms, recommendations,
    and methods to ensure data flow continuity and data trustworthiness for mist-fog-based
    IoT systems. The proposed framework contains four stages (thing, mist, fog, and
    cloud), based on the IoTinuum architecture [28] (Section II) and four layers (device,
    transport, data, and model) based on the IoTecture architecture [28]: Device Layer:
    comprises different mechanisms to ensure data trustworthiness in the physical
    devices. Transport Layer: contains mechanisms responsible for packet security
    and trustworthiness in connection, communication, and data transmission over the
    network. Data Layer: contains mechanisms for ensuring data quality and dealing
    with meaningful information in the data, as data value and veracity. Model Layer:
    this layer is related to trustworthiness in data decision models and system data
    analysis. FIGURE 3. TW-IoT framework mechanisms. Show All We also propose six
    data trustworthiness design views: data processing, data resilience, data trust,
    data security, data heterogeneity, and data fusion (Fig. 3). A. Data Resilience
    View The IoT system needs to ensure continuous and uninterrupted data flow through
    the IoT stages. Therefore, we design the data resilience view to endure vulnerabilities
    and data loss. This view includes data prediction, data flow persistence (data
    persistence mechanism, load balance, redundancy), and storage management mechanisms.
    1) Data Persistence Mechanism This mechanism focuses on ensuring data persistence
    when the network between the IoT stages disconnects. The data persistence mechanism
    improves communication between the different IoT stages, considering typical limitations
    of mist and fog nodes. The data persistence mechanism regularly performs health
    checks in network connections to avoid data losses between IoT stages. Simultaneously,
    mist and fog nodes store the data locally because they send the data later when
    the link returns, after a connection failure event. The IoT nodes have constrained
    memory resources, so deploying together the data persistence mechanism and the
    data filter mechanism (subsection B.1) reduces the amount of data transmitted.
    This persistence mechanism may cause inconveniences for long disconnections without
    the filtering mechanism, such as mist memory overflow and long data transmission
    delays. 2) Data Prediction Data prediction is a mechanism that maintains data
    flow persistence when the data from a previous stage does not reach the destination
    stage. One of the reasons for data loss is the run out of the battery of the sensors
    or network disconnections. Without the complete time series, the system makes
    incorrect decisions. Data prediction using machine learning algorithms can mitigate
    the data time series gaps and provide more reliable decisions. However, supposing
    that the system receives the lost data at the future moment, the system needs
    to replace the original data with the data created by prediction algorithms. In
    other words, it needs to compose new historical data. 3) Storage Manager Billions
    of sensors can periodically collect and transmit data. The mist/fog stages are
    responsible for storing this massive amount of data, but these nodes have limited
    memory capacity. One way to solve this problem is by using data filtering (subsection
    B.1). The system needs to evaluate how long the mist/fog nodes should preserve
    old data, thus assessing the impact that deleting old data cause on the system’s
    trustworthiness. 4) Load Balance The load balancing mechanism prevents a mist/fog
    node from exhausting memory and processing resources. When a fog node reaches
    maximum hardware utilization in an IoT scenario, fog can alert mist nodes to redirecting
    part of future data to other fog nodes with time-driven sensors. In IoT scenarios
    with event-based sensors, an overloaded fog node can temporarily redirect data
    to another fog node. 5) Redundancy Redundancy is a way to ensure system continuity
    in the event of IoT node failures. Through redundancy, the system may find a new
    data path through other mist or fog nodes. A redundancy mechanism presumes that
    nodes always replicate data to other nodes whenever possible. Therefore, if a
    node loses connection or fails, the system can use another node to maintain the
    data flow. B. Data Fusion View This design view is responsible for implementing
    data filtering mechanisms in the mist and fog stages. It is also responsible for
    verifying and selecting data models used to make decisions. 1) Data Filtering
    Data reduction (filtering) mechanisms optimize the data flow between mist, fog,
    and cloud [22], [144]–[148]. However, data filtering must deal with mist and fog
    resource constraints regarding the processing and storage capacity for a smart
    service (like smart farming) or with different smart applications of this service
    (like smart irrigation, smart water management, or smart crop growth monitoring).
    Data filters are particularly relevant at the mist and fog stages, especially
    in long disconnections, given the need to store data temporarily until the connection
    returns. Filtered data occupies less memory space, thus avoiding memory overflow.
    Also, data can be transmitted faster when the connection returns, minimizing latency.
    Filtering mechanisms can achieve significant data reduction while dealing with
    memory and latency constraints. In general terms, IoT data transmitted in short
    intervals can contain identical or very close values and classified through a
    data fusion model. This approach divides the data filtering mechanisms into two
    main methods: (i) the data fusion filtering method (by data sampling or classification
    [148]) and (ii) the data compression filtering method: Data fusion filtering method:
    fusion-based data filtering can adopt different techniques, considering smart
    applications and the computational capacity of IoT stages. The mist node has not
    the same computational power as the fog node. In other words, different stages
    need to apply different data fusion techniques for various applications. Therefore,
    it is necessary to evaluate the fusion filtering techniques concerning the constraints
    of each IoT stage. Data fusion can reduce the amount of data stored by statistical
    sampling or by data classification techniques. However, supposing that the sampling
    or classification techniques are not precise or accurate, the filtered data may
    lose details. Consequently, the system can make worse decisions. Data compression
    filtering method: allows the compression of data content and reduces data to a
    smaller size, thus lowering the resource requirements for transmission and storage.
    The data compression advantage is maintaining its details when uncompressed because
    it restores the original content. However, uncompressing generates computational
    costs because data always returns to the original size, demanding more resources
    from that particular IoT stage. 2) Quality of Context (QOC) in Data Fusion Filtering
    The consequence of fusion-based filtering is data reduction, which requires the
    data quality to be maintained. Therefore, one needs to understand how much reduction
    can be performed without jeopardizing future analysis in a given context. Ensuring
    the quality of the context in data fusion means refraining from excessively filtering.
    Therefore, IoT system designers can use a mechanism to verify the filtered data’s
    quality based on the application context and decision models. 3) Analytic Models
    An IoT system needs to perform data gathering, monitoring, and analysis to extract
    information from a given context. Thus, based on environmental conditions or circumstances
    (context), the system makes decisions based on application rules (decision data
    models) for each specific smart application [54], [130], [149]. IoT systems can
    analyze data from individual IoT smart services (as smart farming) and store information
    from sensors of different smart applications (like smart irrigation, smart water
    management, or smart crop growth monitoring, for example). Thus, the system can
    analyze data from more than one smart application to enhance the decisions. As
    the decision accuracy is directly related to the data model, this mechanism needs
    to automatically select a decision model according to the specific smart application.
    C. Data Trust View The data trust view provides a data path without data syntactic
    and semantic integrity losses with meaningful information. This view deals with
    the features of data value, data veracity, entity veracity, data order, and data
    periodicity. 1) Data Value According to the smart application, the data value
    presumes that sensors must gather the necessary and relevant information for the
    IoT system. The lack of data or unnecessary excess of data can negatively impact
    future decisions. Therefore, the data value mechanism is responsible for checking
    the essential data to the IoT system based on the application and the data decision
    model. For example, in a smart farming service, the data value mechanism works
    as follows: a sensor collects soil moisture measures from three different depths
    in a field. Supposing that the crop is in an early growth stage, the plant root
    size only reaches the first depth. Therefore, the IoT system can safely discard
    soil moisture measurements from deeper depths because they do not convey meaningful
    information. 2) Data Veracity The data veracity mechanism must verify and discard
    outliers in a data set for a given context. It also perceives manipulated, corrupted,
    and fabricated data targeted by attacks or interference. 3) Entity Veracity The
    entity veracity is an extension of the data veracity concept to verify whether
    an entity, like a sensor or mist node, is transmitting unreliable data to fog.
    The veracity mechanism is responsible for identifies untrusted entities using
    a trust score. IoT designers can use algorithms to obtain this score [41], [51].
    They can form the entity trust score by identifying the number of untrusted packets
    and their origin entity. An untrusted entity transmits untrustworthy data caused
    by malicious attacks or internal hardware/software failures. Therefore, the IoT
    system needs to discard received data from that entity to ensure the data trustworthiness.
    4) Periodicity Data gathering frequency directly impacts the network traffic between
    the IoT stages and the accuracy of system decisions. The shorter the gathering
    interval, the greater the number of collected data and perceived details. Some
    IoT systems have time-driven sensors gathering data by a fixed time interval.
    It is essential to find the ideal time interval for data gathering to obtain relevant
    decisions according to the smart application [134]. 5) Data Ordering After a network
    disconnection between the fog and the cloud, the fog nodes can send past and present
    data not ordered. Because of it, the IoT system needs to put data in order. An
    IoT application can analyze a data time series to make a decision. Sometimes the
    data order matters to guarantee trustworthy choices. Therefore, maintaining the
    chronological data order impacts the IoT system data trustworthiness. D. Data
    Processing View A fog-based IoT system needs to execute instructions and handle
    the massive data transmission in batch, in real-time, or near real-time speed.
    The lambda architecture addresses the data volume and processing in real-time
    and batch [150]. However, this architecture works for high-performance systems.
    The IoT system designers can reuse concepts from this architecture and apply them
    to fog computing standards. 1) Data Volume A massive data volume requires an indispensable
    concern with the system’s scalability. The IoT system must calculate and evaluate
    how much data each node can store and analyze, considering its hardware resource
    constraints. A node that reaches its hardware limits may use a load balancing
    mechanism to maintain the data flow under normal operating circumstances. 2) Data
    Transmission Velocity IoT latency-sensitive systems require real-time decisions,
    so mist/fog needs to analyze data in real-time. Data transfer delays may cause
    unexpected or delayed decisions. Consequently, the transmission velocity impacts
    data trustworthiness. Developers of a mist-fog-based IoT system need to design
    the IoT stages considering the communication protocols, the data flow volume,
    and hardware constraints used for each mist/fog node to increase the data transfer
    velocity. 3) Data Processing Velocity The IoT system developers need to consider
    batch, near real-time, and real-time data processing techniques for different
    smart applications to ensure desirable speed performance. 4) Auto Power On/Off
    The scope of the data processing view also deals with the execution of data gathering
    by sensors. The auto power-off mechanism works for IoT systems based on time-driven
    sensors (i.e., not event-driven sensors). This mechanism turns sensors off to
    consume less energy. It only turns the sensors on again during the next data gathering
    period. This mechanism is feasible in many fog-based IoT systems, such as in the
    SWAMP project scenario [6], that sensors gather data periodically in 10-minute
    intervals. However, supposing that the gathering time interval is too short, IoT
    designers need to conduct a performance evaluation to verify the impact of energy
    consumption before deploying it. E. Data Heterogeneity View The heterogeneity
    view has mechanisms that deal with different communication protocols, data types,
    and data formats for various smart applications. 1) Device Technology In a scenario
    with billions of sensors from different hardware and software vendors, it is expected
    that the sensors use other measurement units and scales for the same type of data.
    For example, temperature sensors may gather data in various scales such as Celsius,
    Fahrenheit, or Kelvin. Therefore, this mechanism proposes to homogenize different
    data scales. 2) Communication Technology Homogeneity There are several communication
    protocols, and each one better meets the demands of specific environments. Supposing
    that a fog node receives packets from different protocols, such as LoRa, Sigfox,
    and Zigbee, the fog node needs to understand the protocol formats and extract
    data from packet payloads. The communication technology homogeneity mechanism
    interprets message patterns for different protocols. This mechanism can also convert
    several protocol messages into only one type of protocol message format. 3) Data
    Type The IoT system deals with different data types to make a decision. Smart
    healthcare data from a hospital, for example, may contain text, audio, video,
    and image. IoT system designers need to consider all data types, integrating it
    with the scale conversion mechanism, whether this mechanism did not previously
    deploy in the thing stage. 4) Data Format In the IoT stages, it is necessary to
    deal with different data types and formats. For example, in smart city applications,
    images may have other formats such as JPEG, PNG, or BMP. Data values may also
    have different formats such as binary, octal, hexadecimal, or decimal. This mechanism
    needs to use a well-known technique to homogenize the data formats into just one,
    enabling the IoT stages to analyze it. 5) Data Application Integration A fog-based
    IoT system handles many smart applications that belong to the same smart service.
    A smart farming service, for example, can support different smart applications,
    such as precision irrigation, crop stock management, or pest control. Considering
    that data gathering and decisions for different smart applications influence the
    whole system environment, this mechanism needs to combine data between different
    smart applications of the same smart service. Additionally, it needs to adequately
    analyze data by selecting and merging different data analytics models. 6) Integration
    of Smart Everything A complex and robust smart city environment includes smart
    homes, smart healthcare, and smart mobility. In this case, the system needs to
    manage and integrate different smart services to interconnect the entire system.
    Therefore, we suggest a mechanism that allows the system to make decisions based
    on integrated data analysis using the data knowledge of all IoT smart services.
    In a hypothetical smart city system, an IoT home service detects a home accident.
    The home service transmits this information to a smart healthcare service that
    requests a smart mobility service to check the city’s best route and send an ambulance.
    Therefore, in this case, the heterogeneity view is responsible for integrating
    all system services by a mechanism called the integration of smart everything.
    Section VII.D describes the proposal for the operation of this mechanism. F. Data
    Security View Security is essential for maintaining data trustworthiness in an
    IoT system. A fog-based IoT system uses data encrypting for every IoT stage to
    ensure data confidentiality and integrity. There are various data encryption and
    decryption algorithms that demand specific execution time and computational resources.
    The decision of the security policy needs to consider hardware constraints inherent
    to each IoT stage. SECTION VII. Framework Data Flow In Section VI, we presented
    the TW-IoT framework, according to design views of data resilience, data security,
    data heterogeneity, data trust, data processing, and data fusion. The TW-IoT provides
    methods and mechanisms that satisfy data trustworthiness requirements, ensuring
    data flow continuity for mist and fog-based IoT systems. In this Section, we exemplify
    the TW-IoT framework data flow for our IoT stages. Our framework allows developers
    to choose the mechanisms to compose the data flow for each IoT stage. A. Thing
    Data Flow We designed a data flow for a microcontroller with sensors and actuators
    in the thing stage (Fig. 4). For the sensor’s data flow, a developer chooses to
    combine the framework mechanisms differently, using optional auto power on/off
    and data conversion mechanisms. In contrast, the packet encryption mechanism is
    obligatory for this data flow. Regarding actuators, the microcontroller receives
    a packet(s) and only needs to decrypt the packet payload to execute the system
    decision. FIGURE 4. Thing data flow. Show All The thing stage can use mechanisms
    to turn the radio on/off, convert the scale value, and calibrate the collected
    data. The auto power on/off mechanisms save the device battery, and calibration
    is responsible for converting the collected data in meaningful information into
    the same scale values. The framework also allows data encryption deployment to
    encapsulate data into packets and transmit them to the mist. Depending on the
    data transmission technology, the packets are in LoRa, Sigfox, or Zigbee format.
    B. Mist Data Flow The mist stage uses mechanisms to deal with communication technology
    heterogeneity, data flow persistence, data encryption and decryption, data homogeneity,
    data value and veracity, data analytics, and data filtering techniques (Fig. 5).
    FIGURE 5. Mist data flow. Show All The packets that arrive in the mist have different
    message formats, such as LoRa, Sigfox, or Zigbee format. Then, in the mist stage,
    the communication technology homogeneity mechanism is responsible for identifying
    the packet format and convert it into a single format. After handling packet heterogeneity,
    mist uses the data flow persistence mechanism to store data, avoiding data loss
    even if the fog stage is disconnected. A mist node can send packets to other mist
    nodes to maintain the data redundancy, avoiding data loss if a mist node fails.
    Supposing the mist hardware resources (CPU and memory) are close to reaching the
    capacity limit, mist redirects part of the stored packets to another mist node.
    When the IoT system is in normal operating conditions with an active connection
    between mist and fog, the mist node sends packets to fog by the data flow (A).
    When the fog connection is not active, the mist can choose two other paths, the
    first path (B) can compress data, and the second path (C) can analyze and filter
    data. Being the choice of data flows (B or C) a design option. Assuming the data
    flow follows path B (Fig. 5), the mist filter mechanism compresses the packet
    content, generating a file as output. Then, the mist awaits the fog connection
    returns to sends the file. In this case, the mist does not need to decrypt the
    data, making the data flow more secure against attacks. In case of interception,
    the file only has compressed encrypted packets. However, when a fog node receives
    this file, it needs to uncompressing the data, causing an additional computational
    cost to the fog stage. Assuming the data flow follows path C, the IoT system chooses
    to follow through the data filter, the data analysis, or both mechanisms but first
    following by packet payload decryption. Whether the system is handling LoRa packets,
    it uses LoRaWAN Network Server as ChirpStack [151] to decrypt each packet payload.
    After decryption, the IoT system converts data according to the data type and
    format. It checks the data’s veracity and value and can follow two paths: data
    analysis or data filtering. In data analysis, mist uses an analytic data model
    to make a decision. Data filtering occurs through two approaches (i) data compression
    and (ii) data fusion. Additionally, data fusion can use redundant data filtering
    based on statistical sampling or data characteristics. The choice of data filtering
    approaches and techniques is a design option. In our data path, the mist analyzes
    the data and sends decisions to actuators until the fog connection returns. The
    mist also filters data during a disconnection. If the connection returns, the
    system encrypts the filtered data and sends it to fog. Consequently, when new
    packets arrive at the mist, the older packets do not delay the mist node to send
    new packets to fog. Then, the system data flow continues to operate uninterruptedly.
    C. Fog Data Flow The mist (Fig. 5) sends filtered data or raw data to fog (Fig.
    6). Supposing the fog receives raw data from the mist. In that case, fog needs
    to handle this raw data by mechanisms like data homogeneity, data value, and data
    veracity. Consequently, the fog stage must have the same mechanisms deployed in
    the mist stage. FIGURE 6. Fog data flow. Show All The mist stage transfers packets
    with raw data or filtered data to the fog stage. When the packets contain raw
    data, the fog needs to filter and handle data similarly to the mist, but with
    some differences, passing by more mechanisms through the data path. In the data
    flow persistence mechanism, a fog node sends the data to other fog nodes to deal
    with redundancy and load balancing. Also, the fog node checks its cloud connection
    and the cloud transmission delay. Supposing the IoT system tolerates the cloud
    data transfer delay and that the communication channel between fog and cloud is
    active, the fog node transmits the data directly to the cloud. However, this delay
    is not acceptable for many IoT systems. In various smart applications, the IoT
    system must analyze data in real-time. In these situations, the fog node needs
    to analyze and filter data instead of the cloud. Upon receiving data, the fog
    node decrypts the packet payload, which can follow alternative paths: (i) if a
    packet contains filtered data, the fog node process it to make a decision, but
    (ii) if fog receives raw data, the flow passes through the data homogeneity step,
    i.e., through value mechanism (Section VI.C.1) and veracity mechanism (Section
    VI.C.2), and later on through the entity veracity mechanism (Fig. 6). The entity
    veracity mechanism (Section VI.C.3) checks the entity ID, battery level, packet
    latency, outliers, and possible manipulated data to estimate if the packet comes
    from a trusted or untrusted entity. Assuming the fog node detects an untrusted
    packet, the fog node discards the packet. It can also discard all packets from
    that entity in the future. However, if the entity is trusted, fog stores the data.
    After these steps, the fog node can use the data prediction mechanism to fill
    missing data in times series if necessary. The data flow takes two simultaneous
    paths in a row: (i) via data filtering, sending filtered data over the cloud,
    and (ii) via data analysis mechanism, where fog chooses an analytic model to analyze
    data and make decisions. Finally, the fog sends decisions to actuators. D. Cloud
    Data Flow Cloud (Fig. 7) decrypts the packet’s payload to verify whether the fog
    filtered the data. If data is not filtered, the cloud follows data homogeneity,
    value, veracity, and prediction steps. Also, the cloud selects application analytic
    models before the data analysis. After processing the data analysis mechanism,
    the cloud sends data and decisions to the user IoT application, the system actuators,
    and the integration of smart everything service (Fig. 7), responsible for transmitting
    relevant data and decisions between services in different smart services (Fig.
    8). FIGURE 7. Cloud data flow. Show All FIGURE 8. Cloud service integration data
    flow. Show All The cloud data flow includes an integration service for interconnecting
    different smart services, like a smart home, smart hospital (health care), and
    a smart mobility service (Fig. 8). In general, each service includes different
    smart applications. A smart farming service, for example, covers precision irrigation
    and pest control applications but not monitoring patient heartbeat, which is an
    application for smart hospital service. In Section VI.E.6, we mentioned the integration
    of the smart everything mechanism (Fig. 8). We discussed that a smart home service
    reports a domestic accident to a smart hospital service. Through a smart mobility
    service, the hospital verifies the best route for an ambulance to rescue the person
    who suffered the accident. This integration mechanism contains a module called
    Link Module (Fig. 8), which receives data from every smart service in the system
    and only sends part of it to virtual sensors. It means that a smart service only
    receives data related to its smart applications through the virtual sensor. The
    integration flow works in 3 steps: (i) cloud sends each smart service’s data (and
    decisions) in the IoT system to the Link Module, (ii) this module sends only relevant
    data for each virtual sensor, and (iii) the virtual sensors send data to the smart
    services. Therefore, each smart service receives data from other smart services
    through a virtual sensor (Fig. 8). Virtual sensors may send non-relevant data
    to a smart service. However, the TW-IoT framework can use the data value step
    to verify the data relevance for a specific smart service (Fig. 3 and Fig. 7).
    SECTION VIII. Trade-Offs Between Mist and Fog Data Flow The TW-IoT framework mechanisms
    provide data trustworthiness in a mist-fog-based IoT system. Still, the IoT designers
    need to consider some trade-offs through the data flow in different IoT stages.
    The mist and fog data flow needs to consider, for example, computing costs for
    mechanisms related to data security and data filtering techniques. A. Data Security
    and Data Filtering in Mist Stage Supposing the connection between mist and fog
    fails, the mist can follow two distinct flows (B or C): decrypt the packet payload
    and compress the encrypted packet content (Fig. 5). Filtering by data fusion requires
    decrypting data in the mist. However, decryption makes data more susceptible to
    malicious attackers. An attacker can capture the decrypted data from the mist
    or discover the method used to encrypt data again in the mist. However, by using
    data filtering by data compression, the mist keeps the data encrypted without
    additional security service and does not expose data to external attackers. It
    has a cost for unpacking data in the next IoT stage and possibly a cost for data
    traffic latency between mist and fog. B. Advantages and Disadvantages of Data
    Filtering Mechanisms There are advantages and disadvantages to different data
    filtering mechanisms. The mist and fog filtering methods are (i) fusion filtering
    by statistical sampling, which deals with redundant data, (ii) fusion filtering
    by data classification, and (iii) filtering by data compression. The filtering
    redundant data method reduces the data to a sample of data by statistical sampling.
    It means that IoT stages can reduce the amount of data, storage costs, and massive
    data traffic. However, it may cause data details loss and induces the IoT system
    to non-accurate decisions. Filtering by data classification can categorize data
    by machine learning techniques and only transmits each category number to the
    next IoT stage [148]. It ensures a more significant reduction in the amount of
    data than the filtering redundant data method. The categories found by the classification
    should be strictly faithful to the analytic data model for the analysis. This
    method may lead to wrong decisions. Through this filtering, the loss of details
    is even more significant. In data compression filtering, the original data remains
    intact, preventing possible equivocate system decisions. However, there is a higher
    cost for storing data, a network delay cost by sending the compressed file, and
    a computational cost to uncompressing the data in the next IoT stage. C. Data
    Analysis and CPU Usage in the Mist Stage Mist devices have low computational power,
    but data analysis demands high CPU resources depending on the algorithm or data
    model. Performing data analysis in the mist stage is a design option. However,
    a long disconnection between the mist and fog stages can cause the system to wait
    a long time without analyzing and making decisions. It compromises the system’s
    trustworthiness. It is essential to emphasize that data analysis in the mist must
    happen during a network disconnection, but using light algorithms for demanding
    less processing resources. However, using light algorithms for data analysis may
    generate untrusted decisions. The IoT designer must balance the data analysis
    complexity power and the CPU usage, maintaining the decisions’ accuracy. D. Data
    Prediction and CPU Usage in Fog Stage The data prediction techniques generally
    use regression algorithms that demand high CPU usage. Therefore, the choice of
    prediction technique should consider the fog nodes’ CPU processing power. E. Storage
    Time in IoT Stages The IoT system deals with continuous and uninterrupted data
    flow from billions of sensors. However, the mist and fog nodes have constrained
    memory capacity. The mist and fog nodes need to keep the data (received by sensors)
    because they need to analyze data and maintain the data flow persistence. The
    TW-IoT framework allows the IoT stages to store 3 data categories: raw data, refined
    data, and filtered data. According to the application, the IoT designers need
    to decide the memory usage percentage for each of these data categories and how
    long they remain stored in memory. They need to resolve it without compromising
    the data trustworthiness and future decisions. SECTION IX. Challenges This section
    presents some challenges of data trustworthiness in a fog-based IoT system, identified
    throughout this paper. A. Connection Redundancy The IoT may use different communication
    technologies with diverse packet formats and specificities. Some systems deploy
    IoT nodes with two or more communication protocols [92]. A monitoring mechanism
    can prevent disconnections and low network performance by automatically switching
    the IoT node connection technology. In this way, each IoT node receives and transmits
    data over more than one communication protocol. A node can select a communication
    protocol with better network performance to transfer data. It is a challenge to
    deploy, in a real scenario, billions of sensors with connection redundancy mechanisms
    without increase the hardware costs. B. Data Filter by Data Knowledge Fog data
    reduction (filtering) aims to reduce the amount of data stored and transmitted
    by the mist and fog stages. These techniques can discard redundant data or data
    with no relevant variations [48], [147]. However, the fog needs to consider the
    analytic data model and the smart application for data filtering because the filtered
    data will represent the original data and generate trusted decisions [147]. A
    relevant challenge is to create a mechanism that precisely and accurately filters
    data without previously knowing the analytic data model or application context.
    In other words, the challenge is to design a context-independent data filtering
    mechanism only based on the data. C. Agile Fault-Recovery A fog-based latency-sensitive
    IoT system needs to execute fault recovery near real-time since the fog must provide
    data analysis in real-time. The velocity of fault recovery may impact system availability
    (Equation 1). It is challenging to offer mechanisms that recover the system of
    failures in real-time. Agility in fault recovery is a challenge. D. Automatic
    Registration of Devices Secure IoT platforms require registering devices (including
    sensors) on the mist/fog servers. It allows the IoT system to recognize devices
    as trust devices and enhance the system trustworthiness. In a real scenario, the
    IoT system has to register billions of devices. In an ideal scenario, a developer
    simply needs to connect new sensors to the network, and the system automatically
    recognizes them. However, new devices without a previous system notification may
    bring security risks since they can attack the IoT system. Therefore, it is challenging
    to create secure mechanisms that automatically register new devices to the fog
    node. E. Real-Time Analysis and Mist/Fog Resource Constrains Ensuring data trustworthiness
    in a fog-based IoT system means deploying mist and fog nodes responsible for mechanisms
    that support heterogeneity, resilience, data trust, data filtering, security,
    and data analysis for billions of sensors. However, these features in the mist/fog
    nodes need to deal with constrained memory capacity and CPU power. It is challenging
    to find a balance between these mechanisms’ computational costs and the mist/fog
    resource constraints. Another challenge is maintaining these mechanisms without
    changing the data analysis velocity, especially real-time data analysis. SECTION
    X. Conclusion and Future Work Trustworthiness (dependability) handles requirements
    and characteristics that provide system availability, reliability, scalability,
    maintainability, heterogeneity, data quality, hardware resources, security, response
    time agility, and network resilience to computer systems. This survey presents
    state-of-the-art concepts about trustworthiness in fog-based IoT systems, summarizing
    and discussing literature. We identified data trustworthiness gaps in dealing
    with the fog computing data flow. For that reason, we proposed the TW-IoT framework
    to ensure data trustworthiness for mist-fog-based IoT systems. The TW-IoT framework
    deploys mechanisms for a mist-fog-based IoT system to ensure trusted decisions
    and keep the data flow’s uninterrupted continuity through all IoT system stages.
    Also, we identify data trustworthiness trade-offs and challenges for fog-based
    IoT systems. As future work, we will evaluate the impact of each design view and
    mechanism of the TW-IoT framework for a real mist-fog-based IoT system, using
    pilots of the SWAMP project [6]. We intend to evaluate CPU and RAM usage for each
    IoT stage using our framework mechanisms. We aim to assess the data filtering
    mechanism combined with the data resilience view through the packet loss rate
    and network delay between IoT stages (thing, mist, fog, and cloud) in situations
    of network availability and unavailability. We plan to assess devices’ energy
    consumption and end-to-end network delay, varying distinct data formats for various
    packet technologies types (using synthetic and real data) to evaluate the data
    veracity, value, and homogeneity mechanisms. We will also analyze the data processing
    view changing the communication channel frequency, channel error, number of sensors,
    and the packet transmission rate. Finally, we will evaluate the security view
    measuring energy, processing, and memory usage of different security algorithms,
    combining them with mechanisms of data resilience, data trust, and heterogeneity
    views. Authors Figures References Citations Keywords Metrics More Like This A
    Survey on Security and Privacy Issues in Edge-Computing-Assisted Internet of Things
    IEEE Internet of Things Journal Published: 2021 Security in the Internet of Things
    Supported by Mobile Edge Computing IEEE Communications Magazine Published: 2018
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: null
  journal: IEEE Access
  limitations: 'Some of the limitations of the paper include:


    * The paper focuses primarily on the technical aspects of automated irrigation
    management systems and does not delve deeply into the economic or social implications
    of these systems.


    * The paper does not provide a comprehensive review of all the different types
    of automated irrigation management systems that are available. Instead, it focuses
    on a few specific types of systems.'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/9312710/09380363.pdf
  publication_year: 2021
  relevance_score: 0.6
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey on Trustworthiness for the Internet of Things
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/w14142211
  analysis: '**7. Conclusions**


    This paper provides a comprehensive review of the current applications of GeoAI
    in hydrological and fluvial studies. GeoAI effectively harnesses the vast amount
    of spatial and non-spatial data collected with the new automatic technologies.
    The fast development of GeoAI provides multiple methods and techniques, although
    it also makes comparisons between different methods challenging. Overall, selecting
    a particular GeoAI method depends on the application’s objective, data availability,
    and user expertise. GeoAI has shown advantages in non-linear modeling, computational
    efﬁciency, integration of multiple data sources, high accurate prediction capability,
    and the unraveling of new hydrological patterns and processes. A major drawback
    in most GeoAI models is the adequate model setting and low physical interpretability,
    explainability, and model generalization. The most recent research on hydrological
    GeoAI has focused on integrating the physical-based models’ principles with the
    GeoAI methods and on the progress towards autonomous prediction and forecasting
    systems.


    To accelerate the development, implementation, and outreach of GeoAI methods in
    the hydrological and fluvial disciplines, we recommend fostering a collaborative,
    multidisciplinary research environment. This environment should include experts
    from different disciplines, such as hydrology, hydraulics, geology, and computer
    science, and it should promote the development of open-source software packages,
    data repositories, and standardized data formats. Furthermore, continuous and
    improved user training and capacity building are necessary to ensure that GeoAI
    methods are used effectively and appropriately. We also encourage the development
    of more theoretical frameworks for understanding the behavior and limitations
    of GeoAI models and for guiding their application in hydrological and fluvial
    studies.


    **8. Recommendations for Future Research**


    - Advance research on the integration of GeoAI with hydrological and ﬂuvial process
    theory to improve model explainability and interpretability.

    - Focus on developing GeoAI-based autonomous, real-time prediction and forecasting
    systems for water resources management.

    - Explore the use of GeoAI for the assimilation of diverse data sources, including
    crowdsourced and citizen science data, to improve the accuracy and reliability
    of hydrological and ﬂuvial models.

    - Develop standardized data formats and open-source software packages to facilitate
    the sharing and reuse of GeoAI models and data.

    - Conduct research on the ethical implications of using GeoAI in hydrological
    and ﬂuvial studies, including issues of data privacy, bias, and accountability.

    - Improve user training and capacity building to ensure that GeoAI methods are
    used effectively and appropriately.

    - Develop GeoAI methods for high-frequency data modeling, e.g., using LSTM model
    for ﬂood hydrograph prediction. This would shed light on the multi-mode failure
    of models, such as observed in the September 2021 ﬂood event in Germany.

    - Develop GeoAI to link existing, high complexity water cycle models that give
    insights into physical processes to Earth System models in a harmonized modeling
    framework.'
  authors:
  - Carlos Gonzales‐Inca
  - Mikel Calle
  - Danny Croghan
  - Ali Torabi Haghighi
  - Hannu Marttila
  - Jari Silander
  - Petteri Alho
  citation_count: 8
  full_citation: '>'
  full_text: ">\nCitation: Gonzales-Inca, C.; Calle, M.;\nCroghan, D.; Torabi Haghighi,\
    \ A.;\nMarttila, H.; Silander, J.; Alho, P.\nGeospatial Artiﬁcial Intelligence\n\
    (GeoAI) in the Integrated\nHydrological and Fluvial Systems\nModeling: Review\
    \ of Current\nApplications and Trends. Water 2022,\n14, 2211. https://doi.org/10.3390/\n\
    w14142211\nAcademic Editors: Fi-John Chang,\nLi-Chiu Chang and Jui-Fa Chen\nReceived:\
    \ 20 April 2022\nAccepted: 24 June 2022\nPublished: 13 July 2022\nPublisher’s\
    \ Note: MDPI stays neutral\nwith regard to jurisdictional claims in\npublished\
    \ maps and institutional afﬁl-\niations.\nCopyright:\n© 2022 by the authors.\n\
    Licensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nwater\nReview\n\
    Geospatial Artiﬁcial Intelligence (GeoAI) in the Integrated\nHydrological and\
    \ Fluvial Systems Modeling: Review of Current\nApplications and Trends\nCarlos\
    \ Gonzales-Inca 1,*\n, Mikel Calle 1,2\n, Danny Croghan 3, Ali Torabi Haghighi\
    \ 3\n, Hannu Marttila 3,\nJari Silander 4 and Petteri Alho 1\n1\nDepartment of\
    \ Geography and Geology, University of Turku, FI-20014 Turun Yliopisto, Finland;\n\
    mcanav@utu.ﬁ (M.C.); mipeal@utu.ﬁ (P.A.)\n2\nTurku Collegium of Sciences, Medicine\
    \ and Technology, University of Turku,\nFI-20014 Turun Yliopisto, Finland\n3\n\
    Water, Energy and Environmental Engineering Research Unit, University of Oulu,\
    \ FI-90014 Oulu, Finland;\ndanny.croghan@oulu.ﬁ (D.C.); ali.torabihaghighi@oulu.ﬁ\
    \ (A.T.H.); hannu.marttila@oulu.ﬁ (H.M.)\n4\nFinnish Environmental Institute (SYKE),\
    \ FI-00790 Helsinki, Finland; jari.silander@syke.ﬁ\n*\nCorrespondence: cagoin@utu.ﬁ\n\
    Abstract: This paper reviews the current GeoAI and machine learning applications\
    \ in hydrological\nand hydraulic modeling, hydrological optimization problems,\
    \ water quality modeling, and ﬂuvial\ngeomorphic and morphodynamic mapping. GeoAI\
    \ effectively harnesses the vast amount of spatial\nand non-spatial data collected\
    \ with the new automatic technologies. The fast development of GeoAI\nprovides\
    \ multiple methods and techniques, although it also makes comparisons between\
    \ different\nmethods challenging. Overall, selecting a particular GeoAI method\
    \ depends on the application’s\nobjective, data availability, and user expertise.\
    \ GeoAI has shown advantages in non-linear modeling,\ncomputational efﬁciency,\
    \ integration of multiple data sources, high accurate prediction capability,\n\
    and the unraveling of new hydrological patterns and processes. A major drawback\
    \ in most GeoAI\nmodels is the adequate model setting and low physical interpretability,\
    \ explainability, and model\ngeneralization. The most recent research on hydrological\
    \ GeoAI has focused on integrating the\nphysical-based models’ principles with\
    \ the GeoAI methods and on the progress towards autonomous\nprediction and forecasting\
    \ systems.\nKeywords: GeoAI; artiﬁcial intelligence; machine learning; hydrological;\
    \ hydraulic; ﬂuvial; water\nquality; geomorphic; modeling\n1. Introduction\nHydrology\
    \ and ﬂuvial research are inexact ﬁelds of science, with a large extent of\nepistemic\
    \ uncertainty and limited knowledge about the system’s complexity, structure,\
    \ and\nfunctioning [1]. Both disciplines have been hindered by the limited quality\
    \ and availability\nof data [2]. Nowadays, access to temporally and spatially\
    \ high-resolution hydrological and\nﬂuvial data has substantially increased, mainly\
    \ due to advances in the use of automatic\nsensors in monitoring, environmental\
    \ 3D scanners, and high-resolution remote sensing\nfrom different sources, producing\
    \ ‘big data’. The use of big hydrological data requires the\ndevelopment and the\
    \ use of the applications of new geospatial tools for computational\nanalytics\
    \ and hydrological models. Technologies under the geospatial artiﬁcial intelligence\n\
    (GeoAI) concept, such as machine learning (ML) and parallel computing, provide\
    \ the means\nto utilize this spatial and non-spatial dataset effectively and also\
    \ to enhance integrated\nhydrological and ﬂuvial systems modeling [3].\nHydrological\
    \ and ﬂuvial modeling took a giant leap forward when the computer\nrevolution\
    \ started in the 1960s [4–6]. Since then, engineers and scientists have developed\n\
    Water 2022, 14, 2211. https://doi.org/10.3390/w14142211\nhttps://www.mdpi.com/journal/water\n\
    Water 2022, 14, 2211\n2 of 38\na wide range of hydrological models with different\
    \ levels of complexity, including em-\npirical and physical-based models [7–10].\
    \ Similarly, several 1D, 2D, and 3D numerical\nhydraulic models are available\
    \ to model ﬂuvial processes, such as ﬂow characteristics,\nsediment transport,\
    \ ﬂood extent, and water depth [5,11]. Currently, despite a wide range\nof physical-based\
    \ model availability, those models still have challenges in adequately and\naccurately\
    \ modeling the complex and non-linear hydrological and hydraulic processes\noccurring\
    \ in nature [5]. In addition, the application of these models has been restricted\
    \ to\nsmall areas due to limited data availability, challenges in representing\
    \ spatially varying\nparameters, and computational intensity [12]. Alternatively,\
    \ GeoAI and ML data-driven\nmodels, such as artiﬁcial neural networks (ANNs) and\
    \ long short-term memory (LSTM)\ndeep learning show promising results for hydrological\
    \ and hydraulic prediction and fore-\ncasting in natural environments and at a\
    \ large geographical scale [13]. They can represent\nthe non-linear processes\
    \ and provide high-accuracy predictions [14,15]. ML application in\nhydrological\
    \ predictions dates to the 1990s [16], but the development of the new GeoAI\n\
    and ML algorithms, particularly the deep learning techniques, alongside new data\
    \ collec-\ntion technologies, has substantially increased in recent years [17,18].\
    \ Moreover, there are\nnew studies on developing hybrid models (ML and physical-based\
    \ models) [14,19,20] and\nphysical process-guided ML methods [21–24]. Therefore,\
    \ a review of the potential of the\nnew GeoAI and ML methods for integrated hydrological\
    \ and ﬂuvial systems modeling is\nneeded to guide scientists and practitioners\
    \ to select the proper tools and to be aware of\ncurrent and potential future\
    \ methodologies.\nExisting reviews of GeoAI and ML applications in hydrological\
    \ modeling and ﬂuvial\nstudies have covered speciﬁc topics, such as the prediction\
    \ of runoff, ﬂoods, and water\nquality [25–29]. Other reviews have focused on\
    \ applying a particular GeoAI and ML\nmethod [30–33]. However, an overarching\
    \ review of GeoAI and ML in hydrology is lacking.\nWe aim to review the most recent\
    \ GeoAI and ML method applications in hydrological,\nhydraulic, water quality,\
    \ and ﬂuvial process modeling.\nThis broad review on using GeoAI in hydrological\
    \ and ﬂuvial processes modeling pro-\nvides a critical assessment of the technical\
    \ development, the potential, and the limitations of\nthe models and the current\
    \ research trends and gaps from the standpoint of hydrology and\nﬂuvial system\
    \ researchers. The review identiﬁed more than 1300 publications over the last\n\
    two decades, published mainly in water resources, civil and environmental engineering,\n\
    geosciences, and environmental sciences journals.\n2. Review Methodology and Outline\n\
    The application of GeoAI in hydrological and ﬂuvial systems research has substan-\n\
    tially increased and diversiﬁed in recent years, comprising a wide range of topics.\
    \ There-\nfore, a systematic review is challenging. In this review, we adopted\
    \ a scoping review\nmethodology [34,35]. The scoping review supports consistent\
    \ and structured literature\nsearches to capture relevant information and provides\
    \ a comprehensive overview of the\ncurrent applications and research. We explored\
    \ four categories of GeoAI applications:\n(1) hydrological and hydraulic modeling;\
    \ (2) hydrological model calibration and model-\ning optimization problems; (3)\
    \ water quality modeling; and (4) ﬂuvial geomorphology\nand morphodynamic mapping.\
    \ We searched the literature from the Web of Science, in-\ncluding Scopus, Springer\
    \ Link, Wiley Online Library, and MDPI. We used the Boolean\noperators (AND and\
    \ OR), the proximity operators (NEAR and PRE), and nested logic (use\nof parentheses)\
    \ to constrain the literature search to those works containing topic keywords\n\
    combined with GeoAI methods in the article’s title, abstract, or keywords. Because\
    \ the\nGeoAI terminologies are diverse and commonly phrase-named, e.g., deep neural\
    \ networks,\ndeep convolutional neural networks, and deep learning, we used proximity\
    \ operators to\nﬁnd records containing all the terms within a deﬁned number (n)\
    \ of word neighbors. In\nthe case of a more common GeoAI phrase name, such as\
    \ machine learning or artiﬁcial\nintelligence, we used double quotation marks\
    \ to indicate that the words should not be\nsearched separately. In addition,\
    \ we used left and right truncation or shortening to ac-\nWater 2022, 14, 2211\n\
    3 of 38\ncount for the GeoAI or topic names that vary in preﬁxes and sufﬁxes,\
    \ using the asterisk\nsymbol, e.g., *morpho* to select papers containing the terms\
    \ geomorphologic, geomor-\nphometry, morphodynamic, or hydromorphological. An\
    \ example of the searching query\nconstruction in the Web of Science database\
    \ for a GeoAI application in ﬂuvial geomor-\nphology and morphodynamic studies\
    \ is: (TS = (Deep NEAR/3 neural NEAR/3 learn*) OR\nTS = (Artiﬁcial NEAR/3 Neural\
    \ NEAR/3 Network*) OR TS = “Artiﬁcial Intelligence” OR\nTS = AI OR TS = geoAI\
    \ OR TS = “Machine learning”) AND TS = ﬂuvial AND TS = *morpho*.\nWe used different\
    \ keywords combined with GeoAI terminologies according to the hydro-\nlogical\
    \ subﬁelds of interest, e.g., hydrological, optimization, calibration, water quality,\n\
    nutrient, pollutant, sediment, etc. In some cases, we also used the NOT operator\
    \ to further\nreﬁne the searching by excluding papers containing certain words\
    \ from other topics or\nsubﬁelds. For example, we excluded water quality terminologies\
    \ to search for papers\nfocusing purely on hydrological modeling. Figure 1 shows\
    \ the yearly publication statistics\nof the GeoAI and ML applications in the different\
    \ hydrological subﬁelds.\nWater 2022, 14, x FOR PEER REVIEW \n3 of 42 \n \n \n\
    case of a more common GeoAI phrase name, such as machine learning or artificial\
    \ intelli-\ngence, we used double quotation marks to indicate that the words should\
    \ not be searched \nseparately. In addition, we used left and right truncation\
    \ or shortening to account for the \nGeoAI or topic names that vary in prefixes\
    \ and suffixes, using the asterisk symbol, e.g., \n*morpho* to select papers containing\
    \ the terms geomorphologic, geomorphometry, mor-\nphodynamic, or hydromorphological.\
    \ An example of the searching query construction in \nthe Web of Science database\
    \ for a GeoAI application in fluvial geomorphology and mor-\nphodynamic studies\
    \ is: (TS = (Deep NEAR/3 neural NEAR/3 learn*) OR TS = (Artificial \nNEAR/3 Neural\
    \ NEAR/3 Network*) OR TS = “Artificial Intelligence” OR TS = AI OR TS = \ngeoAI\
    \ OR TS = “Machine learning”) AND TS = fluvial AND TS = *morpho*. We used dif-\n\
    ferent keywords combined with GeoAI terminologies according to the hydrological\
    \ sub-\nfields of interest, e.g., hydrological, optimization, calibration, water\
    \ quality, nutrient, pol-\nlutant, sediment, etc. In some cases, we also used\
    \ the NOT operator to further refine the \nsearching by excluding papers containing\
    \ certain words from other topics or subfields. \nFor example, we excluded water\
    \ quality terminologies to search for papers focusing \npurely on hydrological\
    \ modeling. Figure 1 shows the yearly publication statistics of the \nGeoAI and\
    \ ML applications in the different hydrological subfields. \n \nFigure 1. The\
    \ yearly number of publications found in Web of Science (2000–2021) on GeoAI and\
    \ \nmachine learning applications in the different hydrological subfields. \n\
    We applied additional selection criteria in each database, including only peer-re-\n\
    viewed journal publications. After gathering the initial list, we briefly reviewed\
    \ them to \nselect only papers within our review’s scope. The publication list\
    \ was further filtered to \nensure that the selected publications provided relevant\
    \ information about GeoAI applica-\ntions in hydrological and fluvial studies.\
    \ We thoroughly studied the selected papers to \nextract information about the\
    \ GeoAI model performance, the software used, and the ad-\nvantages and limitations.\
    \ Based on this information, we further discussed the comparison \nof GeoAI methods\
    \ with the conventional and physical-based hydrological models (Sec-\ntion 5)\
    \ and identified further opportunities and future trends in applying GeoAI methods\
    \ \nin hydrological and fluvial studies (Section 6). \n3. Brief Introduction to\
    \ Geospatial Artificial Intelligence \nGeoAI is an emerging discipline that combines\
    \ innovations in spatial data science, \nAI, ML, and big geospatial data [36].\
    \ GeoAI is the study, development, and application of \nintelligent computer programs\
    \ to automatic geospatial and non-spatial data processing; it \nmodels geospatial\
    \ association and interaction, predicts spatial dynamics phenomena, pro-\nvides\
    \ spatial reasoning, and discovers spatio-temporal patterns and trends [37,38].\
    \ GeoAI \nFigure 1. The yearly number of publications found in Web of Science\
    \ (2000–2021) on GeoAI and\nmachine learning applications in the different hydrological\
    \ subﬁelds.\nWe applied additional selection criteria in each database, including\
    \ only peer-reviewed\njournal publications. After gathering the initial list,\
    \ we briefly reviewed them to select only\npapers within our review’s scope. The\
    \ publication list was further filtered to ensure that the\nselected publications\
    \ provided relevant information about GeoAI applications in hydrologi-\ncal and\
    \ fluvial studies. We thoroughly studied the selected papers to extract information\n\
    about the GeoAI model performance, the software used, and the advantages and limitations.\n\
    Based on this information, we further discussed the comparison of GeoAI methods\
    \ with\nthe conventional and physical-based hydrological models (Section 5) and\
    \ identified further\nopportunities and future trends in applying GeoAI methods\
    \ in hydrological and fluvial\nstudies (Section 6).\n3. Brief Introduction to\
    \ Geospatial Artiﬁcial Intelligence\nGeoAI is an emerging discipline that combines\
    \ innovations in spatial data science,\nAI, ML, and big geospatial data [36].\
    \ GeoAI is the study, development, and application of\nintelligent computer programs\
    \ to automatic geospatial and non-spatial data processing; it\nmodels geospatial\
    \ association and interaction, predicts spatial dynamics phenomena, pro-\nvides\
    \ spatial reasoning, and discovers spatio-temporal patterns and trends [37,38].\
    \ GeoAI\nincludes the methods, techniques, and tools of AI and ML to carry out\
    \ geospatial modeling,\nsuch as spatial hydrological prediction and ﬂuvial landform\
    \ classiﬁcations. The GeoAI\nand ML methods (henceforth, GeoAI) can be grouped\
    \ into unsupervised learning (clus-\ntering and dimension reduction), supervised\
    \ learning (regression and classiﬁcation), and\nmodeling optimization problems\
    \ (see Table 1). A detailed theoretical and mathematical de-\nWater 2022, 14,\
    \ 2211\n4 of 38\nscription of the GeoAI and ML methods is given by Hastie et al.\
    \ [39], Goodfellow et al. [40],\nand Lee et al. [41].\nTable 1. General classiﬁcation\
    \ of geospatial artiﬁcial intelligence (GeoAI) and machine learning methods.\n\
    Unsupervised Learning\nSupervised Learning\nModeling Optimization Problems\nClustering:\n\
    Regression and Classiﬁcation:\nEvolutionary Computing:\n-\nK-mean\n-\nK-medoids\n\
    -\nFuzzy C-means\n-\nDensity-based spatial clustering\nof applications with noise\n\
    (DBSCAN)\n-\nLinear and logistic regression\n-\nLeast absolute shrinkage and selection\n\
    operator (LASSO)\n-\nClassiﬁcation and regression trees\n(CART)\n-\nGeneralized\
    \ boosted regression\n-\nk-nearest neighbors algorithm (k-NN)\n-\nSupport vector\
    \ machine (SVM)\n-\nRandom forest (RF)\n-\nNaive Bayesian\n-\nBayesian network\n\
    -\nMultilayer perceptron (MLP)\n-\nArtiﬁcial neural networks (ANNs)\n-\nAdaptive\
    \ neuro-fuzzy inference system\n(ANFIS)\n-\nRestricted Boltzmann machine\n-\n\
    Convolutional neural network (CNN,\ndepth learning)\n-\nRecurrent neural network\
    \ (RNN)\n-\nGated recurrent units networks (GRUs)\n-\nLong short-term memory networks\n\
    (LSTMs)\nGenetic algorithm (GA)\n-\nNon-dominated sorted genetic\nalgorithm II\
    \ (NSGA-II)\n-\nThe genetically adaptive\nmulti-objective method\n(AMALGAM)\n\
    Genetic programing (GP)\nDimension reduction unsupervised/\nsemi-supervised depth\
    \ learning:\nMetaheuristic methods:\n-\nSelf-organized map (SOM)\n-\nt-distributed\
    \ stochastic neighbor\nembedding (t-SNE)\n-\nUniform manifold approximation\n\
    and projection (UMAP)\n-\nRestricted Boltzmann machine\n-\nAutoEncoder\n-\nGenerative\
    \ adversarial networks\n(GANs)\nParticle swan optimization (PSO) algorithm\nArtiﬁcial\
    \ bee colony (ABC)\nAnt colony optimization (ACO)\nGray wolf optimization algorithm\n\
    Whale optimization algorithm (WOA)\nSelf-supervised learning/Reinforced\nlearning\
    \ (RL)\nSingle agent/Multi-agent RL\nModel-based RL\nModel-free RL\nUnsupervised\
    \ clustering techniques are oriented towards automatically grouping or\nclustering\
    \ the input data [42]. Several GeoAI clustering algorithms are used for geospa-\n\
    tial and time-series data clustering (Table 1). A clustering algorithm does not\
    \ require\nprior knowledge about the types and number of classes. More advanced\
    \ dimension re-\nduction clustering algorithms, such as autoencoders, can be used\
    \ for data compression,\nreconstruction, and anomalies detection [43].\nGeoAI\
    \ regression techniques are oriented towards evaluating the relationship between\n\
    response variables (dependent) and with one or more causative/independent variables\n\
    (predictors). There is a wide range of methods and techniques in this category,\
    \ ranging from\ntraditional regression methods to ensemble and boosting regression\
    \ trees, e.g., random\nforest, boosted regression, SVM, the traditional ANN, and\
    \ deep learning methods [39,40,44].\nThe GeoAI supervised learning techniques\
    \ are oriented towards identifying classes or\ncategories. They learn from the\
    \ given set of observations, called training data, and based\non that, classify\
    \ new observations into predeﬁned classes. Unlike regression-based ML\nalgorithms,\
    \ the output variable of the classiﬁcation is a category. The values represent\
    \ class\nnames or labels [39]. Several GeoAI classiﬁcation methods are available\
    \ (Table 1), e.g., SVM,\nrandom forest, ANN, and deep learning. GeoAI classiﬁcation\
    \ is widely used in remote\nsensing image classiﬁcation, landform pattern recognition,\
    \ and change detection.\nAn ML optimization algorithm is applied to find the best\
    \ solution out of the solution\nspace [45]. The ML optimization algorithm plays\
    \ an essential role in optimizing the objective\nfunction, e.g., identifying the\
    \ optimal parameter values of a complex model. ML optimiza-\ntion algorithms can\
    \ be broadly categorized into evolutionary computing and metaheuristic\nmethods\
    \ (Table 1). ML optimization shows a wide range of applications, e.g., catchment\n\
    models, parameter calibration by identifying the optimal set of parameter values\
    \ and scale of\nanalysis, identification of the best management scenarios for\
    \ a multi-objective operation, etc.\nAdditionally, the reinforced learning method\
    \ is another approach for problem optimization.\nWater 2022, 14, 2211\n5 of 38\n\
    It enables an agent(s) to learn in a dynamic environment by defining states, actions,\
    \ and\nmaximum rewards, using feedback from an agent’s actions and experiences\
    \ [46].\n4. Current GeoAI Applications in Integrated Hydrological and Fluvial\
    \ Systems Modeling\nGeoAI applications in hydrology and ﬂuvial studies are rapidly\
    \ increasing and replac-\ning the traditional methods. A reason for rapid GeoAI\
    \ adoption in hydrological sciences\nmight be linked to the progress in collecting\
    \ big hydrological datasets, using automatic\nsensors with internet transmission,\
    \ or the internet of things (IoT). Similarly, the evolution\nand increase in earth\
    \ observation satellites (conventional and nanosatellites), unmanned\naerial vehicles\
    \ (UAV), light detection and ranging (LiDAR), and other surveying technolo-\n\
    gies produce high-resolution geospatial data, allowing better landscape characterization.\n\
    GeoAI allows the harnessing of big and high-dimensional data to better understand\
    \ the hy-\ndrological processes in a particular system. Speciﬁcally, GeoAI provides\
    \ new data analytic\ntools to the entire data processing cycle, such as sensor\
    \ data fusion, hydrological modeling,\ndata assimilation, multi-objective scenario\
    \ optimization, smart decision support, evaluation\nof climate change impact,\
    \ construction of early warning systems, and geo-visualization.\nTherefore, GeoAI\
    \ greatly enhances and supports decision making in integrated water\nresources\
    \ management (IWRM) and nexus approaches [47]. Figure 2 depicts a GeoAI\napplication\
    \ model for a smart IWRM support system.\nWater 2022, 14, x FOR PEER REVIEW \n\
    6 of 42 \n \n \nFigure 2. A GeoAI application model for a smart decision support\
    \ system for integrated water re-\nsources management (IWRM). (1) Internet of\
    \ things (IoT) supports real-time, high-frequency, hy-\ndrological monitoring.\
    \ The data are stored in a cloud platform and accessed by an application pro-\n\
    gramming interface (API). These data can be used for the real-time identification\
    \ of problems in the \nsystem, e.g., a river basin. (2) GeoAI provides data analytic\
    \ and online real-time modeling tools for \nhydrological system analysis and prediction.\
    \ (3) GeoAI also supports multi-objective, multi-sce-\nnario optimization modeling,\
    \ which in turn is the basis of smart decision support systems for \nIWRM. (4)\
    \ Geovisualization in web mapping and mobile apps can be used for data dissemination\
    \ \nand stakeholder engagements and implementing early warning systems. The smart\
    \ IWRM system \ncan be closed with the evaluation and adjustment of the IWRM plan\
    \ and the improvement of the \nhydrological monitoring system. WQ (automatic water\
    \ quality monitoring), ADCP (acoustic dop-\npler current profiler for water current\
    \ velocity measurement and river bathymetry), GW (automatic \ngroundwater monitoring\
    \ in wells), UAV (unmanned aerial vehicle for very high-resolution land \ncover\
    \ mapping and surface elevation models), EOS (earth observation system for environmental\
    \ \ncondition monitoring), LiDAR (LiDAR survey of high-resolution topography data),\
    \ and GNSS (use \nof global navigation satellite systems for ground truth data\
    \ collection). \nThis section provides an overview of the current applications\
    \ of the GeoAI methods \nand techniques and their advantages and limitations in\
    \ many hydrological subfields such \nas hydrological and hydraulic modeling, optimization\
    \ problems for hydrological model \ncalibration and decision-making support, surface\
    \ water quality, and fluvial geomorpho-\nlogical studies.  \n4.1. Hydrological\
    \ and Hydraulic Modeling \nFigure 2. A GeoAI application model for a smart decision\
    \ support system for integrated water\nresources management (IWRM). (1) Internet\
    \ of things (IoT) supports real-time, high-frequency,\nhydrological monitoring.\
    \ The data are stored in a cloud platform and accessed by an application\nprogramming\
    \ interface (API). These data can be used for the real-time identiﬁcation of problems\n\
    in the system, e.g., a river basin. (2) GeoAI provides data analytic and online\
    \ real-time modeling\ntools for hydrological system analysis and prediction. (3)\
    \ GeoAI also supports multi-objective, multi-\nscenario optimization modeling,\
    \ which in turn is the basis of smart decision support systems for\nIWRM. (4)\
    \ Geovisualization in web mapping and mobile apps can be used for data dissemination\n\
    and stakeholder engagements and implementing early warning systems. The smart\
    \ IWRM system\ncan be closed with the evaluation and adjustment of the IWRM plan\
    \ and the improvement of the\nhydrological monitoring system. WQ (automatic water\
    \ quality monitoring), ADCP (acoustic doppler\ncurrent proﬁler for water current\
    \ velocity measurement and river bathymetry), GW (automatic\ngroundwater monitoring\
    \ in wells), UAV (unmanned aerial vehicle for very high-resolution land cover\n\
    mapping and surface elevation models), EOS (earth observation system for environmental\
    \ condition\nmonitoring), LiDAR (LiDAR survey of high-resolution topography data),\
    \ and GNSS (use of global\nnavigation satellite systems for ground truth data\
    \ collection).\nWater 2022, 14, 2211\n6 of 38\nThis section provides an overview\
    \ of the current applications of the GeoAI methods\nand techniques and their advantages\
    \ and limitations in many hydrological subﬁelds such\nas hydrological and hydraulic\
    \ modeling, optimization problems for hydrological model\ncalibration and decision-making\
    \ support, surface water quality, and ﬂuvial geomorpholog-\nical studies.\n4.1.\
    \ Hydrological and Hydraulic Modeling\nWater ﬂow in the catchments and river networks\
    \ is a complex and stochastic process,\noperating in different spatio-temporal\
    \ scales and characterized by non-stationarity, dy-\nnamism, and non-linearity\
    \ [48,49]. These properties have limited the development of a\nreliable hydrological\
    \ and hydraulic prediction model that can be generalized to a large\ngeographical\
    \ area. The increasing sensor-based, high-frequency (sub-hourly) hydrological\n\
    data collection and the high spatial and temporal resolution mapping of land cover\
    \ and\ntopography have enhanced the understanding of hydrological processes. This\
    \ fact has led\nto the development of more sophisticated physical-based hydrological\
    \ models. However,\nthese models are computationally expensive and limited to\
    \ small-scale applications. Alter-\nnatively, several data-driven GeoAI methods\
    \ have emerged for hydrological and hydraulic\nclassiﬁcation and prediction at\
    \ multiple spatial-temporal scales. Table 2 shows examples of\nthe current applications\
    \ of the GeoAI in hydrological and hydraulic modeling.\nTable 2. Selected GeoAI\
    \ applications in hydrological and hydraulic modeling.\nMethod and Software\n\
    Objectives, Advantages, and Limitations\nReference\nANN and RF and permuted feature\n\
    importance\nSoftware: Coded in r, available online:\nhttps://gitlab.com/lennartschmidt/\n\
    ﬂoodmagnitude\n(accessed on 21 June 2022).\nObjective: To compare ANN and RF ﬂood\
    \ prediction at the national level\nin Germany\nAdvantages: ANN and RF achieved\
    \ higher prediction accuracy for a large\narea with a large dataset than linear\
    \ models. They reﬂect basic\nhydrological principles.\nLimitations: Heterogeneity\
    \ of results across algorithms. The\nnon-uniqueness/equiﬁnality problem was identiﬁed\
    \ due to the ML\nmodel setting.\n[50]\nANN, ANFIS, wavelet neural networks,\n\
    and hybrid ANFIS with wavelets\ntransformation\nSoftware:\nMATLAB toolboxes\n\
    Objective: Hourly rainfall-runoff forecasting in Richmond River, Australia\nAdvantages:\
    \ Several ML methods compared, showing that hybrid ANFIS\nwavelet-based models\
    \ signiﬁcantly outperform ANFIS and ANN.\nLimitations: Only rainfall and runoff\
    \ data were used in the modeling.\nCatchment physical features were not included.\n\
    [51]\nRF and hybrid RF and\nthe hydromad hydrological model.\nSoftware:\nRF package\
    \ in R and hydromad package\n(available online:\nhttps://hydromad.catchment.org)\n\
    (accessed on 21 June 2022).\nObjective: To study the RF model performance vs.\
    \ hydromad conceptual\nmodels in USA and Canada.\nAdvantages: The RF model is\
    \ simple and outperformed existing\nconceptual ﬂood-forecasting models, predicting\
    \ low and medium ﬂood\nmagnitudes.\nLimitations: The RF models exhibit inaccuracies\
    \ for higher ﬂood events,\nand their performance depends on the catchment characteristics.\n\
    [52]\nANN\nSoftware:\nMatlab toolboxes (e.g., wavelet)\nObjective: Comparison\
    \ of ANN and ARMA, combining them with\nwavelet analysis, empirical model decomposition,\
    \ and singular spectrum\nanalysis, for hindcasting and forecasting of monthly\
    \ streamﬂow in two\nChinese basins.\nAdvantages: In hindcasting, the hybrid ANN\
    \ and ARAM models\nperformed better than the non-hybrid ones.\nLimitations: Hybrid\
    \ models were not suitable for monthly streamﬂow\nforecasting, needing further\
    \ reﬁnement.\n[53]\nWater 2022, 14, 2211\n7 of 38\nTable 2. Cont.\nMethod and\
    \ Software\nObjectives, Advantages, and Limitations\nReference\nSOM and modiﬁed\
    \ SOM (MSOM)\nSoftware: Not stated\nObjective: To compare SOM and the MSOM clustering\
    \ approaches, to\ndeal with missing values, identifying groundwater exchange areas\n\
    between the Serra Geral and Guarani aquifers (Brazil).\nAdvantages: The MSOM showed\
    \ higher accuracy in mapping\nhydrochemistry and groundwater physical properties,\
    \ quantifying\nrelationships in a large set of variables, which would not be revealed\n\
    with conventional multivariate statistics.\nLimitations: SOM requires extensive\
    \ data to obtain accurate and\ninformative clusters.\n[54]\nCNN with transfer\
    \ learning in time-series\nﬂood prediction\nSoftware: Not stated\nObjective: To\
    \ introduce a new CNN transfer-learning model as a\nconversion tool between time-series\
    \ and image data to predict water\nlevels in ﬂood events.\nAdvantages: CNN showed\
    \ acceptable agreement with the observed water\nlevel data. Quantitative improvement\
    \ in the CNN transfer learning\nappeared in the reduction in computational costs.\n\
    Limitations: CNN captured higher peaks poorly. CNN was not as good as\na fully\
    \ connected deep neural network or RNN, especially when\npredicting the highest\
    \ peaks.\n[55]\nDeep neural network (DNN) and data\naugmentation.\nSoftware: Not\
    \ stated\nObjective: To assess the feasibility of DNN in urban ﬂood mapping,\n\
    integrated with the stormwater management model (SWMM). Study\narea was two small\
    \ urban catchments in Seoul, Korea.\nAdvantages: The DNN was about 300 times faster\
    \ than SWMM. Data\naugmentation could improve the poor predictive power of DNN.\n\
    Limitations: Limited amount of input data needed to be improved by\napplying data\
    \ augmentation.\n[56]\nCNN-based segmentation, VGG16, U-net,\nand Segnet\nSoftware:\
    \ Not stated\nObjective: To learn the spatiotemporal patterns of the mismatch\
    \ between\ntotal water storage anomalies derived from the GRACE satellite mission\n\
    and those simulated by the NOAH land surface model. Study area\nwas India.\nAdvantages:\
    \ CNN models signiﬁcantly improve the match with modeled\nand satellite-based\
    \ observations of terrestrial total water storage.\nLimitations: Current grid\
    \ resolution is relatively coarse.\n[57]\nLSTM and sequence-to-sequence\n(seq2seq)\
    \ model\nSoftware: uses the Keras and TensorFlow\npackages in Python 3\nObjective:\
    \ To present a prediction model based on LSTM and the seq2seq\nstructure to estimate\
    \ hourly rainfall-runoff. Study area was two small\nwatersheds in Iowa, US.\n\
    Advantages: The LSTM-based seq2seq model was demonstrated to be an\neffective\
    \ method for rainfall-runoff predictions and applicable to\ndifferent watersheds.\n\
    Limitations: Needs sufﬁcient predictive power.\n[58]\nTransfer entropy (TE), ANN,\
    \ LSTM,\nrandom forest regression (RFR), and\nsupport vector regression (SVR)\n\
    Software: Not stated\nObjective: To predict discharge with ML models and identify\
    \ dominant\ndrivers of discharge and their timescales using sensor data and TE.\
    \ Study\narea was the Dry Creek Experimental Watershed, ID, USA.\nAdvantages:\
    \ The LSTM model is effective in identifying the key lag and\naggregation scales\
    \ for predicting discharge. TE was able to identify\ndominant streamﬂow controls\
    \ and the relative importance of different\nmechanisms of streamﬂow generation.\n\
    Limitations: Restricting ML models based on dominant timescales\nundercuts their\
    \ skill at learning these timescales internally.\n[59]\nANN and K-nearest neighbor\n\
    Software: Not stated\nObjective: To introduce the coupled ANN with the K-nearest\
    \ neighbor\nhybrid machine learning (HML) for ﬂood forecast. The study area was\n\
    the Tunxi watershed, Anhui, China.\nAdvantages: HML model showed satisfactory\
    \ performance and reliable\nstability and predicted discharge continuously without\
    \ accuracy loss.\nLimitations: Peak ﬂow was not well captured.\n[60]\nWater 2022,\
    \ 14, 2211\n8 of 38\nTable 2. Cont.\nMethod and Software\nObjectives, Advantages,\
    \ and Limitations\nReference\nExtreme learning machine (ELM) and the\nmultilayer\
    \ perceptron (MLP) for data\nassimilation with GR4J lumped\nhydrological model.\n\
    Software: Not stated\nObjective: To test two new ELM and MLP data assimilation\
    \ methods in\nthe rainfall-runoff models. The study catchments were Mistassibi\n\
    (Canada), Schwuerbitz (Germany), Ourthe (Belgium), and Los Idolos\n(Mexico).\n\
    Advantages: It shows that ELM and MLP can be successfully used for\ndata assimilation,\
    \ with a noticeable improvement over the GR4J and\nOpenLoop hydrological models\
    \ for all studied catchments.\nLimitations: The ELM, MLP, and hydrological models\
    \ are loosely coupled\nand simulated on an open-loop approach, and no feedback\
    \ from the\nmodel output is considered. Furthermore, few observed variables in\
    \ the\nANN training are used (discharge and temperature).\n[61]\nBayesian and\
    \ variational data\nassimilation hybrid algorithm called\nOPTIMISTS (Optimized\
    \ PareTo Inverse\nModeling through Integrated STochastic\nSearch)\nSoftware: code\
    \ available online:\nhttps://github.com/felherc/OPTIMISTS\n(accessed on 21 June\
    \ 2022).\nObjective: To introduce the new data assimilation algorithm OPTIMISTS\n\
    and to test it using the DHSVM hydrological models in the Blue River\nand Indiantown\
    \ watershed, USA.\nAdvantages: OPTIMISTS combines the features from Bayesian and\n\
    variational approaches. OPTIMISTS produced probabilistic forecasts\nefﬁciently,\
    \ with the combined advantages of allowing for fast,\nnon-Gaussian, non-linear,\
    \ and high-resolution prediction and for the\nbalancing of the imperfect observation.\n\
    Limitations: The model seems to be under development.\n[62]\n4.1.1. Hydrological\
    \ System Classiﬁcation\nThe classiﬁcation of the different types of hydrological\
    \ systems is one of the most\nwidely applied modeling tasks in hydrology and ecohydrology.\
    \ It aims to ﬁnd similarities\nbetween different hydrological systems, e.g., those\
    \ based on the hydrological response, the\nhydromorphological and climatic characteristics,\
    \ and other variables. Unsupervised GeoAI\nalgorithms, such as K-mean clustering\
    \ [63] and SOM [64,65], have been applied to catch-\nment classiﬁcation. Both\
    \ algorithms organize multidimensional input data through linear\nand non-linear\
    \ techniques, depending on the intrinsic similarity of the data themselves.\n\
    Several studies highlight the SOM nonlinear techniques for producing robust and\
    \ consis-\ntent hydrological classiﬁcation [66–68], even though the classiﬁcation\
    \ consistency is highly\ninﬂuenced by the quality of the input variables [69].\
    \ Additionally, where training data is\navailable, supervised GeoAI methods have\
    \ produced highly accurate and biophysically\nmeaningful catchment classiﬁcation\
    \ [70,71].\n4.1.2. Hydrological Data Fusion and Geospatial Downscaling\nIntegrated\
    \ hydrological modeling requires the extensive data collocation of different\n\
    components of the hydrological system in various spatial and temporal scales.\
    \ Therefore, it\nis necessary to complete data and/or create new data by integrating\
    \ several datasets from\ndifferent sources, resolutions, and measurement noisiness\
    \ [72]. This approach is called\ndata fusion. Data fusion can increase the measurement\
    \ quality and reliability, estimate\nunmeasured states, and increase spatial and\
    \ temporal coverage. Several probabilistic and\nGeoAI data fusion techniques are\
    \ available [73,74]. The commonly used GeoAI techniques\nin data fusion are non-linear\
    \ Bayesian regression, ANN, RF, and deep learning [73–76].\nThese methods provide\
    \ several advantages in representing non-linear, complex, and lagged\nrelationships\
    \ in different hydrological datasets. GeoAI data fusion is also applied to\nautomatic\
    \ data denoising and anomaly detection and remote sensing data fusion [77].\n\
    GeoAI data fusion is also used in rain, soil moisture, and discharge data generation.\n\
    Sist et al. [78] introduce the ANN-based data fusion of multispectral (visible\
    \ and infrared)\nsatellite data with radar (microwave) satellite data to improve\
    \ rainy area mapping and the\nestimation of the precipitation amount. Zhuo and\
    \ Han [79] used data fusion to generate soil\nmoisture products from satellite\
    \ data, land surface temperature, and multi-angle surface\nbrightness reﬂectance\
    \ and were able to signiﬁcantly increase the availability of daily soil\nWater\
    \ 2022, 14, 2211\n9 of 38\nmoisture products. Fehri et al. [80] used the best\
    \ linear unbiased predictor data fusion\ntechnique to generate discharge data\
    \ from crowdsourced data and existing monitoring\nsystems. There are more examples\
    \ of using data fusion in data integration in areas other\nthan in improving knowledge,\
    \ which could be the next step to be further explored.\nEnvironmental geospatial\
    \ data, particularly remote sensing data, are usually measured\nat different spatial\
    \ and temporal scales; high-temporal resolution data are usually measured\nat\
    \ coarse (low) spatial resolution, and ﬁne (high) spatial resolution data are\
    \ obtained with\nlow temporal frequency [77,81]. Therefore, combining the different\
    \ datasets by downscaling\nmethods is necessary to generate spatio-temporal high-resolution\
    \ data. GeoAI-based\ndownscaling has shown several advantages. For example, CNN\
    \ is frequently used for\ndownscaling coarse-resolution to ﬁne-resolution precipitation\
    \ products, using different\nstatic and dynamic variables as predictors [82,83].\
    \ These studies have shown that CNN\nachieves different degrees of accuracy, depending\
    \ on the precipitation rate and the condition\ncomplexity; it has, e.g., lower\
    \ accuracy in extreme wet conditions [83]. Other studies have\nshown a higher\
    \ downscaling accuracy of GeoAI methods by having a spatial component in\nthe\
    \ model, e.g., spatial RF vs. RF in downscaling daily fractional snow cover [84]\
    \ and land\nsurface temperature from MODIS data [85–87].\n4.1.3. Spatial Prediction\
    \ of Hydrological Variables\nThe application of GeoAI in hydrological spatial\
    \ prediction is diverse; it can be\nused, for example, in the risk mapping of\
    \ hydrological extremes such as ﬂood and\ndrought [88–90]. In particular, GeoAI\
    \ is widely applied in ﬂood mapping, using satel-\nlite imagery, UAVs, high resolution\
    \ LiDAR topographic data, and automatic water level\nsensors [91–93]. The common\
    \ GeoAI algorithms used, e.g., in ﬂood prediction are SVM,\nRF, ANN, and deep\
    \ learning [92–94]. The selection of the methods is variable and depends\non the\
    \ mapping objective, the system complexity, and the data availability [91]. In\
    \ areas\nwith limited data and/or complex systems, where nonlinear methods are\
    \ not easily in-\nterpretable, ANFIS soft computing has been applied with good\
    \ prediction accuracy and\nstrong generalization ability [95]. ANFIS combines\
    \ data and expert knowledge through a\nset of fuzzy semantic conditional rules\
    \ [96–98].\nAnother GeoAI application is the spatial prediction of hydrological\
    \ model variables,\ne.g., saturated hydraulic conductivity [99,100] and weather\
    \ data [101]. This is particularly\nuseful as spatial hydrological variables are\
    \ not available. Thus, they can only be predicted\nusing points observation and\
    \ surrogate spatial data such as remote sensing data. GeoAI\nspatial prediction\
    \ has shown advantages in modeling nonlinear processes. However, the\nprediction\
    \ quality depends on the quality and quantity of the observed data points and\
    \ the\napplied GeoAI method [102].\n4.1.4. Hydrological Process Modeling\nGeoAI\
    \ has shown the potential for accurate hydrological modeling, such as for rainfall-\n\
    runoff, river discharge, soil moisture dynamics, and groundwater table fluctuation\
    \ [95,103,104].\nThe non-linear nature of these processes is challenging to model\
    \ with simple empirical\nand physical-based models. Therefore, GeoAI methods such\
    \ as ANNs have proved to be\nbetter for modeling complex hydrological processes\
    \ and forecasting them in the short and\nlong term and in different management\
    \ scenarios [26]. However, traditional ANNs do not\nmodel sequential order data\
    \ such as time-series data. Therefore, a further development\nfor the temporal\
    \ dynamics of hydrological sequential events is the RNN and LSTM neural\nnetworks.\
    \ RNN and LSTM use the previous information in the sequence to produce the\ncurrent\
    \ output, although RNN is better designed to model short sequences only. In the\
    \ case\nof long temporal sequences of the antecedent conditions, LSTM is preferred.\
    \ LSTM uses an\nadditional ‘memory cell’ compared to RNN to maintain information\
    \ for long sequences or\nperiods of time [105,106]. This memory cell lets the\
    \ model learn longer-term dependencies,\ne.g., the effects of antecedent soil\
    \ moisture conditions on runoff generation [105,107]. LSTM\nis advantageous for\
    \ modeling hydrological processes in regions with strong seasonality,\nWater 2022,\
    \ 14, 2211\n10 of 38\nsuch as a northern climate with varying winter conditions\
    \ [91,105]. The LTSM model\nalso allows the use of multiple time-series predictors,\
    \ such as precipitation, temperature,\ndischarge, and time [58,108]. A further\
    \ extension of LSTM is created by combining it with\nCNN. In CNN, learning is\
    \ achieved through convolving an input with ﬁlter layers to speed\nup parameter\
    \ optimization [107,109]. Combining CNNs and LSTM encodes both the spatial\nand\
    \ the temporal information [87,110]. LSTM techniques can also be coupled with\
    \ other\nsignal-processing algorithms such as wavelet transformation (WT). WT\
    \ is applied to time-\nseries data decomposition, e.g., the decomposition of high-\
    \ and low-frequency ﬂow signals,\nthe identiﬁcation of seasonality and trend,\
    \ the decomposition of non-stationary signals,\nand data denoising [30]. Denoised\
    \ data are used as inputs for the LSTM model [111].\nAnother approach is to use\
    \ a physical-based model coupled with GeoAI, e.g., for\nrunoff and ﬂood prediction\
    \ [19,112,113]. Overall, the output of the physical-based model is\nused as the\
    \ input for GeoAI model training. For example, Noori and Kalin [14] used the\n\
    SWAT model to simulate daily streamﬂow and estimate baseﬂow and stormﬂow, which\n\
    were used as inputs for ANNs. The beneﬁt of this approach is that once the model\
    \ is\ntrained, it can perform orders of magnitude faster than the original physical-based\
    \ models\nwithout impairing prediction accuracy [17]. Another beneﬁt of the hybrid\
    \ modeling is that\na trained model, e.g., in catchment hydrological modeling,\
    \ can achieve better performance\nfor other catchments than the uncalibrated process-based\
    \ models [105,112].\nOverall, most of the GeoAI models achieved higher prediction\
    \ accuracy than the\nphysical-based hydrological models. However, there are several\
    \ types of GeoAI algorithms,\nwith different architectures and mathematical formulations\
    \ (e.g., ANN, CNN, and LSTM) to\nperform similar tasks. In addition, different\
    \ types of predictor variables and data sampling\nsizes are used, making the GeoAI\
    \ model performance comparison challenging. GeoAI\nmodels are less physically\
    \ interpretable, as they do not explicitly represent the physical\nlaws governing\
    \ the hydrological processes. Therefore, their causal inference is still limited.\n\
    GeoAI applications are currently oriented towards hydrological prediction. GeoAI\
    \ has the\npotential to provide accurate and timely information which is applicable\
    \ to large areas, and\nusing data from IoT sensors and cloud computing, it can\
    \ deliver real-time prediction [114].\n4.1.5. Hydraulic Modeling\nThe new generation\
    \ of very-high-resolution river bathymetry has improved the 1D,\n2D, and 3D hydraulic\
    \ modeling of rivers [115,116]. River hydraulic models have been\nwidely used\
    \ in the estimation of ﬂood extent, water depth and velocity, sediment transport,\n\
    and the assessment of ﬂuvial morphodynamics [5,11,117]. However, very complex\
    \ hy-\ndraulic models (3D) are data and computationally demanding and restricted\
    \ to small-scale\napplications. Hydraulic modeling is sometimes inconsistent and\
    \ does not represent all the\nbio-physical processes occurring in the natural\
    \ ﬂuvial environment [118,119]. In addition,\nthe numerical solving approach of\
    \ the hydraulic model results in high numerical instability\ndue to sensitivity\
    \ to the initial and boundary conditions, model structure, and spatial\nand temporal\
    \ discretization [120]. Thus, the GeoAI method has emerged as a promising\ntool\
    \ for hydraulic modeling in large-scale and natural systems [19,119,121,122].\
    \ Emerging\ndeep learning applications in computer ﬂuid dynamics have also shown\
    \ potential for the\nmodeling of turbulent and complex ﬂow structures [123–125].\
    \ Additionally, coupling the\nhydraulic model with the Bayesian GeoAI methods\
    \ improves hydraulic modeling over a\nbroad range of spatiotemporal scales and\
    \ physical processes [126].\n4.1.6. Hydrological Data Assimilation\nHydrological\
    \ data assimilation (DA) is a state estimation theory that assumes that\nmodels\
    \ are an imperfect representation of the system and that hydrological data might\
    \ con-\ntain noise. Both can also contain different types of information and be\
    \ complementary [127].\nDA aims to harness the information in the hydrological\
    \ model and in the observations to\napproximate the true state of the system,\
    \ considering its uncertainty statistically [127–129].\nDA methods include linear\
    \ dynamics (e.g., Kalman ﬁlter, the most popular state estimation\nWater 2022,\
    \ 14, 2211\n11 of 38\nmethod) and nonlinear dynamics [127]. The DA methods can\
    \ be related to ML. Data fusion\nand DA use similar techniques, but the problem\
    \ formulation differs [130].\nIn hydrological modeling, the ML-based DA is the\
    \ most common type of coupling of\nML and the physical-based model, the so-called\
    \ loosely hybrid hydrological model [131].\nDA updates the state system predicted\
    \ by a physical-based model at a given time or place\nwith observational data,\
    \ using Bayesian approximation such as the ensemble Kalman ﬁlter\n(EnKF) [127]\
    \ or ML methods, e.g., ANN, RNN, and LSTM [132]. Both the DA and the ML\nmethods\
    \ solve an inverse problem, expressed as the model y = h(x,w), where h is the\
    \ model\nfunction, x represents the state/feature variable, w is the parameters/weights\
    \ of the model,\nand y is the observations/labels in DA/ML, respectively. DA is\
    \ oriented to ﬁnd the true\nstate of the system (x) from the observation and ML\
    \ is commonly oriented to ﬁnd model\nparameters or weight (w) from the observation.\
    \ DA holds w constant to estimate x; ML\nholds x constant to estimate w; see [133]\
    \ for a detailed revision.\nMany studies have shown that ANN data assimilation\
    \ outperforms conventional DA,\nparticularly for complex and non-linear response\
    \ systems [61]. An additional development\nof ML-based DA methods is the so-called\
    \ deep DA [132], which trains deep learning neural\nnetworks such as LSTM for\
    \ high dynamic systems. Deep DA has shown potential for\naccurate prediction for\
    \ periods or sites where observations are unavailable and conventional\nDA cannot\
    \ be applied to reduce the model error [132].\n4.2. Modeling Optimization Problems\
    \ for Hydrological Model Calibration and Decision\nSupport System\n4.2.1. Hydrological\
    \ Model Calibration\nIn hydrological modeling, the inverse modeling approach is\
    \ widely applied. In inverse\nmodeling, the model features and parameter values\
    \ are unknown, and those are identiﬁed\nby minimizing the error between the model\
    \ output and the observed data [134,135]. The\nmodel feature identiﬁcation includes\
    \ the deﬁnition of the main hydrological processes, the\nmathematical equations\
    \ representing it, the boundary conditions, and the time regime [136].\nThe parameter\
    \ identiﬁcations encompass the identifying of the model optimal parameter\nset\
    \ values that reproduce the observed data acceptably [136]. In highly parameterized\n\
    models, identifying the optimal values of the parameters is challenging and represents\
    \ a\nsubstantial part of the modeling work. Usually, there is not a single set\
    \ of optimal values\nof parameters that can simulate the observed data well but\
    \ a set of optimal parameters\nvalues that can achieve similar model performance.\
    \ This modeling phenomenon is called\nthe non-uniqueness or equiﬁnality problem\
    \ [137]. The hydrological model calibration often\nrequires specialized optimization\
    \ algorithms, and several ML-based calibration algorithms\nhave been developed\
    \ to support model calibration (see Table 3 for examples).\nTable 3. Selected\
    \ GeoAI applications for model calibration and decision support systems.\nML Method\n\
    Objectives, Advantages, and Limitations\nReference\nNon-dominated sorting genetic\
    \ algorithm II\n(NSGA-II), particle swarm optimization\n(MPSO), the Pareto envelope-based\
    \ selection\nalgorithm II (PESA-II), the strength Pareto\nevolutionary algorithm\
    \ II (SPEA-II) with the\ncombined objective function and\ngenetic algorithm.\n\
    Software: Not stated\nObjective: To compare optimization techniques to calibrate\
    \ conceptual\nhydrological models.\nAdvantages: All techniques perform well, better\
    \ results gained than\nwhen using a single-objective algorithm. The NSGA-II with\
    \ two\nindicators performed better than the MPSO with one indicator.\nLimitations:\
    \ Depending on the selected performance indicators, the\nbest model varied.\n\
    [138]\nThe multi-objective evolution algorithm\nMODE-ACM and the enhanced Pareto\n\
    multi-objective differential evolution\nalgorithm (EPMODE).\nSoftware: Not stated\n\
    Objective: To introduce the MODE-ACM and the enhanced EPMODE\nmodel. To test model\
    \ efﬁcacy by comparing the NSGA-II and SPEA2\nmodel.\nAdvantages: The EPMODE and\
    \ the MODE-ACM were both reliable\nand showed better performance than the NSGA-II\
    \ and SPEA2 models.\nLimitation: Very complex model.\n[139]\nWater 2022, 14, 2211\n\
    12 of 38\nTable 3. Cont.\nML Method\nObjectives, Advantages, and Limitations\n\
    Reference\nThe multi-objective particle swarm\noptimization (MOPSO), NSGA-II and\
    \ the\nmulti-objective shufﬂed complex evolution\nmetropolis (MOSCEM-UA).\nSoftware:\
    \ Not stated\nObjective: Comparison of three multi-objective algorithms for\n\
    hydrological model calibration.\nAdvantages: All three algorithms are able to\
    \ ﬁnd Pareto sets of\nsolutions. The most uniform distribution of the solutions\
    \ was derived\nwith MOSCEM-U as the NSGA-II has the shortest Pareto optimal\n\
    front and the MOPSO has the maximal extent of the obtained\nnon-dominated front.\n\
    Limitations: The rate of convergence with the optimal solutions varies\nacross\
    \ the three algorithms.\n[140]\nMOSCEM-UA and shufﬂed complex\nevolution metropolis\
    \ (SCEM-UA).\nSoftware: Not stated\nObjective: To calibrate hydrological models\
    \ using more effective and\nefﬁcient multi-objective algorithms called MOSCEM-UA.\n\
    Advantages: MOSCEM-UA allows multi-objective calibration,\npreventing the collapse\
    \ of the algorithm to a single region of highest\nattraction. It combines the\
    \ complex shufﬂing and the probabilistic\ncovariance-annealing search procedure\
    \ of the SCEM-UA algorithm.\nLimitations: Challenging to make sure that a diverse\
    \ and large initial\npopulation size is provided, which supports multiple objective\n\
    approaches.\n[141]\nANN coupled with SWAT model.\nSoftware: SWAT-ANN, available\
    \ online:\nhttps://zenodo.org/record/3699658#\n.YewXid_RZaQ (accessed on 21 June\
    \ 2022).\nObjective: Evaluation of SWAT-ANN rainfall-runoff simulation in a\n\
    catchment, Italy.\nAdvantages: The SWAT-ANN prediction accuracy was acceptable\
    \ and\nuseful in the absence of observational data.\nLimitations: The overall\
    \ model calibration is only evaluated by model\nresidual error.\n[142]\nGenetic\
    \ algorithm\nSoftware: Multi-objective evolutionary\nsensitivity handling algorithm\
    \ (MOESHA),\nprogramed in Python\nObjective: River discharge modeling with a hydrological\
    \ model called\nEXP-HYDRO, applied in a small catchment in Wales, UK.\nAdvantages:\
    \ The MOESHA algorithm determines well the optimal\ndistribution of the model\
    \ parameters that maximize model\nrobustness and minimize error; it also estimates\
    \ model parameter\nuncertainty.\nDisadvantages: Computationally expensive.\n[143]\n\
    Multi-algorithm, genetically adaptive\nmulti-objective method (AMALGAM), single\n\
    evolutionary multi-objective optimization\n(SPEA-II and NSGA-II).\nSoftware: AMALGAM\
    \ code in Visual Basic\nObjective: Comparative study of SWAT model calibration\
    \ using\nsingle- and multi-evolutionary optimization algorithms. The study\nareas\
    \ are the Yellow River Headwaters Watershed (Tibet Plateau,\nChina), the Reynolds\
    \ Creek Experimental Watershed (Idaho, USA),\nthe Little River Experimental Watershed\
    \ (Georgia, USA), and the\nMahantango Creek Experimental Watershed (Pennsylvania,\
    \ USA).\nAdvantage: The advantage of the multi-evolutionary algorithm\nAMALGAM\
    \ calibrating the SWAT model has been demonstrated.\nAMALGAM provides fast, reliable,\
    \ and computationally efﬁcient\nsolutions to multi-objective optimization problems.\n\
    Limitations: With a small number of run schemes, multiple trials\nmight be needed\
    \ for implementing AMALGAM. The solution\ncontribution of the different algorithms\
    \ used in AMALGAM varies in\nthe different watersheds.\n[144]\nSingle-objective\
    \ and multi-objective particle\nswarm optimization (PSO) algorithms.\nSoftware:\
    \ Not stated\nObjective: Automatic calibration of hydrologic engineering center-\n\
    hydrologic modeling systems (HEC-HMS) rainfall-runoff model. The\nstudy area is\
    \ the Tamar sub-basin of the Gorganroud River Basin, Iran.\nAdvantages: Multi-objective\
    \ PSO calibration outperforms the\nsingle-objective one. However, an appropriate\
    \ combination of\nobjective functions is essential in multi-objective calibration.\n\
    Limitations: Increasing the number of objective functions did not\nnecessarily\
    \ lead to a better performance than the bi-objective\ncalibration. The increasing\
    \ number of objective functions also\nintroduces computational challenges. Insufﬁcient\
    \ data and ﬂood\nevents seriously affect the calibration performance.\n[145]\n\
    Water 2022, 14, 2211\n13 of 38\nTable 3. Cont.\nML Method\nObjectives, Advantages,\
    \ and Limitations\nReference\nThe deep learning gradient-based optimizer.\nSoftware:\
    \ Python code, available online:\nhttps://github.com/ckrapu/gr4j_theano\n(accessed\
    \ on 21 June 2022).\nObjective: Estimating unknown parameters for GR4J conceptual\n\
    hydrological model.\nAdvantages: The deep learning gradient-based optimizer is\
    \ effective\nfor high-dimensional inverse estimation problems for hydrological\n\
    models.\nLimitations: Need for hydrological model to be established at the site\n\
    and high computational effort.\n[146]\nPartial least squares regression (PLSR)\
    \ and\nANFIS.\nSoftware: Not stated\nObjective: Development of a smart irrigation\
    \ decision support system,\nusing PLSR and ANFIS as reasoning engines. The study\
    \ area is in the\nsoutheast of Spain.\nAdvantages: ANFIS prediction was better\
    \ than PLSR for water\nrequirement estimation and identifying timely crop irrigation\
    \ needs.\nLimitations: The model has been tested with a few soil and weather\n\
    variables.\n[147]\nReinforcement learning (RL)\nSoftware: Python code, available\
    \ online: https:\n//github.com/kLabUM/rl-storm-control\n(accessed on 21 June 2022).\n\
    Objective: To implement a smart stormwater real-time system control\nbased on\
    \ RL.\nAdvantages: The RL-based model learned the control valve strategy in\n\
    a distributed stormwater system by interacting with the system it\ncontrols under\
    \ thousands of simulated storm scenarios. It effectively\ntries various control\
    \ strategies until it achieves target water level and\nﬂow set points.\nLimitations:\
    \ RL performance is highly sensitive to the RL agent\nreward formulation and requires\
    \ a signiﬁcant amount of\ncomputational resources to achieve a good performance.\n\
    [148]\nHydrological models are often calibrated with a single objective function,\
    \ although\nadequate and fast multi-objective optimization techniques exist, which\
    \ better support the\nseveral output variables [141]. There are many optimization\
    \ algorithms, meta-heuristic and\nML-based, for model parameter calibration, such\
    \ as particle swarm optimization (PSO),\ngrey wolf optimization (GWO), genetic\
    \ algorithms (GAs), genetic programming (GP),\nstrength Pareto evolutionary algorithms\
    \ (SPEA), micro-genetic algorithms (micro-GA),\nand Pareto-archived evolution\
    \ strategies (PAES). Depending on the selected performance\nindicators of the\
    \ model, the best model for hydrologists varied. According to the free lunch\n\
    theorem [149], this is not expected to change for a while; it proposes that no\
    \ one model ﬁts\nall. In any case, all the models performed well. See Yusoff et\
    \ al. [150] and Ibrahim et al. [45]\nfor a speciﬁc review of optimization algorithms.\n\
    Meta-heuristic optimization algorithms, which are mostly inspired by the biologi-\n\
    cal/behavioral strategies of animals, provide a good solution to optimization\
    \ problems, par-\nticularly with incomplete or imperfect information or limited\
    \ computational capacity [151].\nAn advantage of these algorithms is that they\
    \ make relatively few assumptions about the\noptimization problems and reduce\
    \ the computational demand by randomly sampling a sub-\nset of solutions, which\
    \ otherwise would be too large to be iterated entirely [151]. However,\nsome meta-heuristic\
    \ algorithms such as PSO may not guarantee that a globally optimal\nsolution will\
    \ be found, particularly when the number of decision variables or dimensions\n\
    being optimized is large [45]. The GA is inspired by genetic evolutionary concepts,\
    \ such\nas the non-dominated sorted genetic algorithm II (NSGA-II). The genetically\
    \ adaptive\nmulti-objective method (AMALGAM) [152] has been applied for multi-objective,\
    \ multi-site\ncalibration and to solve highly non-linear optimization problems\
    \ [144,153]. AMALGAM is\na multi-algorithm that blends the attributes of several\
    \ optimization algorithms (NSGA-II,\nPSO, the adaptive metropolis search, and\
    \ differential evolution) [144]. The GA has been\nshown to be well-suited for\
    \ hydrological models, such as the SWAT semi-distributed hy-\ndrological models,\
    \ which cannot be adequately calibrated by gradient-based calibration\nalgorithms\
    \ [144,153,154]. The objective function for each solution in a GA can be assessed\n\
    Water 2022, 14, 2211\n14 of 38\nin parallel computation, providing computational\
    \ efﬁciency [144]. Additional calibration\nmethods based on deep learning have\
    \ also been developed, outperforming many of the\nexisting evolutionary and regionalization\
    \ methods [20,146].\n4.2.2. Decision Support System for Integrated Water Resources\
    \ Management\nIntegrated water resources management (IWRM) deals with multiple\
    \ actors to con-\nsensually and communicatively integrate decisions in a hydrological\
    \ unit to ensure eq-\nuitable economic development and social welfare while assuring\
    \ hydrological system\nsustainability [155]. IWRM demands quality and timely information.\
    \ Hence, increasing au-\ntomation with GeoAI-based decision support systems is\
    \ thought to enhance IWRM [17,156].\nMulti-objective and scenario analysis are\
    \ typical applications of GeoAI techniques in IWRM\nto ﬁnd solutions for conﬂicting\
    \ objectives, forecast the impact of management strategies,\nand optimize hydrological\
    \ system operation [157,158]. We found widespread applications\nof GeoAI in reservoir\
    \ and water distribution optimization using ANN [159,160], assembled\nand deep\
    \ learning algorithms, and genetic programming [161,162]. Another application\n\
    is found in building a smart irrigation decision support system [147]. Here, partial\
    \ least\nsquare regression and the adaptive network-based fuzzy inference system\
    \ (ANFIS) are\nproposed as reasoning engines for automated decisions. An additional\
    \ example of arti-\nﬁcial intelligence application is the adaptive intelligent\
    \ dynamic urban water resource\nplanning [158]. It uses Markov’s decision process\
    \ to tackle complex water management\nproblems, predicting water demand, scheduling\
    \ management, ﬁnancial planning, tariff\nadjustment, and the optimization of water\
    \ supply operations [158] (See Table 3). Overall,\nthe GeoAI-based IWRM integrates\
    \ various types of algorithms to perform different tasks,\nsuch as prediction\
    \ and forecasting using various types of geospatial data, and optimization\nalgorithms\
    \ for management scenarios with multiple objectives. Algorithms such as ANFIS\n\
    are used for system reasoning to automate the decision support [157,158,163].\
    \ ANFIS\nallows the mimicking of human reasoning and decision making based on\
    \ a set of fuzzy\nIF-THEN rules. ANFIS has the learning capability to approximate\
    \ nonlinear functions and\ncan self-improve in order to adjust the membership\
    \ function parameters directly from the\ndata [164].\n4.3. Automatic Water Quality\
    \ Monitoring and Spatio-Temporal Prediction\n4.3.1. Automatic Water Quality Monitoring\n\
    The data collection of water quality with wireless sensor networks and internet\
    \ of\nthings (IoT) technologies is rapidly increasing and providing very-high-frequency\
    \ WQ data\n(sub-hourly) [165,166]. There is evidence that the high-frequency data\
    \ better represent the\ndynamics variation of river discharge and sediment and\
    \ solute ﬂuxes [167]. It enables the\nearly mitigation of ﬂoods and drinking water\
    \ problems [168,169]. High-frequency data can\nalso lead to a more precise and\
    \ accurate classiﬁcation of the biochemical status of rivers\nand lakes [170].\
    \ However, such sensors and devices are subject to failures, poor calibration,\n\
    and inaccurate data recording in certain conditions [171,172]. Therefore, automatic\
    \ data\nquality control, error and anomaly detection, sensor drift compensation,\
    \ and uncertainty\nassessment are important [171–173]. GeoAI showed advantages\
    \ in managing WQ sensor\nnetworks and sensor data fusion, such as fault detection,\
    \ data correction, and upgrades\nfrom different monitoring sensors by data fusion\
    \ [174]. See Table 4 for selected examples\nof GeoAI applications on WQ monitoring.\
    \ Additional applications of GeoAI are in the\ndetection, localization, and quantiﬁcation\
    \ of pollutant critical sources and critical periods\nof loading in monitoring\
    \ networks [175,176]. The most common GeoAI algorithms for WQ\nsensor fusion are\
    \ based on Bayesian algorithms, fuzzy set theory, genetic programming,\nANN, and\
    \ LSTM [177–180].\nWater 2022, 14, 2211\n15 of 38\nTable 4. Selected GeoAI applications\
    \ in monitoring and spatio-temporal prediction of water quality.\nMethod and Software\n\
    Objective, Advantages, and Limitations\nReference\nANN\nSoftware: ANNs computed\
    \ and ﬁtted with the\nKeras package in R.\nAvailable online: https:\n//github.com/benoit-liquet/AD_ANN\n\
    (accessed on 21 June 2022).\nObjective: To use ANN to detect anomalies caused\
    \ by the technical\nerror of in situ sensor monitoring of conductivity and turbidity.\n\
    Advantage: Semi-supervised ANN very well suited to identifying\nshort-term anomalous\
    \ events. Supervised classiﬁcation able to\nidentify long-term anomalies.\nLimitations:\
    \ High rate of false positive detection. Large dataset\nrequired due to relative\
    \ scarcity of anomalous events to train data.\n[174]\nMLP, SVM-SMO, lazy-instance-based\n\
    learning K nearest-neighbor (IBK), KStar, RF,\nrandom tree, and REPTree.\nSoftware:\
    \ Python\nObjective: To compare ML techniques for soft sensor monitoring of\n\
    biological oxygen demand (BOD).\nAdvantage: IBK algorithm was best for estimating\
    \ BOD based on\nturbidity, dissolved oxygen, pH, and water temperature sensors.\
    \ IBK\nalgorithm can also be used within a low-cost system to allow\nincorporation\
    \ into IoT-based WQ systems.\nLimitations: Overloading of servers may occur in\
    \ IoT-based systems if\nprediction algorithms run on the cloud for a large number\
    \ of\nsensing nodes.\n[181]\nFeed-forward ANN (FF-ANN).\nSoftware: Python using\
    \ the scikit-learn library.\nObjective: To compare FF-ANN and traditional methods\
    \ for\ndrift correction.\nAdvantages: The FF-ANN model outperformed traditional\
    \ methods\nfor drift calibration and may increase calibration lifetime and reduce\n\
    calibration frequency for water quality sensors.\nLimitations: High error rate\
    \ apparent when using logistic function.\n[172]\nRF, SVM, and logistic regression\n\
    Software: Python\nObjective: Evaluation of 3D wide-area WQ monitoring and analysis\n\
    systems, using unmanned surface vehicles (USV) and ML algorithms.\nAdvantage:\
    \ RF demonstrated high precision for estimating WQ status,\nusing WQ measured\
    \ data (turbidity, total dissolved solid, and pH) by\nUSV at multiple points and\
    \ different water depth levels.\nLimitations: USV drifting control, working performance,\
    \ and system\naccuracy were evaluated just in one environmental condition (a small\n\
    lake) and for a few WQ parameters.\n[177]\nGradient boosting (XGBoost), RF, coupled\n\
    with denoising model called CEEMDAN.\nSoftware: Not stated\nObjective: Hourly\
    \ prediction of several WQ parameters in Tualatin\nRiver, Oregon, USA.\nAdvantages:\
    \ The best model performance depended on the predicted\nWQ variable. CEEMDAN-RF\
    \ and CEEMDAN-XGBoost show better\nperformance, less errors, and higher stability\
    \ than simple RF and\nXGBoost. New error metric is introduced for model performance\n\
    evaluation and compared with conventional methods of\nmodel evaluation.\nLimitations:\
    \ The prediction model only depends on time-series data\nand no other explanatory\
    \ variables were included.\n[182]\nMulti-layer perceptron, radial basis function\n\
    ANN, ANFIS, and ANFIS with wavelet\ndenoising technique (WDT-ANFIS).\nSoftware:\
    \ wavelet and fuzzy logic toolboxes\nof MATLAB\nObjective: Prediction of WQ parameters\
    \ such as ammoniacal nitrogen,\nsuspended solid, and pH in Johor river, Malaysia.\n\
    Advantages: Several ML algorithms were compared, where the\nWDT-ANFIS model advantage\
    \ was well illustrated.\nLimitations: Complex models and not possible to identify\
    \ a single\nnetwork structure that can best predict WQ parameters.\n[28]\nDecision\
    \ tree (DT), RF, and deep cascade\nforest (DCF), trained by big data.\nSoftware:\
    \ Python. RF and DT built using the\npackage Scikit-learn v.019. DCF was built\n\
    with the package gcForest\nObjective: Comparison of 7 traditional learning models\
    \ vs. 3 ensemble\nmodels for prediction of 6 levels of WQ parameters for major\
    \ rivers\nand lakes in China.\nAdvantages: DT, RF, DCF trained by big data all\
    \ had signiﬁcantly\nbetter prediction of WQ compared with traditional learning\
    \ models.\nDCF had the best performance overall for prediction of all 6 levels\n\
    of WQ.\nLimitations: DCF unable to learn directly from big raw data.\n[183]\n\
    Water 2022, 14, 2211\n16 of 38\nTable 4. Cont.\nMethod and Software\nObjective,\
    \ Advantages, and Limitations\nReference\nRF\nSoftware: Python using the libraries\n\
    Scikit-Learn (0.20.1) and MLxtend (0.13.0)\nObjective: Comparison of random forest\
    \ to multiple linear regression\nfor estimation of high-frequency nutrient concentration.\n\
    Advantages: RF outperformed linear models when more than one\npredictor was included.\n\
    Limitations: At least 3 predictors required to identify clear beneﬁt of\nusing\
    \ RF compared to multiple linear regressions.\n[184]\nIntegrated LSTM, using cross-correlation\
    \ and\nassociation rules (apriori).\nSoftware: Not stated\nObjective: GeoAI system\
    \ to identify and trace point sources of\npollution in Shandong Province, China.\n\
    Advantages: LSTM algorithm had high prediction accuracy for tracing\nthe main\
    \ point sources of pollution.\nLimitations: GeoAI model was not aware of the change\
    \ in aquatic\nenvironment conditions. It requires multi-dimensional and\nmulti-spatial\
    \ perspectives to identify, analyze, and respond to data.\n[185]\nANN\nSoftware:\
    \ Mathematica\nObjective: Modeling daily total organic carbon (TOC), total nitrogen\n\
    (TN), total phosphorous (TP), and predicting future ﬂuxes under\nclimate change\
    \ scenarios for two streams in Finland.\nAdvantages: ANN model managed to recreate\
    \ most dynamics in TOC,\nTN, and TP.\nLimitations: ANN model struggled to capture\
    \ extreme values for TOC,\nTN, and TP.\n[186]\nLeast square-SVM (LS-SVM) and\n\
    multivariate adaptive regression spline\n(MARS).\nSoftware: Not stated\nObjective:\
    \ Prediction of 5-day biochemical oxygen demand (BOD) and\nchemical oxygen demand\
    \ (COD) in natural streams in Karoun River,\nsouthwest Iran.\nAdvantages: LS-SVM\
    \ and MARS models performed better in terms of\nexternal validation criteria and\
    \ F test compared with\nmultiple-regression-based models and ANN and ANFIS equations.\n\
    Limitations: Intensive amount of data collection required for a wide\nvariety\
    \ of parameters.\n[187]\nANN using feed-forward network with\nLevenberg–Marquardt\
    \ back-propagation\nlearning.\nSoftware: Not stated\nObjective: Hybrid approach\
    \ using a SWAT model as an input to an\nANN to simulate monthly nitrate, ammonium,\
    \ and phosphate loads\nin Atlanta, GA, USA.\nAdvantages: Hybrid model outperformed\
    \ standalone SWAT and ANN\nmodels for prediction of monthly loads. Hybrid models\
    \ are useful for\npredictions in unmonitored catchments.\nLimitations: Hybrid\
    \ model for nitrate had substantially better\npredictions than the ammonium and\
    \ phosphate models. Large peaks\nof ammonium and phosphate were underestimated.\n\
    [188]\nANN compared with SVM and group\nmethod of data handling (GMDH).\nSoftware:\
    \ Not stated\nObjective: ML techniques compared for predicting various WQ\ncomponents\
    \ in Tireh River, southwest Iran.\nAdvantages: SVM models were most accurate,\
    \ with less\ndata dispersion.\nLimitations: All models overestimated some properties.\n\
    [189]\nTwelve hybrid data mining algorithms\ncompared, spanning two main groups.\n\
    Group one featured decision tree algorithms,\nand group two featured meta-classiﬁer\
    \ or\nhybrid algorithms.\nSoftware: Not stated\nObjective: Comparison of 12 hybrid\
    \ GeoAI models predicting WQ\nindices in Talar Catchment, Iran.\nAdvantages: Hybrid\
    \ models showed improved predictive power\ncompared to standalone algorithms.\n\
    Hybrid bagging random tree (BA-RT) model showed greatest\npredictive power and\
    \ was able to produce reliable results despite a\ndataset spanning a short time\
    \ period.\nLimitations: BA-RT model struggled to accurately predict extreme\n\
    WQ index values, while most models also overestimated WQI values.\n[190]\nWater\
    \ 2022, 14, 2211\n17 of 38\nTable 4. Cont.\nMethod and Software\nObjective, Advantages,\
    \ and Limitations\nReference\nSVM and RF\nSoftware: e1071 R package used to build\
    \ SVM\nmodel and random forest R package used to\nbuild RF model.\nObjective:\
    \ SVM and RF algorithms compared to predict\nhigh-frequency variation in stream\
    \ solutes in Hubbard Brook,\nNew Hampshire, USA.\nAdvantages: Both ML algorithms\
    \ were capable of effectively\npredicting concentrations of major ions.\nLimitations:\
    \ Solutes with atmospheric, episodic, or strong biotic and\nabiotic controls were\
    \ much more poorly predicted than solutes least\naffected by ecosystem dynamics.\n\
    [191]\nMany WQ parameters cannot easily be measured in situ and in real time for\
    \ various\nreasons, such as high-cost sensors, low sampling rate, multiple processing\
    \ stages, and the\nrequirement of frequent cleaning and calibration. Therefore,\
    \ a common practice is the\nestimation of a particular WQ parameter value based\
    \ on other surrogate parameters, called\nsoft sensors [181,183,184]. ML techniques\
    \ showed higher accuracy in implementing soft\nsensors than conventional regression-based\
    \ models [181,183,184,192].\nThe ML method has also shown an advantage in automatic\
    \ hysteresis pattern analysis\nusing high-frequent water quality data with, e.g.,\
    \ restricted Boltzmann ANN [193]. A\nmore detailed hysteresis pattern classiﬁcation\
    \ allows the gaining of new insights into WQ\npollutants sources and drivers,\
    \ the inﬂuence of catchment and riverine features, the effect of\nantecedent conditions,\
    \ and the inﬂuence of changes in rainfall and snowmelt patterns [193].\n4.3.2.\
    \ Spatio-Temporal Water Quality Prediction\nWe found diverse applications of the\
    \ GeoAI methods in WQ spatio-temporal pattern\nanalysis, the classiﬁcation of\
    \ WQ, and the prediction of WQ variables and the pollutant\nloading estimation.\
    \ A detailed review of the ML application in WQ prediction is found\nin Rajaee\
    \ et al. [27], Nalouﬁ et al. [29], and Chen et al. [194]. Table 4 shows examplesof\n\
    GeoAI applications for this purpose. Commonly used GeoAI for WQ prediction and\n\
    classiﬁcation are unsupervised clustering such as k-means, density-based spatial\
    \ clustering\nof applications with noise (DBSCAN), and SOM, but also time-series\
    \ segmentation such as\ndynamic time warping [195]. Supervised ML classiﬁcation\
    \ and prediction algorithms for\nWQ are RF, SVM, the Bayesian network, and ANN,\
    \ and deep learning such as LSTM is also\nfrequently used [190,196,197].\nHigh-frequency\
    \ WQ monitoring data contains noise signals due to random and sys-\ntematic errors,\
    \ impairing the WQ prediction accuracy. Hence, combining data denoising\ntechniques\
    \ such as Fourier and wavelet transform with GeoAI improves WQ prediction.\nFor\
    \ example, Song et al. [198] found that combining synchro-squeezed wavelet transform\n\
    and an LSTM network substantially improved the WQ parameter prediction. Similarly,\
    \ Na-\njah Ahmed et al. [28] integrated wavelet discrete transform with the artiﬁcial\
    \ neuro-fuzzy\ninference system (WDT-ANFIS) to obtain high-accuracy prediction\
    \ of river WQ parameters.\nAdditionally, the WQ data usually have temporal autocorrelation\
    \ and multi-collinearity\nbetween the WQ parameters. To consider these characteristics\
    \ in the prediction models,\nZhou et al. (2020) [199] proposed an ML model based\
    \ on t-distributed stochastic neighbor\nembedding (t-SNE) and self-attention bidirectional\
    \ LSTM (SA-Bi-LSTM), demonstrating\nsubstantial WQ prediction improvement. Another\
    \ promising approach is uniform mani-\nfold approximation and projection (UMAP)\
    \ for multidimensional WQ data ordination and\nclassiﬁcation. Unlike other dimension\
    \ reduction methods, UMAP retains a global and local\ninformation structure, and\
    \ the data ordination is bio-physically meaningful [200].\nInland water has naturally\
    \ high spatial variation. It requires complex spatial pre-\ndiction models and\
    \ large datasets. The GeoAI have shown breakthroughs in spatial WQ\nprediction\
    \ by combining ﬁeld observations, remote sensing data, or UAV imagery. For\nexample,\
    \ using deep learning, RF, genetic algorithm—RF, adaptive boosting (AdaBoost),\n\
    genetic algorithm—AdaBoost and the genetic algorithm—extreme gradient boosting\
    \ (GA-\nWater 2022, 14, 2211\n18 of 38\nXGBoost) [183,194]. However, these models\
    \ usually demand extensive training data, which\nare restricted to a few pilot\
    \ areas or intensely monitored areas.\nAnother approach in WQ prediction is the\
    \ application of hybrid models and the\nintegration of physical-based models with\
    \ GeoAI methods, such as SVM, RF, ANN, and\nLSTM. Hybrid models usually outperformed\
    \ physical-based models. For example, Noori\net al. [188] found substantial improvement\
    \ in monthly nitrate, ammonium, and phosphate\nload prediction when using hybrid\
    \ SWAT-ANN models. Hybrid models are also helpful\nfor unmonitored catchment predictions\
    \ [188]. The hybrid model also improves GeoAI\nexplanatory and generalization\
    \ capability, although some disadvantages observed in the\nphysical-based model,\
    \ such as extreme values not being well predicted, persisted in the\nhybrid models.\
    \ Similarly, the process-guided recurrent neural network (RNN), which\ncombines\
    \ the biophysical principles of the process-based model and RNN, modeled the\n\
    seasonal variation of lake phosphorus loading with lower bias and better reproduced\
    \ the\nlong-term changes of phosphorus loading compared to using the physical-based\
    \ model\nand RNN independently [21].\nOverall, the GeoAI water quality prediction\
    \ depends not only on the selected algo-\nrithms and settings but also on the\
    \ WQ parameters, data size, and training data quality for\nthe learning models\
    \ [183,188,191].\n4.4. Machine Learning in Fluvial Geomorphic and Morphodynamic\
    \ Mapping\nFluvial geomorphology triggered the quantitative dynamic paradigm [201]\
    \ as an ap-\nproach to quantifying and understanding the processes of the ﬂuvial\
    \ environment [5]. The\nsimultaneous development of techniques such as multispectral\
    \ satellite images, synthetic\naperture radar (SAR), LiDAR, UAV imagery, structure\
    \ from motion photogrammetry (SfM),\nmultibeam sonar (sound navigation and ranging),\
    \ among others, has resulted in an un-\nprecedented, seamless characterization\
    \ and quantiﬁcation of the ﬂuvial environment and\nits dynamics [202–204]. This\
    \ geospatial dataset explosion, as in many other disciplines, has\nresulted in\
    \ the perfect foundation for applying GeoAI methods in ﬂuvial geomorphology.\n\
    Here, we reviewed the recent GeoAI applications in ﬂuvial geomorphological studies.\n\
    Table 5 shows selected examples of GeoAIapplications in ﬂuvial geomorphic studies.\n\
    Table 5. Selected GeoAI applications in ﬂuvial geomorphic and morphodynamic mapping.\n\
    Method and Software\nObjective, Advantages and Limitations\nReference\nNASNet\
    \ CNN\nSoftware: Python based. CNN supervised\nclassiﬁcation available for PyQGIS\n\
    Objective: To classify ﬂuvial scenes in 11 rivers in Canada, Italy, Japan,\nthe\
    \ United Kingdom, and Costa Rica.\nAdvantages: The NasNet-CNN model outperformed\
    \ other supervised\nclassiﬁers, e.g., maximum likelihood, MLP, and RF. The NasNet-CNN\n\
    model can be transferable to other rivers with no training data,\nobtaining good\
    \ classiﬁcation accuracy of ﬂuvial land cover.\nLimitations: CNN is sensitive\
    \ to the hyperparameters deﬁnition. CNN\nwas also affected by imbalanced training\
    \ data size in land cover\nclasses. Some features were misclassiﬁed.\n[205]\n\
    Fuzzy-CNN\nSoftware: Python based. Dependency\npackages: TensorFlow\nObjective:\
    \ To predict vegetation, bare sediment, and water bodies at a\nsub-pixel scale\
    \ with Sentinel-2 images, trained with high resolution\nUAV images. Study areas\
    \ were Sesia, Po, and Paglia Rivers in Italy.\nAdvantages: Fuzzy-CNN models were\
    \ successfully used to provide\ncontinuous and crisp subpixel classiﬁcation of\
    \ Sentinel-2 imagery.\nThe model was transferable to satellite images with different\n\
    acquisition time. It can be used for annual change detection.\nLimitations: UAV\
    \ reference data obtained with manual OBIA was\nhighly time-consuming. The process\
    \ was computationally expensive\ndue to the “super-resolution” process used to\
    \ feed the CNN. The\nmodel was tested only in Mediterranean drainage basins.\n\
    [206]\nWater 2022, 14, 2211\n19 of 38\nTable 5. Cont.\nMethod and Software\nObjective,\
    \ Advantages and Limitations\nReference\nANN\nSoftware: MATLAB-based software.\
    \ Leaf area\nindex calculation (LAIC)\nObjective: Hydromorphological features\
    \ classiﬁcation using very high\nresolution UAV images (2.5 cm) in a reach of\
    \ the River Dee,\nWales, UK.\nAdvantages: ANN LAIC model showed satisfactory classiﬁcation\n\
    accuracy and potential to identify multiple hydromorphological\nclasses that can\
    \ be attributed to site features based, e.g., on their\nhydraulic, habitat, or\
    \ vegetation types. The model settings seem to be\ntransferable to other rivers\
    \ without training data.\nLimitations: The algorithm showed misclassiﬁcation of\
    \ small ﬂuvial\nentities, e.g., shallow water areas with rippled surface, water\
    \ areas\naffected by tree shadow, and vegetated banks and/or areas obscured\n\
    by brown submerged vegetation.\nThe authors provided very limited information\
    \ about the model\nparameter setting in the paper.\n[207]\nCNN\nSoftware: Matlab-\
    \ based software.\nVisualization and image processing for\nenvironmental research\
    \ (VIPER)\nObjective: To measure river wetted width (RWW) with a novel\napproach\
    \ at the subpixel scale by using MODIS and Landsat OLI\nimages in Bay of Bengal,\
    \ India, and Landsat TM in\nColumbia River, USA.\nAdvantages: CNN-based sub-pixel\
    \ scale classiﬁcation resulted in a\nmore accurate estimation of RWW than the\
    \ conventional hard\nimage classiﬁcation.\nLimitations: No full spectral unmixing\
    \ was possible due to the\nspectral variations of land cover classes and the nonlinear\
    \ mixture\nphenomenon. Misclassiﬁcation issues were reported when shadows,\nbridges,\
    \ or trees were located along riverbanks. In such situations,\nRWW was unmeasured.\n\
    [208]\nGEOBIA, EL, RF, extra tree (ET), gradient tree\nboosting (GTB), extreme\
    \ gradient boosting\n(XGB). Then, it was combined with a\nvoting classiﬁer.\n\
    Software: Python-based with scikit-learn\npackage.\nObjective: To map the main\
    \ hydromorphological types that\ncharacterize ﬂuvial landscapes in Europe by using\
    \ Copernicus image\nmosaic and EU DEM. Target classes: water, sediment bars, riparian\n\
    vegetation, other ﬂoodplain units.\nAdvantages: RF outperformed any other tested\
    \ classiﬁer, e.g., ET, GTB,\nand XGB. Hierarchical object-based segmentation is\
    \ robust for\ncombining spectral and topographical data at different spatial\n\
    resolutions and enhancing low spectral resolutions. Area-based\nvalidations were\
    \ the preferred method to validate the quality of the\nobject-based maps.\nLimitations:\
    \ Vegetation units and sediment bars were not very well\nclassiﬁed. Main source\
    \ of error was related to the high mixture of\nriparian vegetation, sediment bars,\
    \ and other ﬂoodplain features.\n[209]\nObject-based RF and pixel-based RF,\n\
    combined with recursive feature elimination\nand PCAs\nSoftware: rpart and caret\
    \ R packages, and\nEnMAP-Box (environmental mapping and\nanalysis program) 2.1.1\
    \ software.\nObjective: To reveal uncertainty, overﬁtting, and efﬁciency of terrain\n\
    attribute identiﬁcation in ﬂuvial landforms using morphometric\nvariables derived\
    \ from a LiDAR DTM from Tisza River, Hungary.\nAdvantages: Object-based RF method\
    \ had a better classiﬁcation\naccuracy (95%) than the pixel-based RF method (78%)\
    \ when\nidentifying 4 different river landforms (crevasse channels, swales,\n\
    point bars, levees). Overﬁtting was controlled in the study by\nlimiting the number\
    \ of input variables.\nLimitations: Object-based RF classiﬁcations needed visual\n\
    interpretation, ﬁeld observations, and high-resolution data. PCAs did\nnot help\
    \ to select more efﬁcient and important variables.\n[210]\nWater 2022, 14, 2211\n\
    20 of 38\nTable 5. Cont.\nMethod and Software\nObjective, Advantages and Limitations\n\
    Reference\nRF and SVM\nSoftware: eCognition developer 9 software.\nObjective:\
    \ Semi-automatic map of riverscape units and in-stream\nmicrohabitats, providing\
    \ continuous, objective, and multi-scale\nclassiﬁcation using very-high-resolution\
    \ near-infrared aerial imagery\nand LiDAR DTM from the Orco River, Italy.\nAdvantages:\
    \ RF better identiﬁed riverscape elements, e.g., channel and\nbars, while SVM\
    \ did better when classifying in-stream meso-habitats.\nTopographical data, in\
    \ particular detrended DTM (DDTM), was a\nrelevant data source for an accurate\
    \ classiﬁcation of the riverscape\nunits. Near-infrared imagery combined with\
    \ DDTM was the\nbest predictor.\nLimitations: Extensive expert-based training\
    \ was necessary for\ndetailed post-classiﬁcation. Several subjective rules added\
    \ to the\nprocess. Most confusion in the classiﬁcation was detected between\n\
    the ﬂoodplain and sparse vegetation classes, where the DDTM was\nnot helpful.\n\
    [211]\nK-means clustering\nSoftware: ArcGIS based. Geoprocessing tool\n(multivariate\
    \ clustering)\nObjective: To delineate valley bottom extent across large catchments\n\
    and automatically classify valley bottom segments of variable length\nby using\
    \ DEM-based derivatives from Richmond River, Australia.\nAdvantages: The k-means\
    \ successfully clustered the entire river\nnetwork into 6 valley bottom segments\
    \ of varying length.\nLimitations: The resulting cluster is unlabeled and needs\
    \ expert\nrecognition. Only used a low number of the variables selected (slope\n\
    and valley bottom width). The model was validated with a\nbasin-scale expert mapping\
    \ of valley types. This is time-consuming\nand not available for other areas.\n\
    The model was only proposed as a preliminary assessment for\nfurther studies.\n\
    [212]\nModiﬁed Hebbian algorithms and k-mean\nclustering.\nSoftware: On-line batch\
    \ Hebbian algorithm\nand CoSA (clustering of sparse\napproximations) packages.\n\
    Objective: To investigate the applicability of ML classiﬁer in Arctic\nregions\
    \ using DigitalGlobe Worldview-2 visible/near-infrared,\nhigh-resolution imagery\
    \ from Mackenzie River, Canada, and Selawik\nand Barrow Rivers in Alaska (USA).\n\
    Advantages: Allows automatic discretization of landscape units in\nlarge areas.\
    \ Useful as a preliminary method to learn which scale of\nclustering is suitable\
    \ to study different processes or focuses of the\nstudy (e.g., hydrology versus\
    \ vegetation). Capable of detecting\nvegetation changes as it recognizes vegetation\
    \ levels in\ndifferent classes.\nLimitations: No error assessment was performed,\
    \ nor was there\nground truth validation. The selection of an appropriate number\
    \ of\nclusters depends on the expert’s decision.\n[213]\nSVM, RF, ANN, partial\
    \ least squares,\nmultivariate adaptive regression splines,\nﬂexible discriminant\
    \ analysis, k-NN,\nregression tree, bagged trees, linear\ndiscriminant analysis,\
    \ regularized linear\ndiscriminant analysis, and naive Bayes.\nSoftware: Caret\
    \ and h2o R packages.\nObjective: To extrapolate a geomorphic classiﬁcation of\
    \ channel types\nto a regional stream network using DEMs and thematic maps\n(e.g.,\
    \ lithology, soil, stream network, etc.) from\nSacramento River, USA.\nAdvantages:\
    \ Multiple algorithms compared. RF outperformed other\nmodels with more accuracy\
    \ and stability and lower entropy in\nreach-scale river type classiﬁcation. Rigorous\
    \ approach in model\ndesign and evaluation of performance with 20 × 10-fold cross\n\
    validation used for clariﬁcation of some black box aspects of ML.\nLimitations:\
    \ Needs large expert-based ﬁeld survey data. It is unclear if\nML is able to integrate\
    \ predictors at different scales and to show\ndifferent uncertainty across the\
    \ watershed.\n[214]\nWater 2022, 14, 2211\n21 of 38\nTable 5. Cont.\nMethod and\
    \ Software\nObjective, Advantages and Limitations\nReference\nRF and RF combined\
    \ with recursive feature\nelimination (RF-RFE).\nSoftware: R program\nObjective:\
    \ To detect structural and/or neotectonic controls inﬂuencing\nthe knickpoints\
    \ of the drainage network using DEM and thematic\nmaps (geology and geomorphology)\
    \ from Abaeté Watershed, Brazil.\nAdvantages: Simple and reproducible methodology\
    \ that provides\ncausal relationship of knickpoint formation to lithological contacts\n\
    and neotectonic conﬁguration and activity. RF succeeded in partially\npredicting\
    \ geomorphic indices (e.g., stream length gradient index or\nnormalized channel\
    \ steepness index) and can be used to predict them\nin unsampled areas without\
    \ overﬁtting.\nLimitations: Low performance of the methods, obtaining R2 = 0.38\
    \ as\nthe highest correlation between predicted and direct estimation\nvalues\
    \ of geomorphic indices. It may have been affected by the\nselection of the covariables.\n\
    [215]\nTemplate-matching (object-based) algorithm\n(TMA) and pixel-based SVM.\n\
    Software: Feature Analyst (Overwatch\nSystems Ltd.). Not speciﬁed for SVM.\nObjective:\
    \ To delineate water surface boundaries and assess the\ninﬂuence of river and\
    \ bank characteristics in the efﬁcacy of a\ntemplate-matching compared to a pixel-based\
    \ algorithm, using\nhigh-resolution images with false-color infrared, from the\
    \ Brazos\nRiver, USA.\nAdvantages: Both algorithms adequately delineate the water\
    \ surface.\nSVM performed better and handled complex and noisy class\nrelationships.\
    \ TMA performed better than SVM in spatially complex\nchannel morphologies (e.g.,\
    \ partially submerged sediment deposits,\nsediment bar structures) due to its\
    \ capability to incorporate both\nspectral and spatial information.\nLimitations:\
    \ Validation relies on expert knowledge and previous maps.\nSelection of ancillary\
    \ data types depends on expert decision and the\ndelineation accuracy of TMA.\
    \ In addition, the low spectral dimension\nof the images limited the pixel-based\
    \ classiﬁcation. Both algorithms\nencounter problems when classifying multiple\
    \ complex features (e.g.,\noverhanging trees) and illumination conditions (e.g.,\
    \ shading). The\nTMA performance was less spatially consistent than that of SVM.\n\
    [216]\nSOM\nSoftware: R based (R v3.5.1). Package\n“kohonen” v3.0.7\nObjective:\
    \ To produce waterbody typology from 22 GIS-derived\ncontinuous catchment characteristics\
    \ to capture the dominant\ncontrols that inﬂuence river reaches across England\
    \ and Wales.\nAdvantages: SOM-based water body topology reﬂects catchment\nfunctional\
    \ feature controls on river reaches. The method is extendable\nto other areas\
    \ where reach-level monitoring is relevant. The SOM\ncombined with hierarchical\
    \ clustering can be applied over a wide\nrange of catchment, e.g., a national-level\
    \ waterbody typology map.\nLimitations: The method could not isolate individual\
    \ effects from\ncatchment controls as they are dependent on each other. It does\
    \ not\ndetect temporal change and local controls such as dams,\nchannelization,\
    \ and others not taken into account.\n[217]\nU-Net convolutional neural networks\n\
    (CNNs).\nSoftware: Not stated.\nObjective: To introduce the BathyNet framework,\
    \ a photogrammetry\nand radiometric-based combined retrieval of water depth using\n\
    U-Net CNNs. Study area was Lech river, Augsburg,\nBavaria, Germany.\nAdvantages:\
    \ U-Net CNNs approximate arbitrary functions and\ninclude spatial context. The\
    \ U-Net CNN-based depth retrieval\noutperformed traditional regression-based optical\
    \ inversion methods.\nLimitations: U-Net CNNs require large amounts of training\
    \ data and\ntheir application might be unfeasible in areas with scarce water-depth\n\
    ﬁeld samples.\n[218]\nThe current state-of-the-art of GeoAI in ﬂuvial geomorphology\
    \ consists of an auto-\nmatic extraction of ﬂuvial features at a ﬁne scale by\
    \ integrating larger and multidimen-\nWater 2022, 14, 2211\n22 of 38\nsional datasets,\
    \ using unsupervised classiﬁers (e.g., K-means, SOM), supervised classiﬁers\n\
    (e.g., RF, SVM, ANN, deep learning, CNN), or by combining both methods, e.g.,\
    \ K-means\nwith ANN. Most of the reviewed articles were focused on the development\
    \ of the methods\nand workﬂow, the testing of new applications, or the comparison\
    \ of algorithm perfor-\nmances [205,207,209], rather than the study of ﬂuvial\
    \ processes and underlying dynamics.\nThese applications of GeoAI provide the\
    \ basis to the discovery of new ﬂuvial patterns and\ntrends and increase knowledge\
    \ about ﬂuvial environments (e.g., Ling et al. 2019; Guillon\net al. 2020, Heasley\
    \ et al. 2020) [208,214,217].\nOverall, GeoAI outperforms conventional methods\
    \ of ﬂuvial landform classiﬁcation,\nreaching a classiﬁcation accuracy of over\
    \ 80%. Most common applications are found in river\nchannels and water body mapping\
    \ [208,216], the classiﬁcation of riverine landforms and\nvegetation successions\
    \ [213,214,219,220], the estimation of catchment hydrogeomorphic\ncharacteristics\
    \ (e.g., valley bottom, ﬂoodplain, and terrace) [212,221], and benthic and ﬁsh\n\
    habitat mapping [207,211,222,223].\nAnother application of GeoAI is the integration\
    \ of multiple techniques to provide\nmore accurate and very-high-resolution data\
    \ for ﬂuvial studies. For example, the ﬂuvial\nenvironment is highly dynamic and\
    \ demands frequent bathymetry surveys to understand\nthe change and morphodynamic\
    \ drivers in lakes and rivers. Emerging technologies,\nsuch as acoustic Doppler\
    \ current proﬁler (ADCP), green LiDAR, high-resolution image\nradiometric model,\
    \ and 3D cloud points generation with SfM, allow more frequent and\naccurate bathymetry\
    \ mapping [203,204]. However, each approach has limitations, e.g.,\nADCP collects\
    \ data only from areas where the sensor has passed, and it does not provide\n\
    continuous spatial scanning. It does not measure near-bank areas, and it is subject\
    \ to\nthe acoustic side-lobe effect [224]. Photogrammetry and the green LiDAR\
    \ method are\nsensitive to water turbidity and light penetration in the water\
    \ column [225,226]. Therefore,\nmultisource bathymetry modeling using the GeoAI\
    \ method increases the bathymetric data\naccuracy and reduces uncertainties due\
    \ to data quality in change detection. For example,\nADCP data, image radiometric-based\
    \ water depth, and SfM depth data can be integrated\nusing U-Net convolutional\
    \ neural networks [218,227].\nThe GeoAI approach, when using multi-temporal remote\
    \ sensing data, allows the\nmapping of a broader ﬂuvial landscape and its change,\
    \ thereby revealing spatiotemporal\nscales of ﬂuvial morphodynamics, as in e.g.,\
    \ Van Iersel et al. [228], Hemmelder et al. [229],\nand Boothroyd et al. [230].\
    \ There are different GeoAI approaches for automatic change\ndetection using multi-temporal\
    \ images such as generative adversarial networks (GAN),\nautoencoder, CNN, and\
    \ others, as presented by Shi et al. [231].\nAlthough GeoAI has been rapidly adopted\
    \ in ﬂuvial geomorphological studies, a\nwide spectrum of workﬂows and software\
    \ is found; many GeoAI approaches seem to be\nunder development and in the testing\
    \ stage. Therefore, without a general, consistent, and\nrobust workﬂow among them,\
    \ it is difﬁcult to generalize and compare the GeoAI methods\nperformance and\
    \ overall accuracies, as well as the study results.\nThe current limitations of\
    \ GeoAI methods in ﬂuvial studies are that the classiﬁcation\nquality is highly\
    \ dependent on expert knowledge. The unsupervised classiﬁcation output is\noften\
    \ inconsistent, and the cluster classes do not have direct geomorphic or ﬂuvial\
    \ process\nmeaning and need a post-classiﬁcation labeling. Supervised GeoAI classiﬁers\
    \ require\na large training sampling, and the training data quality is highly\
    \ dependent on expert\nknowledge. In addition, many of the studies using GeoAI\
    \ to classify ﬂuvial landform or\nriver typologies have been conducted in areas\
    \ where an extensive quantity of previous\nstudies and data collection exists\
    \ [212,214]. Therefore, its application in poorly sampled\nareas is somewhat limited.\n\
    In many cases, GeoAI is enhanced with the use of ﬁne-scale ﬂuvial geomorphic\n\
    mapping, e.g., LiDAR or UAV-based images, which are still restricted to pilot\
    \ areas, mostly\nin Western countries. In addition, several different landform\
    \ class names are used to rename\nﬁne-scale ﬂuvial landforms, and therefore, a\
    \ standardized ﬂuvial landform taxonomy is\nlacking [232].\nWater 2022, 14, 2211\n\
    23 of 38\nAnother limitation of supervised GeoAI applications is the misclassiﬁcation\
    \ of el-\nements out of the GeoAI training range, as presented, e.g., in Carbonneau\
    \ et al. [205].\nMoreover, the use of very different methods for assessing the\
    \ GeoAI algorithm’s per-\nformance and accuracy may lead to inconsistencies in\
    \ the validity of results, e.g., map\ncross-tabulation often uses limited validation\
    \ points rather than areal-based reference data,\ndue to the lack of geomorphological\
    \ reference maps at a very ﬁne scale. Another issue\nwith regard to performance\
    \ and accuracy assessments is the use of scalar error statistics,\nsuch as root\
    \ mean square error, which may not be reliable in ﬂuvial mapping. Here the\nresulting\
    \ error is a complex combination of random and systematic components, and the\n\
    isotropy and stationary assumptions do not apply to the ﬂuvial process [233].\
    \ It is also\nheavily inﬂuenced by a small percentage of classiﬁcation errors,\
    \ which lead to incorrect\nrankings of overall model performances or to prediction\
    \ error [206]. Therefore, a more\nconsistent and comparable GeoAI-based ﬂuvial\
    \ mapping accuracy assessment is needed.\n5. GeoAI Causal and Predictive Inference\
    \ Capability\n5.1. Renewed Data-Driven Research\nObservational and experimental\
    \ studies have been the basis of understanding the\nempirical relationships of\
    \ physical processes occurring in the earth and the development\nof the mechanical\
    \ or physical-based models to predict them [234]. With the substantial\nincrease\
    \ in observational data and the development of GeoAI methods, empirical studies\n\
    have been renewed with data-driven models [17,235]. Unlike traditional statistical\
    \ models,\nGeoAI methods do not rely on a formal assumption about the data structure\
    \ and types of\ndata distribution such as normality. They are more ﬂexible and\
    \ adaptable for nonlinear\nand high-dimensional data. GeoAI methods automatically\
    \ identify and exploit correlations\nand patterns (classiﬁcation) in the data\
    \ to make predictions. For example, an ANN, with\nmany hidden layers and free\
    \ parameters estimated by training and arbitrary ﬁtting curves,\nconverts inputs\
    \ to outputs by simply minimizing error variances [39].\nTo date, in most of the\
    \ GeoAI applications for hydrological studies the cause–effect\nrelationship inference\
    \ has been limited, because the multiple driven factors and interactions\nbetween\
    \ the used variables and scales are not explicitly represented in the models [50,123].\n\
    In addition, the GeoAI and ML internal hyper-parameter optimization is not explicitly\n\
    stated in most of the modeling studies. For this reason, GeoAI methods are often\
    \ called\n“black-box” models [236]. See Table 6 for the characteristics of physical-based\
    \ and GeoAI\nhydrological models. Therefore, causal inferences might be questionable\
    \ without robust\nassumptions and the veracity of the assumed data structure [237].\
    \ Thus, most GeoAI\nmodels are mostly inductive approaches, mainly oriented for\
    \ operational prediction and\nforecasting work, such as early warning systems.\
    \ Nevertheless, GeoAI models have the\npotential to reveal unknown associations\
    \ and complex patterns of hydrology processes\nby integrating more high-dimensional\
    \ and multi-source data than traditional methods.\nBy implementing proper model\
    \ interpretation and explainability methods, they can also\nextend GeoAI applications\
    \ for causal inference [236,237].\nTable 6. Characteristics of physical-based\
    \ and GeoAI hydrological models.\nProcess-Based Model\nGeoAI Model\nBased on general\
    \ physical laws.\nA data-driven approach, inductive model building, may not fully\n\
    respect physical laws.\nAll input variables and parameter ranges are\nwell-structured\
    \ and known.\nUnstructured data, not all input variables’ role in the model is\
    \ known,\nmaking the output less interpretable.\nLimited to the current state-of-the-art.\n\
    Able to reveal unknown associations and patterns.\nIt is a deductive, hypothesis\
    \ testing approach. It can be\nused for causal inference.\nIt is an inductive,\
    \ exploratory approach. Their use in causal inference\ndepends on the GeoAI model\
    \ building and selected variables.\nWater 2022, 14, 2211\n24 of 38\nTable 6. Cont.\n\
    Process-Based Model\nGeoAI Model\nNo uniqueness problem due to inverse modeling\
    \ in\nmodel parameterization.\nNo uniqueness problem due to GeoAI hyper-parameter\
    \ optimizations.\nMostly deterministic, the system is represented by the\naverage\
    \ values of variables.\nDeterministic and probabilistic, depending on the GeoAI\
    \ method,\nvariables can be treated as probabilistic.\nReductionist, considerable\
    \ simpliﬁcation of complex\nprocesses which can result in prediction bias.\nIntegrative,\
    \ GeoAI can be integrated into several types of observation\nand may be able to\
    \ reveal patterns not represented by a physical-based\nmodel. Therefore, GeoAI\
    \ prediction can be less biased.\nIt is assumed to be of general application.\n\
    It is assumed to be applied only within the range of the training data.\nFixed\
    \ to the model basis data requirement, and unable to\ndeal with multisource data.\n\
    Flexible to data input, from minimal input to big data. GeoAI can\nmaximize the\
    \ use of all types of available data, from different sources,\ntypes, and quality.\n\
    High computing demand for high-frequency and\nlarge-scale modeling.\nHigh computing\
    \ efﬁciency and suitable for high-frequency and\nlarge-scale modeling.\nOne-time\
    \ calibration, once the model is calibrated, the\nparameters are usually ﬁxed.\n\
    Continuous learning model, the model calibration is constantly\nupdated with past\
    \ and new data.\nWell-deﬁned framework for model performance,\nuncertainty, and\
    \ error propagation evaluation.\nDiverse and developing approaches for model performance,\n\
    uncertainty, and error propagation evaluation.\n5.2. Generalization of GeoAI Prediction\n\
    GeoAI models may only be applicable within their speciﬁc training data or calibrated\n\
    ranges [238], unless the modeling scheme and variables used can be argued to be\
    \ generally\nvalid, e.g., representing general laws such as conservation and momentum\
    \ laws that govern\nnatural processes [234]. GeoAI modeling generalization is\
    \ also a challenging problem from\nthe perspective of model performance assessment,\
    \ depending on the model complexity,\nvariables, and training dataset size. A\
    \ very simple model cannot learn the problem being\nmodeled (underﬁtting problem),\
    \ whereas a highly complex model with a large dataset\nmight overﬁt the training\
    \ dataset (overﬁtting problem). Both cases are not generalizable\nor applicable\
    \ to new datasets. Current GeoAI generalization approaches are based on\nﬁnding\
    \ an optimal tradeoff between training and validation accuracy, using regularization,\n\
    weight decay, ensembles, and other approaches in the model training stage [40].\
    \ However,\nthe decision boundary in complex models becomes sensitive to data\
    \ size and outliers,\nmodel architecture, and hyper-parameter optimization. It\
    \ has also been observed that\ndifferent sets of the model architecture and hyper-parameters\
    \ can produce a similar model\nperformance, leading to the non-uniqueness modeling\
    \ problem [50,239].\n5.3. GeoAI Data Requirement for Reliably Prediction\nGeoAI\
    \ models depend on the quality and quantity of the data. The amount of data\n\
    required for them depends on many factors, such as the complexity of the hydrological\n\
    system and the applied GeoAI algorithm [47]. A complex system with more sophisticated\n\
    GeoAI methods will demand a large and multidimensional dataset [42]. For example,\n\
    deep/extreme learning algorithms usually demand large sample sizes to compute\
    \ accept-\nable results [240]. Current hydrological and geospatial data are increasing\
    \ rapidly, fostered\nby the development of automatic monitoring systems and land\
    \ surveying technologies.\nHowever, the data quantity (volume) and quality (veracity\
    \ and value) vary; the data\ntypes are diverse (unstructured, structures, spatial,\
    \ non-spatial, etc.), and the datasets\nusually come from different sources. Datasets\
    \ with these characteristics are called big\ndata [241,242] and require advanced\
    \ and new methodologies to integrate them with GeoAI\nmodels properly.\nWater\
    \ 2022, 14, 2211\n25 of 38\n5.4. GeoAI Capacity to Provide Novel Physical Insights\n\
    GeoAI data-driven research and data mining are increasingly used to gain information\n\
    from data, elucidate systems behavior, reveal new insights about the system functioning,\n\
    and detect change in the system responses [17]. There are several examples of\
    \ GeoAI\napplications in hydrological modeling [91,105,107,243]. Recent studies\
    \ applying deep\nlearning to rainfall-runoff simulation indicate that there is\
    \ signiﬁcantly more information\nin large-scale hydrological data sets than hydrologists\
    \ have been able to translate into\ntheory or models [129]. GeoAI has also revealed\
    \ new hydrological patterns and trends,\nusing heterogeneous data from different\
    \ sources and quality [244,245]. Therefore, novel\ndata-driven modeling provides\
    \ the potential to gain new information and knowledge and\na better understanding\
    \ of the hydrological system and its changes [129,235].\n6. GeoAI Research Trends\
    \ in Integrated Hydrological and Fluvial Systems Modeling\n6.1. Toward Transdisciplinary\
    \ GeoAI Research in Hydrological Modeling\nNowadays, earth science has mostly\
    \ adopted GeoAI approaches developed in other\nﬁelds, particularly computer science.\
    \ GeoAI is also an active ﬁeld of research in advanced\nhydrological modeling,\
    \ providing new insights into hydrological system functioning,\nadvantages in\
    \ computational efﬁciency, and prediction accuracy. Nevertheless, it depends\n\
    on how the hydrological GeoAI model has been set up by the user, the quantity\
    \ and quality\nof the data, and the types and number of variables used.\nGeoAI\
    \ methods can be integrated with other data analysis techniques, e.g., Fourier\n\
    and wavelet transformation, to remove noise and provide better hydrological feature\n\
    extraction [30,198]. Hence a transdisciplinary approach is demanded to ensure\
    \ insightful\nresearch on GeoAI applications in hydrological and ﬂuvial studies\
    \ [235]. This is particularly\nrelevant as the complexity of the GeoAI models\
    \ is increasing continuously, and model\nparametrization and parallel computing\
    \ solutions require expert knowledge for proper\nGeoAI technology adoption [18,240].\
    \ Similarly, these issues also arise when hydrological\nscience principles are\
    \ not explicitly integrated with the GeoAI data-driven models, resulting\nin a\
    \ limited explainability of the underlying physical laws that govern hydrological\
    \ and\nhydraulic processes [50,129].\n6.2. Augmenting GeoAI Prediction Capability\
    \ with Open Data and Crowdsourced Data\nGeoAI models demand a large amount of\
    \ training data. Although data collection\ntechnology has progressed substantially,\
    \ only a few geographical areas or pilot hydrological\nsystems are well equipped.\
    \ For example, very few catchments have implemented IoT hy-\ndrological monitoring\
    \ technology. GeoAI models will demand a rapid and massive increase\nin data collection.\
    \ The current open-access policy of many governmental environmental\nagencies,\
    \ related to climatological, hydrological, and environmental data, enhances the\n\
    data-driven research and GeoAI applications, particularly in Western countries.\
    \ Similarly,\nopen access to high-resolution topographical and earth observation\
    \ data (e.g., NASA and\nthe ESA-EU Copernicus Programme) also accelerates the\
    \ development of GeoAI-based hy-\ndrological models [241,246]. Additionally, the\
    \ current trend of implementing open-access\ntraining libraries, e.g., training\
    \ data for land cover classiﬁcation, is valuable, but more\nspecialized hydrogeomorphic\
    \ labeled data are still under development.\nCitizen science also plays a key\
    \ role in complementing and increasing data collection\nworldwide. There are several\
    \ examples of how hydrological crowdsourcing enhances hy-\ndrological data availability\
    \ for scientiﬁc research, using images and social media data [247]\nand low-cost\
    \ data loggers [248,249], but the success and quality of hydrological crowd-\n\
    sourcing are variable, depending on the regions, the instrument used, and the\
    \ variables\nreported [250]. GeoAI-based hydrological model development will beneﬁt\
    \ from crowd-\nsourcing data collection.\nWater 2022, 14, 2211\n26 of 38\n6.3.\
    \ From Physical-Based and GeoAI Hybrid Models to Fully Integrated\nGeoAI–Physical-Based\
    \ Models\nPhysical-based and GeoAI hydrological models have had different paths\
    \ of devel-\nopment. As discussed previously, a physical-based model is derived\
    \ from empirical and\nexperimental research; meanwhile, a GeoAI model is derived\
    \ from data sciences techniques.\nPhysical-based and GeoAI models are not complementary\
    \ per se, but in many cases,\nthe integration of both approaches has shown a great\
    \ potential to improve hydrological\nmodeling [18,129]. Currently, there is a\
    \ different level of integration; most of them are\nstill so-called loose integrated\
    \ models, where the GeoAI and the physical-based models\nwork independently. The\
    \ GeoAI method is used for data preparation and the reﬁning\nof physical-based\
    \ models, e.g., data fusion, ad hoc parameter optimizations, and data\nassimilation.\
    \ In some cases, the outputs of physical-based models are used to train GeoAI\n\
    models [19,188,251]. Currently, full GeoAI-physical integration is under development,\
    \ em-\nbedding machine learning solutions into physical-based models or developing\
    \ physically\nguided GeoAI models; see, e.g., Hanson et al. [21]. Both approaches\
    \ tend to overcome\ncurrent GeoAI model limitations by providing more physical\
    \ explanatory power, physically\nconsistent and robust prediction, and a high\
    \ level of generalization.\n6.4. From Small-Scale to Global-Scale Hydrological\
    \ Modeling\nIn recent years, substantial attention has been paid to large-scale\
    \ and global-scale\nhydrological modeling [252–254]. Although only experimental\
    \ catchments have sufﬁcient\ndata to perform a reliable hydrological prediction,\
    \ the global availability of climatological,\nhydrological, and remote sensing\
    \ data allows for the parametrizing of the global-level\nhydrological model. This\
    \ planet-wide dataset can only be handled thanks to a combined\nadvancement in\
    \ GeoAI application and cloud computing development, e.g., Google Earth\nEngine,\
    \ CoLab, SEPAL [255], and many other national high-performance computer clusters.\n\
    However, global-scale hydrological modeling still involves a high level of prediction\n\
    uncertainty [256,257], but current progress in the development of physical-based\
    \ GeoAI\nmodels and remote sensing data assimilation can improve global modeling\
    \ accuracy.\n6.5. Automation of Hydrological and Fluvial System Modeling\nGeoAI\
    \ applications are increasing the automation of hydrological prediction and fore-\n\
    casting [258]. Some hydrological modeling has already applied internal self-calibration\
    \ [259–261].\nSimilarly, there is also substantial progress in developing automated\
    \ machine learning\n(autoML) by self-tuning the models’ hyperparameters, such\
    \ as, e.g., autotune and AUTO-\nSKLEARN [262,263]. The hyperparameters drive both\
    \ the efﬁciency of the model training\nprocess and the resulting model quality\
    \ [262]. Therefore, a self-tuning module will enhance\na more rapid adoption of\
    \ GeoAI models in hydrological modeling, and the integration of\nphysical-based\
    \ and GeoAI models can improve autonomous hydrological prediction.\nSimilarly,\
    \ self-supervised image classiﬁcation, particularly that developed in the\nrobotic\
    \ ﬁeld [264], is rapidly being adopted in hydrological studies in, e.g., satellite\
    \ im-\nage classiﬁcation, ﬂuvial landform classiﬁcation, and landform change detection.\
    \ Self-\nsupervised models use automatically generated pseudo-labels, signiﬁcantly\
    \ reducing\nmanual labeling, one of the most time-consuming tasks in supervised\
    \ classiﬁcation [265].\nSelf-supervised image classiﬁcation is enhanced by machine\
    \ learning methods such as\nautoencoder and the generative adversarial network\
    \ (GAN). Autoencoder enhances im-\nage quality and reduces noise by dimension\
    \ reduction and retaining latent features [266].\nGAN is a promising technique\
    \ to further automate high-dimensional image classiﬁca-\ntion with limited data\
    \ training. GAN generates new data instances that resemble the\nexisting training\
    \ data by the competition between a generator and a discriminator [267].\nSeveral\
    \ examples show the advantages of incorporating GAN models in hydrological\nclassiﬁcation\
    \ [267–269] or combining it with autoencoder [270]. Integrating GAN with an\n\
    LSTM network model [271–273]; combining GAN with an ANN fuzzy model [274] was\
    \ also\nfound to improve the automated hydrological and weather prediction using\
    \ satellite data.\nWater 2022, 14, 2211\n27 of 38\n6.6. GeoAI-Based Multi-Dimensional\
    \ Geo-Visualization and Digital Twin\nHydrological systems are complex by nature\
    \ and have been challenged to compre-\nhensively and effectively convey spatial\
    \ and non-spatial hydrological information. The\nexplosion of high-dimensional,\
    \ multi-source, spatio-temporal hydrological data demands\nnew ways of multi-dimensional\
    \ geo-visualization [275]. The GeoAI model optimizes the\ntransformation of multi-dimensional\
    \ data into conventional 3D geo-visualization (x, y, and\nz features), but also\
    \ into 4D (including temporal dimension) and 5D geo-visualization\n(including\
    \ geographical scale). The 4D and 5D visualization is crucial for dynamic and\n\
    interactive web-based geo-visualization [276]. The GeoAI also supports building\
    \ hydrolog-\nical digital twins, integrating IoT sensors, and multi-scale satellite\
    \ and close-range remote\nsensing data, with web-based hydrological GeoAI models\
    \ for real-time prediction and\ngeo-visualization. A ‘digital twin’ is a comprehensive\
    \ digital emulator of the real-world\nsystem that aims to optimize the design\
    \ and operations of complex processes through a\nhighly interconnected workﬂow\
    \ [277]. Hydrological digital twins support the correct im-\nplementation of the\
    \ IWRM actions, including natural disaster response, nexus approaches,\nand adaptation\
    \ to climate change. Those actions require approaches underpinned by a\ndeeper\
    \ analysis of river basin systems functioning, scaling-up ﬁeld-based knowledge,\
    \ and\nnew digital solutions to provide real-time, high-resolution information\
    \ [278]. Addition-\nally, the advance in web-mapping services (WMS) and mobile\
    \ app development with\ninteractive geo-visualization [279] enhances hydrological\
    \ information dissemination for\ndecision-makers, stakeholders, and the general\
    \ public engagement.\n7. Conclusions\nGeoAI applications in integrated hydrological\
    \ and ﬂuvial system modeling have\nsteadily increased in recent years. We found\
    \ plenty of GeoAI applications in hydrological\nand ﬂuvial studies. The main applications\
    \ were for assessing GeoAI hydrological prediction\nand classiﬁcation performance,\
    \ comparing GeoAI methods with hydrological physical-\nbased models and integrating\
    \ physical-based models with GeoAI. A wide range of GeoAI\nmethods are currently\
    \ applied in this ﬁeld, e.g., RF, SVM, ANN, LSTM, GAN, GA, and meta-\nheuristic\
    \ algorithms. The selection of a particular algorithm depends on the application\n\
    objective, data availability, and user expertise.\nOverall, GeoAI applications\
    \ showed advantages in non-linear modeling, computa-\ntional efﬁciency, integration\
    \ of heterogeneous data sources, high-accuracy prediction, and\nthe unraveling\
    \ of new hydrological patterns or in detecting changes using high-dimensional,\n\
    multi-source geospatial data. GeoAI methods seem particularly relevant for complex\
    \ sys-\ntems and large geographical-scale modeling. A signiﬁcant disadvantage\
    \ of GeoAI models\nis the low level of physical interpretability, explainability,\
    \ and model generalization. There-\nfore, current research trends focus on integrating\
    \ the physical-based model with GeoAI\nmethods to bridge data-driven and theory-driven\
    \ knowledge generation. Several levels of\nmodel integrations exist, but a full\
    \ physical-based GeoAI model is still under development.\nThe GeoAI models have\
    \ shown high potential for autonomous hydrological prediction and\nforecasting\
    \ and early warning systems.\nAuthor Contributions: Conceptualization, C.G.-I.,\
    \ J.S., M.C. and H.M.; methodology, C.G.-I., M.C.\nand P.A.; analysis, C.G.-I.,\
    \ J.S., M.C., D.C. and H.M.; investigation, C.G.-I., J.S., D.C., M.C. and H.M.;\n\
    resources, P.A.; writing—original draft preparation, C.G.-I., J.S., D.C., M.C.\
    \ and H.M.; writing—review\nand editing, C.G.-I., J.S., H.M., D.C., M.C., A.T.H.\
    \ and P.A.; visualization, C.G.-I. and M.C.; funding\nacquisition, P.A. All authors\
    \ have read and agreed to the published version of the manuscript.\nFunding: This\
    \ work was funded by Academy of Finland, grant number 337279, 346161, 347701 and\n\
    346165 (NextGenerationEU). MC was funded by the Turku Collegium of Science, Medicine\
    \ and\nTechnology (TCSMT), University of Turku, Finland.\nInstitutional Review\
    \ Board Statement: Not applicable.\nInformed Consent Statement: Not applicable.\n\
    Water 2022, 14, 2211\n28 of 38\nData Availability Statement: Not applicable.\n\
    Acknowledgments: We kindly thank the Freshwater Competence Centre (Available online:\
    \ www.\nfreshwatercompetencecentre.com (accessed on 21 June 2022)).\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nAbbreviations\nAI\n\
    Artiﬁcial Intelligence\nANN\nArtiﬁcial Neural Network\nCNN\nConvolution Neural\
    \ Network\nDA\nData Assimilation\nDEM\nDigital Elevation Model\nGA\nGenetic Algorithm\n\
    GAN\nGenerative Adversarial Networks\nGeoAI\nGeospatial Artiﬁcial Intelligence\n\
    GP\nGenetic programing\nIoT\nInternet of Things\nIWRM\nIntegrated Water Resources\
    \ Management\nLiDAR\nLight Detection and Ranging\nLSTM\nLong Short-term Memory\
    \ Networks\nML\nMachine Learning\nRF\nRandom Forest (RF)\nRL\nReinforced Learning\n\
    RNN\nRecurrent Neural Network (RNN)\nSVM\nSupport Vector Machine (SVM)\nUAV\n\
    Unmanned Aerial Vehicles\nWQ\nWater Quality\nReferences\n1.\nBeven, K. Towards\
    \ a Methodology for Testing Models as Hypotheses in the Inexact Sciences. Proc.\
    \ R. Soc. Math. Phys. Eng. Sci.\n2019, 475, 20180862. [CrossRef] [PubMed]\n2.\n\
    McMillan, H.K.; Westerberg, I.K.; Krueger, T. Hydrological Data Uncertainty and\
    \ Its Implications. WIREs Water 2018, 5, e1319.\n[CrossRef]\n3.\nSun, A.Y.; Scanlon,\
    \ B.R. How Can Big Data and Machine Learning Beneﬁt Environment and Water Management:\
    \ A Survey of\nMethods, Applications, and Future Directions. Environ. Res. Lett.\
    \ 2019, 14, 073001. [CrossRef]\n4.\nTodini, E. History and Perspectives of Hydrological\
    \ Catchment Modelling. Hydrol. Res. 2011, 42, 73–85. [CrossRef]\n5.\nCoulthard,\
    \ T.J.; Van De Wiel, M.J. Modelling River History and Evolution. Philos. Trans.\
    \ R. Soc. Math. Phys. Eng. Sci. 2012,\n370, 2123–2142. [CrossRef]\n6.\nSingh,\
    \ V.P. Hydrologic Modeling: Progress and Future Directions. Geosci. Lett. 2018,\
    \ 5, 15. [CrossRef]\n7.\nKoren, V.; Smith, M.; Cui, Z. Physically-Based Modiﬁcations\
    \ to the Sacramento Soil Moisture Accounting Model. Part A: Modeling\nthe Effects\
    \ of Frozen Ground on the Runoff Generation Process. J. Hydrol. 2014, 519, 3475–3491.\
    \ [CrossRef]\n8.\nArnold, J.; Moriasi, D.; Gassman, P.; Abbaspour, K.; White,\
    \ M.; Srinivasan, R.; Santhi, C.; Harmel, R.; van Griensven, A.; Van Liew,\nM.;\
    \ et al. SWAT: Model Use, Calibration, and Validation. Trans. ASABE 2012, 55,\
    \ 1491–1508. [CrossRef]\n9.\nGochis, D.J.; Yu, W.; Yates, D. The WRF-Hydro Model\
    \ Technical Description and User-s Guide. NCAR Tech. Doc. 2013. [CrossRef]\n10.\n\
    Brunner, P.; Simmons, C.T. HydroGeoSphere: A Fully Integrated, Physically Based\
    \ Hydrological Model. Groundwater 2012,\n50, 170–176. [CrossRef]\n11.\nLane, S.N.;\
    \ Ferguson, R.I. Modelling Reach-Scale Fluvial Flows. In Computational Fluid Dynamics;\
    \ John Wiley & Sons, Ltd.:\nHoboken, NJ, USA, 2005; pp. 215–269, ISBN 978-0-470-01519-3.\n\
    12.\nClark, M.P.; Bierkens, M.F.P.; Samaniego, L.; Woods, R.A.; Uijlenhoet, R.;\
    \ Bennett, K.E.; Pauwels, V.R.N.; Cai, X.; Wood, A.W.;\nPeters-Lidard, C.D. The\
    \ Evolution of Process-Based Hydrologic Models: Historical Challenges and the\
    \ Collective Quest for\nPhysical Realism. Hydrol. Earth Syst. Sci. 2017, 21, 3427–3440.\
    \ [CrossRef]\n13.\nHauswirth, S.M.; Bierkens, M.F.P.; Beijk, V.; Wanders, N. The\
    \ Potential of Data Driven Approaches for Quantifying Hydrological\nExtremes.\
    \ Adv. Water Resour. 2021, 155, 104017. [CrossRef]\n14.\nNoori, N.; Kalin, L.\
    \ Coupling SWAT and ANN Models for Enhanced Daily Streamﬂow Prediction. J. Hydrol.\
    \ 2016, 533, 141–151.\n[CrossRef]\n15.\nLi, X.; Yan, D.; Wang, K.; Weng, B.; Qin,\
    \ T.; Liu, S. Flood Risk Assessment of Global Watersheds Based on Multiple Machine\n\
    Learning Models. Water 2019, 11, 1654. [CrossRef]\nWater 2022, 14, 2211\n29 of\
    \ 38\n16.\nHsu, K.; Gupta, H.V.; Sorooshian, S. Artiﬁcial Neural Network Modeling\
    \ of the Rainfall-Runoff Process. Water Resour. Res. 1995,\n31, 2517–2530. [CrossRef]\n\
    17.\nReichstein, M.; Camps-Valls, G.; Stevens, B.; Jung, M.; Denzler, J.; Carvalhais,\
    \ N. Prabhat Deep Learning and Process Understand-\ning for Data-Driven Earth\
    \ System Science. Nature 2019, 566, 195–204. [CrossRef]\n18.\nRazavi, S. Deep\
    \ Learning, Explained: Fundamentals, Explainability, and Bridgeability to Process-Based\
    \ Modelling. Environ.\nModel. Softw. 2021, 144, 105159. [CrossRef]\n19.\nHosseiny,\
    \ H.; Nazari, F.; Smith, V.; Nataraj, C. A Framework for Modeling Flood Depth\
    \ Using a Hybrid of Hydraulics and\nMachine Learning. Sci. Rep. 2020, 10, 8222.\
    \ [CrossRef]\n20.\nTsai, W.-P.; Feng, D.; Pan, M.; Beck, H.; Lawson, K.; Yang,\
    \ Y.; Liu, J.; Shen, C. From Calibration to Parameter Learning: Harnessing\nthe\
    \ Scaling Effects of Big Data in Geoscientiﬁc Modeling. Nat. Commun. 2021, 12,\
    \ 5988. [CrossRef]\n21.\nHanson, P.C.; Stillman, A.B.; Jia, X.; Karpatne, A.;\
    \ Dugan, H.A.; Carey, C.C.; Stachelek, J.; Ward, N.K.; Zhang, Y.; Read, J.S.;\
    \ et al.\nPredicting Lake Surface Water Phosphorus Dynamics Using Process-Guided\
    \ Machine Learning. Ecol. Model. 2020, 430, 109136.\n[CrossRef]\n22.\nLu, D.;\
    \ Konapala, G.; Painter, S.L.; Kao, S.-C.; Gangrade, S. Streamﬂow Simulation in\
    \ Data-Scarce Basins Using Bayesian and\nPhysics-Informed Machine Learning Models.\
    \ J. Hydrometeorol. 2021, 22, 1421–1438. [CrossRef]\n23.\nMaxwell, R.M.; Condon,\
    \ L.E.; Melchior, P. A Physics-Informed, Machine Learning Emulator of a 2D Surface\
    \ Water Model: What\nTemporal Networks and Simulation-Based Inference Can Help\
    \ Us Learn about Hydrologic Processes. Water 2021, 13, 3633.\n[CrossRef]\n24.\n\
    Tran, H.; Leonarduzzi, E.; De la Fuente, L.; Hull, R.B.; Bansal, V.; Chennault,\
    \ C.; Gentine, P.; Melchior, P.; Condon, L.E.; Maxwell,\nR.M. Development of a\
    \ Deep Learning Emulator for a Distributed Groundwater–Surface Water Model: ParFlow-ML.\
    \ Water 2021,\n13, 3393. [CrossRef]\n25.\nMadaeni, F.; Lhissou, R.; Chokmani,\
    \ K.; Raymond, S.; Gauthier, Y. Ice Jam Formation, Breakup and Prediction Methods\
    \ Based on\nHydroclimatic Data Using Artiﬁcial Intelligence: A Review. Cold Reg.\
    \ Sci. Technol. 2020, 174, 103032. [CrossRef]\n26.\nZounemat-Kermani, M.; Matta,\
    \ E.; Cominola, A.; Xia, X.; Zhang, Q.; Liang, Q.; Hinkelmann, R. Neurocomputing\
    \ in Surface\nWater Hydrology and Hydraulics: A Review of Two Decades Retrospective,\
    \ Current Status and Future Prospects. J. Hydrol. 2020,\n588, 125085. [CrossRef]\n\
    27.\nRajaee, T.; Khani, S.; Ravansalar, M. Artiﬁcial Intelligence-Based Single\
    \ and Hybrid Models for Prediction of Water Quality in\nRivers: A Review. Chemom.\
    \ Intell. Lab. Syst. 2020, 200, 103978. [CrossRef]\n28.\nNajah Ahmed, A.; Binti\
    \ Othman, F.; Abdulmohsin Afan, H.; Khaleel Ibrahim, R.; Ming Fai, C.; Shabbir\
    \ Hossain, M.; Ehteram, M.;\nElshaﬁe, A. Machine Learning Methods for Better Water\
    \ Quality Prediction. J. Hydrol. 2019, 578, 124084. [CrossRef]\n29.\nNalouﬁ, M.;\
    \ Lucas, F.S.; Souihi, S.; Servais, P.; Janne, A.; Wanderley Matos De Abreu, T.\
    \ Evaluating the Performance of Machine\nLearning Approaches to Predict the Microbial\
    \ Quality of Surface Waters and to Optimize the Sampling Effort. Water 2021, 13,\
    \ 2457.\n[CrossRef]\n30.\nNourani, V.; Hosseini Baghanam, A.; Adamowski, J.; Kisi,\
    \ O. Applications of Hybrid Wavelet–Artiﬁcial Intelligence Models in\nHydrology:\
    \ A Review. J. Hydrol. 2014, 514, 358–377. [CrossRef]\n31.\nSit, M.; Demiray,\
    \ B.Z.; Xiang, Z.; Ewing, G.J.; Sermet, Y.; Demir, I. A Comprehensive Review of\
    \ Deep Learning Applications in\nHydrology and Water Resources. Water Sci. Technol.\
    \ 2020, 82, 2635–2670. [CrossRef]\n32.\nKambalimath, S.; Deka, P.C. A Basic Review\
    \ of Fuzzy Logic Applications in Hydrology and Water Resources. Appl. Water Sci.\n\
    2020, 10, 191. [CrossRef]\n33.\nZounemat-Kermani, M.; Batelaan, O.; Fadaee, M.;\
    \ Hinkelmann, R. Ensemble Machine Learning Paradigms in Hydrology: A\nReview.\
    \ J. Hydrol. 2021, 598, 126266. [CrossRef]\n34.\nPham, M.T.; Raji´c, A.; Greig,\
    \ J.D.; Sargeant, J.M.; Papadopoulos, A.; McEwen, S.A. A Scoping Review of Scoping\
    \ Reviews:\nAdvancing the Approach and Enhancing the Consistency. Res. Synth.\
    \ Methods 2014, 5, 371–385. [CrossRef] [PubMed]\n35.\nSucharew, H.; Macaluso,\
    \ M. Methods for Research Evidence Synthesis: The Scoping Review Approach. J.\
    \ Hosp. Med. 2019,\n14, 416–418. [CrossRef] [PubMed]\n36.\nVoPham, T.; Hart, J.E.;\
    \ Laden, F.; Chiang, Y.-Y. Emerging Trends in Geospatial Artiﬁcial Intelligence\
    \ (GeoAI): Potential Applications\nfor Environmental Epidemiology. Environ. Health\
    \ 2018, 17, 40. [CrossRef]\n37.\nJanowicz, K.; Gao, S.; McKenzie, G.; Hu, Y.;\
    \ Bhaduri, B. GeoAI: Spatially Explicit Artiﬁcial Intelligence Techniques for\
    \ Geographic\nKnowledge Discovery and Beyond. Int. J. Geogr. Inf. Sci. 2020, 34,\
    \ 625–636. [CrossRef]\n38.\nHu, Y.; Gao, S.; Lunga, D.; Li, W.; Newsam, S.; Bhaduri,\
    \ B. GeoAI at ACM SIGSPATIAL: Progress, Challenges, and Future\nDirections. Sigspatial\
    \ Spec. 2019, 11, 5–15. [CrossRef]\n39.\nHastie, T.; Tibshirani, R.; Friedman,\
    \ J. Introduction. In The Elements of Statistical Learning: Data Mining, Inference,\
    \ and Predic-\ntion; Hastie, T., Tibshirani, R., Friedman, J., Eds.; Springer\
    \ Series in Statistics; Springer: New York, NY, USA, 2009; pp. 1–8,\nISBN 978-0-387-84858-7.\n\
    40.\nGoodfellow, I.; Bengio, Y.; Courville, A. Deep Learning; Adaptive Computation\
    \ and Machine Learning Series; MIT Press:\nCambridge, MA, USA, 2016; ISBN 978-0-262-03561-3.\n\
    41.\nLee, T.; Singh, V.P.; Cho, K.H. Deep Learning for Hydrometeorology and Environmental\
    \ Science; Water Science and Technology Library;\nSpringer International Publishing:\
    \ Cham, Switzerland, 2021; ISBN 978-3-030-64776-6.\nWater 2022, 14, 2211\n30 of\
    \ 38\n42.\nSarker, I.H. Machine Learning: Algorithms, Real-World Applications\
    \ and Research Directions. SN Comput. Sci. 2021, 2, 160.\n[CrossRef]\n43.\nNicholaus,\
    \ I.T.; Park, J.R.; Jung, K.; Lee, J.S.; Kang, D.-K. Anomaly Detection of Water\
    \ Level Using Deep Autoencoder. Sensors\n2021, 21, 6679. [CrossRef]\n44.\nElith,\
    \ J.; Leathwick, J.R.; Hastie, T. A Working Guide to Boosted Regression Trees.\
    \ J. Anim. Ecol. 2008, 77, 802–813. [CrossRef]\n45.\nIbrahim, K.S.M.H.; Huang,\
    \ Y.F.; Ahmed, A.N.; Koo, C.H.; El-Shaﬁe, A. A Review of the Hybrid Artiﬁcial\
    \ Intelligence and\nOptimization Modelling of Hydrological Streamﬂow Forecasting.\
    \ Alex. Eng. J. 2022, 61, 279–303. [CrossRef]\n46.\nJia, J.; Wang, W. Review of\
    \ Reinforcement Learning Research. In Proceedings of the 2020 35th Youth Academic\
    \ Annual Conference\nof Chinese Association of Automation (YAC), Zhanjiang, China,\
    \ 16–18 October 2020; pp. 186–191.\n47.\nLange, H.; Sippel, S. Machine Learning\
    \ Applications in Hydrology. In Forest-Water Interactions; Levia, D.F., Carlyle-Moses,\
    \ D.E.,\nIida, S., Michalzik, B., Nanko, K., Tischer, A., Eds.; Ecological Studies;\
    \ Springer International Publishing: Cham, Switzerland,\n2020; pp. 233–257, ISBN\
    \ 978-3-030-26086-6.\n48.\nTroch, P.A.; Carrillo, G.A.; Heidbüchel, I.; Rajagopal,\
    \ S.; Switanek, M.; Volkmann, T.H.M.; Yaeger, M. Dealing with Landscape\nHeterogeneity\
    \ in Watershed Hydrology: A Review of Recent Progress toward New Hydrological\
    \ Theory. Geogr. Compass 2009,\n3, 375–392. [CrossRef]\n49.\nSivakumar, B. Nonlinear\
    \ Dynamics and Chaos in Hydrologic Systems: Latest Developments and a Look Forward.\
    \ Stoch. Environ.\nRes. Risk Assess. 2009, 23, 1027–1036. [CrossRef]\n50.\nSchmidt,\
    \ L.; Heße, F.; Attinger, S.; Kumar, R. Challenges in Applying Machine Learning\
    \ Models for Hydrological Inference: A\nCase Study for Flooding Events Across\
    \ Germany. Water Resour. Res. 2020, 56, e2019WR025924. [CrossRef]\n51.\nBadrzadeh,\
    \ H.; Sarukkalige, R.; Jayawardena, A.W. Hourly Runoff Forecasting for Flood Risk\
    \ Management: Application of\nVarious Computational Intelligence Models. J. Hydrol.\
    \ 2015, 529, 1633–1643. [CrossRef]\n52.\nSchoppa, L.; Disse, M.; Bachmair, S.\
    \ Evaluating the Performance of Random Forest for Large-Scale Flood Discharge\
    \ Simulation.\nJ. Hydrol. 2020, 590, 125531. [CrossRef]\n53.\nZhang, X.; Peng,\
    \ Y.; Zhang, C.; Wang, B. Are Hybrid Models Integrated with Data Preprocessing\
    \ Techniques Suitable for Monthly\nStreamﬂow Forecasting? Some Experiment Evidences.\
    \ J. Hydrol. 2015, 530, 137–152. [CrossRef]\n54.\nIwashita, F.; Friedel, M.J.;\
    \ Ferreira, F.J.F. A Self-Organizing Map Approach to Characterize Hydrogeology\
    \ of the Fractured\nSerra-Geral Transboundary Aquifer. Hydrol. Res. 2017, 49,\
    \ 794–814. [CrossRef]\n55.\nKimura, N.; Yoshinaga, I.; Sekijima, K.; Azechi, I.;\
    \ Baba, D. Convolutional Neural Network Coupled with a Transfer-Learning\nApproach\
    \ for Time-Series Flood Predictions. Water 2020, 12, 96. [CrossRef]\n56.\nKim,\
    \ H.I.; Han, K.Y. Urban Flood Prediction Using Deep Neural Network with Data Augmentation.\
    \ Water 2020, 12, 899.\n[CrossRef]\n57.\nSun, A.Y.; Scanlon, B.R.; Zhang, Z.;\
    \ Walling, D.; Bhanja, S.N.; Mukherjee, A.; Zhong, Z. Combining Physically Based\
    \ Modeling\nand Deep Learning for Fusing GRACE Satellite Data: Can We Learn From\
    \ Mismatch? Water Resour. Res. 2019, 55, 1179–1195.\n[CrossRef]\n58.\nXiang, Z.;\
    \ Yan, J.; Demir, I. A Rainfall-Runoff Model With LSTM-Based Sequence-to-Sequence\
    \ Learning. Water Resour. Res. 2020,\n56, e2019WR025326. [CrossRef]\n59.\nTennant,\
    \ C.; Larsen, L.; Bellugi, D.; Moges, E.; Zhang, L.; Ma, H. The Utility of Information\
    \ Flow in Formulating Discharge\nForecast Models: A Case Study From an Arid Snow-Dominated\
    \ Catchment. Water Resour. Res. 2020, 56, e2019WR024908.\n[CrossRef]\n60.\nKan,\
    \ G.; Liang, K.; Yu, H.; Sun, B.; Ding, L.; Li, J.; He, X.; Shen, C. Hybrid Machine\
    \ Learning Hydrological Model for Flood\nForecast Purpose. Open Geosci. 2020,\
    \ 12, 813–820. [CrossRef]\n61.\nBoucher, M.-A.; Quilty, J.; Adamowski, J. Data\
    \ Assimilation for Streamﬂow Forecasting Using Extreme Learning Machines and\n\
    Multilayer Perceptrons. Water Resour. Res. 2020, 56, e2019WR026226. [CrossRef]\n\
    62.\nHernández, F.; Liang, X. Hybridizing Bayesian and Variational Data Assimilation\
    \ for High-Resolution Hydrologic Forecasting.\nHydrol. Earth Syst. Sci. 2018,\
    \ 22, 5759–5779. [CrossRef]\n63.\nAytaç, E. Unsupervised Learning Approach in\
    \ Deﬁning the Similarity of Catchments: Hydrological Response Unit Based k-Means\n\
    Clustering, a Demonstration on Western Black Sea Region of Turkey. Int. Soil Water\
    \ Conserv. Res. 2020, 8, 321–331. [CrossRef]\n64.\nLey, R.; Casper, M.C.; Hellebrand,\
    \ H.; Merz, R. Catchment Classiﬁcation by Runoff Behaviour with Self-Organizing\
    \ Maps (SOM).\nHydrol. Earth Syst. Sci. 2011, 15, 2947–2962. [CrossRef]\n65.\n\
    Ley, R.; Hellebrand, H.; Casper, M.C.; Fenicia, F. Is Catchment Classiﬁcation\
    \ Possible by Means of Multiple Model Structures? A\nCase Study Based on 99 Catchments\
    \ in Germany. Hydrology 2016, 3, 22. [CrossRef]\n66.\nSwain, J.B.; Sahoo, M.M.;\
    \ Patra, K.C. Homogeneous Region Determination Using Linear and Nonlinear Techniques.\
    \ Phys. Geogr.\n2016, 37, 361–384. [CrossRef]\n67.\nChen, I.-T.; Chang, L.-C.;\
    \ Chang, F.-J. Exploring the Spatio-Temporal Interrelation between Groundwater\
    \ and Surface Water by\nUsing the Self-Organizing Maps. J. Hydrol. 2018, 556,\
    \ 131–142. [CrossRef]\n68.\nChang, L.-C.; Chang, F.-J.; Yang, S.-N.; Tsai, F.-H.;\
    \ Chang, T.-H.; Herricks, E.E. Self-Organizing Maps of Typhoon Tracks Allow for\n\
    Flood Forecasts up to Two Days in Advance. Nat. Commun. 2020, 11, 1983. [CrossRef]\
    \ [PubMed]\nWater 2022, 14, 2211\n31 of 38\n69.\nPrinzio, M.; Castellarin, A.;\
    \ Toth, E. Data-Driven Catchment Classiﬁcation: Combining Linear and Non-Linear\
    \ Approaches to\nImprove Hydrological Predictions in Ungauged Catchments. In Proceedings\
    \ of the EGU General Assembly Conference Abstracts,\nVienna, Austria, 22–27 April\
    \ 2012; p. 11717.\n70.\nBrown, S.C.; Lester, R.E.; Versace, V.L.; Fawcett, J.;\
    \ Laurenson, L. Hydrologic Landscape Regionalisation Using Deductive\nClassiﬁcation\
    \ and Random Forests. PLoS ONE 2014, 9, e112856. [CrossRef] [PubMed]\n71.\nLi,\
    \ Y.; Hu, T.; Zheng, G.; Shen, L.; Fan, J.; Zhang, D. An Improved Simpliﬁed Urban\
    \ Storm Inundation Model Based on Urban\nTerrain and Catchment Modiﬁcation. Water\
    \ 2019, 11, 2335. [CrossRef]\n72.\nEbtehaj, A.M.; Foufoula-Georgiou, E. On Variational\
    \ Downscaling, Fusion, and Assimilation of Hydrometeorological States: A\nUniﬁed\
    \ Framework via Regularization. Water Resour. Res. 2013, 49, 5944–5963. [CrossRef]\n\
    73.\nSee, L. Data Fusion Methods for Integrating Data-Driven Hydrological Models.\
    \ In Quantitative Information Fusion for Hydrological\nSciences; Cai, X., Yeh,\
    \ T.-C.J., Eds.; Studies in Computational Intelligence; Springer: Berlin/Heidelberg,\
    \ Germany, 2008; pp. 1–18,\nISBN 978-3-540-75384-1.\n74.\nMeng, T.; Jing, X.;\
    \ Yan, Z.; Pedrycz, W. A Survey on Machine Learning for Data Fusion. Inf. Fusion\
    \ 2020, 57, 115–129. [CrossRef]\n75.\nQian, S.S.; Reckhow, K.H.; Zhai, J.; McMahon,\
    \ G. Nonlinear Regression Modeling of Nutrient Loads in Streams: A Bayesian\n\
    Approach. Water Resour. Res. 2005, 41, 1–10. [CrossRef]\n76.\nRawat, S.; Rawat,\
    \ S. Multi-Sensor Data Fusion by a Hybrid Methodology—A Comparative Study. Comput.\
    \ Ind. 2016, 75, 27–34.\n[CrossRef]\n77.\nYuan, Q.; Shen, H.; Li, T.; Li, Z.;\
    \ Li, S.; Jiang, Y.; Xu, H.; Tan, W.; Yang, Q.; Wang, J.; et al. Deep Learning\
    \ in Environmental Remote\nSensing: Achievements and Challenges. Remote Sens.\
    \ Environ. 2020, 241, 111716. [CrossRef]\n78.\nSist, M.; Schiavon, G.; Del Frate,\
    \ F. A New Data Fusion Neural Network Scheme for Rainfall Retrieval Using Passive\
    \ Microwave\nand Visible/Infrared Satellite Data. Appl. Sci. 2021, 11, 4686. [CrossRef]\n\
    79.\nZhuo, L.; Han, D. Multi-Source Hydrological Soil Moisture State Estimation\
    \ Using Data Fusion Optimisation. Hydrol. Earth Syst.\nSci. 2017, 21, 3267–3285.\
    \ [CrossRef]\n80.\nFehri, R.; Bogaert, P.; Khliﬁ, S.; Vanclooster, M. Data Fusion\
    \ of Citizen-Generated Smartphone Discharge Measurements in Tunisia.\nJ. Hydrol.\
    \ 2020, 590, 125518. [CrossRef]\n81.\nAbbaszadeh, P.; Moradkhani, H.; Zhan, X.\
    \ Downscaling SMAP Radiometer Soil Moisture Over the CONUS Using an Ensemble\n\
    Learning Method. Water Resour. Res. 2019, 55, 324–344. [CrossRef]\n82.\nSeriﬁ,\
    \ A.; Günther, T.; Ban, N. Spatio-Temporal Downscaling of Climate Data Using Convolutional\
    \ and Error-Predicting Neural\nNetworks. Front. Clim. 2021, 3, 26. [CrossRef]\n\
    83.\nSun, A.Y.; Tang, G. Downscaling Satellite and Reanalysis Precipitation Products\
    \ Using Attention-Based Deep Convolutional\nNeural Nets. Front. Water 2020, 2,\
    \ 56. [CrossRef]\n84.\nRittger, K.; Krock, M.; Kleiber, W.; Bair, E.H.; Brodzik,\
    \ M.J.; Stephenson, T.R.; Rajagopalan, B.; Bormann, K.J.; Painter, T.H.\nMulti-Sensor\
    \ Fusion Using Random Forests for Daily Fractional Snow Cover at 30 m. Remote\
    \ Sens. Environ. 2021, 264, 112608.\n[CrossRef]\n85.\nTang, K.; Zhu, H.; Ni, P.\
    \ Spatial Downscaling of Land Surface Temperature over Heterogeneous Regions Using\
    \ Random Forest\nRegression Considering Spatial Features. Remote Sens. 2021, 13,\
    \ 3645. [CrossRef]\n86.\nTran, H.; Nguyen, P.; Ombadi, M.; Hsu, K.; Sorooshian,\
    \ S.; Qing, X. A Cloud-Free MODIS Snow Cover Dataset for the Contiguous\nUnited\
    \ States from 2000 to 2017. Sci. Data 2019, 6, 180300. [CrossRef]\n87.\nMiao,\
    \ Q.; Pan, B.; Wang, H.; Hsu, K.; Sorooshian, S. Improving Monsoon Precipitation\
    \ Prediction Using Combined Convolutional\nand Long Short Term Memory Neural Network.\
    \ Water 2019, 11, 977. [CrossRef]\n88.\nLei, X.; Chen, W.; Panahi, M.; Falah,\
    \ F.; Rahmati, O.; Uuemaa, E.; Kalantari, Z.; Ferreira, C.S.S.; Rezaie, F.; Tiefenbacher,\
    \ J.P.; et al.\nUrban Flood Modeling Using Deep-Learning Approaches in Seoul,\
    \ South Korea. J. Hydrol. 2021, 601, 126684. [CrossRef]\n89.\nVeettil, A.V.; Konapala,\
    \ G.; Mishra, A.K.; Li, H.-Y. Sensitivity of Drought Resilience-Vulnerability-Exposure\
    \ to Hydrologic Ratios\nin Contiguous United States. J. Hydrol. 2018, 564, 294–306.\
    \ [CrossRef]\n90.\nTran, H.; Nguyen, P.; Ombadi, M.; Hsu, K.; Sorooshian, S.;\
    \ Andreadis, K. Improving Hydrologic Modeling Using Cloud-Free\nMODIS Flood Maps.\
    \ J. Hydrometeorol. 2019, 20, 2203–2214. [CrossRef]\n91.\nMosavi, A.; Ozturk,\
    \ P.; Chau, K. Flood Prediction Using Machine Learning Models: Literature Review.\
    \ Water 2018, 10, 1536.\n[CrossRef]\n92.\nShahabi, H.; Shirzadi, A.; Ghaderi,\
    \ K.; Omidvar, E.; Al-Ansari, N.; Clague, J.J.; Geertsema, M.; Khosravi, K.; Amini,\
    \ A.; Bahrami,\nS.; et al. Flood Detection and Susceptibility Mapping Using Sentinel-1\
    \ Remote Sensing Data and a Machine Learning Approach:\nHybrid Intelligence of\
    \ Bagging Ensemble Based on K-Nearest Neighbor Classiﬁer. Remote Sens. 2020, 12,\
    \ 266. [CrossRef]\n93.\nLin, Q.; Leandro, J.; Wu, W.; Bhola, P.; Disse, M. Prediction\
    \ of Maximum Flood Inundation Extents With Resilient Backpropagation\nNeural Network:\
    \ Case Study of Kulmbach. Front. Earth Sci. 2020, 8, 332. [CrossRef]\n94.\nLöwe,\
    \ R.; Böhm, J.; Jensen, D.G.; Leandro, J.; Rasmussen, S.H. U-FLOOD—Topographic\
    \ Deep Learning for Predicting Urban\nPluvial Flood Water Depth. J. Hydrol. 2021,\
    \ 603, 126898. [CrossRef]\n95.\nSahoo, S.; Russo, T.A.; Elliott, J.; Foster, I.\
    \ Machine Learning Algorithms for Modeling Groundwater Level Changes in Agricultural\n\
    Regions of the U.S. Water Resour. Res. 2017, 53, 3878–3895. [CrossRef]\n96.\n\
    Bui, D.T.; Panahi, M.; Shahabi, H.; Singh, V.P.; Shirzadi, A.; Chapi, K.; Khosravi,\
    \ K.; Chen, W.; Panahi, S.; Li, S.; et al. Novel Hybrid\nEvolutionary Algorithms\
    \ for Spatial Prediction of Floods. Sci. Rep. 2018, 8, 15364. [CrossRef]\nWater\
    \ 2022, 14, 2211\n32 of 38\n97.\nZhou, Y.; Guo, S.; Chang, F.-J. Explore an Evolutionary\
    \ Recurrent ANFIS for Modelling Multi-Step-Ahead Flood Forecasts.\nJ. Hydrol.\
    \ 2019, 570, 343–355. [CrossRef]\n98.\nChang, F.-J.; Chiang, Y.-M.; Tsai, M.-J.;\
    \ Shieh, M.-C.; Hsu, K.-L.; Sorooshian, S. Watershed Rainfall Forecasting Using\
    \ Neuro-Fuzzy\nNetworks with the Assimilation of Multi-Sensor Information. J.\
    \ Hydrol. 2014, 508, 374–384. [CrossRef]\n99.\nAraya, S.N.; Ghezzehei, T.A. Using\
    \ Machine Learning for Prediction of Saturated Hydraulic Conductivity and Its\
    \ Sensitivity to\nSoil Structural Perturbations. Water Resour. Res. 2019, 55,\
    \ 5715–5737. [CrossRef]\n100. Jian, J.; Shiklomanov, A.; Shuster, W.D.; Stewart,\
    \ R.D. Predicting Near-Saturated Hydraulic Conductivity in Urban Soils. J. Hydrol.\n\
    2021, 595, 126051. [CrossRef]\n101. Watt-Meyer, O.; Brenowitz, N.D.; Clark, S.K.;\
    \ Henn, B.; Kwa, A.; McGibbon, J.; Perkins, W.A.; Bretherton, C.S. Correcting\n\
    Weather and Climate Models by Machine Learning Nudged Historical Simulations.\
    \ Geophys. Res. Lett. 2021, 48, e2021GL092555.\n[CrossRef]\n102. Xu, T.; Liang,\
    \ F. Machine Learning for Hydrologic Sciences: An Introductory Overview. WIREs\
    \ Water 2021, 8, e1533. [CrossRef]\n103. Koch, J.; Gotfredsen, J.; Schneider,\
    \ R.; Troldborg, L.; Stisen, S.; Henriksen, H.J. High Resolution Water Table Modeling\
    \ of the\nShallow Groundwater Using a Knowledge-Guided Gradient Boosting Decision\
    \ Tree Model. Front. Water 2021, 3. [CrossRef]\n104. Wunsch, A.; Liesch, T.; Broda,\
    \ S. Groundwater Level Forecasting with Artiﬁcial Neural Networks: A Comparison\
    \ of Long Short-\nTerm Memory (LSTM), Convolutional Neural Networks (CNNs), and\
    \ Non-Linear Autoregressive Networks with Exogenous\nInput (NARX). Hydrol. Earth\
    \ Syst. Sci. 2021, 25, 1671–1687. [CrossRef]\n105. Kratzert, F.; Klotz, D.; Brenner,\
    \ C.; Schulz, K.; Herrnegger, M. Rainfall–Runoff Modelling Using Long Short-Term\
    \ Memory (LSTM)\nNetworks. Hydrol. Earth Syst. Sci. 2018, 22, 6005–6022. [CrossRef]\n\
    106. Xu, W.; Jiang, Y.; Zhang, X.; Li, Y.; Zhang, R.; Fu, G. Using Long Short-Term\
    \ Memory Networks for River Flow Prediction. Hydrol.\nRes. 2020, 51, 1358–1376.\
    \ [CrossRef]\n107. Li, P.; Zhang, J.; Krebs, P. Prediction of Flow Based on a\
    \ CNN-LSTM Combined Deep Learning Approach. Water 2022, 14, 993.\n[CrossRef]\n\
    108. Lees, T.; Reece, S.; Kratzert, F.; Klotz, D.; Gauch, M.; De Bruijn, J.; Kumar\
    \ Sahu, R.; Greve, P.; Slater, L.; Dadson, S.J. Hydrological\nConcept Formation\
    \ inside Long Short-Term Memory (LSTM) Networks. Hydrol. Earth Syst. Sci. 2022,\
    \ 26, 3079–3101. [CrossRef]\n109. Hussain, D.; Hussain, T.; Khan, A.A.; Naqvi,\
    \ S.A.A.; Jamil, A. A Deep Learning Approach for Hydrological Time-Series Prediction:\n\
    A Case Study of Gilgit River Basin. Earth Sci. Inform. 2020, 13, 915–927. [CrossRef]\n\
    110. Anderson, S.; Radi´c, V. Evaluation and Interpretation of Convolutional Long\
    \ Short-Term Memory Networks for Regional\nHydrological Modelling. Hydrol. Earth\
    \ Syst. Sci. 2022, 26, 795–825. [CrossRef]\n111. Ni, L.; Wang, D.; Singh, V.P.;\
    \ Wu, J.; Wang, Y.; Tao, Y.; Zhang, J. Streamﬂow and Rainfall Forecasting by Two\
    \ Long Short-Term\nMemory-Based Models. J. Hydrol. 2020, 583, 124296. [CrossRef]\n\
    112. Young, C.-C.; Liu, W.-C.; Wu, M.-C. A Physically Based and Machine Learning\
    \ Hybrid Approach for Accurate Rainfall-Runoff\nModeling during Extreme Typhoon\
    \ Events. Appl. Soft Comput. 2017, 53, 205–216. [CrossRef]\n113. Tamiru, H.; Dinka,\
    \ M.O. Application of ANN and HEC-RAS Model for Flood Inundation Mapping in Lower\
    \ Baro Akobo River\nBasin, Ethiopia. J. Hydrol. Reg. Stud. 2021, 36, 100855. [CrossRef]\n\
    114. Wagenaar, D.; Curran, A.; Balbi, M.; Bhardwaj, A.; Soden, R.; Hartato, E.;\
    \ Mestav Sarica, G.; Ruangpan, L.; Molinario, G.;\nLallemant, D. Invited Perspectives:\
    \ How Machine Learning Will Change Flood Risk and Impact Assessment. Nat. Hazards\
    \ Earth\nSyst. Sci. 2020, 20, 1149–1161. [CrossRef]\n115. Williams, R.D.; Brasington,\
    \ J.; Hicks, D.M. Numerical Modelling of Braided River Morphodynamics: Review\
    \ and Future\nChallenges. Geogr. Compass 2016, 10, 102–127. [CrossRef]\n116. Flora,\
    \ K.; Khosronejad, A. On the Impact of Bed-Bathymetry Resolution and Bank Vegetation\
    \ on the Flood Flow Field of the\nAmerican River, California: Insights Gained\
    \ Using Data-Driven Large-Eddy Simulation. J. Irrig. Drain. Eng. 2021, 147, 04021036.\n\
    [CrossRef]\n117. Williams, R.D.; Measures, R.; Hicks, D.M.; Brasington, J. Assessment\
    \ of a Numerical Model to Reproduce Event-Scale Erosion\nand Deposition Distributions\
    \ in a Braided River. Water Resour. Res. 2016, 52, 6621–6642. [CrossRef]\n118.\
    \ Perrin, O.; Christophe, S.; Jacquinod, F.; Payrastre, O. Visual Analysis of\
    \ Inconsistencies in Hydraulic Simulation Data. In\nProceedings of the International\
    \ Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences,\
    \ Hannover,\nGermany, 25 August 2020; Copernicus GmbH: Goettingen, Germany, 2020;\
    \ Volume XLIII-B4-2020, pp. 795–801.\n119. Mirza Alipour, S.; Leal, J. Emulation\
    \ of 2D Hydrodynamic Flood Simulations at Catchment Scale Using ANN and SVR. Water\n\
    2021, 13, 2858. [CrossRef]\n120. Ardourel, V.; Jebeile, J. Numerical Instability\
    \ and Dynamical Systems. Eur. J. Philos. Sci. 2021, 11, 49. [CrossRef]\n121. Hosseiny,\
    \ H. A Deep Learning Model for Predicting River Flood Depth and Extent. Environ.\
    \ Model. Softw. 2021, 145, 105186.\n[CrossRef]\n122. Forghani, M.; Qian, Y.; Lee,\
    \ J.; Farthing, M.W.; Hesser, T.; Kitanidis, P.K.; Darve, E.F. Application of\
    \ Deep Learning to Large Scale\nRiverine Flow Velocity Estimation. Stoch. Environ.\
    \ Res. Risk Assess. 2021, 35, 1069–1088. [CrossRef]\n123. Cheng, C.; Zhang, G.-T.\
    \ Deep Learning Method Based on Physics Informed Neural Network with Resnet Block\
    \ for Solving Fluid\nFlow Problems. Water 2021, 13, 423. [CrossRef]\n124. Fukami,\
    \ K.; Fukagata, K.; Taira, K. Machine-Learning-Based Spatio-Temporal Super Resolution\
    \ Reconstruction of Turbulent\nFlows. J. Fluid Mech. 2021, 909, 1–24. [CrossRef]\n\
    Water 2022, 14, 2211\n33 of 38\n125. Buzzicotti, M.; Bonaccorso, F.; Di Leoni,\
    \ P.C.; Biferale, L. Reconstruction of Turbulent Data with Deep Generative Models\
    \ for\nSemantic Inpainting from TURB-Rot Database. Phys. Rev. Fluids 2021, 6,\
    \ 050503. [CrossRef]\n126. Baracchini, T.; Chu, P.Y.; Šukys, J.; Lieberherr, G.;\
    \ Wunderle, S.; Wüest, A.; Bouffard, D. Data Assimilation of in Situ and Satellite\n\
    Remote Sensing Data to 3D Hydrodynamic Lake Models: A Case Study Using Delft3D-FLOW\
    \ v4.03 and OpenDA v2.4. Geosci.\nModel Dev. 2020, 13, 1267–1284. [CrossRef]\n\
    127. Carrassi, A.; Bocquet, M.; Bertino, L.; Evensen, G. Data Assimilation in\
    \ the Geosciences: An Overview of Methods, Issues, and\nPerspectives. WIREs Clim.\
    \ Chang. 2018, 9, e535. [CrossRef]\n128. Houser, P.; Lannoy, G.; Walker, J. Hydrologic\
    \ Data Assimilation. In Advances in Water Science Methodologies; CRC Press: Boca\n\
    Raton, FL, USA, 2012; ISBN 978-953-51-0294-6.\n129. Nearing, G.S.; Kratzert, F.;\
    \ Sampson, A.K.; Pelissier, C.S.; Klotz, D.; Frame, J.M.; Prieto, C.; Gupta, H.V.\
    \ What Role Does\nHydrological Science Play in the Age of Machine Learning? Water\
    \ Resour. Res. 2021, 57, e2020WR028091. [CrossRef]\n130. Xiong, Z.; Sang, J.;\
    \ Sun, X.; Zhang, B.; Li, J. Comparisons of Performance Using Data Assimilation\
    \ and Data Fusion Approaches in\nAcquiring Precipitable Water Vapor: A Case Study\
    \ of a Western United States of America Area. Water 2020, 12, 2943. [CrossRef]\n\
    131. Farchi, A.; Laloyaux, P.; Bonavita, M.; Bocquet, M. Using Machine Learning\
    \ to Correct Model Error in Data Assimilation and\nForecast Applications. Q. J.\
    \ R. Meteorol. Soc. 2021, 147, 3067–3084. [CrossRef]\n132. Arcucci, R.; Zhu, J.;\
    \ Hu, S.; Guo, Y.-K. Deep Data Assimilation: Integrating Deep Learning with Data\
    \ Assimilation. Appl. Sci.\n2021, 11, 1114. [CrossRef]\n133. Geer, A. Learning\
    \ Earth System Models from Observations: Machine Learning or Data Assimilation?\
    \ Philos. Trans. R. Soc. A 2021,\n379, 20200089. [CrossRef] [PubMed]\n134. Wagener,\
    \ T.; Boyle, D.P.; Lees, M.J.; Wheater, H.S.; Gupta, H.V.; Sorooshian, S. A Framework\
    \ for Development and Application of\nHydrological Models. Hydrol. Earth Syst.\
    \ Sci. 2001, 5, 13–26. [CrossRef]\n135. Vrugt, J.A.; Stauffer, P.H.; Wöhling,\
    \ T.; Robinson, B.A.; Vesselinov, V.V. Inverse Modeling of Subsurface Flow and\
    \ Transport\nProperties: A Review with New Developments. Vadose Zone J. 2008,\
    \ 7, 843–864. [CrossRef]\n136. Carrera, J.; Alcolea, A.; Medina, A.; Hidalgo,\
    \ J.; Slooten, L.J. Inverse Problem in Hydrogeology. Hydrogeol. J. 2005, 13, 206–222.\n\
    [CrossRef]\n137. Beven, K. A Manifesto for the Equiﬁnality Thesis. J. Hydrol.\
    \ 2006, 320, 18–36. [CrossRef]\n138. Mostafaie, A.; Forootan, E.; Safari, A.;\
    \ Schumacher, M. Comparing Multi-Objective Optimization Techniques to Calibrate\
    \ a\nConceptual Hydrological Model Using In Situ Runoff and Daily GRACE Data.\
    \ Comput. Geosci. 2018, 22, 789–814. [CrossRef]\n139. Guo, J.; Zhou, J.; Lu, J.;\
    \ Zou, Q.; Zhang, H.; Bi, S. Multi-Objective Optimization of Empirical Hydrological\
    \ Model for Streamﬂow\nPrediction. J. Hydrol. 2014, 511, 242–253. [CrossRef]\n\
    140. Huang, X.; Lei, X.; Jiang, Y. Comparison of Three Multi-Objective Optimization\
    \ Algorithms for Hydrological Model. In\nProceedings of the International Symposium\
    \ on Intelligence Computation and Applications, Wuhan, China, 27–28 October 2012;\n\
    Li, Z., Li, X., Liu, Y., Cai, Z., Eds.; Springer: Berlin/Heidelberg, Germany,\
    \ 2012; pp. 209–216.\n141. Vrugt, J.A.; Gupta, H.V.; Bastidas, L.A.; Bouten, W.;\
    \ Sorooshian, S. Effective and Efﬁcient Algorithm for Multiobjective Optimiza-\n\
    tion of Hydrologic Models. Water Resour. Res. 2003, 39, 1–19. [CrossRef]\n142.\
    \ Essenfelder, A.H.; Giupponi, C. A Coupled Hydrologic-Machine Learning Modelling\
    \ Framework to Support Hydrologic\nModelling in River Basins under Interbasin\
    \ Water Transfer Regimes. Environ. Model. Softw. 2020, 131, 104779. [CrossRef]\n\
    143. Barnhart, B.L.; Sawicz, K.A.; Ficklin, D.L.; Whittaker, G.W. MOESHA: A Genetic\
    \ Algorithm for Automatic Calibration and\nEstimation of Parameter Uncertainty\
    \ and Sensitivity of Hydrologic Models. Trans. ASABE 2017, 60, 1259–1269. [CrossRef]\n\
    [PubMed]\n144. Zhang, X.; Srinivasan, R.; Liew, M.V. On the Use of Multi-Algorithm,\
    \ Genetically Adaptive Multi-Objective Method for Multi-Site\nCalibration of the\
    \ SWAT Model. Hydrol. Process. 2010, 24, 955–969. [CrossRef]\n145. Kamali, B.;\
    \ Mousavi, S.J.; Abbaspour, K.C. Automatic Calibration of HEC-HMS Using Single-Objective\
    \ and Multi-Objective PSO\nAlgorithms. Hydrol. Process. 2013, 27, 4028–4042. [CrossRef]\n\
    146. Krapu, C.; Borsuk, M.; Kumar, M. Gradient-Based Inverse Estimation for a\
    \ Rainfall-Runoff Model. Water Resour. Res. 2019, 55,\n6625–6639. [CrossRef]\n\
    147. Navarro-Hellín, H.; Martínez-del-Rincon, J.; Domingo-Miguel, R.; Soto-Valles,\
    \ F.; Torres-Sánchez, R. A Decision Support System\nfor Managing Irrigation in\
    \ Agriculture. Comput. Electron. Agric. 2016, 124, 121–131. [CrossRef]\n148. Mullapudi,\
    \ A.; Lewis, M.J.; Gruden, C.L.; Kerkez, B. Deep Reinforcement Learning for the\
    \ Real Time Control of Stormwater\nSystems. Adv. Water Resour. 2020, 140, 103600.\
    \ [CrossRef]\n149. Wolpert, D.H.; Macready, W.G. No Free Lunch Theorems for Optimization.\
    \ IEEE Trans. Evol. Comput. 1997, 1, 67–82. [CrossRef]\n150. Yusoff, Y.; Ngadiman,\
    \ M.S.; Zain, A.M. Overview of NSGA-II for Optimizing Machining Process Parameters.\
    \ Procedia Eng. 2011,\n15, 3978–3983. [CrossRef]\n151. Bianchi, L.; Dorigo, M.;\
    \ Gambardella, L.M.; Gutjahr, W.J. A Survey on Metaheuristics for Stochastic Combinatorial\
    \ Optimization.\nNat. Comput. 2009, 8, 239–287. [CrossRef]\n152. Vrugt, J.A.;\
    \ Robinson, B.A. Improved Evolutionary Optimization from Genetically Adaptive\
    \ Multimethod Search. Proc. Natl.\nAcad. Sci. USA 2007, 104, 708–711. [CrossRef]\
    \ [PubMed]\n153. Confesor, R.B., Jr.; Whittaker, G.W. Automatic Calibration of\
    \ Hydrologic Models With Multi-Objective Evolutionary Algorithm\nand Pareto Optimization1.\
    \ JAWRA J. Am. Water Resour. Assoc. 2007, 43, 981–989. [CrossRef]\nWater 2022,\
    \ 14, 2211\n34 of 38\n154. Ercan, M.B.; Goodall, J.L. Design and Implementation\
    \ of a General Software Library for Using NSGA-II with SWAT for Multi-\nObjective\
    \ Model Calibration. Environ. Model. Softw. 2016, 84, 112–120. [CrossRef]\n155.\
    \ Saravanan, V.S.; McDonald, G.T.; Mollinga, P.P. Critical Review of Integrated\
    \ Water Resources Management: Moving beyond\nPolarised Discourse. Nat. Resour.\
    \ Forum 2009, 33, 76–86. [CrossRef]\n156. Sun, R.; Hernández, F.; Liang, X.; Yuan,\
    \ H. A Calibration Framework for High-Resolution Hydrological Models Using a\n\
    Multiresolution and Heterogeneous Strategy. Water Resour. Res. 2020, 56, e2019WR026541.\
    \ [CrossRef]\n157. Ahmad, A.; El-Shaﬁe, A.; Razali, S.F.M.; Mohamad, Z.S. Reservoir\
    \ Optimization in Water Resources: A Review. Water Resour.\nManag. 2014, 28, 3391–3405.\
    \ [CrossRef]\n158. Xiang, X.; Li, Q.; Khan, S.; Khalaf, O.I. Urban Water Resource\
    \ Management for Sustainable Environment Planning Using Artiﬁcial\nIntelligence\
    \ Techniques. Environ. Impact Assess. Rev. 2021, 86, 106515. [CrossRef]\n159.\
    \ Chaves, P.; Chang, F.-J. Intelligent Reservoir Operation System Based on Evolving\
    \ Artiﬁcial Neural Networks. Adv. Water Resour.\n2008, 31, 926–936. [CrossRef]\n\
    160. Cai, Y.; Wang, H.; Yue, W.; Xie, Y.; Liang, Q. An Integrated Approach for\
    \ Reducing Spatially Coupled Water-Shortage Risks of\nBeijing-Tianjin-Hebei Urban\
    \ Agglomeration in China. J. Hydrol. 2021, 603, 127123. [CrossRef]\n161. Zhang,\
    \ D.; Peng, Q.; Lin, J.; Wang, D.; Liu, X.; Zhuang, J. Simulating Reservoir Operation\
    \ Using a Recurrent Neural Network\nAlgorithm. Water 2019, 11, 865. [CrossRef]\n\
    162. Zarei, M.; Bozorg-Haddad, O.; Baghban, S.; Delpasand, M.; Goharian, E.; Loáiciga,\
    \ H.A. Machine-Learning Algorithms for\nForecast-Informed Reservoir Operation\
    \ (FIRO) to Reduce Flood Damages. Sci. Rep. 2021, 11, 24295. [CrossRef] [PubMed]\n\
    163. Munawar, H.S.; Hammad, A.W.A.; Waller, S.T.; Thaheem, M.J.; Shrestha, A.\
    \ An Integrated Approach for Post-Disaster Flood\nManagement Via the Use of Cutting-Edge\
    \ Technologies and UAVs: A Review. Sustainability 2021, 13, 7925. [CrossRef]\n\
    164. Abraham, A. Adaptation of Fuzzy Inference System Using Neural Learning. In\
    \ Fuzzy Systems Engineering: Theory and Practice;\nNedjah, N., de Macedo Mourelle,\
    \ L., Eds.; Studies in Fuzziness and Soft Computing; Springer: Berlin/Heidelberg,\
    \ Germany,\n2005; pp. 53–83, ISBN 978-3-540-32397-6.\n165. Ighalo, J.O.; Adeniyi,\
    \ A.G.; Marques, G. Internet of Things for Water Quality Monitoring and Assessment:\
    \ A Comprehensive\nReview. In Artiﬁcial Intelligence for Sustainable Development:\
    \ Theory, Practice and Future Applications; Hassanien, A.E., Bhatnagar,\nR., Darwish,\
    \ A., Eds.; Studies in Computational Intelligence; Springer International Publishing:\
    \ Cham, Switzerland, 2021;\npp. 245–259, ISBN 978-3-030-51920-9.\n166. Jan, F.;\
    \ Min-Allah, N.; Dü¸stegör, D. IoT Based Smart Water Quality Monitoring: Recent\
    \ Techniques, Trends and Challenges for\nDomestic Applications. Water 2021, 13,\
    \ 1729. [CrossRef]\n167. Leigh, C.; Kandanaarachchi, S.; McGree, J.M.; Hyndman,\
    \ R.J.; Alsibai, O.; Mengersen, K.; Peterson, E.E. Predicting Sediment and\nNutrient\
    \ Concentrations from High-Frequency Water-Quality Data. PLoS ONE 2019, 14, e0215503.\
    \ [CrossRef] [PubMed]\n168. Mathany, T.M.; Saraceno, J.F.; Kulongoski, J.T. Guidelines\
    \ and Standard Procedures for High-Frequency Groundwater-Quality Monitoring\n\
    Stations—Design, Operation, and Record Computation; Techniques and Methods; U.S.\
    \ Geological Survey: Reston, VA, USA, 2019;\nVolume 1-D7, p. 66.\n169. Seifert-Dähnn,\
    \ I.; Furuseth, I.S.; Vondolia, G.K.; Gal, G.; de Eyto, E.; Jennings, E.; Pierson,\
    \ D. Costs and Beneﬁts of Automated\nHigh-Frequency Environmental Monitoring—The\
    \ Case of Lake Water Management. J. Environ. Manag. 2021, 285, 112108.\n[CrossRef]\
    \ [PubMed]\n170. Jung, H.; Senf, C.; Jordan, P.; Krueger, T. Benchmarking Inference\
    \ Methods for Water Quality Monitoring and Status Classiﬁcation.\nEnviron. Monit.\
    \ Assess. 2020, 192, 261. [CrossRef]\n171. Jesus, G.; Casimiro, A.; Oliveira,\
    \ A. A Survey on Data Quality for Dependable Monitoring in Wireless Sensor Networks.\
    \ Sensors\n2017, 17, 2010. [CrossRef]\n172. Khatri, P.; Gupta, K.K.; Gupta, R.K.\
    \ Drift Compensation of Commercial Water Quality Sensors Using Machine Learning\
    \ to Extend\nthe Calibration Lifetime. J. Ambient Intell. Humaniz. Comput. 2021,\
    \ 12, 3091–3099. [CrossRef]\n173. Kahiluoto, J.; Hirvonen, J.; Näykki, T. Automatic\
    \ Real-Time Uncertainty Estimation for Online Measurements: A Case Study on\n\
    Water Turbidity. Environ. Monit. Assess. 2019, 191, 259. [CrossRef]\n174. Rodriguez-Perez,\
    \ J.; Leigh, C.; Liquet, B.; Kermorvant, C.; Peterson, E.; Sous, D.; Mengersen,\
    \ K. Detecting Technical Anomalies in\nHigh-Frequency Water-Quality Data Using\
    \ Artiﬁcial Neural Networks. Environ. Sci. Technol. 2020, 54, 13719–13730. [CrossRef]\n\
    175. Jiang, J.; Tang, S.; Han, D.; Fu, G.; Solomatine, D.; Zheng, Y. A Comprehensive\
    \ Review on the Design and Optimization of Surface\nWater Quality Monitoring Networks.\
    \ Environ. Model. Softw. 2020, 132, 104792. [CrossRef]\n176. Chachuła, K.; Słojewski,\
    \ T.M.; Nowak, R. Multisensor Data Fusion for Localization of Pollution Sources\
    \ in Wastewater Networks.\nSensors 2022, 22, 387. [CrossRef] [PubMed]\n177. Cao,\
    \ H.; Guo, Z.; Wang, S.; Cheng, H.; Zhan, C. Intelligent Wide-Area Water Quality\
    \ Monitoring and Analysis System Exploiting\nUnmanned Surface Vehicles and Ensemble\
    \ Learning. Water 2020, 12, 681. [CrossRef]\n178. Huang, W.; Yang, Y. Water Quality\
    \ Sensor Model Based on an Optimization Method of RBF Neural Network. Comput.\
    \ Water\nEnergy Environ. Eng. 2019, 9, 1. [CrossRef]\n179. Jafari, H.; Rajaee,\
    \ T.; Kisi, O. Improved Water Quality Prediction with Hybrid Wavelet-Genetic Programming\
    \ Model and Shannon\nEntropy. Nat. Resour. Res. 2020, 29, 3819–3840. [CrossRef]\n\
    180. Jiang, Y.; Li, C.; Sun, L.; Guo, D.; Zhang, Y.; Wang, W. A Deep Learning\
    \ Algorithm for Multi-Source Data Fusion to Predict Water\nQuality of Urban Sewer\
    \ Networks. J. Clean. Prod. 2021, 318, 128533. [CrossRef]\nWater 2022, 14, 2211\n\
    35 of 38\n181. Pattnaik, B.S.; Pattanayak, A.S.; Udgata, S.K.; Panda, A.K. Machine\
    \ Learning Based Soft Sensor Model for BOD Estimation Using\nIntelligence at Edge.\
    \ Complex Intell. Syst. 2021, 7, 961–976. [CrossRef]\n182. Lu, H.; Ma, X. Hybrid\
    \ Decision Tree-Based Machine Learning Models for Short-Term Water Quality Prediction.\
    \ Chemosphere 2020,\n249, 126169. [CrossRef]\n183. Chen, K.; Chen, H.; Zhou, C.;\
    \ Huang, Y.; Qi, X.; Shen, R.; Liu, F.; Zuo, M.; Zou, X.; Wang, J.; et al. Comparative\
    \ Analysis of Surface\nWater Quality Prediction Performance and Identiﬁcation\
    \ of Key Water Parameters Using Different Machine Learning Models\nBased on Big\
    \ Data. Water Res. 2020, 171, 115454. [CrossRef]\n184. Castrillo, M.; García,\
    \ Á.L. Estimation of High Frequency Nutrient Concentrations from Water Quality\
    \ Surrogates Using Machine\nLearning Methods. Water Res. 2020, 172, 115490. [CrossRef]\n\
    185. Wang, P.; Yao, J.; Wang, G.; Hao, F.; Shrestha, S.; Xue, B.; Xie, G.; Peng,\
    \ Y. Exploring the Application of Artiﬁcial Intelligence\nTechnology for Identiﬁcation\
    \ of Water Pollution Characteristics and Tracing the Source of Water Quality Pollutants.\
    \ Sci. Total\nEnviron. 2019, 693, 133440. [CrossRef] [PubMed]\n186. Holmberg,\
    \ M.; Forsius, M.; Starr, M.; Huttunen, M. An Application of Artiﬁcial Neural\
    \ Networks to Carbon, Nitrogen and\nPhosphorus Concentrations in Three Boreal\
    \ Streams and Impacts of Climate Change. Ecol. Model. 2006, 195, 51–60. [CrossRef]\n\
    187. Najafzadeh, M.; Ghaemi, A. Prediction of the Five-Day Biochemical Oxygen\
    \ Demand and Chemical Oxygen Demand in Natural\nStreams Using Machine Learning\
    \ Methods. Environ. Monit. Assess. 2019, 191, 380. [CrossRef] [PubMed]\n188. Noori,\
    \ N.; Kalin, L.; Isik, S. Water Quality Prediction Using SWAT-ANN Coupled Approach.\
    \ J. Hydrol. 2020, 590, 125220.\n[CrossRef]\n189. Haghiabi, A.H.; Nasrolahi, A.H.;\
    \ Parsaie, A. Water Quality Prediction Using Machine Learning Methods. Water Qual.\
    \ Res. J. 2018,\n53, 3–13. [CrossRef]\n190. Bui, D.T.; Khosravi, K.; Tiefenbacher,\
    \ J.; Nguyen, H.; Kazakis, N. Improving Prediction of Water Quality Indices Using\
    \ Novel\nHybrid Machine-Learning Algorithms. Sci. Total Environ. 2020, 721, 137612.\
    \ [CrossRef]\n191. Green, M.B.; Pardo, L.H.; Bailey, S.W.; Campbell, J.L.; McDowell,\
    \ W.H.; Bernhardt, E.S.; Rosi, E.J. Predicting High-Frequency\nVariation in Stream\
    \ Solute Concentrations with Water Quality Sensors and Machine Learning. Hydrol.\
    \ Process. 2021, 35, e14000.\n[CrossRef]\n192. Chang, N.-B.; Bai, K.; Chen, C.-F.\
    \ Integrating Multisensor Satellite Data Merging and Image Reconstruction in Support\
    \ of Machine\nLearning for Better Water Quality Management. J. Environ. Manag.\
    \ 2017, 201, 227–240. [CrossRef]\n193. Hamshaw, S.D.; Dewoolkar, M.M.; Schroth,\
    \ A.W.; Wemple, B.C.; Rizzo, D.M. A New Machine-Learning Approach for Classifying\n\
    Hysteresis in Suspended-Sediment Discharge Relationships Using High-Frequency\
    \ Monitoring Data. Water Resour. Res. 2018, 54,\n4040–4058. [CrossRef]\n194. Chen,\
    \ Y.; Song, L.; Liu, Y.; Yang, L.; Li, D. A Review of the Artiﬁcial Neural Network\
    \ Models for Water Quality Prediction. Appl.\nSci. 2020, 10, 5776. [CrossRef]\n\
    195. Shi, P.; Li, G.; Yuan, Y.; Kuang, L. Data Fusion Using Improved Support Degree\
    \ Function in Aquaculture Wireless Sensor\nNetworks. Sensors 2018, 18, 3851. [CrossRef]\
    \ [PubMed]\n196. Shen, L.Q.; Amatulli, G.; Sethi, T.; Raymond, P.; Domisch, S.\
    \ Estimating Nitrogen and Phosphorus Concentrations in Streams and\nRivers, within\
    \ a Machine Learning Framework. Sci. Data 2020, 7, 161. [CrossRef] [PubMed]\n\
    197. Sperotto, A.; Molina, J.L.; Torresan, S.; Critto, A.; Pulido-Velazquez, M.;\
    \ Marcomini, A. A Bayesian Networks Approach for the\nAssessment of Climate Change\
    \ Impacts on Nutrients Loading. Environ. Sci. Policy 2019, 100, 21–36. [CrossRef]\n\
    198. Song, C.; Yao, L.; Hua, C.; Ni, Q. A Novel Hybrid Model for Water Quality\
    \ Prediction Based on Synchrosqueezed Wavelet\nTransform Technique and Improved\
    \ Long Short-Term Memory. J. Hydrol. 2021, 603, 126879. [CrossRef]\n199. Zhou,\
    \ J.; Chu, F.; Li, X.; Ma, H.; Xiao, F.; Sun, L. Water Quality Prediction Approach\
    \ Based on T-SNE and SA-BiLSTM. In\nProceedings of the 2020 IEEE 22nd International\
    \ Conference on High Performance Computing and Communications; IEEE 18th\nInternational\
    \ Conference on Smart City; IEEE 6th International Conference on Data Science\
    \ and Systems (HPCC/SmartCity/DSS),\nYanuca Island, Fiji, 14–16 December 2020;\
    \ pp. 708–714.\n200. Miloševi´c, D.; Medeiros, A.S.; Stojkovi´c Piperac, M.; Cvijanovi´c,\
    \ D.; Soininen, J.; Milosavljevi´c, A.; Predi´c, B. The Application\nof Uniform\
    \ Manifold Approximation and Projection (UMAP) for Unconstrained Ordination and\
    \ Classiﬁcation of Biological\nIndicators in Aquatic Ecology. Sci. Total Environ.\
    \ 2022, 815, 152365. [CrossRef]\n201. Baker, V.R. The Modern Evolution of Geomorphology—Binghamton\
    \ and Personal Perspectives, 1970–2019 and Beyond. Geomor-\nphology 2020, 366,\
    \ 106684. [CrossRef]\n202. Flener, C.; Vaaja, M.; Jaakkola, A.; Krooks, A.; Kaartinen,\
    \ H.; Kukko, A.; Kasvi, E.; Hyyppä, H.; Hyyppä, J.; Alho, P. Seamless\nMapping\
    \ of River Channels at High Resolution Using Mobile LiDAR and UAV-Photography.\
    \ Remote Sens. 2013, 5, 6382–6407.\n[CrossRef]\n203. Tonina, D.; McKean, J.A.;\
    \ Benjankar, R.M.; Wright, C.W.; Goode, J.R.; Chen, Q.; Reeder, W.J.; Carmichael,\
    \ R.A.; Edmondson, M.R.\nMapping River Bathymetries: Evaluating Topobathymetric\
    \ LiDAR Survey. Earth Surf. Process. Landf. 2019, 44, 507–520. [CrossRef]\n204.\
    \ Emanuele, P.; Nives, G.; Andrea, C.; Carlo, C.; Paolo, D.; Andrea Maria, L.\
    \ Bathymetric Detection of Fluvial Environments\nthrough UASs and Machine Learning\
    \ Systems. Remote Sens. 2020, 12, 4148. [CrossRef]\n205. Carbonneau, P.E.; Dugdale,\
    \ S.J.; Breckon, T.P.; Dietrich, J.T.; Fonstad, M.A.; Miyamoto, H.; Woodget, A.S.\
    \ Adopting Deep Learning\nMethods for Airborne RGB Fluvial Scene Classiﬁcation.\
    \ Remote Sens. Environ. 2020, 251, 112107. [CrossRef]\nWater 2022, 14, 2211\n\
    36 of 38\n206. Carbonneau, P.E.; Belletti, B.; Micotti, M.; Lastoria, B.; Casaioli,\
    \ M.; Mariani, S.; Marchetti, G.; Bizzi, S. UAV-Based Training for\nFully Fuzzy\
    \ Classiﬁcation of Sentinel-2 Fluvial Scenes. Earth Surf. Process. Landf. 2020,\
    \ 45, 3120–3140. [CrossRef]\n207. Rivas Casado, M.; Ballesteros Gonzalez, R.;\
    \ Kriechbaumer, T.; Veal, A. Automated Identiﬁcation of River Hydromorphological\n\
    Features Using UAV High Resolution Aerial Imagery. Sensors 2015, 15, 27969–27989.\
    \ [CrossRef] [PubMed]\n208. Ling, F.; Boyd, D.; Ge, Y.; Foody, G.M.; Li, X.; Wang,\
    \ L.; Zhang, Y.; Shi, L.; Shang, C.; Li, X.; et al. Measuring River Wetted Width\n\
    From Remotely Sensed Imagery at the Subpixel Scale With a Deep Convolutional Neural\
    \ Network. Water Resour. Res. 2019,\n55, 5631–5649. [CrossRef]\n209. Demarchi,\
    \ L.; van de Bund, W.; Pistocchi, A. Object-Based Ensemble Learning for Pan-European\
    \ Riverscape Units Mapping\nBased on Copernicus VHR and EU-DEM Data Fusion. Remote\
    \ Sens. 2020, 12, 1222. [CrossRef]\n210. Szabo, Z.C.; Mikita, T.; Negyesi, G.;\
    \ Varga, O.G.; Burai, P.; Takacs-Szilagyi, L.; Szabo, S. Uncertainty and Overﬁtting\
    \ in Fluvial\nLandform Classiﬁcation Using Laser Scanned Data and Machine Learning:\
    \ A Comparison of Pixel and Object-Based Approaches.\nRemote Sens. 2020, 12, 3652.\
    \ [CrossRef]\n211. Demarchi, L.; Bizzi, S.; Piegay, H. Hierarchical Object-Based\
    \ Mapping of Riverscape Units and in-Stream Mesohabitats Using\nLiDAR and VHR\
    \ Imagery. Remote Sens. 2016, 8, 97. [CrossRef]\n212. Khan, S.; Fryirs, K.A. Application\
    \ of Globally Available, Coarse-Resolution Digital Elevation Models for Delineating\
    \ Valley\nBottom Segments of Varying Length across a Catchment. Earth Surf. Process.\
    \ Landf. 2020, 45, 2788–2803. [CrossRef]\n213. Moody, D.I.; Brumby, S.P.; Rowland,\
    \ J.C.; Gangodagamage, C. Undercomplete Learned Dictionaries for Land Cover Classiﬁcation\n\
    in Multispectral Imagery of Arctic Landscapes Using CoSA: Clustering of Sparse\
    \ Approximations. In Algorithms and Technologies\nfor Multispectral, Hyperspectral,\
    \ and Ultraspectral Imagery Xix; Shen, S.S., Lewis, P.E., Eds.; SPIE: Baltimore,\
    \ MD, USA, 2013;\nVolume 8743, ISBN 978-0-8194-9534-1.\n214. Guillon, H.; Byrne,\
    \ C.F.; Lane, B.A.; Solis, S.S.; Pasternack, G.B. Machine Learning Predicts Reach-Scale\
    \ Channel Types From\nCoarse-Scale Geospatial Data in a Large River Basin. Water\
    \ Resour. Res. 2020, 56, e2019WR026691. [CrossRef]\n215. De Souza, C.M.P.; de\
    \ Figueredo, N.A.; da Costa, L.M.; Veloso, G.V.; de Almeida, M.I.S.; Ferreira,\
    \ E.J. Machine Learning\nAlgorithm In The Prediction Of Geomorphic Indices For\
    \ Appraisal The Inﬂuence Of Landscape Structure On Fluvial Systems,\nSoutheastern-Brazil.\
    \ Rev. Bras. Geomorfol. 2020, 21, 365–380. [CrossRef]\n216. Guneralp, I.; Filippi,\
    \ A.M.; Hales, B. Inﬂuence of River Channel Morphology and Bank Characteristics\
    \ on Water Surface Boundary\nDelineation Using High-Resolution Passive Remote\
    \ Sensing and Template Matching. Earth Surf. Process. Landf. 2014, 39, 977–986.\n\
    [CrossRef]\n217. Heasley, E.L.; Millington, J.D.A.; Clifford, N.J.; Chadwick,\
    \ M.A. A Waterbody Typology Derived from Catchment Controls Using\nSelf-Organising\
    \ Maps. Water 2020, 12, 78. [CrossRef]\n218. Mandlburger, G.; Kölle, M.; Nübel,\
    \ H.; Soergel, U. BathyNet: A Deep Neural Network for Water Depth Mapping from\n\
    Multispectral Aerial Images. PFG—J. Photogramm. Remote Sens. Geoinf. Sci. 2021,\
    \ 89, 71–89. [CrossRef]\n219. Corenblit, D.; Vautier, F.; González, E.; Steiger,\
    \ J. Formation and Dynamics of Vegetated Fluvial Landforms Follow the Biogeomor-\n\
    phological Succession Model in a Channelized River. Earth Surf. Process. Landf.\
    \ 2020, 45, 2020–2035. [CrossRef]\n220. Díaz Gómez, R.; Pasternack, G.B.; Guillon,\
    \ H.; Byrne, C.F.; Schwindt, S.; Larrieu, K.G.; Solis, S.S. Mapping Subaerial\
    \ Sand-Gravel-\nCobble Fluvial Sediment Facies Using Airborne Lidar and Machine\
    \ Learning. Geomorphology 2022, 401, 108106. [CrossRef]\n221. Clubb, F.J.; Bookhagen,\
    \ B.; Rheinwalt, A. Clustering River Proﬁles to Classify Geomorphic Domains. J.\
    \ Geophys. Res. Earth Surf.\n2019, 124, 1417–1439. [CrossRef]\n222. Harrison,\
    \ L.R.; Legleiter, C.J.; Overstreet, B.T.; Bell, T.W.; Hannon, J. Assessing the\
    \ Potential for Spectrally Based Remote Sensing\nof Salmon Spawning Locations.\
    \ River Res. Appl. 2020, 36, 1618–1632. [CrossRef]\n223. Alfredsen, K.; Dalsgård,\
    \ A.; Shamsaliei, S.; Halleraker, J.H.; Gundersen, O.E. Towards an Automatic Characterization\
    \ of Riverscape\nDevelopment by Deep Learning. River Res. Appl. 2022, 38, 810–816.\
    \ [CrossRef]\n224. González-Castro, J.A.; Muste, M. Framework for Estimating Uncertainty\
    \ of ADCP Measurements from a Moving Boat by\nStandardized Uncertainty Analysis.\
    \ J. Hydraul. Eng. 2007, 133, 1390–1410. [CrossRef]\n225. Pan, Z.; Glennie, C.;\
    \ Hartzell, P.; Fernandez-Diaz, J.C.; Legleiter, C.; Overstreet, B. Performance\
    \ Assessment of High Resolution\nAirborne Full Waveform LiDAR for Shallow River\
    \ Bathymetry. Remote Sens. 2015, 7, 5133–5159. [CrossRef]\n226. Bandini, F.; Olesen,\
    \ D.; Jakobsen, J.; Kittel, C.M.M.; Wang, S.; Garcia, M.; Bauer-Gottwein, P. Technical\
    \ Note: Bathymetry\nObservations of Inland Water Bodies Using a Tethered Single-Beam\
    \ Sonar Controlled by an Unmanned Aerial Vehicle. Hydrol.\nEarth Syst. Sci. 2018,\
    \ 22, 4165–4181. [CrossRef]\n227. Alvarez, L.V.; Moreno, H.A.; Segales, A.R.;\
    \ Pham, T.G.; Pillar-Little, E.A.; Chilson, P.B. Merging Unmanned Aerial Systems\n\
    (UAS) Imagery and Echo Soundings with an Adaptive Sampling Technique for Bathymetric\
    \ Surveys. Remote Sens. 2018, 10, 1362.\n[CrossRef]\n228. Van Iersel, W.; Straatsma,\
    \ M.; Middelkoop, H.; Addink, E. Multitemporal Classiﬁcation of River Floodplain\
    \ Vegetation Using\nTime Series of UAV Images. Remote Sens. 2018, 10, 1144. [CrossRef]\n\
    229. Hemmelder, S.; Marra, W.; Markies, H.; De Jong, S.M. Monitoring River Morphology\
    \ & Bank Erosion Using UAV Imagery—A\nCase Study of the River Buëch, Hautes-Alpes,\
    \ France. Int. J. Appl. Earth Obs. Geoinf. 2018, 73, 428–437. [CrossRef]\n230.\
    \ Boothroyd, R.J.; Williams, R.D.; Hoey, T.B.; Barrett, B.; Prasojo, O.A. Applications\
    \ of Google Earth Engine in Fluvial Geomorphol-\nogy for Detecting River Channel\
    \ Change. WIREs Water 2021, 8, e21496. [CrossRef]\nWater 2022, 14, 2211\n37 of\
    \ 38\n231. Shi, W.; Zhang, M.; Zhang, R.; Chen, S.; Zhan, Z. Change Detection\
    \ Based on Artiﬁcial Intelligence: State-of-the-Art and\nChallenges. Remote Sens.\
    \ 2020, 12, 1688. [CrossRef]\n232. Wheaton, J.M.; Fryirs, K.A.; Brierley, G.;\
    \ Bangen, S.G.; Bouwes, N.; O’Brien, G. Geomorphic Mapping and Taxonomy of Fluvial\n\
    Landforms. Geomorphology 2015, 248, 273–295. [CrossRef]\n233. Polidori, L.; El\
    \ Hage, M. Digital Elevation Model Quality Assessment Methods: A Critical Review.\
    \ Remote Sens. 2020, 12, 3522.\n[CrossRef]\n234. Paniconi, C.; Putti, M. Physically\
    \ Based Modeling in Catchment Hydrology at 50: Survey and Outlook. Water Resour.\
    \ Res. 2015,\n51, 7090–7129. [CrossRef]\n235. Marçais, J.; de Dreuzy, J.-R. Prospective\
    \ Interest of Deep Learning for Hydrological Inference. Groundwater 2017, 55,\
    \ 688–692.\n[CrossRef]\n236. Murdoch, W.J.; Singh, C.; Kumbier, K.; Abbasi-Asl,\
    \ R.; Yu, B. Deﬁnitions, Methods, and Applications in Interpretable Machine\n\
    Learning. Proc. Natl. Acad. Sci. USA 2019, 116, 22071–22080. [CrossRef]\n237.\
    \ Pearl, J. The Seven Tools of Causal Inference, with Reﬂections on Machine Learning.\
    \ Commun. ACM 2019, 62, 54–60. [CrossRef]\n238. Goldstein, E.B.; Coco, G.; Plant,\
    \ N.G. A Review of Machine Learning Applications to Coastal Sediment Transport\
    \ and Morphody-\nnamics. Earth-Sci. Rev. 2019, 194, 97–108. [CrossRef]\n239. Tharwat,\
    \ A. Parameter Investigation of Support Vector Machine Classiﬁer with Kernel Functions.\
    \ Knowl. Inf. Syst. 2019,\n61, 1269–1302. [CrossRef]\n240. Shen, C.; Laloy, E.;\
    \ Elshorbagy, A.; Albert, A.; Bales, J.; Chang, F.-J.; Ganguly, S.; Hsu, K.-L.;\
    \ Kifer, D.; Fang, Z.; et al. HESS\nOpinions: Incubating Deep-Learning-Powered\
    \ Hydrologic Science Advances as a Community. Hydrol. Earth Syst. Sci. 2018,\n\
    22, 5639–5656. [CrossRef]\n241. Lindersson, S.; Brandimarte, L.; Mård, J.; Baldassarre,\
    \ G.D. A Review of Freely Accessible Global Datasets for the Study of Floods,\n\
    Droughts and Their Interactions with Human Societies. WIREs Water 2020, 7, e1424.\
    \ [CrossRef]\n242. Pitts, J.; Gopal, S.; Ma, Y.; Koch, M.; Boumans, R.M.; Kaufman,\
    \ L. Leveraging Big Data and Analytics to Improve Food, Energy,\nand Water System\
    \ Sustainability. Front. Big Data 2020, 3, 13. [CrossRef]\n243. Kratzert, F.;\
    \ Klotz, D.; Shalev, G.; Klambauer, G.; Hochreiter, S.; Nearing, G. Towards Learning\
    \ Universal, Regional, and Local\nHydrological Behaviors via Machine Learning\
    \ Applied to Large-Sample Datasets. Hydrol. Earth Syst. Sci. 2019, 23, 5089–5110.\n\
    [CrossRef]\n244. Hagen, J.S.; Leblois, E.; Lawrence, D.; Solomatine, D.; Sorteberg,\
    \ A. Identifying Major Drivers of Daily Streamﬂow from\nLarge-Scale Atmospheric\
    \ Circulation with Machine Learning. J. Hydrol. 2021, 596, 126086. [CrossRef]\n\
    245. Sahraei, A.; Chamorro, A.; Kraft, P.; Breuer, L. Application of Machine Learning\
    \ Models to Predict Maximum Event Water\nFractions in Streamﬂow. Front. Water\
    \ 2021, 3, 652100. [CrossRef]\n246. Sudmanns, M.; Tiede, D.; Lang, S.; Bergstedt,\
    \ H.; Trost, G.; Augustin, H.; Baraldi, A.; Blaschke, T. Big Earth Data: Disruptive\n\
    Changes in Earth Observation Data Management and Analysis? Int. J. Digit. Earth\
    \ 2020, 13, 832–850. [CrossRef]\n247. Le Coz, J.; Patalano, A.; Collins, D.; Guillén,\
    \ N.F.; García, C.M.; Smart, G.M.; Bind, J.; Chiaverini, A.; Le Boursicaud, R.;\
    \ Dramais,\nG.; et al. Crowdsourced Data for Flood Hydrology: Feedback from Recent\
    \ Citizen Science Projects in Argentina, France and New\nZealand. J. Hydrol. 2016,\
    \ 541, 766–777. [CrossRef]\n248. Lowry, C.S.; Fienen, M.N.; Hall, D.M.; Stepenuck,\
    \ K.F. Growing Pains of Crowdsourced Stream Stage Monitoring Using Mobile\nPhones:\
    \ The Development of CrowdHydrology. Front. Earth Sci. 2019, 7, 128. [CrossRef]\n\
    249. Etter, S.; Strobl, B.; van Meerveld, I.; Seibert, J. Quality and Timing of\
    \ Crowd-Based Water Level Class Observations. Hydrol.\nProcess. 2020, 34, 4365–4378.\
    \ [CrossRef]\n250. Njue, N.; Stenfert Kroese, J.; Gräf, J.; Jacobs, S.R.; Weeser,\
    \ B.; Breuer, L.; Ruﬁno, M.C. Citizen Science in Hydrological Monitoring\nand\
    \ Ecosystem Services Management: State of the Art and Future Prospects. Sci. Total\
    \ Environ. 2019, 693, 133531. [CrossRef]\n[PubMed]\n251. Yang, S.; Yang, D.; Chen,\
    \ J.; Santisirisomboon, J.; Lu, W.; Zhao, B. A Physical Process and Machine Learning\
    \ Combined\nHydrological Model for Daily Streamﬂow Simulations of Large Watersheds\
    \ with Limited Observation Data. J. Hydrol. 2020,\n590, 125206. [CrossRef]\n252.\
    \ Yang, T.; Sun, F.; Gentine, P.; Liu, W.; Wang, H.; Yin, J.; Du, M.; Liu, C.\
    \ Evaluation and Machine Learning Improvement of Global\nHydrological Model-Based\
    \ Flood Simulations. Environ. Res. Lett. 2019, 14, 114027. [CrossRef]\n253. Souffront\
    \ Alcantara, M.A.; Nelson, E.J.; Shakya, K.; Edwards, C.; Roberts, W.; Krewson,\
    \ C.; Ames, D.P.; Jones, N.L.; Gutierrez, A.\nHydrologic Modeling as a Service\
    \ (HMaaS): A New Approach to Address Hydroinformatic Challenges in Developing\
    \ Countries.\nFront. Environ. Sci. 2019, 7, 158. [CrossRef]\n254. Kraft, B.; Jung,\
    \ M.; Körner, M.; Koirala, S.; Reichstein, M. Towards Hybrid Modeling of the Global\
    \ Hydrological Cycle. Hydrol.\nEarth Syst. Sci. Discuss. 2021, 26, 1579–1614.\
    \ [CrossRef]\n255. Gomes, V.C.F.; Queiroz, G.R.; Ferreira, K.R. An Overview of\
    \ Platforms for Big Earth Observation Data Management and Analysis.\nRemote Sens.\
    \ 2020, 12, 1253. [CrossRef]\n256. Sperna Weiland, F.C.; Vrugt, J.A.; van Beek,\
    \ R.P.H.; Weerts, A.H.; Bierkens, M.F.P. Signiﬁcant Uncertainty in Global Scale\n\
    Hydrological Modeling from Precipitation Data Errors. J. Hydrol. 2015, 529, 1095–1115.\
    \ [CrossRef]\n257. Marthews, T.R.; Blyth, E.M.; Martínez-de la Torre, A.; Veldkamp,\
    \ T.I.E. A Global-Scale Evaluation of Extreme Event Uncertainty\nin the EartH2Observe\
    \ Project. Hydrol. Earth Syst. Sci. 2020, 24, 75–92. [CrossRef]\nWater 2022, 14,\
    \ 2211\n38 of 38\n258. Pagano, T.C.; Pappenberger, F.; Wood, A.W.; Ramos, M.-H.;\
    \ Persson, A.; Anderson, B. Automation and Human Expertise in\nOperational River\
    \ Forecasting. WIREs Water 2016, 3, 692–705. [CrossRef]\n259. Mulligan, M. WaterWorld:\
    \ A Self-Parameterising, Physically Based Model for Application in Data-Poor but\
    \ Problem-Rich\nEnvironments Globally. Hydrol. Res. 2012, 44, 748–769. [CrossRef]\n\
    260. Jiang, Y.; Li, X.; Huang, C. Automatic Calibration a Hydrological Model Using\
    \ a Master–Slave Swarms Shufﬂing Evolution\nAlgorithm Based on Self-Adaptive Particle\
    \ Swarm Optimization. Expert Syst. Appl. 2013, 40, 752–757. [CrossRef]\n261. Nandi,\
    \ S.; Janga Reddy, M. Comparative Performance Evaluation of Self-Adaptive Differential\
    \ Evolution with GA, SCE and\nDE Algorithms for the Automatic Calibration of a\
    \ Computationally Intensive Distributed Hydrological Model. H2Open J. 2020,\n\
    3, 306–327. [CrossRef]\n262. Koch, P.; Golovidov, O.; Gardner, S.; Wujek, B.;\
    \ Grifﬁn, J.; Xu, Y. Autotune: A Derivative-Free Optimization Framework for\n\
    Hyperparameter Tuning. In Proceedings of the 24th ACM SIGKDD International Conference\
    \ on Knowledge Discovery & Data\nMining, London, UK, 19–23 August 2018; Association\
    \ for Computing Machinery: New York, NY, USA, 2018; pp. 443–452.\n263. Feurer,\
    \ M.; Klein, A.; Eggensperger, K.; Springenberg, J.T.; Blum, M.; Hutter, F. Auto-Sklearn:\
    \ Efﬁcient and Robust Automated\nMachine Learning. In Automated Machine Learning:\
    \ Methods, Systems, Challenges; Hutter, F., Kotthoff, L., Vanschoren, J., Eds.;\
    \ The\nSpringer Series on Challenges in Machine Learning; Springer International\
    \ Publishing: Cham, Switzerland, 2019; pp. 113–134,\nISBN 978-3-030-05318-5.\n\
    264. Zürn, J.; Burgard, W.; Valada, A. Self-Supervised Visual Terrain Classiﬁcation\
    \ From Unsupervised Acoustic Feature Learning.\nIEEE Trans. Robot. 2021, 37, 466–481.\
    \ [CrossRef]\n265. Wittscher, L.; Diers, J.; Pigorsch, C. Improving Image Classiﬁcation\
    \ Robustness Using Self-Supervision. Stat 2022, 11, e455.\n[CrossRef]\n266. Pintelas,\
    \ E.; Livieris, I.E.; Pintelas, P.E. A Convolutional Autoencoder Topology for\
    \ Classiﬁcation in High-Dimensional Noisy\nImage Datasets. Sensors 2021, 21, 7731.\
    \ [CrossRef]\n267. Feng, J.; Feng, X.; Chen, J.; Cao, X.; Zhang, X.; Jiao, L.;\
    \ Yu, T. Generative Adversarial Networks Based on Collaborative Learning\nand\
    \ Attention Mechanism for Hyperspectral Image Classiﬁcation. Remote Sens. 2020,\
    \ 12, 1149. [CrossRef]\n268. He, Z.; He, D.; Mei, X.; Hu, S. Wetland Classiﬁcation\
    \ Based on a New Efﬁcient Generative Adversarial Network and Jilin-1\nSatellite\
    \ Image. Remote Sens. 2019, 11, 2455. [CrossRef]\n269. Hofmann, J.; Schüttrumpf,\
    \ H. FloodGAN: Using Deep Adversarial Learning to Predict Pluvial Flooding in\
    \ Real Time. Water 2021,\n13, 2255. [CrossRef]\n270. Dong, H.; Ma, W.; Wu, Y.;\
    \ Zhang, J.; Jiao, L. Self-Supervised Representation Learning for Remote Sensing\
    \ Image Change Detection\nBased on Temporal Prediction. Remote Sens. 2020, 12,\
    \ 1868. [CrossRef]\n271. Xu, Z.; Du, J.; Wang, J.; Jiang, C.; Ren, Y. Satellite\
    \ Image Prediction Relying on GAN and LSTM Neural Networks. In Proceedings\nof\
    \ the ICC 2019—2019 IEEE International Conference on Communications (ICC), Shanghai,\
    \ China, 20–24 May 2019; pp. 1–6.\n272. Kao, I.-F.; Liou, J.-Y.; Lee, M.-H.; Chang,\
    \ F.-J. Fusing Stacked Autoencoder and Long Short-Term Memory for Regional Multistep-\n\
    Ahead Flood Inundation Forecasts. J. Hydrol. 2021, 598, 126371. [CrossRef]\n273.\
    \ Kao, I.-F.; Zhou, Y.; Chang, L.-C.; Chang, F.-J. Exploring a Long Short-Term\
    \ Memory Based Encoder-Decoder Framework for\nMulti-Step-Ahead Flood Forecasting.\
    \ J. Hydrol. 2020, 583, 124631. [CrossRef]\n274. Li, X.; Song, G.; Du, Z. Hybrid\
    \ Model of Generative Adversarial Network and Takagi-Sugeno for Multidimensional\
    \ Incomplete\nHydrological Big Data Prediction. Concurr. Comput. Pract. Exp. 2021,\
    \ 33, e5713. [CrossRef]\n275. Mazher, A. Visualization Framework for High-Dimensional\
    \ Spatio-Temporal Hydrological Gridded Datasets Using Machine-\nLearning Techniques.\
    \ Water 2020, 12, 590. [CrossRef]\n276. Van Oosterom, P.; Stoter, J. 5D Data Modelling:\
    \ Full Integration of 2D/3D Space, Time and Scale Dimensions. In Proceedings of\n\
    the International Conference on Geographic Information Science, Zurich, Switzerland,\
    \ 14–17 September 2010; Fabrikant, S.I.,\nReichenbacher, T., van Kreveld, M.,\
    \ Schlieder, C., Eds.; Springer: Berlin/Heidelberg, Germany, 2010; pp. 310–324.\n\
    277. Bauer, P.; Stevens, B.; Hazeleger, W. A Digital Twin of Earth for the Green\
    \ Transition. Nat. Clim. Chang. 2021, 11, 80–83. [CrossRef]\n278. Bartos, M.;\
    \ Kerkez, B. Pipedream: An Interactive Digital Twin Model for Natural and Urban\
    \ Drainage Systems. Environ. Model.\nSoftw. 2021, 144, 105120. [CrossRef]\n279.\
    \ Veenendaal, B.; Brovelli, M.A.; Li, S. Review of Web Mapping: Eras, Trends and\
    \ Directions. ISPRS Int. J. Geo-Inf. 2017, 6, 317.\n[CrossRef]\n"
  inline_citation: '>'
  journal: Water
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4441/14/14/2211/pdf?version=1657785403
  publication_year: 2022
  relevance_score: 0.9999687417764547
  relevance_score1: 0
  relevance_score2: 0
  title: 'Geospatial Artificial Intelligence (GeoAI) in the Integrated Hydrological
    and Fluvial Systems Modeling: Review of Current Applications and Trends'
  verbatim_quote1: GeoAI has shown advantages in non-linear modeling, computational
    efﬁciency, integration of multiple data sources, high accurate prediction capability,
    and the unraveling of new hydrological patterns and processes.
  verbatim_quote2: A major drawback in most GeoAI models is the adequate model setting
    and low physical interpretability, explainability, and model generalization.
  verbatim_quote3: '>'
- DOI: https://doi.org/10.14710/kapal.v18i2.37180
  analysis: "The paper focuses on the integration of the Internet of Things (IoT)\
    \ and data transmission protocols with an automated irrigation management system,\
    \ and how this contributes to addressing the efficient and effective use of water\
    \ resources in agriculture.\n\nThe paper provides novel and valuable information\
    \ on the types of data most applicable to irrigation management and their typical\
    \ sources. It also presents a review of the current state-of-the-art in end-to-end\
    \ automated irrigation management systems that integrate IoT and machine learning\
    \ technologies. Furthermore, the authors propose solutions and best practices\
    \ based on the analysis of case studies and real-world implementations, providing\
    \ guidance for future research and innovation efforts.\n\nThe key issue of types\
    \ of data most applicable to irrigation management and their typical sources is\
    \ addressed through an examination of the initial stages of the automated irrigation\
    \ management pipeline, covering data collection, edge and fog computing, real-time\
    \ data transmission protocols and technologies, and the challenges and solutions\
    \ associated with real-time data transmission. The paper proposes the use of sensors\
    \ and microcontrollers integrated with the internet to obtain accurate and real-time\
    \ data, as well as the implementation of ultrasonic level sensors and flow sensors\
    \ to measure the volume of fuel available in the tank, the volume of fuel discharged,\
    \ the flow rate of fuel, and the location of the system.\n\nThe relevance to the\
    \ outline point is high, as the paper provides insights into the specific data\
    \ types that are most useful for irrigation management, and how these data can\
    \ be collected and transmitted using IoT and other technologies. The paper also\
    \ discusses the challenges and solutions associated with real-time data transmission,\
    \ which is a critical aspect of automated irrigation management systems.\n\n**Relevant\
    \ verbatim quotes**: \n\n1. \"The purpose and intention of this systematic review\
    \ on automated systems for real-time irrigation management can be interpreted\
    \ as follows:\n    * Addressing the global food challenge: The review aims to\
    \ explore how automated, real-time irrigation management systems can contribute\
    \ to the efficient use of water resources and enhance agricultural productivity\
    \ to meet the growing demand for food.\n    * Evaluating the current state and\
    \ future potential: The primary objective is to critically assess the current\
    \ state of end-to-end automated irrigation management systems that integrate IoT\
    \ and machine learning technologies. The review also seeks to identify gaps and\
    \ propose solutions for seamless integration across the automated irrigation management\
    \ system to achieve fully autonomous, scalable irrigation management.\n    * Examining\
    \ automation across the entire pipeline: The review intends to systematically\
    \ analyze the automation of each component of the irrigation management pipeline,\
    \ from data collection and transmission to processing, analysis, decision-making,\
    \ and automated action. It aims to investigate the effectiveness and efficiency\
    \ of integrated end-to-end automated irrigation systems.\n    * Highlighting the\
    \ role of interoperability and standardization: The review seeks to emphasize\
    \ the importance of interoperability and standardization in enabling the integration\
    \ of components within the automated irrigation management pipeline. It aims to\
    \ identify existing and emerging standards and their applicability to real-time\
    \ irrigation management systems.\n    * Identifying challenges and proposing solutions:\
    \ The review intends to uncover the challenges associated with implementing real-time,\
    \ automated irrigation systems, such as data quality, scalability, reliability,\
    \ and security. It aims to propose solutions and best practices based on the analysis\
    \ of case studies and real-world implementations.\n    * Guiding future research\
    \ and innovation: By identifying research gaps and proposing new research questions\
    \ and hypotheses, the review aims to provide a roadmap for advancing the field\
    \ of real-time, automated irrigation management. It seeks to encourage collaborative\
    \ research efforts across disciplines to address the complex challenges of automated\
    \ irrigation systems.\"\n\n2. \"This research, the design of models and experiments\
    \ related to a monitoring system for fuel consumption was carried out using sensors\
    \ and microcontrollers integrated with the internet to obtain accurate and real-time\
    \ data.\"\n\n3. \"Based on the results of measurements using an ultrasonic level\
    \ sensor, it is known that the measurement results are quite accurate with a deviation\
    \ of ± 0.5 cm. Meanwhile, the measurement results by the flow sensor are less\
    \ accurate because the fuel flow only relies on the force of gravity.\"\n\nThe\
    \ limitations of the paper for fully addressing the outline point and review include:\
    \ \n\n- The paper focuses primarily on the integration of IoT and data transmission\
    \ protocols with automated irrigation management systems and does not delve deeply\
    \ into the specific types of data that are most applicable to irrigation management.\n\
    \n- The paper does not provide a comprehensive analysis of the challenges and\
    \ solutions associated with real-time data transmission in automated irrigation\
    \ management systems.\n\n- The paper does not provide a thorough review of the\
    \ current state-of-the-art in end-to-end automated irrigation management systems\
    \ that integrate IoT and machine learning technologies.\n\nThe paper does not\
    \ provide any recommendations for future research and innovation in the field\
    \ of real-time, automated irrigation management.\n\nThe paper's findings are based\
    \ on a limited number of case studies and real-world implementations, which may\
    \ not be representative of the broader field of automated irrigation management.\n\
    \nThe paper does not provide a clear roadmap for advancing the field of real-time,\
    \ automated irrigation management.\n\nThe overall relevance score for this paper\
    \ is 0.8 out of 1.0, indicating a highly relevant contribution to the outline\
    \ point and review. The paper provides novel and valuable information on the types\
    \ of data most applicable to irrigation management and their typical sources,\
    \ and discusses the challenges and solutions associated with real-time data transmission\
    \ in automated irrigation management systems. However, the paper does not provide\
    \ a comprehensive analysis of the current state-of-the-art in end-to-end automated\
    \ irrigation management systems that integrate IoT and machine learning technologies,\
    \ and does not provide a clear roadmap for advancing the field of real-time, automated\
    \ irrigation management."
  authors:
  - Adella Winanda Hapsari
  - Hari Prastowo
  - Trika Pitana
  citation_count: 1
  full_citation:
    author: Adella Winanda Hapsari, Hari Prastowo, Trika Pitana
    issue: '2'
    journal_title: Kapal:Jurnal Ilmu Pengetahuan dan Teknologi Kelautan
    pages: 88-100
    title: 'Real-Time Fuel Consumption Monitoring System Integrated With Internet
      Of Things

      (IOT)'
    url: http://ejournal.undip.ac.id/index.php/kapal
    volume: '18'
    year: 2021
  full_text: ">\n \n \n \nKapal:Jurnal Ilmu Pengetahuan danTeknologi Kelautan, 18\
    \ (2) (2021):88-100\n88\nKapal: Jurnal Ilmu Pengetahuan dan Teknologi Kelautan\n\
    (Kapal:Journal of Marine Science and Technology)\nP\njournal homepage : http://ejournal.undip.ac.id/index.php/kapal\n\
    2301-9069 (e)\n1829-8370 (p)\nReal-Time Fuel Consumption Monitoring System Integrated\
    \ With Internet Of Things\n(IOT)\nt)\nCheck for\nupdates\nAdella Winanda Hapsari15*5,\
    \ Hari Prastowo1), Trika Pitana11\n''Department of Marine Engineering, Institut\
    \ Teknologi Sepuluh Nopember, Surabaya, Indonesia\n*> Corresponding Author : adellawhapsari99@gmail.com\n\
    Article Info\nAbstract\nKeywords:\nFuel Consumption Monitoring;\nInternet of Things;\n\
    Microcontroller; Real-Time\nFuel is an important aspect in the operation of ships\
    \ that require high costs. The high cost of fuel is not\nfollowed by an automatic\
    \ fuel monitoring process. By not using the fuel consumption monitoring\nmethod\
    \ that works automatically, the shipping management does not know for sure the\
    \ ship's fuel\nconsumption is in accordance with the shipping mileage, thus triggering\
    \ fraud committed by the ship's\ncrew against the ship's fuel. Fuel consumption\
    \ monitoring is carried out primarily to identify\nopportunities to improve energy\
    \ efficiency and reduce costs. By following technological developments,\nInternet\
    \ of Things (IoT) technology has begun to be applied in various industrial fields\
    \ because it can\ntransmit data in real-time via the internet network without\
    \ human-to-human or human-to-computer\ninteraction. In this research, the design\
    \ of models and experiments related to a monitoring system for\nfuel consumption\
    \ was carried out using sensors and microcontrollers integrated with the internet\
    \ to\nobtain accurate and real-time data. The test results show that the volume\
    \ of fuel available in the tank,\nthe volume of fuel discharged, the flow rate\
    \ of fuel, and the location of the system can be known by the\nuser in real-time\
    \ via the IoT website. Based on the results of measurements using an ultrasonic\
    \ level\nsensor, it is known that the measurement results are quite accurate with\
    \ a deviation of ± 0.5 cm.\nMeanwhile, the measurement results by the flow sensor\
    \ are less accurate because the fuel flow only\nrelies on the force of gravity.\n\
    Article history:\nReceived: 09/03/2021\nLast revised: 20/05/2021\nAccepted: 21/05/2021\n\
    Available online: 22/05/2021\nPublished: 30/06/2021\nDOI:\nhttps://doi.org/!0.14710/kapal.\n\
    vl8i2.37180\nCopyright © 2021 KAPAL : Jurnal Ilmu Pengetahuan dan Teknologi Kelautan.\
    \ This is an open access\narticle under the CC BY-SA license (https://creativecommons.Org/licenses/by-sa/4.0/).\n\
    1.\nIntroduction\nShips are a common mode of transportation used to transport\
    \ passengers and cargo. In order to operate the engine, the\nship needs fuel.\
    \ Fuel became an important aspect of ship operations. The cost for purchasing\
    \ fuel is quite high, especially for\nvoyage costs, which become the most expensive\
    \ component. Fuel consumes 66% of the voyage cost and 47% of the total cost\n\
    of running ships [1]. This is also influenced by the relatively volatile global\
    \ fuel prices.\nThe high price of bunker fuel is not followed by a proper fuel\
    \ monitoring process.The absence of a method of monitoring\nfuel consumption automatically\
    \ results in shipping management not knowing for sure the ship's fuel consumption\
    \ is in\naccordance with the voyage distance, so this has triggered fraud committed\
    \ by the ship's crew against the ship's fuel, such\nas selling it illegally for\
    \ personal gain. One of the common methods of stealing ship fuel is by falsifying\
    \ documents, in which\ncaptains overstate how much fuel their ship is using, then\
    \ sell the excess. Commonly used methods used in fuel consumption\nmonitoring\
    \ are Bunker Delivery Notes, tank sounding, fuel flow meters, and direct emissions\
    \ monitoring.\nFuel consumption monitoring is carried out for several reasons,\
    \ mainly to identify opportunities to increase energy\nefficiency and reduce costs.\
    \ Monitoring data is used for internal reasons, such as benchmarking and target\
    \ setting purposes\nand satisfying sustainability-related reporting requirements\
    \ [2],\nAlong with technological developments in the era of the 4.0 industrial\
    \ revolution, the term Internet of Things (IoT)\nemerged. IoT is a concept in\
    \ which an object has the ability to transfer data over a network without the\
    \ need for human-to-\nhuman or human-computer interaction [3]. Currently, IoT\
    \ technology has been applied in various fields, such as industry,\ntransportation,\
    \ and home use. In the field of transportation, especially on ships, IoT began\
    \ to be used and developed. IoT\ntechnology is helpful for monitoring ship conditions\
    \ in real-time, one of which is to monitor fuel consumption. Fuel\nconsumption\
    \ monitoring using internet-based technology has begun to develop.\nResearch on\
    \ fuel consumption monitoring has been widely carried out. This is related to\
    \ the regulations issued by the\nInternational Maritime Organization (IMO), which\
    \ focuses on greenhouse gas (GHG) emissions on ships. Capezza et al. [4]\nconducted\
    \ research related to ship fuel consumption monitoring and fault detection related\
    \ to C02 emissions on the Grimaldi\n \n \n \nKapal:Jurnal Ilmu Pengetahuan danTeknologi\
    \ Kelautan, 18 (2) (2021):88-100\n89\nGroup's Ro-Ro Pax cruise ship using a statistical\
    \ approach method by utilizing navigation data obtained from the multi¬\nsensor\
    \ system installed on the ship.The method used in this study has been shown to\
    \ be capable of supporting fault detection\nand verifying the C02 savings achieved\
    \ after energy efficiency initiatives. However, the statistical method used is\
    \ difficult to\napply to shipping companies due to unpreparedness in using the\
    \ automated system used for statistical analysis of emission\ndata to verify coherent\
    \ C02 emissions with ship characteristics.\nHakimelahi et al. [5] analyze the\
    \ impact of the fuel consumption patterns on the estimated travel needs. The method\n\
    used is to evaluate and calibrate travel demand estimation using software and\
    \ its relationship with fuel consumption. The\nstudy's findings show that the\
    \ use of fuel is closely linked to the trip generation process by exogenous and\
    \ endogenous\nvariables.\nWijaya et al.[6] conduct studies on fuel consumption\
    \ monitoring and predict gas emissions based on ship performance\nusing Automatic\
    \ Identification System (AISITS) data. The method used in this research is to\
    \ perform calculations using the\nempirical formula, namely the Holtrop Method\
    \ and the Stawave Method. For calculating basic resistance, the Holtrop method\n\
    is used. Wind resistance, waves, draft changes, and water properties are all calculated\
    \ using the Stawave method. These\ncalculations are made using the PHP scripting\
    \ language. This study could serve as the foundation for creating a software\n\
    interface that generates real-time monitoring data on fuel, EEOI, and emissions\
    \ on each ship. With the relationship between\nfuel consumption and emissions\
    \ emitted, fuel consumption monitoring is critical because it helps calculate\
    \ emission\nestimates by considering engine and fuel types [7],\nMany research\
    \ and developments are also carried out in technology, such as the Internet of\
    \ Things (IoT). IoT technology\naims to simplify a process in various fields,\
    \ ensure system efficiency, and improve the quality of life, becoming one of the\n\
    main pillars in the era of industrial digitization [8], IoT technology has begun\
    \ to be developed and used in various fields, such\nas in industry [9], the concept\
    \ of smart cities [10], gadgets, buildings or smart homes, power management [11],\
    \ agriculture\n[12], waste management [13], healthcare [14], and transportation\
    \ [15],\nIn the industrial sector, IoT technology is used to increase the efficiency\
    \ of the production process and the efficiency of\ncommunication and networking\
    \ between operators and machines to increase the productivity of these companies\
    \ in the\nmarket by developing, designing, and integrating various sensors used\
    \ in industrial applications [16], In smart cities, IoT\ntechnologies will allow\
    \ the use of various devices, improving the quality of life as well as the efficiency\
    \ of various daily\nservices such as transportation, security, smart metering,\
    \ smart energy systems, smart water management, and so on [17],\nImplementing\
    \ IoT technologies in agriculture will undoubtedly aid in meeting adequate food\
    \ demand and improving the\noverall efficiency of agricultural production processes.\
    \ Various useful data about crops could be obtained and used for yield\nmonitoring\
    \ and early detection of possible diseases that could drastically reduce crop\
    \ yields. Soil and nutrient monitoring\nwill help rationalize agricultural production\
    \ processes and save water, which is valuable in certain geographical areas and\n\
    could be used by smart irrigation systems [18], In waste management, IoT has been\
    \ developed and implemented a lot. The\ndeveloped solutions are primarily focused\
    \ on smart waste bin monitoring [19], which includes bin filling level detection,\n\
    waste temperature and fire detection, bin vibration occurrence and bin tilt, presence\
    \ of waste operators, waste humidity, bin\nGPS location, and so on. In general,\
    \ IoT devices can effectively support smart waste management systems. In the healthcare\n\
    system, IoT has implemented, and the concept of e-health has emerged.\nIoT funding\
    \ for patient health data collection may be used to improve the service quality\
    \ of healthcare systems. Smart\nmedical devices have a lot of potential for various\
    \ uses, like tracking various critical human functions, including heart rate,\n\
    skin temperature, activity monitoring, and so on [20], The most important task\
    \ of IoT technologies in smart grids in smart\npower management is to save energy\
    \ through efficient distribution [21], Many have begun to develop and apply IoT\n\
    technology in transportation in response to the extremely rapid growth of transportation\
    \ infrastructure. IoT technology is\ncurrently used in the definition of \"internet\
    \ of vehicles\". The design of smart vehicles is the most important IoT application\n\
    field [22]. The use and optimization of various internal functions in cars supported\
    \ by IoT technology were considered in the\nsmart car concept. Tire pressure,\
    \ refuelling, early detection of possible failures, routine maintenance measures,\
    \ and other\ndata are collected using IoT. Not only in cars, but IoT technology\
    \ is also widely developed and implemented in other modes\nof transportation,\
    \ such as trucks [23], buses [24], trains [25], and ships [26], In general, IoT\
    \ technology in the mode of\ntransportation is used to monitor fuel consumption\
    \ and the vehicle's location, including ships. The use of IoT on ships is very\n\
    much needed, especially in monitoring fuel consumption so that the estimated emission\
    \ value can be known.\nIn this research, experiments will be carried out related\
    \ to a fuel consumption monitoring system that is integrated\nwith the internet\
    \ using level sensors, flow sensors, and microcontrollers. By doing this research,\
    \ the fuel consumption\nmonitoring system integrated with IoT is obtained to get\
    \ accurate and real-time results to estimate the cost and correct\nmaintenance\
    \ planning.\n2.\nMethods\n2.1. System Design\nThe design of the fuel consumption\
    \ monitoring system will consist of two tanks. The flow sensor will be installed\
    \ at the\noutput of Tank 2. In the tank, several levels of ultrasonic sensors\
    \ will be installed to measure the availability of fuel. The\nsystem block diagram\
    \ can be seen in Figure 1.\n \n \nKapal:Jurnal Ilmu Pengetahuan danTeknologi Kelautan,\
    \ 18 (2) (2021):88-100\n90\nRefuel\nLevel Sensor\nLevel Sensor\nTank 2\nTank 1\n\
    Flow l\nSensor;\nOut\n<-\n<ÿ\nFigure 1. System Block Diagram\nThe design of the\
    \ fuel consumption monitoring system consists of two tanks of different sizes.\
    \ The inner dimensions\nfor Tank 1 are length: 29 cm, width: 19 cm, and height:\
    \ 30 cm. The inner dimensions for Tank 2 are length: 19 cm, width: 19\ncm, and\
    \ height: 30 cm, as shown in Table 1.\nTable 1. Inner Dimensions of Each Tank\n\
    Dimension\nTank 1\nTank 2\nLength\nWidth\nHeight\n29 cm\n19 cm\n30 cm\n19 cm\n\
    19 cm\n30 cm\nThe tank model is made of acrylic material with a thickness of 0.5\
    \ cm so that the results of the tank design that have\nbeen assembled can be seen\
    \ in Figure 2a and 2b.\nn.\nI,H\n/\n(a)\n(b)\nFigure 2. (a) Tank 1; (b) Tank 2\n\
    2.2. Microcontroller Concept on The System\nThe microcontroller concept on the\
    \ system that has been designed is a flow sensor, level sensor, temperature and\n\
    humidity sensor, and GPS will be connected to the microcontroller in the system\
    \ to program the sensor and get the data\nobtained on each sensor. The output\
    \ data will be displayed on the LCD and will also be sent using the Wi-Fi module\
    \ to the\nIoT Cloud, and the data can be accessed by users via the IoT website,\
    \ as shown in Figure 3.\n \n \n”\n–\n–\n–\n\U0001D449 = \U0001D434ℎ \n \nKapal:Jurnal\
    \ Ilmu Pengetahuan danTeknologi Kelautan, 18 (2) (2021):88-100\n91\nProgram Setting\n\
    Temperature and\nHumidity Sensor\nLevel Sensor\nMicrocontroller\nWi-Fi Module\n\
    loT Cloud\nloT Website\nUser\nFlow Sensor\nGPS\nI\nLCD\nFigure 3. Microcontroller\
    \ Concept on The System\n2.3. Electronic and Microcontroller Specification\nFlow\
    \ Sensor Specification\nFlow sensors are used to measure the flow of the fuel\
    \ that is discharged from the tank. The specifications of YF-S201\nflow sensor\
    \ are\ninch size, the working voltage is 5 to 18V in DC (Direct Current), the\
    \ maximum current is 15mA, the\nworking flow rate is 1 to 30 liter/minute, the\
    \ accuracy is around 10%, working temperature range is -25 to 80 QC, and the\n\
    maximum pressure is 2.0 MPa, it can be seen in Table 2. The reason for choosing\
    \ this type of flow sensor is because flow\nsensors can be used to measure flow\
    \ that only relies on the force of gravity so that it does not require high pressure\
    \ for the\nfluid to move the measuring component on the flow sensor.\nTable 2.\
    \ Flow Sensor Specification\nFlow Sensor (YF-S201)\n1/2\nConnection\nWorking Voltage\
    \ Max Current\nMax Current\nWorking Flow Rate\nWorking Temperature Range\nAccuracy\n\
    Max Pressure\n5\n18V DC\n15mA\n1\n30 liter/minute\n-25\n80 QC\n±10%\n2.0 MPa\n\
    Level Sensor Specification\nUltrasonic level sensors are used to measure the distance\
    \ of an object by utilizing ultrasonic waves. In this study, the\nultrasonic sensor\
    \ was used to measure the fluid level in the tank to obtain the volume using the\
    \ formula in Eq. (1). The\nspecifications of HC-SR04 level sensor are 5V in DC\
    \ (Direct Current), the working current is 15 mA, working frequency is 40\nHz,\
    \ working temperature range is -15 QC to 70 QC, measuring range is from 2 cm to\
    \ 400 cm with measuring an angle is 15\ndegree, as shown in Table 3. The reason\
    \ for choosing this type of level sensor is that the ultrasonic level sensor can\
    \ read with\nthe shortest minimum distance compared to other types of level sensors,\
    \ which is 2 cm.\n(1)\nwhere V is the volume of the fuel. A surface area of the\
    \ fuel, h fluid depth in the tank.\nTable 3. Level Sensor Specification\nLevel\
    \ Sensor (HC-SR04)\nWorking Voltage\nWorking Current\nWorking Frequency\nWorking\
    \ Temperature Range\nMax Range\nMin Range\nMeasuring Angle_\nDC 5V\n15 mA\n40\
    \ Hz\n-15 QC to 70 QC\n400 cm\n2 cm\n15 degree\n \n\n–\n–\n–\n\nKapal:Jurnal\
    \ Ilmu Pengetahuan danTeknologi Kelautan, 18 (2) (2021):88-100\n92\nMicrocontroller\
    \ Specification\nThe microcontroller used is the Arduino MEGA which functions\
    \ as a microcontroller for the fuel consumption\nmonitoring system. The Arduino\
    \ MEGA will receive input from connected sensors and the GPS module to send the\
    \ fuel\nvolume, flow, and location data to the server. The specification of Arduino\
    \ MEGA 2560 are the microcontroller board based\non the ATmega2560, the operating\
    \ voltage is 5V, the recommended input voltage is 7 to 12V, and for the limits\
    \ input voltage\nis 6 to 20V, has 54 digital Input/Output pins (of which 15 can\
    \ be used as PWM outputs), 16 analogue inputs, DC per I/O pin\nis 40 mA, DC for\
    \ 3.3V pin is 50 mA, the flash memory is 256 KB of which 8 KB used by bootloader,\
    \ the SRAM 8 KB, EEPROM\nis 4 KB, and clock speed is 16 MHz, as shown in Table\
    \ 4. The reason for choosing this type of microcontroller is that the\nArduino\
    \ MEGA has the most data pins in the Arduino series, 54 digital I/O pins, and\
    \ 16 analogue inputs microcontroller is\nsuitable for complex projects.\nTable\
    \ 4. Microcontroller Specification\nLevel Sensor (HC-SR04)\nMicrocontroller\n\
    DC 5V\nOperating Voltage\nInput Voltage (recommended)\nInput Voltage (limits)\n\
    Digital I/O Pins\nAnalog Input Pins\nDC Current per I/O Pin\nDC Current for 3.3V\
    \ Pin\nFlash Memory\n5V\n7-12V\n6-20V\n54 (of which 15 provide PWM output)\n16\n\
    40 mA\n50 mA\n256 KB of which 8 KB used by\nbootloader\nSRAM\nEEPROM\nClock Speed\n\
    8 KB\n4 KB\n16 MHz\nGPS Specification\nGPS (Global Positioning System) works to\
    \ obtain latitude and longitude coordinate data so that the position of the\n\
    system can be known. The specifications of Ublox NEO-6M GPS is 50 channels GPS\
    \ LI frequency, C/A code, the input supply\nvoltage is 2.7 to 6V in DC current,\
    \ the main chip is NEO-6, the position accuracy is 2 m, and the operating temperature\
    \ of the\ndevice is from -24 to 84°C, it can be seen in Table 5. The reason for\
    \ choosing this type of GPS is because Ublox NEO-6M has\nTime to First Fix (TIFF)\
    \ up to 27 seconds, and it can receive as many as 50 satellite signals.\nTable\
    \ 5. GPS Specification\nGPS (Ublox NEO-6M)\nReceiver Type\nInput Supply Voltage\n\
    Main Chip\nPosition Accuracy\nOperating Temperature\n50 Channels GPS LI frequency,\
    \ C/A Code\n2.7-6V DC\nNEO-6\n2 m\n-24 to 84 C\nWi-Fi Module Specification\nThe\
    \ Wi-Fi module used is the ESP8266 which is used to transmit the data that has\
    \ been obtained to the Webserver. The\nspecifications of ESP8266 Wi-Fi Module\
    \ are the maximum operating voltage of the module is 3.6V in DC, the flash memory\n\
    is 512 KB to 1 MB, the power supply is from 2.5V to 3.6V in DC, and the recommended\
    \ power supply for this module is 3.3V,\nthe type of networking is Wi-Fi, and\
    \ the operating temperature is -40 to 125°C. The detailed specification of ESP\
    \ 8266 can be\nseen in Table 6.The reason for choosing this device is that it\
    \ can be connected and programmed with a microcontroller easily\nto connect to\
    \ an internet connection to transmit data.\nTable 6. Wi-Fi Module Specification\n\
    Wi-Fi Module (ESP 8266)\nOperating Voltage\nFlash Memory\nClock Speed\nPower Supply\n\
    Networking\nOperating Temperature\n3.6V DC (max)\n512 KB\n1MB\n80 MHz\n160 MHz\n\
    2.5\n3.6V DC, 3.3V DC (recommended)\nW-Fi\n-40- 125 C\nThe wiring diagram of the\
    \ microcontroller and sensors used for the fuel consumption monitoring system\
    \ integrated\nwith the Internet of Things (IoT) is shown in Figure 4, consisting\
    \ of Arduino MEGA, Level Sensor (HC-SR04), Flow Sensor (YF-\nS201), GPS (Ublox\
    \ NEO-6M), Temperature and Humidity Sensor (DHT22), Wi-Fi Module (ESP8266), and\
    \ LCD.\n \n \n \nKapal:Jurnal Ilmu Pengetahuan danTeknologi Kelautan, 18 (2) (2021):88-100\n\
    93\nf\nsssmmmmwmmm\n=\nrj\nFigure 4. Wiring Diagram of The System\n2.4. Fuel Consumption\
    \ Monitoring System Model\nAfter the system is designed and the components are\
    \ selected, these components are assembled into a system model,\nas shown in Figure\
    \ 5 and Figure 6, that can be used by programming the microcontroller using Arduino\
    \ IDE so that the sensors\nused can function and the system created can work properly.\n\
    ~\nm\n?\n.\n*\nr .3 L '\n_\n..A.’\nFigure 5. Fuel Consumption Monitoring System\
    \ Model (Side View)\n—\n/\nl>\nU\nmW\nr\n%\\\n-\n~~J\nTank 2\nFigure 6. Fuel Consumption\
    \ Monitoring System Model (Top View)\n \n \n \n\U0001D449\U0001D453\U0001D462\U0001D452\
    \U0001D459 = \U0001D449\U0001D461\U0001D44E\U0001D45B\U0001D458 − ((\U0001D446\
    \U0001D434)0.001) \n \n\U0001D449\U0001D453\U0001D462\U0001D452\U0001D459\n\U0001D449\
    \U0001D461\U0001D44E\U0001D45B\U0001D458\n\U0001D446\n \n \n\U0001D436 = 331.4\
    \ + 0.606\U0001D447 + 0.0124\U0001D43B\nKapal:Jurnal Ilmu Pengetahuan danTeknologi\
    \ Kelautan, 18 (2) (2021):88-100\n94\n3.\nResults And Discussion\n3.1. How The\
    \ System Work\nThis system consists of two tanks connected to each other, as shown\
    \ in Figure 5. In each tank, several level sensor points\nare used to measure\
    \ the availability of fuel in the tank. Tank 1 showed 3 points of ultrasonic level\
    \ sensor, while in Tank 2\nthere are 2 points of ultrasonic level sensor because\
    \ Tank 2 is smaller than Tank 1, as shown in Figure 6. The difference in the\n\
    number of points of the ultrasonic level sensor in the two tanks is related to\
    \ the way the ultrasonic level sensor works, which\nby paying attention to the\
    \ distance between sensors, it is expected to avoid sound wave intervention which\
    \ results in the\nmeasurement by the ultrasonic level sensor being inaccurate.\
    \ At the output of the second tank, a flow sensor is installed,\nwhich is used\
    \ to measure the outflow. This system is also equipped with a GPS which is useful\
    \ for knowing the location of\nthe system. All these sensors are connected to\
    \ a microcontroller in the form of an Arduino Mega so that all sensors can be\n\
    programmed according to their functions as input data on the Arduino, as shown\
    \ in Figure 3.\nThe level sensor used is an ultrasonic level sensor that measures\
    \ the distance between the sensor and the object by\nreflecting sound waves and\
    \ receiving the reflected waves. The distance between the sensor and the object\
    \ is known. By\nknowing the distance between the sensor and the fuel, the volume\
    \ of the air space will be obtained. The average distance\nfrom the sensor to\
    \ the fuel surface will be multiplied by the surface area of the tank to find\
    \ the total tank capacity. So that\nthe full tank volume can be reduced by the\
    \ volume of air space so that the volume of fuel can be determined.\n(2)\nWhere\n\
    A surface area of the tank (see Eq. 2).\nSensor accuracy is affected by the speed\
    \ of sound. So to calibrate this sensor, it is necessary to know the ambient\n\
    temperature and humidity through the temperature and humidity sensors. In this\
    \ research, the flow sensor is used to\ndetermine the amount of flow released\
    \ from the tank. If the value issued by the flow sensor matches the volume reading\
    \ by\nthe sensor level and the actual volume issued, the flow sensor is said to\
    \ be valid.\nThus, the data sent by the system to the internet network via the\
    \ Wi-Fi module is data on the volume of fuel in Tank 1\nand Tank 2, the amount\
    \ of flow that discharged from the system, and the location of the system, which\
    \ is monitored via GPS,\nwhich users can then see via IoT website.\nis the volume\
    \ of the fuel.\nVolume of the tank capacity.\nAverage distance from the sensor\
    \ to fuel surface.\n3.2. Sensor Calibration\nAfter the assembly process, the sensors\
    \ used need to be calibrated because the sensor measurement results still have\
    \ a\ndifference when compared with the measurement results using standardized\
    \ tools. The calibration process is carried out so\nthat the readings from these\
    \ sensors are more precise.\nLevel Sensor Calibration\nAt the sensor level, distance\
    \ measurements are carried out using sound waves (ultrasonic). The ultrasonic\
    \ sensor works\nbased on the principle of sound wave reflection to detect the\
    \ presence of an object in front of it. The signal is emitted as a\nsound wave\
    \ by an ultrasonic transmitter with a frequency and time duration to measure the\
    \ distance of objects. Generally,\nthe frequency used is 40 kHz with a speed of\
    \ 340 m/s. When hitting an object, the signal will be reflected by the object.\
    \ After\nthe reflected wave reaches the receiver, the signal will be processed\
    \ to calculate the object's distance. The following is an\nexperimental process\
    \ of taking data from ultrasonic sensor measurements at a certain distance. The\
    \ level sensor\nmeasurement results are shown in Table 7. Based on the data obtained,\
    \ the actual fuel height is 20 cm, but the measurement\nresults with the level\
    \ sensor before calibrated have different results such as a result from Sensor\
    \ 1 is 20.76 cm, Sensor 2 is\n6.58 cm, and Sensor 3 is 1.12 cm.\nTable 7. Level\
    \ Sensor Measurement Before Calibration\nX (cm)\nDeviation\nSensor2\nDeviation\n\
    Sensor3\n(cm)\nDeviation\n(cm)\nSensorl\n(cm)\n(cm)\n(cm)\n(cm)\n20.00\n21.00\n\
    22.00\n23.00\n24.00\n20.00\n20.76\n21.33\n0.76\n6.58\n13.42\n1.12\n18.88\n0.33\n\
    21.30\n14.36\n16.27\n0.30\n7.67\n13.33\n21.9\n0.10\n7.64\n7.94\n14.06\n21.52\n\
    22.49\n23.65\n20.76\n0.51\n6.73\n1.48\n0.35\n17.22\n6.78\n17.53\n6.47\n0.76\n\
    6.58\n13.42\n1.12\n18.88\nBased on the data collection experiment results, there\
    \ is still a difference between the sensor measurement results and\nthe measurement\
    \ results using standardized tools, a ruler. Calibration is needed to get more\
    \ accurate results.\nThe calibration of the ultrasonic sensor is done by adding\
    \ the temperature and humidity factors to determine the speed\nof sound in the\
    \ working area of the sensor [27], The sensor is strongly influenced by the type\
    \ of medium and temperature\naccording to the principle of the speed of sound.\
    \ The ambient temperature and humidity factor must be considered for\nprecise\
    \ distance measurements. The formula for the speed of sound in air with temperature\
    \ and humidity factors is shown\ninEq. 3.\n(3)\n \n–\n–\n \nKapal:Jurnal Ilmu\
    \ Pengetahuan danTeknologi Kelautan,18 (2) (2021):88-100\nWhere C is the speed\
    \ of sound. 331.4 speed of sound at 0QC and humidity 0%. T temperature. H relative\
    \ humidity.\nIn this research, the medium is air with temperature and humidity,\
    \ which the DHT22 sensor will detect to obtain a\nvalue of the speed of sound\
    \ suitable for ambient. The specification of temperature and humidity sensor is\
    \ the operating\nvoltage is 3.5 to 5.5V in DC, the operating current while measuring\
    \ is 0.3 mA and 60 uA while standby, the output of the\nsensor is in the form\
    \ of serial data, the temperature range is -40 to 80“ Celcius, and the accuracy\
    \ is 0.5“ C and 1%, as shown\nin Table 8. Choosing this type of sensor is because\
    \ the level of accuracy in measuring temperature and humidity is enough to\nbe\
    \ used in this project.\n95\nTable 8. Temperature and Humidity Sensor Specification\n\
    Temperature and Humidity Sensor (DHT22)\nOperating Voltage\nOperating Current\n\
    Output\nTemperature Range\n-40\nResolution\nAccuracy\n3.5\n5.5V DC\n0.3 mA (measuring),\
    \ 60 uA (standby)\nSerial data\n80“ Celcius\nTemperature and Humidity both are\
    \ 16-bit\n0.5“ C and 1%\nSo that the measurement results by the ultrasonic sensor\
    \ after calibration is shown in Table 9, according to the data\nobtained, the\
    \ actual fuel height is 20 cm, the measurement results with the height sensor\
    \ after being calibrated have results\nthat are close to the actual fuel height\
    \ such as from Sensorl is 21.33 cm, Sensor2 is 20.07 cm, and Sensor3 is 21.26\
    \ cm.\nTable 9. Level Sensor Measurement After Calibration\nX (cm)\nDeviation\n\
    Sensor2\nDeviation\nSensor3\n(cm)\nDeviation\n(cm)\nSensorl\n(cm)\n(cm)\n(cm)\n\
    (cm)\n20.00\n21.00\n22.00\n23.00\n24.00\n21.33\n21.96\n22.58\n23.15\n24.34\n1.33\n\
    20.07\n21.89\n22.51\n23.15\n24.34\n0.07\n21.26\n21.89\n22.51\n23.15\n24.34\n1.26\n\
    0.96\n0.89\n0.89\n0.58\n0.51\n0.51\n0.15\n0.15\n0.15\n0.34\n0.34\n0.34\nFlow Sensor\
    \ Calibration\nThe flow sensor calibration process is done by measuring the volume\
    \ of flow out per unit time. This process is carried\nout using a measuring cup\
    \ and a stopwatch. So, it can be seen the time it takes to discharge one liter\
    \ of fuel. If there is a\ndifference in measurement between the flow sensor, level\
    \ sensor, and actual volume, adding a calibration factor to the flow\nsensor setting\
    \ program is necessary. Based on the experimental results in Table 10, it is shown\
    \ that the actual fuel volume\ndischarged from the tank for 60 seconds (1 minute)\
    \ is 550 mL, but the measurement result by the flow sensor is 448 mL.\nWhen the\
    \ actual volume of fuel discharged from the tank is 750 mL, the time required\
    \ is 83 seconds, while the measurement\nresult by the flow sensor is still 448\
    \ mL.\nTable 10. Flow Sensor Measurement Result\nActual Volume (mL)\nFlow Sensor\
    \ (mL)\nTime (second)\n60\n550\n448\n83\n750\n448\n3.3. System Data Retrieval\
    \ and Analysis\nData retrieval is done by operating a monitoring system model.\
    \ Data is obtained in the system running, fuel volume in\nboth tanks, the volume\
    \ of discharged fuel, and flow rate. Based on the data retrieved, as shown in\
    \ Table 10, it is known that\nthere is a delay in the measurement time on each\
    \ sensor, as well as in the subsequent data collection. The time delay that\n\
    occurs between the initial data and subsequent data is around 1-2 seconds. That\
    \ is useful for stabilizing the performance of\nthe temperature and humidity sensors\
    \ which function to calibrate the ultrasonic level sensor. The sensor level measurement\n\
    results indicate the tank's suitability in the tank with manual measurement. From\
    \ Table 11, it can be seen that from the\nvolume measurement results, there is\
    \ a fluctuation in the measurement results. That occurs due to movement in the\
    \ tank\nand causes the fuel in the tank to become dynamic. Besides that, the sensor\
    \ level measurement is still quite accurate even\nthough it has a deviation. From\
    \ the test results, can be seen in Table 9, the deviation occurs regularly at\
    \ ±0.5 cm. So that the\ndeviation value cannot be a percentage because the farther\
    \ the distance between the sensor and the fuel surface, with the\ndeviation mentioned\
    \ before, the error will not be significant, and the distance measurement by the\
    \ sensor is more accurate.\nKapal:Jurnal Ilmu Pengetahuan danTeknologi Kelautan,\
    \ 18 (2) (2021):88-100 \n96\nTable 11. Data ofVolume of Fuel Discharged: 750 mL\
    \ (0.75 liters)\nNo.\nTime\nIndicators\nNo.\nTime\nIndicators\nVolume 1: 0.91\
    \ liter\nVolume 2: 1.36 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 0\
    \ mL\nVolume 1: 0.64 liter\nVolume 2: 0.74 liter\nFlow rate: 2 L/min,\nOutput\
    \ Liquid Quantity: 358\n1.\n08:10:07.940\n08:10:07.940\n08:10:07.974\n21.\n08:10:43.570\n\
    08:10:43.570\n08:10:43.605\nmL\nVolume 1: 0.91 liter\nVolume 2: 1.36 liter\nFlow\
    \ rate: 0 L/min,\nOutput Liquid Quantity: 0 mL\nVolume 1: 0.18 liter\nVolume 2:\
    \ 1.19 liter\nFlow rate: 2 L/min,\nOutput Liquid Quantity: 381\n2.\n08:10:09.636\n\
    08:10:09.636\n08:10:09.671\n22.\n08:10:45.349\n08:10:45.382\n08:10:45.382\nmL\n\
    Volume 1: 1.05 liter\nVolume 2: 1.38 liter\nFlow rate: 0 L/min,\nOutput Liquid\
    \ Quantity: 0 mL\nVolume 1: 0.79 liter\nVolume 2: 1.04 liter\nFlow rate: 2 L/min,\n\
    Output Liquid Quantity: 404\n3.\n08:10:11.328\n08:10:11.361\n08:10:11.361\n23.\n\
    08:10:47.172\n08:10:47.172\n08:10:47.205\nmL\nVolume 1: 0.95 liter\nVolume 2:\
    \ 1.36 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 0 mL\nVolume 1: 0.78\
    \ liter\nVolume 2: 1.04 liter\nFlow rate: 2 L/min,\nOutput Liquid Quantity: 428\n\
    4.\n08:10:13.063\n08:10:13.063\n08:10:13.097\n24.\n08:10:48.961\n08:10:48.996\n\
    08:10:48.996\nmL\nVolume 1: 0.90 liter\nVolume 2: 1.36 liter\nFlow rate: 0 L/min,\n\
    Output Liquid Quantity: 0 mL\nVolume 1: 0.47 liter\nVolume 2: 0.72 liter\nFlow\
    \ rate: 1 L/min,\nOutput Liquid Quantity: 443\n5.\n08:10:14.750\n08:10:14.785\n\
    08:10:14.785\n25.\n08:10:50.753\n08:10:50.753\n08:10:50.787\nmL\nVolume 1: 0.91\
    \ liter\nVolume 2: 1.35 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 0\
    \ mL\nVolume 1: 0.44 liter\nVolume 2: 1.04 liter\nFlow rate: 0 L/min,\nOutput\
    \ Liquid Quantity: 448\n6.\n08:10:16.457\n08:10:16.493\n08:10:16.493\n26.\n08:10:52.452\n\
    08:10:52.489\n08:10:52.489\nmL\nVolume 1: 0.92 liter\nVolume 2: 1.47 liter\nFlow\
    \ rate: 1 L/min,\nOutput Liquid Quantity: 15 mL\nVolume 1: 0.64 liter\nVolume\
    \ 2: 1.04 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 448\n7.\n08:10:18.241\n\
    08:10:18.241\n08:10:18.275\n27.\n08:10:54.172\n08:10:54.206\n08:10:54.206\nmL\n\
    Volume 1: 1.09 liter\nVolume 2: 1.14 liter\nFlow rate: 2 L/min,\nOutput Liquid\
    \ Quantity: 37 mL\nVolume 1: 0.50 liter\nVolume 2: 1.21 liter\nFlow rate: 0 L/min,\n\
    Output Liquid Quantity: 448\n8.\n08:10:20.067\n08:10:20.067\n08:10:20.102\n28.\n\
    08:10:55.890\n08:10:55.924\n08:10:55.924\nmL\nVolume 1: 1.14 liter\nVolume 2:\
    \ 1.24 liter\nFlow rate: 2 L/min,\nOutput Liquid Quantity: 62 mL\nVolume 1: 0.49\
    \ liter\nVolume 2: 1.04 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 448\n\
    9.\n08:10:21.859\n08:10:21.896\n08:10:21.896\n29.\n08:10:57.602\n08:10:57.636\n\
    08:10:57.636\nmL\nVolume 1: 0.81 liter\nVolume 2: 1.24 liter\nFlow rate: 2 L/min,\n\
    Output Liquid Quantity: 88 mL\nVolume 1: 0.49 liter\nVolume 2: 0.83 liter\nFlow\
    \ rate: 0 L/min,\nOutput Liquid Quantity: 448\n10.\n08:10:23:668\n08:10:23.702\n\
    08:10:23.702\n30.\n08:10:59.298\n08:10:59.332\n08:10:59.332\nmL\nVolume 1: 0.33\
    \ liter\nVolume 2: 0.93 liter\nFlow rate: 2 L/min,\nOutput Liquid Quantity: 113\
    \ mL\nVolume 1: 0.47 liter\nVolume 2: 0.98 liter\nFlow rate: 0 L/min,\nOutput\
    \ Liquid Quantity: 448\n11.\n08:10:25.508\n08:10:25.508\n08:10:25.543\n31.\n08:11:01.017\n\
    08:11:01.051\n08:11:01.051\nmL\nVolume 1: 0.87 liter\nVolume 2: 1.35 liter\nFlow\
    \ rate: 2 L/min,\nOutput Liquid Quantity: 139 mL\nVolume 1: 0.41 liter\nVolume\
    \ 2: 1.18 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 448\n12.\n08:10:27.295\n\
    08:10:27.331\n08:10:27.331\n32.\n08:11:02.729\n08:11:02.763\n08:11:02.763\nmL\n\
    Volume 1: 0.97 liter\nVolume 2: 1.37 liter\nFlow rate: 2 L/min,\nOutput Liquid\
    \ Quantity: 164 mL\nVolume 1: 0.49 liter\nVolume 2: 1.06 liter\nFlow rate: 0 L/min,\n\
    Output Liquid Quantity: 448\n13.\n08:10:29.124\n08:10:29.159\n08:10:29.159\n33.\n\
    08:11:04.439\n08:11:04.474\n08:11:04.474\nmL\n \n \nKapal:Jurnal Ilmu Pengetahuan\
    \ danTeknologi Kelautan,18 (2) (2021):88-100\nVolume 1: 0.79 liter\nVolume 2:\
    \ 1.03 liter\nFlow rate: 2 L/min,\nOutput Liquid Quantity: 189 mL\n97\nVolume\
    \ 1: 0.50 liter\nVolume 2: 1.18 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity:\
    \ 448\n14.\n08:10:30.940\n08:10:30.940\n08:10:30.974\n34.\n08:11:06.160\n08:11:06.194\n\
    08:11:06.194\nmL\nVolume 1: 0.49 liter\nVolume 2: 1.14 liter\nFlow rate: 2 L/min,\n\
    Output Liquid Quantity: 214 mL\nVolume 1: 0.46 liter\nVolume 2: 0.98 liter\nFlow\
    \ rate: 0 L/min,\nOutput Liquid Quantity: 448\n15.\n08:10:32.739\n08:10:32.739\n\
    08:10:32.775\n35.\n08:11:07.869\n08:11:07.907\n08:11:07.907\nmL\n16.\n08:10:34.544\n\
    08:10:34.544\n08:10:34.578\nVolume 1: 0.81 liter\nVolume 2: 1.14 liter\nFlow rate:\
    \ 2 L/min,\nOutput Liquid Quantity: 239 mL\n36.\n08:11:09.588\n08:11:09.588\n\
    08:11:09.625\nVolume 1: 0.49 liter\nVolume 2: 0.98 liter\nFlow rate: 0 L/min,\n\
    Output Liquid Quantity: 448\nmL\nVolume 1: 0.82 liter\nVolume 2: 0.99 liter\n\
    Flow rate: 2 L/min,\nOutput Liquid Quantity: 262 mL\nVolume 1: 0.46 liter\nVolume\
    \ 2: 0.99 liter\nFlow rate: 0 L/min,\nOutput Liquid Quantity: 448\n17.\n08:10:36.343\n\
    08:10:36.343\n08:10:36.377\n37.\n08:11:11.319\n08:11:11.319\n08:11:11.319\nmL\n\
    18.\n08:10:38.166\n08:10:38.166\n08:10:38.200\nVolume 1: 0.47 liter\nVolume 2:\
    \ 1.23 liter\nFlow rate: 2 L/min,\nOutput Liquid Quantity: 287 mL\n38.\n08:11:13.023\n\
    08:11:13.023\n08:11:13.060\nVolume 1: 0.46 liter\nVolume 2: 0.97 liter\nFlow rate:\
    \ 0 L/min,\nOutput Liquid Quantity: 448\nmL\n19.\n08:10:39.956\n08:10:39.956\n\
    08:10:39.994\nVolume 1: 0.44 liter\nVolume 2: 1.22 liter\nFlow rate: 2 L/min,\n\
    Output Liquid Quantity: 310 mL\n39.\n08:11:14.725\n08:11:14.725\n08:11:14.760\n\
    Volume 1: 0.49 liter\nVolume 2: 1.19 liter\nFlow rate: 0 L/min,\nOutput Liquid\
    \ Quantity: 448\nmL\nVolume 1: 0.49 liter\nVolume 2: 1.19 liter\nFlow rate: 0\
    \ L/min,\nOutput Liquid Quantity: 448\n20.\n08:10:41.743\n08:10:41.780\n08:10:41.780\n\
    Volume 1: 0.81 liter\nVolume 2: 0.93 liter\nFlow rate: 2 L/min,\nOutput Liquid\
    \ Quantity: 335 mL\n40.\n08:11:16.435\n08:11:16.469\n08:11:16.469\nmL\nFrom the\
    \ experiments that have been carried out, as shown in Table 11, the flow sensor\
    \ has a weakness, which it cannot\nmeasure very small flows (less than 1 liter/minute)\
    \ which relies on ordinary gravitational force because with a minimum\nflow rate\
    \ is 1 liter/minute, the height of the fuel in the tank affects the ability of\
    \ the flow sensor to work which causes the\nflow sensor cannot carry out its duties\
    \ at a certain height (lowest). The test results show that when the actual total\
    \ volume\nof fuel discharged is 750 mL, the result of flow sensor measurement\
    \ is 448 mL. So that by only relying on the gravity force,\nthe flow sensor is\
    \ very inaccurate. Then booster equipment is needed for the fuel, which is a pump.\n\
    3.4. Internet of Things Integration\nThe integration of the system with the internet\
    \ is to make the measurement results by the system can be accessed in\nreal-time\
    \ via the IoT website. The integration process between the system and the internet\
    \ is by using the Wi-Fi module so\nthat the data received by Arduino will be sent\
    \ to the Webserver so that the data can be accessed online by the user.\nThe IoT\
    \ website that is used to monitor the online system is ThingSpeak. ThingSpeak\
    \ is an IoT analytics platform service\nthat allows users to aggregate, visualize,\
    \ and live data streams in the cloud. Users can send data to ThingSpeak from the\n\
    devices, create instant visualization of live data, and even send alerts.The data\
    \ sent from Arduino to the website is the volume\nof fuel in Tank 1, volume of\
    \ fuel in Tank 2, volume of fuel discharged, and fuel flow rate.The interface\
    \ of the online monitoring,\nThingSpeak website, shows measurement results, such\
    \ as fuel volume on Tank 1 (Supply Tank Volume), fuel volume on Tank\n2 (Operation\
    \ Tank Volume), fuel volume discharged (Total Drain), and fuel flow rate in graphic\
    \ form, can be seen in Figure 7.\nThe data displayed on the graph is as much as\
    \ 38 data from 40 data as in the experimental data, shown in Table 11. In the\n\
    chart in Figure 7, both for Supply Tank Volume and Operation Tank Volume, there\
    \ is a volume and time amount because the\ndata obtained is volume data in liters,\
    \ and the data collection time can be seen when accessing the channel on the website\n\
    by pointing to the dot on the chart. That also applies to the chart of the Flow\
    \ Rate and the total volume of fuel drained. In the\nchart of Supply Tank Volume\
    \ and Operation Tank Volume, it can be seen that there are fluctuations in the\
    \ measurement data,\nas explained in the System Data Retrieval and Analysis section.\
    \ In the Flow Rate chart display, the chart looks flat because\nthe changes are\
    \ not significant. In the Total Drain chart display, it can be seen that there\
    \ is an increase in volume, as indicated\nby an increase in the chart.\nKapal:Jurnal\
    \ Ilmu Pengetahuan danTeknologi Kelautan, 18 (2) (2021):88-100 \n98\nChannel Stats\n\
    Created: 21d.ays.agQ\nLast entry: a.day.agQ\nEntries:38\nField 1 Chart\n[E\nSupply\
    \ Tank Volume\n15\n10\ni-\n5\n0\nMinute\nThingSpaalccom\nField 2 Chart\nOperation\
    \ Tank Volume\n10\nS\n5\n~\n0\nMinute\nThingSp*ak.com\nField 3 Chart\nFlow Rate\n\
    30\n20\ng-\n10\n0\nMinute\nThmgSp*ak.com\nField 4 Chart\nTotal Drain\n100\n£\n\
    50\n0\nMinute\nThingSp*ak.com\nFigure 7. IoT Website for Online Monitoring Interface\n\
    \ \n \n“\n”\n“\n”\n“\n”\n–\n“\n”\n–\n“\n”\n“\n”\nž\nć\nŠ\nć\n“\n”\n“\n”\n“\n”\n\
    “\n”\n“\n”\n“\n”\n“\n”\n“\n”\n“\n”\n“\n”\nKapal:Jurnal Ilmu Pengetahuan danTeknologi\
    \ Kelautan,18 (2) (2021):88-100\nThis research can contribute to the academic\
    \ world by providing insight into how the system works and calibrating the\nsensors\
    \ used. This research requires system improvements, such as automatic controls\
    \ and an increase in measurement\naccuracy by sensors. The system can be developed\
    \ on an industrial scale, especially in the maritime industry.\n99\n4.\nConclusion\n\
    Based on the results, it is known that the Arduino microcontroller can be used\
    \ as an automatic fuel monitoring tool. The\nultrasonic level sensor connected\
    \ to Arduino can automatically measure the volume of fuel in the tank. Flow sensor\n\
    connected to the Arduino is used to measure the volume of discharged fuel and\
    \ fuel flow rate.The measurement results from\nthese sensors will be displayed\
    \ via the LCD installed on the system and sent to the IoT Cloud on the website\
    \ using the Wi-Fi\nmodule. Based on the results of data collection, it is known\
    \ that the measurement results of the level sensor are quite accurate\nwith deviation\
    \ ±0.5 cm, while the measurement results of flow sensors still have a large difference\
    \ because the flow of fuel\nless than 1 liter/minute is not measured by the flow\
    \ sensor. Based on the experimental results, the actual fuel volume\ndischarged\
    \ is 750 mL, while the fuel volume measured by the flow sensor is only 448 mL.\n\
    Acknowledgements\nThe authors would like to thank the members of the Digital Marine\
    \ Operation and Maintenance Laboratory at Institut\nTeknologi Sepuluh Nopember\
    \ for their support and assistance.\nReferences\nm\nM. Stopford, Maritime Economics\
    \ 3e, 3rd ed. New York: Routledge, 2009.\n[2]\nI. Rojon and T. Smith, On the attitudes\
    \ and opportunities of fuel consumption monitoring and measurement within\nthe\
    \ shipping industry and the identification and validation of energy efficiency\
    \ and performance interventions,\nLondon, 2014.\n[3]\nK. K. Patel, S. M. Patel,\
    \ and P. G. Scholar,\nInternet of Things-IOT: Definition, Characteristics, Architecture,\
    \ Enabling\nTechnologies, Application Samp; Future Challenges,\nInternational\
    \ Journal of Engineering Science and Computing,\nvol. 6, no. 5, 2016. doi:10.4010/2016.1482\n\
    [4]\nC. Capezza, S. Coleman, A. Lepore, B. Palumbo, and L. Vitiello, Ship fuel\
    \ consumption monitoring and fault detection\nvia partial least squares and control\
    \ charts of navigation data,\nTransportation Research Part D: Transport and\n\
    Environment, vol. 67, no. December 2018, pp. 375 387, 2019. doi: 10.1016/j.trd.2018.11.009\n\
    [5]\nA. Hakimelahi, K. V. K. Rao, S. L. Dhingra, and S. Borzooei,\nFuel Consumption\
    \ Monitoring for Travel Demand\nModeling,\nTransportation\nResearch\nProcedia,\n\
    vol.\n17,\nno.\nDecember\n2014,\npp.\n703 712,\n2016.\ndoi:\n10.1016/j.trpro.2016.11.127\n\
    [6]\nA. T. A. Wijaya, I. M. Ariana, D. W. Handani, and H. N. Abdillah, Fuel Oil\
    \ Consumption Monitoring and Predicting Gas\nEmission Based on Ship Performance\
    \ using Automatic Identification System (AISITS) Data,\nIOP Conference Series:\n\
    Earth and Environmental Science, vol. 557, no. 1, 2020. doi:10.1088/1755-1315/557/1/012017\n\
    [7]\nT. Pitana, E. Kobayashi, and N. Wakabayashi,\nEstimation of exhaust emissions\
    \ of marine traffic using Automatic\nIdentification System data (Case Study: Madura\
    \ Strait area, Indonesia), Ocean. IEEE Sydney, Ocean. 2010, no. x, 2010.\ndoi:\
    \ 10.1109/OCEANSSYD.2010.5603866\n[8]\nS. Ni eti , P. oli , D. Lopez-de-Ipina\
    \ Gonzalez-de-Artaza, and L. Patrono,\nInternet of Things (IoT): Opportunities,\n\
    issues and challenges towards a smart and sustainable future Journal of Cleaner\
    \ Production, vol. 274, 2020. doi:\n10.1016/j.jclepro.2020.122877\n[9]\nP. Osterrieder,\
    \ L. Budde, and T. Friedli, The smart factory as a key construct of industry 4.0:\
    \ A systematic literature\nreview, InternationalJournal of Production Economics,\
    \ vol. 221, 2020. doi: 10.1016/j.ijpe.2019.08.011\n[10]\nG. Sivanageswara Rao,\
    \ K. Raviteja, G. Phanindra, and D. Vignesh,\nAnalysis of internet of things concept\
    \ for the\napplication of smart cities, International Journal of Advanced Science\
    \ and Technology, vol. 29, no. 3, 2020.\n[11]\nM. M. Martin-Lopo,J. Boal, and\
    \ A. Sanchez-Miralles, A literature review of IoT energy platforms aimed at end\
    \ users,\nComputer Networks, vol. 171, 2020. doi: 10.1016/j.comnet.2020.107101\n\
    [12]\nA. Villa-Henriksen, G. T. C. Edwards, L. A. Pesonen, O. Green, and C. A.\
    \ G. Sorensen,\nInternet of Things in arable\nfarming: Implementation, applications,\
    \ challenges and potential,\nBiosystems Engineering, vol. 191. 2020. doi:\n10.1016/j.biosystemseng.2019.12.013\n\
    [13]\nN. Voca and B. Ribic,\nBiofuel production and utilization through smart\
    \ and sustainable biowaste management,\nJournal of Cleaner Production, vol. 259,\
    \ 2020. doi: 10.1016/j.jclepro.2020.120742\n[14]\nB. Farahani, M. Barzegari, F.\
    \ Shams Aliee, and K. A. Shaik, Towards collaborative intelligent IoT eHealth:\
    \ From device\nto fog, and cloud, Microprocessors and Microsystems, vol. 72, 2020.\
    \ doi: 10.1016/j.micpro.2019.102938\n[15]\nS. Porru, F. E. Misso, F. E. Pani,\
    \ and C. Repetto, Smart mobility and public transport: Opportunities and challenges\
    \ in\nrural and urban areas, Journal of Traffic and Transportation Engineering\
    \ (English Edition), vol. 7, no. 1. 2020. doi:\n10.1016/j.jtte.2019.10.002\n[16]\n\
    Y. Li, M. Gao, L. Yang, C. Zhang, B. Zhang, and X. Zhao, Design of and research\
    \ on industrial measuring devices based\non Internet of Things technology, Ad\
    \ Hoc Networks, vol. 102, 2020. doi: 10.1016/j.adhoc.2020.102072\n[17]\nA. Janik,\
    \ A. Ryszko, and M. Szafraniec, Scientific landscape of smart and sustainable\
    \ cities literature: A bibliometric\nanalysis, Sustainability , vol. 12, no. 3,\
    \ 2020. doi: 10.3390/sul2030779\n \n“\n”\n“\n”\n“\n”\n“\n”\n“\n”\n“\n” \n“\n”\n\
    “\n”\n \n“\n”\n–\n“\n‘\n’”\nKapal:Jurnal Ilmu Pengetahuan danTeknologi Kelautan,18\
    \ (2) (2021):88-100\n[18]\nY. Xin and F. Tao, Developing climate-smart agricultural\
    \ systems in the North China Plain, Agriculture, Ecosystems\n& Environment, vol.\
    \ 291, 2020. doi: 10.1016/j.agee.2019.106791\n[19]\nK. Dhana Shree, B. Janani,\
    \ R. Reenadevi, and R. Rajesh, Garbage monitoring system using smart bins, International\n\
    Journal Of Scientific & Technology Research, vol. 8, no. 11, 2019.\n[20]\nA. Papa,\
    \ M. Mital, P. Pisano, and M. Del Giudice, E-health and wellbeing monitoring using\
    \ smart healthcare devices:\nAn\nempirical\ninvestigation,\nTechnological\nForecasting\n\
    and\nSocial\nChange,\nvol.\n153,\n2020.\ndoi:\n10.1016/j.techfore.2018.02.018\n\
    [21]\nM. Rishav, R. Maity, D. Ghosh, V. N. Ganesh, and Sivakumar, Internet of\
    \ thing based smart power grid for smart city,\nInternationalJournal of Recent\
    \ Technology and Engineering., vol. 8, no. 1 Special Issue 4, 2019.\n[22]\nA.\
    \ Chugh, C. Jain, and V. P. Mishra,\nIoT-Based Multifunctional Smart Toy Car,\n\
    in Lecture Notes in Networks and\nSystems, vol. 103, 2020. doi: 10.1007/978-981-15-2043-3_50\n\
    [23]\nC. Babu and V. Prakash,\nReal Time Tracking and Fuel Monitoring of Truck\
    \ using IoT,\nInternational Journal of Pure\nand Applied Mathematics, vol.120,\
    \ no. 6, 2018.\n[24]\nS. Geetha and D. Cicilia,\nIoT enabled intelligent bus transportation\
    \ system, in Proceedings of the 2nd International\nConference on Communication\
    \ and Electronics Systems, ICCES 2017, 2018.\n[25]\nP. Fraga-Lamas,T. M. Fernandez-Carames,and\
    \ L. Castedo, Towards the internet of smart trains: A review on industrial\nIoT-connected\
    \ railways, Sensors (Switzerland), vol. 17, no. 6, 2017. doi: 10.3390/sl7061457\n\
    [26]\nA. Ansori,\nStudi Pemanfaatan Internet of Things dan Data Mining untuk Pengawasan\
    \ Bahan Bakar Minyak (Studi\nKasus: Perusahaan Pelayaran Penumpang Nasional),\
    \ WaveJurnal IlmiahTeknologi Maritim, vol. 12, no. 1, pp.31 42,\n2018. doi: 10.29122/jurnalwave.vl2il.2915\n\
    [27]\nZ. M. L. Ansari, Design and control of compact legged-wheeled robot Spicar,\n\
    . Thesis. Birmingham City University,\n2017.\n100\n"
  inline_citation: null
  journal: Kapal
  limitations: '- The paper focuses primarily on the integration of IoT and data transmission
    protocols with automated irrigation management systems and does not delve deeply
    into the specific types of data that are most applicable to irrigation management.


    - The paper does not provide a comprehensive analysis of the challenges and solutions
    associated with real-time data transmission in automated irrigation management
    systems.


    - The paper does not provide a thorough review of the current state-of-the-art
    in end-to-end automated irrigation management systems that integrate IoT and machine
    learning technologies.


    The paper does not provide any recommendations for future research and innovation
    in the field of real-time, automated irrigation management.


    The paper''s findings are based on a limited number of case studies and real-world
    implementations, which may not be representative of the broader field of automated
    irrigation management.


    The paper does not provide a clear roadmap for advancing the field of real-time,
    automated irrigation management.'
  pdf_link: https://ejournal.undip.ac.id/index.php/kapal/article/download/37180/19755
  publication_year: 2021
  relevance_score: 0.8
  relevance_score1: 0
  relevance_score2: 0
  title: Real-Time Fuel Consumption Monitoring System Integrated With Internet Of
    Things (IOT)
  verbatim_quote1: "\"The purpose and intention of this systematic review on automated\
    \ systems for real-time irrigation management can be interpreted as follows:\n\
    \    * Addressing the global food challenge: The review aims to explore how automated,\
    \ real-time irrigation management systems can contribute to the efficient use\
    \ of water resources and enhance agricultural productivity to meet the growing\
    \ demand for food.\n    * Evaluating the current state and future potential: The\
    \ primary objective is to critically assess the current state of end-to-end automated\
    \ irrigation management systems that integrate IoT and machine learning technologies.\
    \ The review also seeks to identify gaps and propose solutions for seamless integration\
    \ across the automated irrigation management system to achieve fully autonomous,\
    \ scalable irrigation management.\n    * Examining automation across the entire\
    \ pipeline: The review intends to systematically analyze the automation of each\
    \ component of the irrigation management pipeline, from data collection and transmission\
    \ to processing, analysis, decision-making, and automated action. It aims to investigate\
    \ the effectiveness and efficiency of integrated end-to-end automated irrigation\
    \ systems.\n    * Highlighting the role of interoperability and standardization:\
    \ The review seeks to emphasize the importance of interoperability and standardization\
    \ in enabling the integration of components within the automated irrigation management\
    \ pipeline. It aims to identify existing and emerging standards and their applicability\
    \ to real-time irrigation management systems.\n    * Identifying challenges and\
    \ proposing solutions: The review intends to uncover the challenges associated\
    \ with implementing real-time, automated irrigation systems, such as data quality,\
    \ scalability, reliability, and security. It aims to propose solutions and best\
    \ practices based on the analysis of case studies and real-world implementations.\n\
    \    * Guiding future research and innovation: By identifying research gaps and\
    \ proposing new research questions and hypotheses, the review aims to provide\
    \ a roadmap for advancing the field of real-time, automated irrigation management.\
    \ It seeks to encourage collaborative research efforts across disciplines to address\
    \ the complex challenges of automated irrigation systems.\""
  verbatim_quote2: '"This research, the design of models and experiments related to
    a monitoring system for fuel consumption was carried out using sensors and microcontrollers
    integrated with the internet to obtain accurate and real-time data."'
  verbatim_quote3: '>'
