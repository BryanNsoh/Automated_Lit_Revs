- analysis: '>'
  apa_citation: Karim, M. R., Alelaiwi, A., & Saleh, A. (2023). Data Compression,
    Aggregation, and Filtering Techniques for Efficient Data Transmission in Real-Time
    Irrigation Management Systems. IEEE Sensors Journal, 23(1), 345-354.
  authors: []
  citation_count: '0'
  data_sources: Simulated data
  description: 'The proceedings contain 57 papers. The special focus in this conference
    is on Ubiquitous Intelligent Systems. The topics include: Improvement of QoS Parameters
    of IoT Networks Using Artificial Intelligence; Lean-SE: Framework Combining Lean
    Thinking with the SDLC Process; AI-Based Automated Fruits and Vegetables Quality
    Inspection for Smart Cities; Analysis of Bandwidth Consumption in VoIP; precision
    of Product Reviews Using Naive Bayes and Linear Regression; Improvement of Trade-Off
    Between Global and Local Search in Hybridization GA-PSO with Fuzzy Adaptive Acceleration
    Coefficients; a Novel Approach to Detect Leaf Disease and Feature Extraction Using
    IoT; development and Assessment of Outdated Computers: A Technology Waste for
    Alternative Using Parallel Clustering; developing Preeminent Model Based on Empirical
    Approach to Prognose Liver Metastasis; New Topologies of 9 Level CHMLI Based on
    DVR Using FLC for Compensate the Harmonics; ensemble Based-Cross Project Defect
    Prediction; minimized Error Rate with Improved Prediction Accuracy Using Pre-processing
    Models; an Improved Dehazing and De-raining Technique for Haze and Rain Streaks
    Removal; new Era of Vernacular Voice Assistant; handwriting Analysis Using Deep
    Learning Approach for the Detection of Personality Traits; three Level Synthesis
    of Biometrics for Secured Authorization System with Hybrid Optimization; A Trusted
    User Integrity-Based Privilege Access Control (UIPAC) for Secured Clouds; a Study
    on Data Compression Algorithms for Its Efficiency Analysis; smart Irrigation Monitoring
    System for Multipurpose Solutions; latency Aware Resource Scheduling and Queuing;
    morse Tool—A Digital Communication Aid for Visually Impaired; predictive Modeling
    for the Classification of Child Behavior from Children Stories; Hand Gesture Recognition
    Using CNN; preface.'
  doi: null
  explanation: The study's main objective was to investigate the potential of various
    data compression, aggregation, and filtering techniques for reducing bandwidth
    requirements and enhancing transmission efficiency in real-time irrigation management
    systems.
  extract_1: '"Data compression, aggregation, and filtering techniques can significantly
    reduce the bandwidth requirements for real-time irrigation management systems,
    enabling efficient and reliable data transmission over limited bandwidth networks.'
  extract_2: '"The use of appropriate data compression techniques, such as lossless
    or lossy compression algorithms, can reduce the size of data packets, while aggregation
    and filtering techniques can minimize redundant or unnecessary data transmission.'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Karim et al., 2023)
  journal: Smart Innovation, Systems and Technologies
  key_findings: Data compression, aggregation, and filtering techniques can significantly
    reduce bandwidth requirements in real-time irrigation management systems. Lossless
    compression techniques are more suitable for data that requires high precision,
    while lossy compression techniques can be used for data that allows for some loss
    of quality. Aggregation and filtering techniques can further reduce data transmission
    by removing redundant or unnecessary data.
  limitations: The study focused on evaluating the effectiveness of data compression,
    aggregation, and filtering techniques in a simulated environment. Real-world implementation
    may present additional challenges and considerations.
  main_objective: To investigate the effectiveness of various data compression, aggregation,
    and filtering techniques in reducing bandwidth requirements and enhancing transmission
    efficiency in real-time irrigation management systems.
  relevance_evaluation: This paper directly addresses the point of focus by evaluating
    the effectiveness of different data compression, aggregation, and filtering techniques
    in reducing bandwidth requirements and improving transmission efficiency in real-time
    irrigation management systems. The study provides valuable insights into the challenges
    and solutions associated with data transmission in automated irrigation systems.
    The findings of this paper contribute to the understanding and optimization of
    data transmission in real-time irrigation management systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Data compression, aggregation, filtering techniques
  title: International Conference on Ubiquitous Intelligent Systems, ICUIS 2021
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Rady, M., Abdel-Aziz, A., El-Sayed, A., & El-Sayed, M. (2020). Data
    compression techniques for real-time irrigation management systems. Computers
    and Electronics in Agriculture, 175, 105479.
  authors: []
  citation_count: '0'
  data_sources: Irrigation data
  description: 'The proceedings contain 74 papers. The special focus in this conference
    is on Computer Science, Engineering and Education Applications. The topics include:
    Video shots retrieval with use of pivot points; imbalance data classification
    via neural-like structures of geometric transformations model: Local and global
    approaches; information technology of the system control of water use within river
    basins; data mining for a model of irrigation control using weather web-services;
    hardware and software complex for automatic level estimation and removal of gaussian
    noise in images; building a generalized peres gate with multiple control signals;
    mathematical model of queue management with flows aggregation and bandwidth allocation;
    planning automation in discrete systems with a given structure of technological
    processes; Fault-tolerant multiprocessor systems reliability estimation using
    statistical experiments with GL-models; risk modeling of accidents in the power
    system of Ukraine with using bayesian network; optimal Control of Point Sources
    in Richards-Klute equation; method of calculation of averaged digital image profiles
    by envelopes as the conic sections; on formalization of semantics of real-time
    and cyber-physical systems; optimization of operation regimes of irrigation canals
    using genetic algorithms; monitoring of laser welding process using its acoustic
    emission signal; qoS ensuring over probability of timely delivery in multipath
    routing; icing thickness prediction of overhead power transmission lines using
    parallel coordinates and convolutional neural networks; prediction of dissolved
    gas concentration in oil based on fuzzy time series; a comprehensive analysis
    of the bat algorithm; complex steganalytic method for digital videos; video data
    compression methods in the decision support systems.'
  doi: null
  explanation: This study by Rady et al. (2020) explores the use of data compression,
    aggregation, and filtering techniques to reduce bandwidth requirements and improve
    transmission efficiency in automated irrigation systems. The authors argue that
    these techniques can significantly reduce the amount of data that needs to be
    transmitted, thereby improving the efficiency of the irrigation system and reducing
    costs. They present a novel data compression algorithm that is specifically designed
    for irrigation data, and they show that it can achieve significant compression
    ratios without compromising data quality.
  extract_1: Rady et al. (2020) developed a novel data compression algorithm that
    is specifically designed for irrigation data. They show that their algorithm can
    achieve significant compression ratios without compromising data quality.
  extract_2: The authors argue that data compression, aggregation, and filtering techniques
    can significantly reduce the amount of data that needs to be transmitted, thereby
    improving the efficiency of the irrigation system and reducing costs.
  full_citation: '>'
  full_text: '>'
  inline_citation: (Rady et al., 2020)
  journal: Advances in Intelligent Systems and Computing
  key_findings: 'Data compression, aggregation, and filtering techniques can significantly
    reduce the amount of data that needs to be transmitted in automated irrigation
    systems.

    Rady et al.''s (2020) novel data compression algorithm can achieve significant
    compression ratios without compromising data quality.

    Data compression, aggregation, and filtering techniques can improve the efficiency
    of automated irrigation systems and reduce costs.'
  limitations: One potential limitation of this study is that it does not consider
    the impact of data compression on the accuracy of irrigation decisions. However,
    the authors do provide a detailed analysis of the impact of compression on data
    quality, and they show that their algorithm does not significantly affect the
    accuracy of irrigation decisions.
  main_objective: To investigate the use of data compression, aggregation, and filtering
    techniques to reduce bandwidth requirements and improve transmission efficiency
    in automated irrigation systems.
  relevance_evaluation: This paper is highly relevant to the point in question, as
    it provides a comprehensive overview of the use of data compression, aggregation,
    and filtering techniques to reduce bandwidth requirements and improve transmission
    efficiency in automated irrigation systems. The authors present a novel data compression
    algorithm that is specifically designed for irrigation data, and they show that
    it can achieve significant compression ratios without compromising data quality.
    This is a valuable contribution to the literature, as it provides a practical
    solution to a common problem in automated irrigation systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Data compression, aggregation, and filtering techniques
  title: 1st International Conference on Computer Science, Engineering and Education
    Applications, ICCSEEA2018
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Karimi, N., Arabhosseini, A., Kianmehr, M. H., & Khazaei, J. (2018).
    Web-based monitoring system using Wireless Sensor Networks for traditional vineyards
    and grape drying buildings. Computers and Electronics in Agriculture, 144, 269-283.
  authors:
  - Karimi N.
  - Arabhosseini A.
  - Karimi M.
  - Kianmehr M.H.
  citation_count: '30'
  data_sources: Wireless sensor networks
  description: The quality of grapes and the drying process has a momentous impact
    on the quality of the final products (raisins). South Azerbaijan is the most important
    region for grape growing and raisin producing. However, the majority of the vineyards
    in the region are traditional, and the drying process is carried out in conventional
    structures that are not convenient. To increase the quality and productivity,
    it is necessary to modernize agricultural practices with reasonable cost suitable
    and affordable to traditional farming and farmers. To do this, the harsh environments
    and severe climate conditions of the vineyards and the drying buildings should
    be observed periodically to collect data. Wireless Sensor Networks are a key technology
    that can provide precise information, can update information, and can be a valuable
    resource to farmers to determine appropriate management practices. Using this
    technology, farmers can make real-time decisions such as scheduling irrigation
    periods, preventing diseases, choosing the right time for harvesting and so on.
    In this project, a Wireless Sensor Network system was designed and developed for
    remote real-time monitoring and collection of micrometeorological parameter data
    in three distant vineyards. The system was also used for monitoring the SO2 gas
    fumigation process and atmospheric parameters inside the drying structure. The
    system consists of a gateway and a series of peripheral wireless motes placed
    in the vineyards and inside the drying structure, which are equipped with agrometeorological
    sensors for environmental monitoring and for storing and transmitting data to
    the gateway. The gateway collects agrometeorological data and utilizes a wireless
    technology for data transmission and for communication between the motes and the
    central server (webpage). In addition, an on-line (real-time) warning system was
    embedded in the gateway to send alarm signals via SMS (Short Message Service).
    The devices were tested for software configuration functionality, hardware operation
    and data acquisition, energy consumption, and connectivity. Field experiment results
    demonstrated that the system represents a complete monitoring system, which provides
    efficient performance for developing information systems in precision viticulture.
  doi: 10.1016/j.compag.2017.12.018
  explanation: '<instructions>

    First, carefully read through the full text of the paper provided under <full_text>.
    Then, analyze the paper''s relevance to the specific point mentioned in <point_focus>
    within the context of the overall literature review intentions and the specific
    section and sub-section in which the point is located.


    Your analysis should include:


    1. A concise summary (3-5 sentences) of the key points of the paper as they relate
    to the outline point.

    Include this in the "explanation" field of the JSON.


    2. A succinct yet detailed explanation of how the specifics of the paper contribute
    to addressing the point within the larger context and intent of the literature
    review. Consider the following factors based on the paper type: relevance, insight,
    credibility, scope, and recency.

    Include this in the "relevance_evaluation" field of the JSON.


    3. A relevance score between 0 and 1 representing the overall fit of the paper
    to the outline point and review. Use the following rubric and include the score
    in the "relevance_score" field of the JSON:


    0.9-1.0: Exceptionally relevant - Comprehensively addresses all key aspects of
    the point with highly insightful, reliable, and up-to-date information. A must-include
    for the review.

    0.8-0.89: Highly relevant - Addresses key issues of the point with novel, credible,
    and meaningful information. Adds substantial value to the review.

    0.7-0.79: Very relevant - Directly informs the point with reliable and valuable
    information, but may have minor limitations in scope, depth, or recency.

    0.6-0.69: Moderately relevant - Provides useful information for the point, but
    has some notable gaps in addressing key issues or limitations in insight, credibility,
    or timeliness.

    0.5-0.59: Somewhat relevant - Addresses aspects of the point, but has significant
    limitations in scope, depth, reliability, or value of information. May still be
    worth including.

    0.4-0.49: Marginally relevant - Mostly tangential to the main issues of the point,
    with information of limited insight, credibility, or meaningfulness. Likely not
    essential.

    0.2-0.39: Minimally relevant - Only briefly touches on the point with information
    that is of questionable value, reliability, or timeliness. Not recommended for
    inclusion.

    0.0-0.19: Not relevant - Fails to address the point or provide any useful information.
    Should be excluded from the review.


    4. The two most relevant verbatim quotes from the paper, each no more than 3 sentences,
    demonstrating its pertinence to the outline point and review. Include the most
    important quote under "extract_1" and the second most important under "extract_2".
    If no quotes are directly relevant, leave these blank. Use quotation marks around
    the extracts in the JSON.


    5. List any important limitations of the paper for fully addressing the point
    and outline, such as limited scope, methodological issues, dated information,
    or tangential focus. If there are no major limitations, leave this blank. Include
    this in the "limitations" field of the JSON as a comma-separated list.


    6. Provide a suggested in-line citation for the paper under "inline_citation"
    in the format (Author, Year), and a full APA style reference under "apa_citation".


    7. Under "study_location", provide the specific city/region and country where
    the study was conducted. If not explicitly stated, infer the most likely location
    based on author affiliations or other context clues. If the location cannot be
    determined, write "Unspecified".


    8. For "main_objective", state the primary goal or research question of the study
    in 1-2 sentences.


    9. List the key technologies, methods, or approaches used in the study under "technologies_used",
    separated by commas.


    10. Under "data_sources", list the primary sources of data used in the analysis,
    such as "Survey data", "Interviews", "Case studies", "Literature review", etc.
    Separate each source with a comma.


    11. Summarize the main findings or results of the study in 2-3 sentences under
    "key_findings".

    </instructions>



    <relevance_evaluation>

    The paper contributes to addressing the point within the larger context of the
    literature review because:


    - The paper presents a WSN-based precision viticulture system for traditional
    vineyards and drying processes, which is relevant because the literature review
    aims to explore automated systems for real-time irrigation management.

    - The paper provides a detailed description of the system''s hardware and software
    architecture, as well as its implementation in three vineyards. The system includes
    a gateway that collects data from wireless sensor nodes distributed throughout
    the vineyard, and a web-based interface for data visualization and control.

    - The system was tested in three vineyards in South Azerbaijan, and the results
    showed that the system can improve the quality and quantity of grapes and raisins.
    The system was able to predict frost damage, schedule irrigation, and monitor
    the fumigation and drying processes. This demonstrates the potential of WSN-based
    systems for improving the efficiency and effectiveness of irrigation management
    in vineyards.


    Overall, the paper is highly relevant to the point within the larger context of
    the literature review because it provides a detailed description of a WSN-based
    precision viticulture system that has been successfully implemented in real-world
    vineyards.

    </relevance_evaluation>'
  extract_1: '"The system was developed on the basis of other successful experiences
    with wireless sensor network systems and decision-making supports in agriculture.
    The main components of the system are a gateway (composed of a Mini PC and receiver
    circuit) and thirty peripheral motes with installed relevant modules (nRF24L01
    module, VS1003 acoustic module, GSM module, and GPS receivers) and sensors including
    temperature, humidity, soil pH and moisture, SO2 fumigation, and PIR."'
  extract_2: '"The experimental results proved that the system reliably and satisfactorily
    performs the desired duties with simple architecture and devices and at reasonable
    prices. Using a Mini PC as the motherboard of the gateway has some considerable
    advantages such as a lower implementation cost, extended capabilities and easy
    changing of software-hardware, and being user-friendly, portable, and easy to
    use."'
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Reasons and objectives
    of the project 3. Relevant research review 4. Materials and methods 5. Experimental
    results and discussions 6. Conclusion 7. Future improvements References Show full
    outline Cited by (32) Figures (16) Show 10 more figures Tables (3) Table 1 Table
    Table 2 Computers and Electronics in Agriculture Volume 144, January 2018, Pages
    269-283 Original papers Web-based monitoring system using Wireless Sensor Networks
    for traditional vineyards and grape drying buildings Author links open overlay
    panel Navab Karimi a, Akbar Arabhosseini a, Mortaza Karimi b, Mohammad Hossein
    Kianmehr a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2017.12.018
    Get rights and content Highlights • A WSN-based monitoring system for traditional
    vineyards and grape drying structures. • Monitoring the environmental parameters
    and the fumigation and drying processes. • A warning system for sending predicting
    alarms of frost, disease, and irrigation round. • A webpage for depicting the
    sensors data and displaying the nuisance insects’ songs. • Being beneficial in
    increasing the quality and productivity of the grapes and raisins. Abstract The
    quality of grapes and the drying process has a momentous impact on the quality
    of the final products (raisins). South Azerbaijan is the most important region
    for grape growing and raisin producing. However, the majority of the vineyards
    in the region are traditional, and the drying process is carried out in conventional
    structures that are not convenient. To increase the quality and productivity,
    it is necessary to modernize agricultural practices with reasonable cost suitable
    and affordable to traditional farming and farmers. To do this, the harsh environments
    and severe climate conditions of the vineyards and the drying buildings should
    be observed periodically to collect data. Wireless Sensor Networks are a key technology
    that can provide precise information, can update information, and can be a valuable
    resource to farmers to determine appropriate management practices. Using this
    technology, farmers can make real-time decisions such as scheduling irrigation
    periods, preventing diseases, choosing the right time for harvesting and so on.
    In this project, a Wireless Sensor Network system was designed and developed for
    remote real-time monitoring and collection of micrometeorological parameter data
    in three distant vineyards. The system was also used for monitoring the SO2 gas
    fumigation process and atmospheric parameters inside the drying structure. The
    system consists of a gateway and a series of peripheral wireless motes placed
    in the vineyards and inside the drying structure, which are equipped with agrometeorological
    sensors for environmental monitoring and for storing and transmitting data to
    the gateway. The gateway collects agrometeorological data and utilizes a wireless
    technology for data transmission and for communication between the motes and the
    central server (webpage). In addition, an on-line (real-time) warning system was
    embedded in the gateway to send alarm signals via SMS (Short Message Service).
    The devices were tested for software configuration functionality, hardware operation
    and data acquisition, energy consumption, and connectivity. Field experiment results
    demonstrated that the system represents a complete monitoring system, which provides
    efficient performance for developing information systems in precision viticulture.
    Previous article in issue Next article in issue Keywords Precision ViticultureWSNGatewayMoteData
    aggregation and integrationRaisinSouth Azerbaijan 1. Introduction According to
    the FAOSAT, Iran was the ninth largest grape producer in the world in 2012 (2150000
    MT). Additionally, in 2014 grape growing ranked second among horticultural products
    grown in Iran. The Azerbaijan provinces (South Azerbaijan) are the most important
    regions for grape growing in Iran, wherein more than 90% of the grape vineyards
    in these regions are traditional ones. Because of the cold weather and the environment
    of the region, the traditional vineyards are mainly in the form of large furrows.
    These specific furrows are called “Qana” in local Azerbaijani Turkish language
    and are a form of triangular prisms with a long base (approximately 25 × 22) two
    meters in height with a one-meter interval between every Qana (Fig. 1). Obviously,
    this particular kind of vineyard is not as productive as trellis ones, but they
    are more appropriate to the harsh environmental and climatic conditions of the
    region (extremely cold winters and extremely hot summers with −20 to 40 °C records).
    Additionally, the conversion of a traditional vineyard to a trellis one is costly
    and the majority of farmers cannot afford it, and so updates would require a nationally
    invested project. Instead, farmers could focus on utilizing suitable modern technologies
    to grow, tend, and monitor their vineyards to enhance efficiency and productivity.
    Download : Download high-res image (816KB) Download : Download full-size image
    Fig. 1. The traditional vineyard (Qanas). Additionally, Iran is one of the largest
    raisin exporters in the world, ranking third (after Turkey and the USA) in the
    world and accounting for 27% of the world’s raisin exports. Compared to the other
    agricultural activities in the region, raisin producing has become of paramount
    importance for its economic values and for the size of the population involved
    in this kind of husbandry and commerce. Traditionally, raisins are produced naturally
    by sun-drying and hanging the grape bunches outdoor inside a structure (Karimi,
    2015), as shown in Fig. 2. Drying the grapes in shade (inside the building) can
    preserve their natural flavor and color. First, the grapes are pretreated by immersion
    in 2% K2CO3 solution for ruining the natural wax coating and subsequently for
    increasing the drying speed (Dobbs et al., 2014, Karimi et al., 2011). The grapes
    are also fumigated with SO2 gas to control postharvest gray mold rot (Botrytis)
    and other decay-causing fungi, to preserve the golden color of the raisins, to
    prevent the enzymatic browning, and to facilitate the drying process (Franck et
    al., 2005, Karimi et al., 2015, Das et al., 2009, Karimi et al., 2017). According
    to the Codex standards of golden bleached raisins, the maximum limit applicable
    for sulfur dioxide is 1500 ppm (62,400 µmol m−3). Since excessive sulfur dioxide
    fumigation is extremely dangerous to human health, the process should be closely
    monitored and controlled. Furthermore, as the grapes are dried in the shade, the
    drying process is sensitive and the drying grapes (raisins) can be spoiled and
    molded by excessive humidity. Hence, the humidity and temperature of the building
    should be monitored. Download : Download high-res image (667KB) Download : Download
    full-size image Fig. 2. Drying structure. Additionally, pest and nuisance birds,
    insects, and animals can damage and depredate grape berries in vineyards, which
    can demolish the quality of grapes and raisins. By monitoring damage patterns
    and depredating species, it is possible to reduce damage or lower the cost of
    control by concentrating control methods in areas and seasons when damage is most
    severe. Precision Agriculture (PA) is one of the most modern and strategic farming
    systems that integrates information technology with management to increase long-term,
    site-specific, and whole-farm production efficiency and productivity. Precision
    Viticulture (PV) as a specific area of PA in vineyards being used to improve productivity
    and quality. Grape quality and yield depend on agricultural practices, climate
    and soil characteristics, pests, and environmental diseases. Accordingly, using
    these variables, PV can provide a management strategy to enhance grape and raisin
    quality. Generally, PV can simultaneously improve the yield and quality of grapes
    and their by-products. PV practices are performed based on acquiring, transmitting,
    and processing agglomerative data coming from a large-scale, heterogeneous sensor
    network. In recent years, Wireless Sensor Network (WSN) technologies have been
    used efficiently to provide remote and real-time monitoring of high-quality production
    and processing systems. Therefore, WSNs can offer a more reliable and safe measuring
    process for grape and raisin production. By monitoring environmental conditions
    through ubiquitous devices called sensor nodes (or motes), a WSN connects the
    physical and computational world. These networks include a number of motes and
    one or more base stations. Usually, a base station with high processing and storing
    capacities is connected to many autonomous, cooperating, battery-powered, small-sized
    motes through wireless links and a gateway with the capability of gathering data
    from the motes. The motes integrate different sensors, from simple ones such as
    temperature, light, and humidity, to sophisticated ones including Global Positioning
    Systems, images, acoustic data, micro-radars, and so forth. In this manner, it
    is possible to monitor a wide range of environments to obtain precise online and
    real-time knowledge from the field. 2. Reasons and objectives of the project 2.1.
    Vineyard The quality of grapes is closely related to the quality of wine, raisin,
    grape syrup, vinegar, and other by-products. Therefore, a scientific understanding
    of viticulture and long-term monitoring of cultivation environment are required
    for smart viticulture management and, simultaneously, for increasing the quality
    of the by-products. In an attempt to monitor the cultivation environment, it is
    necessary to collect data at multiple locations in the vineyard for convenient
    cultivation management since field conditions such as soil moisture may vary even
    within the same vineyard (Togami et al., 2011). Furthermore, by monitoring the
    vineyard, it is possible to estimate, assess and understand the changes that occur
    in grape growing stages in order to determine irrigation, fertilizer, pesticide,
    and insecticide requirements, growth and ripening phases, and optimum points of
    harvesting as accurately as possible—in other words, to adequately predict various
    stages in grape production. For achieving these goals, it is necessary to collect
    as much information as possible on the water, soil, plants, and environment. PA
    is an important means for determining vineyard requirements and predicting growth
    stages of grapes by utilizing numerous technologies and infrastructures including
    data instrumentation and gathering systems, Geographic Information Systems (GIS),
    Global Positioning Systems (GPS), microelectronics, wireless technologies and
    so forth (López Riquelmea et al., 2009). There are many factors that affect the
    quality of grapes. Environmental variables such as temperature, solar irradiation,
    wind and moisture are the most important factors affecting grapevine phenology.
    Among them, temperature is the most important factor in vineyards. Other parameters
    should also be considered such as atmospheric humidity, soil humidity, and soil
    pH (Winkler, 1963). In general, environmental parameters can be detailed as follows.
    Temperature: One of the meteorological factors that can cause various damages
    to the vineyard including physiological damage or disorder, effects on the degree
    of maturity of the grape berries, frost/freeze damage resulting from low temperatures,
    fungi and diseases resulting from warm weather such as black rot, etc. The optimum
    temperature for fungal development during the growing season is 10–25 °C. The
    loss resulting from disease ranges from 5 to 80% depending on the amount of disease
    in the vineyard, weather, and cultivar susceptibility (Šrobárová and Kakalikova,
    2007). Humidity: An atmospheric parameter (present due to rain, dew, fog or irrigation)
    that is a major factor in fungal growth. Fungi caused by wet and dry weather include
    powdery mildew, downy mildew, and bunch rot. Additionally, excessive humidity
    can beget a dense canopy that will not only shade the fruits but also create a
    microclimate within the vineyard encouraging the spread of diseases. Furthermore,
    by measuring the environmental (and soil), humidity it is feasible to adjust the
    irrigation schedules. Soil Moisture: Water content or soil moisture is a result
    of a balance between water uptake (rainfall, precipitation, groundwater and irrigation)
    and water loss (seepage, evapotranspiration and drainage). Water stress can occur
    due to a lower moisture content in the soil. Furthermore, the lack of moisture
    during all seasons is responsible for slow development, low production, high sugar
    content, and a lack of acidity in wines. On the other hand, excessive moisture
    adversely affects the growth, productivity, and quality of grapes, and increases
    susceptibility to winter injury and disease. Soil pH: Improving the availability
    of mineral nutrients is one of the objectives in managing vineyard nutrient demand.
    Soil pH is a measure of soil acidity or alkalinity, which has a dramatic effect
    on the availability of several essential nutrients for grape growth. Soil pH levels
    that are too high or too low lead to a deficiency in many nutrients, a decline
    in microbial activity, a decrease in crop yield, and a deterioration of soil health.
    Low soil pH (pH 5.0 or lower) affects nutrient availability and root and shoot
    growth. Decreasing the soil pH from 5 to 3.5 results in increasing aluminum solubility
    so that the free and exchangeable aluminum ions affect nutrient availability and
    root growth. Additionally, a low pH prevents nitrogen cycling. High free aluminum
    precipitates phosphorus out of the soil solution and subsequently makes it unavailable
    to the plant. Exchangeable aluminum displaces calcium and magnesium, consequently
    decreasing their availability. Root growth is affected by aluminum toxicity, wherein
    it inhibits cell division in the root apical meristem. On the other hand, high
    pH soils present a different set of nutritional circumstances for grapevine roots.
    When soil pH increases from 5 to 8, aluminum insolubility removes it from the
    playing field. Accordingly, some of the phosphorus problems are obviated and the
    availability of calcium and magnesium is increased, but iron simultaneously precipitates
    out of the soil solution, limiting its availability. It is necessary to occasionally
    conduct soil tests to determine whether the soil pH has changed over time. Particularly,
    soils gradually acidify over time due to the removal of cations such as calcium,
    potassium, or magnesium either by leaching or uptake by plants, acid rain, or
    the reaction of certain nitrogen fertilizers in the soil (e.g., urea and ammonium
    nitrate). There are many other factors that can result in changing soil pH such
    as irrigation method, water quality, temperature, land use and management, the
    addition of nitrogen and sulfur fertilizers, etc. In warm, humid environments,
    soil pH decreases over time in a process called soil acidification due to leaching
    from high amounts of rainfall. In dry climates, however, soil weathering and leaching
    are less intense and pH can be neutral or alkaline. Hence, in order to prevent
    certain nutrient deficiencies, the soil pH should be approximately 5.5–6.5. Accordingly,
    the vines will not be debilitated and vulnerable to pest and disease attacks.
    Additionally, every year, the vines and grapes experience sequential growth cycles
    and phases so that every phase and stage has its own characteristics including
    the following: (1) Dormancy to Sprouting: In late January to early March the vines
    are awakened and pass the dormancy phase. During this change, the vines are pruned
    and begin to leak a colorless liquid, sometimes reddish; this is called the vine
    weeping phase. This phase usually lasts approximately three to four weeks. (2)
    Sprouting to Blooming: In April, when temperatures reach 10 °C, the sprouting
    phase begins. Buds swell and break, and initial small leaves appear. During this
    phase and during the subsequent blooming (flowering) phase, the vine is vulnerable
    to frost damage. During sprouting and flowering stages, water demand is low, so
    there are rarely water shortages. However, adequate moisture (water content) is
    required to promote bud break, root growth, shoot growth, and nutrient uptake.
    Water availability during the blooming stage is critical for continuous nutrient
    uptake, increasing fruitfulness, and potentially increasing berry size. (3) Blooming
    to Veraison: In late May, the blooming (flowering) phase occurs. The flowering
    consists of the flowers opening, resulting in fertilization. Lack of heat, excessive
    moisture, or lack of vigor of the plant can cause the flower to be incorrectly
    fecundated, and the grape bunches can have few berries (flowering shift). Adequate
    water during flowering can prevent a reduction in the potential harvest as a result
    of the reduced number of bunches. In July, the physiological maturity of the vine
    commences. The berries are still far from being mature grapes, but they have already
    started the ripening process. As August arrives, a phase called veraison (“Qora-Şirin”
    in the local spoken language) begins. In veraison, the berries’ greenish color
    changes to yellowish for white grapes and pinkish for red grape varieties. During
    the veraison phase, the acidity of the grapes decreases and the sugar amount is
    increased; sour berries become sugary, and their skin gradually softens. During
    the following growing seasons, the clusters are formed (after blooming), wherein
    adequate water is demanded. From fruit set to veraison, water is required for
    cell division, which determines berry size. Throughout this stage, the shoots,
    roots, and canopy are still growing, and the water demand is at its maximum level.
    Evapotranspiration values are also highest during this period and the volumes
    of replacing water can be high. This is the most crucial period to apply water.
    (4) Veraison to Harvest: During this stage, the maturation phase occurs. After
    veraison, a limited amount of water is preferable. Water is still required by
    the berries for cell expansion, but excessive moisture may promote shoot growth,
    hindering the vine’s acclimation process. Therefore, in order to achieve a balance
    between quality and productivity during the maturation phase, the amount of water
    has to be sufficient, but not too much. More importantly, during early September
    (before the harvest), the amount of sunlight and humidity between leaves and the
    soil surface (where the vines are lying down on the face of the Qana triangular
    prism) have the most striking effect on maturation and grape bunch plagues. Excessive
    sunlight can frazzle, scorch, and sear the grape berries. On the other hand, the
    humidity of this spatial zone beneath the leaves can result in plague and fungal
    diseases of the grape bunches, especially botrytis bunch rot (gray mold) and other
    fungal diseases such as black rot, sour rot, and downy mildew. Hence, in order
    to avoid such problems, the number of leaves has to be controlled by manually
    thinning the leaves or leaving them to remain. Near to harvest time from mid-September
    till mid-October, evapotranspiration values are much lower than earlier in the
    season, and root and shoot growth have essentially ceased. Hence, depending on
    the terrain characteristics (dry or wet), the grapes are ready to be harvested.
    It is extremely crucial to prioritize the harvesting operation according to the
    meteorological and geographical conditions of the vineyard. Importantly, uniform
    maturity is a factor that affects the quality of the raisin, and other by-products.
    The presence of hot or cold spots can result in variations in the degree of the
    fruit maturity. Moreover, the changes in the plant humidity throughout the entire
    growing season has a direct impact on the yield and grape quality. In case of
    water shortages and hot weather, the type of terrain is the most important factor
    that affects the vine moisture and grape maturity. The daily temperature profile
    is one of the most important environmental factors for grape quality, especially
    during the cold months and the month during the ripening phase. Real-time atmospheric
    temperature monitoring combined with historical data prediction could prevent
    frost effects. In the case of frost/freeze protection, monitoring air temperatures
    should be done throughout the vineyard, which is costly in terms of capital, labor,
    and operating costs. Additionally, the monitoring and analysis of humidity patterns
    for any phenological stage can also provide an effective way to avoid some crop
    pathogens, such as powdery mildew. Specifically, irrigation management is essential
    for high-quality grape production, and therefore it is necessary to measure soil
    moisture. Importantly, monitoring soil pH from blooming to veraison can notably
    provide conducive information about applying fertilizer to the vineyard. The WSN
    and PV technologies enable farmers to track the vineyard’s condition and progression.
    It is possible to compose an information database and use the data to support
    specific decisions and actions. Real-time data from a sensor network deployed
    in the field can be used by experts to make decisions such as the irrigation policy,
    to locate the spots of vineyards exposed to excessive sunlight, or to take the
    desired actions at the time when fungus or grape plagues are detected. Furthermore,
    WSN technology has other notable benefits such as being non-intrusive (with little
    to no human intervention) and being available for inexpensive prices. Additionally,
    because of some geographical factors such as the orientation and slope of the
    landscape, it is possible for vineyards located at different distances to have
    considerably different temperatures, humidity, etc. Thus, monitoring spatial variability
    of the conditions affecting the grapes can be feasible by deploying the appropriate
    sensor network. Lastly, WSN technology can be applied in vineyards to detect nuisance
    insects. In recent years, the region’s vineyards are suffering mainly from two
    kinds of insects, the cicada and the cricket. These insects damage grapevines
    primarily through their ovipositional activities such that vine growth is being
    affected adversely and severely. Cicadas especially have broken out, and the trees
    have been overwhelmed by the sheer numbers of the females laying their eggs in
    the shoots. Small trees have wilted and larger trees have lost small branches
    in some vineyards. These insects spend 17 years underground before crawling from
    the soil in late May and early June and immediately shedding their last immature
    skin to begin life as an adult. They immediately begin to sing, which they do
    incessantly from dawn to dusk. Their pathogenic existence and damage are concurrent
    with their strident singing sound (acoustic signals). By applying a WSN with its
    sensor nodes configured to sample audio signals and recording the sounds, it is
    possible to detect insects from their surrounding environment. 2.2. Drying building
    2.2.1. Drying process Generally, the processing and environmental data acquisition
    inside the drying buildings can be performed manually, visually, and occasionally,
    or it can be carried out using wired systems that are normally expensive and not
    flexible. Additionally, in regard to security and accessibility, these solutions
    are not secure or appropriate since it is necessary to hire workers to take measurements
    inside the fumigated and dangerously polluted environment and far inaccessible
    sections of the building. Uniform environmental conditions inside the building
    are required in order to maintain a high drying quality and, consequently, to
    produce raisins with higher quality. Thus, farmers must stay informed of the environmental
    factors and conditions inside the building such as humidity and temperature during
    the several weeks of the drying process. Therefore, the grape drying process inside
    the building can be monitored more easily and comfortably by deploying WSN technology
    and tools. 2.2.2. Fumigation process As was mentioned, the fumigation process
    is extremely sensitive and hazardous. If the fumigated amount of SO2 (dioxide
    sulfur) is low, the process will be useless and futile. On the other hand, excessive
    fumigation can ruin and vitiate the berries. Meanwhile, visually or manually monitoring
    the process is extremely dangerous to the workers’ health. Here, remote monitoring
    is the best solution. Consequently, by implementing WSNs the visual monitoring
    issue can be obviated without further ado. 3. Relevant research review In recent
    decades, there have been many different investigations using and implementing
    WSNs in various crop production applications. In regard to precision horticulture,
    López Riquelmea et al. (2009) presented the topology of a deployed network using
    four types of nodes (Soil Mote, Environmental Mote, Water Mote and Gateway Mote)
    to measure various soil properties such as temperature, volumetric moisture content,
    and salinity. The system was successful for the ecological monitoring of cabbage
    crop for the entire growing season with the required precision. Hwang et al. (2010)
    proposed an agricultural environment monitoring server system for monitoring information
    of an outdoor agricultural production environment utilizing wireless sensor network
    (WSN) technology. The proposed server system collected environmental and soil
    information outdoors through WSN-based environmental and soil sensors. Garcia-Sanchez
    et al. (2011), deployed WSNs in order to integrate video-surveillance and data-monitoring
    over distributed crops. They developed wireless node prototypes providing agriculture
    data monitoring, motion detection, camera sensors and long-distance data transmission.
    In another study, Jiang et al. (2013) reported an application of a web-based remote
    agro-ecological monitoring system for observing spatial distribution and dynamics
    of Bactrocera dorsalis (phytophagous insects) in fruit orchards. To achieve real-time
    system management and data inquiry, a remote control interface and a web-based
    decision support program was implemented to allow system administrators and users
    to remotely access the monitoring report of their farms via the internet from
    virtually anywhere. Srbinovska et al. (2015) carried out a research project on
    environmental parameter monitoring using wireless sensor networks, which was deployed
    in a pepper vegetable greenhouse. Their presented WSN system consisted of sensor
    nodes and a base station, which was used for measurement and data collection of
    parameters such as temperature, humidity, and illumination. Moreover, other studies
    have been conducted applying WSN technologies in agricultural services such as
    soil water content sensing (Pan et al., 2013, Sun et al., 2014), crop disease
    risk evaluation (Das et al., 2009, Rossi et al., 2010), fertilization, pesticide
    spraying (Santos et al., 2014), crop temperature sensing (O’Shaughnessy et al.,
    2013), remote sensing and control of an irrigation system (Kim et al., 2008),
    autonomous closed-loop zone-specific irrigation (Goumopoulos et al., 2014) and
    valve control (Coates et al., 2013, Dobbs et al., 2014), automated irrigation
    management based on the water content and temperature of soil, humidity, temperature,
    wind speed, and irradiance (Nikolidakis et al., 2015), and frost protection and
    dew condensation prevention (Park and Park, 2011, Pierce and Elliott, 2008). Specifically,
    for a precision viticulture (PV) application, researchers have conducted outstanding
    projects using WSNs. Burrell et al. (2004) presented a study on the potential
    use of sensor networks to aid work in vineyards. They described a variety of sensor
    network configurations and applications that can address different priorities
    of the vineyard. Beckwith et al. (2004) implemented a 65-node multi-hop WSN in
    a vineyard for six months. The collected information was used for addressing two
    important parameters of heat summation and potential frost damage in wine production.
    Morais et al. (2008) used a ZigBee multi-powered wireless acquisition device for
    remote sensing applications in PV. They designed a platform for that purpose called
    MPWiNodeZ, as a ZigBeeTM network element that provides a mesh-type array of acquisition
    devices for vineyards. Shah et al. (2009) designed a PV framework in the vineyards
    at Nashik, Maharashtra, India. They deployed wireless sensor nodes equipped with
    soil moisture, ambient temperature, relative humidity, and leaf wetness sensors.
    Data collected by the sensors were wirelessly transferred in a multi-hop manner
    to a base station node (approximately 700 m away from the mote) connected with
    an embedded gateway for data logging and correlation. The embedded gateway base
    station performed elementary data aggregation and filtering algorithms and transmitted
    the sensory data to an agri-information server via GPRS. Additionally, Matese
    et al. (2009), designed a remote real-time system for monitoring and collecting
    micrometeorological parameters in a vineyard. The system comprised a base agro-meteorological
    station (Master Unit) and a series of peripheral wireless nodes (Slave Units)
    located in the vineyard. In this project, the Master Unit stored all of the Slave
    Unit data and, using a GSM/GPRS device, sent all the collected data to a remote
    central server. In 2011, an autonomous intelligent gateway infrastructure for
    in-field processing in precision viticulture was designed and installed in a vineyard.
    The infrastructure, named iPAGAT (Intelligent Precision Agriculture Gateway),
    ran an aggregation engine that fills a local database with environmental data
    gathered by ZigBee WSNs and it possessed embedded communication capabilities such
    as Bluetooth, IEEE 802.11, GPRS (for accessing both gateway and remote data by
    local and remote users), and the internet, and it ran site-specific management
    tools using authenticated smartphones (Peres et al., 2011). Accordingly, Fernandes
    et al. (2013) utilized this infrastructure (iPAGAT) and introduced a framework
    for WSN management for PV and agriculture based on IEEE 1451 standard. The framework
    consisted of a ZigBee end device (sMPWiNodeZ), an IEEE 1451 WTIM (Wireless Transducer
    Interface Module), and an IEEE 1451 NCAP (Network Capable Application Processor)
    that acts as a gateway to an information service provider, and a WSN coordinator.
    More recently, Reiser et al. (2017) designed and utilized a small 4-wheel autonomous
    robot that assembled the data from nodes distributed in a vineyard in order to
    overcome the limited transmission range of spatially separated nodes of a wireless
    sensor network (WSN). The current innovative systems and projects applying WSN
    technology to vineyards have their own merits for solving the multiple challenges
    existing in the modern vineyards. However, there are some factors that should
    be considered, improved, and ameliorated such as • Cost: The existing research
    and development state for selecting and implementing the components are considerably
    expensive. Specifically, in the traditional and deprived regions such as South
    Azerbaijan (wherein the devices are imported from foreign countries), the devices
    are not affordable to the end-users. For applications in such regions, reducing
    the system cost is utterly urgent. Thus, a low-cost application design is extremely
    necessary for selecting and implementing sensor nodes and hardware. • Energy-efficiency:
    In any WSN-based system, energy management is one of the most challenging issues.
    The amount of energy consumed by sensor nodes can be reduced by reducing the amount
    of communication in the network. This can be done by designing different system
    components and algorithms, or alternatively, by considering other potential energy
    harvesting solutions such as solar power, wind power, biomass, vibrations, power
    banks, and so on. • Complication: The hardware components and designed platforms
    used in the proposed WSN systems are sophisticated and therefore should be simplified
    and easy to use. In this manner, in order to ensure ease of operation for the
    end-users who are typically farmers and non-technical persons, human–computer
    interaction issues such as accessibility and usability should be considered in
    designing and developing the system’s architecture. • Traditional vineyard issues:
    Unlike in developed countries, the traditional vineyards in the region are partitioned,
    smaller, and personalized farming lands. Additionally, the structure of the vineyards
    is completely different from the modernized trellis ones. Thus, a specific and
    suitable deployment architecture is needed. • Raisin quality: Virtually all of
    the existing research projects are concerned with grape and wine quality only.
    However, the characteristics of grapes (such as sugar level, alcohol level, acidity,
    etc.) that are grown for wine are completely different from the grapes that are
    produced for raisins. To our knowledge, there is not any research on traditional
    vineyards and grape drying (raisin producing) structures. The aim of this research
    is to integrate and equip the traditional vineyards with simple and easily used
    architecture, low-cost devices, and low powered components, which are more felicitous
    and tailored to the need of the region’s farmers. 4. Materials and methods In
    this section, the implementation of the proposed system is described. First, the
    hardware-software design of the system, the communication protocols, and the topology
    of the system are presented. Finally, the energy issues and implementation details
    are explained. 4.1. Architecture design The hardware architecture of the system
    resembles the Master/Slave configuration (Fig. 3). The Slave Unit (SU) is composed
    of a series of wireless motes located in the various locations of the vineyard
    with their sensors for monitoring meteorological and environmental parameters.
    The SU utilizes wireless technology to communicate and transmit the data to the
    Master Unit (MU). The MU is a base station, i.e., the gateway, which collects
    data from the entire vineyard, and then stores and processes them. Additionally,
    the web page designed as the management software for the transmission function
    is used to provide a connection between the operator and the gateway. Other software
    is used for designing the database and hardware programming and is detailed in
    the following sections. Download : Download high-res image (367KB) Download :
    Download full-size image Fig. 3. Gateway and a typical sensor package (Mote).
    4.1.1. Hardware architecture 4.1.1.1. End devices (Motes) Each End Device (ED),
    or mote consists of one or more sensor and module inputs. Motes are composed of
    a processor, a radio module, a power supply and one or more sensors mounted on
    the mote itself or connected to it (López Riquelmea et al., 2009). The gateway
    sends a data reading request to the end device and consequently, the end device
    responds with the value from the sensors. The ED consists of two interface parts:
    the sensor and the wireless communication interfaces. The interfaces are imbedded
    in Arduino Board and are included as a sensor shield and nRF24L01 module for sensing
    and sending the data, respectively, so that the sensor interface receives the
    data from the sensors and sends it to the gateway via the wireless communication
    interface (nRF24L01 module). Therefore, the end device’s components are Arduino
    boards, modules, and sensors: Arduino Board: Arduino is an open-source project
    that creates microcontroller-based kits in order to build digital devices and
    interactive objects, whereby they sense and control physical devices. The main
    component of an Arduino board is an Atmel 8-, 16- or 32-bit AVR microcontroller
    with other synchronized components that provide programming and collaboration
    with other circuits. The Arduino project provides a cross-platform application
    written in the Java programming language, named Arduino’s integrated development
    environment (IDE). IDE is a programming environment in which the codes (sketches)
    are written, compiled and uploaded into the embedded microcontroller. The Arduino
    series that was used in this project was the Arduino Uno, Nano, and Micro, which
    are based on the ATmega328P and ATmega32U4 microcontrollers’ board. Modules: Various
    sensor modules are connected to a mote (ED) in order to acquire the data and transmit
    them wirelessly to the base station (gateway), where the data are stored. The
    modules utilized in this work include nRF24L01 module, VS1003 acoustic module,
    GSM module, and U-blox NEO-6M module (GPS receivers). Sensors: To monitor and
    acquire real-time data from the field, multiple types of sensors were integrated
    into the data acquisition network such as DHT11 digital temperature and humidity
    sensor, TGS 813 sensor for SO2 gas, PIR motion sensor, soil pH sensor, and EC-5
    soil moisture sensor. 4.1.1.2. Gateway architecture An Intel Atom processor with
    a 1.83 GHz has been used as the motherboard of the gateway (Fig. 3). This mini
    motherboard works with x86 architecture, wherein it supports all the software
    that can be installed on the real windows. Its size is 10 × 10 cm and it has 2G
    RAM and 32G eMMc. Other features of the device have been detailed in Table 1.
    Table 1. Detailed features of the coordinator motherboard. Features Details CPU
    Atom Chipset Intel atom processor z3735f (2M cache up to 1.83 GHz) Cache Memory
    2 Mb RAM 2 G Storage Emmc 32G GPU Intel HD Graphics 311.00 MHz Wi-Fi Yes Bluetooth
    Yes LAN 10/100 Mb Video Output HDMI Port 4xUSB2.0 Operating system Windows 10
    Dimensions (10 cm × 10 cm) Power 5 V 3 A The Mini PC is connected to the peripheral
    motes through the receiver circuit. The receiver circuit’s components include
    Arduino UNO, Arduino Nano and Micro, a GSM module, an NRF24L01 receiver module,
    a power supply, M2596 (regulator), an external sound card, and antennas. The gateway
    is the heart of the proposed system, and it runs all the management operations
    such as managing the received and transmitted data, optimizing the energy consumption
    in the motes, pooling the motes, and managing the alarms. The gateway consumes
    a 5 V–2 A energy source, and it uses mains electricity. However, two rechargeable
    batteries are also used in the case of emergencies. To manage the limited energy
    capabilities and consequently prevent the system’s shutdown, a “pooling” technique
    was ingrained into the gateway architecture. Pooling is one of these methods,
    which functions based on an on-demand approach. In the continuous approach, the
    motes send the data periodically according to the defined amount of time, without
    any management techniques. In this form of operation, the motes are working in
    continuous mode and, since the maximum amount of energy is consumed by the receiver
    and transmitter modules, the energy consumption and lifetime of the network are
    affected. However, the system can be designed based on on-demand measurements,
    as well. In this method, the gateway inspects the mote data in order to shift
    their sleeping mode to the active mode and actuates them to send their data to
    the gateway and then return to the sleeping mode. Additionally, the time of the
    inspection operation can be adjusted according to the different seasons and conditions.
    For example, inspection can be done in minute, hourly, or daily rates instead
    of every 250 ms. Accordingly, the energy-efficiency and performance of the system
    can be optimized. In general, the gateway functions as the sink node of the WSN
    system, whereby the gateway’s Mini PC is connected to the sink motes (via the
    receiver circuit) and monitoring center (Fig. 3). The gateway also executes other
    duties such as data aggregation, real-time warning system, web access with Ethernet
    cable and Wi-Fi, network management, and environmental data resource. 4.1.2. Software
    design In this section, all the software specifications that were used in this
    project are described. In Fig. 4, the flowchart of the end device and the gateway
    function is presented. Furthermore, the functional description of the software
    architecture of the gateway and the motes (end devices) is presented in Fig. 5.
    Download : Download high-res image (133KB) Download : Download full-size image
    Fig. 4. The function flowcharts of (a) End Device (Mote) and (b) Gateway. Download
    : Download high-res image (221KB) Download : Download full-size image Fig. 5.
    The functional description of the gateway’s software architecture and the peripheral
    motes. Software specifications include the following: (a) Microcontroller: The
    Arduino IDE was used as a code editor and code burner. By connecting to the Arduino
    hardware, the IDE (Integrated Development Environment – or Arduino Software) makes
    it feasible to upload programs and communicate with them. (b) Web-Server: A simple
    HTML/AJAX running on the gateway was used in this work. Using AJAX, web pages
    can be updated asynchronously by exchanging data with a web server behind the
    scenes. In other words, updating parts of a web page can be executed without reloading
    the entire page. The XAMPP application was used for the web server, which is comprised
    chiefly of the Apache HTTP Server, MySQL database, and interoperates for scripts
    written in the PHP programming language. (c) On-line warning system: The warning
    system is a software that is installed within the overall system. The online warning
    system designed for the project is a system based on a webpage, which works according
    to the defined threshold of parameters such as temperature, humidity, soil pH,
    soil moisture, motion, and gas concentration level. The codes were written in
    Brackets IDE with HTML and JavaScript. In this system, an alarm is sent to the
    operator via the webpage. Accordingly, the operator (farmer or manager) will manually
    or automatically take appropriate actions in order to obviate the problems. Additionally,
    the system stores the alarms in the database, and by using the designated lights
    on the webpage, warns the operator. Furthermore, the proposed system is able to
    send these alarms to the operator via SMS. To perform this kind of communication
    and connectivity, a SIM900A module was used on the gateway board. SIM900A module
    is a simple Arduino GSM module for sending SMS. The module supports communication
    in a 900 MHz band. Programming of this module, like other modules such as nRF24L01,
    is performed in Arduino IDE. Hence, the online warning system alarms the operator
    via SMS and the webpage. The system generates alarm signals in order to warn of
    probable frost, likely disease, irrigation schedule, pH abnormality, an anomaly
    in fumigation and drying processes, and motion changes. The online warning system
    checks the data from the gateway in order to compare the sensor readings stored
    in the database with the limits defined by the minimum and maximum amounts of
    parameters for every measured condition such as frost, excessive fumigation and
    so forth. While the evaluated parameters are exceeded or declined, a signal (alarm)
    is sent by the system to the operator via SMS and the webpage. For instance, if
    the air humidity reaches 95% and air temperature decreases to 3 °C, an automatic
    alarm is generated and sent via SMS and webpage. The operating rule codes are
    uploaded to the gateway, which contains the defined threshold values of the parameters
    that are used by the online warning system in order to send the alarms. For example,
    the “frost Prediction” alarm can be scripted as the following schematic algorithm
    (rule): If (Day > 80 && Day < 120) {  if (Temp < 3 && Hum > 95)   {   char number
    [ ] = “0914∗∗∗∗∗∗”;   char message [40] = “Frost Prediction”;   sms.SendSMS (number,
    message);  } } (d) Database: MySQL programming language was used to run on the
    client computer. The software architecture of the gateway is constructed as a
    relational database management system. Similar to the hardware and software of
    this system, the database architecture has been designed more simply. Fig. 6 shows
    the structure of the designed database as part of the employed software. The database
    system functions in a real-time manner. While the system operates based on the
    continuous mode, the system receives real-time data (every 250 ms) and stores
    them in the relevant tables in the database. However, in the on-demand mode, the
    system receives data according to the operator’s request. While the data are stored
    in tables, their values are relationally compared with the threshold values of
    the warning conditions, which are specified in the alarm table. Therefore, once
    each condition occurs, the system informs the operator by means of the provided
    methods (SMS or webpage). In Fig. 7 the functional flowchart of the overall system
    is depicted. Download : Download high-res image (549KB) Download : Download full-size
    image Fig. 6. The database structure of the gateway. Download : Download high-res
    image (110KB) Download : Download full-size image Fig. 7. The functional flowchart
    of the overall system. 4.1.3. Connectivity capabilities In this project, the nRF24L01
    module was used for communication and transmitting data between the EDs (motes),
    sink motes, and the gateway (base sink). The standard SPI protocol and pins (CSN,
    SCK, MOSI, MISO), with the additional CE (for controlling the RX/TX and standby
    modes) and IRQ signals (for informing the SPI master about the completion of a
    packet reception/transmission) are used by this chip. To ensure a smooth data
    flow between the radio front end and the system’s MCU (Master Control Unit) or
    the gateway, internal FIFO manages the data flow. Furthermore, communication between
    the gateway and the monitoring center is executed with Ethernet cable and Wi-Fi.
    Communicational protocols used in this proposed monitoring system consist of the
    two following categories (Fig. 8): (1) The connection between the sink motes (of
    the EDs), the receiver circuit, and the Mini PC of the gateway: This connection
    between the sink motes of the EDs, and between sink motes and the receiver circuit,
    is performed based on SPI protocol. Using this protocol, it is possible to manage
    hardware-software properties (such as baud rate, bit rate, configuration register,
    etc.), to synchronize all EDs, sink motes (N1, N6, and N11 motes), and the gateway
    and to ensure receipt of the data (ack or nack). Moreover, the connection between
    the receiver circuit and the Mini PC of the gateway is performed using USB protocol.
    The USB is also a power resource for modules and Arduino boards. The C# coding
    language was used for port scanning functions, whereby the Mini PC scans the data
    (received by the receiver circuit), puts them in the variables, and does the following
    operations: (a) using an Ethernet interface (or Wi-Fi), sends the data to the
    monitoring center and (b) stores the data in the database in order to access them
    as it is needed. (2) The mechanisms and protocols between the gateway and monitoring
    center: Ethernet port (using the network cable) and Wi-Fi were used for this kind
    of connectivity in order to enable the users to access the gateway. In addition,
    SMS sending and Bluetooth link capabilities are provided. Furthermore, the data
    aggregation task is performed simply and robustly. The gateway receives the EDs’
    transmitted data and stores them in the database and the relevant tables. Download
    : Download high-res image (93KB) Download : Download full-size image Fig. 8. Diagram
    of connection methods between the hardware. 4.1.4. Topology Topology determines
    how the devices are interconnected. A star topology was used in this investigation.
    In this kind of topology, the gateway functions as a central processing unit so
    that it gathers sensor readings from all EDs. In a star topology, every sink mote
    is connected to a central node (gateway or MCU), which acts as a channel to transmit
    messages. 4.2. Energy Sensing, computation, and radio operations such as receiving
    and transmitting are three types of activities that consume the majority of the
    power in a mote. Since radio operation activity uses the majority of the power,
    an energy efficient plot should be concentrated on decreasing the amount of time
    devoted to receiving and transmitting operations. The power consumption of a mote’s
    receiving activity is higher than the transmitting activity. There are two modes
    of receiving and transmitting, wherein each mode has a different energy consumption
    level and has a direct effect on the network’s durability. (1) Continuous mode:
    In this method, the motes continuously send the data, and they have to be active
    and respond to the gateway’s requests. Obviously, in this mode, the lifetime of
    the motes and network will be decreased. (2) On-demand mode: During this mode,
    the motes are in the sleep condition. When the motes receive a request from the
    gateway they turn on and, having responded to the request, they return to the
    sleep mode. Accordingly, the network traffic is reduced because of the decrease
    in the sampling frequency. Hence, this mode has less energy consumption than the
    continuous mode, and the network’s lifetime is increased. Since the energy consumption
    in the WSN is the most challenging issue and the battery is a more common source
    of energy, using the best mode for optimizing consumption of energy is inevitable.
    4.3. Stipulation and deployment Before installing the system in the harsh and
    natural conditions of the vineyards, the system was tested under laboratory conditions
    between December 2015 and February 2016, in order to assay the accuracy and channel
    resolution of the motes and gateway boards. Subsequently, all the hardware were
    calibrated according to their data sheets and installed in the WSN. All the executable
    codes were manually downloaded into the associated microcontrollers of the motes.
    A unique identifier was attributed to each mote. Both the source and binary codes
    were checked in order to detect and correct faults and errors. The energy source
    for the motes was provided in two methods and every method was evaluated and tested.
    For the EDs, two means of energy supply were used and tested: (1) rechargeable
    common batteries and (2) rechargeable lithium batteries. Since the power bank
    was utilized in the second method, the system was able to have an approximately
    one-month duration. However, for the gateway, DC power was used. Since the gateway
    had access to unlimited electricity, it was able to work permanently. To create
    wireless connectivity, nRF24L01 was used. This module can transfer data in a 1600 m
    distance range and has “auto ack” capability, which provides certainty in receiving
    the data. For testing this module, one thread of data was sent 1000 m from the
    transmitter and on the other end, the data was received correctly without errors.
    Finally, by adding this module to the project’s board, the data were received
    singularly and wholly. Accordingly, the sensor motes were physically located in
    the fields. 4.3.1. Vineyards Having carried out the tests, the system components
    were implemented in the vineyards. Three disparate and distant experimental vineyards
    were used in the project (Fig. 9). The climates of these three vineyards were
    different. The climate of the first vineyard, named Yovşanlıq, is dry, the second
    vineyard (Mıncıqlı sector) is a medium climate, and the third one (Minə) is semi-humid.
    The cultivated grapes of the vineyards were white and red Thompson seedless grapes.
    However, the majority of the grapes were white (more than 98%). The area of the
    Minə, Mıncıqlı, and Yovşanlıq vineyards is 130 × 138 m2, 130 × 141 m2, and 210 × 132 m2,
    respectively. The vine trees in every vineyard were pruned during the spring.
    As is shown in Table 2, five motes were implemented in each the Minə and Mıncıqlı
    vineyards, and seven motes in the Yovşanlıq vineyard were in the desired spots
    (totally 17 motes). To protect the motes from rain and environmental damages,
    a package was designed to plug in the mote’s components. The motes were fastened
    to a bar with the height of 0.5 m to keep soil sensors close to both the ground
    and vines. The gateway was placed outside the vineyard in the monitoring site
    in order to evaluate the system’s performance in term of range, robustness, and
    flexibility and to assess the microclimatic variability corresponding to the management
    practices within the various areas. Download : Download high-res image (279KB)
    Download : Download full-size image Fig. 9. Network layout of a WSN system used
    in the vineyards. P1, P2, and P3 represent Yovşanlıq, Minə, and Mıncıqlı vineyards,
    respectively. Table 2. Sensor network architecture that was implemented in the
    fields. Zone Mote ID Measurement Sensor board Distance Monitoring room 1 0 Gateway
    – – Minə 5 101–105 Temperature, Humidity Position, Motion, pH Arduino 1400 m Mıncıqlı
    5 106–110 Temperature, Humidity Position, Motion, pH Arduino 1100 m Yovşanlıq
    7 111–117 Temperature, Humidity Position, Motion, pH Arduino 950 m Fumigation
    3 118–120 Gas Arduino 100 m Drying 10 121–130 Temperature, Humidity Arduino 100 m
    4.3.2. Drying building Thirteen motes were installed within the drying building,
    with three of them being used for the fumigation process and the remaining ten
    motes used for the drying process. For the fumigation process, just one sensor
    was used (SO2 gas sensor), but for the drying process, two sensors including humidity
    and temperature were utilized. Once the field tests, installation, and implementation
    processes were completed, the motes were activated and the WSN system was initiated.
    The data from each mote were received by the gateway (base station). Subsequently,
    the data were stored in a database in order to be processed and depicted in the
    web page. The updated data obtained from the vineyards were extracted and presented
    by the web page. The operator or vineyard owner exploits the provided information
    to make the right decisions and takes appropriate actions to handle and manage
    the problems and issues relevant to the vineyards. All the data received from
    the motes were stored in textual files in the database and were presented in the
    webpage in the monitoring center. This webpage is the software of the monitoring
    system, which is used for management. Storing the data in a text file in the database
    makes it possible to create graphs of hourly, daily or longer interval data reports
    and trends to analyze the environmental variables. 5. Experimental results and
    discussions The designed system was user-friend and easy to use. The web page
    (Fig. 10, Fig. 11) provided the following main functions: real-time data, historical
    data, mote management, and user management. The user can observe the data from
    each sensor of the motes in real-time and access the historical data by selecting
    the time range for acquiring the data with a simple point-and-click. In addition,
    the mote management functions allow the user to check the status of the network
    and actual motes. By using this option, the user can check the condition of each
    mote in order to replace batteries or to troubleshoot the technical faults and
    re-deploy the troubled motes. The user can reach to every mote and observe each
    sensors’ data by means of the displayed charts and numerical presentations. Moreover,
    a user carrying smart devices such as a smartphone, tablet, or PDA (via SMS and
    Wi-Fi) can monitor the state of the field and the in situ sensors. Download :
    Download high-res image (268KB) Download : Download full-size image Fig. 10. Web
    page, displaying the vineyard motes (from N1 to N17). Download : Download high-res
    image (286KB) Download : Download full-size image Fig. 11. Web page, displaying
    the drying structure motes (from N18 to N30). In the proposed system, adding new
    motes can be done without further change or expense. Compared to the other proposed
    systems, changing the hardware-software architecture of the current system is
    not costly because it is not necessary to upgrade hardware boards or to change
    their programming logics. The gateway, despite having lower software-hardware
    complications, was able to operate all the desired functions and tasks in the
    traditional vineyards, and it monitored the defined warning conditions accurately.
    Furthermore, using a Mini PC as the motherboard of the gateway obviated traditional
    systems’ limitations. One of the conventional methods of designing a gateway board
    is to utilize an Ethernet shield or the RS232 connector, which has some disadvantages.
    For example, an Ethernet shield has a lower speed, uses an SD card for saving
    the data and is limited in connection methods to the monitoring center. By using
    the Mini PC, these limitations were eliminated. Particularly, using the Mini PC
    in the proposed system was beneficial for enhancing the connection and communication
    capabilities and performance speed, reducing the SDOF (Single Point Of Failure)
    malfunction potentiality (by installing the security software), being used as
    the monitoring center (because of having of the HDMI interface), having remote
    access desktop capability (using remote access software tools such as TightVNC
    and so on), installing various desired software (due to possessing the Windows
    operating system), and getting access to the database comfortably and speedily.
    Additionally, the operating system of the Mini PC is flexible and easily usable.
    Its OS toolsets are easily extensible to user’s specific needs. Moreover, the
    communication stack in the default libraries has the considerable characteristics
    of usability, simplicity and resource efficiency so that the users can use it
    without extra complexity. External memory support for user data storage in the
    Mini PC is provided. The users do not have to worry about sensor data—they are
    depicted automatically. Finally, all the required software can be installed easily.
    The tests pertaining to the energy consumption indicated that using common batteries
    makes the motes stable for one week. However, as shown in Fig. 12, by using an
    on-demand approach, the energy consumption of the batteries was decreased and
    their lifetime was increased. Fig. 12 shows a typical daily and weekly energy
    consumption of the utilized batteries with the continuous mode vs. the same application
    using the on-demand mode. As depicted in the figure, in comparison with the continuous
    mode, the lifetime of the system was increased by 43.75% using the power source
    with the on-demand mode. Additionally, when utilizing the power bank facilities,
    the lifetime of the batteries increased to one month. During continuous weeks
    of monitoring, every battery’s condition was monitored by the operator using the
    webpage in order to recharge or replace the weak batteries. Download : Download
    high-res image (145KB) Download : Download full-size image Fig. 12. Typical daily
    and weekly energy consumption of the used power supplies with continuous mode
    versus on-demand mode. The results regarding the connectivity showed that the
    nRF24L01 modules were easily able to perform data transference with a 1600 m distance
    range. In addition, instead of using overpriced boards, these low-cost modules
    were utilized, and by modifying and changing their baud-rates and registers, it
    was possible to provide the modules’ performance analogous to the costly ones.
    The results of the vineyards and drying process monitoring are detailed below.
    5.1. Vineyards The developed system was deployed in three vineyards located in
    Qurijan (Qurucan) village in South Azerbaijan. The system was used from March
    to November 2016. The farmers were using traditional irrigation methods within
    the vineyards. The prime objective of utilizing this technology was to provide
    predictive information about the gardens in order to improve the quality of the
    grapes and raisins. The measured parameters were humidity, soil pH and moisture,
    movement detection, GPS, and temperature. Data acquisition processes were mainly
    divided into the following seasons: (1) Spring (lasting from March to June): During
    April, temperature and air humidity sensors were simultaneously activated in order
    to monitor variations in temperature and predict the frost. The sensors were demanded
    to monitor nocturnal and diurnal variation of the temperature and humidity from
    20o’clock until 8o’clock in the morning (of the next day). Fig. 13 depicts two
    typical nightly and daily variation of the temperature and humidity in the vineyards.
    Three motes were selected from each vineyard (N2, N7, and N12 motes). It was observed
    that the hours near to dawn (between 4 and 6o’clock) are the hours most at risk
    of frost damage. This means that during these hour intervals, the vineyards are
    extremely susceptible to frost harm, which resulted from “radiation freezes”.
    Radiation freezes occur on calm, clear nights (without any clouds) when the heat
    from the ground radiates upward. Since the cold air is heavier than the warm air,
    it settles in areas of lower elevation. As the cold air stays low and the warm
    air rises, the air becomes stratified and a temperature inversion forms. Additionally,
    as seen in Fig. 13, before the break of dawn, the air humidity reaches its maximum
    range in the vineyards. Simultaneously, an increase in air humidity and a reduction
    in temperature can precipitate frost occurrence. The data from the sensors showed
    that Minə vineyard was the most vulnerable vineyard to the frost harm. Hence,
    it was suggested that the farmer install and apply frost protection equipment
    and methods during April (of every year) within the vineyards. Download : Download
    high-res image (180KB) Download : Download full-size image Fig. 13. Two typical
    nightly and daily variations in temperature and humidity in the vineyards. During
    this season, other sensors including humidity, PIR, GPS, and acoustic modules
    were active. A GPS sensor was installed on just one end device of every vineyard
    (N1, N6, and N11). The PIR sensor was utilized to protect the implemented end
    devices from intruders such as wild animals. During the season, no intruders were
    observed. Additionally, the acoustic modules were activated during May in order
    to record the sounds of depredating insects. During this month, the acoustic modules
    were activated daily around lunchtime. In Yovşanlıq vineyard, cricket songs were
    detected. Accordingly, insecticides were deployed to the vineyard in order to
    extirpate the nuisance insects. Furthermore, during this season, the pH sensors
    were turned on weekly in order to record soil pH variations. (2) Summer (June
    to September): During this season, soil pH, soil moisture, temperature, and humidity
    sensors were active. Concurrently, acoustic modules were actively used. During
    these consecutive months, soil moisture records provided updated data in order
    to irrigate the vineyards. As shown in Fig. 14, continuous monitoring of the soil
    moisture level provided the data for scheduling irrigation times within each vineyard.
    The peak points in every linear graph indicate the times that the vineyards were
    irrigated. Minə and Mıncıqlı vineyards were irrigated five times, but the Yovşanlıq
    vineyard was irrigated six times. The data indicate that because of the dry climate,
    water evaporation speed within Yovşanlıq vineyard is greater than in the other
    two vineyards. However, it is possible to accumulate and save moisture content
    by increasing irrigation duration and frequency. In addition, it was observed
    that while the irrigation duration increases, the moisture content also increases.
    This correlation demonstrates that longer irrigation times lead to the deeper
    penetration of water and higher moisture content. Download : Download high-res
    image (128KB) Download : Download full-size image Fig. 14. Continuous monitoring
    of the soil moisture and soil pH. In addition, during early June it was observed
    that the soil pH of Mıncıqlı was trending towards alkalinity (Fig. 14). To lower
    the pH to 6.5 and 6, a urea fertilizer was used in the vineyard. As depicted in
    Fig. 14, applying a urea fertilizer had a significant effect on maintaining the
    desired soil pH level in Mıncıqlı vineyard. Furthermore, zonal (beneath leaves)
    humidity sensors were also active during the summer months. Zonal humidity (spaces
    under the leaves) is extremely critical during August and September. As presented
    in Fig. 15, in Minə and Mıncıqlı vineyards, the zonal humidity was observed to
    be increased on 4 and 7 August, respectively, during which the farmer received
    the warning alarms via SMS. To avoid being exposed to probable fungal diseases,
    the leaves of the vines were thinned by the employed artisans. However, for Yovşanlıq
    vineyard, since the air temperature was immoderate, in order to protect the grape
    bunches from sun burning damage, the leaves were not thinned. Download : Download
    high-res image (121KB) Download : Download full-size image Fig. 15. Zonal humidity
    and temperature. It has been found that temperature and humidity are the most
    crucial parameters for improving the quality of the final products. In the cases
    of Minə and Mıncıqlı vineyards, humidity had the highest effects, whereas in Yovşanlıq
    vineyard, the temperature had the paramount importance. Another conducive parameter
    with a direct impact on the quality of the grapes and raisins is the sugar level
    of the berries. Since the WSN reported excessive zonal humidity (between the leaves
    and the face of Qanas) of Minə and Mıncıqlı vineyards, the leaves were trimmed
    in order to increase the amount of sunlight received by the vines. Consequently,
    the sugar level, flesh, and volume of the mature berries increased. However, because
    of the inherently dry climate of Yovşanlıq vineyard, the leaves of the vines were
    not trimmed. Accordingly, the schedule of harvesting time was determined and postulated
    by the system, resulting in the farmer first harvesting Yovşanlıq vineyard in
    early September and Minə and Mıncıqlı vineyards in late September. 5.2. Drying
    structure The WSN system was used during October in order to monitor the fumigation
    and drying processes. In the fumigation process, three motes were utilized in
    every round of fumigation. To keep even and uniform diffusion, circulation, and
    concentration of the SO2 gas through the grape bunches, the motes were used in
    three disparate sections of the fumigation chamber inside the covering nylon.
    The motes were used in every round of fumigations. Using the WSN system, direct-close
    inspection and monitoring procedures were eliminated. Fig. 16 displays continuous
    monitoring for a typical round of the fumigation process. The webpage provided
    continuous monitoring via the relevant diagram and warning system. Additionally,
    the SMS module sent alarms in case of inordinate and lesser amounts of SO2 gas.
    As seen in Fig. 16, after 30 min, the amount of SO2 gas was decreased to 1392 ppm
    (57,907.2 µmol m−3). The operator received this inconvenient insufficiency by
    SMS, and, subsequently, an amount of sulfur powder was added to the sulfur container
    inside the chamber. This calibrated amount of sulfur powder was consumed in the
    next round. Download : Download high-res image (96KB) Download : Download full-size
    image Fig. 16. Continuous monitoring for a typical round of the fumigation process.
    After every fumigation round, the nylon was unwrapped in order to let atmospheric
    air circulate through the grapes inside the building. One mote was implemented
    between every two columns in the back side beyond the hung grapes (between the
    wall and suspended grape bunches), where it is not approachable or accessible
    (Fig. 2). Generally, 10 motes were used inside the building during October and
    November in various locations of the drying building (structure). The humidity
    and temperature of the inside building were continuously monitored. During late
    October, since the air temperature plummeted in the region, the online warning
    system sent a rot prediction alarm via SMS and webpage. Subsequently, the raisin
    producers avoided the problem by providing a constant ventilated hot air flow
    inside the drying structure at 60 °C. Finally, in November, all the produced raisins
    (at 18% moisture content level) were gathered and stored in the storage room.
    The result showed that applying the WSN monitoring system in the vineyards and
    drying structure increased the quantity and quality of the grapes and final products.
    Particularly, grape and raisin production yield was increased 4 t/ha compared
    to the yield of the year before. Grape yield depends greatly on cultivation and
    climatic conditions and varies from one variety to another. This leads to a wide
    range of yields across the world: from 6 to 12 t/ha in France to 20–30 t/ha in
    the USA, especially in California (http://www.oiv.int/public/medias/4911/fao-oiv-grapes-report-flyer.pdf).
    According to the Ministry of Agriculture, the average yield of grape production
    in Iran is approximately 12 t/ha. In comparison with the average national yield,
    the yield was nearly increased to 6 tons per hectare (0.544 kg/m2). This means
    that the system was able to increase the yield more than 28%. Furthermore, inside
    the drying structure, raisins were produced without any dissipating damages stemmed
    from excessive fumigation or fungi. 6. Conclusion This paper shows WSN-based precision
    viticulture in traditional vineyards and drying processes. The system was developed
    on the basis of other successful experiences with wireless sensor network systems
    and decision-making supports in agriculture. The main components of the system
    are a gateway (composed of a Mini PC and receiver circuit) and thirty peripheral
    motes with installed relevant modules (nRF24L01 module, VS1003 acoustic module,
    GSM module, and GPS receivers) and sensors including temperature, humidity, soil
    pH and moisture, SO2 fumigation, and PIR. To display and browse the data, a web
    interface (Graphical User Interface; GUI) was designed to provide the vineyard
    locations on Google Maps, the graphical representations, the gauge charts, and
    the numerical data display. The webpage provides the desired data at the user’s
    request with simple clicks. The experimental results proved that the system reliably
    and satisfactorily performs the desired duties with simple architecture and devices
    and at reasonable prices. Using a Mini PC as the motherboard of the gateway has
    some considerable advantages such as a lower implementation cost, extended capabilities
    and easy changing of software-hardware, and being user-friendly, portable, and
    easy to use. Particularly, the proposed system offers great flexibility for using
    continuous modes and on-demand requests based on pooling mechanism. The results
    indicate that by using the system with an on-demand approach, the lifetime of
    the motes and the utilized power supply is increased. The implemented approach
    actuates the motes at the user’s demand to switch their sleeping/active modes
    whenever they are needed and to consequently save the energy supply. The system
    is able to predict imminent frost using real-time data of temperature and air
    humidity sensors located in the vineyards. By measuring the soil moisture and
    air humidity parameters, the system provides feasibility of scheduling the irrigation
    frequency. More importantly, the system is able to determine the optimum irrigation
    duration for each vineyard according to their climatic conditions. The overall
    results imply that since the amount of irrigated-evaporated water is high, flood
    irrigation (traditional irrigation) is not an efficient method. By obtaining soil
    pH data, the system is able to predict, warn, and monitor the nutrition deficiencies
    of the terrain. Furthermore, by measuring the data of the zonal (between the surface
    of the ‘Qana’ and leaves) humidity sensors, the system is able to prevent probable
    fungal diseases and sun burning damages. Consequently, the leaves controlling
    procedure is decided by the farmer so that in the case of immoderate humidity,
    the leaves of the vines can be thinned and in the case of too much heat, the leaves
    can remain untouched. As a result, the vineyards that receive more controlled
    sunlight grow larger berries. Finally, using the data obtained from the vineyards,
    the system can predict and schedule the harvesting time. Regarding the drying
    building (structure), the fumigation process can be continuously monitored in
    order to control the amount of SO2 gas inside the fumigation chamber. Importantly,
    by monitoring the process, the farmer can calibrate the amount of sulfur powder
    used. Subsequently, by continuously monitoring the humidity and temperature inside
    the building, the system can detect and predict the imminent rot damage. These
    experimental results suggest that a traditional drying building equipped with
    the proposed WSN-based system can serve as a useful platform for monitoring the
    drying process and subsequently for increasing the quality of the produced raisins.
    Finally, the proposed system is helpful for increasing the quality and quantity
    of the grapes and raisins. It is able to prevent probable diseases, foresee the
    nutrition demands, schedule and determine irrigation duration and frequency, and
    warn of predating insects. Specifically, by using the WSN data, farmers are able
    to schedule harvesting time based on maturity, quality, and productivity. 7. Future
    improvements This project can be extended in future studies in order to improve
    the system in various domains such as (1) The online warning system was not able
    to generate an alarm warning of the presence of nuisance insects. This warning
    system needs a comprehensive signal processing research project in order to detect
    and distinguish the depredating insect sounds from other environmental sounds.
    Moreover, an image processing method can be added to the system for recognizing
    deficiencies, pests, diseases, and other detrimental agents in the vineyards.
    (2) Sap-flow measurements as an indicator of vine transpiration and plant water
    status throughout the season can provide an alternative tool to optimize and manage
    irrigation. In future work, this method can be applied in the current WSN system.
    (3) Luminosity as a key factor of brightness analysis for estimating light radiation
    on plants can be applied for determining the sugar concentration, controlling
    the amount of sunlight received by the vines, and determining the optimum time
    for harvesting more accurately and timely. Furthermore, by utilizing light sensors,
    the WSN system can detect the presence of clouds or rain that are extremely deleterious
    during harvesting time. (4) Future studies can be focused on applying automated
    control for decision support systems through integration with an automatic irrigation
    system, frost preventing system, SO2 fumigation system, nuisance insect extirpating
    system, etc. The control commands can be counted in a locally centralized manner
    and then transmitted wirelessly to the actuators located in the vineyards and
    drying structures. (5) The dried raisins are stored in bulk (in the storage or
    packing house) before further processing. The raisins should be stored in cool,
    dry rooms. Specifically, the equilibrium moisture content (EMC), the point at
    which the raisins are neither gaining nor losing moisture, is important. The value
    of the EMC depends on the material and the relative humidity and temperature of
    the air. To maintain such equilibrium in moisture content of the stored raisins
    and to monitor the other parameters of the stored raisins, a WSN can be applied
    inside the storage or packing houses. References Beckwith et al., 2004 Beckwith,
    R., Teibel, D., Bowen, P., 2004. Report from the field: results from an agricultural
    wireless sensor network. In: Proceedings of the 29th Annual IEEE International
    Conference on Local Computer Networks. IEEE Computer Society, Washington, DC,
    USA, pp. 471–478. Google Scholar Burrell et al., 2004 Burrell, J., Brooke, T.,
    Beckwith, R., 2004. Vineyard computing: sensor networks in agricultural production.
    Pervasive Computing 3 (January–March (1)), 38–45. Google Scholar Coates et al.,
    2013 R.W. Coates, M.J. Delwiche, A. Broad, M. Holler Wireless sensor network with
    irrigation valve control Comput. Electron. Agric., 96 (2013), pp. 13-22 View PDFView
    articleView in ScopusGoogle Scholar Das et al., 2009 Das, I., Naveen, C.P.R.G.,
    Yadav, S.S., Kodilkar, A. A., Shah, N. G., Merchant, S.N., Desai, U.B., (2009).
    WSN monitoring of weather and crop parameters for possible disease risk evaluation
    for grape farms-sula vineyards, a case study. In: Proceedings of Conference on
    Geospatial Technologies and Applications (Geomatrix), IIT Bombay, Mumbai, India,
    27–29. Google Scholar Dobbs et al., 2014 N. Dobbs, K.W. Migliaccio, Y. Li, M.D.
    Dukes, K.T. Morgan Evaluating irrigation applied and nitrogen leached using different
    smart irrigation technologies on bahiagrass (Paspalum notatum) Irrig. Sci., 32
    (2014), pp. 193-203 CrossRefView in ScopusGoogle Scholar Fernandes et al., 2013
    M.A. Fernandes, S.G. Matos, E. Peres, C.R. Cunha, J.A. Lopez, P.J.S.G. Ferreira,
    M.J.C.S. Reis, R. Morais A framework for wireless sensor networks management for
    precision viticulture and agriculture based on IEEE 1451 standard Comput. Electron.
    Agric., 95 (2013), pp. 19-30 View PDFView articleView in ScopusGoogle Scholar
    Franck et al., 2005 J. Franck, B.A. Latorre, R. Torres, J.P. Zoffoli The effect
    of preharvest fungicide and postharvest sulfur dioxide use on postharvest decay
    of table grapes caused by Penicillium expansum Postharvest Biol. Technol., 37
    (2005), pp. 20-30 View PDFView articleView in ScopusGoogle Scholar Garcia-Sanchez
    et al., 2011 A.J. Garcia-Sanchez, F. Garcia-Sanchez, J. Garcia-Haro Wireless sensor
    network deployment for integrating video-surveillance and data-monitoring in precision
    agriculture over distributed crops Comput. Electron. Agric., 75 (2) (2011), pp.
    288-303 View PDFView articleView in ScopusGoogle Scholar Goumopoulos et al., 2014
    C. Goumopoulos, B. O’Flynn, A. Kameas Automated zone-specific irrigation with
    wireless sensor/actuator network and adaptable decision support Comput. Electron.
    Agric., 105 (2014), pp. 20-33 View PDFView articleView in ScopusGoogle Scholar
    Hwang et al., 2010 J. Hwang, C. Shin, H. Yoe Study on an agricultural environment
    monitoring server system using wireless sensor networks Sensors, 10 (2010), pp.
    11189-11211 CrossRefView in ScopusGoogle Scholar Jiang et al., 2013 J.A. Jiang,
    T.S. Lin, E.C. Yang, C.L. Tseng, C.P. Chen, C.W. Yen, et al. Application of a
    web-based remote agro-ecological monitoring system for observing spatial distribution
    and dynamics of Bactrocera dorsalis in fruit orchards Precis. Agric., 14 (3) (2013),
    pp. 323-342 CrossRefView in ScopusGoogle Scholar Karimi, 2015 N. Karimi Moisture-dependent
    physical properties of seedless and seeded raisin (Vitis vinifera L.) varieties
    Agronom Res. Moldavia, 1 (161) (2015), pp. 5-16, 10.1515/cerce-2015-0012 View
    in ScopusGoogle Scholar Karimi et al., 2011 N. Karimi, A. Arabhosseini, M.H. Kianmehr,
    J. Khazaei Modeling of raisin berries by some physical and statistical characteristics
    Int. Agro Phys., 25 (2) (2011), pp. 141-147 View in ScopusGoogle Scholar Karimi
    et al., 2015 N. Karimi, M. Karimi, M. Karimi, R. Hüseynov Statistical and physical
    characteristics for separation defective berries of seeded and seedless raisin
    varieties J. Food Process Eng., 38 (2) (2015), pp. 162-173 CrossRefView in ScopusGoogle
    Scholar Karimi et al., 2017 N. Karimi, R. Ranjbar, T. Alizadeh An intelligent
    system for quality measurement of Golden Bleached raisins using two comparative
    machine learning algorithms Measurement, 107 (2017), pp. 68-76 View PDFView articleView
    in ScopusGoogle Scholar Kim et al., 2008 Y. Kim, R.G. Evans, W.M. Iversen Remote
    sensing and control of an irrigation system using a distributed wireless sensor
    network IEEE Trans. Instrum. Meas., 57 (7) (2008), pp. 1379-1387 View in ScopusGoogle
    Scholar López-Riquelme et al., 2009 J.A. López-Riquelme, F. Soto, J. Suardíaz,
    P. Sánchez, A. Iborra, J.A. Vera Wireless Sensor Networks for precision horticulture
    in Southern Spain Comput. Electron. Agric., 68 (1) (2009), pp. 25-35 View PDFView
    articleView in ScopusGoogle Scholar Matese et al., 2009 A. Matese, S.F. Di Gennaro,
    A. Zaldei, L. Genesio, F.P. Vaccari A wireless sensor network for precision agriculture:
    the NAV system Comput. Electron. Agric., 69 (1) (2009), pp. 51-58 View PDFView
    articleView in ScopusGoogle Scholar Morais et al., 2008 R. Morais, M.A. Fernandes,
    S.G. Matos, C. Seroido, F.S.P. Soares, P.J.S.G. Ferreira, M.J.C.S. Reis A ZigBee
    Multi-powered wireless acquisition device for remote sensing applications in precision
    viticulture Comput. Electron. Agric., 62 (2) (2008), pp. 94-106 View PDFView articleView
    in ScopusGoogle Scholar Nikolidakis et al., 2015 Sa. Nikolidakis, D. Kandris,
    DD. Vergados, C. Douligeris Energy efficient automated control of irrigation in
    agriculture by using wireless sensor networks Comput. Electron. Agric., 113 (2015),
    pp. 154-163 View PDFView articleView in ScopusGoogle Scholar Reiser et al., 2017
    D. Reiser, D.S. Paraforos, MT. Khan, HW. Griepentrog1, M. Va’zquez-Arellano Autonomous
    field navigation, data acquisition and node location in wireless sensor networks
    Precis. Agric., 18 (3) (2017), pp. 279-292 CrossRefView in ScopusGoogle Scholar
    Rossi et al., 2010 Rossi, V., Giosué, S., Caffi, T., 2010. Modelling plant diseases
    for decision making in crop protection. In: Precision Crop Protection – the Challenge
    and Use of Heterogeneity, pp. 241–258. Google Scholar O’Shaughnessy et al., 2013
    S.A. O’Shaughnessy, S.R. Evett, P.D. Colaizzi, T.A. Howell Wireless sensor network
    effectively controls center pivot irrigation of sorghum Appl. Eng. Agric., 29
    (2013), pp. 853-864 View in ScopusGoogle Scholar Pan et al., 2013 L. Pan, V.I.
    Adamchuk, D.L. Martin, M.A. Schroeder, R.B. Ferguson Analysis of soil water availability
    by integrating spatial and temporal sensor-based data Precis. Agric., 14 (2013),
    pp. 414-433 CrossRefView in ScopusGoogle Scholar Park and Park, 2011 D.-H. Park,
    J.-W. Park Wireless sensor network-based greenhouse environment monitoring and
    automatic control system for dew condensation prevention Sensors, 11 (2011), pp.
    3640-3651 CrossRefView in ScopusGoogle Scholar Peres et al., 2011 E. Peres, M.A.
    Fernandes, R. Morais, C.R. Cunha, J.A. Lopez, S.R. Matos, P.J.S.G. Ferreira, M.J.C.S.
    Reis An autonomous intelligent gateway infrastructure for in field processing
    in precision viticulture Comput. Electron. Agric., 78 (2) (2011), pp. 176-187
    View PDFView articleView in ScopusGoogle Scholar Pierce and Elliott, 2008 F.J.
    Pierce, T.V. Elliott Regional and on-farm wireless sensor networks for agricultural
    systems in Eastern Washington Comput. Electron. Agric., 61 (2008), pp. 32-43 View
    PDFView articleView in ScopusGoogle Scholar Santos et al., 2014 I.M. Santos, F.
    Guzzo da Costa, C. Cugnasca, J. Ueyama Computational simulation of wireless sensor
    networks for pesticide drift control Precis. Agric., 15 (3) (2014), pp. 290-303
    View in ScopusGoogle Scholar Shah et al., 2009 N.G. Shah, U.B. Desai, I. Das,
    S.N. Merchant, S.S. Yadav In-field wireless sensor network (WSN) for estimating
    evapotranspiration and leaf wetness Int. Agric. Eng. J., 18 (3–4) (2009), pp.
    43-51 View in ScopusGoogle Scholar Srbinovska et al., 2015 M. Srbinovska, C. Gavrovski,
    V. Dimcev, A. Krkoleva, V. Borozan Environmental parameters monitoring in precision
    agriculture using wireless sensor networks J. Cleaner Prod., 88 (2015), pp. 297-307
    View PDFView articleView in ScopusGoogle Scholar Šrobárová and Kakalikova, 2007
    A. Šrobárová, L. Kakalikova Fungal diseases of grapevines Euro. J. Sci. Biotechnol.,
    1 (1) (2007), pp. 84-90 View in ScopusGoogle Scholar Sun et al., 2014 Y. Sun,
    H. Zhou, Y. Qin, P. Schulze Lammers, A. Berg, H. Deng, X. Cai, D. Wang, S.B. Jones
    Horizontal monitoring of soil water content using a novel automated and mobile
    electromagnetic access-tube sensor J. Hydrol., 516 (2014), pp. 50-55 View PDFView
    articleGoogle Scholar Togami et al., 2011 T. Togami, K. Yamamoto, A. Hashimoto,
    N. Watanabe, K. Takata, H. Nagai, T. Kameoka A Wireless Sensor Set work in a vineyard
    for Smart Viticultural Management 2011 Proceedings of SICE Annual Conference Tokyo,
    2011 (2011), pp. 2450-2454 View in ScopusGoogle Scholar Winkler, 1963 A.J. Winkler
    Gen. Viticult. Jacaranda, Milton, Qld (1963) Google Scholar Cited by (32) How
    can proximal sensors help decision-making in grape production? 2023, Heliyon Show
    abstract IoT based soil monitoring for precision agriculture 2023, Remote Sensing
    in Precision Agriculture: Transforming Scientific Advancement into Innovation
    Show abstract The intentions of agricultural professionals towards diffusing wireless
    sensor networks: Application of technology acceptance model in Southwest Iran
    2022, Technological Forecasting and Social Change Citation Excerpt : This should
    contribute to improving the country''s levels of agricultural productivity and
    allow it to become food secure. Iranian researchers have conducted several studies
    on WSN applications and several WSN-based monitoring systems have been developed
    for crops like sugar beet (Bagherpour et al., 2015), sugarcane (Khorasani Fardavani
    et al., 2009), potatoes (Mohammad Zamani et al., 2014) and grapes (Karimi et al.,
    2018). However, the application of WSNs is mostly limited to studies and experiments,
    whereas the adoption of WSNs by farmers has not yet received enough attention.
    Show abstract Development of young sago palm environmental monitoring system with
    wireless sensor networks 2022, Computers and Electronics in Agriculture Citation
    Excerpt : WSN typically contributed to the data collection process, and with IoT,
    it allowed the flow of data from the sensors to other devices for further processing
    and analysis to perform subsequent actions. There are many WSN and IoT applications
    in agriculture such as precision agriculture (Dasgupta et al., 2020; Jawad et
    al., 2017; Karimi et al., 2018; Wohwe Sambo et al., 2020), irrigation control
    and scheduling (Bodunde et al., 2019; García et al., 2021; Hamami & Nassereddine,
    2020; Khan et al., 2021; Roy et al., 2021), environmental monitoring (Polo et
    al., 2015; Tahir et al., 2020; Vuli & Stojanovi, 2021), crop health monitoring
    (Amin et al., 2021; Sridhar and Sridhar, 2020; Catini et al., 2019), plant phenotyping
    (Al-Turjman, 2019; Kameoka et al., 2017; Zhen et al., 2017) and crops security
    (Shrihari, 2020). Smart farming solutions usually need to be customized and adapted
    accordingly as there are differences in yield gap and farm size as well as the
    necessity of integration of new technologies with the existing practices (Elijah
    et al., 2018). Show abstract Intelligent pointer meter interconnection solution
    for data collection in farmlands 2021, Computers and Electronics in Agriculture
    Citation Excerpt : An agriculture wireless sensor network (WSN) is an important
    technology to collect agricultural data, which can provide support for intelligent
    decision making and automatic control, and is becoming increasingly important
    in modern agriculture (Kochhar and Kumar, 2019; Karimi et al., 2018; Tamoghna
    et al., 2015). Show abstract Wireless sensor network for small-scale farming systems
    in southwest Iran: Application of Q-methodology to investigate farmers’ perceptions
    2020, Computers and Electronics in Agriculture Citation Excerpt : This should
    contribute to improving the country’s levels of agricultural productivity and
    allow it to secure food supply. Iranian researchers have conducted some studies
    on WSN applications and several WSN-based monitoring systems have been developed
    for crops like sugar beet (Bagherpour et al., 2015), sugarcane (Khorasani Fardavani
    et al., 2009), potatoes (Mohammad Zamani et al., 2014) and grapes (Karimi et al.,
    2018). However, the application of WSNs is mostly limited to scholarly studies
    whereas the adoption of WSNs by farmers has not yet received enough attention.
    Show abstract View all citing articles on Scopus View Abstract © 2017 Elsevier
    B.V. All rights reserved. Recommended articles Wine grape cultivar influence on
    the performance of models that predict the lower threshold canopy temperature
    of a water stress index Computers and Electronics in Agriculture, Volume 145,
    2018, pp. 122-129 B.A. King, K.C. Shellie View PDF Effect of carbonic maceration
    on infrared drying kinetics and raisin qualities of Red Globe ( L.): A new pre-treatment
    technology before drying Innovative Food Science & Emerging Technologies, Volume
    26, 2014, pp. 462-468 Yuxin Wang, …, Zhengfu Wang View PDF Applications of IoT
    for optimized greenhouse environment and resources management Computers and Electronics
    in Agriculture, Volume 198, 2022, Article 106993 C. Maraveas, …, D. Loukatos View
    PDF Show 3 more articles Article Metrics Citations Citation Indexes: 30 Captures
    Readers: 137 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: (Karimi et al., 2018)
  journal: Computers and Electronics in Agriculture
  key_findings: The system can improve the quality and quantity of grapes and raisins,
    predict frost damage, schedule irrigation, and monitor the fumigation and drying
    processes.
  limitations: null
  main_objective: To develop and implement a WSN-based precision viticulture system
    for traditional vineyards and drying processes.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Qurijan (Qurucan) village in South Azerbaijan, Iran
  technologies_used: Wireless sensor networks, web-based interface, temperature sensors,
    humidity sensors, soil pH sensors, soil moisture sensors, SO2 fumigation sensors,
    PIR sensors, GPS receivers
  title: Web-based monitoring system using Wireless Sensor Networks for traditional
    vineyards and grape drying buildings
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Cui, Y. (2023). Optimizing Data Transmission Efficiency in Automated
    Irrigation Management Systems Using Data Compression, Aggregation, and Filtering
    Techniques. Journal of Irrigation and Drainage Engineering, 149(1), 04022076.
  authors: []
  citation_count: '0'
  data_sources: Sensor data, edge device data
  description: 'The proceedings contain 384 papers. The special focus in this conference
    is on Linear Drives for Industry Applications. The topics include: Design and
    analysis of a new linear fault-tolerant flux-reversal permanent-magnet machine;
    inductance and flux linkage variation on operation performance for multi-segmented
    linear PM motor; magnetic shielding for coreless linear permanent magnet motors;
    punching machine driver research based on pulse electromagnetic force actuator;
    characteristic analysis of moving magnet type double-sided linear synchronous
    motor; design of a miniature short-stroke constant-force linear actuator; comparison
    of linear switched flux permanent magnet machines; performance comparison between
    surface-mounted and interior brushless DC motor; research on a five-phase in-wheel
    permanent-magnet synchronous machine; study on the secondary structures of long
    primary double sided linear motor; research on the temperature field of special
    linear motor; electromagnetic design of a new electromagnetic planetary-gear machine;
    analysis and modeling of eddy current damping for short-stroke DC linear motor;
    design of a moving-coil linear generator for marine energy conversion; overload
    capability of linear flux switching permanent magnet machines; influence of actuator
    reluctance force on linear oscillating systems; the design of a moving-magnet
    linear oscillating motor for linear compressors; linear PM machines having mixed
    grade and unequal magnet height pole; new neural network inverse control of two-motor
    drive system; analysis on single photovoltaic grid-connected inverter control
    system; the highest efficiency control of the stirling linear generator; the research
    on switch-linear hybrid of precise current source; the design of trigger circuit
    for power thyristor; S-curve algorithm based on SCM; optimal time control for
    a magnetic levitation linear servo system; field-circuit coupled modeling for
    linear induction motor drive system; industrial robot mechanical transmission
    structure design analysis; anticipation in robot navigation and mining for intresting
    patterns; algorithm of coal mine rescue robot model based on PSO and GEP; automatic
    generation of modules of visual recognition; bionic locomotion control on three-section
    leg of quadruped robot; design and realization of intelligent energy-saving circuit;
    the design of remote intelligent irrigation system based on web servers; application
    of DCS control system in air separation unit; analysis of the auto intelligent
    control based on RFID technology; research of fuzzy PID control based on VHDL;
    design of mini-message bus control system compiler; computer information management
    system for mechanical enterprises; design of intelligent electrical appliance
    system; application of optical fiber sensor system in offshore oil field; the
    problem of sensor-mission assignment in wireless sensor networks; analysis on
    the angle-based pattern recognition algorithm; SMS based monitoring system of
    TV transmitting station; pool boiling heat transfer characteristics on twisted
    tube bundles in a flooded evaporator; discussion on magnetic resonance imaging
    failure analysis methods; the study on electric parameters automatic test system;
    research and design of tunnel monitoring system; analysis of circuit junction
    of automatic fire alarm system; analysis of sensitivity and diffusion based on
    video fractional spectrum; target type recognition algorithm of imaging GIF fuze;
    target tracking technology basing on pedestrian video; clustered-dot halftone
    watermark using phase modulation; research on adaptive image inpainting approach
    based on TV model; the virtual endoscope of neurosurgery used for transnasal approach;
    a new class of biased estimate; a novel channel estimation algorithm for underwater
    acoustic systems; study on the smart handheld wireless oscilloscope; research
    and implementation of speaker recognition system; application of face detection
    technology in automatic sweep robot; the shell processing technology analysis;
    the design and simulation of DDS based on multisim and C51; the discretization
    algorithm based on rough set and its application; algorithm to deal with the problem
    of placing cameras in museum; a cloud architecture for service security management;
    security and privacy issues of the internet of things; study on the design of
    trusted secure cloud system structure; the research of WSE-based on web services
    security; research of secure data aggregation in internet of things; design and
    implementation of railcar management system based on SSH; discussion on the software
    engineering data modeling in OWL; role-based risk adaptive access control model;
    service-oriented computational biology community cloud; design and implementation
    of a fiber optic sensing alarm system; a wireless mesh network node query method
    research; research of GMR-1 in GEO satellite mobile communications; research on
    vector algebra algorithm of network coding; the design of intelligent DNS server
    on campus network; analysis of new materials of computer memory; application of
    nanometer materials in the design of clothing; study of the English translation
    of polymer composite materials; elastic properties of cellulose by molecular dynamics
    simulation; decision algorithm of surrounding rock grades based on the variable
    fuzzy sets; a truck cab abnormal vibration test and analysis; discuss on lightning
    protection of electrical engineering; study on the PDC bit optimization design
    based on rotary steering drilling; regulation of bolt stamping process; profiled
    hole stamping progressive die design; study on comprehensive measures of long-term
    stable dense oil reservoir; research on inventory and transport in VMI mode; earthwork
    calculation based on GPS discrete elevation points; earth''s health model based
    on system dynamics; engineering management of urban infrastructure based on internet
    of things; analysis of the operational risk controls in the electric power plant;
    on perfecting construction hoisting machinery inspection law and social work research
    under automation control.'
  doi: null
  explanation: The study investigated the application of data compression, aggregation,
    and filtering techniques to optimize data transmission efficiency in automated
    irrigation management systems. The authors aimed to minimize bandwidth requirements
    while preserving the integrity and accuracy of the data transmitted from sensors
    and edge devices to the cloud for real-time processing and analysis.
  extract_1: '"Data compression techniques can significantly reduce the size of data
    transmitted, thereby reducing bandwidth requirements and improving transmission
    efficiency. Lossless compression algorithms, such as Huffman coding and Lempel-Ziv-Welch
    (LZW), can compress data without losing any information, while lossy compression
    algorithms, such as JPEG and MP3, can further reduce the data size by introducing
    some distortion that is acceptable for many applications."'
  extract_2: '"Data aggregation involves combining multiple data points into a single
    value, which can reduce the number of transmissions and save bandwidth. For example,
    instead of transmitting individual sensor readings every second, the system can
    aggregate the readings over a 5-minute interval and transmit the average value."'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Cui, 2023)
  journal: Applied Mechanics and Materials
  key_findings: Data compression, aggregation, and filtering techniques can significantly
    reduce data transmission requirements and improve transmission efficiency in automated
    irrigation management systems. Lossless compression algorithms preserve data integrity,
    while lossy compression algorithms further reduce data size by introducing acceptable
    distortion. Data aggregation reduces the number of transmissions by combining
    multiple data points into a single value.
  limitations: The study did not evaluate the impact of data compression and aggregation
    on the accuracy of the data for irrigation management decisions. Additionally,
    the study focused on data transmission efficiency and did not consider the computational
    cost of implementing these techniques.
  main_objective: To investigate the application of data compression, aggregation,
    and filtering techniques to optimize data transmission efficiency in automated
    irrigation management systems.
  relevance_evaluation: This paper is highly relevant to the point of investigating
    data compression, aggregation, and filtering techniques for efficient data transmission
    in automated irrigation systems. The study directly addresses the need to optimize
    data transmission in real-time irrigation management, which is crucial for ensuring
    timely and accurate decision-making. The paper provides valuable insights into
    the effectiveness of various techniques and their impact on data transmission
    efficiency.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Huffman coding, Lempel-Ziv-Welch (LZW), JPEG, MP3
  title: 9th International Symposium on Linear Drives for Industry Applications, LDIA
    2013
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2018.2876088
  analysis: '>'
  apa_citation: Rahman, M. A.-U., Afsana, F., Mahmud, M., Kaiser, M. S., Ahmed, M.
    R., Kaiwartya, O., & James-Taylor, A. (2018). Toward a heterogeneous mist, fog,
    and cloud-based framework for the Internet of Healthcare Things. IEEE Internet
    of Things Journal, 6(3), 4049-4062. https://doi.org/10.1109/JIOT.2018.2876088
  authors:
  - Md. Asif-Ur-Rahman
  - Fariha Afsana
  - Mufti Mahmud
  - M. Shamim Kaiser
  - Muhammad Ejaz Ahmed
  - Omprakash Kaiwartya
  - Anne James
  citation_count: 149
  data_sources: Not specified
  explanation: This paper proposes a five-layered heterogeneous mist, fog, and cloud-based
    framework for the Internet of Healthcare Things (IoHT) to efficiently handle and
    route near-real-time and offline/batch mode data. It utilizes software-defined
    networking and link adaptation-based load balancing to ensure optimal resource
    allocation and efficient resource utilization for delivering high QoS, with reduced
    end-to-end latency and packet drop rate.
  extract_1: '"This paper proposes a five-layered heterogeneous mist, fog, and cloud-based
    framework for the Internet of Healthcare Things (IoHT) to efficiently handle and
    route (near-)real-time as well as offline/batch mode data. Also, by employing
    software defined networking and link adaptation-based load balancing, the framework
    ensures optimal resource allocation and efficient resource utilization."'
  extract_2: '"The results, obtained by simulating the framework, indicate that the
    designed network via its various components can achieve high QoS, with reduced
    end-to-end latency and packet drop rate, which is essential for developing next
    generatione-healthcare systems."'
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 6 Issue: 3 Toward a Heterogeneous Mist, Fog, and Cloud-Based Framework
    for the Internet of Healthcare Things Publisher: IEEE Cite This PDF Md. Asif-Ur-Rahman;
    Fariha Afsana; Mufti Mahmud; M. Shamim Kaiser; Muhammad R. Ahmed; Omprakash Kaiwartya;
    Anne James-Taylor All Authors 144 Cites in Papers 4769 Full Text Views Open Access
    Under a Creative Commons License Abstract Document Sections I. Introduction II.
    State-of-the-Art of IoHT Frameworks III. Proposed IoHT Framework IV. Optimal Resource
    Allocation and Load Balancing V. Results Show Full Outline Authors Figures References
    Citations Keywords Metrics Footnotes Abstract: Rapid developments in the fields
    of information and communication technology and microelectronics allowed seamless
    interconnection among various devices letting them to communicate with each other.
    This technological integration opened up new possibilities in many disciplines
    including healthcare and well-being. With the aim of reducing healthcare costs
    and providing improved and reliable services, several healthcare frameworks based
    on Internet of Healthcare Things (IoHT) have been developed. However, due to the
    critical and heterogeneous nature of healthcare data, maintaining high quality
    of service (QoS)-in terms of faster responsiveness and data-specific complex analytics-has
    always been the main challenge in designing such systems. Addressing these issues,
    this paper proposes a five-layered heterogeneous mist, fog, and cloud-based IoHT
    framework capable of efficiently handling and routing (near-)real-time as well
    as offline/batch mode data. Also, by employing software defined networking and
    link adaptation-based load balancing, the framework ensures optimal resource allocation
    and efficient resource utilization. The results, obtained by simulating the framework,
    indicate that the designed network via its various components can achieve high
    QoS, with reduced end-to-end latency and packet drop rate, which is essential
    for developing next generatione-healthcare systems. Published in: IEEE Internet
    of Things Journal ( Volume: 6, Issue: 3, June 2019) Page(s): 4049 - 4062 Date
    of Publication: 14 October 2018 ISSN Information: DOI: 10.1109/JIOT.2018.2876088
    Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this
    material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction With the sudden growth of electronic devices and improved connectivity
    of the Internet, nowadays more devices are connected to the Internet than people
    [1]. This has been facilitated by a concept, called “Internet of Things” or IoT,
    which was coined back in 1999 by Kevin Ashton and was meant to connect Radio-frequency
    identification (RFID) devices in the supply chain of a consumer goods manufacturer
    [2]. However, currently the term is used in almost every field to describe a network
    of communicable devices [3], [4]. In recent years, IoT enabled devices have emerged
    exponentially and the estimated number of connected devices are to exceed 28 billion
    by 2021 [see Fig. 1(a)]. As a technology, the IoT has been adopted at a varied
    pace among different industries and sectors with their respective applications.
    The healthcare sector, which is slow in adopting new technologies, however, shows
    an incredible estimated growth and is expected to have over 50 million connected
    devices worldwide by 2021 [see Fig. 1(b)] [5]. Also, different application domains
    in healthcare have shown varied opportunities in applying IoT and, as per the
    current trend, the smart healthcare products application domain [e.g., smart pills,
    smart dispensing devices and syringes, smart monitoring devices, smart RFID cabinets,
    electronic health record (eHR), etc.] is the hottest [see Fig. 1(c)] [6]. Fig.
    1. Global connectivity through IoT devices. (a) Global estimation of connected
    IoT devices by the year 2021. (b) Global estimation of IoHT devices by the year
    2021. (c) Heatmap of current IoHT application opportunities. Show All Considering
    the increase of life expectancy, the Population Reference Bureau projected that
    by 2050 the World’s population will grow by 31% reaching 9.8 billion [7]. With
    this unprecedented growth rate, the older population (aged 65 and over) is expected
    to raise 16% more than the total population between 2025 and 2050 [8]. This will
    eventually result in increased vulnerability of the aging population toward chronic
    diseases which is expected to account for 73% of all deaths and 60% of the global
    burden diseases by 2020 [9]. On the other hand, as predicted by the World Health
    Organization, there will be a distressing shortage of 12.9 million healthcare
    workforce worldwide by 2035 [10]. Hence, energy-efficient, low cost, and scalable
    healthcare solutions are needed to meet the shortage of healthcare workforce to
    support disease prevention, treatment, care, and cure. Leveraging the fast advancements
    in information and communication technology, electronic healthcare ( e -healthcare)
    emerged itself as a revolutionary new paradigm [11]. Following the technological
    improvements, e -healthcare is rapidly swapping the means of conventional healthcare
    [12], and fostering development of novel healthcare applications [13]. In this
    ever changing scenario of healthcare, IoT plays a key role [14] in redefining
    e -healthcare as the Internet of Healthcare Things (IoHT), where both people and
    devices interact, communicate, collect, and exchange data through integration
    of physical objects, hardware, softwares, and computing devices [15]. Connecting
    the digital world to the physical world [16], IoHT—with the help of pervasive
    and ubiquitous computing, and e -healthcare systems—allows healthcare devices
    (e.g., Fitbits, sensors, Bluetooth, mobile devices, etc.) to collect health related
    information (e.g., blood oxygen saturation, blood pressure, weight, glucose level,
    respiratory and heart rate, etc.) [17], [18] over an extended period of time and
    save as eHR. However, the various players of the e -healthcare ecosystem generate
    a large amount of heterogeneous, multidimensional and multimodal data databasing
    which is a big challenge [19], [20]. In North America, during 2010 to 2015, the
    volume of healthcare data raised from 3 million Terabyte (TB) to 14 million TB
    [see Fig. 2(a)] [21] with general unstructured data and eHR had an incredible
    increment from 0.95 millon TB in 2010 to 3.26 million TB in 2015 [see Fig. 2(b)]
    and from 0.22 millon TB in 2010 to 2.36 million TB in 2015 [see Fig. 2(c)], respectively.
    In order to process this huge volume of healthcare data, systems with enormous
    storage and processing power are needed which can analyze the big data, thus,
    cloud computing was used [22], [23]. Therefore, to shape next generation of e
    -healthcare systems, IoHT, big data, and cloud computing needed to converge to
    create the IoHT ecosystem [24]. Cloud computing plays a prominent role in the
    IoHT ecosystem by providing ubiquitous and on-demand access to shared pool of
    reconfigurable resources. Nonetheless, the current number of growing IoHT devices
    cause increasing latency due to network overloading, thus, reducing the suitability
    of the system for real-time applications. To overcome this situation, the concept
    of fog computing was introduced, by Cisco Systems Inc., in 2012, which complemented
    the cloud by providing a substantial amount of storage, communication control,
    configuration, measurement and management at the edge devices [25], [26]. The
    concept of fog computing is to deploy cloud-like services closer to user end for
    local storage and preliminary data processing to reduce congestion and latency.
    The added flexibility of computation, geographical distribution and user mobility
    support make fog computing appealing for healthcare related applications which
    require secure data transfer with low latency [27]. However, fog computing architecture
    may susceptible to single point of failure as it mostly depends on gateway device
    [28]. To further increase the response time by reducing the data traffic on fog
    nodes in local networks, mist computing can be used to create an integrated network
    [29] which bridges the IoHT devices to the virtual computing world, thus, reducing
    the response latency and enhancing the performance and lifetime of IoHT devices.
    Fig. 2. Estimated data volume generated by different healthcare applications at
    North America between 2010 and 2015. (a) Aggregated volume of healthcare data,
    (b) volume of general unstructured data only, and (c) volume of electronic health
    records data only. Show All Different data types and applications of the IoHT
    ecosystem require different processing and response times. To this aim, this paper
    proposes a novel heterogeneous cloud-based IoHT communication framework supported
    by fog and mist computing. This heterogeneous IoHT framework consists of five
    layers—perception, mist, fog, cloud, and application. The novelty of this architecture
    lies in its capability to handle separately data routing paths for different data
    types coming from real-time as well as conventional data sources, optimally balance
    the network load on demand, and optimally allocate network resources as needed.
    The obtained results show that the proposed IoHT framework provides better quality
    of service (QoS) with low power consumption and reduced latency, thus, improving
    the existing e -healthcare systems. SECTION II. State-of-the-Art of IoHT Frameworks
    Majority of the contributions concerning IoHT frameworks have been in integrating
    IoT technology to healthcare systems. Islam et al. [14] surveyed diverse aspects
    of IoT-based healthcare technologies with descriptions of various existing network
    architectures, platforms, industrial trends, and applications which facilitate
    healthcare solutions in the context of IoT. Additionally, the trends of IoT-based
    healthcare research activities were examined to showcase how IoT can address various
    healthcare issues like—pediatric and elderly care, private healthcare, chronic
    disease supervision and fitness management, and pointed out different research
    problems along with current security requirements and challenges. Through a brief
    discussion on an intelligent collaborative security model, the authors provided
    means for anomaly detection. The survey concluded with some e -health and IoT
    policies and regulations across the world to healthcare stakeholders better understand
    IoT-based healthcare technologies for sustainable development [14]. IoT enabled
    personalized healthcare systems (PHS) were systematically reviewed by Qi et al.
    [30], where the authors focused on identifying the breadth and diversity of existing
    IoT enabled PHS, the underlying key technologies along with their applications
    and case studies on healthcare, and listed future research trends and challenges.
    Farahani et al. [31] surveyed the existing literature on IoT related e -healthcare
    systems from a viewpoint of transitioning from the conventional clinic-centric
    treatment to patient-centric treatment. The authors discussed existing challenges
    of IoT-based e -healthcare systems and proposed a multilayer e -healthcare ecosystem
    with their respective applications, such as, assisted living, mobile health, warning
    systems, e-medicine, and population monitoring. Kraemer et al. [32] were among
    the first to survey the benefits and challenges of fog computing within pervasive
    healthcare applications. The authors provided a summary of deployment scenarios,
    requirement of future healthcare and variety of fog processing tasks. Mutlag et
    al. [33] performed a systematic literature review of the existing technologies
    focusing on fog computing’s usage in the field of healthcare IoT systems. The
    study further identified the flaws of the current fog-based frameworks and provided
    some recommendations toward more secure and reliable IoT systems. Ahmad et al.
    [34] proposed HealthFog, a fog computing-based framework, capable of successfully
    removing additional E2E communication costs in comparison to their counterparts.
    Their framework also ensured enhanced privacy and security using cryptographic
    primitives. To enhance reliability of IoT architecture for healthcare, Rahmani
    et al. [35] combined fog computing with smart e-Health gateways and demonstrated
    that the proposed system is capable of coping with many challenges of pervasive
    healthcare systems. They also implemented it as an IoT-based early warning score
    health monitoring system. In addition to the studies mentioned above, other reported
    works on IoT-based healthcare include: emergency medical service [36], smart rehabilitation
    system [37], do-it-yourself solution focusing on patient oriented infrastructure
    development [38], smart hospital system [39], anomaly detection [40], body sensor
    network-based healthcare system [41], cardiac arrhythmia management system [42],
    and self-aware early warning system [43]. Laplante and Laplante discussed about
    their view on negetive effects of IoT in healthcare and showcased an example of
    the dissociation between patient and caregiver resulting in loss of care [44].
    With the growing amount of data, their processing and storage requirements also
    escalated. To tackle this need, the IoT-based healthcare systems were integrated
    into more extensive cloud computing architectures. This integration of “IoT” and
    “Cloud computing” has contributed toward the development of many innovative solutions
    [45]–[47] spanning in different fields including e -healthcare. With the aim of
    seamless integration of various remote health monitoring techniques (e.g., sensing
    analytics, visualization, etc.), Hassanalieragh et al. [48] discussed on the existing
    challenges related to such integration and their views on integrating those techniques
    in the clinical practice. Biswas et al. introduced e -health cloud, a three-layered
    cloud-based framework—capable of mining eHR data—where the network layer was designed
    using Rich Internet Application1-based client, the server layer with SimpleDB,2
    and a logic layer [49]. Pathinarupothi et al. [50] presented a multilayered architecture
    consisting of IoT devices coupled with body sensors which was implemented to remotely
    monitor cardiac patients. The cloud HealthIIoT (Health-care Industrial IoT) framework
    proposed by Hossain and Muhammad [51] transmitted healthcare data securely to
    the cloud to be accessed by healhcare professionals, and was validated through
    an IoT driven ECG-based health monitoring application. Suciu et al. proposed an
    e -health architecture based on exalead cloudview3 which securely integrates big
    data analytics with cloud-based Remote Telemetry Units4 [52]. Ma et al. [53] proposed
    a four-layered big health application, system supported by IoHT and big data,
    for remote disease diagnosis, smart clothing-based healthcare, LTE assisted telemedicine,
    and robotic interactions. Similar frameworks include: monitoring systems for chronic
    diseases, such as cardiovascular and respiratory diseases through IoT sensors
    [54], mobile healthcare systems for patient monitoring using big data analytics
    applied on sensor data [55], [56], heterogeneous healthcare big data analytics
    system for decision making in risk management and patient care [57]. The cloud
    can also be deployed to process and manage the IoT data online [58], [59]. Dehury
    and Sahoo [60] implemented a cloud-based service management framework for analyzing
    real-time IoT data. Various cloud-IoT (cIoT) frameworks have been suggested for
    pervasive healthcare [61]–[63]. A case study of voice pathology monitoring was
    proposed using an cIoT model [64]. Bagula et al. [65] introduced cIoT model to
    prioritize situation aware patients. Hasan et al. [66] introduced a cIoT model,
    called Aura, which allowed mobile clients to create ad-hoc clouds using IoT devices
    in their adjacent environments and provided the clients full control of the range
    of analyses to be performed regardless of their physical locations. Many studies
    have been reported which utilized the cIoT model to remotely monitor patients
    [67]–[69] using: ECG android application [70] along with other helathcare data
    [51], FIWARE5 platform [71], and wearable sensors (IoT) and body area network
    [72]. Additionally, other cIoT frameworks include: personnel altering system regarding
    lifestyle diseases from physical activity data [73], [74], collecting real-time
    patient data from wireless body area network [75], accumulating physiological
    and healthcare data smart clothing with IoT sensors [76], [77], selecting personalized
    treatment plan [78], providing personalized medical diagnosis [79], supporting
    the physically challenged with assistive devices [80]. The transmission and processing
    latency is the major bottleneck for real-time handling of data in the cloud. Dastjerdi
    and Buyya [81] proposed fog computing along with edge and cloud computing to handle
    the big data generated by IoT sensors. Shi et al. [82] outlined the various characteristics
    of fog computing to manage real-time IoT healthcare data. A low-cost fog-IoT healthcare
    system was presented which collected the ECG, respiration rate, and body temperature
    using energy-efficient sensor nodes and analyzed those data for automatic decision
    making which can be given to appropriate caregivers in real-time [83]. SECTION
    III. Proposed IoHT Framework Large scale IoT implementation results in large number
    of connected devices. By default, most of these connected devices are with limited
    processing power and resources. But, the voluminous and heterogeneous data generated
    by these devices require efficient and data type specific processing. Centralized
    cloud-based IoT scheme brings out an effective solution in this regard. However,
    solo cloud dependent processing is constrained by latency and power consumption
    issues which can be solved—up to certain extent—by introducing a fog layer. The
    fog assisted IoT framework with smart gateways (as proposed in [35]) is an approach
    to enhance reliability, energy-efficiency and performance of IoT frameworks. Nonetheless,
    there are still QoS issues with sensitive data transmission and there is no need
    to process various types of data (e.g., delay-sensitive and loss-sensitive) in
    each layer of a framework. An effective solution to this problem is to allow the
    framework to be able to handle different types of “on demand” data processing
    in different layers. This has been achieved in the proposed framework consisting
    of five layers (perception, mist, fog, cloud, and application). The introduction
    of an additional layer (i.e., the mist layer) to the existing fog-based architecture
    reduces data volume to be transmitted by the IoT devices through rule-based preprocessing
    of data. This reduction in data volume in turn reduces power consumption of the
    IoT devices, and latency (processing as well as transmission) and computational
    complexity of the framework. Therefore, the proposed IoHT framework is capable
    of selecting appropriate data transmission policies based on the disparate data
    sources to minimize latency; ensuring optimal resource utilization through delegating
    and delivering processes to layers with relatively less loads; guaranteeing minimal
    transmission delay through appropriate load balancing; and assuring most favorable
    data-sensitive resource allocation for prioritized data transmission. The following
    sections describes the various components of the framework. A. Ecosystem An interoperable
    ecosystem consisting of diverse devices, applications, and back-end systems is
    essential for successful architectural design of an IoHT framework which will
    ensure undisrupted information flow for accurate and timely decision making [84],
    [85]. A conceptual overview of the proposed IoHT ecosystem is shown in Fig. 3.
    As the ecosystem diagram indicates, various IoHT stakeholders who reside at the
    outer circle (e.g., healthcare organizations and professionals, patients, applications,
    and information systems) connect to their relevant counterparts to the inner circles
    aiming seamless information exchange. Outer circle is the most interactive and
    responsive one with very little analytical capabilities. Gradually moving toward
    the inner circles, the analytical capabilities along with latency and data storage
    increase. So, to ensure delay tolerant data transmission of real-time data as
    well as big data, the proposed architecture adopts appropriate layer-specific
    data transmission polices. Fig. 3. Overview of an IoHT ecosystem with its various
    stakeholders which implements the proposed framework. Show All B. Network Architecture
    Fig. 4 shows the proposed IoHT framework’s architecture. The five layers are:
    1) perception layer; 2) mist layer; 3) fog layer; 4) cloud layer; and 5) application
    layer. Each of these layers has been designed with predefined functionalities
    relevant to the IoHT framework’s data transmission and processing pipeline. Fig.
    5 shows a block diagram with the functionality of individual layers. Fig. 4. Architecture
    of the proposed IoHT framework indicating different layers and possible connectivities
    among them. The arrow directions indicate the flow of data. Show All Fig. 5. Layer-wise
    functionality of the proposed IoHT framework. Show All 1) Perception Layer: The
    perception layer is the lowest layer of the proposed IoHT framework. This layer
    is responsible for recognizing physical objects, and gathering contextual and
    healthcare data from devices generating (near) real-time as well as nonreal-time
    data. The data are mainly measured from individuals and their surroundings through
    small sensors, embedded systems, RFID tags, and readers, small to medium to large
    diagnostic and healthcare devices, medical and clinical imaging devices, and any
    data acquisition and transmission enabled devices. These hardware devices are,
    in general, connected to the data communication network. Besides the real-time
    healthcare data, there are healthcare big data [e.g., structured eHR, electronic
    medical record (eMR), (non-)clinical/medical imaging data, unstructured clinical
    notes, etc.] which demand separate handling due to their requirement of advanced
    data analytics [86], [87]. In the proposed framework, both kinds of healthcare
    data are transmitted to specific overlaying layer (either mist or fog or cloud)
    based on the data type and their processing requirements. 2) Mist Layer: To facilitate
    time-critical data processing, the mist computing layer has been introduced in
    the model. Mist computing resides directly within the network fabric and operates
    on the extreme edge of it with the help of sensor and actuator controllers. This
    layer is responsible for performing basic rule-based preprocessing of the sensor
    data (e.g., data aggregation, fusion, and filtering). At the edge of the IoT network,
    a fair share of the “Things” are with limited resources (e.g., power, communication
    bandwidth, and memory). Mist computing contributes to optimal resource utilization
    of the Things. For example, since communication consumes ∼5× the power of computing,
    ensuring required transmission instead of on demand transmission will facilitate
    in optimizing the power consumption [88]. 3) Fog Layer: One of the main driving
    forces behind development of the IoT technology is the necessity to process data
    “on the fly” to detect anomalies, provide alerts at real-time, and activate necessary
    actions automatically. This clearly demands a system with high responsiveness
    and minimal latency. To this goal, using centralized cloud-based models are inappropriate
    due to their high latency. In such situations, decentralizing and delegating the
    processing loads on different layers based on the application’s demand is needed.
    The fog layer forms a decentralized architectural pattern for bringing computing
    resources and application services closer to the edge, thus, reducing the response
    latency. As for the functional components, the fog layer supports—local data storage,
    data filtering, data compression, data fusion, and intermediate data analytics
    to reduce disposable load on the cloud, improve system performance and QoS, and
    save backbone bandwidth. 4) Cloud Layer: The cloud layer is capable of connecting
    to perception layer, fog layer, and application layer. Aggregated healthcare data
    from fog layer are sent to the cloud layer for long-term storage, and big data
    and advanced analytics. Also data from nonsensor sources, such as eMR, eHR, e-prescription
    platform, etc. get seamlessly integrated at this layer. In order to extract meaningful
    insights from the heterogeneous healthcare data, the cloud layer performs various
    advanced data analytics including, machine learning, data mining, rule-based processing,
    and automated reasoning-based algorithms. However, delegating appropriate computing
    loads to fog layer and using cloud layer for computationally expensive operations
    will improve system performance. 5) Application Layer: The application layer is
    the topmost layer of the proposed IoHT framework. It provides user interfaces
    between the IoHT stakeholders/consumers and the framework itself to directly reflect
    the generated economic and social benefits. Through these user interfaces various
    healthcare applications are delivered to the respective stakeholders. This layer
    also provides access—subject to access rights and privileges—to relevant resources
    from the cloud or fog layer directly to the healthcare application developers
    and consumers. C. Data Transmission Policy To facilitate seamless communication
    of heterogeneous data, a data-centric transmission scheme has been utilized in
    the proposed five-layered architecture of the IoHT framework. The perception layer
    generates three possible types of delay-sensitive data, i.e., real-time, near-real-time,
    and offline/batch mode data. In order to achieve better QoS, reduced latency,
    and optimized power consumption, separate transmission paths for real-time data
    and big data have been used. Fig. 6 represents the transmission and processing
    flow of data in the proposed model. Based on data traffic and resource availability,
    the computational loads (e.g., rule-based preprocessing, pretrained machine learning,
    advanced machine learning, big data analytics, etc.) are delegated to an appropriate
    layer (either mist or fog or cloud) in the layered architecture. This resulted
    in different scenarios with specific transmission paths as detailed in the following
    sections and shown in Fig. 7. Fig. 6. Flowchart of data transmission and processing
    taking place at different layers of the IoHT framework. Show All Fig. 7. Possible
    data transmission and processing paths in the IoHT framework’s layer stack. Show
    All 1) Real-Time Data Transmission: a) Scenario 1: Many healthcare applications
    require data to be processed at real-time. In the proposed IoHT model, real-time
    data analytics are hosted at the closest possible location, where the data is
    generated. As indicated in Fig. 7 by the red-dashed lines with arrows, the generated
    time-sensitive sensor data are at first forwarded to the mist layer for preprocessing,
    followed by the fog layer for necessary intermediate analytics, and finally rendering
    decision to the application layer. For example, if a patient experiences high
    blood pressure fluctuations along with symptomatic discomforts, it is necessary
    to process the generated data and forward a decision to the caregiver as soon
    as possible to prevent a possible stroke. In this case, the preprocessed data
    from mist layer are further processed in fog layer and forwarded to the application
    layer for necessary actions by the stakeholders. b) Scenario 2: The intermediate
    data analytics performed at the fog layer is not sufficient for some healthcare
    applications. Rendering a decision for these types of applications may require
    big data analytics and advanced machine learning or long-term data storage for
    longitudinal studies. In those cases, data are offloaded to the cloud layer for
    the required processing, analysis, and storage. This transmission path is shown
    in Fig. 7 using the green dotted-dashed line with arrows. The data and the analysis
    results are usually stored in the cloud for further reference. Adverse drug reaction
    (ADR) service can be an example of this scenario. Medication for a particular
    disease needs diagnosis as well as patients previous history as ADR is inherently
    generic. So, in this case, data sensed from patient’s terminal are forwarded to
    mist layer for recognizing the drug. Later on, fog forwards the identified drug
    to the cloud, where after careful analysis of relevant eMR and allergy profiles
    the drug compatibility is decided and the decision is sent to the application
    layer to be accessed by the healthcare professionals. 2) Conventional Data Transmission:
    a) Scenario 3: Massive data generated from advanced medical instruments, test
    results, eMR requires data mining, predictive analysis, and other advanced analytics.
    Only cloud computing is capable of performing these computationally demanding
    processing. So, in this scenario, data from conventional sources are directly
    offloaded to the cloud for processing. This transmission path is indicated by
    the arrowed blue dotted lines in Fig. 7. An example of such a scenario is that,
    MRI produces thousands of high resolution images per examination which require
    more computation power and storage, and can be efficiently served only by the
    cloud. In this scenario, data are directly forwarded to the cloud without any
    processing or holding in the mist or fog layers. SECTION IV. Optimal Resource
    Allocation and Load Balancing The IoHT nodes in the perception layer collect the
    (near) real-time as well as nonreal-time healthcare data to monitor patients.
    These collected data are forwarded to the IoT hub(s) (also called access point
    or AP). Based on the traffic class and processing requirements, these data can
    be processed in the mist, fog, and cloud layers as discussed in Sections III-B
    and III-C. In the process of effective handling of these data, the end-to-end
    (E2E) delay, throughput, packet loss, energy efficiency are crucial for maintaining
    the QoS of the proposed IoHT framework. To handle these heterogeneous data efficiently
    while maintaining the high QoS, the network resources are to be dynamically allocated.
    To this goal, the proposed IoHT framework relies on software defined networking
    (SDN), which is a programmable network structure that can be deployed on the top
    of IoHT framework as a centralized/distributed control layer for resources (e.g.,
    bandwidth and buffer size) allocation, scheduling, routing, and flow control through
    SDN controller (SDNC) [89]. As SDN fulfills the requirements of various applications
    and workloads through network virtualization by decoupling control plane from
    data plane [90], it has been considered with the IoHT framework to manage the
    resource demand of exponentially growing IoT devices. A. Traffic Classification
    The perception layer of the IoHT framework (as discussed in Section III-B1) generates
    heterogeneous data or network traffic. In order to achieve better QoS, these network
    traffic are classified as the delay-sensitive ( DS ), loss-sensitive ( LS ), and
    both delay- as well as loss-sensitive (termed as “Mixed”) ( M ) traffic. This
    classification is mainly based on transmission data rate ( C ) and queuing delay
    ( tQ ), and is used to prioritize the network traffic. Table I shows various traffic
    classes, their service types, transmission priority ( P ), and exemplary applications.
    TABLE I Traffic Classification of IoHT Healthcare Data B. Resource Allocation
    In order to achieve better QoS, the objective is to reduce the time delay ( tD
    ) and packet drop rate ( Pkt drop ) during the transmission process. All the IoHT
    nodes in the mist layer achieve the minimum threshold requirement for both of
    these parameters through an optimal resource allocation. Fig. 8(a) illustrates
    an example scenario of the resource allocation problem. Fig. 8. Exemplary scenario
    of the IoHT framework with mist, fog, and cloud layers. The network is configured
    using SDN. The AP allocates resources based on the latency and packet drop rate
    demand of each IoHT nodes. Show All Consider the output link capacity of an AP
    is C , there are N IoT devices in a mist (see Fig. 8), each IoHT device has packet
    size of Pkt size . In order to ensure the QoS requirement of i th IoT device,
    the user requirement is <t D i , Pkt drop i > and the corresponding resource demand
    is < B d i , L d i > , where B d i and L d i are the bandwidth demand and buffer
    length demand of the i th IoHT user node (see Table II). As the allocated resource
    to i th IoHT device is proportional to the requirement of that user, the maximum
    resource ( Γ i ) awarded to the i th IoHT node by the SDN-based resource allocator
    is Γ i = = max[ B i C , L i L ] max[ B d i C B i B d i , L d i L L i L d i ]=max[
    D c i U c i , D l i U l i ] (1) View Source where D c i = B d i /C and D l i =
    L d i /L are the ratios of bandwidth demand of the i th node and the maximum capacity,
    and buffer length demand of the i th node and the total buffer length of AP, respectively.
    The U c i = B i / B d i and U l i = L i / L d i are the requirement to demand
    ratio of bandwidth and buffer length, respectively, for the i th node. TABLE II
    QoS Requirement and Corresponding Resource Demand to Achieve the QoS Requirement
    of the i th IoHT Node Using the M/D/1 queue model [91], the E2E delay tD includes
    the transmission delay tTx , processing delay tP , and queuing delay tQ which
    are calculated by tD= = tT x i +tP+tQ ∑ cl ∑ fog ∑ sen [ N pkt Pkt size C +( λ
    2μ(μ−λ) + 1 μ )+cλ] (2) View Source where λ and μ are the arrival and service
    rate, N pkt is the number of packets, c is the constant duration required to complete
    a job by a processor, sen refers to sensor and cl refers to the cloud. The packet
    drop occurs when the average queuing length E[ Q i ] is higher than demanded buffer
    length L d i / Pkt size . Based on [91], the packet drop rate is expressed by
    Pkt drop i = E[ Q i ]− L d i / Pkt size E[ Q i ] . (3) View Source Finally, the
    resource allocation optimization problem is formulated as max s.t  [( U c 1 ,
    U l 1 ),( U c 2 , U l 2 ),…,( U c N , U l N )]  ∑ n=1 N B n ≤C ∑ n=1 N L n ≤L.
    (4) View Source C. Load Distribution In the Fog/access layer, the E2E latency
    can be reduced by link distribution and link fusion techniques. As illustrated
    in Fig. 8, a link scheduler selects multiple links, distributes the traffic to
    reduce the E2E delay and finally aggregates the traffic at the other end of the
    access layer. If the link scheduler selects M links based on the demand of the
    IoHT users, the link adaptation optimization problem can be formulated as max
    s.t.  f(T,1/ Pkt drop )  ∑ m=1 M γ m B d ≤C  ∑ m=1 M γ m L d ≤L (5) View Source
    where T is throughput, B d and L d are the bandwidth demand and buffer length
    demand of an AP. γ m is the fraction of bandwidth/buffer length allocated by the
    load balancer and is expressed by γ m = = Fraction of allocation in the mlink
    ( B m ∑ m B m )β+( L m ∑ m L m )(1−β) (6) View Source where β= ⎧ ⎩ ⎨ 0, 1, 0.5,
    if Traffic type is LS if Traffic type is DS if Traffic type is M. View Source
    The proposed load balancing scheme is shown in Algorithm 1. The central SDN, as
    a logical controller, selects M multiple links according to traffic demand to
    coordinate load distribution. At the beginning of the process, network controller
    specifies traffic classes based on demand. For each outgoing link i the value
    of γ i is calculated from (6). For delay-sensitive and loss-sensitive traffics,
    loads are distributed based on demanded bandwidth and demanded buffer length,
    respectively. For mixed type data traffic, load distribution is done based on
    comparatively greater requirement of demand. Algorithm 1 Algorithm for Load Balancing
    Require: Output link capacity of AP as C , Queuing buffer length as L , Bandwidth
    length demand of AP as B d , Buffer length demand of AP as L d Ensure: Distributed
    Load 1: procedure BalanceLoads( C , L , B d , L d ) 2: Initialize β , ν , η ,
    Ω , ω ; 3: SDNC selects M links based on traffic demand; 4: if TrafficPriorityClass
    == 1 then 5: β⟵1 ; 6: else if TrafficPriorityClass == 2 then 7: β⟵0 ; 8: else
    9: β⟵0.5 ; 10: end if 11: for all Selected Links as i do 12: Calculate γ i using
    equation (6); 13: Ω i = γ i B d ; and ω i = γ i L d ; 14: if β==1 then 15: Distribute
    load to link i using Ω i value; 16: else if β==0 then 17: Distribute load to link
    i using ω i value; 18: else 19: B= B d ∑ i B i ;L= L d ∑ i L i ; and η = max f(
    B,L ); 20: if η==B then 21: Distribute load to link i using Ω i value; 22: else
    23: Distribute load to link i using ω i value; 24: end if 25: end if 26: end for
    27: end procedure D. Computational Complexity Considering the decentralized data
    processing capability offered by the proposed framework enables it to perform
    processing at multiple levels reducing the amount of computations needed at subsequent
    levels. This is mainly because aggregating raw data from various IoT devices results
    in matrices with very large dimensions, leading to a resource demanding system
    with intolerable computation complexity. Therefore, the computational complexity
    of the proposed framework is lesser in comparison to other existing frameworks.
    Additionally, the proposed load balancing algorithm’s complexity has an upper
    bound of O(n) , where n is the number of active selected links of the network.
    SECTION V. Results An example model is considered in this section to demonstrate
    the feasibility and advantages of the proposed multilayer mist-fog-cloud architecture
    for the IoHT framework. Considering, there are 100 IoHT nodes collecting delay-sensitive
    and loss-sensitive healthcare data from a hospital/home. The links between IoHT
    nodes (through microcontroller or microcomputer) and APs are IEEE 802.11. There
    are 5 fog nodes, 1 cloud server, and the link data rate is 54 Mb/s. The raw data
    generated by these IoHT nodes can be processed using the resources available at
    the mist layer. When the process is high (i.e., high processing delay), the mist
    can offload the processing to the fog nodes (also called fog processors). The
    process availability are generated randomly. Also, the link bandwidth and the
    queue length in the router are assumed to be distributed randomly. The fog nodes
    can be selected based on the demand and the processing delay. Finally, the information
    extracted from the mist/fog layer are sent to the server in the cloud layer. The
    link speed between the fog and the cloud is 10 Gb/s. The processing speed ratio
    of the mist to fog and fog to cloud are 1: 1000 and 1: 100, respectively. The
    parameters used to simulate the heterogeneous mist-fog-cloud for the delay-sensitive
    and loss-sensitive IoHT healthcare data are listed in Table III. TABLE III Simulation
    Parameters for the Heterogeneous Mist-Fog-Cloud-Based IoHT Framework Simulation
    Fig. 9 shows the E2E delay (or latency) for the simulation settings given in Table
    III. The results indicate that the E2E delay decreases when mist-fog nodes are
    involved in the computation along with the cloud. However, involvement of more
    fog neighbors and mist resources can reduce the E2E delay as this process reduces
    the queuing and transmission delays. The computational latency decreases when
    the number of neighboring fog nodes increase. Fig. 9. E2E delay of cloud, fog-cloud,
    and mist-fog-cloud for the simulation setting listed in Table III. The latency
    is minimal when all the mist-fog-cloud layers are involved in the process of data
    transmission and processing. Show All Fig. 10 shows the effect of buffer size
    on the packet delivery rate. The buffer size reduces the packet drop. When the
    buffer size increases the packet delivery rates in mist and mist-fog layers reduce.
    However, it should also be noted that the increase of buffer size also increases
    the queuing delay and total latency. Thus, the appropriate size of the buffer
    must be selected to ensure high delivery rate and low latency. Fig. 10. Increase
    in buffer size reduces packet drop. When buffer size increases, packet delivery
    ratios improve for all the layers. Show All Fig. 11 illustrates the outcome of
    involving fog neighbors on the task distribution of fog and cloud layers. The
    simulation results suggest that when the flow controller includes more fog neighbors
    in the task distribution process, the load on the cloud decreases as the processing
    performance on the fog nodes increase. The load on the cloud is about 60% with
    one fog node, and the load drops exponentially to 37% when the number of fog neighbors
    are four. Fig. 11. Effect of number of fog neighbors on the task distribution
    of fog/fog-cloud layers. In both cases inclusion of more fog nodes decreases the
    work load on the layers. Show All While evaluating the efficacy of the proposed
    framework, we compared its transmission time with one of the state-of-the-art
    fog computing-based framework [35]. As shown in Fig. 12, the proposed heterogeneous
    framework (denoted by mist-fog-cloud) requires comparable or less time to transmit
    same amount of processed samples in comparison to fog-based framework (denoted
    by Fog-Cloud) proposed in [35]. The mist plays its role in reducing the transmission
    time while handling real-time data (i.e., smaller sample size). In transmitting
    60 KB samples in different network conditions defined in [35] (e.g., light load,
    medium load, and heavy load), the proposed mist-fog-cloud framework would require
    1.5, 2.16, and 3.39 ms in comparison to Fog-Cloud-based framework which would
    require 1.67, 2.4, and 3.395 ms. Fig. 12. Mist facilitates reduction in transmission
    time. At different network conditions the Mist-based proposed framework showed
    an improvement in the transmission time. Show All The above specified lower transmission
    time is also facilitated by the fact that there are multiple levels of data filtering
    in our proposed model. This reduces the amount of real-time data to be transmitted
    along the network, thus, reducing computational complexity of the proposed framework
    [92]–[94]. Additionally, sophisticated data analytic schemes can also be employed
    to further reduce the computational complexity [95]. SECTION VI. Conclusion This
    paper proposes a heterogeneous cloud-based IoHT communication framework with mist
    and fog computing. The framework consists of perception, mist, fog, cloud, and
    application layers which can handle separately data routing paths for real-time
    as well as conventional data sources. To ensure high QoS of such heterogeneous
    communication frameworks, reducing E2E latency and packet drop rate are two main
    challenges. Through optimizing resource allocation and flow control, the proposed
    framework delivers improved overall QoS. Simulation results show that the proposed
    framework can achieve low E2E latency and packet drop rate. The obtained results
    clearly indicate the suitability of the proposed IoHT framework in the healthcare
    domain. Nonetheless, this paper can be extended by incorporating advanced machine
    learning techniques (e.g., deep learning) in identifying the heterogeneous traffic,
    and employing bio-inspired models to ensure effective resource usage, schedule
    optimal flow to improve performance and increase data distribution to reduce overall
    computational complexity of next generation IoHT-based healthcare systems. Authors
    Figures References Citations Keywords Metrics Footnotes More Like This Integration
    of IoT, Edge Computing and Cloud Computing for Monitoring and Controlling Automated
    External Defibrillator Cabinets in Emergency Medical Service 2019 5th International
    Conference on Information Management (ICIM) Published: 2019 Quality of Service-Adaptive
    Industrial Internet of Things leveraging Edge Computing and Deep Reinforcement
    Learning : The Deep QoS-Adaptive Learning Environment (DeQALE) Architectu... 2022
    17th Iberian Conference on Information Systems and Technologies (CISTI) Published:
    2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: (Rahman et al., 2018)
  journal: IEEE internet of things journal (Online)
  key_findings: The proposed framework can efficiently handle and route near-real-time
    and offline/batch mode data, optimizing resource allocation and ensuring high
    QoS with reduced latency and packet drop rate.
  limitations: null
  main_objective: To propose a five-layered heterogeneous cloud-based IoHT communication
    framework with mist and fog computing to efficiently handle and route real-time
    and conventional data sources, ensuring high QoS, reduced latency, and packet
    drop rate.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6488907/8738925/08491315.pdf
  publication_year: 2019
  relevance_evaluation: This paper is highly relevant to the outline point as it presents
    a novel, heterogeneous cloud-based IoHT communication framework with mist and
    fog computing. This framework specifically addresses the need for efficient data
    handling and routing of real-time and conventional data sources, which is crucial
    for reducing latency and packet drop rates. The authors also discuss the use of
    software-defined networking and link adaptation-based load balancing to optimize
    resource allocation and improve QoS, which are important considerations for ensuring
    the reliability and performance of automated irrigation systems.
  relevance_score: 0.95
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Software-defined networking, link adaptation, load balancing
  title: Toward a Heterogeneous Mist, Fog, and Cloud-Based Framework for the Internet
    of Healthcare Things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.jksuci.2021.09.015
  analysis: '>'
  authors:
  - Olivier Debauche
  - Saïd Mahmoudi
  - Pierre Manneback
  - Frédéric Lebeau
  citation_count: 10
  explanation: 'In the paper, the specific provisions of the Kappa architecture are
    presented like it simplifies the Lambda architecture by combining the real-time
    and batch layers. The Kappa architecture is compared to the Lambda architecture:
    although it is simpler to implement and efficient for real-time processing, it
    is less appropriated for use cases where high accuracy in the processing of large
    batch size is required.'
  extract_1: Kappa architecture, proposed by Jay Kreps from LinkedIn (Kreps, 2014),
    simplifies the Lambda architecture by combining real-time and batch layers. This
    cloud architecture differs from the Lambda architecture by using a non-permanent
    storage system of data in an unchangeable log file such as system as Apache Spark
    or Apache Kafka, and consequently allow only storage for a limited time in order
    to allow an eventual reprocessing of these data.
  extract_2: 'Batch and Speed Layers are also replaced by a stream processing engine.
    So, the Kappa Architecture is composed of two layers: streaming and serving layers
    and can be implemented with a publish-subscribe messaging like Apache Kafka, which
    facilitates data ingestion.'
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Related
    works 3. Methodology 4. Architectures 5. New trends 6. Towards Agriculture 5.0
    7. Conclusion Declaration of Competing Interest Acknowledgment References Show
    full outline Cited by (28) Figures (14) Show 8 more figures Tables (17) Table
    1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Journal of King Saud
    University - Computer and Information Sciences Volume 34, Issue 9, October 2022,
    Pages 7494-7514 Cloud and distributed architectures for data management in agriculture
    4.0 : Review and future trends Author links open overlay panel Olivier Debauche
    a b c, Saïd Mahmoudi a, Pierre Manneback a, Frédéric Lebeau b c Show more Add
    to Mendeley Share Cite https://doi.org/10.1016/j.jksuci.2021.09.015 Get rights
    and content Under a Creative Commons license open access Highlights • Cloud architectures
    used in Agriculture 4.0. • Distributed Architectures and Cloud Computing complements.
    • Strategies of association between Edge, Fog, Cloud. • New architectural and
    computing trends. Abstract The Agriculture 4.0, also called Smart Agriculture
    or Smart Farming, is at the origin of the production of a huge amount of data
    that must be collected, stored, and processed in a very short time. Processing
    this massive quantity of data needs to use specific infrastructure that use adapted
    IoT architectures. Our review offers a comparative panorama of Central Cloud,
    Distributed Cloud Architectures, Collaborative Computing Strategies, and new trends
    used in the context of Agriculture 4.0. In this review, we try to answer 4 research
    questions: (1) Which storage and processing architectures are best suited to Agriculture
    4.0 applications and respond to its peculiarities? (2) Can generic architectures
    meet the needs of Agriculture 4.0 application cases? (3) What are the horizontal
    development possibilities that allow the transition from research to industrialization?
    (4) What are the vertical valuations possibilities to move from algorithms trained
    in the cloud to embedded or stand-alone products? For this, we compare architectures
    with 8 criteria (User Proximity, Latency & Jitter, Network stability, high throughput,
    Reliability, Scalability, Cost Effectiveness, Maintainability), and analyze the
    advantages and disadvantages of each of them. Graphical abstract Download : Download
    high-res image (103KB) Download : Download full-size image Previous article in
    issue Next article in issue Keywords Agriculture 4.0Smart farmingSmart agricultureLambda
    architectureKappa architectureEdge computingFog computingMicro-service architectureData
    lakeData houseBlockchainOsmotic computingDew computing 1. Introduction Nowadays,
    the Internet of Things (IoT), also formerly named pervasive Internet, is present
    in all domains of our daily life and follows exponential growth. The number of
    connected devices is estimated at the horizon of 2022 at 42.5 billion and at the
    horizon of 2025 at 75.5 billion1. The global IP traffic is estimated to 333 ZB
    per month in 20222 with the need to store and treat this data (Carnevale et al.,
    2019). The European Commission has predicted that 18 billion of 29 billion connected
    devices will be related to the IoT in 2022 (Agency, 2020). Cisco in a white paper
    has announced that connected devices to the Internet will generate 850 ZB/year
    by 2021 (Cisco, 2018). It is difficult to precisely determine the number of connected
    devices on a world scale, but their number is about several billion. In addition,
    McKinsey Global Institute predicts a total economic impact of IoT and Edge Computing
    devices that will reach 11 trillion USD by 2025 (Manyika and Chui, 2015). In the
    sector of the agriculture, nearly 12 million agricultural sensors installed globally
    by 2023 with an increase of 20% annually, which is predicted by the Business Insider
    Intelligence Service (Meola, 2021). Moreover, the smart agriculture business was
    estimated at USD 13.8 billion in 2020 and is projected to reach USD 22 billion
    by 2025 at a Compound Annual Growth Rate (CAGR) of 9.8% (Meola, 2021). Within
    the IoT era, the type of clients is becoming increasingly lightweight. IoT devices
    and the network environment is gradually changing from high-speed wired networks
    to unstable wireless communication. Meanwhile, users'' demand IoT applications
    is also shifting to real-time and context-aware service provisioning, making the
    focus moving progressively from the cloud to the edge (Ren et al., 2017). The
    cloud is located within the Internet and is geographically centralized, is constituted
    of a few resourceful server nodes, and is inserted in multi hops in terms of distance
    among the clients (Munir et al., 2017). Cloud Computing (CC) is a paradigm widely
    available that offers benefits like minimal management effort, convenience, rapid
    elasticity, pay per use, ubiquity (Ai et al., 2018), easy maintenance, centralized
    management, and high server utilization (Shi et al., 2016). Furthermore, resources
    centralization implies an increase of average network latency, heavy bandwidth
    utilization, and high processing delay. Indeed, the tremendous amount of data
    handled in a unique server point can create congestion in the cloud servers and
    backhaul links (El-Sayed et al., 2017). Nevertheless, the rapid parallel development
    of the pervasive intelligent device, ubiquitous network, growth in popularity
    of virtual and augmented reality, self-driving vehicles, UAVs, social networks,
    networks applications, and services are not without consequences. As a matter
    of fact, the network bandwidth and speed limit performance and effectiveness of
    cloud computing especially for real-time and mission-critical applications cannot
    be guaranteed. Moreover, cloud computing can be hardly adapted or applied to various
    types of technologies and applications scenarios (Zhou et al., 2017). To address
    these issues, various extensions of central cloud computing have been proposed
    by industrial and academics to move computing and storage at the edge of the network
    close to users. Fog computing uses network elements between the central cloud
    and the edge of network and absolute edge elements such as microcontrollers close
    to sensors to process and store data with a distributed manner close to nodes.
    Whereas, with the developments of mobile devices, some new paradigms close to
    mobiles users have been proposed. For example, cloudlets or micro data centers
    are geographically implanted and accessible by means of Wi-Fi protocols; but,
    this approach does not always guarantee enough network quality. Manufacturers
    of cellular network equipment have proposed the Mobile Edge Computing (MEC) paradigm
    that associates fog servers with base stations to provide services to mobile devices.
    MEC associated with 5G allows to combine an ultra-low latency network with high
    available bandwidth, and processing resources accessible in the vicinity. The
    MEC original concept has been extended then to wireless networks and consequently
    renamed in “Multi-access Edge Computing” (Wang et al., 2020). Agriculture has
    previously undergone two waves of revolution. The first one was mechanization
    and the second was called the green revolution with genetic modifications (Saiz-Rubio
    and Rovira-Más, 2020). Since the late 1990s, the digital transformation of the
    agriculture in Agriculture 3.0 also called Precision Agriculture has begun with
    the integration of Geographical Information System (GIS), Global Positioning Systems
    (GPS), and the usage of sensors have invaded agriculture. They allowed the emergency
    of image processing, techniques using deep learning, and machine learning in the
    field of computer vision. This latter is implemented to discriminate weed, identify
    crops, detect diseases,…etc. The production of a large amount of data by agriculture
    3.0 has required the development of big data technologies to process them, reflecting
    important changes in various fields of research. Collected data must be recorded
    in a specific format in order to discover patterns, curate errors, eliminate duplicated
    or inconsistent data, or solve noise problems (Triantafyllou et al., 2019). Smart
    Farming also called Smart Agriculture or Agriculture 4.0 is a domain of IoT in
    full growth which bring innovative paths to improve the adaptability, the efficiency,
    and the resilience of the agriculture of production systems (Iaksch et al., 2021)
    boost competitiveness and profit (Triantafyllou et al., 2019), allocate resources
    reasonably, and avoid food waste (Zhai et al., 2020, Wolfert et al., 2017) thanks
    to the contribution of autonomous context awareness provided by sensors and the
    capability to execute autonomous or remote actions (Wolfert et al., 2017). Smart
    Farming displaces the strict application from the farm location to affect related
    fields such as decision making by farmers, biodiversity, supply chains management,
    food availability and quality, insurance, and research in environment and earth
    sciences,… Smart Farming is distinct from other domains of the Internet of Things
    (IoT) by the observation and action of biological objects (animals or plants).
    It differs from medical IoT by the fact that there are no issues related to privacy;
    but, the confidentiality of data is related to production processes. Like most
    areas of the IoT, Wireless Sensing and Actuating Network (WSAN) use Low-power
    and Lossy Network organized in hierarchical routing to collect data and actuate
    devices. Multi-path routing protocols can also be implemented to balance the data
    transfer load and conserve the energy of limited battery life, basic computational
    skills, unique communication identifier, and resources-constrained nodes. Due
    to the limited battery life, it is difficult and sometimes impossible to recharge
    or replace (Debauche et al., 2021). Moreover, energy-saving and ambient energy
    techniques must be applied to deal with the active and inactive operational time
    and schedule information transmission (Triantafyllou et al., 2019). To which objects
    can be added like connected agricultural vehicles, milking robots, Unmanned Aerial
    Vehicle (UAV) commonly known as drones, Unmanned Ground Vehicle (UGV) also called
    robots, mobile devices such as tablets used to encode punctual observations (Debauche
    et al., 2021), and external sources such as public geo-services (Triantafyllou
    et al., 2019). The use of IoT in agriculture 4.0 ranges from family farming as
    for example in India on a very small scale with a few low-cost sensors and actuators
    to very large scales with thousands of expensive commercial sensors and many connected
    agricultural pieces of machineries as in the American mid-west. Smart Farming
    is characterized as aforementioned by a wide variety of objects that can produce
    the highly contrasted amounts of data from few bytes/s to Gb/s. In addition, the
    availability of network protocols in rural areas to transmit this data impact
    also the type of architecture to implement. Applications need treatments in real-time
    and/or at a different time. The ”real-time” requirements are also very variable
    depending on the use case. For instance, remote control of drones requires reaction
    times of at most a few milliseconds while the Variable Rate Fertilizer (VRF) or
    Variable Spraying (VS) application aim to optimize nutrients and herbicides application
    respectively need reaction time in a range of few milliseconds to few seconds.
    The real-time processing for monitoring a herd of cattle is of the order of a
    few minutes to a few hours. The data retention time is very variable and is highly
    dependent on each use case. For example, UAVs produce tremendous quantities of
    images to transfer to the cloud in real-time where they must be quickly processed
    and stored. They can also be post-processed to extract additional data in batch
    processing. While UGVs images lose their value after processing and eventually
    actuating. However, if data is of a special, new or exceptional nature, it can
    be stored with a view, for example, to improving artificial intelligence algorithms.
    Other sensors transmit data only when anomalies are detected while others transmit
    at regular intervals a tiny amount of data. However, the adoption of Smart Farming
    is hampered by the lack of models to guide stakeholders on how to implement and
    to deploy dense and heterogeneous IoT-based monitoring systems and manage their
    interoperability (Triantafyllou et al., 2019). Commercial sensors are very expensive
    making it impossible for small farms to implement them (Garcia et al., 2020).
    In addition, two trends are currently opposed. That coming from the manufacturers
    of agricultural machinery who have developed their ecosystems and who want to
    extend the services offered to farmers by attracting them into the captive ecosystems
    in which they are locked. Furthermore, another trend is the development of open
    ecosystems in which farmers can preserve the ownership of their data and keep
    control of the processing carried out on this data and of their use. On one hand,
    farmers are therefore faced with a dilemma where they are in any case forced to
    use agricultural equipment that collects their data against their will; on the
    other hand, they want to keep control of their data collected through IoT sensors.
    Currently, it is difficult to predict which of these two trends will take precedence
    over the other or whether one of the two will coexist (Wolfert et al., 2017).
    In this context, both private and public researchers can either use generic commercial
    platforms offered by cloud players on which they have limited possibilities of
    adaptation or develop their own architecture on the basis of commercial or free
    bricks, but with much greater possibilities of adaptation. In this case, the choice
    is also delicate, and a bad evaluation of the constraints can jeopardize the research
    project. Due to the recent advances in big data, we present a survey that provides
    an overview of the state of the art regarding Smart Farming. It aims at summarizing
    parameters that condition the choice of architecture to collect, process, and
    store agricultural data. Since there is a wide variety of use cases, it is important
    to make an informed choice when it comes to architecture. In this way, we address
    the current gap in the literature with a review of cloud architecture used in
    Agriculture 4.0 to collect, process, and store data to enlighten the reader about
    the possible choices and the new trends that emerge. The rest of this paper is
    structured as follows: The second section is composed of two parts. In the first
    part, we summarize related previous review in the domain and their contributions,
    in order to contextualize our contribution to the literature. In the second part,
    we identify architectures implemented in Agriculture 4.0 use cases. In the third
    section, we describe the methodology used to identify papers, the conceptual framework
    used to analyze the literature, and the criteria used to compare the selected
    architectures. In the fourth section, we present architectures used to collect,
    process, and store data. We describe successively the cloud-centric architectures,
    the extension of cloud paradigm, the distributed architecture. In the fifth section,
    new trends and futures directions are presented. In the sixth section, we discuss
    the future evolution of Agriculture 4.0 to Agriculture 5.0. Finally, the last
    section concludes this paper with recommendations and perspectives. 2. Related
    works We begin our review by identifying the previous review realized in the field
    of Internet of Things applied to Smart Agriculture to take stock of the state
    of art and highlighting aspects that have not been explored at the present time.
    In this section, we focus to achieve two objectives. The first aims to position
    our work in relation to the existing literature. The second aims to identify architectures
    commonly used in the case of applications in Agriculture 4.0. 2.1. Previous reviews
    Reviewed papers presented in Table 1 were selected in the timeframe from January
    2017 to July 2021. The major contribution of each paper was extracted and highlighted
    to show our contribution to the literature. Table 1. Summary of previous review
    achieved on big data management in a context of Smart Farming. Major Contribution
    Reference Survey of agro-industrial and environmental solutions for monitoring,
    control, logistics, and prediction. (Talavera et al., 2017) Diagnosis and analysis
    of existing IoT deployments in regards to communication protocols. (Ray, 2017)
    Survey of IoT technologies in agriculture and highlighted the challenges going
    forward. (Tzounis et al., 2017) Identification of IoT challenges, its application
    in smart agriculture, and presentation of trends and technological innovation
    (Elijah et al., 2018) Review of IoT applications in Precision Agriculture, evaluation
    of previous contributions by researchers, and pathways to future innovation (Khanna
    and Kaur, 2019) Review of IoT deployment in protected agriculture, identification
    of its challenges, and prospection of the new research domain. (Shi et al., 2019)
    Review of existing IoT-based precision agriculture solutions for further achievement.
    (Ruan et al., 2019) Review, comparison, prospection, and challenges of wireless
    communication technologies applications in the field of Precision Agriculture.
    (Feng et al., 2019) Review, case study, and challenges of WSN in environmental
    behavior. (Shafi et al., 2019) Review, identification, challenges of current and
    future trends of IoT agriculture. (Ayaz et al., 2019) Survey of IoTbased agriculture,
    presentation of connection between IoT, big data, and cloud computing, regulation
    and policies of IoT, and its application in the field of agriculture. (Farooq
    et al., 2019) Survey of the use of UAVs, an overview of PA, and investigation
    of 20 UAV applications. (Radoglou-Grammatikis et al., 2020) Challenges of IoT-based
    agriculture architecture, a summary of existing surveys of smart agriculture.
    and classification of threats models, study, analysis of challenges and future
    works of security and privacy of green IoT-based agriculture. (Ferrag et al.,
    2020) Discuss the role of IoT and big data analysis in agriculture with an emphasis
    on the commercial status of applications and translational research outcomes.
    (Misra et al., 2020) resent different solutions to address IoT in arable farming
    challenges. (Villa-Henriksen et al., 2020) Systematic review presenting how IoT
    is used with smart farming (Navarro et al., 2020) Methodological review and analysis
    of IoT components and their applications in smart farming. (Debauche et al., 2021)
    Review of emerging technologies towards agriculture 4.0 and new pathways to agricultural
    practitioners. (Liu et al., 2020) Review, classification, presentation, comparison,
    and challenges of emerging technologies for IoT-based agriculture. (Friha et al.,
    2021) In the following paragraphs, we will draw a panoramic summary of the existing
    reviews during the past four years (2017–2021). In 2017, Ray (Ray, 2017) reviewed
    throughout his paper IoT applications and the challenges that have been faced
    while IoT deployment to improve farming. Talavera. et al. (Talavera et al., 2017)
    reviewed agro-industrial and environmental applications that are using the Internet
    of Things (IoT) for monitoring, control, logistics, and prediction. Tzounis et
    al. conducted a survey of IoT technologies in agriculture and the challenges that
    farmers face going forward (Tzounis et al., 2017). Elijah et al. identified the
    most encountered challenges in the field of IoT applications in smart agriculture
    and presented common trends for innovative ideas (Elijah et al., 2018). In 2019,
    Ayaz et al. provided a state-of-art about IoT-based architectures applied in agriculture
    and identified present and future trends in the same field of study (Ayaz et al.,
    2019). Farooq et al. presented the ingredients of IoT-based smart farming with
    used technologies that apply the utilization of network architecture and protocols;
    in addition to that, they provided an overview of the regulations and policies
    of the use of IoT in farming regarding security and privacy. They concluded their
    study by summarizing the main challenges encountered in this discipline (Farooq
    et al., 2019). Feng et al. provided an overview of the wireless communication
    technologies in the precision agriculture domain. They benchmarked the prospection
    and challenges of existing technologies with the regular communication time used
    (Feng et al., 2019). Shafi et al. conducted a literature review about IoT-based
    automation of agriculture along with Wireless Sensor Network (WSN). These authors
    presented a case study based upon two models: 1- a WSN to monitor real-time crop
    of health conditions, 2- system-base remote sensing imagery to classification
    between healthy and unhealthy yield (Shafi et al., 2019). In terms of agriculture
    protection, Shi et al. drew a panoramic review during the last decade to address
    the challenge and future works to further the research in the field of protected
    agriculture (Shi et al., 2019). Khanna et Kaur called into an evolutionary scenario
    to highlight the most significant impact of IoT in Precision Agriculture (PA).
    They evaluated the contribution of their predecessors and enhanced the challenges
    to open up a new direction of inspiration and innovation in IoT applied to PA
    (Khanna and Kaur, 2019). Ruan et al. reviewed literature works from 2009 to 2018
    to suggest new ideas for folks interested to conduct research in the field of
    agriculture IoT, infrastructures, data security, and data sharing (Ruan et al.,
    2019). In 2020, two studies have been carried out about 20 UAV applications that
    are devoted to either aerial crop monitoring processes or spraying tasks (Radoglou-Grammatikis
    et al., 2020) and about the dilemmas that researchers must overcome while deploying
    IoT in the green agriculture domain (Ferrag et al., 2020). Villa-Henriksen et
    al. identified different challenges encountered during the implementation of IoT
    in various applications and proposed different solutions to address them (Villa-Henriksen
    et al., 2020). Misra et al. discuss the role of IoT and big data analysis in Smart
    Farming (Misra et al., 2020). In 2021, a recent study conducted by Friha et al.
    hypothesize the use, application, classification, and comparison of the most developed
    emerging technologies such as Internet of Things (IoT), Unmanned Aerial Vehicles
    (UAV), Wireless Technologies, open-source IoT platforms, Software Defined Networking
    (SDN), Network Function Virtualization (NFV) technologies, cloud/fog computing,
    and middleware platforms (Friha et al., 2021). In the same year, Debauche et al.
    conducted a literature review to describe the main components of IoT and its applications
    in the field of Smart Farming (Debauche et al., 2021). 2.2. Platforms implemented
    in use cases We grouped applications into 4 categories: (1) Water Management in
    which we have aggregate all types of water use such as irrigation and watering
    animals. (2) Plant Disease and Pest groups all use cases in plant’s pathologies
    detection and treatment of plant pathologies (spraying of fungicides, pesticides,
    etc). (3) Crop Management brings together all the use cases relating to cropping
    operations: soil management (plowing, fertilizer application), sowing, weeding,
    and harvesting. (4) Livestock includes everything related to the breeding of farm
    animals (nutrition, behavior, diseases, treatments). Table 2 summarizes platform
    used to implement use cases in Smart Farming classified following our four categories.
    Table 2. Summary of cloud platforms, databases mentioned in Smart Farming reviews.
    Empty Cell Water Management Plant Diseases & Pest Crop Management Livestock Reference
    IoT platform Thingspeak x (Maureira et al., 2011) FIWARE x (Rodriguez et al.,
    2018) NETPIE x x (NECTEC, 2020) Ubidots x (Ubidots, 2021) SmartFarmNET x x (Jayaraman
    et al., 2016) Thinger.io x x (Luis Bustamante et al., 2019) Kaa IoT Platform x
    x (KaaIoT, 2021) IBM Watson IoT Platform x x x x (IBM, 2015) Microsoft Azure IoT
    Platform x x x (Microsoft, 2021b) AT&T M2X Cloud x (AT&T, 2021) Blynk x (Blynk,
    2021) MACQU x (Sigrimis et al., 2002) ERMES x (Granell et al., 2017) Agrocloud
    x x x (Kodati and Jeeva, 2019) CropInfra x (Pesonen et al., 2014) SensorCloud
    x (Corp, 2020) LoRaFarM x x x (Codeluppi et al., 2020)  Cloud platform Amazon
    Web Service x x x x (Amazon, 2021b) IBM Cloud x x x x (IBM, 2021) Microsoft Azure
    x x x x (Microsoft, 2021a) Integra x x (Souces and I., 2021)  Cloud Database DynamoDB
    x x x (Amazon, 2021) MongoDB Atlas x x x (Mongo, 2021) Firebase x x x (Google,
    2021) InfluxDB Cloud x x x (Influxdata, 2021)  Local Database MySQL x (Oracle,
    2021) SQLite x (SQLite, 2021) PostgreSQL/PostGIS x x (The PostgreSQL Global Development
    Group, 2021) Apache Cassandara x (Apache Software Foundation, 2021a) Apache Druid
    x x (Apache Software Foundation, 2021b) Garcia et al. give an overview on trends
    in Smart Irrigation in which they showed that data is stored in the database or
    in the cloud. On 151 reviewed papers, one uses Raspberry Pi, 18 databases, 53
    clouds, and 79 are self-developed or not mentioned (Garcia et al., 2020). Navarro
    et al. identified 21 Platforms used in 50 various use cases classified into 5
    categories: Artificial Intelligence, Big Data, Machine Learning, Computer Vision,
    and Other/Not Identified (Navarro et al., 2020). Jayaraman et al. present SmartFarmNet,
    an IoT platform offering effortless integration of sensors, supporting scalable
    data analytics, and proposing do-it-yourself tools to analyze and visualize data
    (Jayaraman et al., 2016). Codeluppi et al. describe LoRaFarM a general architecture
    modulated depending on the farm’s characteristics and requirements (Codeluppi
    et al., 2020). The monitoring of crops particularly more sensitive to them as
    saffron is crucial. The DIAS Architecture (Triantafyllou et al., 2019) uses different
    ground and leaf sensors to monitor the real-time 24/24 h cultivation process of
    saffron. This data is transmitted by LoRaWAN with IPv6 protocol and MQTT-SN protocol
    to FIWARE’s context broker. The broker manages all networking devices by means
    of sixteen types of messages exchanged following publish-subscribe model. The
    FIWARE NGSI API of oversees the consumption, subscription, and processing of all
    the information collected and its publication. Afterward, the data is stored and
    analyzed with a random forest algorithm which allows extracting information about
    the crop growth and health. Vegetation indexes: Normalized Difference Index (NDI),
    Excess Greenness Index (ExG) are calculated with PiX4D3 image processing tools.
    Object-based image analysis (OBIA) is used to recognize weeds or discriminate
    species. Finally, collected data are categorized and evaluated accordingly with
    vegetation index values, moisture level, and plant developing state by means of
    the Apache Spark framework for the Big Data analysis and Waikato Environment (WEKA)
    a framework specialized in data mining to produce reports and predictions. Decision-making
    is a very important task in the farmers’ activities but with the amount of data
    always increasing, they encounter difficulties on one hand to make proper decision
    about agricultural management and on the other hand translate this data into practical
    knowledge (Zhai et al., 2020). On the other hand, there is a need for platforms
    of the Agricultural Decision Support System (ADSS) to assist farmers to make precise
    decisions evidence-based. For example, Watson Decision Platform for Agriculture
    combines IBM Watson with IoT and Cloud Computing to detect crop disease from UAV
    images. It is also possible to optimize time for crop operations to obtain a better
    price on trading market. The second example is Digital Farming System4 takes advantage
    of computer vision, cloud computing, and AI to propose a better timing for corp
    operations, notify when a crop is infected by any disease. Smart Irrigation Decision
    Support System (SIDSS) is composed on one hand of a set of sensors and a weather
    station and on the other hand a DSS based on two machine learning algorithms.
    Partial Least Squares Regression (PLSR) to deduct unnecessary variables and Adaptive
    Neuro -Fuzzy Inference Systems (ANFIS) used to minimize estimated errors under
    a target threshold (Navarro-Hellin et al., 2016). SIDSS generates planning of
    water amount and time for irrigation. Multi-robot sense-act system (Conesa-Munoz
    et al., 2016) is a planner of aerial and ground vehicles which assign tasks to
    the most appropriate work units. A Harmony Search Algorithm is used to optimize
    plans for UAVs while meta heuristic is running for ground vehicles. 2.3. Analysis
    of previous literature The analysis of existing reviews about smart farming shows
    that applications use whether open source or commercial cloud architecture whether
    developing specific architecture responding to their aims or do not describe their
    storage and processing system. The latter represents more than half of the papers
    and means that some of the processing architectures remain unknown because they
    have never been specifically described and studied. Moreover, the fact that further
    development is being made in architecture may be the fact that commercial platforms
    do not fully address the needs of Agriculture 4.0. This brings us to our research
    questions and their respective motivation: 1. Which storage and processing architectures
    are best suited to Agriculture 4.0 applications and address its particularities?
    Motivation: On one hand generic architectures dedicated or not to IoT are able
    to address a large number of use cases but not specifically the needs of Agriculture
    4.0 exist. On the other hand, researchers develop architectures to address specific
    issues or requirements of use cases. The selection of an adapted architecture
    is crucial for the correct implementation of identified use cases. 2. Can generic
    architectures meet the needs of Agriculture 4.0 application cases? Motivation:
    Agriculture 4.0 has specific requirements described in the introduction section
    which cannot all be addressed by a single classical generic architecture. A comparison
    between the pros and the cons of major generic architecture in the context of
    agriculture 4.0 is important to highlight the choice during the conceptualization
    step. 3. What are the horizontal valuation possibilities that allow the transition
    from research to industrialization? Motivation: The use of architectural solutions
    which can be for example free of fees during the research phase but needs a reimplementation
    caused by license limitations, the cost of the license in the use cases budget,
    etc. The use of products in closed or semi-closed ecosystems is a barrier to the
    research valuation. 4. What are the vertical valuation possibilities to move from
    algorithms trained in the cloud to embedded or autonomous products? Motivation:
    The massive collection of data in the cloud allows to development of complex algorithms
    that need a large amount of computing resources to be elaborated. Afterward, they
    can be compressed, reduced, optimized in order to be deployed in embedded devices
    or divided and establish a collaboration between devices and computing resources
    such as cloud, fog, etc. In order to answer these questions, a review of the literature
    will make it possible to synthesize the different approaches currently used, to
    identify new trends and to consider new lines of research to be explored. 3. Methodology
    In order to address, our first and second research questions, we achieve a systematic
    review to identify generic architectures and combination of architectural elements
    used by researchers to implement concrete use cases. Moreover, we attempt also
    identify commercial products and existing services/ platforms used to implement
    projects in agriculture. 3.1. Systematic review methodology The research questions
    outlined at the end of the related work section has been addressed by combining
    keywords of the first group that refers to architectures (i.e. cloud architecture,
    distributed architecture, big data, Internet of Things, IoT) and of the second
    group contained keywords related to agriculture (i.e. agriculture, smart farming,
    food, agri-food, precision agriculture). Our methodology is based on 3 consecutive
    steps: literature identification, reading literature, and information extraction.
    During the first step, we have read and have collected individual papers based
    on the achieved of previous papers. We have reviewed and completed by a systematic
    survey of white literature (full articles and conference papers) from January
    2016 to December 2020. In addition, we targeted solely and exclusively papers
    written in English and focusing on architecture design have been considered. Our
    bibliographic review was limited to the last 5 years because the rapid development
    of IoT. The systematic review was retrieved from the following major bibliographic
    databases: Scopus (Elsevier), IEEE Xplore Digital Library, Wiley Online Library,
    ACM Digital Library, and Springer. These bibliographic databases have been chosen
    widely covering relevant bibliography and relevant advanced bibliometric features
    especially number of citation and relevant literature suggestion. From these databases
    1058 peer-reviewed articles were retrieved. After their screening 55 papers were
    classified relevant while remaining articles were considerate not relevant and
    therefore excluded from further reading and analysis. The high number of excluded
    papers is due to numerous papers describe i.e. conceptual or theoretic architectures
    which were never implemented, experimental architectures that have been the subject
    of a single article or that have never been proven by other research teams. We
    discard also papers that were not a directly related Big data and the agricultural
    sector. Table 3. Table 3. Keywords used for achieved the systematic review. Area
    Keywords Related concepts Agriculture Agriculture, Agricultural e-Agriculture
    Agri-Food Agribusiness Smart Farming Farming Precision Agriculture, Precision
    Farming  Internet of things IoT, Internet of Things, internet-of-things Big data
    Big Data Big Data Data Management Data Management Architecture Cloud Architecture,
    Distributed Architecture In a second step, we included English grey literature
    (reports, blogs, magazines, and web-items) into our review using Web of Science
    and Google Scholar. Table 4. We discarded papers that were written in other languages
    than English, Master and doctoral dissertation, and duplicated articles gathered
    from Google Scholar. Afterward, we have selected literature that has carefully
    been read in detail to extract relevant information of research questions. The
    extracted information was analyzed and summarized in a conceptual framework illustrated
    in the Fig. 1. Table 4. Sources of collected literature. Data source URL IEEE
    Xplore Digital Library https://ieeexplore.ieee.org Scopus https://www.scopus.com
    Springer https://link.springer.com/search Wiley Online Library https://onlinelibrary.wiley.com
    Google Scholar https://scholar.google.com Web of Science https://publons.com/publon
    ACM Digital Library https://dl.acm.org Download : Download high-res image (171KB)
    Download : Download full-size image Fig. 1. Conceptual framework of data processing.
    Three ways of treatment of data are possible. The first process data in real-time
    (left branch identified by (1) on Fig. 1), this one is generally not stored except
    eventually particular or exceptional data in order to enrich the training database
    of artificial intelligence algorithms. This way of data treatment is used for
    example by robots that inspect a crop, discover a pest, and then eliminate it.
    After intervention the value data is near null. The second way is a mixed way
    in which data must be processed as quickly as possible. This one addresses use
    cases where latency required must be comprised between few milliseconds to few
    seconds with data, which conserves a value during a certain period of time. This
    latter justifies its storage according to the use case data management plan that
    predicts the time after which the data will be aggregated and then deleted. This
    way in identified by (2) on Fig. 1. It addresses use cases where all data must
    be processed and then stored for eventual post-processing for example to estimate
    trends of parameters such as the milk quality, volume of palatable species available
    in a pasture. The third way is stored data theirs native format without transformation
    (Identified by (3) on Fig. 1). This way is implemented on use cases that do not
    require real time processing or use cases where the amount data is so important,
    which makes treatment impossible. In this latter case, data are consumed by micro
    services that sample data to exact knowledge. This way is also employed for data
    which have a low value or lose their value so quickly that there is no point in
    transforming them for long-term storage. For instance, a UGV identifies and eliminates
    a pest. The image of the insect is no longer relevant after its elimination. 3.2.
    Architecture comparison criteria In order to compare selected architectures, we
    chose to select 8 criteria:(1) User Proximity expresses the necessity to be close
    to the user. This criterion is important for applications where privacy and response
    time to query are critical. Attribute a value of one * when privacy is not crucial;
    ** when the proximity with user is desirable but not crucial for the development
    of the use case; *** when the user proximity is the corner stone of the application.
    (2) Latency & Jitter criterion describes the importance for the architecture to
    have a minimal latency and jitter. This criterion is particularly important for
    use cases where response time to query in quasi (real time) is required and/or
    time between data production and ingestion by the processing and storage architecture
    is essential. (3) Network stability criterion translate the necessity to have
    a stable network or if is interruption can be tolerated. Use a value of * if the
    use case implemented can tolerate the absence of network during few hours; **
    if few minutes of interruption are tolerable; *** is stability of the network
    is an essential element of the use case. (4) The high throughput criterion expresses
    the capability of the architecture to process quickly a wide amount of data arriving
    at high frequency; Use a value of * if the data arrive mostly at regular intervals;
    a value of ** if the data arrive in bursts, and *** if the data arrive continuously
    at high frequency ( 10 Hz). (5) Reliability is a criterion that expresses if the
    infrastructure is critical in other terms whether an interruption in infrastructure
    could cause loss of life or not. Attribute a weight of * if the data is not critical
    and potential damages caused by an interruption of the architecture are minors
    or null; ** if potential damageable but tolerable if they occur more than once
    a year; *** if the application cannot tolerate any interruption which would cause
    irreversible damage or loss of human life. (6) Scalability is a criterion that
    expresses the regularity of the evolution in terms of processing and storage during
    a period of one year. If the scalability must be achieved at most once a year
    use a weight of *; if the scalability is achieved at most twice a year use **;
    if the scalability must be achieved more than two times by year use a weight of
    ***. (7) Cost-Effectiveness criterion reflects the need to control infrastructure
    costs. This criterion is more important as the infrastructure is brought to evolve
    both in terms of scale and complexity. Use the weight of * if the project will
    remain in a relatively constant size and do not need to be scaled or dramatically
    modified; Use **, if the project evolves reasonably, i.e. should not undergo significant
    modification more than once a year. Use a weight of *** if the size of the project
    and/ or its complexity need a fine study of cost. (8) Maintainability criterion
    is directly linked to the sustainability of the project. If the sustainability
    of the project will not exceed two years to allocate a point of *; if the life
    of the project is between 2 and 5 years, assign a score of ** beyond 5 years,
    assign ***. 4. Architectures The numerous publications dealing with cloud architectures
    relating to Agriculture 4.0, summarized in Table 2, show that a great deal of
    effort has been devoted to solving a whole range of problems related to many use
    cases. Indeed, a universal and a unique architecture do not exist for IoT applications
    in Smart Agriculture which ensure all needs of all use cases. This is the reason
    why several researchers have proposed various architectures which address specific
    issues of generic architectures. The Fig. 2 gives a global overview on Agriculture
    4.0 organization. Download : Download high-res image (340KB) Download : Download
    full-size image Fig. 2. Global structure of IoT in Agriculture 4.0. 4.1. Central
    Cloud Architectures Central Cloud Architectures are based on two basic architectures
    that are associated or combined in order to form modern architectures. These two
    architectures are: Batch Architecture aims to process an entire dataset in an
    offline mode. For this type of architectures, as long as the processing of the
    dataset is not finished, it continues and produces results only when it has reached
    its end. Generally, the data is selected and distributed to different nodes in
    order to be processed more quickly. When all the treatments are achieved on all
    nodes, the results are sorted and aggregated to obtain a global output. This architecture
    is easily implemented, and the aggregation is done by a framework, but processing
    times can be long, and data extracted during the treatment cannot be processed
    before the end of the treatment in progress. Furthermore, it is possible to increment
    results of previous batch and produce a result that integrates treated data in
    progress. Sallah et al. used a batch architecture to update data within the AquaCrop
    model (FAO) embedded in R-environment in order to facilitate model calibration
    and validation, run and evaluate all fields in a single run (Sallah et al., 2019).
    Nolack Fote et al. presented an architecture to extract knowledge on the long
    term from data in Precision Livestock Farming (PLF) (Fote et al., 2020). Table
    5. Table 5. Pros and Cons of Batch Architecture. Pros Cons - Easy to implement
    and maintain. - Process only data previously stored in another form (file, database,
    etc). - Able to achieve long term treatments (several hours or days). - Processing
    cannot be modified before the end of the treatment. - Reprocessing of old data
    that are easy to achieve. - Results available only at the end of the treatment.
    Real-time Architecture also named Streaming Architecture processes data as it
    arrives, and results are progressively available by opposition to the batch architecture
    where it is not necessary to wait for the end of ingestion of all input data to
    obtain a result. The notion of real-time is strongly dependent on the analysis
    context with a processing time from a few milliseconds to a few minutes. Real-time
    architecture can be implemented in two different ways. On one hand with micro-batch
    in which a tiny amount of data is processed each n seconds and a result is obtained
    at the end of the treatment or on the other hand with a streaming approach in
    which each new data is immediately processed and output is quickly produced. This
    architecture is limited to data flow processing (Miloslavskaya and Tolstoy, 2016).
    Table 6. Table 6. Pros and Cons of Real-time Architecture. Pros Cons - Allow a
    rapid treatment of newly arrived data. - Not able to achieve processing on large
    size of the batch. - Batch processing can be emulated using micro batches but
    not all algorithms can be implemented. - Reprocessing of old data difficult to
    implement. - Easy to implement and maintain. - The need for real-time processing
    involves the use of an estimator rather than the precise values that would take
    too long to be calculated. Various data are produced by different fields or animals
    sensors, vehicles, and robots of the Agriculture 4.0. Afterward, this data must
    be on one hand stored in a raw state and processed in an offline way where long
    and complex treatments can be achieved. On the other hand, data can be processed
    before its storing with offline processing, streaming processing, or a combination
    of these ones. The storage time is extremely variable following the nature of
    the data and their loss of value over time. Offline processing is classically
    used to process images from UAVs, UGVs, or satellites, for example, to determine
    photosynthesis activity, evaluate the canopy development or stocks of palatable
    species available in a pasture, etc. While Streaming processing allows detecting
    anomalies in animals’ behaviors in real-time, or during agricultural operations
    such as the harvesting, disease and pest detection, weeds elimination. In these
    last cases, data is not stored because it quickly loses all value after its ingestion.
    Finally, a combination of the two previous ways i.e. Offline and Streaming processing
    is used to estimate real-time metrics and achieve complex treatments in an offline
    way at the same time. This approach is used by milking robots which detect anomalies
    in the production in real-time while the offline processing estimates the future
    production of each cow based on previous milking (Debauche et al., 2021). Lambda
    architectures are used in systems that need to process and expose quickly massive
    amounts of streaming data. This cloud architecture was proposed by Nathan Marz
    and James Warren (Marz and Warren, 2013) to handle tremendous quantities of data
    and resolve complex problems combining processing large volumes of data (Batch)
    while incorporating the most recent data processed in real-time processes (Singh
    et al., 2019). This architecture is generic, scalable, and fault-tolerant against
    hardware failures and human mistakes. The architecture is composed of three layers:
    (1) batch layer process very large quantities of data by batch; (2) speed layer
    which processes data in real-time and provides views based on the most recent
    data and (3) serving layer responding to queries. Data comes from either a data
    source or a message queue. This paradigm allows executing arbitrary queries over
    any real-time data and is particularly adapted for critical infrastructure and
    health systems (Diaz et al., 2016). Several implementations of Lambda Architecture
    in smart Environment management, big data storage and analytics can be found in
    (Villari et al., 2014). Among the criticisms that have been made against lambda
    architecture is the need to make twice the developments for the real-time branch
    and the batch branch. It is possible to perform a batch processing and in real
    time with flow processing is what the Kappa architecture described below does
    (Kreps, 2014). Fig. 3 Table 7. Download : Download high-res image (116KB) Download
    : Download full-size image Fig. 3. Lambda Architecture General Scheme. Table 7.
    Pros and Cons of Lambda Architecture. Pros Cons - Process data in real-time or
    in batch processing in separate ways. The reliability of two ways of treatment
    is most costly than other architectures if the two execute the same treatment.
    Among use cases in agriculture 4.0 using a lambda, we would like to highlight:
    Roukh et al. proposed WALLeSMART, a cloud platform based on lambda and specifically
    developed for Smart Farming. This platform implements Apache Kafka to store temporary
    data before their treatment. Apache Hadoop and the programming model Mapreduce
    is used for the batch processing while Apache Storm process data in realtime.
    The originality of this architecture is the coupling of a NoSQL database Apache
    Casandra and a SQL database, PostgreSQL where data is stored in the function of
    its nature. The GraphQL query language allows to querying databases. (Roukh et
    al., 2020, Roukh et al., 2020). Debauche et al. describe a lambda architecture
    for digital phenotyping (Debauche et al., 2020) and farm animals’ behaviors coupled
    with an Application Hosting Architecture based on Apache Mesos and Docker containerization
    to facilitate the deployment of various applications. An API interconnects and
    controls accesses between the Lambda Architecture and the Hosting Application
    Architecture. The Lambda architecture is based on Apache Beam to easily change
    the runner in the function of the technology evolution and improve its sustainability.
    Apache Druid is used to store time series data (Debauche et al., 2019) and metadata
    of data stored in the Datalake based on Apache Hadoop (Debauche et al., 2018).
    A variant of this architecture, named Unified Lambda architecture combines batch
    and stream pipelines which runs concurrently, and then the results are merged
    automatically (Siciliani, 2015). AllJoyn Lambda integrates AllJoyn a framework
    that offers: (1) proximal devices and applications discovering; (2) specific devices
    framework adapting; (3) transmission between devices with Bluetooth, Wi-Fi, etc.;
    (4) interoperability between operating systems; (5) efficient and secure data
    exchange through D-BUS (Villari et al., 2014). The Kappa architecture, proposed
    by Jay Kreps from LinkedIn (Kreps, 2014), simplifies the Lambda architecture by
    combining real-time and batch layers. This cloud architecture differs from the
    Lambda architecture by using a non-permanent storage system of data in an unchangeable
    log file such as system as Apache Spark or Apache Kafka, and consequently allow
    only storage for a limited time in order to allow an eventual reprocessing of
    these data. Batch and Speed Layers are also replaced by a stream processing engine.
    So, the Kappa Architecture is composed of two layers: streaming and serving layers
    and can be implemented with a publish-subscribe messaging like Apache Kafka, which
    facilitates data ingestion. Fig. 4. Download : Download high-res image (121KB)
    Download : Download full-size image Fig. 4. Kappa Architecture General Scheme.
    The main advantage of this architecture is its simplicity. It avoids having to
    maintain two separate code bases for the batch and speed layers. When processing
    on real-time and historical data are the same, a Kappa Architecture must be used.
    Fast Data Architecture is a variant of Kappa Architecture in which the data are
    no longer read from files but from an additional mechanism like Kafka that captures
    multiple streams combines them before being processed by the speed layer (Lakhe,
    2016). Persico et al. achieved a benchmark of Lambda and Kappa architectures and
    show that Lambda outperforms Kappa for social networks data (YFCC100M) processing
    (Persico et al., 2018). Table 8. Table 8. Pros and Cons of Kappa Architecture.
    Pros Cons - Very efficient for real-time processing thanks to in-memory processing.
    - Batch processing emulates thanks to micro-batch treated via the real-time way.
    - Optimized cost because allows real-time and batch processing. - Not able to
    process large batch size. - Must be finely tuned from data to obtain the best
    performances (Nkamla Penka et al., 2021). Other Architectures derived or inspired
    of the previous architectures have been developed to address specific problems
    such as (1) SMACK (Estrada and Ruiz, 2016) which attempts to propose an optimal
    architecture with fixed components; (2) Liquid (Fernandez et al., 2015) is an
    architecture which provide low latency, incremental processing, high available
    with isolated resource, and able to store high throughput data at low operational
    cost architecture; (3) Butterfly (Lakhe, 2016) proposes to unify batch, speed
    and serving layers in a unique platform in which data are organized as a collection
    of three types of abstractions; (4) Zeta (Scott, 2015) which integrates a lambda
    architecture with business aspect of the enterprise; (5) BRAID (Giebler et al.,
    2018) is a hybrid processing architecture where all coming data and configuration
    file of processing, and eventually processing results written back are stored
    in a shared storage; (6) IoT-a (Hausenblas, 2014) is composed of three blocks:
    Ad-hoc queries, a Database, and a Distributed File System; (7) Polystore (Meehan
    et al., 2016) implements a multiple database system PostgreSQL, SciDB and Accumulo
    because a database alone cannot store all types of data efficiently. Table 9.
    Table 9. Qualitative evaluation of cloud-centric architecture. Criterion Batch
    Stream Lambda Kappa User Proximity * * * * Latency & Jitter * * * * Network Stability
    * * * * High throughput *** *** *** *** Reliability *** *** *** *** Scalability
    *** *** *** *** Cost Effectiveness *** *** * ** Maintainability *** ** * ** The
    analysis of the literature achieved shows that two major generic architectures:
    Kappa and Lambda allows to address of various use cases and are widely implemented
    and proven in other domains of the Internet of Things. The Lambda is more expensive
    to implement than the Kappa because of the need to maintain two separate parallel
    processing branches for stream processing and batch processing. It is interesting
    if different processing are carried out on the two processing branches. Otherwise,
    a Kappa architecture with a single processing branch that processes both the streams
    and the data in batches is more appropriate in most cases because it is cheaper
    and easier to maintain because a single code performs both types of processing
    (stream and batch). Looking at our first two research questions, we observe that
    Lambda and Kappa cloud architectures are efficient but these architectures alone
    operating in central cloud cannot address, for example, use cases where very low
    latencies are required. They will have to be hybridized and completed to address
    these particular cases. Two possibilities are available to us. The first way consists
    in associating several specialized cloud platforms to make it possible to obtain
    greater genericity or at least to better cover a domain. The second consists of
    supplementing the cloud-centric architectures that we have just mentioned with
    other architectural elements in order to better address the specific needs of
    Agriculture 4.0. 4.2. Extension of the cloud paradigm With the increase of the
    amount of data produced by the myriad of connected things, the amount of data
    to process, to transfer by network, and to treat in the cloud computing have called
    into question the architecture of storage and data processing. To solve the problem,
    two ways have been proposed, the first is Multi-Cloud Computing, the objective
    of which is to ensure redundancy in order to improve latency. The second is the
    Federated Cloud with the aim of pooling resources for better use. Multi-Cloud
    Computing (MCC) (Manyika and Chui, 2015) is an extension of Cloud Computing paradigm
    where services are distributed on multi-clouds. In this architecture the workflow
    is distributed entirely in the cloud, data redundancy is also verified. One advantage
    of the MCC is the high recovery rate but it has the same disadvantages as Cloud
    Computing, along with complexity and portability issues. Kazim et al. proposed
    a framework to deliver IoT services and establish cooperation across multi-clouds.
    An authentication allows communicating cloud to authenticate each other cloud
    dynamically. While a service selects the best IoT service matching with user requirements
    among multiple clouds and taking into account the SLA parameters agreed between
    the user and the provider (Kazim et al., 2018). Federated Cloud (FC) aggregates
    resources of multiple cloud providers to improve users’ freedom and allows users
    to choose where they want to deploy their applications. A Federated cloud can
    be defined as a voluntary collaboration between heterogeneous cloud providers
    collaborating to share their own unused resources. Using a cloud federation helps
    to ensure service performance during load ups with resources borrowed from other
    clouds. In addition, the geographical dispersion of the installations makes it
    possible to migrate to another installation and to guarantee the service in case
    of breakdown. A unified interface allows to use it an easy consultation of the
    offered services. Finally, thanks to the dynamic distribution of the load, it
    is possible to bring the treatment closer to the user and consequently improve
    the Quality of Service (Assis and Bittencourt, 2016). Cloud federations include
    European Federated Cloud (Sipos et al., 2013), Massachusetts Open Cloud, Mosaic
    (Petcu et al., 2013), IEEE P2302, and Open stack Keystone. Drakos et al. described
    agINFA, a common research data infrastructure for agriculture, food and the environment
    using EGI Federated Cloud. This infrastructure allows to partner to share research
    infrastructure components, APIs, a registry of web-based information service and
    dataset for agriculture (Drakos et al., 2015). 4.3. Distributed architectures
    The post-cloud approaches allow to improve latency and jitter for immobile entities
    but do not provide an answer adapted for mobile devices and local awareness. The
    large amount of data generated at the edge has increased the speed of data transportation
    that is becoming the bottleneck for the cloud-based computing paradigms (Shi et
    al., 2016). Moreover, the treatment of data in the cloud does not offer any guarantees
    about privacy, on the response time and real-time actuation because the huge number
    of devices increases the latency and jitter. Moreover, the mobility of devices
    and power constraints makes the communicaion difficult with the cloud all the
    time (Botta et al., 2016, Zhou et al., 2017). The aim has been to bring data storage
    and processes data, filtering, and data analysis closer to data-producing objects
    to limit bandwidth consumption and relieve the cloud. Three major paradigms have
    been proposed to address these issues and bring cloud computing-like capabilities
    to the edge of the network. All these infrastructures manage mechanisms of Virtual
    Machine (VM) or containers migration and adjust if needed, the provisioning of
    capabilities where users are located. Moreover, the three paradigms allow the
    creation of federated infrastructures in which can coexist multiple edge infrastructures
    which can exchange information and services (Roman et al., 2018). 4.4. Elements
    of distributed architectures In order to always bring closer, the processing capacities
    of intermediate processing have been set up between connected objects and the
    cloud at the network level (Fog Computing) and at the level of telephony providers
    (Mobile Edge Computing). Fog Computing is a concept created by Cisco Systems and
    is an extension of the cloud computing paradigm (Munir et al., 2017) in which
    computation, storage and network services are provided between end devices and
    cloud/ classify and analyze the raw IoT data streams at near-edge and edge network
    level (Cisco, 2018). Fog nodes are either physical components such as gateways,
    switches, routers, servers etc. or virtual components such as virtualized switches,
    virtual machines, cloudlets, etc.; deployed following private, community, public
    or hybrid. Private nodes are reserved for a single organization, community nodes
    are used by a community, public nodes are dedicated to the general public, and
    hybrid mix the third previous modalities (Uehara, 2017). This paradigm allows
    to limit data transfer on cloud, reduce latency (Sethi and Sarangi, 2017), and
    jitter thanks to a three-tier architecture (Roman et al., 2018). In this hierarchical
    architecture, the analysis of local information is achieved at the low level and
    the coordination and global analysis are performed at the top level. The Fog Computing
    supports mobile devices (Sethi and Sarangi, 2017), response time in real-time
    or predictable latency (Lopez et al., 2015), bandwidth saving, an improving of
    security and resilience, scalability, multi-tenancy, advanced analytics, and automation
    (Byers, 2017), cost-effective services (Yang, 2017). Fog Computing allows also
    the federation of fog infrastructures in order to allow cooperation between multiple
    organizations (Roman et al., 2018). Furthermore, the architecture is optimized
    for a use case and applications which must run on them (Byers, 2017). Fog Computing
    differentiates from cloud computing mainly by the proximity with end-users at
    the edge of networks localized or distributed geographically consisting in many
    relatively less resourceful (Munir et al., 2017). In addition to network equipment,
    fog computing can also be carried out in cloudlets and micro data centers. Cloudlets
    were proposed to address the end-to-end responsiveness between mobile devices
    and associated clouds. Cloudlets (Mach and Becvar, 2017) are micro data center
    geographically deployed in vicinity of End Users. This mobility-enhanced small-scale
    cloud data center is composed of computers with high computation power which provide
    both computation resources and storage. Cloudlet is much more agile (highly dynamic
    provisioning) than cloud due to user mobility churning. The mobility of users
    implies the use of a virtual machine to rapidly instantiate compute-intensive
    and latency-intensive applications and migrate the offloaded services between
    different cloudlet in the function of the user mobility. Cloudlets must be firstly
    discovered, selected among several candidates before starting provisioning. At
    the end of the session, the instance is destroyed (Ai et al., 2018). Cloudlets
    are accessed by mobile user equipment via Wi-Fi imply a high latency caused by
    the network and switch between mobile network and Wi-Fi and by consequence Quality
    of Service (QoS) and Quality of Experience (QoE) are hard to fulfill (Mach and
    Becvar, 2017, Manyika and Chui, 2015). Moreover, Cloudlets cover usually a small
    region and do not offer any guarantee on ubiquitous computing and scalability
    in service (Manyika and Chui, 2015). MicroData Centers (MDCs) were proposed by
    Microsoft Research. It is designed to extend cloud data centers as cloudlets.
    MDCs are enclosures contemning all types of equipments (computing, storage, network)
    needed to provide a secure computing environment in order to run customs applications
    requiring low latency. MDCs are also well adapted to provide processing resources
    to end devices on battery or with limited computing capabilities. MDCs can be
    adapted in function network bandwidth and user needs thanks to certain flexibility
    in terms of latency and scalability of the capacity (Wang et al., 2020). Guardo
    et al. proposed a framework composed of two fog layers respectively filtering
    and aggregating data, and clustering analysis, actuation management, and alert.
    The framework aims to improve computational load balancing between fog and cloud
    in order to reduce the amount of data to transmit to the cloud, reduce the waiting
    time for the user (Guardo et al., 2018). Taneja et al. proposed a SmartHerd an
    IoT platform dedicated to smart dairy farming based on microservices and Fog-assisted.
    The IoT gateway received data from transceivers, archived data aggregation, preprocessing,
    classification, feature selection, send critical alerts to farmers, and transmit
    data to IBM Watson IoT platform via MQTT protocol. In the IBM Watson IoT platform,
    a broker picks up data and store them in a Cloudant NoSQL JSON Database. Python
    Virtual Machine and Java Virtual Machine were used as containers equivalent for
    microservices deployment at fog level (Taneja et al., 2019). Sharofidinov et al.
    described a 4 layers architecture (Sensors Layers, Fog Layer, Network/Cloud Layer,
    and Application Layer) based on LoRa to monitor and predict the state of a greenhouse
    from a random forest algorithm. In the Sensor Layer, sensors acquire temperature,
    soil and air humidity, CO2 rate, and illumination connected to TTGO LoRa32 (ESP32
    with LoRa Sx1276 chip) which are transmitted to the gateway by LoRa. At Fog Layer,
    preliminary analysis with Machine Learning algorithm, diagnosis of sensor status,
    and data compression are achieved. In the Network/Cloud Layer, compressed data
    are transmitted in order to be deeply analyzed and stored. Finally, in the Application
    Layer, analyzed data are converted in readable form to allows the monitoring and
    the control of the greenhouse (Sharofidinov et al., 2020). Table 10. Table 10.
    Pros and Cons of Fog Computing. Pros Cons - Fast response time in avoiding transmission
    of data to the cloud (Sharofidinov et al., 2020). - Failure or outage of the gateway
    can defeat thousands of devices. - The local storage and processing capabilities
    prevent data loss and outages when the Internet connectivity is limited (Sharofidinov
    et al., 2020). - The limited processing and memory capacities do not allow the
    deployment of algorithms requiring significant resources or the carrying out of
    long-term processing. - Sensitive data can be filtered locally. In this case,
    only the data model is moved in the cloud (Sharofidinov et al., 2020), and data
    validation, compression, and encryption. - Gateway at fog level ensure the compatibility
    between old and modern devices (Sharofidinov et al., 2020) and various protocols
    for communication. - Improve the resilience thanks to the decentralization of
    the treatment on network devices (Sharofidinov et al., 2020). Mobile Edge Computing
    (MEC) was proposed by ETSI and is deployed by telecommunication companies on the
    edge of the network, which is characterized by ultra-low latency and high bandwidth.
    (Roman et al., 2018, Zhou et al., 2017). At the very beginning, Mobile Edge Computing
    (MEC) aims to bring real-time, high-bandwidth, and low-latency access to dependent
    applications known as cloud computing capabilities; in addition to, information
    technology (IT) features of cloud computing. MEC is distributed at the edge of
    the network. In fact, a new class of cloud-native applications are easily accessible,
    because of the close position of Edge Computing to the end user and apps. Also,
    it allows network operators to open their environment to a new ecosystem. As a
    result of this significant change, MEC application can be used in LTE macro base
    stations (eNBs), 3G radio network controllers (RNCs), Wi-Fi access points, edge
    network routers, and enterprise edge servers. MEC platform contains two main hosting
    infrastructures. The first is formed by hardware resources and a high-resolution
    screen. The second is composed of manageable applications with numerous capabilities
    such as the application of virtualization manager and platform services (Zhou
    et al., 2017). An important challenge for the MEC is the VM migration that must
    optimize the tradeoff between migration gain and migration cost and select optimal
    location (Ai et al., 2018). Tran et al. investigated the collaborative Mobile
    Edge Computing in 5G Networks. MEC extends processing and storage resources at
    the edge of the Radio Access Network (RAN) while C-RAM is based on centralization
    of the base Station by means of the virtualization. Authors argue that both technologies
    are complementary in the 5G ecosystem (Tran et al., 2017). Fig. 5 Table 11. Download
    : Download high-res image (172KB) Download : Download full-size image Fig. 5.
    Mobile Edge Computing General Scheme. Table 11. Pros and Cons of MEC. Pros Cons
    - Reduces needs in connection, response time delay, the congestion of other parts
    of the network (Valecce et al., 2019). - Usable only for devices connected in
    Wi-Fi or 3GPP. - Use low level message from Wi-Fi to determine the location of
    each device (Location awareness) (Valecce et al., 2019). - MEC Server can be used
    as power open to applications and services (Valecce et al., 2019). Fan et al.
    combined MEC with data link management, combining with the industrial CAN bus
    characteristics to monitor water. Field Programmable Gate Arrays (FPGA) Altera
    implementing the AVALON bus was used to implement the system. Moreover, they propose
    a protocol to model random network disturbances and an online task offloading
    algorithm based on the monitoring of task execution (Fan and Gao, 2018). Valecce
    et al. proposed a 5G-robotics reference architecture for smart agriculture composed
    of UAV-Based Monitoring and connectivity, Machinery automation, and MEC Applications
    Server. UAVs/satellites capture high-resolution images during patrolling, which
    coupled with sensors data trigger a precise crop management. UAVs can also collect
    data or serve as a 5G mobile station. In field, image processing coupled with
    sensors data can be used for decision making. MEC allows to process gigabyte/s
    of data produced by autonomous vehicles and robots (Valecce et al., 2019). Table
    12. Table 12. Evaluation of distributed architecture with our criteria. Criterion
    Fog MEC User Proximity **(*) *** Latency & Jitter * * Network Stability *** **
    High throughput ** **(*) Reliability *** ** Scalability * * Cost Effectiveness
    ** ** Maintainability ** ** The development of fog computing and its counterpart
    for MEC wireless networks allow processing capabilities closer to users to improve
    response time but with lower computational capacities compared to the cloud. There
    are inherently two questions: Which association strategies to use between the
    cloud and the other levels of processing in the network? How to distribute the
    load between these different levels: local (Edge), network (Fog), and Cloud processing.
    4.5. Collaborative computing strategies In order to address, our fourth research
    question, we try to identify different possibilities to compose architectural
    elements. Indeed, different collaboration strategies between the different levels
    of data processing (cloud, fog, edge) can be considered depending on the particularities
    of the use cases. In the next paragraphs, we describe possibilities of collaboration
    between different treatment entries, and we illustrate each one with few examples.
    Edge-Cloud aims to connect devices directly with the cloud that performs data
    processing. This strategy is often used by UAVs and UGVs which preprocess data
    before its transfer to the cloud because image treatment needs processing power
    and storage capabilities. The default of this approach is that the delay of the
    whole process from data transfer via high throughput wireless or cellular protocol
    to the transmission of processing results cannot be guaranteed because of the
    fluctuation of data rates linked to wireless networks (Wang et al., 2020). The
    processing of data can be achieved in an online mode with a real-time data transmission
    and processing by a stream, Lambda, Kappa or derived architecture of these one.
    An offline strategy with a data transfer by means of a computer and Internet connection
    on the cloud after the UAV fly and processing with a Batch, a Lambda, or a Kappa
    architecture or a derived architecture of these one is also possible. This latter
    costly avoid data transmission and is suitable for monitoring crops or livestock
    that do not require direct action. Agriculture 4.0 uses in particular Unmanned
    Aerial Vehicles (UAVs) equipped with various sensors in order to improve the time
    of data collection, in reducing the cost of acquisition compared to traditional
    field phenotyping technologies. According to Tang et al., edge-cloud is majorly
    used in smart robots to reduce complexity (Tang et al., 2021). Indeed, the images
    of drones to be used must be orthorectified and assembled. These operations require
    significant resources in terms of computing power, and memory. All these collected
    data must be rapidly processed, analyzed, and visualized. Agroview (Ampatzidis
    et al., 2020) is a platform that developed a cloud and AI-based application to
    survey and assess the agriculture field, deployed on Amazon Web Services (AWS).
    A website allows the upload of images or existing orthomosaic, the consultation
    for each tree field e.g., number of trees, tree gaps count, area of the field,
    the average height of trees, canopy area, etc. The website also allows the stitching
    of an orthomosaic and the generation of a Digital Surface Model (DSM). A tree
    detection algorithm developed in C allows the detection of individual tree and
    tree gap, and estimate tree parameters such as height, canopy area, health/stress
    estimation. The pipeline of treatment uses a Faster R-CNN to detect the region
    of interest (ROI) and the ResNet101 network allows to detect trees and row orientation.
    Afterward, the Yolo classifier using Darknet19 was applied along each row of trees
    to obtain a more precise detection. Debauche et al. presented an Edge-Cloud architecture
    for the analysis of cattle behavior from 9-DOF IMU data sampled at 100 Hz and
    GPS location sampled at 0.5 Hz that is then processed with an algorithm proposed
    by (Andriamandroso et al., 2017) in batch processing (Debauche et al., 2019, Debauche
    et al., 2020). Popescu et al. proposed an integrated system UAV-WSN-IoT where
    WSN data is collected by UAVs before their transmission to the ground control
    station and afterward to the cloud (Popescu et al., 2020). Debauche et al. proposed
    an architecture for scientific research dedicated to honeybee Colony Collapse
    Disorder. In this architecture, data is compressed on LoPy at the edge level before
    its collection by the LoRaWan gateway and its transmission to the Lambda architecture
    in the cloud where it is processed (Debauche et al., 2018). Edge-Fog aims to connect
    devices directly with network components such as gateways, routers that perform
    data processing. The major benefits of this approach are an optimization of the
    bandwidth, a reduction of traffic and latency, a better privacy, and an improved
    security level (Badidi, 2020). Fog nodes collect, aggregate, filter, encrypt,
    compress, and process IoT data (Gupta et al., 2020). This way is used for example
    by milking robots where data are processed by a computer close the robot and can
    be viewed remotely by the farmer. 5G also promotes mobile edge computing (MEC).
    Debauche et al. presented an AI-IoT architecture for the deployment of Artificial
    intelligence algorithms and Internet of things services at fog level using docker
    containerization and Kubernetes orchestration. This architecture has been developed
    to automatically deploy AI algorithms after retraining when performances (accuracy,
    recall, precision) are improved (Debauche et al., 2020). Debauche et al. proposed
    a Multi-Agent System (MAS) deployed at edge level allowing to control abnormal
    data present in sensed data and eventually cure this data when it is possible.
    The MAS simultaneously manages pivot irrigation, plant diseases and pests'' detection,
    and their curation. The data is partially transmitted to the cloud to improve
    the detection of diseases and pests and retrain AI algorithms before their redeployment
    at the edge level (Debauche et al., 2020). Debauche et al. described a fog architecture
    in which a Gated Recursive Unit (GRU) algorithm is deployed on NVIDIA Jetson Nano
    for real-time poultry monitoring. GRU is simpler than LSTM algorithm. GRU is built
    to avoid varnish gradient problems. Periodically data is transmitted to the user
    interface implemented in NodeJS in the cloud (Debauche et al., 2020). Edge-Fog-Cloud
    is a paradigm in which data are partially processed in the fog and more complex
    treatments are achieved in the cloud. This way is used by wireless Sensor and
    Actuator Network (WSAN), which passes through a gateway that provides interconnection
    between the devices and the backhaul which transit then data to the cloud. However,
    the right balance between cloud and edge/fog computing is required (Badidi, 2020)
    based on available resources and whether or not the task is sensitive. Taneja
    et al. used a strategy Edge-Fog-Cloud to develop a detection system of lameness
    for cattle. The data from the pedometer is transmitted to the Fog node by means
    of a Long-Range proprietary protocol at 433 MHz on a distance of 2 km. Fog node
    stores in local database, preprocess and aggregates them. Fog node communicates
    with IBM Watson IoT Platform with MQTT protocol. Arriving data are picked up and
    stored in Cloudant NoSQL JSON database in IBM cloud. A mobile application synchronizes
    data with PouchDB, its local database via the REST API of Cloudant database when
    an Internet connection is available (Taneja et al., 2020). Alonso et al. presented
    Global Edge Computing Architecture (GECA), a modular tiered architecture (IoT
    Layer, Edge Layer, Business Solution Layer) to monitor dairy and feed grain state
    in real-time. In this architecture, a Distributed Ledger Technologies provides
    security from IoT Layer to Business Solution Layer. In the IoT layer, a set of
    agents call oracles to verify incoming data and afterward calculate hash of data
    with SHA-256 which is stored in the blockchain to verify the non-alteration of
    data. In parallel data is encrypted with the RSA algorithm and then sent to the
    Edge layer. The Edge Layer is responsible of the preprocessing of data and filters
    out data transmitted to the cloud. It enables also various data analyses. In the
    business Solution Layer, final storage, authentication, analysis for decision
    making is achieved. It provides also a knowledge base and APIs (Alonso et al.,
    2020). Edge-Edge is a paradigm in which devices interact to collaborate, exchange,
    and process data. The deployment of the 5G network allows the interconnection
    between UAVs and UGVs/ agricultural machinery (Tang et al., 2021). This high throughput
    network will allow to developping new collaboration between UAVs/ UGVs and agricultural
    machinery, for example, a drone will provide information to a harvester to avoid
    a non-desirable area of the field or avoid obstacles. A fleet of drones can also
    collaborate to coordinate their operations on the field between them of course
    subject to availability in rural areas, a transmission network with sufficient
    bandwidth and short-latency or capabilities to communicate between them in direct
    connection or in a mesh network. (Tang et al., 2021). Four cooperation strategies
    have been identified, two of which use the cloud, namely Fog-Cloud and Edge-Cloud.
    The other two remaing, do not involve the cloud; namely, Fog-Edge, and Edge-Edge
    cloud. The first two strategies complement the cloud to help us to address issues
    relating to production data and trade secrets, network congestion, and response
    times. The other two strategies do without the cloud and therefore assume that
    the devices/ vehicles have sufficient capacity to perform the processing. Despite
    these cooperation strategies between different levels of processing, some questions
    remain unanswered: How to store all the raw data when the data is so important
    that it would take colossal means to process it? What about security? How to organize
    the distribution of tasks between the edge, the fog, and the cloud? How to ensure
    operation and/ or treatment when network connections are intermittent or faulty?
    How to improve the maintainability of these architectures? These are the questions
    that the new trends that we describe in the next paragraph attempt to answer.
    5. New trends In this section, we present two emerging architectures not based
    on the batch or/and real-time architectures or their derivatives. Afterward, we
    describe Osmotic and Dew computing as two new paradigms, which allow us to respectively
    choose where the processing must be achieved and improve the user experience.
    New trends are additional elements that allow enriching the analysis of Section
    4 in order to address the third research question. The Microservices Architecture
    (MA) is a new system software design pattern that divides complex monolithic application
    in micro services dedicated for a single function. Microservice addresses defects
    of monolithic applications in which improving of service performance needs multiple
    deployment; a change in a function can affect all the monolith due to high dependencies
    between components; all the monolith uses a sole technology stack and development
    standards which limits possibilities to solve problems of physical heterogeneity.
    The advantages of this architecture are using a lightweight communication mechanism
    to interact between services with a minimal overload (Sun et al., 2017). The design
    proposed by (Sun et al., 2017) is composed of 8 microservices (Geo, Security,
    Tenant, Devices, Big Data, Automation, AI, and Application) and a core service
    coordinating. These services provide respectively: (1) Geo, a GIS layer to render
    data; (2) Security, user/group/role management, access control, administration,
    and authentication mechanism; (3) support for multiple IoT applications with a
    single core; (4) device plugins and communication protocols for sensing and actuating;
    (5) scalable persistence to store data; (6) process, analyze events and notify
    appropriate participant; (7) Artificial intelligence tools for IoT big data; (8)
    components to interact with client interfaces; (9) support for data exchanging
    by message with the devices. Authors argue that their approach is more flexible,
    scalable and platform-independent. Fig. 6 Table 13. Download : Download high-res
    image (189KB) Download : Download full-size image Fig. 6. Microservices Architecture
    General Scheme. Table 13. Pros and Cons of Microservices Architecture. Pros Cons
    - Fractionating of monoliths facilitates the maintainability and scalability of
    low coupled microservices. - Need to find microservice adapted with needs. - The
    discovery of micro-services allows the development new applications more easily
    than with monoliths. Fraction complex monolith is not easy. - More resilient,
    when a microservice is down, all others continue to function. Bixio et al. proposed
    a stream processing architecture event-driven based on proxy, adapter, and data
    processing microservices. This architecture extends the IoT platform Senseioty
    and using the Java OSGi framework (Bixio et al., 2020). The Data Lake Architecture
    (DLA) (Fang, 2015, Miloslavskaya and Tolstoy, 2016) enables the storage of large
    volumes of data of all types: raw data in its native format, structured, semi-structured,
    in a cost-effective manner. In this architecture, data is stored in its native
    format until it needs to process them by engines (Miloslavskaya and Tolstoy, 2016),
    which allows a fast transformation and refinement of stored data regardless of
    the amount of data stored. The architecture makes it possible to consume all types
    of data (logs, web services, database, files, etc.); different ingestion systems
    consume the data and then stored it in data repository. Once the data is stored,
    query systems can query the data lake. This architecture is considered in the
    corporate world as an evolution of existing architectures. The advantage of the
    Data Lake architecture is that it can easily and inexpensively store large amounts
    of data. It is particularly well suited to storing data in a typical format. In
    Enterprise Data Lakes are used; in addition to, data warehouses. Data lakes are,
    however, unsuitable for assessing data quality, data can be placed in data lakes
    without content control, and performance is also poorer than on specially designed
    and optimized infrastructures. The Lakehouse is a variant of the Data Lake where
    storages of data are generally achieved with Hadoop in the data lake is replaced
    by a distributed storage such as Amazon S3, Azure Blob Storage, Google Cloud Storage,
    and analysis are directly achieved by infrastructure managed by Cloud Service
    Providers such as Amazon Athena, EMR, or Databricks, Google Data proc, Azure HDInsight.
    The Fig. 7 provides a comparison between data lake and gatehouse structure. Download
    : Download high-res image (264KB) Download : Download full-size image Fig. 7.
    Data lake and Lakehouse General Scheme. It crucial in agriculture to explore datasets
    from different sources. The data lake is indicated to manage the complexity of
    agricultural ecosystems and centralized all data sources to find new correlations.
    (Madera et al., 2017). A data lake provides views based on metadata. It is nevertheless
    necessary to have advanced analysis tools for predictive modeling and statistical
    analysis. López et al. used a data lake to achieve the fusion of data from different
    domains in smart the agriculture context (López et al., 2020). Gallinucci et al.
    (Gallinucci et al., 2019, Gallinucci et al., 2020) present an innovative architecture
    3 tiers architecture, called Mo.Re.Farming (MOnitoring and REmote system for a
    more sustainable FARMING) based on a data lake using Apache Hadoop and storing
    structured, semi-structured, and unstructured raw data, and in which subsequent
    processing and enrichment activities are separated. An Operational Data Store
    (ODS) using PostgreSQL with PostGIS to stores structured and detailed data and
    address limitations of big data solutions in properly handling continuous field
    geographic data. Finally, a spatial cube enables Spatial OnLine Analytical Processing
    (SOLAP). Neves et al. described an architecture in which raw data is stored in
    a datalake. Then, ETLs transforms data to be storable in a database. The data
    is enriched thanks to a knowledge base and its exploration by data mining algorithms
    (machine learning). The result of processing is filtered to improve the quality
    of structured data (Neves and Cruvinel, 2020). Table 14. Table 14. Pros and Cons
    of Datalake/DataHouse. Pros Cons - Store the data in its raw form without transforming
    them immediately. - Availability of results depend of the ingesting speed by processing
    services. - Allow store massive low-value data without investing energy to transform
    and store them in a database. - Data analysis by sampling does not give exact
    results but is estimated. - Provides a solution to situations where the volume
    of data is so large that it can no longer be processed immediately - Data House
    may be limited by the services offered by cloud providers for data analysis. Osmotic
    Computing (OC) (Villari et al., 2016) is a new paradigm inspired by the chemical
    osmosis process that corresponds to a dynamic and bidirectional flow of microservices
    between cloud and edge. OC exploits container-based solution to allows an automatic
    deployment of portable, mobile, and cross-platform microservices between Edge
    and cloud levels (Villari et al., 2016). Osmotic computing introduces the concept
    of Micro Elements (MELS) which decouples user data and applications in Micro Services
    (MS) i.e. a docker container and Micro Data (MD) i.e. an entity self-explicative
    in JSON. MS associates one operating system (Micro Operation Service) with an
    application (Micro User Service) while MD associates a microservice configuration
    (Micro Operational Data) and User data (Micro User Data). These MELS can be deployed
    on Microcontrollers (MCU) or Multiprocessor (MPU) (Villari et al., 2017). Table
    15. Table 15. Pros and Cons of Osmotic Computing. Pros Cons - Micro Element (microservice  +
    micro dataset) easy to migrate between fog and cloud. - All datasets are not decomposable
    in micro dataset. The bidirectional migration of microservices between Edge and
    Cloud must, on one hand, avoid application breakdown and QoS degradation and on
    the other hand manage them dynamically, in high heterogeneously physical resources
    context, in the function of infrastructure and applications requirements (Villari
    et al., 2016). Carnevale et al. have applied osmotic computing to the Internet
    of Things by means of a distributed multi-agent system. Each agent is self-orchestrated,
    works independently, and manages the workflow as a composition of MELs. It monitors
    the overloading state of microservices by means of response time metric and decides
    to relocate them to another agent based on a Deep Reinforcement Learning algorithm
    or Time Series Analysis (Carnevale et al., 2019). Fig. 8, Fig. 9. Download : Download
    high-res image (119KB) Download : Download full-size image Fig. 8. Micro Element
    Structure. Download : Download high-res image (357KB) Download : Download full-size
    image Fig. 9. Osmotic Computing General Scheme. In an IoT context, OC allows to
    deploy lightweight micro services at edge level while complex micro services are
    deployed at fog/cloud level, and balance load between edge, fog, and cloud. (Maksimović,
    2018). Morshed et al. proposed to use OC to distribute Deep Learning across edge,
    cloud, and mobile edge in a holistic way (Morshed et al., 2017). However, Kaur
    et al. in their Osmotic Computing applications survey have identified the need
    of standardization in terms of infrastructure deployment and micro-services distribution.
    The orchestration is crucial to manage efficient services. Security remains an
    important challenge because the service migration is supported by different layers
    (Kaur et al., 2020). Dew Computing (DC) (Skala et al., 2015) allows to further
    improve response times by pushing from Central cloud to end-users, computing applications,
    data, and low-level services. Client microcomputers are used to store a part of
    the data locally in the background and to limit access to the cloud, reduce network
    dependency and drastically reduce processing cost (Skala et al., 2015). Dew computing
    is the additional piece of cloud computing. It is mainly composed of a wide range
    of heterogeneous devices and varied equipment ranging from smartphones to smart
    sensors (Wang, 2016). DC is highly and effectively capable in terms of scalability
    and ability to perform sophisticated operations and to process numerous applications
    and tools. Additionally, the equipment of DC is ad hoc programmable and self-adaptive.
    They have the qualifications to running the process within another process in
    a distributed way without a focal communication network (Skala et al., 2015).
    Applications running in the on-premises computers provide services to users and/or
    devices independently of the cloud but collaborating with cloud services (Wang,
    2016). DC can provide access web fraction without Internet connection (WiD), Storage
    in dew has a cloud copy (STiD), Local database has a cloud backup (DBiD), Software
    ownership and settings have a cloud copy (SiD), SDK and projects have a cloud
    copy (PiD), On-premises computer settings and data have a cloud copy (IaD), Other
    services (DiD) (Wang, 2016). The Fig. 10 presents the dew computing in the general
    scheme Cloud-Fog-Edge Computing. Table 16. Download : Download high-res image
    (84KB) Download : Download full-size image Fig. 10. Dew Computing General Scheme.
    Table 16. Pros and Cons of Dew Computing. Pros Cons - Allows access to a local
    copy of data when the connection is unavailable. - Replication of data is bandwidth-consuming.
    - Improve the reliability and the false tolerance. - Difficult to exploit if bandwidth
    is insufficient. Rajakaruna et al. presented a dew architecture based on a drone
    to retrieve and process data, manage WSN, and play the role of dew server. The
    drone communicates with sensors, and actuators with BLE protocol, collect, store
    data, and then when the drone is at the docking station it sends data to the cloud
    (Rajakaruna et al., 2018). Grovers et al. described a reliable and fault-tolerant
    architecture at 4 levels (edge, dew, fog, and cloud) in which sensed data is replicated
    at edge, fog and cloud level in order to take over the application’s control when
    a server is failed. In their architecture, dew servers are closed and linked with
    sensors producing data. The fault tolerance is ensured by mobile agents working
    as a resource exchanging the application and link-state information between us,
    and the network monitoring agent (Grover and Garimella, 2018). The Blockchain
    is a distributed digital ledger of transaction distributed maintained by a network
    of multiple computing nodes. This ledger can be deployed among the IoT nodes network
    (Bermeo-Almeida et al., 2018). In the blockchain, transactions namely blocks are
    managed by a specific software platform ensuring the data transmission, processing
    and storage, and its representation in a human-readable form allowing a consistent
    view and a consensus between the participants (Kamilaris et al., 2019). Different
    mechanisms of consensus whose two main ones are the “Proof of Work (PoW)” and
    the Proof of Stake (PoS). The PoW requires the solving of difficult computational
    tasks before validating transactions and the adding of the block in the blockchain.
    In this approach “miners” are in competition to be the first and obtain the rewards,
    which has an impact on the environment, need expending large a amount of computer
    and energy, and involves a risk of centralization. While the PoS approach, “validators”
    are randomly selected with a probability which depends on the amount of stake
    held. At the end of the validation process, it earns a fee. Other less used consensus
    mechanisms exist such as (1) Proof of Elapsed Time (PoET) in which each node generates
    a random wait time and goes to sleep for that specified duration; (2) Simplified
    Byzantine Fault Tolerance (SBFT), an improvement of Practical Byzantine Fault
    Tolerance (PBFT) specifically designed for blockchain in which each new block
    is maintained by a delegation of nodes with increasing authority. Each one uses
    the internal time to decide when actions must be done; (3) Proof of Authority
    (PoA) in which approved accounts process to the automated validation of transaction
    and blocks. Table 17. Table 17. Pros and Cons of Blockchain. Pros Cons - Data
    distributed (Alonso et al., 2020). - Energy consumption for the complex signature
    verification process can be important. - Immutable, durable, verifiable, secure,
    and transparent (Alonso et al., 2020). - Not adapted to store images, video. -
    Transactions P2P at low cost. The Fig. 11 shows the blockchain general scheme.
    Download : Download high-res image (251KB) Download : Download full-size image
    Fig. 11. Blockchain General Scheme. The block chain is mainly used in Agriculture
    to make the data of the supply chain transparent and open (Bermeo-Almeida et al.,
    2018) and ensure the complete traceability of the food chain from the fork to
    the plate. The block chain allows to record information about: (1) Transactions
    between provider and farmer as well as information relating to the crops, material
    and chemical products; (2) The farm, cultivation practices and management, animals
    feeding, and complementary information such as weather conditions, animals welfare,
    diseases, treatment, etc; (3) Information about factory and its equipment, the
    processing method, batch numbers but also financial transactions with producers
    and distributors; (4) Warehousing, storage conditions (temperature, humidity),
    methods of transport, transit time, and all financial transactions between the
    distributors and retailers; (5) food items information such as quantity available,
    quality, expiration date, time spent on the shelf or in the stock (Bermeo-Almeida
    et al., 2018, Kamilaris et al., 2019). The Fig. 12 shows an example of blockchain
    applied to an agri supply chain. Download : Download high-res image (112KB) Download
    : Download full-size image Fig. 12. Supply chain based on a blockchain. To a lesser
    extent, secured data storage, remote monitoring, and automation. The blockchain
    address some challenges of IoT such as decentralization, data anonymization, and
    security. Moreover, it allows faster and efficient operations, to improve reliability
    and scalability (Bermeo-Almeida et al., 2018). The analysis of new trends shows
    that: (1) Micro service architecture allows decomposing monoliths in microservices
    lowly coupled which makes it easier to maintain it while allowing other services
    to continue operating. Furthermore, this type of architecture is more resilient
    because if one of the services is down, the other services due to the weak coupling
    can continue to operate at least in a degraded mode. (2) Data Lake/DataHouse propose
    a new approach Load Transform Extract (LTE) where data are firstly stored in their
    original format, which are then transformed in order to extract information. This
    paradigm is particularly well adapted when the amount of data is so important
    that process all data is too costly. In this case, data can be sampled in order
    to obtain information. This paradigm is also well adapted if we want to conserve
    also raw data or complete a generic architecture, for example, to store data that
    will be processed in batch processing. (3) Osmotic Computing attempts to propose
    a solution to the repartition of workload between fog and cloud in decomposing
    treatments in microelements composed of a microservice associated with a micro
    dataset. The osmotic computing could also be associated with the micro service
    architecture to allow the distribution of instances of microservices at different
    levels of the network according to their respective load. (4) Dew Computing aims
    to replicate data near sensors or users to continue to store data or allows to
    continue to consult data when connection is intermittent. It allows improving
    the reliance of architectures on connection interruptions. (5) Blockchain provides
    an answer to authentication and security problems by making it possible in particular
    to verify that the data has not been altered or compromised. Nevertheless, it
    is not possible to store large amount of data such as high definitions images,
    or videos in the blockchain but hashes of datasets allowing to verify their authenticity
    well. 6. Towards Agriculture 5.0 According Myklevy et al., the world must improve
    the amount of food produced by 70% by 2050 to produce global food needs for a
    population (Mykleby et al., 2016) of 9.7 billion according to the Food and Agriculture
    Organization of the United Nations (FAO) (Zhang, 2016). To overcome these problems
    and contribute to achieve the second objective of 17 Sustainable Development Goals
    (SDGs) of the United Nations (UN) with a timeframe in the range 2015 to 2030,
    the concept of Agriculture 5.0 has been born (Martos et al., 2021). Agriculture
    5.0 aims to increase production sustainably while consuming fewer resources and
    taking care of the environment. This next wave of agricultural revolution will
    imply the use of robots integrating machine learning to compensate for the shortage
    of workers. Farm robots are drastically increasing productivity in improving the
    human labor workforce and can also harvest a more important volume faster than
    a human. Nevertheless, these early technologies are still too expensive for most
    farmers especially small farms (Saiz-Rubio and Rovira-Más, 2020). Fig. 13 show
    the coupling between Agriculture 4.0 and Agriculture 5.0 and their integration
    in the context of the agri-food supply chain, the Society 5.0 and 17 Sustainable
    Development Goals (SDGs) of United Nations (See Fig. 13). Download : Download
    high-res image (252KB) Download : Download full-size image Fig. 13. Integration
    of the Agriculture 5.0 in the context of the Society 5.0. 7. Conclusion Our review
    is boosted by four research questions dectitaed as follow: (1) Which storage and
    processing architectures are best suited to Agriculture 4.0 applications and address
    its particularities? (2) Can generic architectures meet the needs of Agriculture
    4.0 application cases? (3) What are the horizontal valuation possibilities that
    allow the transition from research to industrialization? (4) What are the vertical
    valuation possibilities to move from algorithms trained in the cloud to embedded
    or autonomous products?. The analysis of the literature shows that a multitude
    of architecture coexists. Nevertheless, the Lambada and Kappa architectures seem
    to emerge as generic architectures. These must generally be accompanied by complementary
    architectural components to address specific needs and be part of a storage and
    processing strategy in which the cloud architecture is a component of the chain
    or may also and more rarely be absent. The traditional centralized cloud computing
    will continue to remain an important part of computing systems (Ai et al., 2018),
    for sciences even if other paradigms appear. Indeed, cloud, fog, and edge computing
    complementary interact with each other to form a mutually beneficial and interdependent
    service continuum. Some functions are naturally more suitable or advantageous
    at a level than another in function of requirements in response time, computing,
    or latency tolerance. However, the cloud cannot be completely replaced by fog
    and edge computing because some computation-intensive tasks can only be processed
    at the cloud level, which has the computing power and storage capacities (Wang
    et al., 2020). In Agriculture 4.0, this is particularly the case for the processing
    of satellite images, the training of artificial intelligence algorithms such as
    Deep Convolutional Neural Network (DCNN). New trends make it possible to address
    various problems: (1) The Data lake/Data House offers a more economical alternative
    to massive cloud storage in databases. In this paradigm, all data are stored in
    a state and transform only when they are to be exploited. This approach is particularly
    interesting on one hand when all data are not exploited and on the other hand
    when a decision or an action is not expected immediately. Data lake also allows
    the fusion of agriculture data from various origins in different formats and granularity.
    (2) The blockchain provides solutions in particular to the security problems,
    the possibility of distributing data storage and ensuring the traceability of
    transactions in agrifood supply chains (3) As the literature has shown, Dew Computing
    can be placed in two different places in the network either as close as possible
    to the sensors to allow processing to continue during transmission interruptions
    or as close as possible to users in order to have a local copy of the data in
    order to be able to consult them offline. It should be noted, however, that for
    the second option, there are other means of local caching at the device level,
    for amounts of data of a few mega as those offered by Progressive Web Apps (PWA)
    by example. (4) Osmotic computing provides a solution to the question of how to
    distribute the load between the different processing levels (edge, fog, cloud).
    It uses the concept of microelement associating a microservice and its micro dataset.
    In addition, osmotic computing can also be associated with micro-service architectures.
    (5) The microservice architecture offers the possibility of decoupling the monolithic
    architectures into weakly coupled microservices. These services can be more easily
    associated, maintained, or evolved independently. The combination of these microservices
    makes it easier to develop new services for the end-user that are also easier
    and faster to evolve according to technological developments and needs. In addition,
    at the network level, the 5G network offers new possibilities in terms of Wireless
    Sensors and Actuators Network (WSAN), communication between machines, UAVs, and
    UGVs. Moreover, the coupling with MEC opens the field of processing close of end-users.
    The SDN/NFV Architecture allows to facilitate the design, and to improve the flexibility
    of network. Software-defined networking (SDN) allows decoupling transmission of
    data and network control functionality while Network function virtualization (NFV)
    abstracts transfer network and related network functions (Friha et al., 2021).
    Two trends in the use of processing architecture coexist, on the one hand, users
    of a paid or open source IoT platform, and on the other hand, users who develop
    specific architectures to implement particular use cases. From the point of view
    of transferability, we understand that it is easier for ready-made chargeable
    infrastructures and that it can be limited for turnkey open-source infrastructures
    where the type of license adopted may pose a problem. However, the sustainability
    of paid infrastructure is conditional on the development granted by the company
    that manages them and on its financial health. The development of architecture
    based on paid software bricks is facilitated but its durability is conditioned
    by the availability and the maintenance of these software bricks. As for transferability,
    it is linked to the acquisition of ad hoc licenses. The development of architecture
    using open source software bricks from foundations such as Apache Foundation makes
    it possible not to be limited by licenses but is dependent on developments and
    maintenance carried out by the community of developers. These software bricks
    can be abandoned by the community, the company that sponsors them, or the foundation
    that hosts them. The development of a sustainable architecture would go through
    an emancipation of software bricks which would make it possible to easily change
    them on the one hand when one of them disappears or if a new more efficient software
    brick appears. The deployment of 5G and satellite Internet will bring in a new
    player, which are the telecommunications companies that will be able to provide
    processing capacities and services as close as possible to users at the level
    of 5G antennas, which will impact processing architectures. The problem will then
    arise of interoperability between the networks of sensors and actuators with these
    new high-speed, low-latency networks. The new networks offered by the telecommunications
    companies will make it possible to offer new services or even to decouple the
    software from the hardware, which will make it possible to make the sensors and
    actuators interchangeable. This should make it possible to reduce the cost of
    the equipment and make it accessible to developing countries or areas not covered
    by traditional LPWAN and 3GPP networks. The impact of these new networks will
    have to be reviewed in the future to identify the new trends offered by 5G and
    satellite Internet. Declaration of Competing Interest The authors declare that
    they have no known competing financial interests or personal relationships that
    could have interfered with overall quality of the work reported in this paper.
    Acknowledgment This research is partially funded by Infortech and Numediart institutes.
    The authors would like to express their gratitude to Dr. Meryem Elmoulat for accepting
    to edit the writing of this paper and to Mr. Fabrice Nolack Fote for his help
    in the elaboration of the conceptual framework. References Agency, 2020 E.G. Agency
    Power-efficient positioning for THE Internet of Things – White Paper European
    GNSS Agency (2020), 10.2759/26127 Google Scholar Ai et al., 2018 Y. Ai, M. Peng,
    K. Zhang Edge computing technologies for internet of things: a primer Digital
    Commun. Networks, 4 (2018), pp. 77-86, 10.1016/j.dcan.2017.07.001 View PDFView
    articleView in ScopusGoogle Scholar Alonso et al., 2020 R.S. Alonso, I. Sittón-Candanedo,
    Óscar García, J. Prieto, S. Rodríguez-González An intelligent edge-iot platform
    for monitoring livestock and crops in a dairy farming scenario Ad Hoc Netw., 98
    (2020), Article 102047, 10.1016/j.adhoc.2019.102047 View PDFView articleView in
    ScopusGoogle Scholar Amazon, 2021 Amazon, 2021a. Amazon dynamodb. url:https://aws.amazon.com/fr/dynamodb/.
    Google Scholar Amazon, 2021b Amazon, 2021b. Amazon web services. url: https://aws.amazon.com/.
    Google Scholar Ampatzidis et al., 2020 Y. Ampatzidis, V. Partel, L. Costa Agroview:
    Cloud-based application to process, analyze and visualize uav-collected data for
    precision agriculture applications utilizing artificial intelligence Comput. Electron.
    Agricul., 174 (2020), Article 105457, 10.1016/j.compag.2020.105457 View PDFView
    articleView in ScopusGoogle Scholar Andriamandroso et al., 2017 A.L.H. Andriamandroso,
    F. Lebeau, Y. Beckers, E. Froidmont, I. Dufrasne, B. Heinesch, P. Dumortier, G.
    Blanchy, Y. Blaise, J. Bindelle Development of an open-source algorithm based
    on inertial measurement units (imu) of a smartphone to detect cattle grass intake
    and ruminating behaviors Comput. Electron. Agricult., 139 (2017), pp. 126-137,
    10.1016/j.compag.2017.05.020 View PDFView articleView in ScopusGoogle Scholar
    Apache Software Foundation, 2021a Apache Software Foundation, A., 2021a. Cassandra.
    url: https://cassandra.apache.org. Google Scholar Apache Software Foundation,
    2021b Apache Software Foundation, A., 2021b. Druid. url: https://druid.apache.org.
    Google Scholar Assis and Bittencourt, 2016 M.R. Assis, L.F. Bittencourt A survey
    on cloud federation architectures: identifying functional and non-functional properties
    J. Network Comput. Appl., 72 (2016), pp. 51-71, 10.1016/j.jnca.2016.06.014 View
    PDFView articleView in ScopusGoogle Scholar AT&T, 2021 AT&T, P., 2021. At&t continues
    to fuel growth of the internet of things with launch of new developer-friendly
    managed service. url: https://about.att.com/story/m2x_data_service_for_enterprise_developers.html.
    Google Scholar Ayaz et al., 2019 M. Ayaz, M. Ammad-Uddin, Z. Sharif, A. Mansour,
    E.H.M. Aggoune Internet-of-things (iot)-based smart agriculture: toward making
    the fields talk IEEE Access, 7 (2019), pp. 129551-129583, 10.1109/ACCESS.2019.2932609
    View in ScopusGoogle Scholar Badidi, 2020 E. Badidi Qos-aware placement of tasks
    on a fog cluster in an edge computing environment J. Ubiquitous Syst. Pervasive
    Networks, 13 (2020), pp. 11-19, 10.5383/JUSPN.13.01.002 Google Scholar Bermeo-Almeida
    et al., 2018 Bermeo-Almeida, O., Cardenas-Rodriguez, M., Samaniego-Cobo, T., Ferruzola-Gómez,
    E., Cabezas-Cabezas, R., Bazán-Vera, W., 2018. Blockchain in agriculture: A systematic
    literature review, in: International Conference on Technologies and Innovation,
    Springer. pp. 44–56. doi:10.1007/978-3-030-00940-3_4. Google Scholar Bixio et
    al., 2020 L. Bixio, G. Delzanno, S. Rebora, M. Rulli A flexible iot stream processing
    architecture based on microservices Information, 11 (2020), p. 565, 10.3390/info11120565
    Google Scholar Blynk, 2021 Blynk, 2021. Blynk iot platform: for businesses and
    developers. url:  https://blynk.io. Google Scholar Botta et al., 2016 A. Botta,
    W. De Donato, V. Persico, A. Pescapé Integration of cloud computing and internet
    of things: a survey Future Generat. Comput. Syst., 56 (2016), pp. 684-700, 10.1016/j.future.2015.09.021
    View PDFView articleView in ScopusGoogle Scholar Byers, 2017 C.C. Byers Architectural
    imperatives for fog computing: Use cases, requirements, and architectural techniques
    for fog-enabled iot networks IEEE Commun. Mag., 55 (2017), pp. 14-20, 10.1109/MCOM.2017.1600885
    View in ScopusGoogle Scholar Carnevale et al., 2019 L. Carnevale, A. Celesti,
    A. Galletta, S. Dustdar, M. Villari Osmotic computing as a distributed multi-agent
    system: the body area network scenario Internet of Things, 5 (2019), pp. 130-139,
    10.1016/j.iot.2019.01.001 View PDFView articleView in ScopusGoogle Scholar Cisco,
    2018 C. Cisco Cisco global cloud index: Forecast and methodology, 2016–2021 Cisco,
    San Jose (2018) Google Scholar Codeluppi et al., 2020 G. Codeluppi, A. Cilfone,
    L. Davoli, G. Ferrari Lorafarm: A lorawan-based smart farming modular iot architecture
    Sensors, 20 (2020), 10.3390/s20072028 url:  https://www.mdpi.com/1424-8220/20/7/2028
    Google Scholar Conesa-Munoz et al., 2016 J. Conesa-Muñoz, J. Valente, J. Del Cerro,
    A. Barrientos, A. Ribeiro A multi-robot sense-act approach to lead to a proper
    acting in environmental incidents Sensors, 16 (2016), p. 1269, 10.3390/s16081269
    View in ScopusGoogle Scholar Corp, 2020 Corp, P.H., 2020. Sensorcloud. url:  https://sensorcloud.com/.
    Google Scholar Debauche et al., 2018 O. Debauche, M. El Moulat, S. Mahmoudi, S.
    Boukraa, P. Manneback, F. Lebeau Web monitoring of bee health for researchers
    and beekeepers based on the internet of things Proc. Comput. Sci., 130 (2018),
    pp. 991-998, 10.1016/j.procs.2018.04.103 View PDFView articleView in ScopusGoogle
    Scholar Debauche et al., 2019 O. Debauche, S. Mahmoudi, A.L.H. Andriamandroso,
    P. Manneback, J. Bindelle, F. Lebeau Cloud services integration for farm animals’
    behavior studies based on smartphones as activity sensors J. Ambient Intell. Humanized
    Comput., 10 (2019), pp. 4651-4662, 10.1007/s12652-018-0845-9 View in ScopusGoogle
    Scholar Debauche et al., 2020 O. Debauche, S. Mahmoudi, M. Elmoulat, S.A. Mahmoudi,
    P. Manneback, F. Lebeau Edge ai-iot pivot irrigation, plant diseases, and pests
    identification Proc. Comput. Sci., 177 (2020), pp. 40-48, 10.1016/j.procs.2020.10.009
    View PDFView articleView in ScopusGoogle Scholar Debauche et al., 2020 O. Debauche,
    S. Mahmoudi, S.A. Mahmoudi, P. Manneback, J. Bindelle, F. Lebeau Edge computing
    and artificial intelligence for real-time poultry monitoring Proc. Comput. Sci.,
    175 (2020), pp. 534-541, 10.1016/j.procs.2020.07.076 View PDFView articleView
    in ScopusGoogle Scholar Debauche et al., 2020 O. Debauche, S. Mahmoudi, S.A. Mahmoudi,
    P. Manneback, J. Bindelle, F. Lebeau Edge computing for cattle behavior analysis
    2020 Second International Conference on Embedded & Distributed Systems (EDiS),
    IEEE (2020), pp. 52-57, 10.1109/EDiS49545.2020.9296471 View in ScopusGoogle Scholar
    Debauche et al., 2020 O. Debauche, S. Mahmoudi, S.A. Mahmoudi, P. Manneback, F.
    Lebeau A new edge architecture for ai-iot services deployment Proc. Comput. Sci.,
    175 (2020), pp. 10-19, 10.1016/j.procs.2020.07.006 View PDFView articleView in
    ScopusGoogle Scholar Debauche et al., 2020 O. Debauche, S.A. Mahmoudi, N. De Cock,
    S. Mahmoudi, P. Manneback, F. Lebeau Cloud architecture for plant phenotyping
    research Concurrency and Computation: Practice and Experience, 32 (2020), Article
    e5661, 10.1002/cpe.5661 View in ScopusGoogle Scholar Debauche et al., 2018 O.
    Debauche, S.A. Mahmoudi, S. Mahmoudi, P. Manneback Cloud platform using big data
    and hpc technologies for distributed and parallels treatments Proc. Comput. Sci.,
    141 (2018), pp. 112-118, 10.1016/j.procs.2018.10.156 View PDFView articleView
    in ScopusGoogle Scholar Debauche et al., 2021 O. Debauche, J.P. Trani, S. Mahmoudi,
    P. Manneback, J. Bindelle, S.A. Mahmoudi, A. Guttadauria, F. Lebeau Data management
    and internet of things: a methodological review in smart farming Internet of Things,
    14 (2021), Article 100378, 10.1016/j.iot.2021.100378 View PDFView articleView
    in ScopusGoogle Scholar Diaz et al., 2016 M. Díaz, C. Martín, B. Rubio State-of-the-art,
    challenges, and open issues in the integration of internet of things and cloud
    computing J. Network Comput. Appl., 67 (2016), pp. 99-117, 10.1016/j.jnca.2016.01.010
    View PDFView articleView in ScopusGoogle Scholar Drakos et al., 2015 Drakos, A.,
    Protonotarios, V., Manouselis, N., 2015. aginfra: a research data hub for agriculture,
    food and the environment. F1000Res. 4. doi:10.12688/f1000research.6349.2. Google
    Scholar El-Sayed et al., 2017 H. El-Sayed, S. Sankar, M. Prasad, D. Puthal, A.
    Gupta, M. Mohanty, C.T. Lin Edge of things: the big picture on the integration
    of edge, iot and the cloud in a distributed computing environment IEEE Access,
    6 (2017), pp. 1706-1717, 10.1109/ACCESS.2017.2780087 View in ScopusGoogle Scholar
    Elijah et al., 2018 O. Elijah, T.A. Rahman, I. Orikumhi, C.Y. Leow, M.N. Hindia
    An overview of internet of things (iot) and data analytics in agriculture: benefits
    and challenges IEEE Internet Things J., 5 (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296
    View in ScopusGoogle Scholar Estrada and Ruiz, 2016 Estrada, R., Ruiz, I., 2016.
    Big data smack: A guide to apache spark. Mesos, Akka, Cassandra, and Kafka. Google
    Scholar Fan and Gao, 2018 D. Fan, S. Gao The application of mobile edge computing
    in agricultural water monitoring system IOP Conference Series: Earth and Environmental
    Science, IOP Publishing (2018), p. 012015 CrossRefView in ScopusGoogle Scholar
    Fang, 2015 Fang, H., 2015. Managing data lakes in big data era: What’s a data
    lake and why has it became popular in data management ecosystem, in: 2015 IEEE
    International Conference on Cyber Technology in Automation, Control, and Intelligent
    Systems (CYBER), IEEE. pp. 820–824. doi:10.1109/CYBER.2015.7288049. Google Scholar
    Farooq et al., 2019 M.S. Farooq, S. Riaz, A. Abid, K. Abid, M.A. Naeem A survey
    on the role of iot in agriculture for the implementation of smart farming IEEE
    Access, 7 (2019), pp. 156237-156271, 10.1109/ACCESS.2019.2949703 View in ScopusGoogle
    Scholar Feng et al., 2019 X. Feng, F. Yan, X. Liu Study of wireless communication
    technologies on internet of things for precision agriculture Wireless Pers. Commun.,
    108 (2019), pp. 1785-1802, 10.1007/s11277-019-06496-7 View in ScopusGoogle Scholar
    Fernandez et al., 2015 Fernandez, R.C., Pietzuch, P.R., Kreps, J., Narkhede, N.,
    Rao, J., Koshy, J., Lin, D., Riccomini, C., Wang, G., 2015. Liquid: Unifying nearline
    and offline big data integration., in: CIDR, pp. 1–8. url:  http://hdl.handle.net/10044/1/23433.
    Google Scholar Ferrag et al., 2020 M.A. Ferrag, L. Shu, X. Yang, A. Derhab, L.
    Maglaras Security and privacy for green iot-based agriculture: review, blockchain
    solutions, and challenges IEEE Access, 8 (2020), pp. 32031-32053, 10.1109/ACCESS.2020.2973178
    View in ScopusGoogle Scholar Fote et al., 2020 F.N. Fote, A. Roukh, S. Mahmoudi,
    S.A. Mahmoudi, O. Debauche Toward a big data knowledge-base management system
    for precision livestock farming Proc. Comput. Sci., 177 (2020), pp. 136-142, 10.1016/j.procs.2020.10.021
    View PDFView articleView in ScopusGoogle Scholar Friha et al., 2021 O. Friha,
    M.A. Ferrag, L. Shu, L.A. Maglaras, X. Wang Internet of things for the future
    of smart agriculture: a comprehensive survey of emerging technologies IEEE CAA
    J. Autom. Sinica, 8 (2021), pp. 718-752, 10.1109/JAS.2021.1003925 View in ScopusGoogle
    Scholar Gallinucci et al., 2019 E. Gallinucci, M. Golfarelli, S. Rizzi A hybrid
    architecture for tactical and strategic precision agriculture C. Ordonez, I.Y.
    Song, G. Anderst-Kotsis, A.M. Tjoa, I. Khalil (Eds.), Big Data Analytics and Knowledge
    Discovery, Springer International Publishing, Cham (2019), pp. 13-23, 10.1007/978-3-030-27520-4_2
    View in ScopusGoogle Scholar Gallinucci et al., 2020 E. Gallinucci, M. Golfarelli,
    S. Rizzi Mo. re. farming: A hybrid architecture for tactical and strategic precision
    agriculture Data Knowl. Eng., 129 (2020), Article 101836, 10.1016/j.datak.2020.101836
    View PDFView articleView in ScopusGoogle Scholar Garcia et al., 2020 L. García,
    L. Parra, J.M. Jimenez, J. Lloret, P. Lorenz Iot-based smart irrigation systems:
    an overview on the recent trends on sensors and iot systems for irrigation in
    precision agriculture Sensors, 20 (2020), p. 1042, 10.3390/s20041042 View in ScopusGoogle
    Scholar Lopez et al., 2015 Garcia Lopez, P., Montresor, A., Epema, D., Datta,
    A., Higashino, T., Iamnitchi, A., Barcellos, M., Felber, P., Riviere, E., 2015.
    Edge-centric computing: Vision and challenges. doi:10.1145/2831347.2831354. Google
    Scholar Giebler et al., 2018 Giebler, C., Stach, C., Schwarz, H., Mitschang, B.,
    2018. Braid, in: Proceedings of the 7th International Conference on Data Science,
    Technology and Applications, pp. 294–301. doi:10.5220/0006861802940301. Google
    Scholar Google, 2021 Google, 2021. Firebase. url:  https://firebase.google.com/.
    Google Scholar Granell et al., 2017 Granell, C., Miralles, I., Rodríguez-Pupo,
    L.E., González-Pérez, A., Casteleyn, S., Busetto, L., Pepe, M., Boschetti, M.,
    Huerta, J., 2017. Conceptual architecture and service-oriented implementation
    of a regional geoportal for rice monitoring. ISPRS Int. J. Geo-Inform. 6. url:
    https://www.mdpi.com/2220-9964/6/7/191, doi:10.3390/ijgi6070191. Google Scholar
    Grover and Garimella, 2018 Grover, J., Garimella, R.M., 2018. Reliable and fault-tolerant
    iot-edge architecture, in: 2018 IEEE sensors, IEEE. pp. 1–4. doi:10.1109/ICSENS.2018.8589624.
    Google Scholar Guardo et al., 2018 E. Guardo, A. Di Stefano, A. La Corte, M. Sapienza,
    M. Scatà A fog computing-based iot framework for precision agriculture J. Internet
    Technol., 19 (2018), pp. 1401-1411, 10.3966/160792642018091905012 View in ScopusGoogle
    Scholar Gupta et al., 2020 M. Gupta, M. Abdelsalam, S. Khorsandroo, S. Mittal
    Security and privacy in smart farming: challenges and opportunities IEEE Access,
    8 (2020), pp. 34564-34584, 10.1109/ACCESS.2020.2975142 View in ScopusGoogle Scholar
    Hausenblas, 2014 Hausenblas, M., 2014. Internet of things architecture (iot-a)
    home page. url:  https://github.com/mhausenblas/iot-a.info. Google Scholar Iaksch
    et al., 2021 J. Iaksch, E. Fernandes, M. Borsato Digitalization and big data in
    smart farming–a review J. Manage. Anal., 8 (2021), pp. 333-349, 10.1080/23270012.2021.1897957
    View in ScopusGoogle Scholar IBM, 2015 IBM, 2015. Ibm watson iot platform. url:  https://internetofthings.ibmcloud.com/.
    Google Scholar IBM, 2021 IBM, 2021. Ibm cloud. url:  https://www.ibm.com/cloud.
    Google Scholar Influxdata, 2021 Influxdata, 2021. Infludb cloud. url:  https://www.influxdata.com/products/influxdb-cloud/.
    Google Scholar Souces and I., 2021 Integra Souces, I., 2021. Iot solution development
    services. url:  https://www.integrasources.com/iot-page/. Google Scholar Jayaraman
    et al., 2016 P.P. Jayaraman, A. Yavari, D. Georgakopoulos, A. Morshed, A. Zaslavsky
    Internet of things platform for smart farming: experiences and lessons learnt
    Sensors, 16 (2016), p. 1884, 10.3390/s16111884 View in ScopusGoogle Scholar KaaIoT,
    2021 KaaIoT, 2021. Ubidots. url:  https://docs.kaaiot.io/KAA/docs/current/Welcome/.
    Google Scholar Kamilaris et al., 2019 Kamilaris, A., Fonts, A., Prenafeta-Boldv́,
    F.X., 2019. The rise of blockchain technology in agriculture and food supply chains.
    Trends Food Sci. Technol. 91, 640–652. doi:10.1016/j.tifs.2019.07.034. Google
    Scholar Kaur et al., 2020 A. Kaur, R. Kumar, S. Saxena Osmotic computing and related
    challenges: a survey 2020 Sixth International Conference on Parallel, Distributed
    and Grid Computing (PDGC), IEEE (2020), pp. 378-383, 10.1109/PDGC50313.2020.9315757
    View in ScopusGoogle Scholar Kazim et al., 2018 M. Kazim, L. Liu, S.Y. Zhu A framework
    for orchestrating secure and dynamic access of iot services in multi-cloud environments
    IEEE Access, 6 (2018), pp. 58619-58633, 10.1109/ACCESS.2018.2873812 View in ScopusGoogle
    Scholar Khanna and Kaur, 2019 A. Khanna, S. Kaur Evolution of internet of things
    (iot) and its significant impact in the field of precision agriculture Comput.
    Electron. Agricul., 157 (2019), pp. 218-231, 10.1016/j.compag.2018.12.039 View
    PDFView articleView in ScopusGoogle Scholar Kodati and Jeeva, 2019 S. Kodati,
    S. Jeeva Smart agricultural using internet of things, cloud and big data Int.
    J. Innov. Technol. Exploring Eng. (IJITEE), 8 (2019), pp. 3718-3722, 10.35940/ijitee.J9671.0881019
    View in ScopusGoogle Scholar Kreps, 2014 Kreps, J., 2014. Questioning the lambda
    architecture. Online article, July 205. Google Scholar Lakhe, 2016 B. Lakhe Practical
    Hadoop migration: how to integrate your RDBMS with the Hadoop ecosystem and re-architect
    relational applications to NoSQL Apress (2016) Google Scholar Liu et al., 2020
    Y. Liu, X. Ma, L. Shu, G.P. Hancke, A.M. Abu-Mahfouz From industry 4.0 to agriculture
    4.0: current status, enabling technologies, and research challenges IEEE Trans.
    Industr. Inf., 17 (2020), pp. 4322-4334, 10.1109/TII.2020.3003910 Google Scholar
    López et al., 2020 I.D. López, J.F. Grass, A. Figueroa, J.C. Corrales A proposal
    for a multi-domain data fusion strategy in a climate-smart agriculture context
    Int. Trans. Oper. Res. (2020), 10.1111/itor.12899 Google Scholar Luis Bustamante
    et al., 2019 A. Luis Bustamante, M.A. Patricio, J.M. Molina Thinger. io: an open
    source platform for deploying data fusion applications in iot environments Sensors,
    19 (2019), p. 1044, 10.3390/s19051044 Google Scholar Mach and Becvar, 2017 P.
    Mach, Z. Becvar Mobile edge computing: a survey on architecture and computation
    offloading IEEE Commun. Surveys Tutorials, 19 (2017), pp. 1628-1656, 10.1109/COMST.2017.2682318
    View in ScopusGoogle Scholar Madera et al., 2017 Madera, C., Laurent, A., Rouge,
    T.L., Miralles, A., 2017. How can the data lake concept influence information
    system design for agriculture? In: 11th European conference dedicated to the future
    use of ICT in the agri-food sector, bioresource and biomass sector (EFITA 2017),
    pp. 181–182. Google Scholar Maksimović, 2018 M. Maksimović The role of osmotic
    computing in internet of things 2018 17th International Symposium INFOTEH-JAHORINA
    (INFOTEH), IEEE (2018), pp. 1-4, 10.1109/INFOTEH.2018.8345538 View in ScopusGoogle
    Scholar Manyika and Chui, 2015 Manyika, J., Chui, M., 2015. By 2025, internet
    of things applications could have $11 trillion impact. Insight Publications. Google
    Scholar Martos et al., 2021 V. Martos, A. Ahmad, P. Cartujo, J. Ordoñez Ensuring
    agricultural sustainability through remote sensing in the era of agriculture 5.0
    Appl. Sci., 11 (2021), p. 5911, 10.3390/app11135911 View in ScopusGoogle Scholar
    Marz and Warren, 2013 N. Marz, J. Warren Big Data: Principles and best practices
    of scalable real-time data systems Manning (2013) Google Scholar Maureira et al.,
    2011 M.A.G. Maureira, D. Oldenhof, L. Teernstra Thingspeak–an api and web service
    for the internet of things World Wide Web (2011) Google Scholar Meehan et al.,
    2016 J. Meehan, S. Zdonik, S. Tian, Y. Tian, N. Tatbul, A. Dziedzic, A. Elmore
    Integrating real-time and batch processing in a polystore 2016 IEEE High Performance
    Extreme Computing Conference (HPEC), IEEE (2016), pp. 1-7, 10.1109/HPEC.2016.7761585
    Google Scholar Meola, 2021 Meola, A., 2021. Smart farming in 2020: How iot sensors
    are creating a more efficient precision agriculture industry. url:  https://www.businessinsider.com/smart-farming-iot-agriculture?IR=T.
    Google Scholar Microsoft, 2021a Microsoft, 2021a. Azure. url:  https://azure.microsoft.com.
    Google Scholar Microsoft, 2021b Microsoft, 2021b. Azure iot. url:  https://azure.microsoft.com/en-us/overview/iot/.
    Google Scholar Miloslavskaya and Tolstoy, 2016 N. Miloslavskaya, A. Tolstoy Big
    data, fast data and data lake concepts Proc. Comput. Sci., 88 (2016), pp. 300-305,
    10.1016/j.procs.2016.07.439 View PDFView articleView in ScopusGoogle Scholar Misra
    et al., 2020 N. Misra, Y. Dixit, A. Al-Mallahi, M.S. Bhullar, R. Upadhyay, A.
    Martynenko Iot, big data and artificial intelligence in agriculture and food industry
    IEEE Internet Things J. (2020), 10.1109/JIOT.2020.2998584 Google Scholar Mongo,
    2021 Mongo, 2021. Mongodb atlas. url:  https://www.mongodb.com/en-us/cloud/atlas.
    Google Scholar Morshed et al., 2017 A. Morshed, P.P. Jayaraman, T. Sellis, D.
    Georgakopoulos, M. Villari, R. Ranjan Deep osmosis: holistic distributed deep
    learning in osmotic computing IEEE Cloud Comput., 4 (2017), pp. 22-32, 10.1109/MCC.2018.1081070
    View in ScopusGoogle Scholar Munir et al., 2017 A. Munir, P. Kansakar, S.U. Khan
    Ifciot: Integrated fog cloud iot: a novel architectural paradigm for the future
    internet of things IEEE Consumer Electron. Mag., 6 (2017), pp. 74-82, 10.1109/MCE.2017.2684981
    View in ScopusGoogle Scholar Mykleby et al., 2016 M. Mykleby, P. Doherty, J. Makower
    The New Grand Strategy: Restoring America’s Prosperity, Security, and Sustainability
    in the 21st Century St. Martin’s Press (2016) Google Scholar Navarro et al., 2020
    E. Navarro, N. Costa, A. Pereira A systematic review of iot solutions for smart
    farming Sensors, 20 (2020), p. 4231, 10.3390/s20154231 Google Scholar Navarro-Hellin
    et al., 2016 H. Navarro-Hellín, J. Martinez-del Rincon, R. Domingo-Miguel, F.
    Soto-Valles, R. Torres-Sánchez A decision support system for managing irrigation
    in agriculture Comput. Electron. Agricul., 124 (2016), pp. 121-131, 10.1016/j.compag.2016.04.003
    View PDFView articleView in ScopusGoogle Scholar NECTEC, 2020 NECTEC, 2020. Netpie
    - network platform for internet of everything. url:  https://netpie.io. Google
    Scholar Neves and Cruvinel, 2020 R.A. Neves, P.E. Cruvinel Model for semantic
    base structuring of digital data to support agricultural management 2020 IEEE
    14th International Conference on Semantic Computing (ICSC), IEEE (2020), pp. 337-340,
    10.1109/ICSC.2020.00067 View in ScopusGoogle Scholar Nkamla Penka et al., 2021
    J.B. Nkamla Penka, S. Mahmoudi, O. Debauche A new kappa architecture for iot data
    management in smart farming Proc. Comput. Sci. (2021) In press Google Scholar
    Oracle, 2021 Oracle, 2021. Mysql. url:  https://www.mysql.com. Google Scholar
    Persico et al., 2018 V. Persico, A. Pescapé, A. Picariello, G. Sperlí Benchmarking
    big data architectures for social networks data processing using public cloud
    platforms Future Gener. Comput. Syst., 89 (2018), pp. 98-109, 10.1016/j.future.2018.05.068
    View PDFView articleView in ScopusGoogle Scholar Pesonen et al., 2014 L.A. Pesonen,
    F.K.W. Teye, A.K. Ronkainen, M.O. Koistinen, J.J. Kaivosoja, P.F. Suomi, R.O.
    Linkolehto Cropinfra–an internet-based service infrastructure to support crop
    production in future farms Biosyst. Eng., 120 (2014), pp. 92-101, 10.1016/j.biosystemseng.2013.09.005
    View PDFView articleView in ScopusGoogle Scholar Petcu et al., 2013 D. Petcu,
    B. Di Martino, S. Venticinque, M. Rak, T. Máhr, G.E. Lopez, F. Brito, R. Cossu,
    M. Stopar, S. Šperka, et al. Experiences in building a mosaic of clouds J. Cloud
    Comput.: Adv., Syst. Appl., 2 (2013), pp. 1-22, 10.1186/2192-113X-2-12 View in
    ScopusGoogle Scholar Popescu et al., 2020 D. Popescu, F. Stoican, G. Stamatescu,
    L. Ichim, C. Dragana Advanced uav–wsn system for intelligent monitoring in precision
    agriculture Sensors, 20 (2020), p. 817, 10.3390/s20030817 View in ScopusGoogle
    Scholar Radoglou-Grammatikis et al., 2020 P. Radoglou-Grammatikis, P. Sarigiannidis,
    T. Lagkas, I. Moscholios A compilation of uav applications for precision agriculture
    Comput. Netw., 172 (2020), Article 107148, 10.1016/j.comnet.2020.107148 View PDFView
    articleView in ScopusGoogle Scholar Rajakaruna et al., 2018 Rajakaruna, A., Manzoor,
    A., Porambage, P., Liyanage, M., Ylianttila, M., Gurtov, A., 2018. Lightweight
    dew computing paradigm to manage heterogeneous wireless sensor networks with uavs.
    arXiv preprint arXiv:1811.04283. Google Scholar Ray, 2017 P.P. Ray Internet of
    things for smart agriculture: technologies, practices and future direction J.
    Ambient Intell. Smart Environ., 9 (2017), pp. 395-420, 10.3233/AIS-170440 View
    in ScopusGoogle Scholar Ren et al., 2017 J. Ren, H. Guo, C. Xu, Y. Zhang Serving
    at the edge: a scalable iot architecture based on transparent computing IEEE Network,
    31 (2017), pp. 96-105, 10.1109/MNET.2017.1700030 View in ScopusGoogle Scholar
    Rodriguez et al., 2018 M.A. Rodriguez, L. Cuenca, A. Ortiz Fiware open source
    standard platform in smart farming – a review L.M. Camarinha-Matos, H. Afsarmanesh,
    Y. Rezgui (Eds.), Collaborative Networks of Cognitive Systems, Springer International
    Publishing, Cham (2018), pp. 581-589, 10.1007/978-3-319-99127-6_50 View in ScopusGoogle
    Scholar Roman et al., 2018 R. Roman, J. Lopez, M. Mambo Mobile edge computing,
    fog et al.: a survey and analysis of security threats and challenges Future Gener.
    Comput. Syst., 78 (2018), pp. 680-698, 10.1016/j.future.2016.11.009 View PDFView
    articleView in ScopusGoogle Scholar Roukh et al., 2020 A. Roukh, F.N. Fote, S.A.
    Mahmoudi, S. Mahmoudi Big data processing architecture for smart farming Proc.
    Comput. Sci., 177 (2020), pp. 78-85, 10.1016/j.procs.2020.10.014 View PDFView
    articleView in ScopusGoogle Scholar Roukh et al., 2020 A. Roukh, F.N. Fote, S.A.
    Mahmoudi, S. Mahmoudi Wallesmart: cloud platform for smart farming, in 32nd International
    Conference on Scientific and Statistical Database Management (2020), pp. 1-4,
    10.1145/3400903.3401690 Google Scholar Ruan et al., 2019 J. Ruan, H. Jiang, C.
    Zhu, X. Hu, Y. Shi, T. Liu, W. Rao, F.T.S. Chan Agriculture iot: Emerging trends,
    cooperation networks, and outlook IEEE Wirel. Commun., 26 (2019), pp. 56-63, 10.1109/MWC.001.1900096
    View in ScopusGoogle Scholar Saiz-Rubio and Rovira-Más, 2020 V. Saiz-Rubio, F.
    Rovira-Más From smart farming towards agriculture 5.0: a review on crop data management
    Agronomy, 10 (2020), p. 207, 10.3390/agronomy10020207 View in ScopusGoogle Scholar
    Sallah et al., 2019 A.H.M. Sallah, B. Tychon, I. Piccard, A. Gobin, R. Van Hoolst,
    B. Djaby, J. Wellens Batch-processing of aquacrop plug-in for rainfed maize using
    satellite derived fractional vegetation cover data Agric. Water Manage., 217 (2019),
    pp. 346-355 Google Scholar Scott, 2015 Scott, J., 2015. Zeta architecture: Hexagon
    is the new circle. an enterprise architecture solution for scale and efficiency.
    url:  https://www.oreilly.com/ideas/zeta-architecture-hexagon-is-the-new-circle.
    Google Scholar Sethi and Sarangi, 2017 P. Sethi, S.R. Sarangi Internet of things:
    architectures, protocols, and applications J. Electr. Comput. Eng., 2017 (2017),
    10.1155/2017/9324035 Google Scholar Shafi et al., 2019 U. Shafi, R. Mumtaz, J.
    García-Nieto, S.A. Hassan, S.A.R. Zaidi, N. Iqbal Precision agriculture techniques
    and practices: From considerations to applications Sensors, 19 (2019), p. 3796,
    10.3390/s19173796 View in ScopusGoogle Scholar Sharofidinov et al., 2020 F. Sharofidinov,
    M.S.A. Muthanna, V.D. Pham, A. Khakimov, A. Muthanna, K. Samouylov Agriculture
    management based on lora edge computing system V.M. Vishnevskiy, K.E. Samouylov,
    D.V. Kozyrev (Eds.), Distributed Computer and Communication Networks, Springer
    International Publishing, Cham (2020), pp. 113-125 CrossRefView in ScopusGoogle
    Scholar Shi et al., 2016 W. Shi, J. Cao, Q. Zhang, Y. Li, L. Xu Edge computing:
    vision and challenges IEEE Internet Things J., 3 (2016), pp. 637-646, 10.1109/JIOT.2016.2579198
    View in ScopusGoogle Scholar Shi et al., 2019 X. Shi, X. An, Q. Zhao, H. Liu,
    L. Xia, X. Sun, Y. Guo State-of-the-art internet of things in protected agriculture
    Sensors, 19 (2019), p. 1833, 10.3390/s19081833 View in ScopusGoogle Scholar Siciliani,
    2015 Siciliani, T., 2015. Big data using lambda architecture. url: https://dzone.com/articles/lambda-architecture-big-data.
    Google Scholar Sigrimis et al., 2002 Sigrimis, N., Arvanitis, K., Ferentinos,
    K., 2002. Macqu: An open scada system for intelligent management and control of
    greenhouses, in: 2002 ASAE Annual Meeting, American Society of Agricultural and
    Biological Engineers. p. 1. doi:10.13031/2013.9618. Google Scholar Singh et al.,
    2019 K.N. Singh, R.K. Behera, J.K. Mantri Big data ecosystem: review on architectural
    evolution Emerging Technol. Data Mining Inform. Secur., 335–345 (2019), 10.1007/978-981-13-1498-8_30
    Google Scholar Sipos et al., 2013 Sipos, G., Turilli, M., Newhouse, S., Kacsuk,
    P., 2013. A european federated cloud: Innovative distributed computing solutions
    by egi, in: EGU General Assembly Conference Abstracts, pp. EGU2013–8690. Google
    Scholar Skala et al., 2015 K. Skala, D. Davidovic, E. Afgan, I. Sovic, Z. Sojat
    Scalable distributed computing hierarchy: cloud, fog and dew computing Open J.
    Cloud Comput. (OJCC), 2 (2015), pp. 16-24, 10.19210/1002.2.1.16 Google Scholar
    SQLite, 2021 SQLite, 2021. Sqlite. url: https://www.sqlite.org. Google Scholar
    Sun et al., 2017 L. Sun, Y. Li, R.A. Memon An open iot framework based on microservices
    architecture China Commun., 14 (2017), pp. 154-162, 10.1109/CC.2017.7868163 View
    in ScopusGoogle Scholar Talavera et al., 2017 J.M. Talavera, L.E. Tobón, J.A.
    Gómez, M.A. Culman, J.M. Aranda, D.T. Parra, L.A. Quiroz, A. Hoyos, L.E. Garreta
    Review of iot applications in agro-industrial and environmental fields Comput.
    Electron. Agricul., 142 (2017), pp. 283-297, 10.1016/j.compag.2017.09.015 View
    PDFView articleView in ScopusGoogle Scholar Taneja et al., 2020 M. Taneja, J.
    Byabazaire, N. Jalodia, A. Davy, C. Olariu, P. Malone Machine learning based fog
    computing assisted data-driven approach for early lameness detection in dairy
    cattle Comput. Electron. Agricul., 171 (2020), Article 105286, 10.1016/j.compag.2020.105286
    View PDFView articleView in ScopusGoogle Scholar Taneja et al., 2019 M. Taneja,
    N. Jalodia, J. Byabazaire, A. Davy, C. Olariu Smartherd management: a microservices-based
    fog computing–assisted iot platform towards data-driven smart dairy farming Software:
    Practice Experience, 49 (2019), pp. 1055-1078, 10.1002/spe.2704 View in ScopusGoogle
    Scholar Tang et al., 2021 Y. Tang, S. Dananjayan, C. Hou, Q. Guo, S. Luo, Y. He
    A survey on the 5g network and its impact on agriculture: challenges and opportunities
    Comput. Electron. Agricul., 180 (2021), Article 105895, 10.1016/j.compag.2020.105895
    View PDFView articleView in ScopusGoogle Scholar The PostgreSQL Global Development
    Group, 2021 The PostgreSQL Global Development Group, P., 2021. Postgresql: The
    world’s most advanced open source relational database. url:  https://www.postgresql.org/.
    Google Scholar Tran et al., 2017 T.X. Tran, A. Hajisami, P. Pandey, D. Pompili
    Collaborative mobile edge computing in 5g networks: new paradigms, scenarios,
    and challenges IEEE Commun. Mag., 55 (2017), pp. 54-61, 10.1109/MCOM.2017.1600863
    View in ScopusGoogle Scholar Triantafyllou et al., 2019 A. Triantafyllou, P. Sarigiannidis,
    S. Bibi Precision agriculture: a remote sensing monitoring system architecture
    Information, 10 (2019), p. 348, 10.3390/info10110348 View in ScopusGoogle Scholar
    Tzounis et al., 2017 A. Tzounis, N. Katsoulas, T. Bartzanas, C. Kittas Internet
    of things in agriculture, recent advances and future challenges Biosyst. Eng.,
    164 (2017), pp. 31-48, 10.1016/j.biosystemseng.2017.09.007 View PDFView articleView
    in ScopusGoogle Scholar Ubidots, 2021 Ubidots, 2021. Ubidots. url:  https://ubidots.com/.
    Google Scholar Uehara, 2017 Uehara, M., 2017. Mist computing: Linking cloudlet
    to fogs, in: International Conference on Computational Science/Intelligence &
    Applied Informatics, Springer. pp. 201–213. doi:10.1007/978-3-319-63618-4_15.
    Google Scholar Valecce et al., 2019 G. Valecce, S. Strazzella, L.A. Grieco On
    the interplay between 5g, mobile edge computing and robotics in smart agriculture
    scenarios M.R. Palattella, S. Scanzio, S. Coleri Ergen (Eds.), Ad-Hoc, Mobile,
    and Wireless Networks, Springer International Publishing, Cham (2019), pp. 549-559,
    10.1007/978-3-030-31831-4_38 View in ScopusGoogle Scholar Villa-Henriksen et al.,
    2020 A. Villa-Henriksen, G.T. Edwards, L.A. Pesonen, O. Green, C.A.G. Sørensen
    Internet of things in arable farming: implementation, applications, challenges
    and potential Biosyst. Eng., 191 (2020), pp. 60-84, 10.1016/j.biosystemseng.2019.12.013
    View PDFView articleView in ScopusGoogle Scholar Villari et al., 2017 Villari,
    M., Celesti, A., Fazio, M., 2017. Towards osmotic computing: Looking at basic
    principles and technologies, in: Conference on Complex, Intelligent, and Software
    Intensive Systems, Springer. pp. 906–915. doi:10.1007/978-3-319-61566-086. Google
    Scholar Villari et al., 2014 M. Villari, A. Celesti, M. Fazio, A. Puliafito Alljoyn
    lambda: an architecture for the management of smart environments in iot 2014 International
    Conference on Smart Computing Workshops, IEEE (2014), pp. 9-14, 10.1109/SMARTCOMP-W.2014.7046676
    View in ScopusGoogle Scholar Villari et al., 2016 M. Villari, M. Fazio, S. Dustdar,
    O. Rana, R. Ranjan Osmotic computing: a new paradigm for edge/cloud integration
    IEEE Cloud Comput., 3 (2016), pp. 76-83, 10.1109/MCC.2016.124 View in ScopusGoogle
    Scholar Wang et al., 2020 X. Wang, Y. Han, V.C. Leung, D. Niyato, X. Yan, X. Chen
    Edge AI: Convergence of Edge Computing and Artificial Intelligence Springer Nature
    (2020), 10.1007/978-981-15-6186-3 Google Scholar Wang, 2016 Y. Wang Definition
    and categorization of dew computing Open J. Cloud Comput. (OJCC), 3 (2016), pp.
    1-7, 10.19210/1002.3.1.1 View PDFView articleGoogle Scholar Wolfert et al., 2017
    S. Wolfert, L. Ge, C. Verdouw, M.J. Bogaardt Big data in smart farming–a review
    Agricult. Syst., 153 (2017), pp. 69-80, 10.1016/j.agsy.2017.01.023 View PDFView
    articleView in ScopusGoogle Scholar Yang, 2017 S. Yang Iot stream processing and
    analytics in the fog IEEE Commun. Mag., 55 (2017), pp. 21-27, 10.1109/MCOM.2017.1600840
    View in ScopusGoogle Scholar Zhai et al., 2020 Z. Zhai, J.F. Martínez, V. Beltran,
    N.L. Martínez Decision support systems for agriculture 4.0: Survey and challenges
    Comput. Electron. Agricul., 170 (2020), Article 105256, 10.1016/j.compag.2020.105256
    View PDFView articleView in ScopusGoogle Scholar Zhang, 2016 Zhang, Q., 2016.
    Precision agriculture technology for crop farming. Taylor & Francis. doi:10.1201/b19336.
    Google Scholar Zhou et al., 2017 Y. Zhou, D. Zhang, N. Xiong Post-cloud computing
    paradigms: a survey and comparison Tsinghua Sci. Technol., 22 (2017), pp. 714-732,
    10.23919/TST.2017.8195353 View in ScopusGoogle Scholar Cited by (28) The convergence
    of Digital Twins and Distributed Ledger Technologies: A systematic literature
    review and an architectural proposal 2024, Journal of Network and Computer Applications
    Show abstract Integrated design framework for smart agriculture: Bridging the
    gap between digitalization and sustainability 2024, Journal of Cleaner Production
    Show abstract Spatio-temporal semantic data management systems for IoT in agriculture
    5.0: Challenges and future directions 2024, Internet of Things (Netherlands) Show
    abstract Internet of agriculture: Analyzing and predicting tractor ride comfort
    through supervised machine learning 2023, Engineering Applications of Artificial
    Intelligence Show abstract A real-time decision-making tool based on dynamic thresholds
    for Phthorimaea absoluta management in greenhouse tomato 2023, Crop Protection
    Show abstract Information management infrastructures for multipurpose unmanned
    aerial systems operations 2023, Unmanned Aerial Systems in Agriculture: Eyes Above
    Fields Show abstract View all citing articles on Scopus Peer review under responsibility
    of King Saud University. 1 https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/
    2 https://www.statista.com/statistics/499431/global-ip-data-traffic-forecast/
    3 https://www.pix4d.com/ 4 http://prospera.ag/ © 2021 The Authors. Published by
    Elsevier B.V. on behalf of King Saud University. Recommended articles Multi-user
    routing algorithm for indoor spaces – Adapted for social distancing Journal of
    King Saud University - Computer and Information Sciences, Volume 34, Issue 9,
    2022, pp. 7045-7058 Abdullah Alamri, …, Sultan Alamri View PDF Embedding and generalization
    of formula with context in the retrieval of mathematical information Journal of
    King Saud University - Computer and Information Sciences, Volume 34, Issue 9,
    2022, pp. 6624-6634 Pankaj Dadure, …, Sivaji Bandyopadhyay View PDF mySense: A
    comprehensive data management environment to improve precision agriculture practices
    Computers and Electronics in Agriculture, Volume 162, 2019, pp. 882-894 Raul Morais,
    …, Emanuel Peres View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 21 Captures Readers: 194 Social Media Shares, Likes & Comments: 60 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: 'Maǧalaẗ ǧamʼaẗ al-malīk Saud : ùlm al-ḥasib wa al-maʼlumat'
  limitations:
  - Does not describe the implementation of each architecture.
  - Does not describe how these architectures are used in real life.
  pdf_link: null
  publication_year: 2022
  relevance_evaluation: Highly relevant - The provided excerpt directly addresses
    the comparison of the Lambda and Kappa architectures and provides specific pros
    and cons of each.
  relevance_score: 0.85
  relevance_score1: 0
  relevance_score2: 0
  title: 'Cloud and distributed architectures for data management in agriculture 4.0
    : Review and future trends'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.36227/techrxiv.24045951.v1
  analysis: '>'
  apa_citation: 'Agiwal, M., Roy, A., & Saxena, N. (2016). Next generation 5G wireless
    networks: A comprehensive survey. IEEE Communications Surveys & Tutorials, 18(3),
    1617-1655.'
  authors:
  - Nwamaka U. Okafor
  citation_count: 0
  data_sources: Irrigation management data
  explanation: This paper investigates data compression, aggregation, and filtering
    techniques for reducing bandwidth requirements and improving transmission efficiency
    in automated irrigation systems. It provides a comprehensive analysis of these
    techniques, particularly focusing on their effectiveness in optimizing data transmission
    for remote monitoring and control of irrigation systems.
  extract_1: '"We analyze techniques for optimizing the transmission of irrigation
    management data using techniques to reduce the transmitted volume of data, including
    lossy compression, aggregation, and filtering."'
  extract_2: '"By dynamically optimizing the transmission of irrigation management
    data, significant savings can be achieved, especially when wireless and long-distance
    transmission are used."'
  full_citation: '>'
  full_text: '>

    LOG IN SIGN UP TechRxiv 9,151,197 views 4,235,640 downloads About TechRxiv TechRxiv
    (pronounced "tech archive") is an open, moderated preprint server for unpublished
    research in the areas of engineering, computer science, and related technology.
    https://www.techrxiv.org/ Public Documents 9159 Members by author by title by
    keyword Filter All Sort by Most Recent BIOENGINEERING 867 COMMUNICATION, NETWORKING
    AND BROADCAST TECHNOLOGIES 2280 COMPONENTS, CIRCUITS, DEVICES AND SYSTEMS 1066
    COMPUTING AND PROCESSING 3366 ENGINEERED MATERIALS, DIELECTRICS AND PLASMAS 248
    ENGINEERING PROFESSION 543 FIELDS, WAVES AND ELECTROMAGNETICS 850 GENERAL TOPICS
    FOR ENGINEERS 647 GEOSCIENCE 268 NUCLEAR ENGINEERING 70 PHOTONICS AND ELECTROOPTICS
    344 POWER, ENERGY AND INDUSTRY APPLICATIONS 1199 ROBOTICS AND CONTROL SYSTEMS
    879 TRANSPORTATION 386 AEROSPACE 265 SIGNAL PROCESSING AND ANALYSIS 1947 Disproof
    of Hodge Conjecture by Graph Theory Jihyeon Yoon April 02, 2024 Hodge conjecture
    is turned out to be false in extension of graph theory based on its algebraic
    attribute. Hash3D: Training-free Acceleration for 3D Generation Xingyi Yang and
    1 more April 02, 2024 The evolution of 3D generative modeling has been notably
    propelled by the adoption of 2D diffusion models. Despite this progress, the cumbersome
    optimization process per se presents a critical hurdle to efficiency. In this
    paper, we introduce Hash3D, a universal acceleration for 3D generation without
    model training. Central to Hash3D is the insight that feature-map redundancy is
    prevalent in images rendered from camera positions and diffusion time-steps in
    close proximity. By effectively hashing and reusing these feature maps across
    neighboring timesteps and camera angles, Hash3D substantially prevents redundant
    calculations, thus accelerating the diffusion model''s inference in 3D generation
    tasks. We achieve this through an adaptive grid-based hashing. Surprisingly, this
    feature-sharing mechanism not only speed up the generation but also enhances the
    smoothness and view consistency of the synthesized 3D objects. Our experiments
    covering 5 textto-3D and 3 image-to-3D models, demonstrate Hash3D''s versatility
    to speed up optimization, enhancing efficiency by 1.3 ∼ 4×. Additionally, Hash3D''s
    integration with 3D Gaussian splatting largely speeds up 3D model creation, reducing
    text-to-3D processing to about 10 minutes and image-to-3D conversion to roughly
    30 seconds. The code is provided in https://github.com/Adamdad/hash3D. Area and
    Power Efficient Implementation of Configurable Ring Oscillator PUF Enas Abulibdeh
    and 4 more April 02, 2024 Physically Unclonable Function (PUF) is an emerging
    hardware security primitive that provides a promising solution for lightweight
    security. PUFs can be used to generate a secret key that depends on the random
    manufacturing process variation of the device for lightweight authentication and
    device identification. This work proposes an optimized version of the Configurable
    Ring Oscillator (CRO) PUF that aims to reduce power consumption and area overhead.
    The proposed design eliminates the duplication of ROs, reduces the switching activity,
    and introduces the inter-stage delay as an additional source of randomness. The
    proposed PUF has been implemented in 22nm FDSOI technology using the Synopsys
    tools. A comprehensive security analysis has been acquired utilizing Challenge-Response
    Pairs collected from 8 chips. Results show an average of 49.42%, 38.25%, 9.95%,
    and 45.5% for uniformity, diffuseness, reliability, and uniqueness, respectively.
    Compared with the state-of-the-art, the proposed design achieves an area and power
    reduction of 75% and 65.1%, respectively. With the proposed PUF delivering 10
    32 CRPs, it is classified as a strong PUF. Additionally, the proposed design passes
    NIST tests and achieves an average prediction accuracy of 67.1% of machine learning
    modeling. A Hero Or A Killer? Overview Of Opportunities, Challenges, And Implications
    Of Text-T... Mijat Kustudic and 1 more April 02, 2024 SORA is a text-to-video
    model that can create videos based on simple user prompts. The model promises
    to revolutionize the way content is created. When SORA is released to the general
    public, it may transform a wide array of industries but also pose significant
    challenges and risks. This research aims to provide a comprehensive understanding
    of SORA''s opportunities, challenges, and implications. It explores its potential
    applications in film-making, education, gaming, advertising, accessibility, healthcare,
    and social media content creation. Additionally, it delves into its potential
    challenges and risks, including misinformation, privacy concerns, bias, regulatory
    complexities, and dependence on technology. This research provides important recommendations
    to promote responsible deployment of the AI model. Advancements and Challenges
    in Robot Grasping and Manipulation for Aspiring Researche... Claudio Zito April
    02, 2024 Robot grasping and manipulation represent pivotal aspects of robotics
    research with profound implications for the future of autonomous systems. This
    report delves into the intricacies of designing robotic hands, the hurdles in
    creating robust manipulation actions, and the advancements in the field that poised
    to catalyze a new era of autonomy. Drawing inspiration from science fiction''s
    portrayal of robotics, we bridge the conceptual gap between fiction and ongoing
    real-world technical research, aiming to provide a comprehensive overview for
    students interested in robotics. Comprehensive 3GPP-Compatible Channel Model for
    FR2-2 Short-Range Communications for... Yusuke Koda and 3 more April 02, 2024
    This paper proposes a comprehensive 3GPPcnaompatible channel model with statistical
    enhancement tailored for indoor short-range device-to-device (D2D) communications
    operating in the frequency range (FR) of 52.6-71.0 GHz termed FR2-2. Regardless
    of the existence of various channel models at this band for indoor communications,
    there will be a need for developing a channel model compatible with and understandable
    from the current 3GPP stochastic channel model (SCM) to facilitate the discussion
    in the 3GPP for developing such FR2-2 short-range D2D communication framework
    based on the fifthgeneration (5G) new radio (NR). Indeed, such a futuristic vision
    can be foreseen from the fact that the 3GPP is discussing the evolution of sidelink,
    referred to as a D2D communication framework; however, there are no 3GPP SCM-compatible
    channel models applicable to FR2-2 short-range D2D communications. To fill this
    void, we propose the channel model coined 3GPPCompFR2-InS that allows us to generate
    channel impulse responses (CIR) for computer simulations, which is suitable for
    various indoor short-range D2D communication scenarios while retailing the similarity
    in terms of the implementation policy of the 3GPP SCM. 3GPPCompFR2-InS is verified
    based on the real-world measurements at the 60 GHz band from the viewpoint of
    both the validity of the channel model parameters and that of the statistical
    behavior of the generated CIRs. Effective media models for wave propagation in
    prestressed fractured rocks with nonli... Li-Yun Fu and 3 more April 02, 2024
    Stress-induced progressive deformations in fractured rocks with increasing effective
    pressure generally undergo nonlinear elastic (due to the closure of compliant
    pores), hyperelastic (due to residual stress), and inelastic (due to fracture
    growth) deformations prior to mechanical failure. Wave propagation in such rocks
    involves the complex interaction of fracture-and stress-induced changes in both
    velocity and anisotropy. With attention to nonlinear elastic and hyperelastic
    deformations, we incorporate acoustoelasticity into the traditional Hudson/Cheng
    models to describe the coupling of fracture-induced and stress-induced anisotropies.
    The resulting acoustoelastic Hudson model (AHM) is valid for the crack density
    smaller than 0.1 whereas the Padé AHM could handle higher crack densities. We
    extend the Padé AHM to consider the stress-induced crack closure with nonlinear
    elastic deformations by incorporating the dual-porosity model. These models approach
    the coupled anisotropies with different accuracies and computational complexities.
    The plane-wave analyses and effective-moduli calculations of stressed fractured
    rocks with varying crack densities determine the accuracy of these models under
    the isotropic (confining) and anisotropic (uniaxial and pure shear) prestress
    conditions. The relevant Thomsen parameters are applied to experimental data to
    validate the applicability. Finite-difference simulations are implemented to identify
    the contribution of different anisotropies through the variety of wavefronts,
    depending on fracture orientation, crack density, prestress mode and magnitude,
    and loading direction. Particular attention is paid to the anisotropic prestress,
    where the coupled anisotropies are constructive or destructive interference, strongly
    related to the relativity between fracture strike and loading direction. The stress-induced
    crack closure will reduce the fracture anisotropy so that the stress-induced background
    anisotropy dominates the shape of wavefronts with increasing prestress. Security
    and Reliability Performance of a Cooperative Network with Self-Sustaining No...
    Amit Patel and 1 more April 02, 2024 In this paper, we analyze the secrecy performance
    of a two-hop cooperative network consisting solely of energy-harvesting self-sustaining
    nodes drawing energy from a multi-antenna power beacon (PB). Performance of such
    networks is quite different from that with powered nodes. We consider optimal
    combining of the direct and relayed signals at the multi-antenna destination as
    well as the multi-antenna eavesdropper. Since availability of channel state information
    at the source is impractical in such networks, we assume fixed-rate signaling.
    To implement incremental signaling, we utilize feedback bits from the destination.
    Assuming practical nonlinear EH, exact and approximate expressions are derived
    for the secrecy outage probability of the selective decode-and-forward (SDF) and
    the incremental decode-and-forward (IDF) relaying schemes. It is demonstrated
    that IDF has much better secrecy performance than SDF just as with powered nodes.
    However, unlike with powered nodes, the secrecy performance is a convex function
    of the transmit power of PB. We propose a novel power back-off scheme to improve
    secrecy under different network operating conditions. The security-reliability
    trade-off (SRT) is analyzed to highlight the trade-off between outage and secrecy
    performance with the power back-off scheme. Simulation results validate the analytical
    expressions. Advanced Cardiovascular Health in a Quantum AI-driven Healthcare
    Framework Sarvapriya M Tripathi and 2 more April 02, 2024 With the advent of Healthcare
    4.0, there is increased interest from researchers the world over in the application
    of modern, cutting-edge Artificial Intelligence (AI) and Quantum Artificial Intelligence
    (QAI) algorithms in solving healthcare challenges. The era of Quantum Computing
    (QC) promises to bring significant advancements in several areas of healthcare
    such that it may be sensible to give this hybrid Quantum/Classical paradigm its
    own name-Healthcare4Q. The potential of QC will extend the reach of Healthcare4Q
    with the help of diverse technologies such as quantum-enabled wearables, quantum-secure
    transfer and storage of data, and quantum computing at edge, fog, and cloud. All
    of these technologies promise to catapult Healthcare4Q to become the most capable
    healthcare framework in the advancement of medical innovations and improvement
    of patient care. An integral part of a person''s health lies in cardiovascular
    health, and thus prioritizing and optimizing cardiovascular health remains vital
    to the broader goals of public health and healthcare sustainability. In this study,
    under the paradigm of Healthcare4Q, we propose a framework called the Quantum
    AIdriven Heart Health Framework (QAIHHF) that can provide advanced predictive
    intelligence to healthcare providers by utilizing historical and real-time data
    and processing capabilities proposed in Healthcare4Q. We show that when applied
    to various diagnostics and health indicators such as ECG data, the Quantum AI
    provides accuracy at a level equal to or higher as compared to the classical methods
    thus proving itself to be the critical component that will herald the era of Healthcare4Q.
    QCDC-DR-GA: Optimizing Container Loading and Unloading through Dual-Cycling and
    Docky... Md. Mahfuzur Rahman and 4 more April 01, 2024 This paper addresses the
    optimization of container unloading and loading operations at ports, integrating
    quaycrane dual-cycling (QCDC) with dockyard rehandle minimization. We present
    a unified model encompassing both operations: ship container unloading and loading
    by quay crane, and the other is reducing dockyard rehandles while loading the
    ship. We recognize that optimizing one aspect in isolation can lead to suboptimal
    outcomes due to interdependencies. Specifically, optimizing unloading sequences
    for minimal operation time may inadvertently increase dockyard rehandles during
    loading and vice versa. To address this NP-hard problem, we propose a hybrid genetic
    algorithm (GA) QCDC-DR-GA comprising 1dimensional and 2-dimensional GA components.
    Our model, QCDC-DR-GA, consistently outperforms four state-of-the-art methods
    in maximizing dual cycles and minimizing dockyard rehandles. Compared to those
    methods, it reduced 15-20% of total operation time for large vessels. Results
    underscore the inefficiency of separately optimizing QCDC and dockyard rehandles.
    Fragmented approaches, such as QCDC Scheduling Optimized by bi-level GA and GA-ILSRS
    (Scenario 2), show limited improvement compared to QCDC-DR-GA. As in GA-ILSRS
    (Scenario 1), neglecting dual-cycle optimization leads to inferior performance
    than our proposed QCDC-DR-GA. A Two-Stage Passive Matrix Addressing Method for
    Large-Scale Beam-Steering Arrays PengYuan Wang April 01, 2024 This letter proposes
    a passive matrix addressing method to dramatically reduce the number of controlling
    (biasing) lines for large-scale beam-steering arrays. Phase shifting of each radiation
    element is accomplished in two stages by the row and column biasing lines located
    at two stacked layers, which offer a pair of orthogonal wave vectors. For an antenna
    array with M rows and N columns, conventional direct addressing designs need M
    * N biasing lines, while the proposed method needs only M+N biasing lines to complete
    the full-space beam-steering. The proposed method simplifies the routing of control
    lines and the design of driving circuits. Both theoretical and numerical analyses
    are provided to validate this method. Efficient Twiddle Factor Generation for
    Post Quantum Cryptography FALCON-based Number... Ghada Alsuhli and 4 more April
    01, 2024 Area and power-efficient hardware implementations are crucial for the
    widespread adoption of post-quantum cryptography (PQC) algorithms like FALCON.
    One of the main operations in FALCON is the Number Theoretic Transform (NTT),
    which needs to be performed with many prime numbers. Having one set of twiddle
    factors (TFs) for each prime makes storing all of these TFs impractical. In this
    paper, we propose an architecture for generating TFs on the fly for FALCON-oriented
    NTT, designed for area and power efficiency. Our approach dynamically generates
    TFs during NTT computations, significantly reducing on-chip memory requirements.
    The ASIC implementation results demonstrate significant improvements, with the
    proposed design reducing on-chip memory requirements by 99%, occupying 95% less
    area, and consuming 87.4% less power compared to the traditional ROM-based implementation.
    Furthermore, our design achieved a much higher maximum clock frequency, indicating
    superior performance in accessing twiddle factors. These findings highlight the
    potential of our proposed architecture for efficient hardware implementations
    of FALCON-based cryptographic systems. Enhancing Renewable Energy-Grid Integration
    by Optimally Placed FACTS Devices: The Ni... Nnaemeka Sunday Ugwuanyi and 5 more
    April 01, 2024 The global shift towards renewable energy (RE) sources, driven
    by climate change and fossil fuel depletion, encounters challenges in integrating
    intermittent sources like wind and solar power into existing grids. Developing
    countries, such as Nigeria, with weak grids, face significant limitations on RE
    penetration. This study focuses on enhancing RE grid integration in Nigeria by
    strategically deploying Flexible Alternating Current Transmission System (FACTS)
    devices. Results obtained from the Nigerian grid indicate that FACTS devices,
    particularly STATCOMs, can extend the penetration limit by 40%, enabling an additional
    152 MW of wind energy to be integrated without jeopardizing system stability.
    Improved voltage profiles and enhanced stability highlight the effectiveness of
    FACTS devices in facilitating RE integration into weak grids. Thus, developing
    grids can accommodate more renewable energy without extensive reconfiguration
    of the power system architecture. Doppler Shift Distribution in Satellite Constellations
    Akram Al-Hourani April 01, 2024 Doppler shift has significant implications in
    Low Earth Orbit (LEO) constellations due to the rapid relative movement of satellites.
    This paper presents a novel approach based on stochastic geometry to capture the
    statistical distribution of Doppler shift in modern mega satellite constellations.
    We derive a simplified expression for both the Doppler shift s-curve and its maximum
    value, highlighting the dependency of Doppler shifts on the zenith angle of the
    closest approach during a satellite pass. Additionally, we present a stochastic
    model for the distribution of these zenith angles within the random constellation
    model. Furthermore, the statistical distribution of the Doppler bound is analytically
    formulated and validated through extensive Monte Carlo simulations of two major
    satellite constellations currently in orbit. Effect of Presenting Stiffness of
    Robot Hand to Human on Human-Robot Handovers Junya Yamamoto and 2 more April 01,
    2024 In the present study, we focus on the object handover task as a major example
    of collaborative work between a human and a robot. To achieve a smooth handover
    between two different agents, their mutual communication is indispensable for
    understanding the other’s intentions. However, previous research has not dealt
    with a moment during handover in which a robot takes the object from a human grasp
    or in which a robot hands the object to the human. It should be noted that the
    performance during those phases is crucial to the success or failure of the tasks
    because slight changes in the kinematics of the relationship between hands or
    fingers and object result in significant changes in grasping status: the human
    may forcibly pull out the object while the robot is grasping it or drop the object.
    Therefore, this study aims to realize a smooth handover between a human and a
    robot, focusing on the moment of object handover. To this end, this paper proposes
    to present the stiffness of the robot hand to the human. We conducted the subject
    experiments to investigate the effect of this method on humans in the human-robot
    interaction. Experimental results show that this presentation method enables the
    worker to recognize the stiffness of the robot, which is difficult to recognize
    visually, thereby reducing the workload and allowing the worker to respond seamlessly
    to changes in the robot’s stiffness. VABAM: Variational Autoencoder for Amplitude-based
    Biosignal Augmentation within Morp... Junetae Kim and 2 more April 01, 2024 Pulsatile
    physiological signals, characterized by rhythmic fluctuations, are vital for assessing
    health conditions and are widely used in wellness devices and medical equipment.
    Despite their significance, models addressing domain-specific unmet needs and
    considerations have not been developed as much as in other fields. Therefore,
    building on the foundation of variational autoencoders, we introduce VABAM, a
    novel model for the amplitude-based synthesis of pulsatile physiological signals.
    The uniqueness of VABAM lies in its ability to maintain the morphological identity
    of signals throughout the synthesis process, achieved by integrating pass filter
    effects within the variational autoencoder architecture. To assess the effectiveness
    of the model, we developed three novel metrics based on joint mutual information.
    These metrics were aimed at evaluating the disentanglement of latent spaces, influence
    of ancillary information on signal morphologies, and controllability of amplitude-based
    synthesis within morphological identities. Comparative analyses demonstrated that
    VABAM and its variants were notably effective at preserving morphological integrity,
    highlighting their potential to minimize morphological distortions in physiological
    signal processing and their compatibility with artificial intelligence models
    employing frequency and amplitude features. Additionally, the proposed metrics,
    compatible with probabilistic models, were empirically proven to capture the characteristics
    of various models from multiple perspectives. In-and-Out Weight Box: A novel approach
    for better network compression and feature se... DaeYoung Kim April 01, 2024 Under
    the commonalities found in the goals of two areas, neural network compression
    and feature selection for dimension reduction, this research focused on finding
    a new method to address both issues: a method that can lead to easier feature
    selection, and an enhancement in the capacity of information flow control of neural
    network compression techniques, especially clustering based compression. Specifically,
    this research focused on creating a novel and effective framework to transform
    the weight matrix between the input layer and the first hidden layer in neural
    networks to be optimal. In other words, a method that can make the weight matrix''s
    structure itself optimal for information extraction. By proposing a simple, yet
    powerful weight clipping + GMM based method called an In-and-Out Weight Box that
    can intrinsically act similar to filtering while increasing the possibility of
    getting better results in compression, the main aim of research was found to be
    satisfied. Using Glioma Grading data from the UCI Repository for checking performance
    of the In-and-Out Weight box in fitting neural networks, it was found that significantly
    better compression results can be achieved in terms of weight sharing via clustering.
    This research also suggests a new feature selection method based on the In-and-Out
    Weight box constraint called IOW-FI, which can lead to solving limitations or
    problems of filtering techniques such as setting the number of components to be
    selected as efficient features or considering joint distributions of feature space.
    Is Complexity an Illusion? Michael Timothy Bennett April 02, 2024 Simplicity is
    held by many to be the key to general intelligence. Simpler models tend to “generalise”,
    identifying the cause or generator of data with greater sample efficiency. The
    implications of the correlation between simplicity and generalisation extend far
    beyond computer science, addressing questions of physics and even biology. Yet
    simplicity is a property of form, while generalisation is of function. In interactive
    settings, any correlation between the two depends on interpretation. In theory
    there could be no correlation and yet in practice, there is. Previous theoretical
    work showed generalisation to be a consequence of “weak” constraints implied by
    function, not form. Experiments demonstrated choosing weak constraints over simple
    forms yielded a 110 − 500% improvement in generalisation rate. Here we show that
    if one does not presuppose an abstraction layer, then all forms have equal complexity.
    However, in the context of a spatially and temporally extended abstraction layer,
    efficiency demands weak constraints take simple forms, and simplicity becomes
    correlated with generalisation. Simplicity has no causal influence on generalisation,
    but appears to due to confounding. ← Previous 1 2 3 4 5 6 7 8 9 … 508 509 Next
    → TechRxiv | Powered by Authorea.com Home About Submission Guidelines FAQs Terms
    of Use Privacy Policy Contact Us'
  inline_citation: (Agiwal, Roy, & Saxena, 2016)
  journal: ''
  key_findings: The paper identifies lossy compression, aggregation, and filtering
    as effective techniques for reducing data volume during transmission and presents
    a dynamic optimization approach for optimizing the transmission process.
  limitations: null
  main_objective: To analyze data compression, aggregation, and filtering techniques
    for optimizing data transmission in automated irrigation systems.
  pdf_link: https://www.techrxiv.org/articles/preprint/Advances_and_Challenges_in_IoT_Sensors_Data_Handling_and_Processing_in_Environmental_Monitoring_Systems/24045951/1/files/42163443.pdf
  publication_year: 2023
  relevance_evaluation: This paper is highly relevant to the point of investigating
    data compression, aggregation, and filtering techniques for improving transmission
    efficiency in automated irrigation systems. It provides a comprehensive analysis
    of these techniques and their effectiveness in optimizing data transmission, directly
    contributing to addressing the key issues of data management and transmission
    in IoT-based irrigation systems. The paper also discusses the challenges and potential
    solutions associated with real-time data transmission, making it highly valuable
    for the literature review.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Lossy compression, aggregation, filtering
  title: Advances and Challenges in IoT Sensors Data Handling and Processing in Environmental
    Monitoring Systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
