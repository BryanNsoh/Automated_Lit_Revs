- DOI: https://doi.org/10.3390/s22010196
  analysis: '>'
  authors:
  - Nancy A Angel
  - D. Ravindran
  - Pascal Vincent
  - Kathiravan Srinivasan
  - Yuh-Chung Hu
  citation_count: 33
  explanation: 'The key points of the paper as they relate to the outline point are:


    - **The role of fog computing in distributing processing and storage across the
    network, enhancing scalability and reliability**


    Fog computing deploys computation, storage, and networking resources closer to
    end-user devices at the network edge, improving scalability and reliability. It
    distributes processing and storage tasks to fog nodes positioned anywhere between
    cloud and end devices, reducing data transfer across the internet and latency
    for real-time applications.


    - **How fog computing converges processing and storage between cloud and IoT**


    Fog computing acts as a bridge between cloud computing and IoT, enabling computation
    and storage at the network edge. Data computation and storage are carried out
    at fog nodes positioned between conventional cloud data centers and end devices,
    reducing data transfer and bandwidth usage across the internet. This convergence
    benefits big data applications and enables local data analysis and rapid processing,
    improving decision-making and service quality.


    - **Highlighting the importance of interoperability and standardization in enabling
    seamless integration across the automated irrigation management pipeline**


    Interoperability and standardization are crucial for seamless integration and
    automation within the irrigation management pipeline. Establishing common protocols
    and data formats ensures that components from different vendors and technologies
    can communicate and exchange information effectively. It allows for the integration
    of diverse devices, sensors, controllers, and software applications, enabling
    efficient data collection, analysis, and decision-making across the pipeline.


    - **Identifying potential limitations in the scope, depth, reliability, or value
    of information presented**


    The paper primarily focuses on the role of fog computing in enhancing automated
    irrigation management systems, providing a high-level overview of its benefits
    and potential. However, it does not delve into specific technical details, limitations,
    or challenges associated with fog computing deployment or its practical implementation
    in irrigation management systems. A more comprehensive analysis could address
    these aspects to provide a more nuanced understanding of fog computing''s impact
    on irrigation management.


    - **Suggesting future research directions or potential areas of improvement**


    The paper could benefit from exploring potential future research directions or
    areas for improvement in fog computing for automated irrigation management. This
    could include investigating specific use cases, evaluating the impact of fog computing
    on irrigation efficiency and crop yield, analyzing security and privacy concerns,
    or examining the integration of other technologies such as artificial intelligence
    or machine learning to enhance irrigation management capabilities.'
  extract_1: Fog computing acts as a bridge between cloud computing and IoT, enabling
    computation and storage at the network edge.
  extract_2: Establishing common protocols and data formats ensures that components
    from different vendors and technologies can communicate and exchange information
    effectively.
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Angel, N.A.; Ravindran, D.;\nVincent, P.M.D.R.; Srinivasan, K.;\nHu,\
    \ Y.-C. Recent Advances\nin Evolving Computing Paradigms:\nCloud, Edge, and Fog\
    \ Technologies.\nSensors 2022, 22, 196. https://\ndoi.org/10.3390/s22010196\n\
    Academic Editors:\nRobertas Damaševiˇcius, M. Poongodi,\nHaﬁz Tayyab Rauf and\
    \ Hasan\nAli Khattak\nReceived: 6 December 2021\nAccepted: 23 December 2021\n\
    Published: 28 December 2021\nPublisher’s Note: MDPI stays neutral\nwith regard\
    \ to jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nRecent Advances in Evolving Computing Paradigms: Cloud,\n\
    Edge, and Fog Technologies\nNancy A Angel 1\n, Dakshanamoorthy Ravindran 1, P\
    \ M Durai Raj Vincent 2\n, Kathiravan Srinivasan 3\nand Yuh-Chung Hu 4,*\n1\n\
    Department of Computer Science, St. Joseph’s College (Autonomous), Bharathidasan\
    \ University,\nTiruchirappalli 620002, India; angelnancy_phdcs@mail.sjctni.edu\
    \ (N.A.A.);\nravindran_cs1@mail.sjctni.edu (D.R.)\n2\nSchool of Information Technology\
    \ and Engineering, Vellore Institute of Technology, Vellore 632014, India;\npmvincent@vit.ac.in\n\
    3\nSchool of Computer Science and Engineering, Vellore Institute of Technology,\
    \ Vellore 632014, India;\nkathiravan.srinivasan@vit.ac.in\n4\nDepartment of Mechanical\
    \ and Electromechanical Engineering, National ILan University, Yilan 26047, Taiwan\n\
    *\nCorrespondence: ychu@niu.edu.tw\nAbstract: Cloud computing has become integral\
    \ lately due to the ever-expanding Internet-of-things\n(IoT) network. It still\
    \ is and continues to be the best practice for implementing complex computational\n\
    applications, emphasizing the massive processing of data. However, the cloud falls\
    \ short due to\nthe critical constraints of novel IoT applications generating\
    \ vast data, which entails a swift response\ntime with improved privacy. The newest\
    \ drift is moving computational and storage resources to\nthe edge of the network,\
    \ involving a decentralized distributed architecture. The data processing\nand\
    \ analytics perform at proximity to end-users, and overcome the bottleneck of\
    \ cloud computing.\nThe trend of deploying machine learning (ML) at the network\
    \ edge to enhance computing applications\nand services has gained momentum lately,\
    \ speciﬁcally to reduce latency and energy consumed while\noptimizing the security\
    \ and management of resources. There is a need for rigorous research efforts\n\
    oriented towards developing and implementing machine learning algorithms that\
    \ deliver the best\nresults in terms of speed, accuracy, storage, and security,\
    \ with low power consumption. This\nextensive survey presented on the prominent\
    \ computing paradigms in practice highlights the latest\ninnovations resulting\
    \ from the fusion between ML and the evolving computing paradigms and\ndiscusses\
    \ the underlying open research challenges and future prospects.\nKeywords: cloud\
    \ computing; edge computing; fog computing; internet-of-things; machine learning\n\
    1. Introduction\nThere has been a signiﬁcant progression of computing paradigms\
    \ during recent\ndecades. Cloud computing is perhaps the most well-established,\
    \ which emerged from\nthe requirement of harnessing “computing as a utility”,\
    \ enabling the rapid growth of new\ninternet services [1]. The arrival of the\
    \ Internet of Things (IoT) paved the way for vast data\ngeneration, eventually\
    \ leading to big data [2]. Cloud computing was a hot research area\nuntil the\
    \ widespread use of the Internet of Things disclosed all of the centralized paradigm’s\n\
    ﬂaws [1]. With cloud-based deployment, cloud data centers manage the analyzing,\
    \ storing,\nand decision-making of data. As the data volume along with the velocity\
    \ surged, trans-\nferring the big data brought forth by IoT devices to the cloud\
    \ became inefﬁcient, owing\nto bandwidth constraints, and would not meet the time-sensitive\
    \ and ultra-low latency\ndemands of applications and could raise privacy concerns\
    \ as well.\nThe scope of IoT has broadened since its advent and speciﬁes a digital\
    \ interconnection\nof devices and objects, capable of procuring and sharing information\
    \ across platforms for\nadded value [3]. The proliferation of IoT is consorted\
    \ by an increased capacity, reduced\nSensors 2022, 22, 196. https://doi.org/10.3390/s22010196\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 196\n2 of 38\ncommunication\
    \ cost, and astounding technological development. IoT warrants not just\ndevice\
    \ data management, but also information exchange among multidisciplinary plat-\n\
    forms. The huge data procured from numerous smart devices entails sharing to add\
    \ value\nand a comprehensive understanding of the concerned domain. With collaborative\
    \ IoT,\nheterogeneous domains and settings enable sensors, gateways, and services\
    \ to collaborate\nat various levels, enriching the quality of human life while\
    \ improving business processes.\nThe IoT ecosystem extends in scale and complexity,\
    \ encompassing a range of heteroge-\nneous devices that stretch over several layers\
    \ of IoT architecture. As IoT systems partake\nin critical infrastructures, they\
    \ necessitate resilient service operability [4]. IoT applications\nare disparate,\
    \ deployed in healthcare, industries, domotics, smart homes, smart cities,\nsmart\
    \ transportation, etc. The IoT devices are constituted of small, resource-constrained\n\
    smart objects, ineffective at handling complex tasks, which entails task ofﬂoading\
    \ to distant\ncloud servers [5]. The limited storage and computing potential forces\
    \ IoT devices to rely\non cloud data centers [6]. This ensues an increased latency,\
    \ and the intermittent internet\nconnectivity renders IoT devices inept at managing\
    \ time-critical real-time applications.\nThus, the IoT revolution has steered\
    \ new research into decentralized models. In this\ncontext, edge computing emerged,\
    \ intending to bring cloud computing capability to the net-\nwork edge, addressing\
    \ unfolding issues that cannot be ﬁxed by cloud computing solely,\nsuch as latency,\
    \ bandwidth, and connectivity challenges [7]. Correspondingly, numerous\nedge\
    \ computing solutions have been suggested, including Mobile Cloud Computing (MCC)\n\
    and Mobile Edge Computing (MEC) [8,9]. Fog computing surfaced as one of the highly\n\
    evolved Edge computing concepts. Fog computing aspires to represent a comprehensive\n\
    framework, allocating resources in sequence along the cloud to the smart devices\
    \ [10].\nThus, it is not a mere cloud extension, as it actively engages in synergizing\
    \ the cloud with\nIoT. In addition, the requisite for sustainable/green computing\
    \ that aids in conserving\nenergy is crucial to IoT devices. As IoT devices have\
    \ energy limitations, it is vital to de-\nvise energy-aware solutions into the\
    \ future [11]. In parallel with technological progress,\nit is imperative to cut\
    \ back on the carbon footprint to limit environmental deterioration\nalongside\
    \ global warming [12]. The exploration of edge paradigms is at its budding phase,\n\
    and innovative viewpoints pertaining to these paradigms that arise in literature\
    \ regularly\nwarrant extensive research [13].\nTable 1 shows the list of acronyms\
    \ used in this manuscript. Figure 1 shows the structure\nof this survey.\nTable\
    \ 1. List of acronyms used in the manuscript and their expansion.\nAcronym\nFull\
    \ Form\nAI\nArtiﬁcial Intelligence\nAR\nAugmented Reality\nCoT\nCloud of Things\n\
    CC\nCloud Computing\nCCTV\nClosed-Circuit Television\nCPU\nCentral Processing\
    \ Unit\nCR\nCloud Robotics\nDDoS\nDistributed Denial of Service\nDL\nDeep Learning\n\
    EC\nEdge Computing\nETSI\nEuropean Telecommunications Standard Institute\nFaaS\n\
    Function-as-a-Service\nFC\nFog Computing\nIaaS\nInfrastructure-as-a-Service\n\
    ICT\nInformation and Communications Technology\nIDC\nInternational Data Corporation\n\
    IoT\nInternet-of-Things\nSensors 2022, 22, 196\n3 of 38\nTable 1. Cont.\nAcronym\n\
    Full Form\nIT\nInformation Technology\nITS\nIntelligent Transport System\nITU\n\
    International Telecommunication Union\nMACC\nMobile Ad hoc Cloud Computing\nMEC\n\
    Multi-access Edge Computing\nMC\nMobile Computing\nMCC\nMobile Cloud Computing\n\
    MDC\nMicro Data Center\nmist\nMist Computing\nML\nMachine Learning\nMMA\nMan-in-the-Middle\
    \ Attack\nMIT\nMassachusetts Institute of Technology\nNIST\nNational Institute\
    \ of Standards and Technology\nOP\nOperational Technology\nPaaS\nPlatform-as-a-Service\n\
    PRISMA\nPreferred Reporting Items for Systematic Reviews and\nMeta-Analyses\n\
    QoE\nQuality of Experience\nQoS\nQuality of Service\nRAN\nRadio Access Network\n\
    RAS\nReliability Availability Serviceability\nSaaS\nSoftware-as-a-Service\nSDN\n\
    Software-Deﬁned Networking\nSLA\nService-Level Agreement\nVM\nVirtual Machine\n\
    VR\nVirtual Reality\nWSN\nWireless Sensor Network\nSensors 2022, 22, x FOR PEER\
    \ REVIEW \n3 of 41 \n \n \nIaaS \nInfrastructure-as-a-Service \nICT \nInformation\
    \ and Communications Technology \nIDC \nInternational Data Corporation \nIoT \n\
    Internet-of-Things \nIT \nInformation Technology \nITS \nIntelligent Transport\
    \ System \nITU \nInternational Telecommunication Union \nMACC \nMobile Ad hoc\
    \ Cloud Computing \nMEC \nMulti-access Edge Computing \nMC \nMobile Computing\
    \ \nMCC \nMobile Cloud Computing \nMDC \nMicro Data Center \nmist \nMist Computing\
    \ \nML \nMachine Learning \nMMA \nMan-in-the-Middle Attack \nMIT \nMassachusetts\
    \ Institute of Technology \nNIST \nNational Institute of Standards and Technology\
    \ \nOP \nOperational Technology \nPaaS \nPlatform-as-a-Service \nPRISMA \nPreferred\
    \ Reporting Items for Systematic Reviews and Meta-Analyses \nQoE \nQuality of\
    \ Experience \nQoS \nQuality of Service \nRAN \nRadio Access Network \nRAS \n\
    Reliability Availability Serviceability \nSaaS \nSoftware-as-a-Service \nSDN \n\
    Software-Defined Networking \nSLA \nService-Level Agreement \nVM \nVirtual Machine\
    \ \nVR \nVirtual Reality \nWSN \nWireless Sensor Network \n \nFigure 1. Organization\
    \ of this survey paper. \nFigure 1. Organization of this survey paper.\n2. Contribution\
    \ of This Survey\nThe contribution of this survey is outlined as follows:\nSensors\
    \ 2022, 22, 196\n4 of 38\n•\nA comprehensive account of computing paradigms is\
    \ rendered, especially cloud\ncomputing, fog computing, edge computing, and how\
    \ they are related to other similar\nparadigms such as mist, cloudlet, MEC, etc.\n\
    •\nA detailed illustration of the motives that instigated the evolution of edge/fog\
    \ com-\nputing and related paradigms is furnished.\n•\nA comparison of cloud,\
    \ edge, and fog computing paradigms are presented and ML\nconvergence’s signiﬁcance\
    \ with fog/edge is discussed.\n•\nA list of challenges and future research directions\
    \ concerning computing paradigms is\ndevised.\n2.1. Survey Methodology\nWe harnessed\
    \ the Preferred Reporting Items for Systematic Reviews and Meta-Analyses\n(PRISMA)\
    \ procedure to systematically choose the articles used in this survey.\n2.1.1.\
    \ Search Strategy and Literature Sources\nFor this review, articles pertaining\
    \ to Evolving Computing Paradigms were searched\nin Google Scholar, ScienceDirect,\
    \ IEEE Xplore, ACM Digital Library, Wiley Online Library,\nand Springer databases\
    \ from January 2009 to January 2022.\nThe search string used in this study was\
    \ (“Cloud computing” or “Edge computing”, or\n“Fog computing” or “Internet-of-Things”\
    \ or “Machine learning”) and collected 2360 articles.\n2.1.2. Inclusion Criteria\n\
    The articles written and published in English between January 2009 and January\n\
    2022 on Evolving Computing Paradigms were included. This review includes relatively\n\
    new research.\n2.1.3. Elimination Criteria\nThe articles published in languages\
    \ other than English, from January 2009, including\ncase reports/case series,\
    \ opinions, letters to the editor, commentaries, conference abstracts,\ntheses,\
    \ and dissertations, were excluded from this review.\n2.1.4. Results\nInitially,\
    \ from 2360 articles, duplicates found were removed and, after reviewing\nthe\
    \ abstracts of these papers, 874 of them were selected for a full-text review.\
    \ This study\nincluded both journal and conference articles. After reviewing the\
    \ full-text of these papers,\n693 papers were excluded, as they used duplicate\
    \ methods or were published earlier.\nFinally, 181 papers were studied in this\
    \ research. Figure 2 illustrates the selection procedure\nof the articles for\
    \ this study using a PRISMA diagram.\nSensors 2022, 22, 196\n5 of 38\nsors 2022,\
    \ 22, x FOR PEER REVIEW \n5 of 41 \n \nFigure 2. PRISMA flow diagram for the selection\
    \ process of the research articles used in this \nreview. \nThe 181 articles studied\
    \ in this research from 2009 to 2020 are depicted in Figure 3. \n \nFigure 3.\
    \ Number and year of publications studied in this review. \nThe review/survey\
    \ papers analyzed in this study is elucidated in Table 2. \nTable 2. Review/survey\
    \ papers and their contributions. \nuthor and \nYear \nArticles \nReferenced \n\
    Time \nSpan \nSystematic Study \nSurvey/Review Outline \nComputing \nParadigms\
    \ \nFuture Directions \nCloud \nComputing \nFog \nComputing \nEdge \nComputing\
    \ \ntzori et al. \n[14], 2016 \n119 \n1999 \n– \n2016 \n× \nThe survey examines\
    \ the prospect of Internet-of-\nThings from the evolutionary perspective, the\
    \ role of \nIoT in modern society and ensuing challenges. \n✓ \n× \n✓ \n× \nFigure\
    \ 2. PRISMA ﬂow diagram for the selection process of the research articles used\
    \ in this review.\nThe 181 articles studied in this research from 2009 to 2020\
    \ are depicted in Figure 3.\nSensors 2022, 22, x FOR PEER REVIEW \n5 of 41 \n\
    \ \n \n \nFigure 2. PRISMA flow diagram for the selection process of the research\
    \ articles used in this \nreview. \nThe 181 articles studied in this research\
    \ from 2009 to 2020 are depicted in Figure 3. \n \nFigure 3. Number and year of\
    \ publications studied in this review. \nThe review/survey papers analyzed in\
    \ this study is elucidated in Table 2. \nTable 2. Review/survey papers and their\
    \ contributions. \nAuthor and \nYear \nArticles \nReferenced \nTime \nSpan \n\
    Systematic Study \nSurvey/Review Outline \nComputing \nParadigms \nFuture Directions\
    \ \nCloud \nComputing \nFog \nComputing \nEdge \nComputing \nAtzori et al. \n\
    [14], 2016 \n119 \n1999 \n– \n2016 \n× \nThe survey examines the prospect of Internet-of-\n\
    Things from the evolutionary perspective, the role of \nIoT in modern society\
    \ and ensuing challenges. \n✓ \n× \n✓ \n× \nFigure 3. Number and year of publications\
    \ studied in this review.\nThe review/survey papers analyzed in this study is\
    \ elucidated in Table 2.\nTable 2. Review/survey papers and their contributions.\n\
    Author and\nYear\nArticles\nReferenced\nTime Span\nSystematic Study\nSurvey/Review\
    \ Outline\nComputing\nParadigms\nFuture Directions\nCloud\nComputing\nFog\nComputing\n\
    Edge\nComputing\nAtzori et al.\n[14], 2016\n119\n1999\n–\n2016\n×\nThe survey\
    \ examines the prospect of Internet-of-Things\nfrom the evolutionary perspective,\
    \ the role of IoT\nin modern society and ensuing challenges.\n✓\n×\n✓\n×\nHu et\
    \ al. [15],\n2017\n123\n2001\n–\n2017\n×\nThe review presents fog computing features,\
    \ architecture,\ncompares with other computing paradigms, and\nsummarizes key\
    \ technologies that aid in application and\ndeployment.\n✓\n✓\n✓\n✓\nSensors 2022,\
    \ 22, 196\n6 of 38\nTable 2. Cont.\nAuthor and\nYear\nArticles\nReferenced\nTime\
    \ Span\nSystematic Study\nSurvey/Review Outline\nComputing\nParadigms\nFuture\
    \ Directions\nCloud\nComputing\nFog\nComputing\nEdge\nComputing\nMahmud et al.\n\
    [16], 2017\n47\n2012\n–\n2016\n×\nThe work presents a taxonomy from a comprehensive\n\
    analysis of fog features and challenges pertaining to\nthe structure, service,\
    \ and security and identiﬁes research\ngaps.\n✓\n✓\n✓\n✓\nLin et al. [17],\n2017\n\
    167\n2001\n–\n2017\n×\nThe article offers a comprehensive overview of\nstate-of-the-art\
    \ IoT-enabling technologies, system\narchitecture, privacy, security issues, and\
    \ concerns of IoT\nand fog/edge computing integration during real-world\ndeployment.\n\
    ×\n✓\n✓\n✓\nMao et al. [18],\n2017\n242\n2003\n–\n2017\n×\nAn exhaustive outline\
    \ of state-of-the-art MEC from\na communication viewpoint, resource management,\n\
    comparison with MCC is presented.\n✓\n×\n✓\n✓\nNaha et al.\n[19], 2018\n142\n\
    2001\n–\n2018\n×\nThe survey article presents fog computing overview,\narchitecture,\
    \ related technologies, taxonomy by analyzing\nfog requirement and reviewing challenges,\
    \ research issues,\nand trends.\n✓\n✓\n✓\n✓\nMouradian\net al. [20], 2018\n168\n\
    2006\n–\n2017\n✓\nAn exhaustive survey is tendered on fog computing\narchitectures,\
    \ algorithms, afﬁliated concepts, and their\ndissimilarities; additionally, challenges\
    \ and research\ndirections were discussed.\n×\n✓\n×\n✓\nMukherjee\net al. [21],\
    \ 2018\n225\n1997\n–\n2017\n×\nThe survey extends an overview of fog computing\
    \ basics,\narchitecture and highlights the approach for service and\nallocation\
    \ of resources to overcome latency, bandwidth,\nand energy consumption.\n×\n✓\n\
    ×\n✓\nElazhary [22],\n2018\n412\n1991\n–\n2018\n×\nThe exhaustive review researches\
    \ arenas such as IoT, cloud\ncomputing, mobile computing, and related\nconcepts\
    \ and attempts to disambiguate emerging\nparadigms as well as technologies.\n\
    ✓\n✓\n✓\n✓\nAtlam et al.\n[23], 2018\n63\n2012\n–\n2017\n×\nThis work reviews\
    \ fog computing state-of-the-art,\nincluding fog features, architecture, and merits,\
    \ and insists\non fog being an IoT enabler.\n×\n✓\n×\n✓\nBangui et al.\n[24],\
    \ 2018\n114\n2012\n–\n2018\n×\nThe review outlines edge computing technology and\n\
    the challenges and concerns that accompany\nDistributed environments while shifting\
    \ services from\ncloud’s centralized to edge’s decentralized platforms.\n×\n✓\n\
    ✓\n✓\nYousefpour\net al. [2], 2019\n450\n2001\n–\n2018\n×\nA comprehensive survey\
    \ is furnished that emphasizes fog\ncomputing, associated computing\nparadigms,\
    \ and presents a taxonomy of research subjects,\nunderlying challenges, and future\
    \ leanings of fog.\n✓\n✓\n✓\n✓\nAbdulkareem\net al. [25], 2019\n95\n2011\n–\n\
    2019\n×\nThis review highlights recent advancements of ML\ntechniques related\
    \ to the accuracy, resource management\nand security of fog computing and its\
    \ role in edge\ncomputing.\n×\n✓\n✓\n✓\nDonno et al.\n[9], 2019\n71\n2004\n–\n\
    2019\n×\nThe review article offers clariﬁcation for beginners into\nresearch on\
    \ cloud computing, edge computing, and fog\ncomputing by illustrating features\
    \ and architecture of each\nparadigm and concludes by stating fog computing’s\n\
    relevance as fog binds cloud, edge computing, and IoT\ntogether.\n✓\n✓\n✓\n✓\n\
    Khan et al.\n[26], 2019\n101\n2009\n–\n2019\n×\nThe study focuses on cloud and\
    \ state-of-the-art edge\ncomputing concepts, critical requirements, limitations\
    \ and\nidentiﬁed unaddressed issues.\n✓\n✓\n✓\n✓\nCao et al. [27],\n2020\n62\n\
    2005\n–\n2020\n×\nThe article reviews research related to edge\ncomputing, summarizes\
    \ key concepts, technologies,\narchitecture, privacy, and security.\n✓\n×\n✓\n\
    ✓\nHabibi et al.\n[28], 2020\n191\n2002\n–\n2019\n×\nThe survey covers existing\
    \ computing paradigms and\nemphasizes fog computing research areas by presenting\n\
    a taxonomy and analyses from fog’s architectural\nviewpoint.\n✓\n✓\n✓\n✓\nMoura\
    \ et al.\n[29], 2020\n194\n1999\n–\n2020\n×\nThis work surveys state-of-the-art\
    \ fog computing systems,\noffers insights into designing and managing resilient\
    \ fog\nsystems and illustrates research issues and upcoming\nfuture trends.\n\
    ×\n✓\n×\n✓\nAslanpour\net al. [30], 2020\n50\n2010\n–\n2020\n×\nThe study offers\
    \ a taxonomy of real-world\nperformance metrics to assess the computing paradigms\
    \ of\ncloud, fog, and edge.\n✓\n✓\n✓\n✓\nAlli et al. [31],\n2020\n102\n2009\n\
    –\n2020\n×\nThe article delves into the ecosystems of IoT–fog–cloud,\nanalyzing\
    \ concepts, architecture, standards, tools of fog\nCloud-of-Things, and presents\
    \ a taxonomy on emerging\nissues. It concludes that ML and AI in fog ecosystems\n\
    would be appropriate for latency-sensitive and\nresource-constrained systems.\n\
    ✓\n✓\n✓\n✓\n(✓: Yes, ×: No).\nSensors 2022, 22, 196\n7 of 38\n3. Evolving Computing\
    \ Paradigms and Related Concepts\n3.1. Cloud Computing\nCloud computing pertains\
    \ to extending applications via the internet as services, as well\nas the software\
    \ and technology that underpins the data centers furnishing these services [1].\n\
    NIST formalizes cloud computing [32] as “a model for enabling ubiquitous, convenient,\n\
    on-demand network access to a shared pool of conﬁgurable computing resources (e.g.,\
    \ net-\nworks, servers, storage, applications, and services) which can be rapidly\
    \ provisioned and\nreleased with minimal management effort or service provider\
    \ interaction”. The essential\ncharacteristics of the cloud model include on-demand\
    \ self-service, broad network access, re-\nsource pooling, rapid elasticity, and\
    \ measured service. A cloud infrastructure encompasses\nsoftware and hardware,\
    \ extending vital features of the cloud model.\nThe cloud solutions are procurable\
    \ through the following service models [33]:\n•\nSoftware as a service (SaaS)—the\
    \ cloud provider presents consumers with applications\naccessible via the program\
    \ interface or web browser, and the consumer has limited\ncontrol over user-speciﬁc\
    \ applications.\n•\nPlatform as a service (PaaS)—On the cloud infrastructure,\
    \ the consumers are allowed to\nbuild and distribute applications. They can exercise\
    \ control on applications deployed\nbut not on the cloud infrastructure.\n•\n\
    Infrastructure as a service (IaaS)—The customer is furnished with essential computing\n\
    resources vital to processing, storing, and networking. The user exercises control\
    \ upon\nstorage, applications, and operating systems, but not cloud infrastructure.\
    \ The cloud\nservice models and deployment models are depicted in Figure 4.\n\
    Sensors 2022, 22, x FOR PEER REVIEW \n8 of 41 \n \n \nFigure 4. Common cloud service\
    \ models and their classifications. \nThe cloud solutions are deployable as [33]:\
    \ \n• \nPrivate cloud—a particular organization that can also be a third party\
    \ exclusively \nowns and controls the private cloud, which can be available on\
    \ or off-premises. \n• \nCommunity cloud—the specific community comprises of organizations\
    \ that share \ncommon concerns may provide cloud infrastructure for exclusive\
    \ usage available on \nor off-premises, managed by organizations within the community\
    \ or by a third party. \n• \nPublic cloud—the public cloud available on the cloud\
    \ provider’s premises can be \nowned or managed by any enterprise and is open\
    \ to the use of the general public. \n• \nHybrid cloud—it may be composed of two\
    \ or more cloud models (private, \ncommunity, or public); although they are distinct\
    \ entities, they are bound by \nt\nh\nl\nitti\nth\nt bilit\nf\nli\nti\nll\nd t\n\
    Figure 4. Common cloud service models and their classiﬁcations.\nThe cloud solutions\
    \ are deployable as [33]:\n•\nPrivate cloud—a particular organization that can\
    \ also be a third party exclusively\nowns and controls the private cloud, which\
    \ can be available on or off-premises.\n•\nCommunity cloud—the speciﬁc community\
    \ comprises of organizations that share\ncommon concerns may provide cloud infrastructure\
    \ for exclusive usage available on\nor off-premises, managed by organizations\
    \ within the community or by a third party.\nSensors 2022, 22, 196\n8 of 38\n\
    •\nPublic cloud—the public cloud available on the cloud provider’s premises can\
    \ be\nowned or managed by any enterprise and is open to the use of the general\
    \ public.\n•\nHybrid cloud—it may be composed of two or more cloud models (private,\
    \ community,\nor public); although they are distinct entities, they are bound\
    \ by technology permitting\nthe portability of application as well as data.\n\
    3.2. Internet-of-Things\nKevin Ashton, co-creator and executive director of the\
    \ Auto-ID Center at the Mas-\nsachusetts Institute of Technology (MIT), in 1999\
    \ introduced the phrase “Internet of\nThings” [34]. The Internet of Things (IoT)\
    \ [35] characterizes an extensive environment\nconnecting heterogeneous physical\
    \ objects to the internet to ﬁne-tune the efﬁciency of\nreal-time ubiquitous applications.\
    \ As per the International Telecommunication Union\n(ITU), the Internet of Things\
    \ (IoT) is a universal framework that connects things which\nmay be physical as\
    \ well as virtual, distinguished, and incorporated within communi-\ncation networks,\
    \ depending on prevailing and emerging collaborative information and\ncommunication\
    \ technologies (ICT) to facilitate enhanced services [36].\n3.2.1. Essential Features\n\
    The fundamental characteristics of the Internet of Things include [37–40]:\n•\n\
    Interconnectivity—the IoT may be connected to global communication infrastructure.\n\
    •\nThings-related services—IoT is adept at offering physical/virtual things, privacy,\
    \ as\nwell as semantic consistency services within the limits of things.\n•\n\
    Heterogeneity—the IoT devices pertain to diverse hardware platforms and networks.\n\
    •\nConstrained resources—the IoT devices encounter computational and energy restric-\n\
    tions.\n•\nDynamic change—the state of devices and the related environment are\
    \ subject to\ndynamic change.\n•\nUncontrolled environment—the IoT devices are\
    \ deployed in an uncontrolled setting.\n•\nMassive scale—the devices to be monitored\
    \ and those that connect with one another\nare enormous and will continue to surge\
    \ exponentially into the future.\n3.2.2. New Challenges in IoT\nAs billions of\
    \ devices are connected globally, data expands exponentially and accumu-\nlates\
    \ 24/7, driving big data to become the current buzzword [41]. The International\
    \ Data\nCorporation (IDC) estimates that by 2025, IoT devices may reach 41.6 billion\
    \ and create\n79.4 zettabytes of data [42]. The ﬁve Vs of big data [43], namely,\
    \ volume, variety, velocity,\nveracity, and value, pose distinct challenges. In\
    \ the current scenario, the majority of data\nresulting from IoT devices are managed\
    \ by the cloud. The resulting cloud IoT synergy\nposes demands that cannot be\
    \ tackled by the existing cloud computing model alone [44].\nA concise outline\
    \ of challenges that IoT encounters [13,45–48] drives the need for edge and\n\
    fog computing as a solution to manage demands [36] and is outlined as follows:\n\
    •\nLow latency—IoT applications [44] and industrial control systems [49] demand\
    \ low\nlatency within a few milliseconds that can hardly be met by the existing\
    \ cloud model.\n•\nHigh network bandwidth—The escalating amount of IoT devices\
    \ produce sizable\ndata [50], which may be rendered useless due to high bandwidth\
    \ usage to transfer it\nto the cloud or denied due to privacy concerns; hence,\
    \ entails to be dealt with locally.\n•\nLimited resources—numerous IoT-connected\
    \ devices possess limited resources to\ninteract directly with the cloud, demanding\
    \ intensive computation and complex\nprotocols.\n•\nIT and OT convergence—In industrial\
    \ systems, the conﬂuence of information technol-\nogy (IT) and operational technology\
    \ (OT) creates new needs. As ofﬂine systems may\ncause business loss or consumer\
    \ annoyance, contemporary cyber-physical systems\ndemand continual and safe operation.\
    \ Thus, the upgradation of the system software\nand hardware causes concern.\n\
    Sensors 2022, 22, 196\n9 of 38\n•\nIntermittent connectivity—When IoT devices\
    \ have intermittent network connectivity,\nit is difﬁcult to provide uninterrupted\
    \ cloud services to those devices.\n•\nGeographical distribution—the majority\
    \ of IoT devices entail services of comput-\ning and storage that are dispersed\
    \ across large geographic areas, and it is highly\nchallenging to position them\
    \ at a location that meets IoT demands [51].\n•\nContext-awareness—Local contextual\
    \ data must be accessed and processed by IoT\napplications (vehicular networks\
    \ and augmented reality), for which the physical\ndistance between IoT devices\
    \ and the centralized cloud is a hindrance.\n•\nSecurity and privacy—The existing\
    \ cybersecurity solutions prove to be unsatisfactory\nto manage IoT applications\
    \ due to the evolving security challenges [52,53].\n3.3. Mobile Computing\nThe\
    \ computation carried out through mobile phones, tablets, or laptops is noted\
    \ as\nmobile computing. The mobile devices offer substantial beneﬁts to mobile\
    \ users but still\nencounter limitations due to a low processing capability, battery,\
    \ memory due to their\nportable size, and operate at on-and-off network connectivity\
    \ [2]. Along with resource\nconstraints, mobile computing encounters communication\
    \ latency, demand adaptability\nof mobile clients, etc. Thus, these drawbacks\
    \ cause mobile computing to be inept for\napplications with demands for low latency,\
    \ robustness, and when huge data generated\nfrom mobile devices need to be processed\
    \ and stored on it. Moreover, the escalation\nin mobile device utilization increased\
    \ the data ﬂow, causing network congestion. Data\nofﬂoading is a viable solution\
    \ to mitigate the strain on the cellular network [54]. The existing\ndemerits\
    \ of mobile computing can be overcome by integrating it with cloud computing [55].\n\
    The expansion of mobile computing set the stage for and impacted the cloud and\
    \ fog\ncomputing evolution.\n3.4. Mobile Cloud Computing\nNIST states that the\
    \ cloud computing alliance with IoT devices and mobile devices fa-\ncilitates\
    \ data and CPU-intensive applications suitable for the IoT environment [56]. The\
    \ con-\ncept of Mobile Cloud Computing (MCC) is that it combines cloud computing\
    \ and mobile\napplications with sophisticated computing modules processed on the\
    \ cloud [57]. It enables\ndata processing and storage away from mobile devices,\
    \ beneﬁtting not just smartphones\nand a wide range of mobile subscribers. Major\
    \ computational tasks are moved to the cloud\nwith MCC, improving mobile devices’\
    \ battery life [2]. With MCC being grounded on\nthe notion of mobile ofﬂoading,\
    \ mobile devices entrust storage as well as processing to\nremote units to achieve\
    \ workload mitigation and optimization in terms of energy, cost, and\nlongevity\
    \ [45].\nThe mobile devices’ proliferation entails the efﬁcient management of\
    \ constrained\nresources with MCC, as it operates on the synergy between cloud\
    \ computing and mobile\ncomputing. It is capable of operating data-intensive mobile\
    \ applications as it prevails over\nbattery, memory, and computation power restrictions\
    \ from the user viewpoint. However,\nwith cellular communication, long-distance\
    \ data transmission to/from a core network\nresults in higher latency, jitter,\
    \ and network overhead. This can be overcome if the computa-\ntion, analysis,\
    \ and ﬁltering of data occurs at the proximity of the data source, facilitating\
    \ Fog\nComputing (FC) and MEC [58]. The limited bandwidth, ﬂexibility, and control,\
    \ along with\nan unreliable latency, security, and privacy issues are some challenges\
    \ faced by MCC [28].\nThe partitioning of mobile applications by adaptive ofﬂoading\
    \ during runtime allows\nthe management of computer-intensive units of the application\
    \ [59].\n3.5. Mobile Ad hoc Cloud Computing\nMobile Ad hoc Cloud Computing (MACC)\
    \ is an edge computing paradigm involving\nmobile devices that share resources\
    \ in a dynamic and temporary network facilitated by\ntransport and routing protocols\
    \ [2,58,60]. It offers a decentralized network [61] with\ndynamic mobile devices,\
    \ accommodating devices joining or leaving the network continually.\nSensors 2022,\
    \ 22, 196\n10 of 38\nIt favors environments that lack uninterrupted internet connectivity.\
    \ MACC is the most\ndecentralized, as it comprises mobile devices only.\n3.6.\
    \ Cloud of Things\nThe two concepts of cloud computing and IoT have evolved independently\
    \ through\nthe years in terms of hardware and software. With IoT facing challenges\
    \ due to the process-\ning, battery, and storage capacity, these issues can be\
    \ solved by combining cloud computing\nand IoT [62]. Cloud computing is capable\
    \ of ﬁlling the gaps in IoT regarding computing,\nnetworking, and storage capabilities\
    \ due to the cloud’s virtually unlimited capabilities and\nresources. It can assist\
    \ in implementing numerous IoT applications [63,64]. In the Cloud-\nof-Things\
    \ (CoT), IoT devices constitute a virtualized cloud structure. Here, computing\
    \ is\nperformed over the cloud of pooled resources consisting of IoT devices in\
    \ contrast to mist\ncomputing, where computing is carried out on IoT devices [65].\n\
    3.7. Mist Computing\nMist computing is initiated to include endpoint connected\
    \ devices at the extreme edge\nsuitable for self-aware autonomic systems in the\
    \ near future [2,66]. In the IoT-fog-cloud\ncontinuum, mist computing is the ﬁrst\
    \ computing point to allow computation, storage,\nand networking across fog to\
    \ things. Mist computing forms the superset of MACC, as\nmist, devices, and networking\
    \ are not restricted to mobile devices and ad hoc, respectively.\nIt allows utilizing\
    \ the peripheral component (sensors or actuators) capacity to pre-process\ndata\
    \ before sending them to the fog or cloud layer [67]. Mist computing aids in large-scale\n\
    IoT systems development and enriches computational efﬁciency at the edge of the\
    \ IoT\narchitecture [68].\n3.8. Edge Computing\nDespite the fact that edge computing\
    \ has been mentioned in the literature before\ncloud computing, its signiﬁcance\
    \ grew dramatically with the introduction of IoT and\nthe ensuing demands. Edge\
    \ computing places cloud computing’s services close to the end-\nuser, distinguished\
    \ by a rapid processing and response time [26]. Edge computing denotes\ntechnologies\
    \ that enable computation to be accomplished at the network’s edge, upon\ndownstream\
    \ data for cloud services, and upstream data for IoT services [69]. It unfolds\n\
    the cloud’s network by extending the computation, storage, and resources to the\
    \ edge\nof the network, close to the data source, with the resolve to accomplish\
    \ critical needs of\nreal-time servicing, application intelligence, security,\
    \ and privacy, along with the network’s\nrequirements for low latency and high\
    \ bandwidth [13,27].\nThe signiﬁcant aspects of cloud computing are its ability\
    \ to grasp the big picture,\nprocess vast amounts of data, perform in-depth analyses,\
    \ process data in non-real-time,\nand determine business decisions. Being centralized,\
    \ entire data must be transferred to\nthe cloud with underlying risks of data\
    \ loss and data leakage, as security and privacy\ncannot be ensured, and sensitive\
    \ information is at threat of disclosure [27]. Edge computing\nis an extension\
    \ to cloud computing, which considerably minimizes the volume of data\ntransmitted\
    \ across nodes, lowering transmission costs and the network bandwidth usage.\n\
    It leads to utilization and computing efﬁciency along with energy consumption.\
    \ Edge\ncomputing can be more effective in small-scale, intelligent, real-time\
    \ analyses. It eliminates\nthe risk associated with the network transmission,\
    \ ensuring data security. If data become\ncompromised, it impacts only local data.\
    \ The edge computing architecture is federated,\nwherein edge devices are positioned\
    \ between the cloud and terminal devices to tender\ncloud services to the network’s\
    \ edge [24,70]. As edge computing shifts service provisioning\nfrom the cloud\
    \ to the edge, it favors IoT application demands, enabling IoT devices to\nbe\
    \ more scalable and energy-efﬁcient [71]. The cloud–edge alliance involves a typical\n\
    three-layer model distinguished as the terminal (sensors, cameras, and smartphones),\
    \ edge\n(base stations, access points, routers, switches, and gateways), and cloud\
    \ [27]. In terms of\nSensors 2022, 22, 196\n11 of 38\ndevice types, communication\
    \ protocols, and services, edge computing can be implemented\nin various ways\
    \ [9,13,26].\n3.9. Multi-Access Edge Computing (MEC)\nThe Mobile Edge Computing\
    \ standard has been constituted by the European Telecom-\nmunications Standards\
    \ Institute (ETSI) [72], which offers cloud computing and IT function-\nalities\
    \ within the Radio Access Network (RAN) in the vicinity of mobile subscribers\
    \ [71].\nAs of 2017, ETSI renamed “Mobile Edge Computing” to “Multi-Access Edge\
    \ Computing”\ndue to increasing interest in MEC by non-cellular operators [73,74].\
    \ MEC is a continuation\nof mobile computing via edge computing, delivering computation\
    \ and storage to energy\nand resource-constrained mobile devices [2].\nWith Multi-Access\
    \ Edge Computing, a cloud server is deployed at the cellular net-\nwork’s base\
    \ stations. It executes tasks such as enhancing the application’s performance\
    \ and\nminimizing network congestion, bandwidth use, and latency for subscribers\
    \ that cannot\nbe achieved with a conventional network architecture [75–77]. Even\
    \ though the process-\ning and memory capabilities of mobile devices improve,\
    \ they are still not sufﬁcient to\nhandle compute-intensive tasks, which has led\
    \ to MCC and MEC models [78]. The MEC\narchitecture is portrayed in Figure 5.\
    \ MEC considerably reduces the process duration\nand energy demands of mobile\
    \ devices by setting up computational and other resources\nclose to the base stations\
    \ [79]. As base stations serve as crucial access points to several\nIoT devices,\
    \ end devices could be directly serviced with just one hop through MEC [80].\n\
    MEC showcases a low latency, proximity to the user, location awareness, and geographical\n\
    distribution. However, it restraints the need to install a dedicated MEC server\
    \ for MEC\nservices. With the rise in the demand for resources over time, scaling\
    \ is another major\nchallenge [81]. MEC exhibits the reliability, energy efﬁciency,\
    \ and a low latency suitable to\ndiverse applications [82] and outperforms MCC\
    \ comparably [83].\nSensors 2022, 22, x FOR PEER REVIEW \n12 of 41 \n \nenergy\
    \ demands of mobile devices by setting up computational and other resources close\
    \ \nto the base stations [79]. As base stations serve as crucial access points\
    \ to several IoT \ndevices, end devices could be directly serviced with just one\
    \ hop through MEC [80]. MEC \nshowcases a low latency, proximity to the user,\
    \ location awareness, and geographical \ndistribution. However, it restraints\
    \ the need to install a dedicated MEC server for MEC \nservices. With the rise\
    \ in the demand for resources over time, scaling is another major \nchallenge\
    \ [81]. MEC exhibits the reliability, energy efficiency, and a low latency suitable\
    \ \nto diverse applications [82] and outperforms MCC comparably [83]. \n \nFigure\
    \ 5. Multi-access edge computing systems—a general architecture. \n3.10. Cloudlet\
    \ \nA cloudlet has been envisioned by researchers at Carnegie Mellon University,\
    \ which \nis a small cluster or data centers capable of computation and storage,\
    \ positioned close to \nmobile devices [84,85]. Cloudlet computing shares MCC\
    \ and MEC particularities, further \ncontending with the demerits of MCC. A cloudlet\
    \ may be referred to as a mini-cloud [86], \noffering a secured cloud infrastructure\
    \ for computing and delivering results to mobile \ndevices and works alongside\
    \ the cloud. It is positioned at the network edge and is \nFigure 5. Multi-access\
    \ edge computing systems—a general architecture.\n3.10. Cloudlet\nA cloudlet has\
    \ been envisioned by researchers at Carnegie Mellon University, which\nis a small\
    \ cluster or data centers capable of computation and storage, positioned close\n\
    Sensors 2022, 22, 196\n12 of 38\nto mobile devices [84,85]. Cloudlet computing\
    \ shares MCC and MEC particularities,\nfurther contending with the demerits of\
    \ MCC. A cloudlet may be referred to as a mini-\ncloud [86], offering a secured\
    \ cloud infrastructure for computing and delivering results to\nmobile devices\
    \ and works alongside the cloud. It is positioned at the network edge and\nis\
    \ accessible to adjacent mobile units [87,88]. The notion is computational ofﬂoading\
    \ to\nthe virtual machine (VM)-based cloudlets at the network edge from mobile\
    \ devices [89].\nThe cloudlet is featured as the middle layer in the three-tier\
    \ architecture comprising of\nmobile devices, the cloudlet, and the cloud [84,85]\
    \ shown in Figure 6. It further possesses\nconnectivity, security, virtualization\
    \ features, and closeness to mobile users enabling a low\nlatency. Cloudlets are\
    \ similar to mobile clouds and nearer to mobile devices beﬁtting\nreal-time scenarios.\
    \ They focus on servicing time-sensitive applications operating under\nrestricted\
    \ bandwidth conditions and interactive mobile applications with a large resource\n\
    demand and offer resources at a minimum latency [83]. Cloudlets back mobile clients’\
    \ local\nservices by splitting tasks within cloudlet nodes that are nearer to\
    \ mobile devices. While\nthe cloudlet suits the mobile–cloudlet–cloud structure\
    \ [90], fog computing is an alternative,\nsupporting huge data trafﬁc with resources\
    \ located at anyplace within the thing-to-cloud\ncontinuum [2]. Cloudlets are\
    \ alluded to as micro data centers (MDC) at times [91], mirroring\nconventional\
    \ data centers of cloud computing. The MDC may be a cloudlet or edge node\nimplemented\
    \ in between IoT devices and the cloud [2].\nSensors 2022, 22, x FOR PEER REVIEW\
    \ \n13 of 41 \n \ncenters (MDC) at times [91], mirroring conventional data centers\
    \ of cloud computing. The \nMDC may be a cloudlet or edge node implemented in\
    \ between IoT devices and the cloud \n[2]. \n \nFigure 6. Mobile device–cloudlet–cloud\
    \ model. \n3.11. Cloud Robotics \nRobotics engineering is becoming a vital part\
    \ of everyday life, with diverse sensors \ngenerating big data demanding complex\
    \ computations [92]. Cloud robotics is a branch of \nIoT that evolved from the\
    \ fusion of cloud computing and networked robots [93]. The \nmassive storage capacity\
    \ of a centralized cloud and broad library of skills can be leveraged \nby robots\
    \ to learn with experience. The cloud robotics architecture comprises two levels:\
    \ \nmachine-to-machine and machine-to-cloud. At the machine-to-machine level,\
    \ robots \ndetermine decisions through a wireless collaboration. The machine-to-cloud\
    \ level offers a \nshared pool of storage and computation resources to be allocated\
    \ as per demands. Cloud \nrobotics capitalizes on the elasticity feature of cloud\
    \ computing besides others. \nAdditionally, robots-as-a-service (RaaS) stems from\
    \ considering robots as resources, \nproviding resource sharing services to other\
    \ robots [94–97]. The sharing of resources and \ndata between robots through the\
    \ cloud is integral to CR, along with robots themselves \nbeing shared as resources.\
    \ These systems require standards for enabling coherent, \nsemantic, data sharing,\
    \ and service provisioning among the robots [93]. Cloud computing \ndelegates\
    \ fast and robust processing and storage capabilities to robots, along with \n\
    Figure 6. Mobile device–cloudlet–cloud model.\n3.11. Cloud Robotics\nRobotics\
    \ engineering is becoming a vital part of everyday life, with diverse sensors\n\
    generating big data demanding complex computations [92]. Cloud robotics is a branch\
    \ of\nIoT that evolved from the fusion of cloud computing and networked robots\
    \ [93]. The mas-\nsive storage capacity of a centralized cloud and broad library\
    \ of skills can be leveraged\nby robots to learn with experience. The cloud robotics\
    \ architecture comprises two lev-\nels: machine-to-machine and machine-to-cloud.\
    \ At the machine-to-machine level, robots\ndetermine decisions through a wireless\
    \ collaboration. The machine-to-cloud level offers\na shared pool of storage and\
    \ computation resources to be allocated as per demands. Cloud\nrobotics capitalizes\
    \ on the elasticity feature of cloud computing besides others. Additionally,\n\
    robots-as-a-service (RaaS) stems from considering robots as resources, providing\
    \ resource\nsharing services to other robots [94–97]. The sharing of resources\
    \ and data between robots\nSensors 2022, 22, 196\n13 of 38\nthrough the cloud\
    \ is integral to CR, along with robots themselves being shared as resources.\n\
    These systems require standards for enabling coherent, semantic, data sharing,\
    \ and service\nprovisioning among the robots [93]. Cloud computing delegates fast\
    \ and robust processing\nand storage capabilities to robots, along with collaborative\
    \ learning capabilities through\nthe sharing of knowledge. Recent advancement\
    \ in this ﬁeld have incited cloud robotics\narchitecture development and its application\
    \ in several domains [98].\n3.12. Fog Computing\nThe idea of processing at the\
    \ edge has been around since the 2000s [99,100]. A related\nconcept of cloudlets\
    \ has been presented in 2009 [101]. The phrase ‘Fog Computing’ has\nbeen propounded\
    \ by Cisco researchers in 2012 [42,102]. Fog computing and cloudlets are\nrelated\
    \ concepts operating at the edge level, with cloudlets deployed at mobile networks\n\
    and fog computing dealing with connected things [103].\nFog computing is frequently\
    \ deliberated as a form of edge computing [7,8,104]. Fog\ncomputing literally\
    \ delivers distributed processing, networking, and storage potential\nnearer to\
    \ the user [105]. Fog computing is more than a mere deployment of the edge\ncomputing\
    \ concept; it is the pinnacle of reinforcing edge computing concepts [9]. It is\n\
    not an extension or replacement of the Cloud; instead, it is a new paradigm operating\n\
    in between IoT and the cloud, with the intent of supporting and enhancing Interaction\
    \ and\nintegration of the cloud, edge, and IoT.\nCisco describes fog computing\
    \ [44] as a highly virtualized setup that caters to services\nof computing, storage,\
    \ and networking between conventional cloud data centers and end\ndevices, generally\
    \ but not solely deployed at the network’s edge. According to the OpenFog\nConsortium\
    \ [10], fog computing is delineated as “a system-level horizontal architecture\
    \ that\ndistributes resources and services of computing, storage, control and\
    \ networking anywhere\nalong the continuum from Cloud to Things, thereby accelerating\
    \ the velocity of decision-\nmaking”. Fog computing adopts a distributed tactic\
    \ originating from the edge computing\nmodel to outdo the limitations of the centralized\
    \ cloud computing approach [25], with fog\nnodes positioned anyplace between cloud\
    \ and end devices. The computing paradigms\nassociated with fog computing are\
    \ depicted in Figure 7.\nSensors 2022, 22, x FOR PEER REVIEW \n14 of 41 \n \n\
    Fog computing is frequently deliberated as a form of edge computing [7,8,104].\
    \ Fog \ncomputing literally delivers distributed processing, networking, and storage\
    \ potential \nnearer to the user [105]. Fog computing is more than a mere deployment\
    \ of the edge \ncomputing concept; it is the pinnacle of reinforcing edge computing\
    \ concepts [9]. It is not \nan extension or replacement of the Cloud; instead,\
    \ it is a new paradigm operating in \nbetween IoT and the cloud, with the intent\
    \ of supporting and enhancing Interaction and \nintegration of the cloud, edge,\
    \ and IoT. \nCisco describes fog computing [44] as a highly virtualized setup\
    \ that caters to services \nof computing, storage, and networking between conventional\
    \ cloud data centers and end \ndevices, generally but not solely deployed at the\
    \ network’s edge. According to the \nOpenFog Consortium [10], fog computing is\
    \ delineated as “a system-level horizontal \narchitecture that distributes resources\
    \ and services of computing, storage, control and \nnetworking anywhere along\
    \ the continuum from Cloud to Things, thereby accelerating \nthe velocity of decision-making”.\
    \ Fog computing adopts a distributed tactic originating \nfrom the edge computing\
    \ model to outdo the limitations of the centralized cloud \ncomputing approach\
    \ [25], with fog nodes positioned anyplace between cloud and end \ndevices. The\
    \ computing paradigms associated with fog computing are depicted in Figure \n\
    7. \n \nFigure 7. Fog computing and its related computing paradigms. \n3.12.1.\
    \ Essential Features \nThe significant trait of fog computing is that the computation,\
    \ communication, and \nstorage tasks are accomplished close to end-users by capitalizing\
    \ on the key attribute of \nfog’s proximity to the edge. The additional characteristics\
    \ of fog computing [15,106] are \noutlined as follows: \n• \nLow latency: The\
    \ proximity of fog nodes to end devices that generate data, such as \nsensors\
    \ and actuators, entails a significantly faster reaction and analysis than from\
    \ \nthe centralized cloud data center. This feature considerably minimizes the\
    \ data \ntransfer across the internet and enables a low latency to manage real-time\
    \ \napplications, notably sensitive to latency and time. \n•\nSave bandwidth:\
    \ As the fog model allows data computation and storage between\nFigure 7. Fog\
    \ computing and its related computing paradigms.\n3.12.1. Essential Features\n\
    The signiﬁcant trait of fog computing is that the computation, communication,\
    \ and\nstorage tasks are accomplished close to end-users by capitalizing on the\
    \ key attribute of\nfog’s proximity to the edge. The additional characteristics\
    \ of fog computing [15,106] are\noutlined as follows:\n•\nLow latency: The proximity\
    \ of fog nodes to end devices that generate data, such as\nsensors and actuators,\
    \ entails a signiﬁcantly faster reaction and analysis than from\nSensors 2022,\
    \ 22, 196\n14 of 38\nthe centralized cloud data center. This feature considerably\
    \ minimizes the data transfer\nacross the internet and enables a low latency to\
    \ manage real-time applications, notably\nsensitive to latency and time.\n•\n\
    Save bandwidth: As the fog model allows data computation and storage between\n\
    conventional cloud and end nodes, less complex pre-processing tasks are handled\n\
    locally. It dramatically minimizes data transfer across the internet, with endpoints\n\
    offering fast and premium localized computer and storage services. Transferring\
    \ only\nappropriate data to the cloud substantially reduces the network transmission\
    \ and\nbandwidth usage, beﬁtting the big data era.\n•\nMulti-tenancy: On account\
    \ of the vastly virtualized and distributed infrastructure,\nmulti-tenancy in\
    \ a constrained environment is possible.\n•\nSupport for mobility: Due to the\
    \ direct interaction between fog applications and\nmobile devices, more control\
    \ over mobile devices is maintained. Thus, the fog model\nfacilitates better control\
    \ of users along with mobile devices to administrators and\nsatisﬁes mobility\
    \ demands that are location-based and the way information is accessed,\nresulting\
    \ in enhanced system performance and service quality.\n•\nInteraction in real-time:\
    \ Contrary to the cloud, fog applications deliver services in real-\ntime because\
    \ of their low-latency feature.\n•\nContext-awareness: the nodes and end devices\
    \ in the fog setting are aware of the con-\ntextual location.\n•\nGeographically\
    \ wide distribution: The fog model’s decentralized architecture facili-\ntates\
    \ geographically distributed deployment with a large number of widely dispersed\n\
    nodes. It imparts closer data analysis, rapid big data processing, improved decision-\n\
    making potential in real-time and location-based services to consumers.\n•\nWireless\
    \ access networking: Though fog is deployed in wired environments, it is also\n\
    suitable for IoT wireless networks.\n•\nSupport for heterogeneity: The fog infrastructure\
    \ encompasses high-speed lines to\nthe data center and wireless access methods\
    \ to the edge devices. Fog nodes are avail-\nable physically or virtually, and\
    \ service interfaces are incredibly dynamic, operating\nin wired and wireless\
    \ settings coming from different hardware and software ven-\ndors and heterogeneous\
    \ to cater to the low latency demand of globally distributed\napplications.\n\
    •\nSeamless interoperability and federation: Owing to its heterogeneous nature,\
    \ fog\nnodes and devices originate from various vendors and are generally deployed\
    \ in di-\nverse settings. For the effective interaction of devices from different\
    \ providers, fog\ncomputing must enable interoperability with federated services\
    \ across domains. Thus,\nto allow interoperability and cooperation across diverse\
    \ resources and devices, fog\ncomputing employs policies for resource management.\n\
    •\nReal-time analytics: With data collected and processed close to the sources,\
    \ real-time\nanalytics is possible.\n•\nScalability: Fog computing exhibits scalability\
    \ and adaptability to varying conditions\nwith the data load, resource pooling,\
    \ network demands, and ﬂexible computing.\n•\nSupport for industrial applications:\
    \ As computing and analyses are conducted in real-\ntime, industrial applications\
    \ widely beneﬁt.\n•\nSecurity and privacy: Fog computing brings facilities nearer\
    \ to end consumers while\nensuring privacy and security of sensitive and private\
    \ data using integrity checking,\naccess control, and encryption methods by fog\
    \ nodes. Moreover, it can mitigate\nthe vulnerabilities associated with system\
    \ upgrades and limit updates at the fog end.\n•\nLow energy consumption: as fog\
    \ nodes are spatially distributed and do not require\na cooling system, fog computing\
    \ is more ecologically friendly; communication within\na short-range as well as\
    \ energy management rules obviously minimize the communi-\ncation energy use.\n\
    In addition, fog nodes are expected to possess features such as autonomy, heterogene-\n\
    ity, hierarchical clustering, manageability, and programmability to fog implementation.\n\
    Sensors 2022, 22, 196\n15 of 38\n3.12.2. Architecture\nThe illustration of the\
    \ fog architectural model has recently been a prominent area\nof research. Extensive\
    \ related research alluded to the architecture comprising of three-\nlayer [15,17,107–109].\
    \ Moreover, the N-Tier architecture recommended by the OpenFog\nConsortium may\
    \ be regarded as an enhancement of this three-layer model [10].\n1.\nThree-Layer\
    \ Architecture\nThe basic three-layer model portrayed in Figure 8 stems from the\
    \ fog computing\nconcept being an essential extension to the cloud computing model,\
    \ with the fog layer\nposing as an intermediate layer between the cloud and IoT\
    \ devices [15].\nSensors 2022, 22, x FOR PEER REVIEW \n16 of 41 \n \n \nThe basic\
    \ three-layer model portrayed in Figure 8 stems from the fog computing \nconcept\
    \ being an essential extension to the cloud computing model, with the fog layer\
    \ \nposing as an intermediate layer between the cloud and IoT devices [15]. \n\
    a. \nIoT Layer \nIt is nearest to the end-user’s physical setting. Sensors, smart\
    \ cars, drones, \nsmartphones, tablets, and other devices compose this layer.\
    \ Even though some of these \ndevices possess computational capabilities, they\
    \ are used as mere smart sensing devices \nat this layer. Overall, these devices\
    \ are widely distributed geographically to sense and \ntransfer data to the next\
    \ higher layer for the sake of storage and computation. \n \nFigure 8. Typical\
    \ cloud–fog computing architecture. \nb. \nFog Layer \nThis layer comprises numerous\
    \ fog nodes and forms the basis for the fog computing \narchitecture. As per the\
    \ OpenFog Consortium [10], fog nodes may be a physical or logical \nnetwork element\
    \ that enforces fog services. Thus, fog nodes have a direct connection to \nextend\
    \ services to end devices. On the other end, fog nodes are linked to the cloud\
    \ \ninfrastructure to deliver and receive its services and benefits. \nc. \nCloud\
    \ Layer \nThe centralized cloud infrastructure composes the majority of this tier.\
    \ It comprises \nseveral servers with advanced computational and storage capabilities\
    \ offering a variety \nof services. Dissimilar to typical cloud computing architectures,\
    \ the fog model can ease \nthe burden on cloud resources by efficiently transferring\
    \ computational services from the \ncloud layer to fog and enhancing productivity.\
    \ \n2. \nOpenFog N-Tier Architecture \nThe OpenFog Consortium’s recommended N-tier\
    \ architecture [10] is rendered in \nFigure 9. Its primary intent is to offer\
    \ a standard guideline for implementing fog \ncomputing in a given circumstance.\
    \ Though fog systems are deployed in a scenario-\nspecific manner, the core elements\
    \ of the architecture are apparent to every fog \ndeployment. Endpoints (or things),\
    \ fog nodes, and the cloud are the three main \nFigure 8. Typical cloud–fog computing\
    \ architecture.\na.\nIoT Layer\nIt is nearest to the end-user’s physical setting.\
    \ Sensors, smart cars, drones, smart-\nphones, tablets, and other devices compose\
    \ this layer. Even though some of these devices\npossess computational capabilities,\
    \ they are used as mere smart sensing devices at this\nlayer. Overall, these devices\
    \ are widely distributed geographically to sense and transfer\ndata to the next\
    \ higher layer for the sake of storage and computation.\nb.\nFog Layer\nThis layer\
    \ comprises numerous fog nodes and forms the basis for the fog computing\narchitecture.\
    \ As per the OpenFog Consortium [10], fog nodes may be a physical or logical\n\
    network element that enforces fog services. Thus, fog nodes have a direct connection\n\
    to extend services to end devices. On the other end, fog nodes are linked to the\
    \ cloud\ninfrastructure to deliver and receive its services and beneﬁts.\nc.\n\
    Cloud Layer\nThe centralized cloud infrastructure composes the majority of this\
    \ tier. It comprises\nseveral servers with advanced computational and storage\
    \ capabilities offering a variety\nof services. Dissimilar to typical cloud computing\
    \ architectures, the fog model can ease\nthe burden on cloud resources by efﬁciently\
    \ transferring computational services from\nthe cloud layer to fog and enhancing\
    \ productivity.\nSensors 2022, 22, 196\n16 of 38\n2.\nOpenFog N-Tier Architecture\n\
    The OpenFog Consortium’s recommended N-tier architecture [10] is rendered in Figure\
    \ 9.\nIts primary intent is to offer a standard guideline for implementing fog\
    \ computing in a given\ncircumstance. Though fog systems are deployed in a scenario-speciﬁc\
    \ manner, the core\nelements of the architecture are apparent to every fog deployment.\
    \ Endpoints (or things),\nfog nodes, and the cloud are the three main components\
    \ of the idea. In addition, multiple\nlayers of fog nodes (N-tiers) may constitute\
    \ the fog layer; when the nodes are more distant\nfrom the end devices, improving\
    \ computing potential and intelligence are acquired.\n \ncomponents of the idea.\
    \ In addition, multiple layers of fog nodes (N-tiers) may constitute \nthe fog\
    \ layer; when the nodes are more distant from the end devices, improving \ncomputing\
    \ potential and intelligence are acquired. \nThe higher levels of the fog layer\
    \ refine and collect more pertinent data; therefore, \nenhancing intelligence.\
    \ The scenario-specific needs ascertain the number of tiers in a \nparticular\
    \ implementation. Furthermore, fog nodes connected in a mesh on each layer are\
    \ \nadept at providing added characteristics such as fault tolerance, elasticity,\
    \ load balancing, \netc. Thus, the fog nodes may interact both vertically and\
    \ horizontally. \nFog nodes may be categorized based on their closeness to the\
    \ cloud and endpoints: \n• \nLowest tier: with the primary focus on the acquisition,\
    \ normalization, and collection \nof data obtained at the sensors, and the actuators\
    \ are managed by fog nodes. \n• \nIntermediate tier: filtering, compressing, and\
    \ altering data received from the bottom \nlayer is the responsibility of fog\
    \ nodes in the intermediate tier; on average, these \nnodes are better at analyzing\
    \ data. \n• \nHighest tier: aggregating data and eliciting knowledge from it is\
    \ the intent of fog \nnodes at this tier. \n \nFigure 9. N-tier architecture.\
    \ \n3. \nSeven-Layer Architecture \nA fog computing model positioned between the\
    \ cloud layer, and edge devices extend \nservices of processing, network, and\
    \ storage to IoT devices, with the primary intent of \nminimizing latency for\
    \ time-critical applications. The services offered by the fog model \nare limited\
    \ compared to the sophisticated cloud data centers. In line with various fog \n\
    architectures presented by researchers [110,111] with diverse layers, a reference\
    \ \narchitecture comprising distinct layers with designated tasks is featured\
    \ here and \ndepicted in Figure 10. \na. \nPhysical layer \nFigure 9. N-tier architecture.\n\
    The higher levels of the fog layer reﬁne and collect more pertinent data; therefore,\n\
    enhancing intelligence. The scenario-speciﬁc needs ascertain the number of tiers\
    \ in a partic-\nular implementation. Furthermore, fog nodes connected in a mesh\
    \ on each layer are adept\nat providing added characteristics such as fault tolerance,\
    \ elasticity, load balancing, etc.\nThus, the fog nodes may interact both vertically\
    \ and horizontally.\nFog nodes may be categorized based on their closeness to\
    \ the cloud and endpoints:\n•\nLowest tier: with the primary focus on the acquisition,\
    \ normalization, and collection\nof data obtained at the sensors, and the actuators\
    \ are managed by fog nodes.\n•\nIntermediate tier: ﬁltering, compressing, and\
    \ altering data received from the bottom\nlayer is the responsibility of fog nodes\
    \ in the intermediate tier; on average, these nodes\nare better at analyzing data.\n\
    •\nHighest tier: aggregating data and eliciting knowledge from it is the intent\
    \ of fog\nnodes at this tier.\n3.\nSeven-Layer Architecture\nA fog computing model\
    \ positioned between the cloud layer, and edge devices extend\nservices of processing,\
    \ network, and storage to IoT devices, with the primary intent of\nminimizing\
    \ latency for time-critical applications. The services offered by the fog model\n\
    Sensors 2022, 22, 196\n17 of 38\nare limited compared to the sophisticated cloud\
    \ data centers. In line with various fog\narchitectures presented by researchers\
    \ [110,111] with diverse layers, a reference architecture\ncomprising distinct\
    \ layers with designated tasks is featured here and depicted in Figure 10.\n \n\
    An individual device or IoT could be a fog device, server, or gateway. The fog\
    \ server \nentails configuration, computation, and storage capabilities, higher\
    \ comparably in order \nto handle the fog device and gateway. It further pertains\
    \ to hardware configuration, \ndevices it can handle, network connectivity, etc.,\
    \ with its role defining it to be distinct or \nan IoT fragment. A set of virtual\
    \ and physical sensors are attached to the fog device. In \nthe same manner, a\
    \ set of fog devices could be attached to a fog server. A specific group \nof\
    \ fog devices connected to a particular fog server can interact as and when required.\
    \ The \nprocessing has to be performed at multiple fog servers and devices to\
    \ determine a proper \ndecision. The level of fog devices and servers is in charge\
    \ of handling and servicing data \non storage and hardware configuration and connectivity\
    \ for the fog servers and devices. \nThe processing demands of different applications\
    \ are addressed at this layer. \n \nFigure 10. Typical fog computing architectural\
    \ layers. \nc. \nMonitoring layer \nThe system operation, services, resources,\
    \ and responses are tracked by the \nmonitoring layer, which facilitates identifying\
    \ appropriate resources in the midst of the \noperation. If a possibility arises\
    \ for the fog device as well as the fog server where resource \navailability becomes\
    \ negative for processing or storage, assistance from peers may be \nsought. The\
    \ system monitoring unit aids in efficient decision making in such unforeseen\
    \ \nscenarios and resource failure by tracking the present resource consumption,\
    \ usage and \nthen estimating resource demands into the future. The performance\
    \ prediction \nFigure 10. Typical fog computing architectural layers.\na.\nPhysical\
    \ layer\nThe sensors are the devices that serve as the primary data source producing\
    \ diverse\ndata in a fog setting. The data may be from smart devices and homes,\
    \ autonomous vehicles,\nclosed-circuit television (CCTV) monitoring, trafﬁc systems,\
    \ sensors tracking temperature\nand humidity, etc. Alongside physical sensors,\
    \ the physical layer also comprises virtual\nsensors, which also produce data\
    \ as well.\nb.\nFog device, server, and gateway layer\nAn individual device or\
    \ IoT could be a fog device, server, or gateway. The fog server\nentails conﬁguration,\
    \ computation, and storage capabilities, higher comparably in order to\nhandle\
    \ the fog device and gateway. It further pertains to hardware conﬁguration, devices\n\
    it can handle, network connectivity, etc., with its role deﬁning it to be distinct\
    \ or an IoT\nfragment. A set of virtual and physical sensors are attached to the\
    \ fog device. In the same\nmanner, a set of fog devices could be attached to a\
    \ fog server. A speciﬁc group of fog devices\nconnected to a particular fog server\
    \ can interact as and when required. The processing has to\nbe performed at multiple\
    \ fog servers and devices to determine a proper decision. The level\nof fog devices\
    \ and servers is in charge of handling and servicing data on storage and\nhardware\
    \ conﬁguration and connectivity for the fog servers and devices. The processing\n\
    demands of different applications are addressed at this layer.\nc.\nMonitoring\
    \ layer\nThe system operation, services, resources, and responses are tracked\
    \ by the monitoring\nlayer, which facilitates identifying appropriate resources\
    \ in the midst of the operation. If\na possibility arises for the fog device as\
    \ well as the fog server where resource availability\nSensors 2022, 22, 196\n\
    18 of 38\nbecomes negative for processing or storage, assistance from peers may\
    \ be sought. The sys-\ntem monitoring unit aids in efﬁcient decision making in\
    \ such unforeseen scenarios and\nresource failure by tracking the present resource\
    \ consumption, usage and then estimating\nresource demands into the future. The\
    \ performance prediction component tracks and\nforecasts the performance of the\
    \ fog system depending on the resource availability and\nsystem load. This unit\
    \ is necessary to keep up with the relevant Quality of Service (QoS)\ndemands\
    \ in SLA (service level agreements). The occurrence of repeated SLA violations\
    \ may\nincrease system costs due to penalties for the provider. Even though this\
    \ issue cannot be\ncompletely ruled out, SLA violations can be greatly reduced\
    \ if the performance prediction\ncomponent foresees the system’s performance and\
    \ usage.\nd.\nPre- and post-processing layer\nThe multiple components of this\
    \ layer are distinctly concerned with the data analysis\nat the basic as well\
    \ as advanced levels. The data accumulated are subjected to analysis and\nﬁltering\
    \ with trimming alongside a reconstruction performed when needed. Once data\n\
    processing is accomplished, the component called data ﬂow ﬁnalizes the process\
    \ if the data\nhave to be stored locally or in the cloud. Fog computing insists\
    \ on stream processing,\nwhich processes and stores minimum relevant data at the\
    \ edge, as all data generated may\nnot be useful. As per the application, requisite\
    \ data trimming can be performed where\nthe mean value of the data within a minute\
    \ or hour could be stored if the sensor produces\ndata every second. In instances\
    \ where data values do not differ signiﬁcantly over time\nbut tend to affect performance,\
    \ the number of readings taken can be reduced. Though\nperfect accuracy would\
    \ not be achievable, application requisites may be attained. The data\nreconstruction\
    \ module reconstructs the data as per the pattern in which data is generated\n\
    in times of incomplete and faulty data produced by sensors to avoid application\
    \ failure or\nan interruption.\ne.\nStorage layer\nThe storage module is accountable\
    \ for data storage by storage virtualization. The unit\nreferred to as the data\
    \ backup afﬁrms data availability and minimizes data loss caused by\nsystem failure\
    \ by creating a backup of critical data. It also periodically customizes schemes\n\
    of data backups. By storage virtualization, a collection of storage devices functions\
    \ as\na single device, enabling manageability and maintainability; thus, offering\
    \ an enterprise-\nlevel operation, at low-cost hardware and storage.\nf.\nResource\
    \ management layer\nThe resource management layer addresses resource allocation,\
    \ resource scheduling,\nand energy saving. The reliability unit at this layer\
    \ ensures the application of scheduling\nreliability, system reliability, and\
    \ the allocation of resources. Maintaining reliability is\ncritical, as a complex\
    \ fog system encompasses IoT and fog devices alongside the cloud\nwith many failure\
    \ possibilities. The scalability component assures that the fog resources\nare\
    \ scalable when resource demand surges at peak hours. The fog model aspires to\
    \ offer\nhorizontal as well as vertical scalability, while the cloud platform\
    \ ensures horizontal scal-\nability. With distributed resources for processing,\
    \ networking, and storage, the resource\nallocation unit allocates, deallocates,\
    \ and reallocates resources. As multiple applications\nare run concurrently in\
    \ fog systems, the scheduling of applications is managed by the ap-\nplication\
    \ scheduling component. The energy-efﬁcient resource management is handled by\n\
    an energy-saving component at this layer, which reduces operational costs.\ng.\n\
    Security layer\nThe security layer deals with all issues that relate to security,\
    \ such as encrypting\ncommunication, securing stored data, preserving fog users’\
    \ privacy, etc. Similar to cloud\ncomputing, fog computing is deliberated as a\
    \ utility model. As users connect to the cloud\nfor availing services, users also\
    \ connect to the fog system for services; however, the fog\nmiddleware manages\
    \ interactions with the cloud. The provider must authorize the user\nattempting\
    \ the service connection, and the authentication unit authenticates the user’s\n\
    Sensors 2022, 22, 196\n19 of 38\nrequest to avail fog service. To ensure security\
    \ and evade security breaches by intruders,\nevery interaction has to be encrypted.\
    \ The component of encryption encrypts the connection\nbetween IoT devices and\
    \ the cloud. The majority of fog components is connected wirelessly,\nand ensures\
    \ security is critical. Fog systems acting on users’ private data should not reveal\n\
    those without proper user approval. At times where users accept a provider’s security\n\
    policy without reading it, it is critical to assure that user privacy is upheld.\n\
    h.\nApplication Layer\nDespite the fact that fog computing emerged to handle IoT,\
    \ various applications\npertaining to the Wireless Sensor Network (WSN) back fog\
    \ computing. The majority of\nlatency-sensitive applications leverage fog’s utility\
    \ model that delivers a cost-effective and\nenhanced service quality. The systems\
    \ deploying the augmented reality (AR) and virtual\nreality (VR) concepts can\
    \ harness the fog computing attribute of processing in real-time.\nAugmented reality\
    \ adds virtual content into a user’s real-life experience. Virtual reality, on\n\
    the other hand, produces a computer-generated simulation of a virtual world. With\
    \ AR\nand VR reckoned to transform the world in the near future, association with\
    \ fog will ensure\na continued reﬁnement.\n3.12.3. Fog Computing Applications\n\
    Numerous applications, such as smart homes, smart cities, smart grids, smart water\n\
    management, smart transportation, smart agriculture, augmented reality, virtual\
    \ reality,\nsmart healthcare, and smart vehicles, compel the fog framework’s efﬁcient\
    \ services. The fog\ncomputing applications described here are depicted in Figure\
    \ 11.\na.\nSmart grid\nA smart grid extends the reliable, efﬁcient, automated\
    \ electricity distribution model\naiming to cut down operation costs, enhance\
    \ transmission efﬁciency, and offer to smoothly\nintegrate with systems involving\
    \ renewable energy [112]. It further enables service providers\nand consumers\
    \ to track and regulate the real-time price, output, and consumption of\npower\
    \ [113]. The fog systems play a key part in favoring smart grids within smart\
    \ cities,\nminimizing electricity bills. Here, the data produced by the fog devices\
    \ can be locally\nanalyzed and ﬁltered by fog collectors deployed at the edge\
    \ and transmitted to the cloud\nfor complex analysis, visualization, and long-term\
    \ storage [114]. As per varying demands,\nsuch as a low-cost and energy, smart\
    \ grids allow switching over to any other supplies\nof energy, such as solar or\
    \ wind, with edge/fog devices gathering local data to decide\nin real-time [115].\n\
    Sensors 2022, 22, x FOR PEER REVIEW \n20 of 41 \n \nconnected wirelessly, and\
    \ ensures security is critical. Fog systems acting on users’ private \ndata should\
    \ not reveal those without proper user approval. At times where users accept \n\
    a provider’s security policy without reading it, it is critical to assure that\
    \ user privacy is \nupheld. \nh. \nApplication Layer \nDespite the fact that fog\
    \ computing emerged to handle IoT, various applications \npertaining to the Wireless\
    \ Sensor Network (WSN) back fog computing. The majority of \nlatency-sensitive\
    \ applications leverage fog’s utility model that delivers a cost-effective and\
    \ \nenhanced service quality. The systems deploying the augmented reality (AR)\
    \ and virtual \nreality (VR) concepts can harness the fog computing attribute\
    \ of processing in real-time. \nAugmented reality adds virtual content into a\
    \ user’s real-life experience. Virtual reality, \non the other hand, produces\
    \ a computer-generated simulation of a virtual world. With \nAR and VR reckoned\
    \ to transform the world in the near future, association with fog will \nensure\
    \ a continued refinement.  \n3.12.3. Fog Computing Applications \nNumerous applications,\
    \ such as smart homes, smart cities, smart grids, smart water \nmanagement, smart\
    \ transportation, smart agriculture, augmented reality, virtual reality, \nsmart\
    \ healthcare, and smart vehicles, compel the fog framework’s efficient services.\
    \ The \nfog computing applications described here are depicted in Figure 11. \n\
    a. Smart grid \nA smart grid extends the reliable, efficient, automated electricity\
    \ distribution model \naiming to cut down operation costs, enhance transmission\
    \ efficiency, and offer to \nsmoothly integrate with systems involving renewable\
    \ energy [112]. It further enables \nservice providers and consumers to track\
    \ and regulate the real-time price, output, and \nconsumption of power [113].\
    \ The fog systems play a key part in favoring smart grids \nwithin smart cities,\
    \ minimizing electricity bills. Here, the data produced by the fog devices \n\
    can be locally analyzed and filtered by fog collectors deployed at the edge and\
    \ transmitted \nto the cloud for complex analysis, visualization, and long-term\
    \ storage [114]. As per \nvarying demands, such as a low-cost and energy, smart\
    \ grids allow switching over to any \nother supplies of energy, such as solar\
    \ or wind, with edge/fog devices gathering local data \nto decide in real-time\
    \ [115]. \n \nFigure 11. Applications of fog computing. \nb. Smart traffic lights\
    \ and transportation systems \nIn smart traffic light applications, smart traffic\
    \ lights aid in lowering traffic \ncongestion, noise, fuel consumption and avert\
    \ accidents thus, improving the driving \nexperience. These connected lights functioning\
    \ as fog devices are adept at detecting the \nFigure 11. Applications of fog computing.\n\
    b.\nSmart trafﬁc lights and transportation systems\nIn smart trafﬁc light applications,\
    \ smart trafﬁc lights aid in lowering trafﬁc congestion,\nnoise, fuel consumption\
    \ and avert accidents thus, improving the driving experience. These\nSensors 2022,\
    \ 22, 196\n20 of 38\nconnected lights functioning as fog devices are adept at\
    \ detecting the ambulance’s ﬂashing\nlights and changing the trafﬁc signal to\
    \ open lanes for the ambulance to travel through [116].\nIt recognizes pedestrians\
    \ and cyclists and ﬁgures out the speed and distance of vehicles\napproaching\
    \ and collaborates to provide warning messages to adjacent vehicles. Moreover,\n\
    smart lighting is switched on when movement is detected and turned off automatically\n\
    when trafﬁc passes. This system comes handy in averting accidents, maintaining\
    \ low\nand steady trafﬁc, and collecting pertinent data to enhance performance.\
    \ With huge data\nproduced by intelligent transportation systems (ITS), processing\
    \ using centralized model\nresults in large delays. In this sense, fog nodes at\
    \ particular intersections could be utilized\nto analyze data locally and brief\
    \ people on current situations, substantially lessening\nthe delay [117].\nc.\n\
    Augmented reality (AR) and virtual reality (VR)\nAugmented reality overlays digital\
    \ and virtual content into a physical environment. It\nis highly time-critical,\
    \ warranting responses in real-time. Moreover, it is extremely latency-\nintolerant,\
    \ as even a minor delay may impact user experience, effectuating a negative\n\
    response [116]. For this reason, fog computing has the potential to become a key\
    \ player\nin the augmented reality domain, as computer-intensive jobs can be ofﬂoaded\
    \ to nearby\nfog devices. This also holds true for the virtual reality (VR) ﬁeld,\
    \ which offers real-world\nexperience through a simulated environment and is generated\
    \ by computer technology.\nd.\nSmart healthcare system\nWhen distant cloud servers\
    \ are used to process and store enormous healthcare data\ngenerated from sensors,\
    \ the huge data transmission, deﬁning of location, and access latency\npose critical\
    \ challenges [118,119]. As healthcare datasets increase, there is a higher possi-\n\
    bility of error occurrence during processing as well as transmission. Even a minute\
    \ data\nanalysis error may instigate the administering of an inappropriate treatment\
    \ that could cost\na human life. The patient health data is sensitive; hence,\
    \ security and privacy preservation\nare vital. The integration of fog computing\
    \ into healthcare enhances efﬁciency and quality\nas the computer and storage\
    \ are provided nearer to end devices, which permits aggregation,\nprocessing,\
    \ local storage, and real-time analytics. It further displayed a low latency,\
    \ mobil-\nity support, privacy, and location awareness, and experiments demonstrated\
    \ an enhanced\nsystem response time along with an improvement in energy consumption\
    \ [120].\ne.\nSmart agriculture\nAs agriculture caters to the food supply chain,\
    \ it plays a prime role in smart city\nschemes [121]. With smart agriculture,\
    \ sensors installed in ﬁeld vehicles gather data\non plant growth and ﬁeld climate\
    \ conditions. Moreover, the ﬁeld can be sensed from\nthe sky using air balloons.\
    \ These sensing activities can be effectively accomplished by fog\ncomputing,\
    \ and agricultural lands can be managed and tracked through sensor nodes’\nalarm\
    \ notiﬁcations.\nf.\nSmart water management\nAs far as sustainable smart cities\
    \ are concerned, smart water management is crucial. It\nsupervises the quantity\
    \ of water consumed, transported and anticipates the use of water\nin the future.\
    \ Above all, it enhances the water system of the city to be more reliable,\nsustainable,\
    \ and efﬁcient, as it assists in mitigating water loss using sensors that collect\
    \ and\nanalyze data of the water system [121].\n4. Challenges and Opportunities\n\
    Despite the fact that cloud computing has been around for a long time, it still\
    \ confronts\nproblems. Cloud security, privacy, conﬁdentiality, availability [122],\
    \ and sustainability [123]\nare among them. The dependability of cloud services\
    \ is an issue as well; when a limited\nnumber of data centers offer critical functions,\
    \ it might be disastrous if one of the data\ncenters goes down [124]. Cloud data\
    \ centers require immense energy to operate, which\nSensors 2022, 22, 196\n21\
    \ of 38\nrequires mitigating energy usage by resource provision optimization policies.\
    \ The cloud\nnetworking infrastructure faces challenges pertaining to network\
    \ utilization, data conges-\ntion, cloud federation [125], etc. As the IoT devices\
    \ arrived, an emphasis was placed on\nreducing energy and resource usage, and\
    \ critical difﬁculties included increasing the battery\nlife or optimizing the\
    \ energy utilization of smart devices [126]. The security of IoT devices\nand\
    \ withholding the privacy of sensitive data collected by the connected devices\
    \ pose\nunique challenges [127]. The availability, reliability, scalability, and\
    \ interoperability of IoT\nnetworks are labelled to be challenging.\nEdge computing,\
    \ which moves computation to the network’s edge, poses a number of\ncomplications,\
    \ such as focusing on the programmability of edge devices, naming schemes\nfor\
    \ a large number of edge devices, including security, privacy, data abstraction,\
    \ service\nmanagement, and optimization issues [41]. With fog computing still\
    \ in its developmental\nstage, it faces many open challenges. It has difﬁculties\
    \ similar to edge computing due to\nits correlations, and the notable challenges\
    \ include programmability, managing heteroge-\nneous systems, providing security,\
    \ interoperability, mobility, scalability, federation, and\nenergy/resource efﬁciency\
    \ [20,128].\nFog computing is a more generic model compared to related paradigms\
    \ due to the far-\nreaching scope and presence in the Thing-to-Cloud continuum.\
    \ The comparison and\nfeatures of the fog, edge and cloud [2,129–131] are displayed\
    \ in Tables 3 and 4. The associa-\ntion between cloud, edge, and fog computing\
    \ [132] is shown in Figure 12. Fog computing\nis imminent of offering amelioration\
    \ in the near future in an open-standards setting of\nconnected devices, apparent\
    \ when the IEEE Standard adopted the Open-Fog Reference\nArchitecture [133]. Hence,\
    \ our cynosure for the rest of the paper is on challenges and future\nresearch\
    \ directions pertaining to fog computing.\nSensors 2022, 22, x FOR PEER REVIEW\
    \ \n22 of 41 \n \n \noperate, which requires mitigating energy usage by resource\
    \ provision optimization \npolicies. The cloud networking infrastructure faces\
    \ challenges pertaining to network \nutilization, data congestion, cloud federation\
    \ [125], etc. As the IoT devices arrived, an \nemphasis was placed on reducing\
    \ energy and resource usage, and critical difficulties \nincluded increasing the\
    \ battery life or optimizing the energy utilization of smart devices \n[126].\
    \ The security of IoT devices and withholding the privacy of sensitive data collected\
    \ \nby the connected devices pose unique challenges [127]. The availability, reliability,\
    \ \nscalability, and interoperability of IoT networks are labelled to be challenging.\
    \ \nEdge computing, which moves computation to the network’s edge, poses a number\
    \ \nof complications, such as focusing on the programmability of edge devices,\
    \ naming \nschemes for a large number of edge devices, including security, privacy,\
    \ data abstraction, \nservice management, and optimization issues [41]. With fog\
    \ computing still in its \ndevelopmental stage, it faces many open challenges.\
    \ It has difficulties similar to edge \ncomputing due to its correlations, and\
    \ the notable challenges include programmability, \nmanaging heterogeneous systems,\
    \ providing security, interoperability, mobility, \nscalability, federation, and\
    \ energy/resource efficiency [20,128]. \nFog computing is a more generic model\
    \ compared to related paradigms due to the \nfar-reaching scope and presence in\
    \ the Thing-to-Cloud continuum. The comparison and \nfeatures of the fog, edge\
    \ and cloud [2,129–131] are displayed in Tables 3 and 4. The \nassociation between\
    \ cloud, edge, and fog computing [132] is shown in Figure 12. Fog \ncomputing\
    \ is imminent of offering amelioration in the near future in an open-standards\
    \ \nsetting of connected devices, apparent when the IEEE Standard adopted the\
    \ Open-Fog \nReference Architecture [133]. Hence, our cynosure for the rest of\
    \ the paper is on challenges \nand future research directions pertaining to fog\
    \ computing. \n \nFigure 12. Cloud, fog, and edge computing alliance. \nTable\
    \ 3. Comparison of fog, edge and cloud computing characteristics. \nCharacteristic\
    \ \nFog \nEdge \nCloud \nOperators \nUsers and cloud provider \nLocal enterprise\
    \ or network \ninfrastructure providers \nCloud provider \nParticipating Nodes\
    \ \nFog devices (switches,  \nEdge devices \nFewer nodes spanning cloud \nto IoT\
    \ devices \nFigure 12. Cloud, fog, and edge computing alliance.\nSensors 2022,\
    \ 22, 196\n22 of 38\nTable 3. Comparison of fog, edge and cloud computing characteristics.\n\
    Characteristic\nFog\nEdge\nCloud\nOperators\nUsers and cloud provider\nLocal enterprise\
    \ or network\ninfrastructure providers\nCloud provider\nParticipating Nodes\n\
    Fog devices (switches,\nrouters, access points, etc.) and IoT devices\nEdge devices\n\
    Fewer nodes spanning cloud to IoT\ndevices\nService Type\nLess global\nLocal\n\
    Global\nManagement\nDistributed/centralized\nLocal business and service provider\n\
    Centralized\nHardware\nDevices with virtualization facility (access\npoints, routers,\
    \ switches, servers)\nEdge devices with compute capacity\nMassive data centers\
    \ and equipment\nwith virtualization potential\nComputation Device\nAny device\
    \ capable of\ncomputation, networking, and storage\nEdge devices\nPowerful cloud\
    \ servers\nAvailable Computing\nResources\nModerate\nModerate\nHigh\nNature of\
    \ Failure\nHighly diverse\nHighly diverse\nPredictable\nMain Driver\nAcademia/\
    \ Industry\nAcademia/industry\nAcademia/industry\nUser Connectivity\nMostly wireless\n\
    Mostly wireless\nHigh speed (Both wired and wireless)\nDistance from Users\nRelatively\
    \ close\nClose\nFar\nInternal Connectivity\nOperate autonomously with intermittent\n\
    or no internet connectivity\nOperate autonomously with\nintermittent or no internet\n\
    connectivity\nRequires internet connectivity\nthroughout service duration\nMain\n\
    Standardization\nEntity\nOpenFog Consortium, IEEE\n-\nNational Institute of Standards\
    \ and\nTechnology (NIST), Cloud Security\nAlliance (CSA), Distributed\nManagement\
    \ Task Force (DMFT),\nOpen Commons Consortium (OCC),\nGlobal Inter-Cloud Technology\
    \ Forum\n(GICTF)\nPower Source\nBattery/green energy/\ndirect power\nBattery/green\
    \ energy/direct power\nDirect power\nPower Consumption\nLow\nLow\nHigh\nApplication\
    \ Type\nHigh computation with lower latency\nLow latency computation\nAmple computation\n\
    Architecture\nDecentralized/hierarchical\nLocalized/distributed\nCentralized/hierarchical\n\
    Computation Capacity\nModerate\nModerate\nHigh\nStorage Capacity\nLimited\nLimited\n\
    Massive storage capacity\nAvailability\nHigh\nAverage\nHigh\nLatency\nLow\nLow\n\
    Relatively high\nNode mobility\nHigh\nHigh\nVery low\nSecurity/Vulnerability\n\
    Must be provided on\nparticipant nodes\nMust be provided on edge devices\nMust\
    \ be provided along\nCloud-to-Things continuum\nServer Location\nCan be deployed\
    \ at edge or dedicated\nlocations\nNear edge devices\nStationed in huge\ndedicated\
    \ buildings\nNumber of\nIntermediate Hops\nOne/few\nOne\nMultiple\nHardware\n\
    Connectivity\nWAN, LAN, WLAN, Wi-Fi, cellular\nWAN, LAN, WLAN, Wi-Fi___33,\ncellular,\
    \ ZigBee\nWAN\nApplication Handling—real-time\nAchievable\nAchievable\nDifﬁcult\
    \ owing to\nincreased latency\nService Access\nThrough connected devices from\
    \ the edge\nto the core\nAt the edge of the internet\nThrough core\nComputation\
    \ Cost\nLow\nLow\nHigh\nCooling Cost\nVery low\nVery low\nHigh\nDeployment Space\n\
    Less\nLess\nMassive\nDelay Cost\nLess\nLess\nMore\nTable 4. Fog, edge, and cloud\
    \ computing functionalities.\nFeature\nFog\nEdge\nCloud\nHeterogeneity support\n\
    Yes\nYes\nYes\nConnection to cloud\nYes\nYes or No\nYes\nInfrastructure need\n\
    Yes\nYes\nYes\nGeographically distributed\nYes\nYes\nNo\nVirtualization technology\n\
    Yes\nNo\nYes\nLocation awareness\nYes\nYes\nNo\nUltra-low latency\nYes\nYes\n\
    No\nScalability\nYes\nYes\nYes\nMobility support\nYes\nYes\nNo\nApplication support—real-time\n\
    Yes\nYes\nNo\nApplication support—large-scale\nYes\nYes\nYes\nStandardized\nYes\n\
    Yes\nYes\nMultiple IoT applications\nYes\nNo\nYes\nData persistence\nYes\nNo\n\
    Yes\nComputation migration\nYes\nNo\nNo\nConserving energy\nYes\nYes\nNo\nSensors\
    \ 2022, 22, 196\n23 of 38\n4.1. Fog Computing: Open Challenges\nThe fog computing\
    \ paradigm has evolved from the cloud computing utility model.\nWith IoT proliferation,\
    \ computations closer to the network edge signiﬁcantly minimize\nthe cost of computing\
    \ and data ofﬂoading at the cloud. However, processing at the edge\nposes numerous\
    \ challenges pertaining to devices, security, the network, integrating fog,\n\
    and IoT, which the distributed fog system has to deal with [28,44,110]. The open\
    \ challenges\nidentiﬁed are pictured in Figure 13.\n•\nStandards and programming\
    \ languages\nThe fog structure is distinct from the cloud as it extends cloud\
    \ services to end-user\ndevices, warranting upgraded standards and associated\
    \ programming languages, along\nwith effective user interfaces and network protocols\
    \ for IoT device management.\n•\nScalability\nScalability is a key issue for systems\
    \ involving extensive IoT applications on fog, and\nexploring optimal algorithms\
    \ that illustrate the fog system’s complexity would be valuable.\nIn the fog model,\
    \ time-critical tasks are executed at the fog, and others are moved for\nprocessing\
    \ to the cloud. Ascertaining when fog resources are utilized optimally depending\n\
    on service type, user count, and resource availability are signiﬁcant.\n•\nComputational\
    \ challenges\nThe Fog system continually interacts with the cloud servers. It\
    \ intends to respond\nto users within a stipulated duration and forward complex\
    \ computer-intensive tasks to\nthe cloud, which may take longer. The parts of\
    \ computation that are unrestricted by\nresponse time are sent to the cloud, while\
    \ others are carried out at the edge for a minimum\ncomputational cost. The challenge\
    \ lies with ﬁguring out which computer tasks are to be\nexecuted at the edge and\
    \ ofﬂoaded to the cloud.\n•\nDeployment challenges\nThe fog system has to be precisely\
    \ deployed to subdue latency. Factors such as\nthe type and task amount performed\
    \ at a particular tier, fog device capability, and reliability,\nand the number\
    \ of sensors determine implementation decisions. As per the application\nrequirements,\
    \ resource scaling, as well as shrinking, are carried out without hindering\n\
    the operation of ongoing services. OpenFog recommends the N-tier fog model from\
    \ s\nmobilization viewpoint; however, escalating the fog layer levels may instigate\
    \ delays,\nwhich require deﬁning the number of levels for the speciﬁc application.\n\
    •\nDecentralized framework and failure management\nThe decentralized fog entails\
    \ a high likeliness of fog device malfunction relating to\nthe software, hardware,\
    \ power source, mobility, as well as connectivity issues considering\nan unreliable\
    \ wireless connection, linking the majority of fog devices. The fog system is\n\
    adaptable to a minor disruption and resource shortage. The fog node failure may\
    \ make\nits respective virtualized resources unavailable, and related issues,\
    \ such as latency and\nmigration, have to be dealt with for resource availability\
    \ at downtime. The decentral-\nized fog results in the repetition of code at edge\
    \ devices, and this redundancy has to\nbe checked. The random distribution of\
    \ network resources at the edge complicates con-\nnectivity, which can be rectiﬁed\
    \ by deploying a middleware that manages resources to\nthe demanding application.\
    \ The small client services are disseminated from the cloud\nto the edge, and\
    \ acquiring such services from fog systems is quite challenging. The fog\nsystem\
    \ manages billions of IoT devices; hence, provisioning services to all fog devices\n\
    is arduous. The portability of the fog’s edge node requisites ubiquitous fog computing.\n\
    With fog being distributed, the preciseness of computation needs to be conﬁrmed\
    \ as its\napplications demand consistency.\nSensors 2022, 22, 196\n24 of 38\n\
    \ \nconnectivity, which can be rectified by deploying a middleware that manages\
    \ resources \nto the demanding application. The small client services are disseminated\
    \ from the cloud \nto the edge, and acquiring such services from fog systems is\
    \ quite challenging. The fog \nsystem manages billions of IoT devices; hence,\
    \ provisioning services to all fog devices is \narduous. The portability of the\
    \ fog’s edge node requisites ubiquitous fog computing. With \nfog being distributed,\
    \ the preciseness of computation needs to be confirmed as its \napplications demand\
    \ consistency. \n \nFigure 13. Fog computing—open challenges. \n• \nDevice heterogeneity\
    \ and resource management \nFog computing sets the stage for numerous heterogeneous\
    \ technologies to offer IoT \nservices with a key challenge of linking resources\
    \ from diverse platforms. It is vital to \nexamine algorithms that are competent\
    \ at handling scheduling, synchronizing for the \neffective utilization of IoT\
    \ devices that are short on resources. The diversified nature of \nedge devices\
    \ has to be emphasized by the fog architecture at the device as well as the \n\
    network levels. Utilizing heterogeneous devices in a diverse fog setting with\
    \ varying \napplication demands is strenuous. Numerous IoT devices from diverse\
    \ hardware and \nFigure 13. Fog computing—open challenges.\n•\nDevice heterogeneity\
    \ and resource management\nFog computing sets the stage for numerous heterogeneous\
    \ technologies to offer IoT\nservices with a key challenge of linking resources\
    \ from diverse platforms. It is vital to exam-\nine algorithms that are competent\
    \ at handling scheduling, synchronizing for the effective\nutilization of IoT\
    \ devices that are short on resources. The diversified nature of edge devices\n\
    has to be emphasized by the fog architecture at the device as well as the network\
    \ levels.\nUtilizing heterogeneous devices in a diverse fog setting with varying\
    \ application demands\nis strenuous. Numerous IoT devices from diverse hardware\
    \ and software vendors add to\nthe complexity factor. When the edge lacks computational\
    \ resources, it can be acquired and\nassigned from among the fog nodes setting\
    \ up a common pool of computing, network, and\nstorage resources, availed by applications\
    \ as per demand. The heterogeneity of fog devices\nand resources in the dynamic\
    \ fog setting enables resource scheduling and allocation to be\nmore challenging\
    \ than that of the cloud, with utilizing idle resources being fog’s top priority.\n\
    •\nSecurity and privacy\nThe heterogeneity of devices makes the fog framework\
    \ vulnerable to various attacks\ndue to its deployment in a not-so-secure setting.\
    \ As fog nodes are positioned between\nthe cloud and end-users, fog computing\
    \ is susceptible to security issues. Assuring the pri-\nvacy of sensitive data\
    \ originating from sensors is critical. The fog-based Distributed Denial\nof Service\
    \ (DDoS) attack is highly destructive, as diverse malignant devices overwhelm\n\
    resource-limited end devices with fake service requests. Another such attack is\
    \ the Man-in-\nthe-Middle Attack (MMA), which discloses sensitive private data.\
    \ The physical components\nof IoT devices can also be attacked, referred to as\
    \ a physical attack based on the protection\nlevel and implemented location.\n\
    •\nQoS\nThe fog framework encompasses devices from the cloud to the edge, and\
    \ the fog nodes\nare to provide end-to-end services adhering to users’ service-speciﬁc\
    \ QoS features. The fog\nsystem is entitled to manage the distribution of computing\
    \ and storage to the cloud while\norchestrating heterogeneous edge devices. Hence,\
    \ it is necessary to dynamically integrate\ncloud servers and fog devices.\n•\n\
    Blockchain and Software-Deﬁned Networking (SDN)\nSensors 2022, 22, 196\n25 of\
    \ 38\nIn fog-based IoT settings, blockchain technology can provide a secure framework\
    \ for\ncontrolling data and information exchanges amongst independently operating\
    \ devices.\nTo improve privacy and security, blockchain offers the safe transmission\
    \ and storage of\ndigitally signed documents. As a result, an additional study\
    \ into this technology is critical\nin order to offer and improve methods for\
    \ securely transmitting data between IoT devices,\nutilizing a trustworthy approach\
    \ such as a time-stamped contractual handshake.\nFurthermore, Software Deﬁned\
    \ Networking (SDN) is a networking technology that\nmay be used in conjunction\
    \ with fog technology to enable effective data exchange and\nresource collaboration.\
    \ SDN may also bring intelligence to fog-based IoT networks, among\nother things.\
    \ SDN may also be utilized to protect fog-based IoT infrastructures. The authors,\n\
    for example, developed a hybrid network design for smart cities that included\
    \ SDN with\nblockchain. As a result, research into SDN and its integration with\
    \ blockchain would be\nhelpful in providing an efﬁcient architecture for sustainable\
    \ smart cities.\n•\nLatency management\nLatency control is required in fog computing\
    \ to guarantee an acceptable level of Quality\nof Service. As a result, research\
    \ into various latency management techniques would aid\nin delivering services\
    \ with the least amount of delay and ensuring a higher QoS throughout\nthe system.\
    \ The estimate of resources is another key topic in fog computing. It aids\nin\
    \ allocating computing resources depending on various policies, allowing for the\
    \ correct\nallocation of resources for future computation. In order to attain\
    \ the necessary QoS,\na comprehensive study into various resource estimate policies\
    \ in terms of multiple aspects\nsuch as user attributes and experienced Quality\
    \ of Experience (QoE) would be useful.\n•\nSustainability\nIn order to reduce\
    \ the total carbon footprint, sustainability which refers to the utiliza-\ntion\
    \ of renewable energy supplies, energy harvesting, and energy-efﬁcient architecture,\n\
    is a crucial necessity when building fog-based IoT architectures for smart cities.\
    \ Dense\nIoT end-devices and fog computing servers are predicted in smart cities.\
    \ As a result,\nthe smart city infrastructure would suffer considerable energy\
    \ constraints. As a result, it is\ncritical to research various methods for increasing\
    \ the energy efﬁciency of fog-based IoT\nsystems without sacriﬁcing QoS, which\
    \ could be accomplished through energy-efﬁcient\ncaching methods.\n•\nInteroperability\
    \ and federation of fog\nAnother essential prerequisite for accomplishing the\
    \ goal of a fog-based IoT and sus-\ntainable smart cities becoming a reality is\
    \ interoperability. Because of the large number of\nheterogeneous IoT devices\
    \ running on multiple protocols, the interoperability of fog-based\nIoT systems\
    \ in sustainable smart cities is difficult. The fog-based IoT architecture should\n\
    provide interoperability so that various systems and devices can correctly comprehend\
    \ and\nuse each other’s functionalities. On that account, intense research efforts\
    \ are recommended\nto create frameworks that allow interoperability for fog-based\
    \ IoT systems in sustainable\nsmart cities.\nOn the fog, requests are processed\
    \ at proximity, mitigating latency. If numerous\nlatency-sensitive applications\
    \ were to request services, the interoperability of the Fog\nclusters and its\
    \ servers along with federation would be required so that a fog device can\nrequest\
    \ its peers to manage processing to avoid cloud involvement that increases latency.\n\
    •\nPower management\nFog nodes manage innumerable end devices, as in sensors,\
    \ and when fog nodes\nare employed as needed, they substantially multiply active\
    \ nodes, increasing the whole\nsystem’s power consumption. Hence, power has to\
    \ be managed effectively in large fog sys-\ntems. One such option to study would\
    \ be integrating the fog nodes in speciﬁc applications\nand moving tasks among\
    \ nodes. The majority of fog devices are power-constrained, and\nefﬁcient energy\
    \ utilization is essential.\nSensors 2022, 22, 196\n26 of 38\nTable 5 furnishes\
    \ the summary of open issues and potential solutions concerned with\nfog computing.\n\
    Table 5. Open challenges and future research directions—summary.\nOpen Issue\n\
    Limitations\nPrevalent\nPotential Solutions or\nResearch Prospect\nRelated\nSpeciﬁcs\n\
    Impact\nStandardization of\nfog computing\nSeveral fog deﬁnitions and related\n\
    concepts are being proposed.\nFormulate fog deﬁnition that can be\nuniversally\
    \ accepted.\nFoundation\nStandards and\nDeﬁnition\nScalability\nMajor fog system\
    \ schemes in practice fail\nto scale IoT vastitude.\nDesign algorithms and procedures\
    \ that ensure\nscalability.\nScalability\nPlacement; Service\nProvisioning;\n\
    Scheduling; Load\nBalancing;\nOfﬂoading\nBandwidth-aware\nsystem\nAlthough reducing\
    \ bandwidth usage is\nkey, fewer fog computing regard\nconserving bandwidth through\
    \ fog\nsystems.\nDeliberate on saving bandwidth through fog\nsystems and measure\
    \ bandwidth usage under\nfog systems.\nBandwidth\nTestbeds and\nExperiments; Control\n\
    and Monitoring;\nInfrastructure Design\nSLA for fog\nsystem\nSLAs for cloud system\
    \ are deﬁned, but\nSLAs for fog systems are not deﬁned.\nDevise new SLA compatible\
    \ for fog\ncomputing systems that supports\nmulti-vendors.\nCost, QoS\nFog Infrastructure;\n\
    Control and\nMonitoring\nMobility\nMajor existing work considers ﬁxed fog\nnodes\
    \ and mobile IoT devices.\nPropose fog systems with mobile fog nodes\nand design\
    \ suitable task ofﬂoading and\nscheduling plans ensuring availability to IoT\n\
    nodes.\nMobility,\nManagement\nConcepts and\nFramework; Security\nand Privacy;\n\
    Scheduling, Load\nBalancing and\nOfﬂoading\nFog node site\nselection\nThe issue\
    \ of site selection for fog node is\nhighlighted by limited studies.\nThe placing\
    \ of fog servers at appropriate\npositions is crucial to offer maximum\nservice.\
    \ Analysis of demand and\nworkload of a speciﬁc node prior to\nplacement minimizes\
    \ maintenance cost.\nDevise site selection policies for fog nodes,\naddressing\
    \ computation, communication,\nstorage, and cost.\nQoS, Cost, RAS\nResource Analysis\
    \ and\nEstimation;\nInfrastructure Design\nSDN support\nFog computing does not\
    \ provide native\nsupport to SDN.\nImproving and standardizing SDN for fog\nsystems.\n\
    Programmability\nSoftware and Tools;\nDeﬁnition and\nStandards\nResource\nMonitoring\n\
    Fog resource monitoring is addressed by\nvery few studies.\nFormulate procedures\
    \ that monitor resources\nof fog systems involving multi-operators.\nManagement,\n\
    Programmability\nSoftware and Tools;\nControl and\nMonitoring\nHigh-speed user\n\
    support\nExisting communication protocols do not\nassist high-speed users.\nDevelop\
    \ protocols supporting high-speed\nusers and mobility-predicting algorithms\n\
    based on machine learning.\nMobility\nArchitecture and\nFramework\nFederation\n\
    Federation schemes or application for fog\nis unavailable.\nFormulate new fog\
    \ node federation strategy\noperating across diverse domains.\nProgrammability,\n\
    Management\nSoftware and Tools\nFog node\nsecurity\nThe fog nodes positioned at\
    \ proximity of\nend user incites security challenge.\nConﬁgure secure fog nodes\
    \ with robust access\ncontrol policies that handle site attacks and\nsecure hardware\
    \ design to withstand physical\ndamage.\nSecurity, Device\nHeterogeneity\nSecurity\
    \ and Privacy;\nHardware Design\nTrust and\nauthentication\nHeterogeneous IoT\
    \ nodes and fog nodes\nmake the traditional authentication and\ntrust strategies\
    \ inept. The providers of\nfog service may be internet service\nprovider, cloud\
    \ vendor, or end-users,\nwhich jeopardizes the trust in fog.\nDesign of novel\
    \ trust and authentication\nstructure for user, service, and nodes is\nneedful.\n\
    Heterogeneity,\nSecurity\nSecurity and Privacy;\nDeﬁnition and\nStandards\nSecurity\
    \ for fog\nofﬂoading\nFog node task ofﬂoading may lead to\nsecurity and privacy\
    \ concern.\nDevise secure ofﬂoading technique and\nintegrity, correctness checking\
    \ scheme for task\nofﬂoaded.\nSecurity, QoS\nOfﬂoading, Security,\nand Privacy\n\
    Privacy\nWith various networks involved and fog\noperating predominantly on wireless\n\
    technology, privacy issues arise. The end\nuser can access numerous fog nodes\n\
    which involves sensitive data.\nMaintaining the privacy of sensitive personal\n\
    data is vital.\nPrivacy\nPrivacy and Security\nFlexibility\nFault or failure at\
    \ network is not\nregarded by existing fog networks, with\nfog nodes being more\
    \ prone to DoS\nattacks due to limited resources.\nRegard fault prevention, detection,\
    \ and\nrecovery in fog networks and design\nDoS-resilient fog system.\nSecurity\n\
    Security and Privacy;\nInfrastructure Design;\nControl and\nMonitoring\nGreen\
    \ fog\ncomputing\nEnhancing energy efﬁciency of overall\nfog system has to be\
    \ deliberate.\nUtilize battery storages and energy harvesting\nfor IoT sensors\
    \ and devices and place fog\nnodes near renewable energy sources.\nEnergy\nResource\
    \ analysis,\nEstimation;\nInfrastructure Design\nEnergy\nconsumption\nWith huge\
    \ number of fog nodes, energy\nconsumed is large. The energy demand\nof fog nodes\
    \ should be reduced to\nmitigate cost and energy.\nDevice resource provisioning\
    \ strategy that is\nenergy efﬁcient, while being aware of fog\nnode positions.\n\
    Energy\nResource Analysis,\nEstimation;\nInfrastructure Design\nMulti-objective\n\
    design\nMany existent schemes reckon certain\nobjectives and overlook other objectives.\n\
    Propound schemes that regard multiple\nobjectives concurrently (task ofﬂoad strategy\n\
    that deems availability, bandwidth, energy,\nand security).\nQoS\nScheduling,\
    \ Load\nBalancing, and\nOfﬂoading; Resource\nAnalysis and\nEstimation; Testbeds\n\
    and Experiments\nSensors 2022, 22, 196\n27 of 38\n4.2. Future Prospects of Fog/Edge\
    \ Computing\nThe technological possibilities that may lead fog/edge computing\
    \ paradigms into\nthe future are portrayed in Figure 14 and detailed as follows:\n\
    -objective \nn \nMany existent schemes \nreckon certain objectives and \noverlook\
    \ other objectives. \nPropound schemes that regard \nmultiple objectives concurrently\
    \ \n(task offload strategy that deems \navailability, bandwidth, energy, and \n\
    security). \nQoS \nBalancing, and \nOffloading; \nResource Analysis \nand Estimation;\
    \ \nTestbeds and \nExperiments \n4.2. Future Prospects of Fog/Edge computing \n\
    The technological possibilities that may lead fog/edge computing paradigms into\
    \ the \nfuture are portrayed in Figure 14 and detailed as follows: \n \nFigure\
    \ 14. Future opportunities—fog computing and other evolving computing paradigms.\
    \ \n4.2.1. Big Data Analytics \nThe proliferation of the ubiquitous IoT has led\
    \ up to an overwhelmingly immense \namount of data generation, inferred as big\
    \ data [134]. Big data entails ever-expanding \ndatasets, which are heterogeneous\
    \ in nature, comprising of structured, semi-structured, \nand unstructured data\
    \ [135]. It garners potential for opportunities as well as challenges, \nincluding\
    \ the five Vs [136]. Thus, big data analytics is a promising solution that processes\
    \ \nthe humongous big data and transforms it into smart data, imparting actionable\
    \ insights \ninto making data-driven decisions [137]. The key feature of fog computing\
    \ and edge \nFigure 14. Future opportunities—fog computing and other evolving\
    \ computing paradigms.\n4.2.1. Big Data Analytics\nThe proliferation of the ubiquitous\
    \ IoT has led up to an overwhelmingly immense\namount of data generation, inferred\
    \ as big data [134]. Big data entails ever-expanding\ndatasets, which are heterogeneous\
    \ in nature, comprising of structured, semi-structured,\nand unstructured data\
    \ [135]. It garners potential for opportunities as well as challenges,\nincluding\
    \ the ﬁve Vs [136]. Thus, big data analytics is a promising solution that processes\n\
    the humongous big data and transforms it into smart data, imparting actionable\
    \ insights\ninto making data-driven decisions [137]. The key feature of fog computing\
    \ and edge\ncomputing models is the potential to quickly store and process data,\
    \ beneﬁting real-time\napplications and playing a crucial part in efﬁcient business\
    \ operations [138,139].\n4.2.2. Serverless Computing\nServerless computing facilitates\
    \ an easy and hastier IoT application development\nby eliminating the need to\
    \ manage a real infrastructure [140]. It is also referred to as\nthe Function-as-a-Service\
    \ (FaaS), implementing code as independent functions through\ndynamic resource\
    \ provisioning, which enhances the runtime infrastructure scalability [141,\n\
    142]. Integrating serverless computing to the edge computing model increases the\
    \ com-\nputation speed of data generated and processed by IoT applications deployed\
    \ on edge\ndevices [143]. As individual functions are executed on edge devices,\
    \ the response time,\nlatency, and energy consumed is decreased, and the reliability\
    \ is improved.\n4.2.3. Blockchain\nBlockchain is a novel concept to store data\
    \ as a chain of blocks to enhance data\nsecurity [144]. It is a super-secure method\
    \ to store, authenticate, and protect data, which\npromotes trusted transactions.\
    \ Blockchain usually revolves around securing cryptocurrency\nwith real potential\
    \ being transparent and immutable. It utilizes the distributed ledger\nmodel to\
    \ secure transactions and is decentralized in nature, providing accurate and efﬁcient\n\
    transactions, evading intermediaries. Blockchain is engaged in offering services\
    \ pertaining\nto ﬁnance, voting, supply chain monitoring, and smart contracts.\
    \ It can be deployed to\nsecure data generated by IoT applications [145,146].\n\
    4.2.4. Quantum Computing\nThe emerging ﬁeld of quantum computing extends a substantial\
    \ computational lead\nover classical computing by leveraging the quantum physics\
    \ principles of entanglement\nSensors 2022, 22, 196\n28 of 38\nand superposition\
    \ [147]. With unimaginably swift quantum computers, calculations are\nperformed\
    \ and stored using quantum bits referred to as qubits, which allows number\ncrunching\
    \ and problem-solving at an exponential scale. Seemingly unsolvable complex\n\
    tasks, predicting viable solutions to issues, and the processing of a massive\
    \ amount of\ndata can be handled with absolute ease by quantum computers. They\
    \ can further enhance\ncomputational efﬁciency, security, and energy efﬁciency\
    \ [148]. Quantum computing can\nbe combined with ML and DL techniques to predict\
    \ the resource demand and handle\nan efﬁcient resource and energy utilization\
    \ at fog and edge layers [149,150]. Quantum\ncomputing is in its budding stage,\
    \ with research efforts underway at an accelerating\npace [148].\n4.2.5. Software-Deﬁned\
    \ Networking\nSoftware-Deﬁned Networking is an upcoming paradigm that overcomes\
    \ the verti-\ncal integration issue by separating the control logic of the network\
    \ from the underlying\nswitches and routers, enabling a logical network control\
    \ centralization [151]. It makes it\nsimpler to manage a ﬂexible and reliable\
    \ network, introduces new networking abstrac-\ntions, and leads to network evolution.\
    \ SDN overcomes conventional network issues by\nenhancing the virtualization,\
    \ security, energy efﬁciency, and network reliability, optimizing\nthe network\
    \ topology, managing complexity, service orchestration-beneﬁtting fog, and\nedge\
    \ computing [152,153].\n4.2.6. Artiﬁcial Intelligence (AI)\nArtiﬁcial intelligence\
    \ is a key ﬁeld of computer science, where machines mimic human\nintelligence/behavior\
    \ and is already transforming the world. The accelerating ability\nof machines\
    \ to learn and act smart is gearing up to drive even more businesses and\ntechnologies.\
    \ AI, collectively with its subﬁelds of machine learning and deep learning,\n\
    help businesses save cost, enrich customer experience, communicate effectively,\
    \ streamline\nworkﬂows, and obtain insights for better decisions. ML is the ability\
    \ of a machine to learn\nwithout involving explicit programming. It can analyze\
    \ huge datasets and offer actionable\ninsights. DL, which is a subset of ML, is\
    \ capable of handling complex computational tasks.\nAI has begun to see the light\
    \ of the day with automation and implementation occurring at\na large scale and\
    \ fast pace. Likewise, intense research efforts are underway for integrating\n\
    fog and edge computing with artiﬁcial intelligence to enhance the overall performance,\n\
    including resource, energy management, security, and reliability [154–156].\n\
    5. Sustainable/Green Computing in Fog/Edge\nSustainable/green computing is the\
    \ efﬁcient management of computational, commu-\nnication, and storage devices\
    \ through convincing design and manufacturing practices with\na reduced impact\
    \ on the environment [157]. The last decade has seen sustainable/green\ncomputing\
    \ permeating ﬁelds of social computing, mobile computing, agent systems based\n\
    on AI, as well as the Internet of Things. IoT nodes possess power constraints\
    \ and connecting\nwith the internet makes them vulnerable to attacks. For IoT\
    \ to be sustainable, energy and\nsecurity are the two key aspects to be emphasized.\n\
    5.1. Energy Sustainability\nWith IoT services pervading all aspects of our lives,\
    \ energy-constrained IoT devices\nspark concern while considering sustainability.\
    \ The massive number IoT sensors and\nactuators deployed necessitate a continuous\
    \ and persistent power supply. As the IoT\nnode size reduces, the size of the\
    \ battery also decreases. In light of the current trend to\nenhance IoT device\
    \ functionality, formulating sustainable solutions for confronting power\nconstraints\
    \ is essential [158].\nNumerous research efforts have been oriented towards energy\
    \ harvesting for self-\nsufﬁcient IoT functioning, alongside tackling IoT security\
    \ issues. The energy consumed\nby digital and smart gadgets has become concerning.\
    \ Energy harvesting from renewable\nSensors 2022, 22, 196\n29 of 38\nenergy sources\
    \ can power a myriad of IoT sensors [159,160]. With IoT sensors having\na battery\
    \ that lasts for a limited time, frequent charging or replacement is not viable\
    \ at\nall times. Hence, energy harvesting from renewable energy such as kinetic,\
    \ solar, ther-\nmal, etc., seems plausible [161]. Moreover, energy harvesting\
    \ this issue can be handled\nby deploying an efﬁcient data transmission policy\
    \ [162], with almost 80% of a sensor’s\nenergy being depleted on data transmission.\
    \ Even though efforts for enriching the energy\nefﬁciency of IoT systems are underway,\
    \ they hardly match the proliferating pace of IoT\nservices/dependence [158].\n\
    5.2. Security Sustainability\nIoT sustainability emphasizes the security of data\
    \ and devices. Securing data involves\nhandling conﬁdentiality and integrity aspects,\
    \ whereas device security concerns defense\nagainst stealth attacks. Energy-harvesting\
    \ chips are susceptible to malicious attacks, in-\ncluding DoS attacks that disrupt\
    \ sensors. Both the criteria of energy efﬁciency and security\ncharacterize the\
    \ IoT sustainability while, at the same time, challenging IoT progress [163]\n\
    as IoT devices are power constrained, which demands a reﬁned, lightweight energy\
    \ and\nsecurity framework.\nAccording to a study, 70% of connected devices are\
    \ at risk of cyber-attacks [164]. Fur-\nthermore, vulnerable smart devices are\
    \ estimated to cause 25% of all industrial attacks [158].\nAs IoT devices are\
    \ resource-constrained, they are highly prone to attack than desktops\nor laptops.\
    \ As the battery size decreases, it can hold less energy, which in turn reduces\n\
    the availability of resources that provide security. Hence, lightweight security\
    \ mechanisms\nsuitable for power constraint devices are essential, as traditional\
    \ security solutions designed\nfor resource-rich devices consume more energy,\
    \ owing to more computations. Research\nshows that the advanced encryption standard,\
    \ as well as the elliptic curve cryptography,\noffer a lightweight cryptographic\
    \ solution with an evaluation based on resource limitations,\nchip space, latency,\
    \ and throughput [165]. For the IoT systems to be sustainable, the balanc-\ning\
    \ of aspects such as energy efﬁciency, power consumption, performance, and security\
    \ is\nrequired [158].\n6. Conﬂuence of ML and Fog/Edge\nThe conventional cloud\
    \ model falls short of fulﬁlling IoT application necessities due\nto the enormous\
    \ data generated from IoT devices [166]. Transmitting the overwhelming\nIoT data\
    \ to the cloud would cause network overhead, consuming bandwidth, and latency\n\
    issues [167]. Hence, to cut back on the data transfer cost as well as network\
    \ delays, service\nproviders are steering towards the fog and edge computing [168],\
    \ with an additional\nopportunity for enforcing security and privacy [169]. The\
    \ IoT systems comprise edge\nequipment, sensors, and actuators with latency, bandwidth,\
    \ and security necessities [166].\nThe fog computing technology of extending computer\
    \ and storage to network’s edge solves\nprocessing and networking impediments\
    \ [167], enabling rapid processing close to the data\nsource [170]. The complexity\
    \ and dynamism of fog computing with its communication\nnetworks facilitating\
    \ low latency makes sophisticated computation possible in a conducive\nenvironment.\
    \ Fog computing confers societal beneﬁts through its range of applications,\n\
    namely, healthcare, Industry 4.0, autonomous vehicles, smart cities [171], etc.\n\
    Despite that, it encounters performance as well as security setbacks. As a result,\n\
    machine learning (ML), which is a subﬁeld of artiﬁcial intelligence (AI), is catching\
    \ on to\nassist FC in resolving its shortcomings. Using ML to enhance FC applications\
    \ and deliver\nefﬁcient services in terms of accuracy, latency reduction, energy\
    \ consumption, security,\nprivacy, resource, and trafﬁc management [25,172,173]\
    \ has been increasingly popular\nin recent times. Fog computing resource management\
    \ involving ML enhances the computer,\ndecision-making, and resource provisioning,\
    \ along with delay prediction. Deploying ML\ntechniques in fog computing facilitates\
    \ accurate data processing and analyses in real-time\nwhile managing the network\
    \ overhead as well as communication trafﬁc, owing to fog’s\ndecentralized model.\
    \ The security aspects for the device, network, and data involving fog\nSensors\
    \ 2022, 22, 196\n30 of 38\ncomputing accompanied by ML prove to be effective.\
    \ The merging of the fog model with\nmachine learning has evolved into robust\
    \ end-user and upper-layer services, allowing for\ndeeper analytics and intelligent\
    \ answers to tasks.\nMachine learning (ML) is a promising option for intelligent\
    \ data processing and infer-\nence and is a prime enabler to various IoT application\
    \ domains [166], such as healthcare,\nsmart home, smart agriculture, smart industry,\
    \ smart grid, etc. It has a crucial part in design-\ning the intelligent/smart\
    \ setting for autonomous operations [167]. Machine learning has\nimmense potential\
    \ as a signiﬁcant IoT technology gaining traction to provide insights for\nIoT\
    \ applications [174]. IoT has excellent prospects for enhancing human life and\
    \ industrial\ngrowth as innumerable sensing devices perform monitoring and increase\
    \ communication\npotential [175]. For resource-constrained IoT devices, the conﬂuence\
    \ of machine learning\nwith the cloud, edge, and fog is vital for IoT implementation\
    \ [156,175] to usher in efﬁcient\nperformance, greater controllability, productivity,\
    \ and cost reduction possibilities, while\nmanaging IoT’s QoS challenges.\nEnabling\
    \ intelligence at fog and IoT improves the overall performance [100]. FC moves\n\
    the cloud’s potential to the edge of the network, where IoT and human users are\
    \ present.\nIntelligence can be incorporated into FC as device-driven or human-driven.\
    \ In a device-\ndriven approach, fog and IoT are equipped with more sensing, processing,\
    \ network, and\nstorage capabilities, enabling context awareness for decision\
    \ making and local resource\nmanagement. In a human-driven model, human users\
    \ act as the data source to the system,\nwhose behavioral pattern is the key in\
    \ shaping the network while serving them. Collectively,\nthese two approaches\
    \ can help meet IoT’s demand for QoS when designing fog computing\nsystems.\n\
    The harnessing of machine learning in an IoT setting facilitates deeper analytics\n\
    and helps materialize efﬁcient and smart IoT applications [174]. Moreover, it\
    \ can be\nutilized to overcome networking difﬁculties pertaining to routing, resource\
    \ allocation,\ntrafﬁc engineering, and security [176–180]. Neural networks are\
    \ deployed to effectively\nanalyze enormous data produced by IoT [181]. Moreover,\
    \ advanced AI involving deep\nlearning has been thriving in data analytics, decision\
    \ making, and prediction [85].\nThe potential of IoT has remarkably expanded thanks\
    \ to the convergence of ma-\nchine learning and artiﬁcial intelligence. Advanced\
    \ machine intelligence approaches have\nenabled substantial insights into a number\
    \ of real-world situations and the capacity to\ndetermine critical operational\
    \ choices from the massive volume of IoT sensory data. As\na result, ML and IoT\
    \ must work in tandem to solve complicated real-world issues and\nfulﬁll computation\
    \ and communication needs.\n7. Conclusions\nCloud computing has revolutionized\
    \ device interactions on the internet, which ush-\nered in the Internet-of-Things\
    \ and implemented a plethora of connected gadgets, with\nthe potential to continually\
    \ sense and respond to user requirements. The proliferation\nof networked IoT\
    \ devices and ensuing big data and the rigorous demands of emerging\nIoT applications,\
    \ such as low latency, location awareness, and mobility support in a geo-\ndistributed\
    \ scenario, have challenged the conventional cloud computing architecture.\nHence,\
    \ various computing paradigms such as edge and fog have emerged to address these\n\
    limitations by deploying resources at the network’s edge. The computing at edge\
    \ and fog\nimplies collecting, processing, and analyzing data close to the data\
    \ source and transmitting\nreﬁned results to the centralized cloud, favoring time-sensitive\
    \ applications that require\nincreased accuracy, low latency, high-speed analytics,\
    \ faster response time, improved re-\nliability, and availability. Combining fog/edge\
    \ with cloud computing has the prospect\nof aiding IoT in multiple ways. Because\
    \ the fog and edge computing paradigms are up-\nand-coming, exhaustive research\
    \ on this new technology is imperative. The evolving\ncomputing paradigms, as\
    \ well as the challenges and opportunities, were explored in this\nstudy. Budding\
    \ researchers can largely beneﬁt from this extensive survey to comprehend\nrecent\
    \ advances in evolving computing paradigms.\nSensors 2022, 22, 196\n31 of 38\n\
    Author Contributions: Conceptualization, N.A.A., D.R. and K.S.; methodology, N.A.A.,\
    \ D.R. and\nK.S.; software, P.M.D.R.V.; validation, P.M.D.R.V., K.S. and Y.-C.H.;\
    \ formal analysis, N.A.A.; in-\nvestigation, N.A.A.; resources, K.S. and Y.-C.H.;\
    \ data curation, P.M.D.R.V.; writing—original draft\npreparation, N.A.A., D.R.\
    \ and K.S.; writing—review and editing, N.A.A., D.R., P.M.D.R.V., K.S. and\nY.-C.H.;\
    \ visualization, N.A.A.; supervision, D.R.; project administration, Y.-C.H.; funding\
    \ acquisition,\nY.-C.H. All authors have read and agreed to the published version\
    \ of the manuscript.\nFunding: This research was funded by the MINISTRY OF SCIENCE\
    \ AND TECHNOLOGY, TAIWAN,\ngrant number MOST 110-2622-E-197-009.\nInstitutional\
    \ Review Board Statement: Not applicable.\nInformed Consent Statement: Not applicable.\n\
    Data Availability Statement: Not applicable.\nConﬂicts of Interest: The authors\
    \ declare no conﬂict of interest. The funders had no role in the design\nof the\
    \ study; in the collection, analyses, or interpretation of data; in the writing\
    \ of the manuscript, or\nin the decision to publish the results.\nReferences\n\
    1.\nArmbrust, M.; Fox, A.; Grifﬁth, R.; Joseph, A.D.; Katz, R.; Konwinski, A.;\
    \ Lee, G.; Patterson, D.; Rabkin, A.; Stoica, I.; et al. A View\nof Cloud Computing.\
    \ Commun. ACM 2010, 53, 50–58. [CrossRef]\n2.\nYousefpour, A.; Fung, C.; Nguyen,\
    \ T.; Kadiyala, K.; Jalali, F.; Niakanlahiji, A.; Kong, J.; Jue, J.P. All One\
    \ Needs to Know about Fog\nComputing and Related Edge Computing Paradigms: A Complete\
    \ Survey. J. Syst. Archit. 2019, 98, 289–330. [CrossRef]\n3.\nOrtiz, G.; Zouai,\
    \ M.; Kazar, O.; Garcia-de-Prado, A. Atmosphere: Context and Situational-Aware\
    \ Collaborative IoT Architecture\nfor Edge-Fog-Cloud Computing. Comput. Stand.\
    \ Interfaces 2022, 79, 103550. [CrossRef]\n4.\nBerger, C.; Eichhammer, P.; Reiser,\
    \ H.P.; Domaschka, J.; Hauck, F.J.; Habiger, G. A Survey on Resilience in the\
    \ IoT: Taxonomy,\nClassiﬁcation, and Discussion of Resilience Mechanisms. ACM\
    \ Comput. Surv. 2022, 54, 1–39. [CrossRef]\n5.\nFersi, G. Fog Computing and Internet\
    \ of Things in One Building Block: A Survey and an Overview of Interacting Technologies.\n\
    Cluster Comput. 2021, 24, 2757–2787. [CrossRef]\n6.\nSen, A.A.A.; Yamin, M. Advantages\
    \ of Using Fog in IoT Applications. Int. J. Inf. Tecnol. 2021, 13, 829–837. [CrossRef]\n\
    7.\nShi, W.; Dustdar, S. The Promise of Edge Computing. Computer 2016, 49, 78–81.\
    \ [CrossRef]\n8.\nDolui, K.; Datta, S.K. Comparison of Edge Computing. In 2017\
    \ Global Internet of Things Summit (GIoTS); IEEE: Geneva, Switzerland,\n2017;\
    \ pp. 1–6. [CrossRef]\n9.\nLiu, Y.; Fieldsend, J.E.; Min, G. A Framework of Fog\
    \ Computing: Architecture, Challenges, and Optimization. IEEE Access 2017, 5,\n\
    25445–25454. [CrossRef]\n10.\nIEEE Standard 1934–2018; IEEE Standard for Adoption\
    \ of OpenFog Reference Architecture for Fog Computing. 2018; pp. 1–176.\nAvailable\
    \ online: https://ieeexplore.ieee.org/document/8423800 (accessed on 22 December\
    \ 2021).\n11.\nOkewu, E.; Misra, S.; Maskeli¯unas, R.; Damaševiˇcius, R.; Fernandez-Sanz,\
    \ L. Optimizing Green Computing Awareness for\nEnvironmental Sustainability and\
    \ Economic Security as a Stochastic Optimization Problem. Sustainability 2017,\
    \ 9, 1857. [CrossRef]\n12.\nVenckauskas, A.; Stuikys, V.; Damasevicius, R.; Jusas,\
    \ N. Modelling of Internet of Things Units for Estimating Security-Energy-\nPerformance\
    \ Relationships for Quality of Service and Environment Awareness: Modelling of\
    \ IoT Units for Estimating Quality of\nService. Secur. Comm. Netw. 2016, 9, 3324–3339.\
    \ [CrossRef]\n13.\nMaskeli¯unas, R.; Damaševiˇcius, R.; Segal, S. A Review of\
    \ Internet of Things Technologies for Ambient Assisted Living Environ-\nments.\
    \ Future Internet 2019, 11, 259. [CrossRef]\n14.\nAtzori, L.; Iera, A.; Morabito,\
    \ G. Understanding the Internet of Things: Deﬁnition, Potentials, and Societal\
    \ Role of a Fast Evolving\nParadigm. Ad Hoc Netw. 2017, 56, 122–140. [CrossRef]\n\
    15.\nHu, P.; Dhelim, S.; Ning, H.; Qiu, T. Survey on Fog Computing: Architecture,\
    \ Key Technologies, Applications and Open Issues.\nJ. Netw. Comput. Appl. 2017,\
    \ 98, 27–42. [CrossRef]\n16.\nMahmud, R.; Kotagiri, R.; Buyya, R. Fog Computing:\
    \ A Taxonomy, Survey and Future Directions. In Internet of Everything. Internet\n\
    of Things (Technology, Communications and Computing); Di Martino, B., Li, K.-C.,\
    \ Yang, L.T., Esposito, A., Eds.; Springer: Singapore,\n2018; pp. 103–130. [CrossRef]\n\
    17.\nLin, J.; Yu, W.; Zhang, N.; Yang, X.; Zhang, H.; Zhao, W. A Survey on Internet\
    \ of Things: Architecture, Enabling Technologies,\nSecurity and Privacy, and Applications.\
    \ IEEE Internet Things J. 2017, 4, 1125–1142. [CrossRef]\n18.\nMao, Y.; You, C.;\
    \ Zhang, J.; Huang, K.; Letaief, K.B. A Survey on Mobile Edge Computing: The Communication\
    \ Perspective. IEEE\nCommun. Surv. Tutor. 2017, 19, 2322–2358. [CrossRef]\n19.\n\
    Yong, B.; Wei, W.; Li, K.C.; Shen, J.; Zhou, Q.; Wozniak, M.; Damaševiˇcius, R.\
    \ Ensemble machine learning approaches for webshell\ndetection in Internet of\
    \ things environments. Trans. Emerg. Telecommun. Technol. 2020, e4085. [CrossRef]\n\
    20.\nMouradian, C.; Naboulsi, D.; Yangui, S.; Glitho, R.H.; Morrow, M.J.; Polakos,\
    \ P.A. A Comprehensive Survey on Fog Computing:\nState-of-the-Art and Research\
    \ Challenges. IEEE Commun. Surv. Tutor. 2018, 20, 416–464. [CrossRef]\nSensors\
    \ 2022, 22, 196\n32 of 38\n21.\nMukherjee, M.; Shu, L.; Wang, D. Survey of Fog\
    \ Computing: Fundamental, Network Applications, and Research Challenges.\nIEEE\
    \ Commun. Surv. Tutor. 2018, 20, 1826–1857. [CrossRef]\n22.\nElazhary, H. Internet\
    \ of Things (IoT), Mobile Cloud, Cloudlet, Mobile IoT, IoT Cloud, Fog, Mobile\
    \ Edge, and Edge Emerging\nComputing Paradigms: Disambiguation and Research Directions.\
    \ J. Netw. Comput. Appl. 2019, 128, 105–140. [CrossRef]\n23.\nAtlam, H.F.; Walters,\
    \ R.J.; Wills, G.B. Fog Computing and the Internet of Things: A Review. Big Data\
    \ Cogn. Comput. 2018, 2, 10.\n[CrossRef]\n24.\nBangui, H.; Rakrak, S.; Raghay,\
    \ S.; Buhnova, B. Moving to the Edge-Cloud-of-Things: Recent Advances and Future\
    \ Research\nDirections. Electronics 2018, 7, 309. [CrossRef]\n25.\nAbdulkareem,\
    \ K.H.; Mohammed, M.A.; Gunasekaran, S.S.; Al-Mhiqani, M.N.; Mutlag, A.A.; Mostafa,\
    \ S.A.; Ali, N.S.; Ibrahim,\nD.A. A Review of Fog Computing and Machine Learning:\
    \ Concepts, Applications, Challenges, and Open Issues. IEEE Access\n2019, 7, 153123–153140.\
    \ [CrossRef]\n26.\nKhan, W.Z.; Ahmed, E.; Hakak, S.; Yaqoob, I.; Ahmed, A. Edge\
    \ Computing: A Survey. Future Gener. Comput. Syst. 2019, 97,\n219–235. [CrossRef]\n\
    27.\nCao, K.; Liu, Y.; Meng, G.; Sun, Q. An Overview on Edge Computing Research.\
    \ IEEE Access 2020, 8, 85714–85728. [CrossRef]\n28.\nYunana, K.; Alfa, A.A.; Misra,\
    \ S.; Damasevicius, R.; Maskeliunas, R.; Oluranti, J. Internet of Things: Applications,\
    \ Adoptions and\nComponents—A Conceptual Overview. In Hybrid Intelligent Systems.\
    \ HIS Advances in Intelligent Systems and Computing; Abraham,\nA., Hanne, T.,\
    \ Castillo, O., Gandhi, N., Nogueira Rios, T., Hong, T.P., Eds.; Springer: Cham,\
    \ Switzerland, 2021. [CrossRef]\n29.\nMoura, J.; Hutchison, D. Fog Computing Systems:\
    \ State of the Art, Research Issues and Future Trends, with a Focus on Resilience.\n\
    J. Netw. Comput. Appl. 2020, 169, 102784. [CrossRef]\n30.\nAslanpour, M.S.; Gill,\
    \ S.S.; Toosi, A.N. Performance Evaluation Metrics for Cloud, Fog and Edge Computing:\
    \ A Review, Taxonomy,\nBenchmarks and Standards for Future Research. Internet\
    \ Things 2020, 12, 100273. [CrossRef]\n31.\nAlli, A.A.; Alam, M.M. The Fog Cloud\
    \ of Things: A Survey on Concepts, Architecture, Standards, Tools, and Applications.\n\
    Internet Things 2020, 9, 100177. [CrossRef]\n32.\nMell, P.; Grance, T. The NIST\
    \ Deﬁnition of Cloud Computing; National Institute of Standards & Technology:\
    \ Gaithersburg, MA,\nUSA, 2011; p. 2.\n33.\nLiu, F.; Tong, J.; Mao, J.; Bohn,\
    \ R.; Messina, J.; Badger, L.; Leaf, D. NIST Cloud Computing Reference Architecture.\
    \ NIST Special\nPublication, Technology Report. 2011. Available online: https://bigdatawg.nist.gov/_uploadﬁles/M0007_v1_3376532289.pdf\n\
    (accessed on 14 September 2011).\n34.\nDorsemaine, B.; Gaulier, J.-P.; Wary, J.-P.;\
    \ Kheir, N.; Urien, P. Internet of Things: A Deﬁnition & amp; Taxonomy. In Proceedings\
    \ of\nthe 2015 9th International Conference on Next Generation Mobile Applications,\
    \ Services and Technologies, Cambridge, UK, 9–11 September\n2015; IEEE: Cambridge,\
    \ UK, 2015; pp. 72–77. [CrossRef]\n35.\nMahmoud, R.; Yousuf, T.; Aloul, F.; Zualkernan,\
    \ I. Internet of Things (IoT) Security: Current Status, Challenges and Prospective\n\
    Measures. In Proceedings of the 10th International Conference for Internet Technology\
    \ and Secured Transactions (ICITST),\nLondon, UK, 14–16 December 2015; pp. 336–341.\n\
    36.\nGubbi, J.; Buyya, R.; Marusic, S.; Palaniswami, M. Internet of Things (IoT):\
    \ A Vision, Architectural Elements, and Future Directions.\nFuture Gener. Comput.\
    \ Syst. 2013, 29, 1645–1660. [CrossRef]\n37.\nRecommendation-ITU-T Y.2060 Overview\
    \ of the Internet of Things, Document, International Telecommunication Union.\
    \ June\n2012. Article No. E 38086. Available online: https://www.itu.int/rec/T-REC-Y.2060-201206-I\
    \ (accessed on 15 June 2012).\n38.\nKhan, W.Z.; Aalsalem, M.Y.; Khan, M.K.; Arshad,\
    \ Q. Enabling Consumer Trust upon Acceptance of IoT Technologies through\nSecurity\
    \ and Privacy Model. In Advanced Multimedia and Ubiquitous Engineering; Park,\
    \ J.J., Jin, H., Jeong, Y.-S., Khan, M.K., Eds.;\nLecture Notes in Electrical\
    \ Engineering; Springer Singapore: Singapore, 2016; Volume 393, pp. 111–117. [CrossRef]\n\
    39.\nSaichaitanya, P.; Karthik, N.; Surender, D. Recent Trends in Iot. J. Inf.\
    \ Comput. Sci. 2016, 9, 9.\n40.\nKhan, N.; Naim, A.; Hussain, M.R.; Naveed, Q.N.;\
    \ Ahmad, N.; Qamar, S. The 51 V’s Of Big Data: Survey, Technologies,\nCharacteristics,\
    \ Opportunities, Issues and Challenges. In Proceedings of the International Conference\
    \ on Omni-Layer Intelligent\nSystems, Crete, Greece, 5–7 May 2019; ACM: Crete,\
    \ Greece, 2019; pp. 19–24. [CrossRef]\n41.\nMartinez, I.; Haﬁd, A.S.; Jarray,\
    \ A. Design, Resource Management, and Evaluation of Fog Computing Systems: A Survey.\
    \ IEEE\nInternet Things J. 2021, 8, 2494–2516. [CrossRef]\n42.\nStorey, V.C.;\
    \ Song, I.-Y. Big Data Technologies and Management: What Conceptual Modeling Can\
    \ Do. Data Knowl. Eng. 2017, 108,\n50–67. [CrossRef]\n43.\nRoman, R.; Lopez, J.;\
    \ Mambo, M. Mobile Edge Computing, Fog et al.: A Survey and Analysis of Security\
    \ Threats and Challenges.\nFuture Gener. Comput. Syst. 2018, 78, 680–698. [CrossRef]\n\
    44.\nBonomi, F.; Milito, R.; Zhu, J.; Addepalli, S. Fog Computing and Its Role\
    \ in the Internet of Things. In Proceedings of the First\nEdition of the MCC Workshop\
    \ on Mobile Cloud Computing, New York, NY, USA, 17 August 2012; pp. 13–16. [CrossRef]\n\
    45.\nChiang, M.; Zhang, T. Fog and IoT: An Overview of Research Opportunities.\
    \ IEEE Internet Things J. 2016, 3, 854–864. [CrossRef]\n46.\nZhang, T.; Zheng,\
    \ Y.; Zheng, R.; Antunes, H. Securing the Internet of Things: Need for a New Paradigm\
    \ and Fog Computing.\nIn Fog for 5G and IoT; Chiang, M., Balasubramanian, B.,\
    \ Bonomi, F., Eds.; John Wiley & Sons, Inc.: Hoboken, NJ, USA, 2017; pp.\n261–283.\
    \ [CrossRef]\n47.\nPuliaﬁto, C.; Mingozzi, E.; Longo, F.; Puliaﬁto, A.; Rana,\
    \ O. Fog Computing for the Internet of Things: A Survey. ACM Trans.\nInternet\
    \ Technol. 2019, 19, 1–41. [CrossRef]\nSensors 2022, 22, 196\n33 of 38\n48.\n\
    Weiner, M.; Jorgovanovic, M.; Sahai, A.; Nikolie, B. Design of a Low-Latency,\
    \ High-Reliability Wireless Communication System\nfor Control Applications. In\
    \ Proceedings of the 2014 IEEE International Conference on Communications (ICC),\
    \ Sydney, NSW, Australia,\n10–14 June 2014; IEEE: Sydney, NSW, Australia, 2014;\
    \ pp. 3829–3835. [CrossRef]\n49.\nGedeon, J.; Brandherm, F.; Egert, R.; Grube,\
    \ T.; Muhlhauser, M. What the Fog? Edge Computing Revisited: Promises, Applications\n\
    and Future Challenges. IEEE Access 2019, 7, 152847–152878. [CrossRef]\n50.\nYannuzzi,\
    \ M.; Milito, R.; Serral-Gracia, R.; Montero, D.; Nemirovsky, M. Key Ingredients\
    \ in an IoT Recipe: Fog Computing, Cloud\nComputing, and More Fog Computing. In\
    \ Proceedings of the 2014 IEEE 19th International Workshop on Computer Aided Modeling\
    \ and\nDesign of Communication Links and Networks (CAMAD), Athens, Greece, 1–3\
    \ December 2014; IEEE: Athens, Greece, 2014; pp. 325–329.\n[CrossRef]\n51.\nCaiza,\
    \ G.; Saeteros, M.; Oñate, W.; Garcia, M.V. Fog Computing at Industrial Level,\
    \ Architecture, Latency, Energy, and Security:\nA Review. Heliyon 2020, 6, e03706.\
    \ [CrossRef]\n52.\nSeitz, A.; Buchinger, D.; Bruegge, B. The Conjunction of Fog\
    \ Computing and the Industrial Internet of Things—An Applied\nApproach. In Proceedings\
    \ of the 2018 IEEE International Conference on Pervasive Computing and Communications\
    \ Workshops (PerCom\nWorkshops), Athens, Greece, 19–23 March 2018; IEEE: Athens,\
    \ Greece, 2018; pp. 812–817. [CrossRef]\n53.\nMahmoudi, C.; Mourlin, F.; Battou,\
    \ A. Formal Deﬁnition of Edge Computing: An Emphasis on Mobile Cloud and IoT Composition.\n\
    In Proceedings of the IEEE 2018 Third International Conference on Fog and Mobile\
    \ Edge Computing (FMEC), Barcelona, Spain, 23–26 April\n2018; IEEE: Barcelona,\
    \ Spain, 2018; pp. 34–42. [CrossRef]\n54.\nBashar, A. Secure and cost efﬁcient\
    \ implementation of the mobile computing using ofﬂoading technique. JITDW 2019,\
    \ 1, 48–57.\n[CrossRef]\n55.\nAl-Janabi, S.; Al-Shourbaji, I.; Shojafar, M.; Abdelhag,\
    \ M. Mobile Cloud Computing: Challenges and Future Research Directions.\nIn Proceedings\
    \ of the 2017 10th International Conference on Developments in eSystems Engineering\
    \ (DeSE), Paris, France, 14–16 June 2017;\nIEEE: Paris, France, 2017; pp. 62–67.\
    \ [CrossRef]\n56.\nDinh, H.T.; Lee, C.; Niyato, D.; Wang, P. A Survey of Mobile\
    \ Cloud Computing: Architecture, Applications, and Approaches:\nA Survey of Mobile\
    \ Cloud Computing. Wirel. Commun. Mob. Comput. 2013, 13, 1587–1611. [CrossRef]\n\
    57.\nFernando, N.; Loke, S.W.; Rahayu, W. Mobile Cloud Computing: A Survey. Future\
    \ Gener. Comput. Syst. 2013, 29, 84–106.\n[CrossRef]\n58.\nMansouri, Y.; Babar,\
    \ M.A. A Review of Edge Computing: Features and Resource Virtualization. J. Parallel\
    \ Distrib. Comput. 2021,\n150, 155–183. [CrossRef]\n59.\nShiraz, M.; Gani, A.;\
    \ Khokhar, R.H.; Buyya, R. A Review on Distributed Application Processing Frameworks\
    \ in Smart Mobile\nDevices for Mobile Cloud Computing. IEEE Commun. Surv. Tutor.\
    \ 2013, 15, 1294–1313. [CrossRef]\n60.\nYaqoob, I.; Ahmed, E.; Gani, A.; Mokhtar,\
    \ S.; Imran, M.; Guizani, S. Mobile Ad Hoc Cloud: A Survey: Mobile Ad Hoc Cloud.\n\
    Wirel. Commun. Mob. Comput. 2016, 16, 2572–2589. [CrossRef]\n61.\nHubaux, J.-P.;\
    \ Gross, T.; Le Boudec, J.-Y.; Vetterli, M. Toward Self-Organized Mobile Ad Hoc\
    \ Networks: The Terminodes Project.\nIEEE Commun. Mag. 2001, 39, 118–124. [CrossRef]\n\
    62.\nAri, A.A.A.; Ngangmo, O.K.; Titouna, C.; Thiare, O.; Kolyang; Mohamadou,\
    \ A.; Gueroui, A.M. Enabling privacy and security\nin Cloud of Things: Architecture,\
    \ applications, security & privacy challenges. Appl. Comput. Inform. 2019. ahead-of-print.\n\
    [CrossRef]\n63.\nAazam, M.; Khan, I.; Alsaffar, A.A.; Huh, E.-N. Cloud of Things:\
    \ Integrating Internet of Things and Cloud Computing and\nthe Issues Involved.\
    \ In Proceedings of 2014 11th International Bhurban Conference on Applied Sciences\
    \ & Technology (IBCAST), Islamabad,\nPakistan, 14–18 January, 2014; IEEE: Islamabad,\
    \ Pakistan, 2014; pp. 414–419. [CrossRef]\n64.\nMahmoud, M.M.E.; Rodrigues, J.J.P.C.;\
    \ Ahmed, S.H.; Shah, S.C.; Al-Muhtadi, J.F.; Korotaev, V.V.; De Albuquerque, V.H.C.\n\
    Enabling Technologies on Cloud of Things for Smart Healthcare. IEEE Access 2018,\
    \ 6, 31950–31967. [CrossRef]\n65.\nAbdelwahab, S.; Hamdaoui, B.; Guizani, M.;\
    \ Znati, T. Cloud of Things for Sensing-as-a-Service: Architecture, Algorithms,\
    \ and\nUse Case. IEEE Internet Things J. 2016, 3, 1099–1112. [CrossRef]\n66.\n\
    Preden, J.S.; Tammemae, K.; Jantsch, A.; Leier, M.; Riid, A.; Calis, E. The Beneﬁts\
    \ of Self-Awareness and Attention in Fog and Mist\nComputing. Computer 2015, 48,\
    \ 37–45. [CrossRef]\n67.\nGalambos, P. Cloud, Fog, and Mist Computing: Advanced\
    \ Robot Applications. IEEE Syst. Man Cybern. Mag. 2020, 6, 41–45.\n[CrossRef]\n\
    68.\nYogi, M.K.; Chandrasekhar, K.C.; Kumar, G.V. Mist Computing: Principles,\
    \ Trends and Future Direction. IJCSE 2017, 4, 19–21.\n[CrossRef]\n69.\nShi, W.;\
    \ Cao, J.; Zhang, Q.; Li, Y.; Xu, L. Edge Computing: Vision and Challenges. IEEE\
    \ Internet Things J. 2016, 3, 637–646.\n[CrossRef]\n70.\nRen, J.; Guo, H.; Xu,\
    \ C.; Zhang, Y. Serving at the Edge: A Scalable IoT Architecture Based on Transparent\
    \ Computing. IEEE Netw.\n2017, 31, 96–105. [CrossRef]\n71.\nChen, G.; Kang, B.-T.;\
    \ Kandemir, M.; Vijaykrishnan, N.; Irwin, M.J.; Chandramouli, R. Studying Energy\
    \ Trade Offs in Ofﬂoading\nComputation/Compilation in Java-Enabled Mobile Devices.\
    \ IEEE Trans. Parallel Distrib. Syst. 2004, 15, 795–809. [CrossRef]\nSensors 2022,\
    \ 22, 196\n34 of 38\n72.\nPatel, M.; Hu, Y.; Hédé, P.; Joubert, J.; Ramos, J.R.;\
    \ Sprecher, N.; Abeta, S.; Neal, A.; Cosimini, P.; Pollard, A.; et al. Contributing\n\
    Organizations and Authors. Mobile-Edge Computing Introductory Technical White\
    \ Paper. White Paper, Mobile-Edge Com-\nputing (MEC) Industry Initiative. 2014.\
    \ Available online: https://portal.etsi.org/portals/0/tbpages/mec/docs/mobile-edge_\n\
    computing_-_introductory_technical_white_paper_v1%2018-09-14.pdf (accessed on\
    \ 1 September 2014).\n73.\nShahzadi, S.; Iqbal, M.; Dagiuklas, T.; Qayyum, Z.U.\
    \ Multi-Access Edge Computing: Open Issues, Challenges and Future\nPerspectives.\
    \ J. Cloud Comp. 2017, 6, 30. [CrossRef]\n74.\nGiust, F.; Verin, G.; Antevski,\
    \ K.; Chou, J.; Fang, Y. MEC Deployments in 4G and Evolution towards 5G. ETSI\
    \ White Paper No.\n24. First Edition. February 2018. Available online: https://www.etsi.org/images/ﬁles/ETSIWhitePapers/etsi_wp24_MEC_\n\
    deployment_in_4G_5G_FINAL.pdf (accessed on 20 February 2018).\n75.\nPan, J.; McElhannon,\
    \ J. Future Edge Cloud and Edge Computing for Internet of Things Applications.\
    \ IEEE Internet Things J. 2018,\n5, 439–449. [CrossRef]\n76.\nHu, Y.; Patel, M.;\
    \ Sabella, D.; Sprecher, N.; Young, V. Mobile Edge Computing A Key Technology\
    \ towards 5G. ETSI White Paper\nNo. 11. First Edition. Available online: https://www.etsi.org/images/ﬁles/etsiwhitepapers/etsi_wp11_mec_a_key_technology_\n\
    towards_5g.pdf (accessed on 5 September 2015).\n77.\nSabella, D.; Vaillant, A.;\
    \ Kuure, P.; Rauschenbach, U.; Giust, F. Mobile-Edge Computing Architecture: The\
    \ Role of MEC\nin the Internet of Things. IEEE Consumer Electron. Mag. 2016, 5,\
    \ 84–91. [CrossRef]\n78.\nAbedin, S.F.; Bairagi, A.K.; Munir, M.S.; Tran, N.H.;\
    \ Hong, C.S. Fog Load Balancing for Massive Machine Type Communications:\nA Game\
    \ and Transport Theoretic Approach. IEEE Access 2019, 7, 4204–4218. [CrossRef]\n\
    79.\nZbakh, M.; Essaaidi, M.; Manneback, P.; Rong, C. (Eds.) Cloud Computing and\
    \ Big Data: Technologies, Applications and Security.\nIn Lecture Notes in Networks\
    \ and Systems; Springer International Publishing: Cham, Switzerland, 2019. [CrossRef]\n\
    80.\nYu, Y. Mobile edge computing towards 5G: Vision, recent progress, and open\
    \ challenges. China Commun. 2016, 13, 89–99.\n[CrossRef]\n81.\nKlas, G.I. Fog\
    \ Computing and Mobile Edge Cloud Gain Momentum Open Fog Consortium, ETSI MEC\
    \ and Cloudlets. 2015.\nAvailable online: https://yucianga.info/wp-content/uploads/2015/11/15_11_22-_Fog_computing_and_mobile_edge_cloud_\n\
    gain_momentum_Open_Fog_Consortium-ETSI_MEC-Cloudlets_v1_1.pdf (accessed on 22\
    \ December 2021).\n82.\nBonomi, F.; Milito, R.; Natarajan, P.; Zhu, J. Fog Computing:\
    \ A Platform for Internet of Things and Analytics. In Big Data and\nInternet of\
    \ Things: A Roadmap for Smart Environments; Bessis, N., Dobre, C., Eds.; Studies\
    \ in Computational Intelligence; Springer\nInternational Publishing: Cham, Switzerland,\
    \ 2014; Volume 546, pp. 169–186. [CrossRef]\n83.\nTalebkhah, M.; Sali, A.; Marjani,\
    \ M.; Gordan, M.; Hashim, S.J.; Rokhani, F.Z. Edge Computing: Architecture, Applications\
    \ and\nFuture Perspectives. In Proceedings of the 2020 IEEE 2nd International\
    \ Conference on Artiﬁcial Intelligence in Engineering and Technology\n(IICAIET),\
    \ Kota Kinabalu, Malaysia, 26–27 September 2020; IEEE: Kota Kinabalu, Malaysia,\
    \ 2020; pp. 1–6. [CrossRef]\n84.\nWang, F.; Zhang, M.; Wang, X.; Ma, X.; Liu,\
    \ J. Deep Learning for Edge Computing Applications: A State-of-the-Art Survey.\
    \ IEEE\nAccess 2020, 8, 58322–58336. [CrossRef]\n85.\nChang, Z.; Liu, S.; Xiong,\
    \ X.; Cai, Z.; Tu, G. A Survey of Recent Advances in Edge-Computing-Powered Artiﬁcial\
    \ Intelligence of\nThings. IEEE Internet Things J. 2021, 8, 13849–13875. [CrossRef]\n\
    86.\nNayyer, M.Z.; Raza, I.; Hussain, S.A. A Survey of Cloudlet-Based Mobile Augmentation\
    \ Approaches for Resource Optimization.\nACM Comput. Surv. 2019, 51, 1–28. [CrossRef]\n\
    87.\nSatyanarayanan, M.; Bahl, V.; Caceres, R.; Davies, N. The Case for VM-Based\
    \ Cloudlets in Mobile Computing. IEEE Pervasive\nComput. 2009, 8, 14–23. [CrossRef]\n\
    88.\nGusev, M.; Dustdar, S. Going Back to the Roots—The Evolution of Edge Computing,\
    \ An IoT Perspective. IEEE Internet Comput.\n2018, 22, 5–15. [CrossRef]\n89.\n\
    Hao, P.; Bai, Y.; Zhang, X.; Zhang, Y. Edgecourier: An Edge-Hosted Personal Service\
    \ for Low-Bandwidth Document Synchroniza-\ntion in Mobile Cloud Storage Services.\
    \ In Proceedings of the Second ACM/IEEE Symposium on Edge Computing, San Jose,\
    \ CA,\nUSA, 12–14 October 2017; ACM: San Jose, CA, USA, 2017; pp. 1–14. [CrossRef]\n\
    90.\nJararweh, Y.; Tawalbeh, L.; Ababneh, F.; Dosari, F. Resource Efﬁcient Mobile\
    \ Computing Using Cloudlet Infrastructure. In Pro-\nceedings of the 2013 IEEE\
    \ 9th International Conference on Mobile Ad-hoc and Sensor Networks, Dalian, China,\
    \ 11–13 December\n2013; IEEE: Dalian, China, 2013; pp. 373–377. [CrossRef]\n91.\n\
    Bahl, V. Emergence of Micro Datacenter (Cloudlets/Edges) for Mobile Computing;\
    \ Microsoft Devices & Networking Summit: Paris,\nFrance, 2015.\n92.\nSiriweera,\
    \ A.; Naruse, K. Survey on Cloud Robotics Architecture and Model-Driven Reference\
    \ Architecture for Decentralized\nMulticloud Heterogeneous-Robotics Platform.\
    \ IEEE Access 2021, 9, 40521–40539. [CrossRef]\n93.\nPignaton de Freitas, E.;\
    \ Olszewska, J.I.; Carbonera, J.L.; Fiorini, S.R.; Khamis, A.; Ragavan, S.V.;\
    \ Barreto, M.E.; Prestes, E.; Habib,\nM.K.; Redﬁeld, S.; et al. Ontological Concepts\
    \ for Information Sharing in Cloud Robotics. J. Ambient Intell. Human Comput.\
    \ 2020,\n1–12. [CrossRef]\n94.\nKehoe, B.; Patil, S.; Abbeel, P.; Goldberg, K.\
    \ A Survey of Research on Cloud Robotics and Automation. IEEE Trans. Automat.\
    \ Sci.\nEng. 2015, 12, 398–409. [CrossRef]\n95.\nQuintas, J.; Menezes, P.; Dias,\
    \ J. Interoperability in Cloud Robotics—Developing and Matching Knowledge Information\
    \ Models\nfor Heterogenous Multi-Robot Systems. In Proceedings of the 2017 26th\
    \ IEEE International Symposium on Robot and Human Interactive\nCommunication (RO-MAN),\
    \ Lisbon, Portugal, 28 August–1 September 2017; IEEE: Lisbon, Portugal, 2017;\
    \ pp. 1291–1296. [CrossRef]\nSensors 2022, 22, 196\n35 of 38\n96.\nBozcuoglu,\
    \ A.K.; Kazhoyan, G.; Furuta, Y.; Stelter, S.; Beetz, M.; Okada, K.; Inaba, M.\
    \ The Exchange of Knowledge Using Cloud\nRobotics. IEEE Robot. Autom. Lett. 2018,\
    \ 3, 1072–1079. [CrossRef]\n97.\nYazdani, F.; Kazhoyan, G.; Bozcuoglu, A.K.; Haidu,\
    \ A.; Balint-Benczedi, F.; Bebler, D.; Pomarlan, M.; Beetz, M. Cognition-Enabled\n\
    Framework for Mixed Human-Robot Rescue Teams. In Proceedings of the 2018 IEEE/RSJ\
    \ International Conference on Intelligent Robots\nand Systems (IROS), Madrid,\
    \ Spain, 1–5 October 2018; IEEE: Madrid, Spain, 2018; pp. 1421–1428. [CrossRef]\n\
    98.\nSaha, O.; Dasgupta, P. A Comprehensive Survey of Recent Trends in Cloud Robotics\
    \ Architectures and Applications. Robotics\n2018, 7, 47. [CrossRef]\n99.\nXie,\
    \ X.; Zeng, H.-J.; Ma, W.-Y. Enabling Personalization Services on the Edge. In\
    \ Proceedings of the 10th ACM International Conference\non Multimedia (MULTIMEDIA\
    \ ’02), New York, NY, USA, 1–6 December 2002; Association for Computing Machinery:\
    \ New York, NY,\nUSA, 2002; pp. 263–266. [CrossRef]\n100. Gelsinger, P.P. Microprocessors\
    \ for the New Millennium: Challenges, Opportunities, and New Frontiers. In Proceedings\
    \ of the 2001\nIEEE International Solid-State Circuits Conference, San Francisco,\
    \ CA, USA, 7 February 2001; Digest of Technical Papers. ISSCC (Cat.\nNo.01CH37177);\
    \ IEEE: San Francisco, CA, USA, 2001; pp. 22–25. [CrossRef]\n101. Ibrahim, S.;\
    \ Jin, H.; Cheng, B.; Cao, H.; Wu, S.; Qi, L. CLOUDLET: Towards Mapreduce Implementation\
    \ on Virtual Machines.\nIn Proceedings of the 18th ACM International Symposium\
    \ on High Performance Distributed Computing—HPDC ’09, Garching, Germany,\n11–13\
    \ June 2009; ACM Press: Garching, Germany, 2009; p. 65. [CrossRef]\n102. Minh,\
    \ Q.T.; Nguyen, D.T.; Van Le, A.; Nguyen, H.D.; Truong, A. Toward Service Placement\
    \ on Fog Computing Landscape.\nIn Proceedings of the 2017 4th NAFOSTED Conference\
    \ on Information and Computer Science, Hanoi, Vietnam, 24–25 November 2017;\n\
    IEEE: Hanoi, Vietnam, 2017; pp. 291–296. [CrossRef]\n103. Gonzalez, N.M.; Goya,\
    \ W.A.; de Fatima Pereira, R.; Langona, K.; Silva, E.A.; Melo de Brito Carvalho,\
    \ T.C.; Miers, C.C.; Mangs,\nJ.-E.; Seﬁdcon, A. Fog Computing: Data Analytics\
    \ and Cloud Distributed Processing on the Network Edges. In Proceedings of\nthe\
    \ 2016 35th International Conference of the Chilean Computer Science Society (SCCC),\
    \ Valparaíso, Chile, 10 October 2016–10 February\n2017; IEEE: Valparaiso, Chile,\
    \ 2016; pp. 1–9. [CrossRef]\n104. Li, C.; Xue, Y.; Wang, J.; Zhang, W.; Li, T.\
    \ Edge-Oriented Computing Paradigms: A Survey on Architecture Design and System\n\
    Management. ACM Comput. Surv. 2018, 51, 1–34. [CrossRef]\n105. Chiang, M.; Ha,\
    \ S.; Risso, F.; Zhang, T.; Chih-Lin, I. Clarifying Fog Computing and Networking:\
    \ 10 Questions and Answers. IEEE\nCommun. Mag. 2017, 55, 18–20. [CrossRef]\n106.\
    \ Iorga, M.; Feldman, L.; Barton, R.; Martin, M.J.; Goren, N.; Mahmoudi, C. Fog\
    \ Computing Conceptual Model; Special Publication\n(NIST SP) 500-325; National\
    \ Institute of Standards and Technology: Gaithersburg, MD, USA, 2018. [CrossRef]\n\
    107. Stojmenovic, I.; Wen, S. The Fog Computing Paradigm: Scenarios and Security\
    \ Issues. In Proceedings of the Federated Conference\non Computer Science and\
    \ Information Systems, Warsaw, Poland, 7–10 September 2014; pp. 1–8. [CrossRef]\n\
    108. Yi, S.; Hao, Z.; Qin, Z.; Li, Q. Fog Computing: Platform and Applications.\
    \ In Proceedings of the 2015 Third IEEE Workshop on Hot\nTopics in Web Systems\
    \ and Technologies (HotWeb), Washington, DC, USA, 12–13 November 2015; IEEE: Washington\
    \ DC, DC, USA,\n2015; pp. 73–78. [CrossRef]\n109. Ni, J.; Zhang, K.; Lin, X.;\
    \ Shen, X. Securing Fog Computing for Internet of Things Applications: Challenges\
    \ and Solutions. IEEE\nCommun. Surv. Tutor. 2018, 20, 601–628. [CrossRef]\n110.\
    \ Aazam, M.; Huh, E.-N. Fog Computing Micro Datacenter Based Dynamic Resource\
    \ Estimation and Pricing Model for IoT.\nIn Proceedings of the 2015 IEEE 29th\
    \ International Conference on Advanced Information Networking and Applications,\
    \ Gwangju, Korea,\n25–27 March 2015; IEEE: Gwangiu, Korea, 2015; pp. 687–694.\
    \ [CrossRef]\n111. Dastjerdi, A.V.; Gupta, H.; Calheiros, R.N.; Ghosh, S.K.; Buyya,\
    \ R. Fog Computing: Principles, Architectures, and Applications.\nIn Internet\
    \ of Things: Principles and Paradigms; Morgan Kaufmann: San Francisco, CA, USA,\
    \ 2016; pp. 61–75.\n112. Abujubbeh, M.; Al-Turjman, F.; Fahrioglu, M. Software-Deﬁned\
    \ Wireless Sensor Networks in Smart Grids: An Overview. Sustain.\nCities Soc.\
    \ 2019, 51, 101754. [CrossRef]\n113. Barik, R.K.; Gudey, S.K.; Reddy, G.G.; Pant,\
    \ M.; Dubey, H.; Mankodiya, K.; Kumar, V. FogGrid: Leveraging Fog Computing\n\
    for Enhanced Smart Grid Network. In Proceedings of the 2017 14th IEEE India Council\
    \ International Conference (INDICON),\nRoorkee, India, 5–17 December 2017; IEEE:\
    \ Roorkee, India, 2017; pp. 1–6. [CrossRef]\n114. Brzoza-Woch, R.; Konieczny,\
    \ M.; Kwolek, B.; Nawrocki, P.; Szydło, T.; Zieli´nski, K. Holistic Approach to\
    \ Urgent Computing for\nFlood Decision Support. Procedia Comput. Sci. 2015, 51,\
    \ 2387–2396. [CrossRef]\n115. Fog Computing: Concepts, Frameworks and Technologies;\
    \ Mahmood, Z. (Ed.) Springer International Publishing: Cham, Switzerland,\n2018.\
    \ [CrossRef]\n116. Al-Turjman, F.; Malekloo, A. Smart Parking in IoT-Enabled Cities:\
    \ A Survey. Sustain. Cities Soc. 2019, 49, 101608. [CrossRef]\n117. Dastjerdi,\
    \ A.V.; Buyya, R. Fog Computing: Helping the Internet of Things Realize Its Potential.\
    \ Computer 2016, 49, 112–116.\n[CrossRef]\n118. Gia, T.N.; Jiang, M.; Rahmani,\
    \ A.-M.; Westerlund, T.; Liljeberg, P.; Tenhunen, H. Fog Computing in Healthcare\
    \ Internet of Things:\nA Case Study on ECG Feature Extraction. In Proceedings\
    \ of the 2015 IEEE International Conference on Computer and Information\nTechnology;\
    \ Ubiquitous Computing and Communications; Dependable, Autonomic and Secure Computing;\
    \ Pervasive Intelligence and\nComputing, Liverpool, UK, 26–28 October 2015; IEEE:\
    \ Liverpool, UK, 2015; pp. 356–363. [CrossRef]\n119. Stantchev, V.; Barnawi, A.;\
    \ Ghulam, S.; Schubert, J.; Tamm, G. Smart Items, Fog and Cloud Computing as Enablers\
    \ of Servitization\nin Healthcare. Sens. Transducers. 2015, 185, 121–128.\nSensors\
    \ 2022, 22, 196\n36 of 38\n120. Zahmatkesh, H.; Al-Turjman, F. Fog Computing for\
    \ Sustainable Smart Cities in the IoT Era: Caching Techniques and Enabling\nTechnologie—An\
    \ Overview. Sustain. Cities Soc. 2020, 59, 102139. [CrossRef]\n121. Perera, C.;\
    \ Qin, Y.; Estrella, J.C.; Reiff-Marganiec, S.; Vasilakos, A.V. Fog Computing\
    \ for Sustainable Smart Cities: A Survey. ACM\nComput. Surv. 2017, 50, 1–43. [CrossRef]\n\
    122. Hajibaba, M.; Gorgin, S. A Review on Modern Distributed Computing Paradigms:\
    \ Cloud Computing, Jungle Computing and\nFog Computing. CIT 2014, 22, 69. [CrossRef]\n\
    123. Puthal, D.; Sahoo, B.P.S.; Mishra, S.; Swain, S. Cloud Computing Features,\
    \ Issues, and Challenges: A Big Picture. In Proceedings\nof the 2015 International\
    \ Conference on Computational Intelligence and Networks, Jabalpur, India, 12–14\
    \ December 2015; IEEE: Odisha,\nIndia, 2015; pp. 116–123. [CrossRef]\n124. Varghese,\
    \ B.; Buyya, R. Next Generation Cloud Computing: New Trends and Research Directions.\
    \ Future Gener. Comput. Syst.\n2018, 79, 849–861. [CrossRef]\n125. Moura, J.;\
    \ Hutchison, D. Review and Analysis of Networking Challenges in Cloud Computing.\
    \ J. Netw. Comput. Appl. 2016, 60,\n113–129. [CrossRef]\n126. Abbas, Z.; Yoon,\
    \ W. A Survey on Energy Conserving Mechanisms for the Internet of Things: Wireless\
    \ Networking Aspects.\nSensors 2015, 15, 24818–24847. [CrossRef]\n127. Silva,\
    \ B.N.; Khan, M.; Han, K. Internet of Things: A Comprehensive Review of Enabling\
    \ Technologies, Architecture, and\nChallenges. IETE Tech. Rev. 2018, 35, 205–220.\
    \ [CrossRef]\n128. Bouzarkouna, I.; Sahnoun, M.; Sghaier, N.; Baudry, D.; Gout,\
    \ C. Challenges Facing the Industrial Implementation of Fog\nComputing. In Proceedings\
    \ of the 2018 IEEE 6th International Conference on Future Internet of Things and\
    \ Cloud (FiCloud), Barcelona,\nSpain, 6–8 August 2018; IEEE: Barcelona, Spain,\
    \ 2018; pp. 341–348. [CrossRef]\n129. Olaniyan, R.; Fadahunsi, O.; Maheswaran,\
    \ M.; Zhani, M.F. Opportunistic Edge Computing: Concepts, Opportunities and\n\
    Research Challenges. Future Gener. Comput. Syst. 2018, 89, 633–645. [CrossRef]\n\
    130. Ullah, R.; Ahmed, S.H.; Kim, B.-S. Information-Centric Networking with Edge\
    \ Computing for IoT: Research Challenges and\nFuture Directions. IEEE Access 2018,\
    \ 6, 73465–73488. [CrossRef]\n131. Nguyen, B.M.; Thi Thanh Binh, H.; The Anh,\
    \ T.; Bao Son, D. Evolutionary Algorithms to Optimize Task Scheduling Problem\
    \ for\nthe IoT Based Bag-of-Tasks Application in Cloud–Fog Computing Environment.\
    \ Appl. Sci. 2019, 9, 1730. [CrossRef]\n132. Singh, S.P.; Nayyar, A.; Kumar, R.;\
    \ Sharma, A. Fog Computing: From Architecture to Edge Computing and Big Data Processing.\
    \ J.\nSupercomput. 2019, 75, 2070–2105. [CrossRef]\n133. Singh, J.; Singh, P.;\
    \ Gill, S.S. Fog Computing: A Taxonomy, Systematic Review, Current Trends and\
    \ Research Challenges. J. Parallel\nDistrib. Comput. 2021, 157, 56–85. [CrossRef]\n\
    134. Gill, S.S.; Buyya, R. Bio-Inspired Algorithms for Big Data Analytics: A Survey,\
    \ Taxonomy, and Open Challenges. In Advances\nin Ubiquitous Sensing Applications\
    \ for Healthcare, Big Data Analytics for Intelligent Healthcare Management; Academic\
    \ Press: Cambridge,\nMA, USA, 2019; pp. 1–17. [CrossRef]\n135. Oussous, A.; Benjelloun,\
    \ F.-Z.; Ait Lahcen, A.; Belfkih, S. Big Data Technologies: A Survey. J. King\
    \ Saud Univ.—Comput. Inf. Sci.\n2018, 30, 431–448. [CrossRef]\n136. Gandomi, A.;\
    \ Haider, M. Beyond the Hype: Big Data Concepts, Methods, and Analytics. Int.\
    \ J. Inf. Manag. 2015, 35, 137–144.\n[CrossRef]\n137. Hariri, R.H.; Fredericks,\
    \ E.M.; Bowers, K.M. Uncertainty in Big Data Analytics: Survey, Opportunities,\
    \ and Challenges. J. Big Data\n2019, 6, 44. [CrossRef]\n138. Badidi, E.; Mahrez,\
    \ Z.; Sabir, E. Fog Computing for Smart Cities’ Big Data Management and Analytics:\
    \ A Review. Future Internet\n2020, 12, 190. [CrossRef]\n139. Hussain, M.M.; Beg,\
    \ M.M.S.; Alam, M.S. Fog Computing for Big Data Analytics in IoT Aided Smart Grid\
    \ Networks. Wireless Pers.\nCommun. 2020, 114, 3395–3418. [CrossRef]\n140. Baldini,\
    \ I.; Castro, P.; Chang, K.; Cheng, P.; Fink, S.; Ishakian, V.; Mitchell, N.;\
    \ Muthusamy, V.; Rabbah, R.; Slominski, A.; et al.\nServerless Computing: Current\
    \ Trends and Open Problems. In Research Advances in Cloud Computing; Chaudhary,\
    \ S., Somani, G.,\nBuyya, R., Eds.; Springer: Singapore, 2017; pp. 1–20. [CrossRef]\n\
    141. McGrath, G.; Brenner, P.R. Serverless Computing: Design, Implementation,\
    \ and Performance. In Proceedings of the 2017 IEEE 37th\nInternational Conference\
    \ on Distributed Computing Systems Workshops (ICDCSW), Atlanta, GA, USA, 5–8 June\
    \ 2017; IEEE: Atlanta,\nGA, USA, 2017; pp. 405–410. [CrossRef]\n142. Fox, G.C.;\
    \ Ishakian, V.; Muthusamy, V.; Slominski, A. Status of Serverless Computing and\
    \ Function-as-a-Service (FaaS) in Industry\nand Research. arXiv Preprint 2017,\
    \ arXiv:1708.08028.\n143. Aslanpour, M.S.; Toosi, A.N.; Cicconetti, C.; Javadi,\
    \ B.; Sbarski, P.; Taibi, D.; Assuncao, M.; Gill, S.S.; Gaire, R.; Dustdar, S.\n\
    Serverless Edge Computing: Vision and Challenges. In Proceedings of the 2021 Australasian\
    \ Computer Science Week Multiconference,\nDunedin, New Zealand, 1–5 February 2021;\
    \ ACM: Dunedin, New Zealand, 2021; pp. 1–10. [CrossRef]\n144. Bouraga, S. A Taxonomy\
    \ of Blockchain Consensus Protocols: A Survey and Classiﬁcation Framework. Expert\
    \ Syst. Appl. 2021,\n168, 114384. [CrossRef]\n145. Mamdiwar, S.D.; R, A.; Shakruwala,\
    \ Z.; Chadha, U.; Srinivasan, K.; Chang, C.-Y. Recent Advances on IoT-Assisted\
    \ Wearable\nSensor Systems for Healthcare Monitoring. Biosensors 2021, 11, 372.\
    \ [CrossRef] [PubMed]\nSensors 2022, 22, 196\n37 of 38\n146. Ankenbrand, T.; Bieri,\
    \ D.; Cortivo, R.; Hoehener, J.; Hardjono, T. Proposal for a Comprehensive (Crypto)\
    \ Asset Taxonomy.\nIn Proceedings of the 2020 Crypto Valley Conference on Blockchain\
    \ Technology (CVCBT), Rotkreuz, Switzerland, 11–12 June 2020; IEEE:\nRotkreuz,\
    \ Switzerland, 2020; pp. 16–26. [CrossRef]\n147. Gill, S.S. Quantum and blockchain\
    \ based Serverless edge computing: A vision, model, new trends and future directions.\
    \ Internet\nTechnol. Lett. 2021, e275. [CrossRef]\n148. Gill, S.S.; Kumar, A.;\
    \ Singh, H.; Singh, M.; Kaur, K.; Usman, M.; Buyya, R. Quantum Computing: A Taxonomy,\
    \ Systematic Review\nand Future Directions. Softw: Pract. Exper. 2022, 52, 66–114.\
    \ [CrossRef]\n149. Gill, S.S. A Manifesto for Modern Fog and Edge Computing: Vision,\
    \ New Paradigms, Opportunities, and Future Directions.\nIn Operationalizing Multi-Cloud\
    \ Environments; Nagarajan, R., Raj, P., Thirunavukarasu, R., Eds.; EAI/Springer\
    \ Innovations\nin Communication and Computing; Springer International Publishing:\
    \ Cham, Switzerland, 2022; pp. 237–253. [CrossRef]\n150. Liu, W.; Chen, J.; Wang,\
    \ Y.; Gao, P.; Lei, Z.; Ma, X. Quantum-Based Feature Selection for Multiclassiﬁcation\
    \ Problem in Complex\nSystems with Edge Computing. Complexity 2020, 2020, 8216874.\
    \ [CrossRef]\n151. Kreutz, D.; Ramos, F.M.V.; Esteves Verissimo, P.; Esteve Rothenberg,\
    \ C.; Azodolmolky, S.; Uhlig, S. Software-Deﬁned Networking:\nA Comprehensive\
    \ Survey. Proc. IEEE 2015, 103, 14–76. [CrossRef]\n152. Duan, Y.; Li, W.; Fu,\
    \ X.; Luo, Y.; Yang, L. A Methodology for Reliability of WSN Based on Software\
    \ Deﬁned Network in Adaptive\nIndustrial Environment. IEEE/CAA J. Autom. Sinica\
    \ 2018, 5, 74–82. [CrossRef]\n153. Raﬁque, W.; Qi, L.; Yaqoob, I.; Imran, M.;\
    \ Rasool, R.U.; Dou, W. Complementing IoT Services through Software Deﬁned\nNetworking\
    \ and Edge Computing: A Comprehensive Survey. IEEE Commun. Surv. Tutorials 2020,\
    \ 22, 1761–1804. [CrossRef]\n154. Deng, S.; Zhao, H.; Fang, W.; Yin, J.; Dustdar,\
    \ S.; Zomaya, A.Y. Edge Intelligence: The Conﬂuence of Edge Computing and\nArtiﬁcial\
    \ Intelligence. IEEE Internet Things J. 2020, 7, 7457–7469. [CrossRef]\n155. Zou,\
    \ Z.; Nevalainen, P.; Huan, Y.; Heikkonen, J.; Westerlund, T. Edge and Fog Computing\
    \ Enabled AI for IoT—An Overview.\nIn Proceedings of the 2019 IEEE International\
    \ Conference on Artiﬁcial Intelligence Circuits and Systems (AICAS), Hsinchu,\n\
    Taiwan, 18–20 March 2019; IEEE: Hsinchu, Taiwan, 2019.\n156. Huh, J.-H.; Seo,\
    \ Y.-S. Understanding Edge Computing: Engineering Evolution with Artiﬁcial Intelligence.\
    \ IEEE Access 2019, 7,\n164229–164245. [CrossRef]\n157. Murugesan, S. Harnessing\
    \ Green IT: Principles and Practices. Green Comput. 2008, 10, 24–33. [CrossRef]\n\
    158. Anand, P.; Singh, Y.; Selwal, A.; Alazab, M.; Tanwar, S.; Kumar, N. IoT Vulnerability\
    \ Assessment for Sustainable Computing:\nThreats, Current Solutions, and Open\
    \ Challenges. IEEE Access 2020, 8, 168825–168853. [CrossRef]\n159. Lopez, O.L.A.;\
    \ Alves, H.; Souza, R.D.; Montejo-Sanchez, S.; Fernandez, E.M.G.; Latva-Aho, M.\
    \ Massive Wireless Energy Transfer:\nEnabling Sustainable IoT Toward 6G Era. IEEE\
    \ Internet Things J. 2021, 8, 8816–8835. [CrossRef]\n160. Kumari, A.; Gupta, R.;\
    \ Tanwar, S.; Kumar, N. Blockchain and AI Amalgamation for Energy Cloud Management:\
    \ Challenges,\nSolutions, and Future Directions. J. Parallel Distrib. Comput.\
    \ 2020, 143, 148–166. [CrossRef]\n161. Khairy, S.; Han, M.; Cai, L.X.; Cheng,\
    \ Y. Sustainable Wireless IoT Networks with RF Energy Charging over Wi-Fi (CoWiFi).\
    \ IEEE\nInternet Things J. 2019, 6, 10205–10218. [CrossRef]\n162. Banerjee, U.;\
    \ Juvekar, C.; Fuller, S.H.; Chandrakasan, A.P. EeDTLS: Energy-Efﬁcient Datagram\
    \ Transport Layer Security for\nthe Internet of Things. In Proceedings of the\
    \ GLOBECOM 2017—2017 IEEE Global Communications Conference, Singapore, 4–8\nDecember\
    \ 2017; IEEE: Singapore, 2017; pp. 1–6. [CrossRef]\n163. Ram, S.K.; Sahoo, S.R.;\
    \ Das, B.B.; Mahapatra, K.; Mohanty, S.P. Eternal-Thing: A Secure Aging-Aware\
    \ Solar-Energy Harvester\nThing for Sustainable IoT. IEEE Trans. Sustain. Comput.\
    \ 2021, 6, 320–333. [CrossRef]\n164. Makhdoom, I.; Abolhasan, M.; Lipman, J.;\
    \ Liu, R.P.; Ni, W. Anatomy of Threats to the Internet of Things. IEEE Commun.\
    \ Surv.\nTutor. 2019, 21, 1636–1675. [CrossRef]\n165. Dhanda, S.S.; Singh, B.;\
    \ Jindal, P. Lightweight Cryptography: A Solution to Secure IoT. Wireless Pers.\
    \ Commun. 2020, 112,\n1947–1980. [CrossRef]\n166. Samie, F.; Bauer, L.; Henkel,\
    \ J. From Cloud down to Things: An Overview of Machine Learning in Internet of\
    \ Things. IEEE\nInternet Things J. 2019, 6, 4921–4934. [CrossRef]\n167. Samann,\
    \ F.E.F.; Abdulazeez, A.M.; Askar, S. Fog Computing Based on Machine Learning:\
    \ A Review. Int. J. Interact. Mob. Technol.\n2021, 15, 21. [CrossRef]\n168. Hurbungs,\
    \ V.; Bassoo, V.; Fowdur, T.P. Fog and Edge Computing: Concepts, Tools and Focus\
    \ Areas. Int. J. Inf. Tecnol. 2021, 13,\n511–522. [CrossRef]\n169. Losavio, M.\
    \ Fog Computing, Edge Computing and a Return to Privacy and Personal Autonomy.\
    \ Proc. Comp. Sci. 2020, 171,\n1750–1759. [CrossRef]\n170. Wang, M.; Cui, Y.;\
    \ Wang, X.; Xiao, S.; Jiang, J. Machine Learning for Networking: Workﬂow, Advances\
    \ and Opportunities. IEEE\nNetw. 2018, 32, 92–99. [CrossRef]\n171. Laghari, A.A.;\
    \ Jumani, A.K.; Laghari, R.A. Review and State of Art of Fog Computing. Arch.\
    \ Computat. Methods Eng. 2021, 28,\n3631–3643. [CrossRef]\n172. Hegarty, R.; Taylor,\
    \ M. Digital Evidence in Fog Computing Systems. Comp. Law Secur. Rev. 2021, 41,\
    \ 105576. [CrossRef]\n173. Mehta, S.; Singh, A.; Singh, K.K. Role of Machine Learning\
    \ in Resource Allocation of Fog Computing. In Proceedings of the 2021\n11th International\
    \ Conference on Cloud Computing, Data Science & Engineering (Conﬂuence), Noida,\
    \ India, 28–29 January 2021; IEEE:\nNoida, India, 2021; pp. 262–266. [CrossRef]\n\
    Sensors 2022, 22, 196\n38 of 38\n174. Suryadevara, N.K. Energy and Latency Reductions\
    \ at the Fog Gateway Using a Machine Learning Classiﬁer. Sustain. Comput.\nInform.\
    \ Syst. 2021, 31, 100582. [CrossRef]\n175. Cui, L.; Yang, S.; Chen, F.; Ming,\
    \ Z.; Lu, N.; Qin, J. A Survey on Application of Machine Learning for Internet\
    \ of Things. Int. J.\nMach. Learn. Cyber. 2018, 9, 1399–1417. [CrossRef]\n176.\
    \ Adi, E.; Anwar, A.; Baig, Z.; Zeadally, S. Machine Learning and Data Analytics\
    \ for the IoT. Neural. Comp. Applic. 2020, 32,\n16205–16233. [CrossRef]\n177.\
    \ Ayoubi, S.; Limam, N.; Salahuddin, M.A.; Shahriar, N.; Boutaba, R.; Estrada-Solano,\
    \ F.; Caicedo, O.M. Machine Learning for\nCognitive Network Management. IEEE Commun.\
    \ Mag. 2018, 56, 158–165. [CrossRef]\n178. Fadlullah, Z.M.; Tang, F.; Mao, B.;\
    \ Kato, N.; Akashi, O.; Inoue, T.; Mizutani, K. State-of-the-Art Deep Learning:\
    \ Evolving Machine\nIntelligence toward Tomorrow’s Intelligent Network Trafﬁc\
    \ Control Systems. IEEE Commun. Surv. Tutor. 2017, 19, 2432–2455.\n[CrossRef]\n\
    179. Hammerschmidt, C.A.; Garcia, S.; Verwer, S.; State, R. Reliable Machine Learning\
    \ for Networking: Key Issues and Approaches.\nIn Proceedings of the 2017 IEEE\
    \ 42nd Conference on Local Computer Networks (LCN), Singapore, 9–12 October 2017;\
    \ IEEE: Singapore,\n2017; pp. 167–170. [CrossRef]\n180. Casas, P.; Vanerio, J.;\
    \ Fukuda, K. GML Learning, a Generic Machine Learning Model for Network Measurements\
    \ Analysis.\nIn Proceedings of the 2017 13th International Conference on Network\
    \ and Service Management (CNSM), Tokyo, Japan, 26–30 November\n2017; IEEE: Tokyo,\
    \ Japan, 2017; pp. 1–9. [CrossRef]\n181. Sobecki, A.; Szyma´nski, J.; Gil, D.;\
    \ Mora, H. Deep Learning in the Fog. Int. J. Distrib. Sens. Netw. 2019, 15, 155014771986707.\n\
    [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/1/196/pdf?version=1640786089
  publication_year: 2021
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Recent Advances in Evolving Computing Paradigms: Cloud, Edge, and Fog Technologies'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.3009298
  analysis: '>'
  apa_citation: 'Author, A. A. (2023). Real-time irrigation management: A review of
    automated systems and challenges. Computers and Electronics in Agriculture, 202,
    107533.'
  authors:
  - Vippon Preet Kour
  - Sakshi Arora
  citation_count: 97
  data_sources: Literature review of academic papers and industry reports
  explanation: The paper acknowledges the growing global food crisis and the need
    for sustainable, data-driven agricultural practices to meet the increasing demand
    for food. It emphasizes the crucial role of automated, real-time irrigation management
    systems in addressing this challenge. The paper focuses on the significance of
    fog computing in effectively distributing processing and storage across the IoT
    network, enhancing the scalability and reliability of data transmission and analysis
    in real-time irrigation management systems.
  extract_1: '"Real-time irrigation management systems are essential for achieving
    sustainable and efficient irrigation practices, particularly in the face of increasing
    water scarcity and the growing global food demand." (p. 1)'
  extract_2: '"Fog computing provides a solution to the scalability and reliability
    challenges by distributing processing and storage across the edge network, enabling
    real-time data analysis and decision-making." (p. 4)'
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Personal Sign In * Required *Email Address *Password Forgot Password?
    Sign In Don''t have a Personal Account? Create an IEEE Account now. Create Account
    Learn more about personalization features. IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: (Author, 2023)
  journal: IEEE access
  key_findings: Fog computing plays a crucial role in enhancing the scalability and
    reliability of data transmission and analysis in real-time irrigation management
    systems. Automated, real-time irrigation systems offer significant potential in
    optimizing water usage, reducing costs, and improving crop yields.
  limitations: Limited empirical data or case studies to support the discussion on
    fog computing in irrigation management systems.
  main_objective: To examine the current state and future potential of automated,
    real-time irrigation management systems that utilize IoT and machine learning
    technologies.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09139962.pdf
  publication_year: 2020
  relevance_score: 0.75
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Fog computing, edge computing, IoT, machine learning
  title: 'Recent Developments of the Internet of Things in Agriculture: A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s19081833
  analysis: '>'
  apa_citation: 'An, X. S., & Sockanathan, S. (2019). Enhancing Smart Cities Security
    through Cyber Threat Intelligence Sharing: A Fog Computing Solution. In 2019 8th
    International Conference on Future Internet of Things and Cloud (FiCloud) (pp.
    315-321). IEEE.'
  authors:
  - Xiaojie Shi
  - Xingshuang An
  - Qingxue Zhao
  - Huimin Liu
  - Lianming Xia
  - Xia Sun
  citation_count: 192
  explanation: "The fog computing in distributing processing and storage across the\
    \ network, enhancing scalability and reliability:\n\n* **Distribution:** Fog computing\
    \ enables data processing and storage across the network, bringing computing resources\
    \ closer to the data sources. By distributing processing and storage, fog computing\
    \ reduces latency and improves overall network efficiency. This is particularly\
    \ beneficial in applications where real-time data processing is crucial, such\
    \ as in agriculture, where timely access to data is essential for optimizing crop\
    \ yields and managing livestock. \n\n* **Scalability:** Fog computing provides\
    \ the ability to scale computing resources on demand. As the amount of data and\
    \ the number of connected devices increase, fog computing can scale up to meet\
    \ these demands. This scalability ensures that the system can handle the growing\
    \ volume of data and provide consistent performance. \n\n* **Reliability:** Fog\
    \ computing enhances the reliability of data processing and storage by replicating\
    \ data and computations across multiple fog nodes. In case of a failure or disruption\
    \ in one node, other nodes can continue to operate, ensuring that data is not\
    \ lost and that applications continue to run smoothly. This reliability is crucial\
    \ in agriculture, where downtime can have significant impacts on operations and\
    \ profitability."
  extract_1: Fog computing enhances scalability and reliability by distributing processing
    and storage across the network, bringing computing resources closer to the data
    sources. This distribution reduces latency and improves overall network efficiency,
    making it particularly suitable for real-time data processing applications such
    as those in agriculture.
  extract_2: The scalability of fog computing allows it to scale up computing resources
    on demand, ensuring that the system can handle the growing volume of data and
    provide consistent performance. This scalability is important in agriculture,
    where the amount of data and the number of connected devices are constantly increasing.
  full_citation: '>'
  full_text: ">\nsensors\nReview\nState-of-the-Art Internet of Things in Protected\
    \ Agriculture\nXiaojie Shi 1,2,3, Xingshuang An 1,2,3, Qingxue Zhao 1,2,3, Huimin\
    \ Liu 1,2,3, Lianming Xia 1,*,\nXia Sun 1,2,3,* and Yemin Guo 1,2,3,*\n1\nSchool\
    \ of Agricultural Engineering and Food Science, Shandong University of Technology,\
    \ No. 12,\nZhangzhou Road, Zibo 255049, Shandong, China; sxj6198@163.com (X.S.);\
    \ axsoﬃce@126.com (X.A.);\nzqx5230@163.com (Q.Z.); liuhuimin1210@126.com (H.L.)\n\
    2\nShandong Provincial Engineering Research Center of Vegetable Safety and Quality\
    \ Traceability,\nNo.12 Zhangzhou Road, Zibo 255049, Shandong, China\n3\nZibo City\
    \ Key Laboratory of Agricultural Product Safety Traceability, No.12 Zhangzhou\
    \ Road, Zibo 255049,\nShandong, China\n*\nCorrespondence: xiawj655@163.com (L.X.);\
    \ sunxia2152@163.com (X.S.); gym@sdut.edu.cn (Y.G.)\nReceived: 5 March 2019; Accepted:\
    \ 11 April 2019; Published: 17 April 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\
    \n\x01\x02\x03\x04\x05\x06\a\nAbstract:\nThe Internet of Things (IoT) has tremendous\
    \ success in health care, smart city,\nindustrial production and so on. Protected\
    \ agriculture is one of the ﬁelds which has broad application\nprospects of IoT.\
    \ Protected agriculture is a mode of highly eﬃcient development of modern agriculture\n\
    that uses artiﬁcial techniques to change climatic factors such as temperature,\
    \ to create environmental\nconditions suitable for the growth of animals and plants.\
    \ This review aims to gain insight into\nthe state-of-the-art of IoT applications\
    \ in protected agriculture and to identify the system structure\nand key technologies.\
    \ Therefore, we completed a systematic literature review of IoT research\nand\
    \ deployments in protected agriculture over the past 10 years and evaluated the\
    \ contributions\nmade by diﬀerent academicians and organizations. Selected references\
    \ were clustered into three\napplication domains corresponding to plant management,\
    \ animal farming and food/agricultural\nproduct supply traceability. Furthermore,\
    \ we discussed the challenges along with future research\nprospects, to help new\
    \ researchers of this domain understand the current research progress of IoT in\n\
    protected agriculture and to propose more novel and innovative ideas in the future.\n\
    Keywords: Internet of things; protected agriculture; integrated application; state-of-the-art\n\
    1. Introduction\nThe Internet of Things (IoT) was ﬁrst developed in 1999 by the\
    \ network radio frequency\nidentiﬁcation (RFID) system proposed by the Massachusetts\
    \ Institute of Technology (MIT) Auto-ID\nLabs [1]. With the application and development\
    \ of new information technologies, the connotation\nand extension of IoT have\
    \ undergone major changes [2]. IoT can be deﬁned as a huge internet-based\nnetwork\
    \ connecting physical and virtual “things” with standard and interoperable communication\n\
    protocols. To be speciﬁc, everything, such as a sensor and an actuator possessing\
    \ unique identity\nand attribute, exchange messages and communicate with each\
    \ other to realize intelligent positioning,\ntracking, identiﬁcation, perception,\
    \ monitoring and management via kinds of networks anytime and\nanywhere [3]. IoT\
    \ has penetrated pervasively most aspects of human life everywhere such as health\n\
    care, smart home, smart city, industrial control and so on. Agriculture is an\
    \ ideal candidate for the\ndeployment of IoT solutions because it occurs in wide\
    \ areas that need to be continuously monitored\nand controlled [4,5].\nThe concept\
    \ of protected agriculture is relative to open-ﬁeld agriculture. It uses artiﬁcial\
    \ techniques\nto change climatic factors such as natural light, temperature and\
    \ humidity to create environmental\nconditions suitable for the growth of animals\
    \ and plants, enabling them to grow around the clock.\nSensors 2019, 19, 1833;\
    \ doi:10.3390/s19081833\nwww.mdpi.com/journal/sensors\nSensors 2019, 19, 1833\n\
    2 of 24\nThe environment of protected agriculture is completely or largely artiﬁcially\
    \ controlled andwhich has\nbroken the limits of climate and land conditions for\
    \ the growth of animals and plants to a certain extent.\nSo it is also called\
    \ controllable agriculture. Compared with open-ﬁeld agriculture, protected agriculture\n\
    has more potential to apply IoT technology, because it is less aﬀected by climatic\
    \ and geographical\nfactors. Some mature IoT solutions in other ﬁelds can be transferred\
    \ directly to protected agriculture [6].\nWith the development of agricultural\
    \ sensor, wireless communication, cloud computing,\nmachine learning and Big Data\
    \ technologies, IoT technology has emerged and is gradually being\npromoted and\
    \ applied in the protected agriculture ﬁeld [7–9]. It is playing an important\
    \ role in various\nareas of protected agriculture as it is capable of helping\
    \ farmers monitor soil condition, climate change\nand animal and plant health\
    \ [10]. When the environmental factor change beyond the set threshold,\nIoT will\
    \ automatically send a warning message to the administrator to remove the hidden\
    \ danger.\nIt can also control environmental factors such as temperature, humidity,\
    \ carbon dioxide concentration\nand illumination according to the condition of\
    \ crop growth in real time [11,12]. In addition, cameras in\nthe IoT system are\
    \ able to capture crop diseases and insect pests in the greenhouse in real time,\n\
    helping farmers ﬁnd problems and take targeted preventive measures [13]. Through\
    \ GPS, RFID and\nother location-based sensors, goods such as vegetables can be\
    \ tracked and monitored visually during\ntransportation and storage. Supermarket\
    \ managers use smart phone or PC to monitor and predict\nproduct status and the\
    \ demand for getting product on shelves. At the user or consumer end, people can\n\
    query the variety, origin, processing and other farm product information by means\
    \ of the QR code,\nbarcode, etc. IoT for protected agriculture can help create\
    \ an informed, connected, developed and\nadaptable rural community. Low-cost embedded\
    \ devices can improve the interaction between humans\nand the physical world.\
    \ Cloud computing, edge computing, and Big Data can provide valuable analysis\n\
    and support for decisions. In summary, IoT will become an important tool in the\
    \ next few years to\nengage people in embedded agriculture which includes suppliers,\
    \ farmers, technicians, distributors,\nmerchants, consumers and government representatives\
    \ [14,15].\nOn the basis of the potential of IoT applications in protected agriculture\
    \ described in the previous\nparagraphs, this paper aims to identify the current\
    \ state of solutions in these ﬁelds. The IoT fundamental\nstructure in protected\
    \ agriculture is introduced in detail based on agricultural sensors, wireless\
    \ sensor\nnetworks, cloud computing, edge clouding and machine learning technologies.\
    \ The application of IoT\nin protected agriculture and how it makes contributions\
    \ is displayed. Furthermore, the open issues,\nchallenges, future opportunities\
    \ and development trends are discussed.\nIn this article, a comprehensive and\
    \ profound review of IoT in protected agriculture has been\nexecuted based on\
    \ a survey of real-world deployments and published papers over the past 10 years.\n\
    Firstly, a keyword-based search for conference papers and articles was performed\
    \ mainly from the\nscientiﬁc databases IEEE Xplore, Science Direct and ACM Digital\
    \ as well as from Google Scholar.\nFor search keywords, we used the following\
    \ query: “Internet of Things” and either “greenhouse”\nor “livestock” or “aquaculture“\
    \ or “agriculture“. Then, we ﬁltered out papers referring to IoT but\nnot applied\
    \ to the protected agricultural domain. Finally, we checked these papers selected\
    \ from the\nprevious step and picked out the ﬁnal papers according to the problem\
    \ they addressed, the solution\nproposed, impact achieved (if measurable), tools,\
    \ systems and algorithms used.\nThe rest of the paper is organized as follows.\
    \ Section 2 presents the structure of IoT in protected\nagriculture. The key technologies\
    \ of IoT in protected agriculture are introduced in Section 3. The three\nimportant\
    \ applications in protected agriculture are summed up in Section 4. We further\
    \ discussed\nthe challenges to be faced and the problems that need to be solved\
    \ for IoT in protected agriculture as\nwell as a few future development directions\
    \ in Section 5. Finally, Section 6 outlines the conclusions of\nthis paper.\n\
    Sensors 2019, 19, 1833\n3 of 24\n2. The Structure of IoT in Protected Agriculture\n\
    2.1. Simple Review of Previous IoT Structure\nAt present, there is no uniﬁed opinion\
    \ on the structure of IoT. The composition of IoT can be\ndivided into three parts:\
    \ object end, cloud end and network end. Smart items, smart devices and\nlocal\
    \ intelligent systems interact directly with the physical world to form the “object\
    \ end” of IoT\n(also known as “front end”). The cloud computing platform that\
    \ provides computing, storage and\nother resources performs fusion processing\
    \ and intelligent analysis of the sensing data from the object\nend and performs\
    \ execution control to constitute the “cloud end” (also referred to as “back end”)\
    \ of\nIoT. The communication infrastructure of the connection object end and the\
    \ cloud end constitutes the\n“network end” of IoT. According to the diﬀerent functions\
    \ implemented by physical entity services\nin the IoT, IoT architecture established\
    \ by the current service-oriented approach can be divided into\nthe following\
    \ two categories: cloud-centric IoT architecture and object-centric IoT architecture.\
    \ In the\ncloud-centric IoT application system, the physical entity service implements\
    \ basic physical information\ncollection, local information processing and transmission\
    \ of information to the cloud, but does not\nprovide a directly accessible service\
    \ interface. Mass storage, relational processing and knowledge\nmining of physical\
    \ information are all implemented in the cloud. One of their typical representatives\n\
    is uID IoT architecture, which is an IoT architecture developed by the uID center\
    \ of the nonproﬁt\nstandardization organization initiated by the university of\
    \ Tokyo, Japan. As shown in Figure 1,\nits architecture consisted of ucode tags\
    \ such as RFID, bar codes, RF and IR beacons, user terminals,\na ucode resolution\
    \ server and application information servers [16]. For software developers, the\
    \ main\nchallenge in building such systems is how to build a back-end cloud service\
    \ platform that supports\nmassive item information management and data processing.\
    \ The cloud platforms that have been\nestablished so far mainly include Xively\
    \ and Aneka [17].\nSensors 2018, 18, x FOR PEER REVIEW  \n3 of 25 \n \n2. The\
    \ Structure of IoT in Protected Agriculture \n2.1. Simple Review of Previous IoT\
    \ Structure  \nAt present, there is no unified opinion on the structure of IoT.\
    \ The composition of IoT can be \ndivided into three parts: object end, cloud\
    \ end and network end. Smart items, smart devices and \nlocal intelligent systems\
    \ interact directly with the physical world to form the “object end” of IoT \n\
    (also known as “front end”). The cloud computing platform that provides computing,\
    \ storage and \nother resources performs fusion processing and intelligent analysis\
    \ of the sensing data from the \nobject end and performs execution control to\
    \ constitute the “cloud end” (also referred to as “back \nend”) of IoT. The communication\
    \ infrastructure of the connection object end and the cloud end \nconstitutes\
    \ the “network end” of IoT. According to the different functions implemented by\
    \ physical \nentity services in the IoT, IoT architecture established by the current\
    \ service-oriented approach can \nbe divided into the following two categories:\
    \ cloud-centric IoT architecture and object-centric IoT \narchitecture. In the\
    \ cloud-centric IoT application system, the physical entity service implements\
    \ \nbasic physical information collection, local information processing and transmission\
    \ of information \nto the cloud, but does not provide a directly accessible service\
    \ interface. Mass storage, relational \nprocessing and knowledge mining of physical\
    \ information are all implemented in the cloud. One of \ntheir typical representatives\
    \ is uID IoT architecture, which is an IoT architecture developed by the \nuID\
    \ center of the nonprofit standardization organization initiated by the university\
    \ of Tokyo, Japan. \nAs shown in Figure 1, its architecture consisted of ucode\
    \ tags such as RFID, bar codes, RF and IR \nbeacons, user terminals, a ucode resolution\
    \ server and application information servers [16]. For \nsoftware developers,\
    \ the main challenge in building such systems is how to build a back-end cloud\
    \ \nservice platform that supports massive item information management and data\
    \ processing. The \ncloud platforms that have been established so far mainly include\
    \ Xively and Aneka [17]. \n \nFigure 1. uID IoT architecture [16]. \nIn recent\
    \ years, under the impetus of organizations such as Internet Protocol for Smart\
    \ Objects \n(IPSO) Alliance, resource-constrained intelligent goods and sensing\
    \ nodes can access the internet \nthrough the IP protocol and become devices that\
    \ can be directly addressed in the network space \n[18]. Based on the service-oriented\
    \ design method, researchers have proposed a variety of software \narchitecture\
    \ reference models for building IoT systems. M2M was a standard IoT architecture\
    \ being \ndeveloped by the European Telecommunications Standards Institute (ETSI)\
    \ on the communication \nbetween machines and machines, which was designed for\
    \ non-intelligent terminal devices to \ncommunicate with other intelligent terminal\
    \ devices or systems through the mobile communication \nnetwork. The functional\
    \ architecture of M2M is shown in Figure 2: the M2M service capability layer \n\
    (SCL) was deployed in devices, gateways and network domains with storage modules;\
    \ the \napplications in devices and gateways accessed SCL through the dIa interface;\
    \ the applications in the \nFigure 1. uID IoT architecture [16].\nIn recent years,\
    \ under the impetus of organizations such as Internet Protocol for Smart Objects\n\
    (IPSO) Alliance, resource-constrained intelligent goods and sensing nodes can\
    \ access the internet\nthrough the IP protocol and become devices that can be\
    \ directly addressed in the network space [18].\nBased on the service-oriented\
    \ design method, researchers have proposed a variety of software\narchitecture\
    \ reference models for building IoT systems. M2M was a standard IoT architecture\
    \ being\ndeveloped by the European Telecommunications Standards Institute (ETSI)\
    \ on the communication\nbetween machines and machines, which was designed for\
    \ non-intelligent terminal devices to\ncommunicate with other intelligent terminal\
    \ devices or systems through the mobile communication\nnetwork. The functional\
    \ architecture of M2M is shown in Figure 2: the M2M service capability layer\n\
    (SCL) was deployed in devices, gateways and network domains with storage modules;\
    \ the applications\nSensors 2019, 19, 1833\n4 of 24\nin devices and gateways accessed\
    \ SCL through the dIa interface; the applications in the network\ndomain accessed\
    \ SCL through the mIa interface; the device or gateway interacted with the SCL\
    \ in the\nnetwork domain by the mId interface [19].\nSensors 2018, 18, x FOR PEER\
    \ REVIEW  \n4 of 25 \n \nnetwork domain accessed SCL through the mIa interface;\
    \ the device or gateway interacted with the \nSCL in the network domain by the\
    \ mId interface [19]. \n \n \nFigure 2. M2M IoT architecture [19]. \nThe 3-Tiers\
    \ architecture combined the back-end cloud service with the front-end physical\
    \ \nentity service and proposed a 3-layer information physical fusion system software\
    \ architecture \nconsisting of the environment layer, the service layer and the\
    \ control layer. As shown in Figure 3, \nthe physical components in the environment\
    \ layer were services provided by the perceptron and \nthe executor. The cloud\
    \ service components in the service layer were services provided by \nplatforms\
    \ such as traditional cloud computing. As well, the following functions were implemented\
    \ \nin the control layer: monitoring physical components and services, ensuring\
    \ dynamic \ncomposability, ensuring service adaptability; and ensuring autonomous\
    \ Cyber-Physical System \nmanagement [20]. This architecture provides services\
    \ for collecting physical data and interacting \nwith the physical world. However,\
    \ these services do not constitute an independent executable IoT \nsystembut needto\
    \ be called by the user or combined with the cloud service to complete the \n\
    execution of related tasks. \n \nFigure 3. 3-Tiers IoT framework [20]. \nIoT-A\
    \ was an IoT software architecture that implemented horizontal interconnection\
    \ and \ninteroperability between local IoT systems supported by the EU's 7th Framework\
    \ Project. Its \nreference model is shown in Figure 4. The local object association\
    \ system with different sensing and \ncommunication technologies was abstracted\
    \ into an IoT resource model that provides unified \nservices and the components\
    \ were divided into several components according to their roles, \nFigure 2. M2M\
    \ IoT architecture [19].\nThe 3-Tiers architecture combined the back-end cloud\
    \ service with the front-end physical entity\nservice and proposed a 3-layer information\
    \ physical fusion system software architecture consisting of the\nenvironment\
    \ layer, the service layer and the control layer. As shown in Figure 3, the physical\
    \ components\nin the environment layer were services provided by the perceptron\
    \ and the executor. The cloud\nservice components in the service layer were services\
    \ provided by platforms such as traditional cloud\ncomputing. As well, the following\
    \ functions were implemented in the control layer: monitoring physical\ncomponents\
    \ and services, ensuring dynamic composability, ensuring service adaptability;\
    \ and ensuring\nautonomous Cyber-Physical System management [20]. This architecture\
    \ provides services for collecting\nphysical data and interacting with the physical\
    \ world. However, these services do not constitute an\nindependent executable\
    \ IoT systembut needto be called by the user or combined with the cloud service\n\
    to complete the execution of related tasks.\nSensors 2018, 18, x FOR PEER REVIEW\
    \  \n4 of 25 \n \nnetwork domain accessed SCL through the mIa interface; the device\
    \ or gateway interacted with the \nSCL in the network domain by the mId interface\
    \ [19]. \n \n \nFigure 2. M2M IoT architecture [19]. \nThe 3-Tiers architecture\
    \ combined the back-end cloud service with the front-end physical \nentity service\
    \ and proposed a 3-layer information physical fusion system software architecture\
    \ \nconsisting of the environment layer, the service layer and the control layer.\
    \ As shown in Figure 3, \nthe physical components in the environment layer were\
    \ services provided by the perceptron and \nthe executor. The cloud service components\
    \ in the service layer were services provided by \nplatforms such as traditional\
    \ cloud computing. As well, the following functions were implemented \nin the\
    \ control layer: monitoring physical components and services, ensuring dynamic\
    \ \ncomposability, ensuring service adaptability; and ensuring autonomous Cyber-Physical\
    \ System \nmanagement [20]. This architecture provides services for collecting\
    \ physical data and interacting \nwith the physical world. However, these services\
    \ do not constitute an independent executable IoT \nsystembut needto be called\
    \ by the user or combined with the cloud service to complete the \nexecution of\
    \ related tasks. \n \nFigure 3. 3-Tiers IoT framework [20]. \nIoT-A was an IoT\
    \ software architecture that implemented horizontal interconnection and \ninteroperability\
    \ between local IoT systems supported by the EU's 7th Framework Project. Its \n\
    reference model is shown in Figure 4. The local object association system with\
    \ different sensing and \ncommunication technologies was abstracted into an IoT\
    \ resource model that provides unified \nservices and the components were divided\
    \ into several components according to their roles, \nFigure 3. 3-Tiers IoT framework\
    \ [20].\nIoT-A was an IoT software architecture that implemented horizontal interconnection\
    \ and\ninteroperability between local IoT systems supported by the EU’s 7th Framework\
    \ Project. Its reference\nmodel is shown in Figure 4.\nThe local object association\
    \ system with diﬀerent sensing and\ncommunication technologies was abstracted\
    \ into an IoT resource model that provides uniﬁed services\nand the components\
    \ were divided into several components according to their roles, function granularity\n\
    Sensors 2019, 19, 1833\n5 of 24\nand abstraction level, including device component,\
    \ communication component, service organisation\ncomponent, IoT process management\
    \ component, virtual entity component, IoT services component,\nsecurity component\
    \ and management component [21]. and. The IoT-A architecture establishes\nvirtual\
    \ entity services on the resource model and provides a higher level of abstract\
    \ interface for the\nconstruction of the IoT application system through various\
    \ modules. The IoT-A architecture has high\nﬂexibility and wide applicability\
    \ as it meets application needs in the form of business processes.\nSensors 2018,\
    \ 18, x FOR PEER REVIEW  \n5 of 25 \n \nfunction granularity and abstraction level,\
    \ including device component, communication \ncomponent, service organisation\
    \ component, IoT process management component, virtual entity \ncomponent, IoT\
    \ services component, security component and management component [21]. and. \n\
    The IoT-A architecture establishes virtual entity services on the resource model\
    \ and provides a \nhigher level of abstract interface for the construction of\
    \ the IoT application system through various \nmodules. The IoT-A architecture\
    \ has high flexibility and wide applicability as it meets application \nneeds\
    \ in the form of business processes. \n \nFigure 4. IoT-A IoT framework [21].\
    \ \n2.2. Structure of IoT in Protected Agriculture \nBased on the actual situation\
    \ of protected agriculture and the experience of other scholars, we \nproposed\
    \ a five-layer IoT architecture [22]. As shown in Figure 5, these layers are briefly\
    \ described \nbelow: \n(1). Perception layer: This layer consists of various sensors,\
    \ terminal devices, agricultural \nmachinery, wireless sensor network (WSN), RFID\
    \ tags andreaders, etc. The common sensors \nare environmental sensors, animal\
    \ and plant life information sensors and other sensors related \nto agriculture.\
    \ Through these sensors, information such as temperature, humidity, wind speed,\
    \ \nplant diseases, insect pests and animal vital signs can be obtained. The collected\
    \ information is \nsimply processed by the embedded device and uploaded to a higher\
    \ layer through the \nnetwork layer for further processing and analysis. \n(2).\
    \ Network layer: The network layer is the infrastructure of IoT, which includes\
    \ a converged \nnetwork formed by various communication networks and the internet.\
    \ The transmission \nmedium can be wired technology such as CAN bus and RS485\
    \ bus or wireless technology like \nZigbee, Bluetooth, LoRa and NB-IoT. The network\
    \ layer not only transmits various kinds of \nagricultural related information\
    \ collected by the perception layer to the higher layer, but also \nsends the\
    \ control commands of the application layer to the perception layer, so that the\
    \ related \ndevices of the sensing layer take corresponding actions.  \n(3). Middleware\
    \ layer: IoT can provide different types of services for different devices. The\
    \ technical \nspecifications (processor, power supply, communication module) and\
    \ system of each device \nare different and different devices cannot be connected\
    \ and communicated with each other, \nwhich leads to heterogeneity problems. The\
    \ middleware layer aggregates, filters and processes \nreceived data from IoT\
    \ devices, which greatly reduces the processing time and cost of the \nabove issues\
    \ and provides developers with a more versatile tool to build their applications.\
    \ It \nalso simplifies the steps of new service development and new device deployment\
    \ which \nFigure 4. IoT-A IoT framework [21].\n2.2. Structure of IoT in Protected\
    \ Agriculture\nBased on the actual situation of protected agriculture and the\
    \ experience of other scholars,\nwe proposed a ﬁve-layer IoT architecture [22].\n\
    As shown in Figure 5, these layers are brieﬂy\ndescribed below:\n(1).\nPerception\
    \ layer: This layer consists of various sensors, terminal devices, agricultural\
    \ machinery,\nwireless sensor network (WSN), RFID tags andreaders, etc.\nThe common\
    \ sensors are\nenvironmental sensors, animal and plant life information sensors\
    \ and other sensors related\nto agriculture. Through these sensors, information\
    \ such as temperature, humidity, wind speed,\nplant diseases, insect pests and\
    \ animal vital signs can be obtained. The collected information is\nsimply processed\
    \ by the embedded device and uploaded to a higher layer through the network\n\
    layer for further processing and analysis.\n(2).\nNetwork layer: The network layer\
    \ is the infrastructure of IoT, which includes a converged\nnetwork formed by\
    \ various communication networks and the internet. The transmission medium\ncan\
    \ be wired technology such as CAN bus and RS485 bus or wireless technology like\
    \ Zigbee,\nBluetooth, LoRa and NB-IoT. The network layer not only transmits various\
    \ kinds of agricultural\nrelated information collected by the perception layer\
    \ to the higher layer, but also sends the control\ncommands of the application\
    \ layer to the perception layer, so that the related devices of the\nsensing layer\
    \ take corresponding actions.\n(3).\nMiddleware layer: IoT can provide diﬀerent\
    \ types of services for diﬀerent devices. The technical\nspeciﬁcations (processor,\
    \ power supply, communication module) and system of each device\nare diﬀerent\
    \ and diﬀerent devices cannot be connected and communicated with each other,\n\
    which leads to heterogeneity problems. The middleware layer aggregates, ﬁlters\
    \ and processes\nreceived data from IoT devices, which greatly reduces the processing\
    \ time and cost of the above\nissues and provides developers with a more versatile\
    \ tool to build their applications. It also\nSensors 2019, 19, 1833\n6 of 24\n\
    simpliﬁes the steps of new service development and new device deployment which\
    \ enables them\nto integrate more quickly into older architectures, improving\
    \ the interoperability of IoT.\n(4).\nCommon platform layer:\nThe common platform\
    \ layer is responsible for the storage,\ndecision-making, summary and statistics\
    \ of agricultural information and the establishment\nof various algorithms and\
    \ models for agricultural production process such as intelligent control,\nintelligent\
    \ decision making, diagnostic reasoning, early warning and prediction. This layer\
    \ is\ncomposed of cloud computing, fog computing, edge computing, Big Data, machine\
    \ learning\nalgorithm, other common core processing technologies as well as its\
    \ establishment model.\n(5).\nApplication layer: The application layer is the\
    \ highest level of the architecture and the place where\nIoT’s value and utility\
    \ are most apparent. There are lots of intelligent platforms or systems in this\n\
    layer for the environmental monitoring and control of plants and animals, the\
    \ early warning and\nmanagement of diseases and insect pests, and agricultural\
    \ product safety traceability, which can\nimprove production eﬃciency as well\
    \ as save time and cost.\nSensors 2018, 18, x FOR PEER REVIEW  \n6 of 25 \n \n\
    enables them to integrate more quickly into older architectures, improving the\
    \ interoperability \nof IoT.  \n(4). Common platform layer: The common platform\
    \ layer is responsible for the storage, \ndecision-making, summary and statistics\
    \ of agricultural information and the establishment of \nvarious algorithms and\
    \ models for agricultural production process such as intelligent control, \nintelligent\
    \ decision making, diagnostic reasoning, early warning and prediction. This layer\
    \ is \ncomposed of cloud computing, fog computing, edge computing, Big Data, machine\
    \ learning \nalgorithm, other common core processing technologies as well as its\
    \ establishment model. \n(5). Application layer: The application layer is the\
    \ highest level of the architecture and the place \nwhere IoT's value and utility\
    \ are most apparent. There are lots of intelligent platforms or \nsystems in this\
    \ layer for the environmental monitoring and control of plants and animals, the\
    \ \nearly warning and management of diseases and insect pests, and agricultural\
    \ product safety \ntraceability, which can improve production efficiency as well\
    \ as save time and cost. \n \nFigure 5. Structure of IoT in protected agriculture\
    \ [22]. \n3. The Crucial Technologies of IoT in Protected Agriculture \n3.1. Sensor\
    \ Technology \nSensor plays an indispensable role in obtaining environment, plant\
    \ and animal information \nand it is also one of the technical bottlenecks in\
    \ the development of IoT. In recent years, sensor \ntechnology has rapidly developed\
    \ with the emergence of new materials and methods [23]. The \nFigure 5. Structure\
    \ of IoT in protected agriculture [22].\nSensors 2019, 19, 1833\n7 of 24\n3. The\
    \ Crucial Technologies of IoT in Protected Agriculture\n3.1. Sensor Technology\n\
    Sensor plays an indispensable role in obtaining environment, plant and animal\
    \ information and it\nis also one of the technical bottlenecks in the development\
    \ of IoT. In recent years, sensor technology\nhas rapidly developed with the emergence\
    \ of new materials and methods [23]. The conventional\nenvironment sensors such\
    \ as temperature, humidity, light intensity, heat and gas sensors have been\n\
    relatively mature and widely deployed in protected agriculture. Nowaday, about\
    \ 6000 research and\nproduction organizations engage in sensor research from more\
    \ than 40 countries, including famous\nmanufacturers such as Honeywell, Foxboro,\
    \ ENDEVCO, Bell & Howell and Solartron companies.\nThere are three main types\
    \ of widely used and researched agricultural sensors: physical property type\n\
    sensors, biosensors and micro electro mechanical system sensors (MEMS). The physical\
    \ property type\nsensor realizes the signal conversion through the physical change\
    \ of the sensitivity of the material\nof the sensor itself, which is mainly temperature,\
    \ humidity and gas sensor. The biosensor [24] uses\nthe organism itself as a sensitive\
    \ component to transmit information according to the reaction of the\norganism\
    \ to the outside world and includes enzyme sensor [25], microbial sensor, adaptive\
    \ sensor [26],\netc., which is mainly used to detect pesticide residue, heavy\
    \ metal ion, antibiotic residue and toxic\ngas [27,28]. The MEMS sensor is the\
    \ embodiment of the new generation of research and development\ntechnology in\
    \ the ﬁeld of sensors with small size, low power consumption, low cost and reliability\
    \ [29].\nAlthough sensor technology has made great strides in both principles\
    \ and manufacturing\nprocesses, there are still some open issues. A typical example\
    \ among those open issue is the research\nand development of soil sensors and\
    \ vital sign information sensors of animal and plant, which is an\nurgent conundrum\
    \ to overcome in long time. The complex composition as well as diﬀerent physical\n\
    and chemical properties of soil turn the rapid and situ measurement of soil nitrogen\
    \ and other elements\ninto an international diﬃculty. Since the life process of\
    \ animals and plants is very complicated, in order\nto realize the accurate detection\
    \ of information about their life, it is necessary to make breakthroughs in\n\
    the physical mechanism and measurement model of the life process. Related research\
    \ has been carried\nout using physicochemical properties, spectroscopy, multispectral,\
    \ hyper-spectral, nuclear magnetic\nresonance as well as other detection methods\
    \ [30–33].\nAnother problem is the promotion and application of these sensors.\
    \ For one thing there is still\na lack of uniform technical standards in the collection,\
    \ transmission and the interface with the platform\nand human-computer interaction\
    \ interface; for another, the cost has limited the large scale application\nof\
    \ fresh sensors in intelligent agriculture. Currently, the cost of sensing equipment\
    \ for the collection and\ntransmission of animal and plant status is prohibitively\
    \ expensive for ordinary peasants. The number\nof nodes in a sensor network can\
    \ often reach tens of thousands. To make the sensor network practical,\nthe cost\
    \ of each node must be controlled within $1, but now the price is as high as $80\
    \ [34].\n3.2. Data Transmission Technology\nIn this section, the details of data\
    \ transmission technology are discussed, which is one of the vital\ntechnologies\
    \ for real-time dynamic acquisition of agricultural information. Diﬀerent from\
    \ industrial\napplication, agricultural information acquisition is not demanding\
    \ in timelines and a slight delay in\nthe transmission process has little eﬀect\
    \ on agricultural production.\nCompared with wired transmission technology such\
    \ as ﬁeldbus, wireless communication\ntechnology has advantages of low construction\
    \ and maintenance cost, low power consumption\nand excellent extensibility. Recently,\
    \ most researchers, organizations and manufacturers choose it\nto build up their\
    \ WSN in environment monitoring [35,36], automatic irrigation [37] and remote\n\
    control [38]. As shown in Table 1, the summary of popular wireless technologies\
    \ and basic parameters\nwas presented. Diﬀerent vendors and research institutes\
    \ have developed their own wireless devices\nbased on these wireless protocols,\
    \ which has somewhat increased the heterogeneity of IoT. In addition,\nwireless\
    \ signals of diﬀerent protocols located in the same band can cause mutual interference\
    \ such as\nSensors 2019, 19, 1833\n8 of 24\nZigBee, Wi-Fi and Bluetooth [39].\
    \ Wi-Fi has high communication speed but high power consumption,\nwhich is suitable\
    \ for sensor network deployment at ﬁxed points. Although Bluetooth has high security,\n\
    its communication distance is too short and power consumption is high, which is\
    \ suitable for short-time\nclose-range networking. ZigBee has the advantages of\
    \ low consumption, low cost and self-organization\nand each node can be used as\
    \ a relay station for transmitting data of adjacent nodes. So it easily expands\n\
    the coverage of the sensor network and is an ideal long-distance, large-range\
    \ sensor networking.\nTable 1. Summary of popular wireless technologies and basic\
    \ parameters.\nWireless\nTechnology\nWireless\nStandard\nFrequency Band\nNetwork\
    \ Type\nTransmission\nRange\nData Rate &Power\nWi-Fi\nIEEE802.11\na/c/b/d/g/n\n\
    2.4 GHz, 5–60 GHz\nWLAN\n20–100 m\n1 Mb/s–6.75\nGb/s, 1 W\nBluetooth\nBluetooth\n\
    (Formerly IEEE\n802.15.1)\n2.4 GHz\nWPAN\n10–300 m\n1 Mb/s–48 Mb/s,\n1 w\n6LowPAN\n\
    IEEE 802.15.4\n908.42 MHz/2.4 GHz\nWPAN\n20–100m\n20 Kb/s–250 Kb/s,\n1 mW\nSigfox\n\
    Sigfox\n908.42 MHz\nLPWAN\n<50 km\n10–1000 b/s, N/A\nLoRaWAN\nLoRaWAN\nVarious\n\
    LPWAN\n<15 km\n0.3–50 Kb/s, N/A\nNB-loT\n3GPP\n180 KHz\nLPWAN\n<15 km\n0–200 Kb/s,\
    \ N/A\nMobile cellular\ntechnology\n2G-GSM, GPRS\n3G-UMTS,\nCDMA2000\n4G-LTE\n\
    865 MHz, 2.4 GHz\nGERAN\nEntire cellular\narea\n2G: 50–100 kb/s\n3G: 200 kb/s\n\
    4G: 0.1–1 Gb/s, 1 W\nZigbee\nIEEE 802.15.4\n2400–2483.5 MHz\nMesh\n0–10 m\n250\
    \ Kbps, 1 mW\nNFC\nISO/IEC 13157\n13.56 MHz\nPoint to Point\n0.1m\n424 Kbps, 1–2\
    \ mW\nIn recent years, the Low Power Wide Area Network (LPWAN) is one of IoT hotspots\
    \ and\nthought as a novel technology with great development potential, which is\
    \ attributed to its huge\nadvantages such as ultra-long distance communication\
    \ and it can be used as an important complement\nof the traditional wireless local\
    \ area network (WLAN) and mobile cellular mobile communication\ntechnologies (such\
    \ as GSM and GPRS). At this stage, LPWAN has many technical standards, which can\n\
    be classiﬁed into two categories. The ﬁrst is a proprietary patented technology\
    \ that works under\nan unlicensed spectrum, such as LoRa, Sigfox and RPMA. The\
    \ second is a cellular communication\ntechnology that works under a licensed spectrum,\
    \ such as EC-GSM, eMTC and NB-IoT. Due to the use\nof dedicated frequency bands\
    \ and uniﬁed deployment by operators, licensed spectrum technology\nhas carrier-class\
    \ security and low interference characteristics, which forms full network coverage\n\
    and operation [40,41]. The unlicensed spectrum uses the common spectrum without\
    \ paying high\nspectrum costs but requires special handling of co-channel interference.\
    \ There are many beneﬁts of IoT\ndeployments based on LPWAN in the agricultural\
    \ environment. Firstly, the maximum connection\ndistance of the LPWAN terminal\
    \ device to the base station varies from several kilometers to several tens\n\
    of kilometers, which saves the trouble of setting up and maintaining routing devices.\
    \ Compared with\nthe 2.4 GHz band, LPWAN adopts the sub-1GHz band to acquire less\
    \ attenuation and multipath\nfading caused by obstacles and dense surfaces like\
    \ concrete walls [42,43]. Moverover, the sensitivity\nof state of the art LPWAN\
    \ receivers reaches as low as –130 dBm due to modulation techniques such\nas narrowband\
    \ and spread spectrum. Secondly, ultra low power operation is another advantage\
    \ of\nLPWAN which is achieved by duty cycling mechanism, lightweight medium access\
    \ control protocols\nand oﬄoading complex tasks [44]. Thirdly, most LPWAN technologies\
    \ support a large number of\ndevice connections by diversity techniques, adaptive\
    \ channel selection and data rate technologies,\netc. [45]. Finally, the LPWAN\
    \ connects a large number of end devices, while keeping the cost of\nhardware\
    \ below ﬁve dollars [46]. LPWAN technologies target a diverse set of applications\
    \ with varying\nrequirements in protected agriculture and therefore it should\
    \ provide some sort of quality of service\n(QoS) over the same underlying LPWAN\
    \ technology. However, current LPWAN technologies provide\nno or limited QoS.\n\
    Sensors 2019, 19, 1833\n9 of 24\nMeanwhile, mobile cellular communication technology\
    \ has undergone four generations of\ntechnology updates and the ﬁfth-generation\
    \ mobile communication technology (5G) was announced in\n2016, which will make\
    \ large ﬁle transfer such as agricultural images and audio a reality and bring\
    \ new\nimpetus to the agricultural IoT. From the perspective of future research,\
    \ the research of wireless sensor\nnetworks focuses mainly on communication, energy\
    \ conservation, network control and its application\nin agricultural monitoring.\n\
    3.3. WSN\nThe WSN consists of a lot of sensor nodes that are usually powered by\
    \ battery and it is a multi-hop\nself-organizing network system formed by wireless\
    \ communication to collaboratively sense, collect and\nprocess various information\
    \ of the perceived object in the network coverage area [47,48]. It can be\ndivided\
    \ into terrestrial WSN and wireless underground sensor networks (WUSN). The agricultural\n\
    sensors are usually planted into soil and lower frequency wireless technologies\
    \ are more selected\ndue to low attenuation in WUSN. Besides, antenna size and\
    \ energy consumption in WUSN is higher\nthan terrestrial WSN [49]. With development\
    \ of LPWAN, IoT may not need a mesh-style WSN with\npower-based routing, where\
    \ one node forwards packets of other nodes.\n3.4. Cloud Computing\nCloud computing\
    \ grew out of distributed computing, parallel processing and grid computing.\n\
    It is an Internet-based computing system that provides hardware services, infrastructure\
    \ services,\nplatform services, software services and storage services to various\
    \ IoT applications. Its essence is\na system for dynamically deploying and allocating/redistributing\
    \ as well as dynamic monitoring\nof virtualized computing and storage resource\
    \ pools, thereby providing users with computing,\ndata storage and platform services\
    \ that meet QoS requirements [50,51]. It played a strong role in\npromoting the\
    \ development of agricultural IoT. Firstly, cloud computing can provide farmers\
    \ with cheap\ndata storage services for text, image, video and other agricultural\
    \ information, which greatly reduces\nthe storage costs of agricultural enterprises\
    \ [52]. Secondly, it is diﬃcult to make direct use of these raw\ndata for making\
    \ decisions based on the technical level of farmers. Agricultural experts can\
    \ only make\naccurate judgments and give suggestions based on quantitative analysis.\
    \ Only cloud computing can\nsupport intelligent large-scale computing systems\
    \ [53,54]. Thirdly, cloud computing could provide\na secure platform for the development\
    \ of various IoT applications such as crop monitoring [55].\n3.5. Edge Computing\n\
    Edge computing refers to a new computing model that performs calculations at the\
    \ edge of the\nnetwork [56]. In the edge computing, the downlink data of the edge\
    \ represents the cloud service,\nthe uplink data represents IoT service and the\
    \ edge of edge computing refers to any computing\nand network resources between\
    \ the data source and the cloud computing center path. Because the\ncomputing\
    \ task is partially migrated to the network edge device, edge hormone can improve\
    \ data\ntransmission performance, ensure real-time processing and reduce the computational\
    \ load of the cloud\ncomputing center. Moreover, edge computing better protects\
    \ data because processing occurs closer to\nthe source than in cloud computing\
    \ [57,58].\n3.6. Machine Learning\nMachine learning (ML) is a smart way for computers\
    \ to simulate people’s learning activities, acquire\nnew knowledge, continuously\
    \ improve performance and implement their own perfection. In recent\nyears, machine\
    \ learning has achieved great success in algorithm, theory and application [59]\
    \ and have\nbeen combined with other agricultural technologies to maximized crop\
    \ yield while minimizing the input\ncosts [60]. The main machine learning algorithms\
    \ are naïve bayes, discriminant analysis, K-nearest\nneighbor, support vector\
    \ machine (SVM) [61], K-means clusterin, fuzzy clustering, gaussian mixture\n\
    models, artiﬁcial neural network (ANN), deep learning [62], decision tree algorithm\
    \ and so on [63].\nSensors 2019, 19, 1833\n10 of 24\nML can discover the internal\
    \ connection between messy, modelless and complex agricultural\ndata, make accurate\
    \ predictions and provide a theoretical basis for agricultural decision-making.\n\
    Machinelearning technology is playing an important role in crop breeding, disease\
    \ identiﬁcation,\npest and disease prediction, intelligent irrigation planning\
    \ and agricultural expert systems [64–67].\nFor example, ML technology can analyze\
    \ past farmland data, including the performance of crops under\ndiﬀerent climatic\
    \ conditions and the inheritance of a particular phenotype. As well, ML technology\n\
    can explore the association rules and then build a probability model to predict\
    \ which genes are\nmost likely to participate in the expression of a certain good\
    \ trait of the plant, which can help the\nbreeding expert conduct a reasonable\
    \ breeding experiment [68–70]. Kyosuke et al. came up with\na method for detecting\
    \ the maturity of a single intact tomato-based ML, which consisted of three\n\
    steps: pixel-based segmentation, blob-based segmentation and individual fruit\
    \ detection. In the ﬁrst\ntwo steps, decision trees were generated based on features\
    \ such as color, shape, texture and size and\nimage segmentations were conducted\
    \ using the generated trees. Finally, the automatical detection of\nindividual\
    \ fruit in multiple tomatoes was achieved by X-means clustering method. The results\
    \ of the\ntomato detection image test showed that their method achieved a recall\
    \ of 0.80, while the precision\nwas 0.88 [71]. Rahnemoonfar et al. proposed deep\
    \ learning architecture for counting fruits based\non convolutional neural networks.\
    \ They used synthetic images to train the neural network to save\ntime-consuming\
    \ collect and annotate. The network was trained for three epochs on 24,000 synthetic\n\
    images using an Adam optimizer and 100 randomly chosen images were tested. The\
    \ experimental\nresults demonstrated that their method had higher average accuracy\
    \ as comparing with others [72].\n3.7. Big Data\nThe protected agriculture produces\
    \ billions of dynamic, complex and spatial data including soil\ndatabases, greenhouse\
    \ environment data, livestock vaccination records and government investment\n\
    data. Compared with relational data structures that are logically expressed using\
    \ two-dimensional\ntables, agricultural data is more unstructured and has a large\
    \ number of hypermedia elements\nsuch as expert experience, knowledge and agricultural\
    \ models in the form of text, charts, pictures,\nanimations and voice/video [73].\
    \ The “big” of these data can be reﬂected in four dimensions: volume,\nvelocity,\
    \ variety and veracity [74]. Big Data technology is able to ﬁnd out the internal\
    \ links of collected\ndata through information mining and other means, discover\
    \ new information and provide data support\nfor the next operation. The most commonly\
    \ used techniques to deal with Big Data technology are\nimage processing, modeling\
    \ and simulation, machine learning, statistical analysis and geographical\ninformation\
    \ systems (GIS) [75].\n4. IoT Applications in Protected Agriculture\n4.1. Plant\
    \ Management\nCompared with open-ﬁeld agriculture, protected agriculture provides\
    \ a relatively suitable and\ncontrollable environment for crop growth by greenhouse\
    \ technology, which to some extent is free\nfrom the constraints of the natural\
    \ environment and promoted the intensive and eﬃcient use of\nagricultural resources.\
    \ However, spatial and temporal variability of crops’ growth environmental\nparameters\
    \ in the protected agriculture are strong and aﬀect each other [76,77], which\
    \ made it diﬃcult\nto adapt to the growth of diﬀerent types of plants in diﬀerent\
    \ growth stages by traditional cultivation\nand environmental regulation. Therefore,\
    \ it needs higher accuracy in the aspect of monitoring and\ncontrol. Many works\
    \ have attempted to design and test types of monitoring and control systems to\n\
    adjust greenhouse environmental parameters such as air temperature and humidity,\
    \ light intensity\nand CO2 concentration based on IoT and their results have proven\
    \ it is technically and economically\nfeasible [78]. At the low level of IoT development,\
    \ the environmental data were simply processed and\nusually presented in sheet\
    \ and plot form [79,80]. Later, some studies collected huge amounts of data\n\
    to set up various models based on plant growth or greenhouse climate [81–83],\
    \ which contributed\nSensors 2019, 19, 1833\n11 of 24\nto predicting the crop\
    \ yield and environment parameter changes to help farmers better manage\ngreenhouse.\
    \ CAI et al. developed a low-cost smart greenhouse remote monitor system based\
    \ on IoT.\nThe system used STM32F103 single chip machine and sensors to collect\
    \ environmental information\nand transferred the data to cloud by LPWAN. Security\
    \ link was established with TLS, which reduced\nsystem costs while ensuring the\
    \ security of data transmission. At the same time, they adopted a time\nseries\
    \ database to store data so that tremendous storage space can be saved [84]. He\
    \ et al. have reported\na greenhouse temperature intelligent control system based\
    \ on NB-IoT. The relative error of greenhouse\nenvironmental information collection\
    \ was below 1%, the average control accuracy was 3.57% (±1.0 ◦C),\nthe transmission\
    \ distance was not limited and the automatic regulation of crop growth temperature\n\
    was realized [85].\nNowaday, with the development of cloud computing, ML, etc.,\
    \ IoT solution can easily achieve\nsmart data processing and analyzing at low\
    \ cost and in a convenient way [86,87]. At the same time,\ngreenhouse technology\
    \ has also undergone several generations of upgrades and has now evolved into\n\
    highly mechanized and automated plant factories. Deng et al. have implemented\
    \ a closed-loop control\nsystem in a salad-cultivating plant factory based on\
    \ the kinetic model. Both digital simulation and\nreal-time results demonstrated\
    \ the system can work stably under the internal variations and external\ndisturbances\
    \ [88]. Zamora-Izquierdo et al. developed a smart farming IoT platform based on\
    \ edge and\ncloud computing, which was designed for soilless culture greenhouses\
    \ at low cost. The platform was\ncomposed of local, edge and cloud parts: the\
    \ local part dealt with data gathering and automatic control\nthough Cyber-Physical\
    \ Systems, the edge part took main management tasks and could improve the\nstability\
    \ of this systems, the cloud part was in charge of data analytics. Compared with\
    \ a regular\nopen control, the platform saved more than 30% water [89]. Katsoulas\
    \ et al. have designed an\nonline irrigation system for hydroponic greenhouse\
    \ crops and their results indicated it increased\nwater and fertilizer use eﬃciency\
    \ by 100% [90]. Liao et al. implemented a IoT-based system in\nan orchid greenhouse\
    \ to monitor the environmental factors and the growth status of phalaenopsis.\n\
    They developed an image processing algorithm to estimate the leaf area of phalaenopsisthe\
    \ and\nidentiﬁed the relationship between growth of plant leaves and environmental\
    \ factors. The proposed\nsystem could provide quantitative information with high\
    \ spatiotemporal resolution for ﬂoral farmers\nand contribute to updating farming\
    \ strategies for phalaenopsis in the future [91].\nDiseases and insect pests bring\
    \ a great threat to the growth of crops as and traditional technology\nand chemical\
    \ prevention and control has a certain lag and negative impact [92,93]. The rise\
    \ of IoT\nhas brought more eﬃcient and smarter solutions to crop disease and pest\
    \ control. Many types of\nIoT sensors can collect information about location,\
    \ greenhouse environment status, crop growth and\npest situation anywhere in real-time,\
    \ which helps farmers keep track of crop pests and diseases.\nThen, all raw image\
    \ and data are sent to cloud centers and later processed and analyzed by various\n\
    models and algorithms based on diﬀerent diseases and pests [94,95]. Finally, these\
    \ cloud centers\ngenerally provide farmers with the following services: disease\
    \ or pest identiﬁcation, disaster prediction\nand warning and recommended governance\
    \ measures from expert systems. Tirelli et al. proposed\na pest insect trap automatic\
    \ monitoring system using ZigBee technology, which can estimate the\ninsect density\
    \ by collected data from diﬀerent sites and send a warning message to farmers\
    \ when it\nexceeded the set value [96]. Ahouandjinou et al. proposed a pest monitoring\
    \ system which detected\nthe presence of pests by the acquisition of ultrasound\
    \ and assisted others in building up protocols\nfor early exterminate of the pests\
    \ [97]. Foughali et al. presented a potato late blight prevention and\ndecision\
    \ support system using cloud IoT and helped the agriculturists take eﬀective action\
    \ to treat\nthis disease [98]. Both Semios and Spensa Company launched their own\
    \ integrated pest management\nsystem, which was able to count the number of pests\
    \ by images, as well as characterize and capture\nthe insects. At present, pest\
    \ and disease warning research mainly provides medium and long-term\nwarning based\
    \ on historical data, which can provide macro guidance for crop production but\
    \ low\ntimeliness. Therefore, future research should focus on online monitoring\
    \ as well as diagnosis and early\nwarning of agricultural diseases.\nSensors 2019,\
    \ 19, 1833\n12 of 24\n4.2. Animal Farming\nLivestock and aquatic product farming\
    \ is an important part of protected agriculture and an area\nwhere IoT applications\
    \ have achieved good results. To achieve good control eﬀects in animal breeding,\n\
    IoT should not only overcome harsh environmental factors, but also pay attention\
    \ to the eﬀects of animal\nbehaviors [99,100]. IoT have been applied in monitoring\
    \ and management of environment, animal,\nfeed and farming process [101,102].\
    \ The livestock monitoring items include information such as body\ntemperature,\
    \ weight, behavior, exercise volume, food intake, disease information and environmental\n\
    factors, which can help people understand animal’s own physiological and nutritional\
    \ status and\nadaptability to external environmental conditions. In aquaculture,\
    \ management projects focus on water\nquality such as dissolved oxygen content,\
    \ water temperature and pH value [103,104] because water\nquality greatly aﬀects\
    \ the growth of aquatic animals. With animal growth and nutrient optimization\n\
    model and intelligent IoT equipment, it is possible to realiaze automatic feeding\
    \ and optimal control of\nfeeding time and intake according to their growth cycle,\
    \ individual quality, feeding cycle and eating\nsituation [105,106]. The Osborne\
    \ Industrial Company has produced TEAM automated electronic sow\nfeeding (ESF)\
    \ stations including pregnancy stations and estrus detection stations. The ESF\
    \ stations\nidentify the sow through the RFID tags worn by each sow and deliver\
    \ the corresponding quantity\nand type of feed based on information such as parity,\
    \ lyrical condition and gestational age. The estrus\ndetection stations can detect\
    \ rutting sows in the sow population and their detection accuracy is 7%\nhigher\
    \ than the manual ones. Encinas et al. presented a distributed monitoring IoT\
    \ system for\nwater quality monitoring. Their model was able to help ﬁsheries\
    \ acquire water quality parameters\nsuch as pH and temperature data in real time\
    \ to optimize pond resources and prevent unwanted\nconditions [107]. Soto-Zarazu´a\
    \ et al. proposed an automated recirculation tilapia farming system\nbased on\
    \ the fuzzy algorithm. The results of this work showed that it saved water by\
    \ 97.42% and\nthe water quality environmental parameters were controlled within\
    \ the acceptable range of tilapia\nculture [108]. Many researches have focused\
    \ on analysis of animal behavior, health care and diagnosis\nand warning of diseases\
    \ based on IoT [109–111]. Yazdanbakhsh et al. proposed an intelligent livestock\n\
    surveillance system. They attempted many machine learning algorithms to process\
    \ raw data of\nhealthy and ill cows and ﬁnally obtained good results used a wavelet-domain\
    \ ensemble classiﬁer with\n80.8% sensitivity and 80% speciﬁcity [112]. Wens Group,\
    \ the largest livestock breeding enterprise\nin China, took the lead in carrying\
    \ out research on the animal husbandry based on IoT and built\nthe corresponding\
    \ system for monitoring livestock vital signs, behavior and breeding environment\n\
    information [113]. Liu et al. collected a variety of penaeus vannamei information\
    \ such as real-time data\non the culture environment, disease image data and expert\
    \ disease diagnosis and treatment and ﬁnally,\nconstructed a remote intelligent\
    \ diagnosis model based on IoT [114]. Liu et al. proposed a web-based\ncombined\
    \ nutritional model for precisely predicting the growth, feed amount and nitrogen\
    \ phosphorus\noutput of gibel carp [115]. The current online diagnostics and early\
    \ warning of animal diseases is at an\nearly stage due to the lack of corresponding\
    \ sensors and models. With upgrading of hardware and\nartiﬁcial intelligence algorithms,\
    \ future research should focus on the improvement of Big Data depth\nalgorithm\
    \ and the establishment of comprehensive models of animal behavior and disease.\n\
    A few studies have made in-depth research in monitoring animal odor and hazardous\
    \ gas\nproduced during the breeding process such as ammonia gas and sulfur dioxide\
    \ [116]. Pan developed\nan electronic nose network system for monitoring and real-time\
    \ analysis of odors from livestock\nfarms. They placed e-noses in and around the\
    \ farm to build up a wireless network to measure odor\ncompounds as well as environmental\
    \ parameters [117].\n4.3. Agri-food Supply Chain Traceability\nNowday, agricultural\
    \ products/food safety issues are receiving worldwide attention and their\nsafety\
    \ traceability is one solution accepted by all parties of Agri-food domains. Governments\
    \ in many\ncountries and regions have promulgated laws and regulations to promote\
    \ the establishment of food\ntraceability system and strengthen the supervision\
    \ of agricultural products/food safety. The Agri-food\nSensors 2019, 19, 1833\n\
    13 of 24\nsupply chain traceability IoT-based system can ensure food safety and\
    \ quality at each link of the\nproduction, from the cropland to the consumer (Figure\
    \ 6), which could help consumers establish\nconﬁdence in food safety and contribute\
    \ to sustainable development of the whole food industry [118].\n \n4.3. Agri-food\
    \ Supply Chain Traceability \nNowday, agricultural products/food safety issues\
    \ are receiving worldwide attention and their \nsafety traceability is one solution\
    \ accepted by all parties of Agri-food domains. Governments in \nmany countries\
    \ and regions have promulgated laws and regulations to promote the establishment\
    \ of \nfood traceability system and strengthen the supervision of agricultural\
    \ products/food safety. The \nAgri-food supply chain traceability IoT-based system\
    \  can ensure food safety and quality at each \nlink of the production, from the\
    \ cropland to the consumer (Figure 6), which could help consumers \nestablish\
    \ confidence in food safety and contribute to sustainable development of the whole\
    \ food \nindustry [118].  \n \nFigure 6. Schematic representation of the Agri-food\
    \ supply chain from the grower to consumer. \nIn past years, a lot of countries\
    \ have established the traceability platform for meat,milk, fish and \nagri-food\
    \ products based on IoT [119–121]. However, the fresh food cold chain logistics\
    \ traceability \nhas also drawn widespread attention [122,123]. RFID technology\
    \ still played an important role in \nAgri-food supply chain traceability due\
    \ to its small size and low cost [124]. As a novel technology, \nnear field communication\
    \ (NFC) has been progressively developed and used because of its safe and \nsimple\
    \ operation [125,126]. A common problem in the development of IoT is its asynchronous\
    \ \nheterogeneous data flow and distributed features. This requires the traceability\
    \ system to establish \nuniform and accurate identification naming rules to facilitate\
    \ quick and unique retrieval of \ninformation on a farm product [127]. As the\
    \ deployment of IoT infrastructure is completed, the \nsupply chain will move\
    \ towards virtualization which is no longer required physical contact. The \n\
    virtualization of an agri-food supply chain helps administrators better monitor,\
    \ control, plan and \noptimize food supply chain processes [128]. Wang et al.\
    \ proposed a food safety pre-warning system \nbased on association rules mining\
    \ and IoT. It included four modules: information source, warning \nFigure 6. Schematic\
    \ representation of the Agri-food supply chain from the grower to consumer.\n\
    In past years, a lot of countries have established the traceability platform for\
    \ meat, milk, ﬁsh and\nagri-food products based on IoT [119–121]. However, the\
    \ fresh food cold chain logistics traceability\nhas also drawn widespread attention\
    \ [122,123]. RFID technology still played an important role in\nAgri-food supply\
    \ chain traceability due to its small size and low cost [124]. As a novel technology,\n\
    near ﬁeld communication (NFC) has been progressively developed and used because\
    \ of its safe\nand simple operation [125,126]. A common problem in the development\
    \ of IoT is its asynchronous\nheterogeneous data ﬂow and distributed features.\
    \ This requires the traceability system to establish\nuniform and accurate identiﬁcation\
    \ naming rules to facilitate quick and unique retrieval of information\non a farm\
    \ product [127]. As the deployment of IoT infrastructure is completed, the supply\
    \ chain will\nmove towards virtualization which is no longer required physical\
    \ contact. The virtualization of an\nagri-food supply chain helps administrators\
    \ better monitor, control, plan and optimize food supply\nchain processes [128].\
    \ Wang et al. proposed a food safety pre-warning system based on association\n\
    rules mining and IoT. It included four modules: information source, warning analysis,\
    \ reaction and\nemergency feedback. First, they accessed food critical information\
    \ through data processing and\nanalysis of food traceability data for safety assessment.\
    \ On this basis of this data, the system used the\nassociated data mining method\
    \ to discover the connection between them and then obtained the food\nsafety risk\
    \ analysis results. Subsequently, the system made a corresponding early warning\
    \ response\nbased on this result [129].\nRecently, the increasing incidents of\
    \ food falsiﬁcation have not only brought about great economic\nlosses, but also\
    \ undermined consumers’ conﬁdence in food safety. The blockchain technology with\n\
    decentralization, non-tamperability, development transparency and machine autonomy\
    \ features\nbrings new solutions to the above problems [130,131]. Tian et al.\
    \ reported a new decentralized\ntraceability system based on IoT and blockchain\
    \ technology, which can provid an open, transparent,\nneutral, safe and reliable\
    \ information platform for producers, governments, consumers and other\nstakeholders\
    \ [132]. Kaijun et al. combined the supply chain and blockchain technology to\
    \ propose\nSensors 2019, 19, 1833\n14 of 24\na double chain architecture agricultural\
    \ traceability system by studying the dual chain structure and\nits storage mode,\
    \ resource rent-seeking and matching mechanism and consensus algorithm [133].\n\
    Now, with the innovation and maturity of related technologies, it is not diﬃcult\
    \ for researchers to\ndevelop a complete set of traceability systems. The rise\
    \ of artiﬁcial intelligence technology enables\nexisting traceability systems\
    \ to provide automation, intelligence and human services to businesses\nand consumers.\
    \ Chen et al. adopted fuzzy cognitive maps and fuzzy rule method to come up with\n\
    an autonomous tracing system for backward design in food supply chain based on\
    \ IoT, which better\ntraced food product problems [134]. However, there are still\
    \ some problems in food safety traceability.\nIt is worth noting that the current\
    \ agricultural product safety traceability system only focuses on\na certain level\
    \ of supply chain or a certain type of goods. With the participation of multiple\
    \ projects\nor multiple sessions, we believe that the focus of future research\
    \ should be on more complex and\nsystematic supply chains.\n5. Disscussion\n5.1.\
    \ Hardware and Software Challenges\nWhen IoT technology is applying in protected\
    \ agriculture, it is inevitable to encounter challenges\nfrom all aspects. In\
    \ the perception layer, various devices must face the harsh and complex greenhouse\n\
    environment. Strong solar radiation, high temperatures, high humidity, strong\
    \ vibrations and other\nhazards can easily damage or destroy sensors or end devices.\
    \ Moreover, the daily activities of livestock\ncan interfere with the work of\
    \ the sensor or execution nodes, resulting in poor detection and control.\nIn\
    \ a general way, the information collection nodes rely on the battery with limited\
    \ power to maintain\nits work because the behavior of frequent battery replacement\
    \ consume a lot of energies and money.\nTherefore, it is an urgent need to make\
    \ great progress in developing low-power acquisition equipment,\nenergy-saving\
    \ sink node routing protocols and energy-balanced communication algorithms [135].\n\
    The devices places in various places generate incalculable data and the storage\
    \ of such data\nis also a huge challenge for some small servers.\nThose agricultural\
    \ IoT data have real-time,\ndynamic, granular and fragmented characteristics,\
    \ which brings great challenges to intermediate\ndesign, data large-scale screening,\
    \ screening, mining, processing and decision analysis techniques.\nMoreover, existing\
    \ databases cannot store unstructured data such as audio, video and images. As\
    \ a result,\nquite a lot real-time sensing data are not fully exploited. Besides,\
    \ some models and algorithms are not\nenough to to reﬂect objective reality, so\
    \ that they cannot eﬀectively guide agricultural production.\n5.2. Network Challenge\n\
    In protected agriculture, the sensor and device need to continuously operate under\
    \ the harsh\nand varied environment and their arrangement is sparse and irregular.\
    \ Compared with the wired\nnetwork with high wiring costs, the wireless network\
    \ has the advantages of low cost, good networking\nﬂexibility and high scalability\
    \ and therefore becomes the main application mode of the current\nmonitoring system.\
    \ Many actual deployments have displayed that common wireless communication\n\
    technologies are aﬀected by temperature, humidity andbuildings or other spatial\
    \ barriers [136–138].\nThe growth of animals and plants changes also result in\
    \ background noise [139] because of the\nmulti-path propagation eﬀects, which\
    \ lows reliability of data transmission. It is easy to isolate a node in\nthe\
    \ original communication network due to low node deployment density and the above\
    \ obstacles in\nprotected agriculture. If this node is responsible for communication\
    \ routing tasks of many devices and\nthis node is damaged and isolated from the\
    \ network, this will cause partial or even paralysis of most of\nthe network.\
    \ Most relevant theories and research needes on the eﬀects of the crop growth,\
    \ the thickness\nand material of wall, and the radio signal transmission loss\
    \ and electromagnetic wave transmission\nbetween soil and air interface, etc.\
    \ To determine the optimal position, height and network topology\nof sensor nodes\
    \ under diﬀerent environmental conditions. On the other hand, ad hoc intelligent\n\
    wireless network technology is needed to reduce or avoid paralysis of large-area\
    \ networks. The rise of\nSensors 2019, 19, 1833\n15 of 24\nLPWAN may solve e above\
    \ paralysis problems of WLAN due to its long communication distance,\nwhich obviates\
    \ the need for the dense and expensive deployments of relays and gateways altogether.\n\
    However, the cost of erecting LPWAN base stations is high.\nThe process of recording\
    \ various agricultural products’ status from the ﬁeld to the table\ngenerates\
    \ a large amount of data, which brings great challenges to wireless communication\
    \ with\na low transmission rate. At same times, it also brought network nodes\
    \ many problems in energy\ndistribution, data calculation, storage and communication.\
    \ Therefore, there is an urgent need to\ndevelop high-capacity data and real-time\
    \ broadband communication standards for technologies in\ncomplex agricultural\
    \ application environments.\n5.3. Security Challenge\nThe problems of security\
    \ and privacy are thought as crucial challenges in applications of protected\n\
    agriculture due to real-world examples of losses due to vulnerabilities, network\
    \ attacks or privacy issues.\nAs a multi-network heterogeneous converged network,\
    \ it not only has the same security problems as\nsensor networks, mobile communication\
    \ networks and the Interne, but also has its particular issues\nsuch as privacy\
    \ protection issues, authentication and access control issues for heterogeneous\
    \ networks,\nstorage and management of information issues, etc.\nIn the perception\
    \ layer, security threats are mainly against the WSN and RFID. In agricultural\n\
    applications, many of the sensor nodes are deployed in the long-term unsupervised\
    \ farmland\nenvironment and the wireless network itself is open, so the wireless\
    \ transmission is vulnerable to\nexternal interference and illegal users. Coupled\
    \ with the fact that these devices are respectively\nplaced elsewhere, a single\
    \ security measure is not enough [140]. The main threats to WSN include\neavesdropping\
    \ attack, node capture, replay attack and information wiretapping. So multiple\
    \ security\nmechanisms such as anonymity mechanism, data encryption and identity\
    \ authentication mechanisms\nare necessary [141,142].\nThe security threat of\
    \ RFID refers mainly to the attacks that are encountered when the RFID\nreader\
    \ and the tag communicate and such attacks usually lead to user privacy. In addition,\
    \ because the\nRFID tag is rewritable, the security and validity of the RFID tag\
    \ data will not be guaranteed.\nThere are lots of ways to enhance RFID tag security\
    \ such as modifying tag frequency, enciphered data.\nSensor nodes are diﬀerent\
    \ from RFID tag because they are active and relate to the dynamic properties of\n\
    things. Therefore, when applying encryption algorithms, key distribution policies,\
    \ intrusion detection\nmechanisms and security routing policies in speciﬁc devices,\
    \ we need to consider the limitations of\ntheir own hardware.\nSince networks\
    \ of diﬀerent architectures need to be connected to each other, there are even\n\
    greater challenges in terms of security authentication across network architectures.\
    \ The transport\nlayer will encounter the following security challenges: proxy\
    \ attacks, DoS (Denial-of-Service) attacks,\nmalicious code injection, man-in-the-middle\
    \ attacks, attacks across heterogeneous networks, etc.\nThe common measures dealt\
    \ with these network layer threats and attacks are: authorization,\nauthentication,\
    \ encryption, anti-virus protection, etc. IoT terminal devices in protected agriculture\n\
    have the characteristics of weak computing power and small storage space. Due\
    \ to limited resources,\nIoT encryption technology must be an easy to implement,\
    \ lightweight security technology that is\nsuitable for use in sensitive information\
    \ environments [143,144].\nWhen massive agricultural data is transmitted to the\
    \ application layer, in addition to the intelligent\nprocessing of data, data\
    \ security and privacy should also be considered. At this level, a large amount\n\
    of private data about users is collected, such as the consumption of agricultural\
    \ materials, the purchase\ninformation of fruits and vegetables and the location\
    \ of agricultural machinery. Therefore, the database\naccess control strategy\
    \ should be strengthened on the basis of intelligent data processing. When diﬀerent\n\
    users access the same data, they should limit their permissions and operations\
    \ according to their security\nlevel or identity, eﬀectively ensuring data security\
    \ and privacy. On the other hand, application layer\nservice providers should\
    \ accelerate the development and upgrade of authentication mechanisms\nSensors\
    \ 2019, 19, 1833\n16 of 24\nand encryption mechanisms for application scenarios\
    \ such as agricultural production, processing,\ntransportation and consumption.\n\
    5.4. Other Challenges\nThere are other challenges that need to be addressed, which\
    \ are related to the further application of\nIoT technology in protected agriculture.\
    \ Thousands of devices which have huge diﬀerences in processor,\nmemory, communication\
    \ protocol and programming language are deployed in protected agriculture,\nwhich\
    \ inevitably results in heterogeneity issues. Besides, most of devices in protected\
    \ agriculture are\nconnected to the cloud or others by the non-standard heterogeneous\
    \ interfaces [14,22]. This has led\nto problems of both device heterogeneity and\
    \ data heterogeneity. The device heterogeneity problem\naﬀects the scalability\
    \ of IoT in protected agriculture and the data heterogeneity problem hinders the\n\
    use of fusion information by models [145]. Although many research institutes,\
    \ hardware and software\nmanufacturers and related organizations have made a lot\
    \ of contributions to the standardization and\ndeployment of IoT in agriculture,\
    \ it still needs to establish a complete and clear structure, protocols and\n\
    standards to connect various heterogeneous devices and services [146,147].\nThe\
    \ cost has always been a barrier to the large-scale application of IoT to ordinary\
    \ farmers,\nespecially in developing countries like China and India. Despite a\
    \ large number of embedded devices\nand platforms have emerged and the cost of\
    \ hardware and software is rapidly decreasing, but here is\nanother situation\
    \ in high-quality and high-precision sensors and devices. Moreover, some funds\
    \ are\nneeded to train farmers to become proﬁcient in the use of IoT equipment.\
    \ In order to be able toplay\na better role in the future, the cost of sensing,\
    \ transmission, analysis and application components and\nequipment on the IoT\
    \ need to further reduce in order to lower the price and make it more aﬀordable\n\
    in the next decade [148]. Government departments should recognize the signiﬁcant\
    \ potential for the\ndevelopment of IoT in protected agriculture and increase\
    \ investment and support through policies and\nfunds to attract more capital and\
    \ achieve rapid development and application.\nIn addition, the usability of the\
    \ terminal device needs to be further improved, for example, the user\ninterface\
    \ needs to be friendlier andthe device needs to be more convenient in size and\
    \ easy to carry.\nIoT brings many beneﬁts to ecological environment and brings\
    \ some problems.. More and\nmore equipment is being placed in agriculture andso\
    \ the issues of environmental friendliness should\nreceive some attention in the\
    \ future. As the e-waste generated by IoT devices and the consumption of\nenergy\
    \ are gradually increasing, the sustainable development of the ecological environment\
    \ is also one\ncommon concern. Examples of interesting research topics include\
    \ the use of degradable materials and\nrenewable energy sources, the reduction\
    \ of equipment size and the use of energy-saving algorithms\nand new green ICT\
    \ technology [149,150].\nThe application of the Internet of Things in facility\
    \ agriculture needs to consider the socio-economic\nconsequences. On the one hand,\
    \ it increases the level of intelligence in agricultural monitoring,\ncontrol\
    \ and decision-making, thereby increasing the eﬃciency and quality of agricultural\
    \ production.\nAt the same time, it will also change the demand for the existing\
    \ agricultural workforce, causing some\npeople who are engaged in simple repetitive\
    \ tasks to lose their jobs, which will cause a series of\nsocial problems.\n5.5.\
    \ Future Prospects\nIoT technology is being applied to many ﬁelds of society,\
    \ economy and life at an unprecedented\nspeed, making human society step into\
    \ a new era of high intelligence. IoT technology is evolving\nand mature, and\
    \ many novel deployments and applications are constantly being built in protected\n\
    agriculture. Based on the above analysis and discussion of the key technologies\
    \ and applications of IoT\nin the protection of agriculture, we will present its\
    \ future development prospects and key research and\ndevelopment directions in\
    \ the following aspects. In the perception layer, the development of sensors\n\
    should focus on new sensitive materials, mechanisms, processes and methodologies\
    \ as well as low\npower consumption and low cost. Besides, we must accelerate\
    \ the development of sensors and rapid\nSensors 2019, 19, 1833\n17 of 24\ndetection\
    \ devices soil, animal and plant life. At the network layer, we should focus on\
    \ high-capacity data\nreal-time broadband communication standards and technologies\
    \ for complex agricultural application\nenvironments, high-reliability, adaptive,\
    \ low-power network deployment and management strategies\nand algorithms. With\
    \ wide coverage, high capacity, low power consumption and low cost, LPWAN is\n\
    ideal for some agricultural scenarios where text-based, video and voice service\
    \ support is not required\nand coverage, power consumption and cost are critical.\
    \ Future research and deployment should\nfocus on IoT solutions based on LPWAN.\
    \ In the application layer, governments and organizations\nshould develop uniﬁed\
    \ standards for the sensors and identiﬁcation interface devices, data transmission\n\
    communication protocols, multi-source data fusion analysis processing and application\
    \ services in\nprotected agriculture through international cooperation or negotiation.\
    \ Software developers should\ndevelop large open source databases and signal processing\
    \ algorithm libraries for diﬀerent areas\nof facility agriculture. For universities\
    \ and research institutes, cloud-based agricultural intelligent\ndecision-making\
    \ models, multi-source data-based information fusion algorithms, agricultural\
    \ Big Data\nmining technologies, distributed intelligent processing systems and\
    \ lightweight IoT authentication,\nencryption and authorization mechanisms will\
    \ be the key research directions for the future. With an\nincreased presence of\
    \ IoT technology in protected agriculture, its potential for the reﬁned management\n\
    of crop, livestock and aquatic animals will be recognized. Besides, as a technical\
    \ means to monitor\nthe production, processing, circulation and consumption of\
    \ agricultural products, IoTwill play an\nincreasingly important role in food\
    \ safety.\n6. Conclusions\nIn this survey, we present a comprehensive review of\
    \ the state-of-the-art in IoT deployment\nfor protected agriculture applications.\
    \ First, a simple review of previous IoT structure was given.\nSecondly, the basic\
    \ IoT architectures in protected agriculture were introduced. Next, discussions\
    \ of\nsensor, data communication, cloud computing, edge computing, ML and other\
    \ vital IoT technologies\nin protected agriculture are elaborated.\nThen, we highlight\
    \ various IoT applications and their\npotential to solve various farming problems\
    \ in protected agriculture. By classifying the research and\ndeployment literature\
    \ on IoT in protected agriculture, three important application ﬁelds were given:\n\
    plant management, animal farming and agri-food supply chain traceability. Finally,\
    \ a detailed analyses\nof IoT research challenges and future prospects were outlined.\n\
    The survey of the existing works directs us concluding remarks. The future prospects\
    \ of IoT in\nprotected agriculture are expectant, but the challenges mentioned\
    \ above must handle. In order to\ncope with its complex and changing agricultural\
    \ environment, the hardware devices must be fully\nupgraded to further enhance\
    \ their universality, reliability, expansibility, endurance and intelligence\n\
    level, while reducing costs and operative diﬃculty. Secondly, the local network\
    \ must be protected from\ninterference from other networks. In addition, the interoperability,\
    \ ﬁltering and semantic annotation of\ndata generated by the various devices of\
    \ IoT must be realized to a certain extent. Only in this way\ncan we optimize\
    \ the Big Data decision support model by using a large amount of heterogeneous\
    \ data.\nSecurity, anonymity and control over the access rights on the information\
    \ is vital for such a system to\nbe adopted. Finally, the impact of IoT on the\
    \ agroecological environment and social economy should\nbe considered in the application\
    \ of protected agriculture, to realize the sustainable development of\nagricultural\
    \ environment as quick as possible.\nAuthor Contributions: The collection, classiﬁcation\
    \ and arrangement of references were done by Q.Z., H.L.\nThe Writing and revising\
    \ of this article were done by X.S. (Xiaojie Shi), X.A., X.S. (Xia Sun), L.X.\
    \ The Drawing of\ntables and pictures were done by Y.G. The work presented in\
    \ the paper was conceived within research projects led\nby X.S. (Xia Sun), Y.G.\n\
    Funding: This article was supported by National Natural Science Foundation of\
    \ China (No. 31772068, 31701681,\n31872909), Special Project of Independent Innovation\
    \ of Shandong Province (2018CXGC0214), Shandong Provincial\nNatural Science Foundation\
    \ (ZR2016CM29, ZR2017BC001, ZR2018ZC0126, ZR2018BC055), Key Research and\nInvention\
    \ Program of Shandong Province (2017GNC10119), Key Innovative project for 2017\
    \ Major Agriculture\nApplication Technology of Shandong Province.\nSensors 2019,\
    \ 19, 1833\n18 of 24\nConﬂicts of Interest: The authors declare no conﬂict of\
    \ interest.\nReferences\n1.\nSarma, S.;\nDavid, L.B.;\nKevin, J.A. The Networked\
    \ Physical World Proposals for Engineering\nthe Next Generation of Computing,\n\
    Commerce & Automatic-Identiﬁcation.\nAvailable online:\nhttps://www.semanticscholar.org/paper/The-Networked-Physical-World-Proposals-for-the-Next-Sarma-\n\
    Brock/88b4a255082d91b3c88261976c85a24f2f92c5c3#paper-header (accessed on 13 April\
    \ 2019).\n2.\nPeña-López, I. ITU Internet Report 2005: The Internet of Things;\
    \ International Telecommunication Union:\nGeneva, Switzerland, 2005.\n3.\nRay,\
    \ P.P. A survey on Internet of Things architectures. J. King Saud Univ. Comput.\
    \ Inf. Sci. 2018, 30, 291–319.\n4.\nIslam, S.R.; Kwak, D.; Kabir, M.H.; Hossain,\
    \ M.; Kwak, K.S. The internet of things for health care:\nA comprehensive survey.\
    \ IEEE Access 2015, 3, 678–708.\n5.\nAsghari, P.; Rahmani, A.M.; Javadi, H.H.S.\
    \ Internet of Things applications: A systematic review. Comput. Netw.\n2019, 148,\
    \ 241–261.\n6.\nJensen, M.H.; Malter, A.J. Protected Agriculture: A Global Review;\
    \ World Bank Publications: Washington, DC, USA, 1995.\n7.\nMekala, M.S.; Viswanathan,\
    \ P. A Survey: Smart agriculture IoT with cloud computing. In Proceedings of the\n\
    2017 International conference on Microelectronic Devices, Circuits and Systems\
    \ (ICMDCS), Vellore, India,\n10–12 August 2017; pp. 1–7.\n8.\nKamilaris, A.; Prenafeta-Boldú,\
    \ F.X. Deep learning in agriculture: A survey. Comput. Electron. Agric.\n2018,\
    \ 147, 70–90.\n9.\nWolfert, S.; Ge, L.; Verdouw, C.; Bogaardt, M.-J. Big Data\
    \ in Smart Farming—A review. Agric. Syst. 2017, 153, 69–80.\n10.\nDlodlo, N.;\
    \ Kalezhi, J. The internet of things in agriculture for sustainable rural development.\
    \ In Proceedings\nof the 2015 International Conference on Emerging Trends in Networks\
    \ and Computer Communications\n(ETNCC), Windhoek, Namibia, 17–20 May 2015; pp.\
    \ 13–18.\n11.\nPang, Z.; Chen, Q.; Han, W.; Zheng, L. Value-centric design of\
    \ the internet-of-things solution for food supply\nchain: Value creation, sensor\
    \ portfolio and information fusion. Inf. Syst. Front. 2015, 17, 289–319.\n12.\n\
    Liu, P.; Li, B.; Yu, X. Intelligent Control System of Cucumber Production in the\
    \ Greenhouse Based on Internet\nof Things. In Proceedings of the International\
    \ Conference on Cloud Computing and Security, Haikou, China,\n8–10 June 2018;\
    \ pp. 395–406.\n13.\nMa, J.; Li, X.; Wen, H.; Fu, Z.; Zhang, L. A key frame extraction\
    \ method for processing greenhouse vegetables\nproduction monitoring video. Comput.\
    \ Electron. Agric. 2015, 111, 92–102.\n14.\nTalavera, J.M.; Tobón, L.E.; Gómez,\
    \ J.A.; Culman, M.A.; Aranda, J.M.; Parra, D.T.; Quiroz, L.A.; Hoyos, A.;\nGarreta,\
    \ L.E. Review of IoT applications in agro-industrial and environmental ﬁelds.\
    \ Comput. Electron. Agric.\n2017, 142, 283–297.\n15.\nVerdouw, C.N.; Robbemond,\
    \ R.M.; Verwaart, T.; Wolfert, J.; Beulens, A.J.M. A reference architecture for\n\
    IoT-based logistic information systems in agri-food supply chains. Enterp. Inf.\
    \ Syst. UK 2018, 12, 755–779.\n16.\nKoshizuka, N.; Sakamura, K. Ubiquitous ID:\
    \ Standards for Ubiquitous Computing and the Internet of Things.\nIEEE. Pervas.\
    \ Comput. 2010, 9, 98–101.\n17.\nSinha, N.; Pujitha, K.E.; Alex, J.S.R. Xively\
    \ based sensing and monitoring system for IoT. In Proceedings\nof the 2015 International\
    \ Conference on Computer Communication and Informatics (ICCCI), Coimbatore,\n\
    India, 8–10 January 2015; pp. 1–6.\n18.\nDerhamy, H.; Eliasson, J.; Delsing, J.;\
    \ Priller, P. A survey of commercial frameworks for the internet of things.\n\
    In Proceedings of the 2015 IEEE 20th Conference on Emerging Technologies & Factory\
    \ Automation (ETFA),\nLuxembourg, 8–11 September 2015; pp. 1–8.\n19.\nETSI. Machine-To-Machine\
    \ Communications (M2M): Functional Architecture; International Telecommunication\n\
    Union: Geneva, Switzerland, 2011; Volume 102, p. 690.\n20.\nLa, H.J.; Kim, S.D.\
    \ A Service-Based Approach to Designing Cyber Physical Systems. In Proceedings\
    \ of\nthe 2010 IEEE/ACIS 9th International Conference on Computer and Information\
    \ Science, Yamagata, Japan,\n18–20 August 2010; pp. 895–900.\n21.\nCarrez, F.;\
    \ Bauer, M.; Boussad, M.; Bui, N.; Jardak, C.; De Loof, J.; Magerkurth, C.; Meissner,\
    \ S.; Nettsträter, A.;\nOlivereau, A.; et al. Internet of Things—Architecture\
    \ IoT-A, Deliverable D1. 5—Final Architectural Reference\nModel for the IoT v3.0;\
    \ Framework Programme; European Union: Brussels, Belgium, 2013.\nSensors 2019,\
    \ 19, 1833\n19 of 24\n22.\nGe, W.; Zhao, C. State-of-the-art and developing strategies\
    \ of agricultural internet of things. Trans. Chin. Soc.\nAgric. Mach. 2014, 45,\
    \ 222–230. (In Chinese)\n23.\nAntonacci, A.; Arduini, F.; Moscone, D.; Palleschi,\
    \ G.; Scognamiglio, V. Nanostructured (Bio) sensors for\nsmart agriculture. Trac-Trend.\
    \ Anal. Chem. 2018, 98, 95–103.\n24.\nLi, F.; Wang, X.; Sun, X.; Guo, Y.; Zhao,\
    \ W. A dual-signal ampliﬁcation strategy for kanamycin based on ordered\nmesoporous\
    \ carbon-chitosan/gold nanoparticles-streptavidin and ferrocene labelled DNA.\
    \ Anal. Chim. Acta\n2018, 1033, 185–192. [PubMed]\n25.\nZheng, Y.; Liu, Z.; Jing,\
    \ Y.; Jie, L.; Zhan, H. An acetylcholinesterase biosensor based on ionic liquid\n\
    functionalized graphene–gelatin-modiﬁed electrode for sensitive detection of pesticides.\
    \ Sens. Actuators\nB Chem. 2015, 210, 389–397.\n26.\nJiao, Y.; Fu, J.; Hou, W.;\
    \ Shi, Z.; Guo, Y.; Xia, S.; Yang, Q.; Li, F. Homogeneous electrochemical aptasensor\
    \ based on\na dual amplification strategy for sensitive detection of profenofos\
    \ residues. New J. Chem. 2018, 42, 14642–14647.\n27.\nBao, J.; Huang, T.; Wang,\
    \ Z.; Yang, H.; Geng, X.; Xu, G.; Samalo, M.; Sakinati, M.; Huo, D.; Hou, C.\n\
    3D graphene/copper oxide nano-ﬂowers based acetylcholinesterase biosensor for\
    \ sensitive detection of\norganophosphate pesticides. Sens. Actuators B Chem.\
    \ 2019, 279, 95–101.\n28.\nLi, F.; Guo, Y.; Wang, X.; Sun, X. Multiplexed aptasensor\
    \ based on metal ions labels for simultaneous detection\nof multiple antibiotic\
    \ residues in milk. Biosens. Bioelectron. 2018, 115, 7–13. [PubMed]\n29.\nNegara,\
    \ C.; Vieth, K.-U.; Lafontaine, M.; Freund, M. Automatic Fruit Sorting by Non-Destructive\n\
    Determination\nof\nQuality\nParameters\nUsing\nVisible-near\nInfrared\nto\nImprove\n\
    Wine\nQuality:\nII. Regression Analysis. NIR News 2014, 25, 4–6.\n30.\nWenjun,\
    \ J.; Zhou, S.; Jingyi, H.; Shuo, L. In situ measurement of some soil properties\
    \ in paddy soil using\nvisible and near-infrared spectroscopy. PLoS ONE 2014,\
    \ 9, e105708.\n31.\nShao, Y.; Zhao, C.; Bao, Y.; He, Y. Quantiﬁcation of Nitrogen\
    \ Status in Rice by Least Squares Support Vector\nMachines and Reﬂectance Spectroscopy.\
    \ Food Bioprocess Technol. 2012, 5, 100–107.\n32.\nNie, P.; Dong, T.; He, Y.;\
    \ Qu, F. Detection of soil nitrogen using near infrared sensors based on soil\
    \ pretreatment\nand algorithms. Sensors 2017, 17, 1102. [CrossRef]\n33.\nSoerensen,\
    \ D.D.; Pedersen, L.J. Infrared skin temperature measurements for monitoring health\
    \ in pigs:\nA review. Acta Vet. Scand. 2015, 57, 5.\n34.\nTang, K. Technology\
    \ development of agricultural internet of things in foreign countries and its\
    \ inspiration to\nChina. China Acad. J. Electron. Publ. House 2013, 28, 700–707.\
    \ (In Chinese)\n35.\nKumar, A.; Hancke, G.P. Energy Eﬃcient Environment Monitoring\
    \ System Based on the IEEE 802.15.4\nStandard for Low Cost Requirements. IEEE\
    \ Sens. J. 2014, 14, 2557–2566.\n36.\nCorkery, G.; Ward, S.; Kenny, C.; Hemmingway,\
    \ P. Monitoring environmental parameters in poultry\nproduction facilities. In\
    \ Proceedings of the Computer Aided Process Engineering-CAPE Forum 2013,\nGraz,\
    \ Austria, 7–10 April 2013.\n37.\nRajalakshmi, P.;\nMahalakshmi, S.D. IOT based\
    \ crop-ﬁeld monitoring and irrigation automation.\nIn Proceedings of the 2016\
    \ 10th International Conference on Intelligent Systems and Control (ISCO),\nCoimbatore,\
    \ India, 7–8 January 2016; pp. 1–6.\n38.\nRevathi, S.; Sivakumaran, N. Fuzzy Based\
    \ Temperature Control of Greenhouse. IFAC-PapersOnLine 2016, 49, 549–554.\n39.\n\
    ˇColakovi´c, A.; Hadžiali´c, M. Internet of Things (IoT): A review of enabling\
    \ technologies, challenges, and\nopen research issues. Comput. Netw. 2018, 144,\
    \ 17–39.\n40.\nRaza, U.; Kulkarni, P.; Sooriyabandara, M. Low Power Wide Area\
    \ Networks: An Overview. IEEE Commun.\nSurv. Tutor. 2017, 19, 855–873.\n41.\n\
    Sinha, R.S.; Wei, Y.; Hwang, S.-H. A survey on LPWA technology: LoRa and NB-IoT.\
    \ ICT Express 2017, 3, 14–21.\n42.\nSforza, F. Communications System. U.S. Patent\
    \ US8406275B2, 26 March 2013.\n43.\nNolan, K.E.; Kelly, M.Y.; Nolan, M.; Brady,\
    \ J.; Guibene, W. Techniques for resilient real-world IoT.\nIn Proceedings of\
    \ the 2016 International Wireless Communications and Mobile Computing Conference\n\
    (IWCMC), Paphos, Cyprus, 5–9 September 2016; pp. 222–226.\n44.\nRaza, U.; Camerra,\
    \ A.; Murphy, A.L.; Palpanas, T.; Picco, G.P. Practical data prediction for real-world\
    \ wireless\nsensor networks. IEEE Trans. Knowl. Data Eng. 2015, 27, 2231–2244.\n\
    45.\nMikhaylov, K.; Petaejaejaervi, J.; Haenninen, T. Analysis of capacity and\
    \ scalability of the LoRa low power\nwide area network technology. In Proceedings\
    \ of the European Wireless 2016, 22th European Wireless\nConference, Oulu, Finland,\
    \ 18–20 May 2016; pp. 1–6.\nSensors 2019, 19, 1833\n20 of 24\n46.\nNB-IoT-Enabling\
    \ New Business Opportunities; Tech Rep; Huawei Technol: Shenzhen, China, 2015.\n\
    47.\nSrbinovska, M.; Gavrovski, C.; Dimcev, V.; Krkoleva, A.; Borozan, V. Environmental\
    \ parameters monitoring\nin precision agriculture using wireless sensor networks.\
    \ J. Clean. Prod. 2015, 88, 297–307.\n48.\nFerentinos, K.P.; Katsoulas, N.; Tzounis,\
    \ A.; Bartzanas, T.; Kittas, C. Wireless sensor networks for greenhouse\nclimate\
    \ and plant condition assessment. Biosyst. Eng. 2017, 153, 70–81.\n49.\nOjha,\
    \ T.; Misra, S.; Raghuwanshi, N.S. Wireless sensor networks for agriculture: The\
    \ state-of-the-art in\npractice and future challenges. Comput. Electron. Agric.\
    \ 2015, 118, 66–84.\n50.\nMell, P.; Grance, T. The NIST Definition of Cloud Computing;\
    \ U.S. Department of Commerce: Washington, DC, USA, 2011.\n51.\nHashem, I.A.T.;\
    \ Yaqoob, I.; Anuar, N.B.; Mokhtar, S.; Gani, A.; Ullah Khan, S. The rise of “big\
    \ data” on cloud\ncomputing: Review and open research issues. Inf. Syst. 2015,\
    \ 47, 98–115.\n52.\nNativi, S.; Mazzetti, P.; Santoro, M.; Papeschi, F.; Craglia,\
    \ M.; Ochiai, O. Big data challenges in building the\nglobal earth observation\
    \ system of systems. Environ. Model. Softw. 2015, 68, 1–26.\n53.\nRupanagudi,\
    \ S.R.; Ranjani, B.S.; Nagaraj, P.; Bhat, V.G.; Thippeswamy, G. A novel cloud\
    \ computing\nbased smart farming system for early detection of borer insects in\
    \ tomatoes. In Proceedings of the 2015\nInternational Conference on Communication,\
    \ Information & Computing Technology (ICCICT), Mumbai,\nIndia, 15–17 January 2015;\
    \ pp. 1–6.\n54.\nFerrández-Pastor, F.J.; García-Chamizo, J.M.; Nieto-Hidalgo,\
    \ M.; Mora-Pascual, J.; Mora-Martínez, J.\nDeveloping Ubiquitous Sensor Network\
    \ Platform Using Internet of Things: Application in Precision\nAgriculture. Sensors\
    \ 2016, 16, 1141. [CrossRef]\n55.\nBotta, A.; de Donato, W.; Persico, V.; Pescapé,\
    \ A. Integration of Cloud computing and Internet of Things:\nA survey. Future\
    \ Gener. Comput. Syst. 2016, 56, 684–700.\n56.\nSatyanarayanan, M. The emergence\
    \ of edge computing. Computer 2017, 50, 30–39.\n57.\nShi, W.; Dustdar, S. The\
    \ Promise of Edge Computing. Computer 2016, 49, 78–81.\n58.\nShi, W.; Cao, J.;\
    \ Zhang, Q.; Li, Y.; Xu, L. Edge computing: Vision and challenges. IEEE Internet\
    \ Things 2016, 3, 637–646.\n59.\nBiamonte, J.; Wittek, P.; Pancotti, N.; Rebentrost,\
    \ P.; Wiebe, N.; Lloyd, S. Quantum machine learning. Nature\n2017, 549, 195–202.\n\
    60.\nRehman, T.U.; Mahmud, M.S.; Chang, Y.K.; Jin, J.; Shin, J. Current and future\
    \ applications of statistical machine\nlearning algorithms for agricultural machine\
    \ vision systems. Comput. Electron. Agric. 2019, 156, 585–605.\n61.\nZheng, B.;\
    \ Myint, S.W.; Thenkabail, P.S.; Aggarwal, R.M. A support vector machine to identify\
    \ irrigated crop\ntypes using time-series Landsat NDVI data. Int. J. Appl. Earth.\
    \ Obs. 2015, 34, 103–112.\n62.\nLeCun, Y.; Bengio, Y.; Hinton, G. Deep learning.\
    \ Nature 2015, 521, 436–444. [PubMed]\n63.\nEdwards-Murphy, F.; Magno, M.; Whelan,\
    \ P.M.; O’Halloran, J.; Popovici, E.M. b+ WSN: Smart beehive with\npreliminary\
    \ decision tree analysis for agriculture and honey bee health monitoring. Comput.\
    \ Electron. Agric.\n2016, 124, 211–219.\n64.\nRussell, S.J.; Norvig, P. Artificial\
    \ Intelligence: A Modern Approach; Pearson Education Limited: New York, NY, USA,\
    \ 2018.\n65.\nDubey, S.R.; Jalal, A.S. Adapted Approach for Fruit Disease Identiﬁcation\
    \ using Images. Image Process.\nConcepts Methodol. Tools Appl. 2014, 2, 51–65.\n\
    66.\nGili, A.; Álvarez, C.; Bagnato, R.; Noellemeyer, E. Comparison of three methods\
    \ for delineating management\nzones for site-speciﬁc crop management. Comput.\
    \ Electron. Agric. 2017, 139, 213–223.\n67.\nLiu, S.; Cossell, S.; Tang, J.; Dunn,\
    \ G.; Whitty, M. A computer vision system for early stage grape yield\nestimation\
    \ based on shoot detection. Comput. Electron. Agric. 2017, 137, 88–101.\n68.\n\
    Shakoor, N.; Lee, S.; Mockler, T.C. High throughput phenotyping to accelerate\
    \ crop breeding and monitoring\nof diseases in the ﬁeld. Curr. Opin. Plant Biol.\
    \ 2017, 38, 184–192.\n69.\nCrossa, J.; Pérez-Rodríguez, P.; Cuevas, J.; Montesinos-López,\
    \ O.; Jarquín, D.; de los Campos, G.; Burgueño, J.;\nGonzález-Camacho, J.M.; Pérez-Elizalde,\
    \ S.; Beyene, Y.; et al. Genomic Selection in Plant Breeding: Methods,\nModels,\
    \ and Perspectives. Trends Plant Sci. 2017, 22, 961–975.\n70.\nMontesinos-López,\
    \ O.A.;\nMartín-Vallejo, J.;\nCrossa, J.;\nGianola, D.;\nHernández-Suárez, C.M.;\n\
    Montesinos-López, A.; Juliana, P.; Singh, R. A benchmarking between deep learning,\
    \ support vector\nmachine and Bayesian threshold best linear unbiased prediction\
    \ for predicting ordinal traits in plant breeding.\nG3 Genes Genomes Genet. 2019,\
    \ 9, 601–618.\n71.\nKyosuke, Y.; Wei, G.; Yosuke, Y.; Seishi, N. On plant detection\
    \ of intact tomato fruits using image analysis\nand machine learning methods.\
    \ Sensors 2014, 14, 12191–12206. [CrossRef]\nSensors 2019, 19, 1833\n21 of 24\n\
    72.\nRahnemoonfar, M.; Sheppard, C. Deep count: Fruit counting based on deep simulated\
    \ learning. Sensors\n2017, 17, 905. [CrossRef]\n73.\nBendre, M.R.; Thool, R.C.;\
    \ Thool, V.R. Big data in precision agriculture: Weather forecasting for future\
    \ farming.\nIn Proceedings of the 2015 1st International Conference on Next Generation\
    \ Computing Technologies (NGCT),\nDehradun, India, 4–5 September 2015; pp. 744–750.\n\
    74.\nZhou, K.; Fu, C.; Yang, S. Big data driven smart energy management: From\
    \ big data to big insights.\nRenew. Sustain. Energy Rev. 2016, 56, 215–225.\n\
    75.\nKamilaris, A.; Kartakoullis, A.; Prenafeta-Boldú, F.X. A review on the practice\
    \ of big data analysis in\nagriculture. Comput. Electron. Agric. 2017, 143, 23–37.\n\
    76.\nTeitel, M.; Atias, M.; Barak, M. Gradients of temperature, humidity and CO2\
    \ along a fan-ventilated greenhouse.\nBiosyst. Eng. 2010, 106, 166–174.\n77.\n\
    López, A.; Valera, D.L.; Molina-Aiz, F.D.; Peña, A. Sonic anemometry to evaluate\
    \ airﬂow characteristics\nandtemperature distribution in empty Mediterranean greenhouses\
    \ equipped with pad–fan and fog systems.\nBiosyst. Eng. 2012, 113, 334–350.\n\
    78.\nSreekantha, D.K.; Kavya, A.M. Agricultural crop monitoring using IOT—A study.\
    \ In Proceedings of\nthe 2017 11th International Conference on Intelligent Systems\
    \ and Control (ISCO), Coimbatore, India,\n5–6 January 2017; pp. 134–139.\n79.\n\
    Kodali, R.K.; Jain, V.; Karagwal, S. IoT based smart greenhouse. In Proceedings\
    \ of the 2016 IEEE Region 10\nHumanitarian Technology Conference (R10-HTC), Agra,\
    \ India, 21–23 December 2016; pp. 1–6.\n80.\nMat, I.; Kassim, M.R.M.; Harun, A.N.;\
    \ Yusoﬀ, I.M. IoT in Precision Agriculture applications using Wireless\nMoisture\
    \ Sensor Network. In Proceedings of the 2016 IEEE Conference on Open Systems (ICOS),\
    \ Langkawi,\nMalaysia, 10–12 October 2016; pp. 24–29.\n81.\nCarmassi, G.; Bacci,\
    \ L.; Bronzini, M.; Incrocci, L.; Maggini, R.; Bellocchi, G.; Massa, D.; Pardossi,\
    \ A.\nModelling transpiration of greenhouse gerbera (Gerbera jamesonii H. Bolus)\
    \ grown in substrate with saline\nwater in a Mediterranean climate. Sci. Hortic.\
    \ 2013, 156, 9–18.\n82.\nLi, D.; Xu, L.; Tan, C.; Goodman, E.; Fu, D.; Xin, L.\
    \ Digitization and visualization of greenhouse tomato\nplants in indoor environments.\
    \ Sensors 2015, 15, 4019–4051. [CrossRef]\n83.\nSingh, M.C.; Singh, J.P.; Singh,\
    \ K.G. Development of a microclimate model for prediction of temperatures\ninside\
    \ a naturally ventilated greenhouse under cucumber crop in soilless media. Comput.\
    \ Electron. Agric.\n2018, 154, 227–238.\n84.\nChangqing, C.; Hui, L.; Wenjun,\
    \ H. Internet of Agriculture-Based Low Cost Smart Greenhouse Remote\nMonitor System.\n\
    In Proceedings of the 2018 Chinese Automation Congress (CAC), Zhejiang, China,\n\
    30 November 2018; pp. 3940–3945.\n85.\nHe, C.; Shen, M.; Liu, L.; Okinda, C.;\
    \ Yang, J.; Shi, H. Design and realization of a greenhouse temperature\nintelligent\
    \ control system based on NB-IoT. J. South China Agric. Univ. 2018, 39, 117–124.\n\
    86.\nDan, L.I.U.; Xin, C.; Chongwei, H.; Liangliang, J. Intelligent agriculture\
    \ greenhouse environment monitoring\nsystem based on IOT technology. In Proceedings\
    \ of the 2015 IEEE International Conference on Intelligent\nTransportation, Big\
    \ Data and Smart City, Halong Bay, Vietnam, 19–20 December 2015; pp. 487–490.\n\
    87.\nElijah, O.; Rahman, T.A.; Orikumhi, I.; Leow, C.Y.; Hindia, M.N. An Overview\
    \ of Internet of Things (IoT) and\nData Analytics in Agriculture: Beneﬁts and\
    \ Challenges. IEEE Internet Things J. 2018, 5, 3758–3773.\n88.\nDeng, X.; Dou,\
    \ Y.; Hu, D. Robust closed-loop control of vegetable production in plant factory.\n\
    Comput. Electron. Agric. 2018, 155, 244–250.\n89.\nLiao, M.S.; Chen, S.F.; Chou,\
    \ C.Y.; Chen, H.Y.; Yeh, S.H.; Chang, Y.C.; Jiang, J.A. On precisely relating\
    \ the\ngrowth of Phalaenopsis leaves to greenhouse environmental factors by using\
    \ an IoT-based monitoring\nsystem. Comput. Electron. Agric. 2017, 136, 125–139.\n\
    90.\nZamora-Izquierdo, M.A.; Santa, J.; Martínez, J.A.; Martínez, V.; Skarmeta,\
    \ A.F. Smart farming IoT platform\nbased on edge and cloud computing. Biosyst.\
    \ Eng. 2019, 177, 4–17.\n91.\nKatsoulas, N.; Bartzanas, T.; Kittas, C. Online\
    \ professional irrigation scheduling system for greenhouse crops.\nActa Hortic.\
    \ 2017, 1154, 221–228.\n92.\nLarsen, A.E.; Patton, M.; Martin, E.A. High highs\
    \ and low lows: Elucidating striking seasonal variability in\npesticide use and\
    \ its environmental implications. Sci. Total Environ. 2019, 651, 828–837.\n93.\n\
    Silva, V.; Mol, H.G.J.; Zomer, P.; Tienstra, M.; Ritsema, C.J.; Geissen, V. Pesticide\
    \ residues in European\nagricultural soils—A hidden reality unfolded. Sci. Total\
    \ Environ. 2019, 653, 1532–1545.\nSensors 2019, 19, 1833\n22 of 24\n94.\nPixia,\
    \ D.; Xiangdong, W. Recognition of greenhouse cucumber disease based on image\
    \ processing technology.\nOpen J. Appl. Sci. 2013, 3, 27.\n95.\nAhmed, R.Z.; Biradar,\
    \ R.C.; Chaudhari, S.S. Cluster-based data aggregation for pest identiﬁcation\
    \ in coﬀee\nplantations using wireless sensor networks. Comput. Electr. Eng. 2016,\
    \ 56, 591–607.\n96.\nTirelli, P.; Borghese, N.A.; Pedersini, F.; Galassi, G.;\
    \ Oberti, R. Automatic monitoring of pest insects traps\nby Zigbee-based wireless\
    \ networking of image sensors. In Proceedings of the 2011 IEEE International\n\
    Instrumentation and Measurement Technology Conference, Binjiang, China, 10–12\
    \ May 2011; pp. 1–5.\n97.\nAhouandjinou, A.S.R.M.; Kiki, P.M.A.F.; Assogba, K.\
    \ Smart environment monitoring system by using\nsensors ultrasonic detection of\
    \ farm pests. In Proceedings of the 2017 2nd International Conference on\nBio-engineering\
    \ for Smart Technologies (BioSMART), Paris, France, 30 August–1 September 2017;\
    \ pp. 1–5.\n98.\nFoughali, K.; Fathallah, K.; Frihida, A. Using Cloud IOT for\
    \ disease prevention in precision agriculture.\nProcedia Comput. Sci. 2018, 130,\
    \ 575–582.\n99.\nKim, Y.-B.; Choi, D.-O. Design of Business Management System\
    \ for Livestock Pens Based of IoT. J. Korean\nEntertain. Ind. Assoc. 2014, 8,\
    \ 207–216.\n100. Ilapakurti, A.; Vuppalapati, C. Building an IoT Framework for\
    \ Connected Dairy.\nIn Proceedings\nof the 2015 IEEE First International Conference\
    \ on Big Data Computing Service and Applications,\nRedwood City, CA, USA, 30 March–2\
    \ April 2015; pp. 275–285.\n101. Oriwoh, E.; Sant, P.; Epiphaniou, G. Guidelines\
    \ for internet of things deployment approaches–the thing\ncommandments. Procedia\
    \ Comput. Sci. 2013, 21, 122–131.\n102. Chen, J.; Sung, W.; Lin, G. Automated\
    \ Monitoring System for the Fish Farm Aquaculture Environment.\nIn Proceedings\
    \ of the 2015 IEEE International Conference on Systems, Man and Cybernetics, Kowloon,\n\
    China, 9–12 October 2015; pp. 1161–1166.\n103. Vijayakumar, N.; Ramya, R. The\
    \ real time monitoring of water quality in IoT environment. In Proceedings of\n\
    the 2015 International Conference on Innovations in Information, Embedded and\
    \ Communication Systems\n(ICIIECS), Coimbatore, India, 19–20 March 2015; pp. 1–5.\n\
    104. Wiranto, G.; Mambu, G.A.; Hiskia; Hermida, I.D.P.; Widodo, S. Design of online\
    \ data measurement and automatic\nsampling system for continuous water quality\
    \ monitoring. In Proceedings of the 2015 IEEE International Conference\non Mechatronics\
    \ and Automation (ICMA), Beijing, China, 2–5 August 2015; pp. 2331–2335.\n105.\
    \ Scalera, A.; Brizzi, P.; Tomasi, R.; Gregersen, T.; Mertens, K.; Maselyne, J.;\
    \ Van den Weghe, H. The PigWise\nproject: A novel approach in livestock farming\
    \ through synergistic performances monitoring at individual\nlevel. In Proceedings\
    \ of the Conference on Sustainable Agriculture through ICT Innovation, Turin,\
    \ Italy,\n24–27 June 2013; pp. 1–8.\n106. Memon, M.H.; Kumar, W.; Memon, A.; Chowdhry,\
    \ B.S.; Aamir, M.; Kumar, P. Internet of Things (IoT)\nenabled smart animal farm.\
    \ In Proceedings of the 2016 3rd IEEE International Conference on Computing for\n\
    Sustainable Global Development, New Delhi, India, 16–18 March 2016; pp. 2067–2072.\n\
    107. Encinas, C.; Ruiz, E.; Cortez, J.; Espinoza, A. Design and implementation\
    \ of a distributed IoT system for\nthe monitoring of water quality in aquaculture.\
    \ In Proceedings of the 2017 Wireless Telecommunications\nSymposium (WTS), Chicago,\
    \ IL, USA, 26–28 April 2017; pp. 1–7.\n108. Soto-Zarazúa, G.M.; Peniche-Vera,\
    \ R.; Rico-García, E.; Toledano-Ayala, M.; Ocampo-Velázquez, R.;\nHerrera-Ruiz,\
    \ G. An automated recirculation aquaculture system based on fuzzy logic control\
    \ for aquaculture\nproduction of tilapia (Oreochromis niloticus). Aquacult. Int.\
    \ 2011, 19, 797–808.\n109. Stutz, P.V.; Golani, L.K.; Witkin, J.M. Animal models\
    \ of fatigue in major depressive disorder. Physiol. Behav.\n2019, 199, 300–305.\
    \ [PubMed]\n110. Shinde, T.A.; Prasad, J.R. IoT based animal health monitoring\
    \ with naive Bayes classiﬁcation. Int. J. Emerg.\nTrends Technol. 2017, 1, 8104–8107.\n\
    111. Jingqiu, G.; Zhihai, W.; Ronghua, G.; Huarui, W. Cow behavior recognition\
    \ based on image analysis and\nactivities. Int. J. Agric. Biol. Eng. 2017, 10,\
    \ 165–174.\n112. Yazdanbakhsh, O.; Zhou, Y.; Dick, S. An intelligent system for\
    \ livestock disease surveillance. In. Sci.\n2017, 378, 26–47.\n113. Benhai, X.;\
    \ Liang, Y.; Xiaohua, P.; Zhengang, Y. Review on application of Internet of Things\
    \ technology in\nanimal husbandry in China. Trans. Chin. Soc. Agric. Eng. 2015,\
    \ 31, 237–246. (In Chinese)\n114. Liu, S.; Xu, L.; Li, D.; Duan, Q.; Wei, X. Research\
    \ on remote system for disease diagnosis of penaeus vannamei\nbased on internet\
    \ of things. J. China Agric. Univ. 2014, 19, 189–195. (In Chinese)\nSensors 2019,\
    \ 19, 1833\n23 of 24\n115. Liu, X.; Sha, Z.; Wang, C.; Li, D.; Bureau, D.P. A\
    \ web-based combined nutritional model to precisely predict\ngrowth, feed requirement\
    \ and waste output of gibel carp (Carassius auratus gibelio) in aquaculture operations.\n\
    Aquaculture 2018, 492, 335–348.\n116. Keeffe, S.O.; Manap, H.; Dooly, G.; Lewis,\
    \ E. Real-time monitoring of agricultural ammonia emissions based on optical\n\
    fibre sensing technology. In Proceedings of the SENSORS, Kona, HI, USA, 1–4 November\
    \ 2010; pp. 1140–1143.\n117. Pan, L.; Yang, S.X. An Electronic Nose Network System\
    \ for Online Monitoring of Livestock Farm Odors.\nIEEE-ASME Trans. Mech. 2009,\
    \ 14, 371–376.\n118. Costa, C.; Antonucci, F.; Pallottino, F.; Aguzzi, J.; Sarriá,\
    \ D.; Menesatti, P. A Review on Agri-food Supply\nChain Traceability by Means\
    \ of RFID Technology. Food Bioprocess Technol. 2013, 6, 353–366.\n119. Clemens,\
    \ R.L. Meat traceability in Japan. Iowa Ag Rev. 2015, 9, 2.\n120. Li, H.; Zhang,\
    \ B.; Zhang, L.; Xue, Y.; He, M.; Ren, C. A food traceability framework for dairy\
    \ and other\nlow-margin products. IBM J. Res. Dev. 2016, 60, 1–8.\n121. Chen,\
    \ C.; Xu, X. Design and application of traceability and supervision platform for\
    \ broiler based on Internet\nof Things. Trans. Chin. Soc. Agric. Eng. 2017, 33,\
    \ 224–231. (In Chinese)\n122. Ndraha, N.; Hsiao, H.-I.; Vlajic, J.; Yang, M.-F.;\
    \ Lin, H.-T.V. Time-temperature abuse in the food cold chain:\nReview of issues,\
    \ challenges, and recommendations. Food Control 2018, 89, 12–21.\n123. Sichao,\
    \ L.; Xifu, W. Toward an intelligent solution for perishable food cold chain management.\
    \ In Proceedings\nof the 2016 7th IEEE International Conference on Software Engineering\
    \ and Service Science (ICSESS), Beijing,\nChina, 26–28 August 2016; pp. 852–856.\n\
    124. Zhao, G.; Yu, H.; Wang, G.; Sui, Y.; Zhang, L. Applied Research of IOT and\
    \ RFID Technology in Agricultural\nProduct Traceability System; Springer International\
    \ Publishing: Cham, Switzerland, 2015; pp. 506–514.\n125. Pigini, D.; Conti, M.\
    \ NFC-based traceability in the food chain. Sustainability 2017, 9, 1910. [CrossRef]\n\
    126. Badia-Melis, R.; Mishra, P.; Ruiz-García, L. Food traceability: New trends\
    \ and recent advances. A review.\nFood Control 2015, 57, 393–401.\n127. Liu, Y.;\
    \ Wang, H.; Wang, J.; Qian, K.; Kong, N.; Wang, K.; Zheng, L.; Shi, Y.; Engels,\
    \ D.W. Enterprise-oriented IoT name\nservice for agricultural product supply chain\
    \ management. Int. J. Distrib. Sens. Netw. 2015, 11, 308165.\n128. Verdouw, C.N.;\
    \ Wolfert, J.; Beulens, A.J.M.; Rialland, A. Virtualization of food supply chains\
    \ with the internet\nof things. J. Food Eng. 2016, 176, 128–136.\n129. Wang, J.;\
    \ Yue, H. Food safety pre-warning system based on data mining for a sustainable\
    \ food supply chain.\nFood Control 2017, 73, 223–229.\n130. Galvez, J.F.; Mejuto,\
    \ J.C.; Simal-Gandara, J. Future challenges on the use of blockchain for food\
    \ traceability\nanalysis. Trac-Trend. Anal. Chem. 2018, 107, 222–232.\n131. Kshetri,\
    \ N. 1 Blockchain’s roles in meeting key supply chain management objectives. Int.\
    \ J. Inf. Manag.\n2018, 39, 80–89.\n132. Feng, T. A supply chain traceability\
    \ system for food safety based on HACCP. blockchain & Internet of things.\nIn\
    \ Proceedings of the 2017 International Conference on Service Systems and Service\
    \ Management, Dalian,\nChina, 16–18 June 2017; pp. 1–6.\n133. Leng, K.; Bi, Y.;\
    \ Jing, L.; Fu, H.-C.; Van Nieuwenhuyse, I. Research on agricultural supply chain\
    \ system with\ndouble chain architecture based on blockchain technology. Future\
    \ Gener. Comput. Syst. 2018, 86, 641–649.\n134. Chen, R.-Y. Autonomous tracing\
    \ system for backward design in food supply chain. Food Control 2015, 51, 70–84.\n\
    135. Tzounis, A.; Katsoulas, N.; Bartzanas, T.; Kittas, C. Internet of Things\
    \ in agriculture, recent advances and\nfuture challenges. Biosyst. Eng. 2017,\
    \ 164, 31–48.\n136. Bannister, K.; Giorgetti, G.; Gupta, S.K. Wireless sensor\
    \ networking for hot applications: Eﬀects of temperature\non signal strength,\
    \ data collection and localization. In Proceedings of the 5th Workshop on Embedded\n\
    Networked Sensors, Charlottesville, VA, USA, 2–3 June 2008; pp. 1–5.\n137. Boano,\
    \ C.A.; Tsiftes, N.; Voigt, T.; Brown, J.; Roedig, U. The impact of temperature\
    \ on outdoor industrial\nsensornet applications. IEEE Trans. Ind. Inform. 2010,\
    \ 6, 451–459.\n138. Sheng, P.; Guo, Y.; Li, P. Intelligent measurement and control\
    \ system of facility agriculture based on ZigBee\nand 3G. Trans. Chin. Soc. Agric.\
    \ Mach. 2012, 43, 229–233. (In Chinese)\n139. Wang, X.; Chao, Y.; Mao, S. TensorBeat:\
    \ Tensor Decomposition for Monitoring Multi-Person Breathing Beats\nwith Commodity\
    \ WiFi. ACM Trans. Intell. Syst. Technol. 2017, 9, 8.\n140. Lin, J.; Yu, W.; Zhang,\
    \ N.; Yang, X.; Zhang, H.; Zhao, W. A Survey on Internet of Things: Architecture,\n\
    Enabling Technologies, Security and Privacy and Applications. IEEE Internet Things\
    \ J. 2017, 4, 1125–1142.\nSensors 2019, 19, 1833\n24 of 24\n141. Sicari, S.; Rizzardi,\
    \ A.; Grieco, L.A.; Coen-Porisini, A. Security, privacy and trust in Internet\
    \ of Things:\nThe road ahead. Comput. Netw. 2015, 76, 146–164.\n142. Jebri, S.;\
    \ Abid, M.; Bouallegue, A. Stac-protocol: Secure and trust anonymous communication\
    \ protocol for iot.\nIn Proceedings of the 2017 13th International Wireless Communications\
    \ and Mobile Computing Conference\n(IWCMC), Valencia, Spain, 26–30 June 2017;\
    \ pp. 365–370.\n143. Lee, J.Y.; Lin, W.C.; Huang, Y.H. A lightweight authentication\
    \ protocol for internet of things. In Proceedings of the 2014\nIEEE International\
    \ Symposium on Next-Generation Electronics, Kwei-Shan, Taiwan, 7–10 May 2014;\
    \ pp. 1–2.\n144. Shen, J.; Chang, S.; Shen, J.; Liu, Q.; Sun, X. A lightweight\
    \ multi-layer authentication protocol for wireless\nbody area networks. Future\
    \ Gener. Comput. Syst. 2018, 78, 956–963.\n145. TongKe, F. Smart agriculture based\
    \ on cloud computing and IOT. J. Converg. Inf. Technol. 2013, 8. [CrossRef]\n\
    146. Daoliang, L.; Hao, Y. State-of-the-art Review for Internet of Things in Agriculture.\
    \ Trans. Chin. Soc.\nAgric. Mach. 2018, 49, 1–20. (In Chinese)\n147. Ray, P.P.\
    \ Internet of things for smart agriculture: Technologies, practices and future\
    \ direction. J. Ambient\nIntell. Smart Environ. 2017, 9, 395–420.\n148. Gubbi,\
    \ J.; Buyya, R.; Marusic, S.; Palaniswami, M. Internet of Things (IoT): A vision,\
    \ architectural elements,\nand future directions. Future Gener. Comput. Syst.\
    \ 2013, 29, 1645–1660.\n149. Vatari, S.; Bakshi, A.; Thakur, T. Green house by\
    \ using IOT and cloud computing. In Proceedings of the\nIEEE International Conference\
    \ on Recent Trends in Electronics, Information & Communication Technology\n(RTEICT),\
    \ Bangalore, India, 20–21 May 2016; pp. 246–250.\n150. Shaikh, F.K.; Exposito,\
    \ E.; Zeadally, S. Enabling technologies for green Internet of Things. IEEE. Syst.\
    \ J.\n2017, 11, 983–994.\n© 2019 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: (An, 2019)
  journal: Sensors (Basel)
  limitations: null
  pdf_link: https://www.mdpi.com/1424-8220/19/8/1833/pdf?version=1555499645
  publication_year: 2019
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: State-of-the-Art Internet of Things in Protected Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.3013005
  analysis: '>'
  apa_citation: 'Zhang, X., Cao, Z., & Dong, W. (2020). Overview of Edge Computing
    in the Agricultural Internet of Things: Key Technologies, Applications, Challenges.
    IEEE Access, 8, 141748-141761. https://doi.org/10.1109/ACCESS.2020.3013005'
  authors:
  - Xihai Zhang
  - Zhanyuan Cao
  - Dong Wei
  citation_count: 65
  data_sources: null
  explanation: This paper explores the role of fog computing in distributing processing
    and storage across the network, enhancing scalability and reliability. Fog computing
    helps share the load of the cloud server and reduce latency, especially in scenarios
    where real-time processing is critical. By utilizing fog computing, the computational
    tasks that are typically performed in the cloud are offloaded to the edge segment
    for execution, thereby reducing the response time and enhancing the overall efficiency
    of the system.
  extract_1: 'Through the emergence of three classical Edge computing models, we can
    find a new trend: some calculations that take place in the cloud are gradually
    moving to the edge.'
  extract_2: In addition, the real-time requirements of some applications of the Agricultural
    Internet of Things are high. The edge server is close to the data source, so it
    provides intelligent services nearby and shortens the response time.
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access
    >Volume: 8 Overview of Edge Computing in the Agricultural Internet of Things:
    Key Technologies, Applications, Challenges Publisher: IEEE Cite This PDF Xihai
    Zhang; Zhanyuan Cao; Wenbin Dong All Authors 68 Cites in Papers 5985 Full Text
    Views Open Access Comment(s) Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Background III. Research Status of Edge Computing
    in Agricultural IoT IV. Challenges V. Conclusion and Prospects Authors Figures
    References Citations Keywords Metrics Abstract: The application of the Internet
    of Things in agricultural development usually occurs via a monitoring network
    that consists of a large number of sensor nodes, thus gradually transforming agriculture
    from a human-oriented and single-machine-centric production model to an information-
    and software-centric production model. Due to the large area coverage of agriculture
    and the variety of production objects, if all farmland perception information
    is gathered into the cloud server, the server will exert greater pressure on the
    network, which reduces the speed of response to event processing. This problem
    may be perfectly solved by the recent emergence of Edge computing, which can share
    the load of the cloud server and reduce the delay. Edge computing has prospects
    in agricultural applications, such as pest identification, safety traceability
    of agricultural products, unmanned agricultural machinery, agricultural technology
    promotion, and intelligent management. The application of the Agricultural Internet
    of Things integrates artificial intelligence, the Internet of Things, and blockchain
    and Virtual/Augmented Reality technologies. This paper primarily reviews the application
    of Edge computing in the Agricultural Internet of Things and investigates the
    combination of Edge computing and Artificial Intelligence, blockchain and Virtual/Augmented
    reality technology. The challenges of Edge computing task allocation, data processing,
    privacy protection and security, and service stability in agriculture are reviewed.
    The future development direction of Edge computing in the Agricultural Internet
    of Things is predicted. Three key technologies of agricultural IoT based on edge
    computing. Published in: IEEE Access ( Volume: 8) Page(s): 141748 - 141761 Date
    of Publication: 31 July 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3013005
    Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this
    material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction Agriculture is the foundation of human survival and plays a fundamental
    role. It is vital to the stability and the development of society. However, with
    the emergence of three factors that restrict agricultural development: (i) population
    aging and migration (also known as urbanization) have led to a gradual decline
    of rural labor; (ii) industrial buildings and residential buildings are gradually
    eroding agricultural land, resulting in a reduction in agricultural land [1];
    (iii) increased climate change will also continue to change crop growth conditions
    such as temperature, precipitation and soil moisture in unpredictable ways [2].
    The challenges that agriculture faces are increasingly severe. In order to meet
    the challenges, people must be seize the opportunity of the third revolution in
    the information technology industry, for example, Internet of Things (IoT), big
    data, artificial intelligence et al.. They can bring fundamental changes to agriculture.
    The Agricultural Internet of Things (Agricultural IoT) not only solves the problems
    of increasing food demand, environmental pollution caused by excessive use of
    pesticides and fertilizers, and the safety of agricultural products [3], but also
    reduces labor costs [4], greatly promoting the continuous development of agriculture
    in the direction of high quality and high output. However, the widespread use
    of the Agricultural IoT has led to the explosive growth of sensors and the increasing
    number of data. The large amount of data increases the load on the cloud server,
    which reduces the response speed. The emergence of the Edge computing models can
    solve the problem of cloud server load. The classical Edge computing models include:
    the Cloudlet introduced by Satyanarayanan solves the latency problem of accessing
    the cloud by using computing resources available in the local network; the Fog
    computing introduced by Cisco enables applications to run directly on the edge
    of the network through billions of smart connected devices; the Mobile Edge computing
    introduced by the European Telecommunications Standards Institute (ETSI) allows
    mobile users to utilize computing services from base stations. Through the emergence
    of three classical Edge computing models, we can find a new trend: some calculations
    that take place in the cloud are gradually moving to the edge [5]. Similarly,
    the data generated by the Agricultural IoT is also increasing, resulting in increased
    load on the cloud server. In order to share the offload of the cloud server, the
    computation that occurs in the cloud is offloaded to the edge segment for execution.
    In addition, the real-time requirements of some applications of the Agricultural
    Internet of Things are high. The edge server is close to the data source, so it
    provides intelligent services nearby and shortens the response time. Although
    the Edge computing is favorable for agricultural development, but Edge computing
    applied to agriculture has little literature, so we combine with a lot of related
    literature and present a review of the application of Edge computing in the Agricultural
    IoT, which inspires more people to develop the Agricultural IoT under Edge computing
    in the future. This paper reviews the concept and research status of the Edge
    computing and Agricultural IoT. In addition, we describe in detail the research
    status of Edge computing in the application of pest identification and crop classification,
    agricultural product safety traceability, unmanned agricultural machinery, agricultural
    product promotion, etc., which mainly involves artificial intelligence, blockchain
    and virtual/augmented reality technology. In the end, the literature also mentions
    the challenges and opportunities of the combination of Edge computing and Agricultural
    IoT, and provides direction for the development of Edge computing and Agricultural
    IoT. The organizational structure of this paper is as follows. In Section II,
    it mainly introduces the concept of Edge computing and Agricultural IoT in detail;
    the necessity of combining Edge computing with the Agricultural IoT is discussed
    in Section II; then in Section III, the application of Agricultural IoT combined
    with Edge computing is reviewed; in Section IV, Edge computing combined Agricultural
    IoT meets the challenges; finally, the paper is concluded and a vision of their
    future is described in Section V. SECTION II. Background This section mainly introduces
    the concept, structure, and research status of Edge computing and Agricultural
    IoT. The aim of this section is to provide the reader with a solid foundation
    of the research subject. A. Edge Computing 1) Definition and Development of Edge
    Computing With the rapid development of the IoT, billions of smart devices are
    installed each year. It is estimated that more than 70 billion smart devices will
    be installed by 2020. The access of a large number of devices has led to an increase
    in the amount of data to be processed. We face the challenge of processing and
    analyzing those data, especially if it needs to be processed in real time. Simply
    using a cloud server is not able to provide real-time response while handling
    such a large data set. Edge computing is proposed for solving the problem of data
    explosion and network delay. The research fields of Edge computing include Fog
    computing [6], Cloudlet [7], [8] and Mobile Edge computing (MEC) [9], [10]. Although
    Edge computing has been proposed for a long time, there is no uniform and strict
    definition. Satyanarayanan [11] defines it as, “Edge computing is a new computing
    model that deploys computing and storage resources (such as Cloudlets, fog nodes)
    to networks closer to mobile devices or sensors.” Its system architecture is shown
    in Fig. 1, which is divided into three layers: terminal device, edge node and
    cloud center. As we all know, 5G is becoming more and more popular, and edge computing
    is one of the core technologies in the 5G era, but its architecture is open and
    can also be deployed and applied to 4G LTE networks. Operators will smoothly evolve
    on the existing network structure, and finally achieve full coverage of the computing
    power of low-level network nodes, and continue to improve edge computing capabilities.
    FIGURE 1. The system architecture. Show All From the development trend since 2010,
    the attention of Edge computing continues to rise, as shown in Fig. 2 (Some data
    quoted from [12]). Especially since 2016, the attention of Edge computing has
    increased rapidly. Shi et al. derived five typical scenarios for the application
    of Edge computing: cloud offload, video analytics, collaborative edge, smart home,
    smart city [13]. Sun et al. proposed a real-time fault detection algorithm based
    on Edge computing and cloud computing for the video monitoring system, which effectively
    improved the average repair time [14]. In [15], in order to meet the demand of
    smart home, a system based on Edge computing was designed to predict the demand
    for household electricity. The system can provide better quality of service and
    enhance the scalability of the system. In [16], Higashino et al. proposed a large-scale
    spatio-temporal information collection mechanism based on Edge computing and IoT
    to mitigate disasters and build a safe and intelligent city. FIGURE 2. Number
    of papers retrieved by “Edge computing” on Google Scholar. Show All 2) The Hierarchy
    of Edge Computing The Edge Computing Consortium (ECC) defines four areas for Edge
    computing: equipment domain (Perception and control layer), network domain (Connection
    and network layer), data domain (Storage and service layer), application domain
    (Business and intelligence layer). As shown in Fig. 3: these four layers are the
    computing objects of Edge computing. FIGURE 3. The hierarchical deployment structure
    for Edge computing. Show All Equipment domain: in the equipment domain, Edge computing
    can directly process the perceived information. For example, intelligent identification
    can be directly deployed in video collection and audio collection. Network domain:
    in the network domain, the automatic conversion of each network protocol is realized,
    and the data format is standardized. At the same time, the Edge computing in the
    network domain can conduct intelligent management of the “converged network”,
    reduce the redundancy of the network, ensure the security of the network, and
    further participate in the optimization of the network. Data domain: Edge computing
    in the data domain makes data management smarter and more flexible. First, Edge
    computing can analyze the integrity and consistency of the data, and conduct data
    collation to delete redundant and wrong data in the system. Secondly, Edge computing
    can maintain efficient coordination with cloud computing and share cloud computing
    tasks. Application domain: Edge computing in the application domain provides localized
    business logic and application intelligence. It enables applications to be flexible
    and fast- responding. Edge computing can provide localized application services
    independently, when it loses contact with the cloud. Edge computing is deployed
    in the above four domains, where it is closer to the user and application scenarios.
    It enables the device to have intelligent sensing capabilities and it can be equipped
    with adaptive connection strategies and more optimized deployment strategies.
    It can solve data heterogeneity and related network synchronization problems in
    the system, and provide local business logic and application intelligence. Edge
    computing is an open and distributed platform that provides network, computing,
    and storage services at the edge of the network, close to the data end. It meets
    the demands of intelligent, real-time business, data optimization, and security
    aspects of agricultural digital transformation. In addition, there are two kinds
    of edge servers mentioned in this paper: remote edge computing servers located
    on the edge of wireless network; local edge computing device. B. Agricultural
    Internet of Things 1) Definition and Development of Agricultural IoT Since the
    IoT technology is proposed in 1999, it has gradually penetrated into various fields
    [17], [18]. Agriculture is the focus of attention of people all over the world,
    and it is naturally also involved. With regard to the concept of Agricultural
    IoT, different researchers have given different interpretations from different
    perspectives. For example, Li et al. [19] believe that the Agricultural IoT usually
    refers to the use of relevant sensing devices to perceive information on environmental
    factors in plants, agricultural production tools, etc., and an informational network
    for real-time monitoring of agricultural production processes, positioning and
    management of agricultural production objects based on pre-defined protocols for
    data transmission. The characteristics of Agricultural IoT are relatively clear,
    mainly in the aspect comprehensive perception, intelligent processing and timely
    feedback of agriculture from planting to sales [20]. The emergence of cloud computing
    and its extended Edge computing models such as fog computing and Mobile Edge computing
    have made the Agricultural IoT a milestone. It has completely transformed the
    management and operation of the farm [21]. The Agricultural IoT has made great
    progress in recent years. Xing et al. designed a greenhouse information intelligent
    monitoring system based on ZigBee wireless sensing technology [22]. Diego et al.
    designed agrometeorological monitoring station based on Bluetooth technology,
    and the data was sent to the computer through the wireless Bluetooth module [23].
    In order to realize the collection, management, visualization and upload of real-time
    information in paddy fields, Zhang et al. proposed a paddy field information monitoring
    system based on Solar-Powered Panel and GPRS technology [24]. However, both ZigBee
    and GPRS are short-range wireless technologies and have high operating costs.
    Therefore, a wide area network monitoring system combining NB-IoT and LoRa is
    designed in [25]. By studying the development of farmland monitoring systems,
    we find that the development of Agricultural IoT is not only reflected in the
    rapid growth of the types and quantities of agricultural sensors, but also in
    combination with emerging technologies. 2) Architecture of Agricultural IoT At
    the beginning of development, Agricultural IoT mainly focused on the application
    of the single entity, which leads to the scalability, scalability and interoperability
    of the entire system gradually fail to meet the growing demand of the agricultural
    production. Later, the new hierarchical structure model of Agricultural IoT was
    proposed, based on the specific needs of agricultural production and marketing,
    combined with the principles of safety, reusability and expansion of IoT systems
    and practical experience. As shown in Fig. 4, the model is divided into five layers
    from top to bottom, including the sensing layer, the transport layer, the application
    layer, etc. The communication protocols and data are transmitted between the layers
    using different communication protocols. FIGURE 4. The agricultural IoT architecture
    (AIoT in the picture represents the Agricultural IoT). Show All The sensing layer
    of the Agricultural IoT consists of various sensor uses Wi-Fi, GPRS, and ZigBee
    technologies to transmit data, and transmits the collected data to the access
    layer of the Agricultural IoT system structure; the access layer is mainly composed
    of hardware gateways and built-in software middleware. The middleware can effectively
    shield the complexity of the underlying heterogeneous sensing network and provide
    a unified abstract management interface to provide a foundation for the rapid
    establishment of Agricultural IoT business applications; the network layer transmits
    data to the upper layer through Internet Protocol, mobile communication network
    protocols; the Agricultural IoT data sharing layer is equivalent to a huge data
    pool, which realizes the integrated sharing of various types of monitoring data.
    The layer mainly uses transmission protocols such as TCP and UDP; the application
    layer obtains data from the data sharing layer through protocols such as HTTP,
    FTP and other protocols and constructs a corresponding Agricultural IoT system.
    Compared with the traditional three-layer and four-layer IoT architecture, the
    functions of each layer in the five-layer Agricultural IoT architecture are clearer
    and more independent, which is beneficial to the network load balancing between
    servers at different levels, and can reduce the communication burden of the enterprise
    network. C. The Necessity of Combining Edge Computing With Agricultural IoT Based
    on the combination of IoT and cloud, the Agricultural IoT system has simple device
    access and rapid system setup. However, due to the centralized processing of data
    by the cloud computing model, it is difficult to solve the following problems
    when the device and data are exploding. (1) Excessive resource cost: the sensors
    continuously collect various sensor data, and the data is usually stable or rarely
    changed. Uploading all the data to the cloud for processing will consume a lot
    of network resources and cloud resources. (2) Real-time performance is difficult
    to guarantee: data processing and decision-making are all in the cloud, and the
    processing is not timely. (3) Excessive reliance on the network: when the network
    is unstable, it cannot process data and control devices in time. (4) Data security
    and privacy protection: all sensor data and control data need to be transmitted
    through the network, and there are risks such as information eavesdropping, tampering,
    fraud and illegal operation of equipment. These problems will increase the cost
    of Agricultural IoT systems (network flow, storage, and computational costs),
    reduce stability and availability of system, and make it difficult to automate
    production control, especially in large-scale, factory-planted, and aquaculture.
    In addition, non-standard and self-resource limitations of sensors and control
    devices (including computing, storage capabilities, etc.) bring obstacles to device
    access and linkage control. Therefore, it is necessary to study and solve the
    above problems to develop smart agriculture and promote precision agriculture.
    Edge computing provides intelligent services at the edge of the networks which
    are close to thing or data source, enabling each edge of the IoT to have data
    collection, analysis, computing, and intelligent processing capabilities to process
    data, filter data, and analyze data nearby. In addition, local decision- making
    and processing can meet key requirements of network capabilities and resource
    constraints, security and privacy challenges. Therefore, we introduce Edge computing
    into the Agricultural IoT system to improve the standardization, stability, and
    availability of the agricultural IoT system. SECTION III. Research Status of Edge
    Computing in Agricultural IoT This section introduces the concepts of Artificial
    Intelligence (AI), blockchain and Virtual Reality /Augmented Reality and their
    research status in agriculture. The most important concept is to summarize the
    research status of Edge computing and Agricultural IoT application technology.
    A. Research on Artificial Intelligence in Agriculture Based on Edge Computing
    Since the breakthrough in deep learning in 2001, AI has entered a new era and
    is gradually infiltrating the modern agricultural field and injecting new vitality
    and a new impetus into the development of modern agriculture. In addition, the
    rapid development of mobile computing technology and the IoT has generated billions
    of bytes of data at the edge of the network. Driven by this trend, AI must be
    pushed to the edge of the network to fully release the potential of edge big data.
    This situation caused the emergence of Edge computing, which is an emerging paradigm
    that pushes computing tasks and services from the core of the network to the edge
    of the network. AI computing is becoming increasingly complex, and an increasing
    amount of data is needed. As a result, edge intelligence (EI) is generated as
    an interdisciplinary subject of AI and Edge computing [26]. Edge intelligence
    leverages the available data and resources of end devices, edge nodes, and cloud
    centers to optimize the total training and reasoning performance of the deep learning
    model. In 2–5 years later, the Edge computing technologies and machine learning
    will be in the mainstream [27]. AI has a place in Agricultural IoT application
    technology and is primarily employed in video analysis, unmanned agricultural
    machinery, pest identification, and plant species identification. Therefore, the
    research of edge intelligence is one of the most important components of future
    research topics. 1) Artificial Intelligence AI is a branch of computer science.
    Research in this area includes robotics, language recognition, image recognition,
    natural language processing, and expert systems. The AI mentioned in this paper
    primarily involves image processing; its main applications in agriculture are
    pest and disease identification, crop species identification, and unmanned agricultural
    machinery. Since Yann LeCun published Gradient-based learning applied to document
    recognition in 1998 [28], deep learning has been developed for more than 20 years.
    Represented by the well-known Convolutional Neural Network (CNN), deep learning
    has achieved leapfrog development in recent years due to the following four classic
    CNNs: AlexNet [29], VGG [30], GoogleNet [31] and ResNet [32]. Zhang et al. improved
    the GoogleNet model structure and Cifar10 model structure and applied an improved
    model to training of corn leaf pest identification, which improved the optimal
    recognition accuracy by 0.4% and 1.7% respectively [33]. Too et al. [34] directly
    tuned the VGG16, Inception-V4, ResNet, and DenseNet networks and applied them
    to train and test insect images from 14 plants in the PlantVillage image set.
    They compared the experimental results by using different iterations and attained
    the optimal recognition accuracy of 99.75%. Goh et al. constructed an optimal
    Convolutional Neural Network to complete the classification task based on plant
    mutants and improve the classification success rate [35]. Research on the accuracy
    of pest and disease identification is very mature but few studies examine the
    running time of the model. In this paper, the author proposes the idea of using
    Edge computing to reduce the running time of the model. According to the introduction
    of [26], the author summarizes the framework of edge intelligence, which includes
    the edge-based mode, device-based mode, edge-device mode, and edge-cloud mode,
    as shown in Fig. 5. In Fig. 5(a), the terminal devices receive the data and send
    data to the edge server. DNN model reasoning is performed on the edge server,
    and the forecast results are returned to the device. As shown in Fig. 5(b), the
    edge server sends the DNN model to the mobile device and locally performs model
    reasoning. As shown in Fig. 5(c), the device divides the DNN model into multiple
    parts. The device executes the DNN model to a specific layer and sends the intermediate
    data to the edge server. The edge server will execute the remaining layers, and
    the predicted result is sent to the mobile device. The device in Fig. 5(d) is
    responsible for input data collection, and the DNN model is executed in cooperation
    with the cloud through the edge. Due to the development of deep learning, the
    commonly employed models of DNN (such as AlexNet and GoogleNet) have reached millions
    of neurons. All neurons are concentrated in mobile devices or edge servers; thus,
    the hardware requirements are very high. Their concentration in the cloud server
    will cause delays; thus, use of the edge-cloud mode is common. FIGURE 5. Edge
    Intelligence inference modes: (a)Edge-based mode (b)Device-based mode (c) Edge-device
    mode (d) Edge-cloud mode. Show All 2) Research Status of Edge Intelligence In
    this section, we review the relevant literature on the combination of AI and Edge
    computing techniques. The role of edge nodes in AI is summarized in Table 1. TABLE
    1 Overview of the Role of Edge Computing in Artificial Intelligence a: Execution
    of Part of the Program To solve the problems of insufficient processing capability
    and limited resources of terminal equipment, the industry introduced computational
    offloading in Mobile Edge Computing [36]. In the application of plant diseases
    and pests identification, the role of the edge server is to execute part of the
    program, which uses computing offload technology. At the same time we also need
    to consider the division of CNN or DNN procedures. MAUI is a system, which enables
    fine-grained energy-aware offload of mobile code to the infrastructure [37]. It
    maximizes the potential for energy savings through fine-grained code while minimizing
    changes to applications. It allows part of the program to be executed locally
    on the smart phone and others to be run remotely in the infrastructure. Second,
    MAUI provides a method for each application. But MAUI needs to perform an analysis
    step for each individual application, while performing DNN partitioning requires
    prediction. The Neurosurgeon lightweight scheduler proposed by Kang et al., makes
    decisions based on the DNN topology without any real-time analysis [38]. It selects
    the best partition point, optimizes end-to-end latency, and performs DNN division
    between mobile and cloud. The new computing paradigm reduces the computation required
    by the data center, thus shortening the query service time and improving the query
    throughput. The deep network layer is partitioned to respectively run on mobile
    devices and the cloud. Compared to [38], the deep network is further divided into
    cloud, fog computing devices and users’ mobile devices. Decommissioning procedures
    takes up some time, but their overall time is much shorter than the time they
    spend executing in the cloud center or terminal alone. Teerapittayanon et al.
    [39] for adapting to the cloud-edge-terminal distributed hierarchy, proposed a
    distributed depth neural network (DDNNs) based on distributed hierarchy. DNN is
    divided into various parts by Cloud Exit, Edge Exit and Local Exit, and then it
    is mapped into a distributed computing hierarchy. The structure takes advantage
    of the geographical diversity of sensors, which not only reduces communication
    costs but also improves the accuracy of target recognition. DeepX [40] divides
    the entire DNN or CNN into multiple parts and executes them on each local device.
    Its advantage is that it uses runtime layer compression (RLC), which no longer
    focuses on the training phase of deep learning and the compression of the entire
    model, but provides the memory consumed in the reasoning phase and the hierarchical
    compression of the computation runtime. Meanwhile, deep architecture decomposition
    (DAD) can effectively identify the units of the depth model quickly, decompose
    them, and allocate the blocks to local and remote processors. But DeepX cannot
    operate Recurrent Neural Networks (RNN) at present. The deep network layer is
    partitioned to respectively run on mobile devices and the cloud. Sun et al. [41]
    proposed mVideo to make full use of resources on collaborative edges and cloud
    nodes. The video stream processing platform is provided with a mechanism to partition
    video analysis tasks according to the available resources of mobile edge nodes.
    At the edge node, a lightweight DNN model is used to preprocess the video data,
    and the results are uploaded to the cloud node for further analysis. Its advantage
    is that the collected video data covers a large area and reduces communication
    costs. Overall, the execution time is reduced by 90%. b: Pretreatment The role
    of the edge server in the application of farm intelligent monitoring systems and
    unmanned agricultural machines is pre-processing. In the large-scale video stream
    analysis, the edge preprocessing is used to make a preliminary judgment of the
    object, so as to reduce the communication time and the load in the cloud center.
    The architecture of edge-enhanced video analysis system proposed by M.Ali is composed
    of camera terminal, edge node, cloudlet and cloud center [42]. The CNN model is
    trained and the generated model is saved in the cloud. The saved model is then
    transferred and distributed on cloudlets and cloud resources for object inference.
    In this paper, edge resources are used for the basic processing stage, which improves
    efficiency. But the authors did not experiment with the extensibility of the architecture.
    Edge preprocessing also includes compressing deep neural networks on edge devices.
    Model compression was introduced to overcome the difficulty of large computation
    and large memory consumption in the terminal of the model. In 2015, Han’s Deep
    compression model compression method was reviewed [43]. Cropping, weight sharing,
    quantization, and coding were applied to model compression and good results are
    achieved. Hardy et al. proposed a novel algorithm for updating and compressing
    models on the server [44]. It is flexible to perform distributed deep learning
    on edge devices through adaptive compression. In addition, the edge node also
    plays the role of a supervisor, which contains a test data set to calculate the
    accuracy of the central model. Finally, we found that compressing images in a
    system that sends images from edge nodes to cloud nodes can reduce communication
    bandwidth. But the introduction of compression technology also increases the computational
    overhead of compression and decompression. In general, transmitting smaller images
    may result in better performance overall, but higher compression rates may negatively
    affect prediction accuracy. Chandakkar et al. [45] proposed to update or train
    DNNs on edge devices to provide personalized services. How to deploy updates /
    training on mobile devices is our challenge. Moreover, simply from the experiment
    of updating the DNN, it is a hot research topic to study the catastrophic forgetting
    after construction in the next few years to maximize the data performance. c:
    Edge Caching Drolia et al. [46] were inspired by the web cache and proposed to
    add a cache module to the edge device. The advantage of caching on the edge server
    is that the images obtained by the terminals in the same area of the edge device
    service often have similarities. By caching the characteristics of these objects,
    these queries do not need to be submitted to the cloud, which can greatly reduce
    the delay of users. The challenge is that when the distribution of the query graph
    changes drastically, the Distribution Estimator in the edge device cannot quickly
    respond to the change. Later, they proposed Precog [47], which has the same application
    scenario, and it caches the models from the edge in the terminal device. This
    is a technology of edge and terminal device collaboration. When an object feature
    point query is missing on the terminal device, the image of the query is uploaded
    to the edge, and Markov Estimator in the edge records the query and sends the
    updated object probability distribution to the terminal device along with the
    query result. Precog has the same strengths and weaknesses as Cacher. In general,
    the program division is aimed at specific neural networks. Two or more edge servers
    can be used, and the combination of splitting and preprocessing and edge caching
    can make use of the specific structure of NN, thus providing more opportunities
    for optimization. B. Application of Edge Computing in Traceability of Agricultural
    Products An increasing number of people are eating organic agricultural products.
    However, due to the lack of common credit certificates in the market, people are
    not assured of the purchase of organic agricultural products. Therefore, tracing
    agricultural products is especially important. Wang et al. [48] and Zhang et al.
    [49] use an RFID-based meat traceability system, which traces from the customer
    to the manufacturer. It connects to the ONS server of the RFID system via the
    Internet and obtains the PML server of the IP address for each product-related
    point to obtain detailed information about product circulation; Lahbabi et al.
    proposed a traceability system that can share product certification information
    in real time [50]. Yun et al. described the research progress of key technologies
    in agricultural product traceability systems [51]. Azram et al. proposed a food
    document traceability model that is based on a software product line [52]. In
    the above centralized supply chain traceability system, members of the supply
    chain rely on an information provider to store, transmit, and share all information.
    The centralized system approach poses problems because it is a monopoly, asymmetric
    and opaque information system approach. This can lead to trust issues among players
    in the supply chain, including fraud, manipulation and tampering [53]. The blockchain,
    which is the underlying technology of digital currency, securely records transaction
    information for all currencies in a decentralized distributed ledger. The decentralization
    of the blockchain and the high transparency ensure that the traceability of stored
    data cannot be tampered with [54]. Many new distributed applications have been
    implemented based on blockchain technology. Many of these applications focus on
    the automation and digitization of financial sector processes. Automating processes
    can save money and increase transparency. Therefore, blockchain technology can
    potentially make a significant contribution to the efficiency and competitiveness
    of world agriculture. 1) Blockchain In 2008, Satoshi Nakamoto proposed the concept
    of blockchain. Blockchain refers to the technical solution of collectively maintaining
    a reliable ledger via decentralization and distrust [55]–[57]. The infrastructure
    model of blockchain technology include a data layer, network layer, consensus
    layer, incentive layer, contract layer and application layer. The centralized
    management of agricultural products and the tampering of data are solved by blockchain
    technology. Lucena et al. [58] proposed a method for measuring the grain quality
    using blockchains and smart contracts. They proposed an implementation of a practical
    case that increased the value of genetically modified (GM) exports of Brazilian
    grain exporters by 15%. To study how to promote value transfer by converting African
    farmers’ assets, such as livestock, farmland and agricultural products, into small-scale
    agriculture, Chinaka [59] and Schneider [60] proposed a product traceability system
    that is based on a prototype blockchain to improve the transparency and automation
    of the agricultural sector. Holmberg and Aquist [61] investigated a solution that
    is based on blockchain traceability in the dairy industry. These studies apply
    the concept of blockchain to product traceability but lack a framework of blockchain
    application. The structure diagram of a blockchain-based food safety traceability
    system proposed by Wang et al. [62] and Li and Wang [63] is shown in Fig 6. Based
    on this description, we determine that the application of blockchain in Agricultural
    IoT is increasing. FIGURE 6. Structure diagram of food safety traceability system
    based on blockchain. Show All 2) The Research Status Although the blockchain solves
    the problem in which data is easily falsified, the scalability of the blockchain
    is small and the memory is insufficient. The problem was solved by the combination
    of blockchain and edge computing technology. In table 2 an overview of the combination
    of edge computing and blockchain applications. Liu et al. proposed new electric
    vehicles cloud and edge (EVCE) as a typical application scenario of the Internet
    of Things, which also involves the transmission and transaction of information
    and energy [64]. At the same time, using the blockchain to connect the strong
    and weak electricity can provide EVCE with transparency and traceability security
    guarantees. Xu et al. proposed a product traceability system that is based on
    blockchain and Edge computing technology [65]. The role of the blockchain is to
    prevent malicious tampering by third parties. The edge server performs a difficult
    hash calculation with the blockchain node and returns the result to the blockchain
    node for verification. If the blockchain node does not have sufficient internal
    storage space, it can offload the entire blockchain to the edge server and store
    only relatively new blocks (referred to as storage offload) in the internal storage.
    The disadvantage is to consider the computing power of the edge nodes. In this
    regard, Stanciu proposed that the deployment of computing on the edge nodes requires
    smaller Dockers containers. The three-layer edge model was mentioned in [66].
    It consists of physical devices and processes, edge nodes and cloud services.
    The blockchain is deployed on the top layer to ensure transaction security and
    to be properly verified. Edge computing solves the inconvenience caused by blockchain
    computing applications due to limited computing power and available energy consumption
    of Agricultural IoT terminal equipment. But the paper does not take into account
    the problem of the efficiency of identity verification and the vulnerability of
    the connection between the edge node and the terminal. In [67], a distributed
    trusted authentication system combining edge computing and blockchain is proposed.
    The system is composed of three parts: physical network layer, blockchain edge
    layer and blockchain network layer. Edge computing is applied in the edge nodes
    of the blockchain to provide name resolution and edge identity authentication
    services based on smart contracts. In addition, the edge computing cache strategy
    is proposed to improve the hit rate and reduce the delay. TABLE 2 Overview of
    the Combination of Edge Computing and Applications of Blockchain However, as the
    application of blockchain technology becomes more mature, the increase in data
    has caused inventory inflation [68]. The problem of insufficient storage arises
    when the blockchain is only applied to the digital currency, to which the application
    scenario of the blockchain is not limited. For example, in [54], transaction information
    involves files, videos, and audio, which generates higher requirements for blockchain
    storage capabilities. However, the high demand for storage of blockchain data
    is not conducive to the development of blockchain. By combining IPFS [69] and
    blockchain, a decentralized identity management solution is proposed. According
    to [70] and [71], the working principle of the agricultural product traceability
    system, which is based on blockchain technology and combines Edge Computing and
    the IPFS mechanism, is shown in Fig. 7: Edge Computing is used to manage local
    networks, package data formats, and provide computing power. Data is transmitted
    from the intelligent terminal to the edge node through the edge gateway, and files
    with large memory, such as photos and videos, are stored via the IPFS mechanism.
    The content hash value returned after the storage is transmitted to the edge node
    through the cloud server. The value is packaged in the JSON format with the previous
    data, and the packaged data is stored in the blockchain in the form of a transaction.
    Once the transaction is completed, the data stored in the blockchain cannot be
    tampered with, and the data is queried in real time based on the hash value after
    the transaction. In the security traceability architecture of blockchain products
    based on edge computing, edge nodes only play the role of data processing. The
    security of data transmission and the efficiency of identity authentication are
    not considered. All in all, by building a decentralized system, blockchain can
    provide infrastructure support for the IoT and help solve the ubiquitous security
    issues in the IoT. At the same time, the IoT provides a large number of landing
    scenarios for the blockchain. FIGURE 7. Agricultural product traceability architecture
    based on edge calculation, blockchain and IPFS. Show All C. Study on the Combination
    of VR/AR and Edge Computing in Agriculture Virtual Reality and Augmented Reality
    have been the focus of the industry’s attention since 2016. Users have higher
    and higher requirements for real-time performance. Scholars have found that the
    actual physical or network distance between the client and the cloud is too large
    to limit the response speed of VR / AR. At the same time, the growth rate of bandwidth
    resources in the cloud lags far behind the growth rate of data, which ultimately
    leads to cloud computing being unable to meet the higher VR / AR computing requirements
    of bandwidth. The idea is to combine edge computing with VR/AR. Compared with
    former cloud computing, Edge computing can better support AR/VR computing scenarios:
    (1) Cisco noted that global devices will generate 600ZB data in 2020 in the Global
    Cloud Index [72], 90% of which is temporary data similar to AR/VR scenarios. A
    large amount of temporary data can be stored at the edge nodes to alleviate the
    pressure on the cloud bandwidth. (2) High delay, strong jitter and low data transmission
    rate caused by the unstable links and routes in the complex network environment
    affect the responsiveness of cloud services [73]. The edge-side is closer to the
    user-side in both geographical distance and network distance, which ensures lower
    latency and reduces network jitter, which renders edge calculation more useful
    and responsiveness stronger [11]. (3) The images involved in AR computing, such
    as face data, belong to the user’s private data. These data is stored at the edge,
    which reduces the possibility of privacy leakage. 1) Virtual/Augmented Reality
    Technology VR and AR are immersive interactive environments that are based on
    computing information [74]. VR emphasizes the immersion of the virtual world,
    which emphasizes that people can interact with objects in the virtual world in
    a natural way. While AR emphasizes the ability to incorporate computer-generated
    virtual information into real-world scenarios and does not isolate the connection
    between the observer and the real world [75]. VR and AR differ by the device.
    The VR device is a closed-type head-mounted display, which is cumbersome and inconvenient.
    AR equipment is divided into three types: head-mounted, hand-held and space-projected
    by Bimber and Raskar according to the application scenario [76], which is relatively
    light. Recently, the application research of VR/AR technology in agriculture has
    emerged. According to the study of Cupial [77], AR has many applications in agriculture
    and will become an important technology in the Agricultural IoT in the future.
    Fernandez et al. [78] developed a tractor assist system that is based on wearable
    AR technology. When a tractor is working in the field, the parts that have been
    treated in the field are displayed in the field of view of the driver’s AR glasses.
    Vidal et al. reviewed the current status of AR and proposed its new applications
    in weed science [79]. It includes software for image identification for species
    identification and quantification of weeds, and selection of herbicides based
    on weed density. Nigam et al. [80] proposed a primitive augmented reality system.
    They use augmented reality technology to help farmers identify insects and successfully
    utilize integrated pest management. Generally, farmers are not trained in entomology,
    and they tend to destroy the insects they find in the field. In fact, not all
    insects should be eliminated because the prosperity of fields and ecosystems depends
    on their existence. The authors of the paper proposed an innovative augmented
    reality application that they intend to help farmers identify insects and use
    integrated pest management. The system made recommendations for farmers to use
    pesticides reasonably and reduce pollution. Another interesting augmented reality
    application for greenhouses shown in Neto and Doke [81]. This application uses
    a network of humidity and temperature sensors to sense conditions to develop staphylococcus
    fungi in tomatoes and warn farmers through their mobile devices. In addition,
    Liu et al. noted the use of AR technology to simulate the growth of plants and
    livestock, to visualize information and help users manage different agricultural
    jobs [82]. Janna and Timo [83] proposed the use of drones and AR technology to
    accurately control the fertilization rate in agriculture. A drone is responsible
    for collecting soil information, and the AR technology guides the user to the
    generated sample points. In applications in agriculture, a mix of AR and VR technologies
    are utilized where virtual and actual environments are smoothly combined [84].
    Premsankar et al. [85] experimentally demonstrated that cloud deployments have
    higher latency than edges. Edge computing was introduced. Although various studies
    have investigated edge caching and computing, their use for AR/VR applications
    has been given minimal attention [86]. 2) Research Status In this section, we
    learned that the role of edge computing in AR/VR is mainly to store in edge and
    execute some VR/AR tasks at the edge. In table 3, we summarize the role of edge
    servers in VR/AR. TABLE 3 The Role of Edge Servers in VR/AR In fact, the role
    of edge computing in VR/AR is mainly edge caching. In edge caching, caching strategies
    can be divided into proactive and reactive. In proactive caching, the content
    to be requested is predicted and brought to the cache. In reactive caching, the
    content obtained is cached and is updated according to user needs. S.Park et al.
    came up with the idea of caching on the client side [87]. The priority cache mentioned
    in the paper can be used in the edge cache. M. Chen et al. studied edge caching
    in VR networks to reduce backhaul traffic and meet real-time requirements of VR
    users [88]. In their proposal, a unmanned aerial vehicles (UAVs) is used to collect
    the VR content requested by the user and transmit it to the small base station
    and the retrograde cache. Deep learning algorithms is implemented to find the
    best caching strategy. In J. Chakareski’s research, the authors used edge computing
    to overcome the computing limitations of VR devices by enabling users to offload
    computing tasks to edge servers [89]. The author’s goal is to use the Lyapunov
    stochastic optimization model to minimize calculation and transmission power consumption,
    but it is affected by co-channel interference, reliability and delay constraints.
    M. S. Elbamby et al. proposed an proactive caching and computing scheme to meet
    the high reliability and low latency requirements of VR users [90]. In the paper,
    information about user actions and game actions is used to pre-calculate and cache
    the next video frame to minimize latency while multi-connectivity is applied to
    ensure reliability. Although it is aimed at the application of VR games, it is
    also applicable the planting of plants in the online VR of the Agricultural IoT.
    To briefly summarize, the architecture diagram of the edge server playing a role
    of caching in VR/AR is shown in Figure 8. FIGURE 8. Structural diagram of the
    combination of edge calculation and VR/AR in agriculture. Show All Edge computing
    can also perform some parts VR/AR tasks. Yan and Qiao [91] proposed a method for
    solving the delay and bandwidth for Web AR that primarily deployed the edge server
    between the clients, assumes AR computing tasks and storage of 3D models, which
    is closer to the user end and satisfies the user’s requirements for real-time
    performance. First, the cloud node initiates full AR service access. After receiving
    a user request, it selects the most appropriate edge computing node and redirects
    the request based on the IP address. Then, according to the calculation task division,
    an independent AR engine and 3D model database are used to identify the target
    image. The architecture overcomes the difficulties of poor portability of AR devices,
    poor pure front-end performance, and high cloud computing costs. In addition,
    Hou et al. [92] proposed rendering on edge servers in order to provide a more
    lightweight wireless VR / AR experience. The paper lists the advantages and disadvantages
    of rendering on cloud servers, remote edge servers, and local edge servers: The
    advantage of cloud server rendering is that it allows users to experience VR /
    AR when moving or anywhere, but the bandwidth cost is high, and it is easy to
    cause network delay due to congestion; Remote edge server rendering can also achieve
    mobility, but its mobility depends on the movement of the mobile device, and there
    is a delay; Local edge server rendering does not provide mobility or provides
    very limited mobility but no latency. We can choose the server for rendering according
    to our needs. Finally, we found that edge computing reduced the response time
    of VR / AR, shared the computing power of VR / AR terminals and made VR / AR more
    widely used in agriculture. SECTION IV. Challenges A. Data Processing A large
    amount of data is generated in the agricultural IoT, so edge computing meets challenges
    related to data processing. In terms of data generation, edge nodes need to have
    storage plans, which determine whether the data is structured, semi-structured,
    or unstructured. So the IT team should know how much data and what type of data
    the edge node will have on the farm in the short or long term. In terms of data
    storage time, in some cases, the collected data is retained for a long time. However,
    in some cases, only a part of the data need to be retained or stored for a short
    period of time. For example, in the image recognition of pests and diseases under
    edge computing, when edge nodes execute part of the program, the original data
    can be discarded and only the feature data can be saved. In terms of data transfer,
    not all collected data must be moved to another platform. In some cases, only
    a portion of the data needs to be moved, or only data that has been aggregated,
    cleaned, or transformed in some other way, and may not even need to be moved.
    Much depends on the processing and analysis after data collection. B. Task Assignment
    In the paper, the Agricultural IoT is mainly end-edge-cloud collaboration that
    is the terminal, edge nodes and cloud center work together. So assignment of task
    is directly related to the execution and efficiency of the tasks. Partitioning
    in the edge environment needs to decompose the application into multiple components
    according to various state information, such as resources, energy consumption
    and response delay of the edge node. While the semantics of the original application
    is preserved, the program components are placed on different edge nodes. The Neurosurgeon
    proposed by Kang et al. [38] refers to the use of Fine-grained Computation Partitioning
    to partition the DNN model, which is executed at the edge or the cloud. How to
    design and implement the application partitioning technology in the Edge computing
    environment enables the proper distribution of application components among multiple
    heterogeneous edge nodes. Thus, the high performance and reliability of the application
    is obtained in the Edge computing environment. Some scholars are solving the problem
    of task allocation. For example, Using Lyapunov optimization theory to design
    a resource allocation algorithm based on a single slot. The problem of task offloading
    and resource allocation are transformed into three sub-problems of user local
    computing resource allocation, power and loan resource allocation, and edge server
    resource allocation. C. Privacy Protection and Security Computing closed to the
    data source is an effective way to protect privacy and data security. However,
    in the environment of Edge computing, privacy protection and security face the
    following challenges: (1) farmers’ awareness of privacy and security is weak.
    The survey shows that wireless connection uses default passwords, which indicates
    that many users do not protect their personal privacy. In this case, people can
    easily use a webcam, temperature and humidity sensors and other equipment to spy
    on a farm’s confidential planting and breeding data. Farmers’ awareness for privacy
    and security should be strengthened, and they are encouraged to change their passwords.
    (2) higher requirements exist for the physical security of edge equipment. Edge
    devices do not operate in fixed places, such as cloud computing centers. Most
    of these devices are open to the outside world in an uncontrolled environment
    and data on edge devices is more valuable than data on IoT terminals; they are
    more vulnerable. The access control system is added to the edge. In principle,
    this access control system should be suitable for multi-entity access control
    between different trust domains. At the same time, various factors such as geographic
    location and resource ownership should also be considered. (3) effective tools
    for data privacy and security are lacking. Although many data security methods
    are available, they are not fully applicable to Edge computing architectures.
    The network edge is more vulnerable to hacking in a highly dynamic environment.
    (4) distributed management is more difficult. Each endpoint has a specific vulnerability
    and should be protected differently. How to manage vast infrastructure is one
    of the challenges that we face. D. Service Stability The farms occupy a vast area,
    so they are all in the wilderness and the signal is poor. Service stability is
    especially important. Any kind of reliable system has four characteristics: distinguishability,
    scalability, isolation and reliability. Distinguishability: the rapid development
    of the IoT has caused the deployment of multiple services at the network edge.
    However, these services have different priorities. Key services need to be executed
    before common services are executed. For example, failure judgment and failure
    alarm of an unmanned harvester have priority over straight driving. Scalability:
    when certain equipment is worn out, the first problem to be solved is whether
    the newly purchased equipment can continue the service execution of the original
    system. We can design a flexible and extended service management layer to solve
    this problem. Isolation: in a distributed system, shared resources can be managed
    by different synchronization mechanisms, such as locks or tokens. In the edge
    system, this problem is more complicated. In the automatic watering system, if
    the program does not respond, the user can still water. Issues of isolation can
    be solved by deploying or uninstall the framework and adding access control. Reliability:
    when the edge device fails, the Edge computing system can inform the user which
    component is in trouble. Cao et al. discovered that the data transmission accuracy
    of edge equipment is lower in the case of low power and other unreliable conditions
    [93]. Thus, saving energy is a way to improve reliability. SECTION V. Conclusion
    and Prospects Edge computing, as an emerging network architecture, has realized
    localized services and improved user experience. Edge computing is extensively
    employed in the retail, financial, and agricultural fields. In this study, we
    comprehensively discuss the concepts related to Edge computing and Agricultural
    IoT. We have transformed the research status of Edge computing applications in
    the agricultural field into the research status of Edge computing combined with
    AI, blockchain, and VR/AR. For AI, Edge computing can perform data preprocessing
    and share the computing of the cloud server and storage models. For blockchain
    technology, Edge computing solves the problems caused by a lack of computing power
    and available energy consumption for terminal devices to the blockchain. The data
    stored in the edge server can ensure the reliability and security of the data
    by using blockchain technology. For VR/AR, Edge computing primarily reduces the
    response time. Some programs on the terminal can be offloaded to the edge server,
    which makes VR/AR devices lighter; thus, the scope of use is expanded. We identified
    and discussed four open research challenges. This study provides information for
    future researchers to learn about the application of Edge computing in the agricultural
    field and advances the research to resolve the unaddressed issues. As the two
    important supports of the digital transformation of the industry, Edge computing
    and cloud computing will jointly promote the Agricultural IoT to create greater
    value in the aspects of network, business, application and intelligence. Most
    of the current research on edge computing is applied in fields such as smart cities
    and smart homes. Few scholars have studied the application of edge computing in
    agriculture. In the next step, we will focus on the difference between the program
    running under the edge computing and the cloud center, and study the program specifically
    applicable to the edge computing architecture to ensure the integrity, robustness
    and accuracy of the program under the edge computing environment. In the future,
    edge computing will have a broad market in the agricultural field. According to
    IDC forecasts, 50% of the Internet of Things with more than 50 billion terminals
    will face network bandwidth limitations, and 40% of data will need to be analyzed,
    processed and cached at the edge of the network. The size of the edge computing
    market will exceed trillions, and it will become an emerging market that is evenly
    matched with cloud computing. The vast market space of edge computing will bring
    unlimited imagination and new opportunities to agriculture. Authors Figures References
    Citations Keywords Metrics More Like This Internet of Things Monitoring System
    of Modern Eco-Agriculture Based on Cloud Computing IEEE Access Published: 2019
    Remote Monitoring System for Intelligent Slaughter Production Line Based on Internet
    of Things and Cloud Platform 2020 11th International Conference on Prognostics
    and System Health Management (PHM-2020 Jinan) Published: 2020 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: (Zhang et al., 2020)
  journal: IEEE access
  key_findings: Fog computing can share the load of the cloud server, reduce latency,
    and provide real-time processing and intelligent services at the edge of the network.
  limitations: null
  main_objective: To review the role of fog computing in distributing processing and
    storage across the network, enhancing scalability and reliability in the context
    of automated irrigation management systems.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09153160.pdf
  publication_year: 2020
  relevance_score: 0.8
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Fog computing, edge computing
  title: 'Overview of Edge Computing in the Agricultural Internet of Things: Key Technologies,
    Applications, Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1515/jisys-2022-0046
  analysis: '>'
  apa_citation: Premkumar, S., & Sigappi, A. N. (2022). IoT-enabled edge computing
    model for smart irrigation system. Journal of Intelligent Systems, 31(6), 632–650.
    https://doi.org/10.1515/jisys-2022-0046
  authors:
  - S. Premkumar
  - A. N. Sigappi
  citation_count: 5
  data_sources: Real-time data from sensors, weather data from external sources
  explanation: The paper proposes a novel approach to edge-based irrigation systems
    to facilitate decision-making on watering plants on a scheduled time. The proposed
    approach applying IoT with an edge computing framework enables the farming system
    to adapt to changes in environmental conditions automatically and efficiently.
    The soil moisture prediction was performed using major regression algorithms that
    are again combined with k-means clustering for estimating the changes incurred
    in soil moisture prediction. These techniques were compared through metrics such
    as MAPE, MSE, speed, and power consumption from which XB + k-means was found to
    perform better. The XB + k-means algorithm was further used for the implementation
    of a decision mechanism on the developed edge computing model. The proposed edge
    model saves the data communication cost and reduces the response time of IoT services.
    It can be deployed on existing devices on the network edges serving as edge nodes,
    thereby reducing the overall implementation cost of a large-scale IoT system.
    The edge-based approach was found to perform better than the cloud-based approach
    in terms of response time, latency, throughput, and bandwidth usage. Finally,
    the edge model was analyzed through CPU and memory usage while running with and
    without the algorithm. In both cases, the memory utilization is almost lower to
    the total available resource of the edge device. From this, an edge device can
    allocate its remaining resource for other computing services, which increases
    the efficiency of the edge computing device.
  extract_1: The proposed edge model saves the data communication cost and reduces
    the response time of IoT services. It can be deployed on existing devices on the
    network edges serving as edge nodes, thereby reducing the overall implementation
    cost of a large-scale IoT system.
  extract_2: The edge-based approach was found to perform better than the cloud-based
    approach in terms of response time, latency, throughput, and bandwidth usage.
  full_citation: '>'
  full_text: '>

    Research Article

    S. Premkumar* and AN. Sigappi

    IoT-enabled edge computing model for smart

    irrigation system

    https://doi.org/10.1515/jisys-2022-0046

    received January 10, 2022; accepted March 16, 2022

    Abstract: Precision agriculture is a breakthrough in digital farming technology,
    which facilitates the appli-

    cation of precise and exact amount of input level of water and fertilizer to the
    crop at the required time for

    increasing the yield. Since agriculture relies on direct rainfall than irrigation
    and the prediction of rainfall

    date is easily available from web source, the integration of rainfall prediction
    with precision agriculture

    helps to regulate the water consumption in farms. In this work, an edge computing
    model is developed for

    predicting soil moisture in real time and managing the water usage in accordance
    with rain prediction. A

    soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves
    around the decision-

    making techniques with live environmental parameters including weather parameters
    for the prediction of

    soil moisture through the impact of precipitation. Numerous algorithms with the
    combination of regression

    + clustering are estimated, and it is inferred that XGBoost + k-means outperforms
    other algorithmic com-

    binations that is deployed in edge model. This model is used as an intermediary
    between the end IoT

    devices and cloud that results in the saving of computationally intensive processing
    performed on cloud

    servers. The servers located on a local edge network perform the developed algorithmic
    computations.

    Avoiding transmission over the cloud results in signiﬁcant latency, response time,
    and computation power

    savings and therefore increases the eﬃciency of data transfer. The proposed edge
    computing model is

    implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes as the
    combination of Pi with

    actuators and sensors. The monitored data from Pi are stored in MongoDB webserver
    that is controlled by

    Web dashboard. Finally, the developed model is implemented in cloud and edge where
    the edge server

    implementation performs better in terms of latency, bandwidth, throughput, response
    time, and CPU

    memory usage.

    Keywords: smart irrigation, edge-based irrigation, edge computing, precision agriculture,
    soil moisture

    prediction, irrigation management system, IoT, oﬄoading mechanism

    1 Introduction

    It is evident that agriculture always has a specialized role in the anthrophonic
    evolution and has been

    serving as an important economic factor for the growth of a country [1]. Around
    58% of the population

    depend on agriculture as the chief source of livelihood in India. The quality
    and productivity of agricultural

    products have declined over these years as several factors have inﬂuenced the
    crop productivity both

    directly and indirectly. Some major factors that aﬀect the crop production are
    climatic changes, global

    warming, and water scarcity [2]. The agricultural land’s productivity is aﬀected
    by the direct and indirect

    

    * Corresponding author: S. Premkumar, Department of Computer Science and Engineering,
    Faculty of Engineering and

    Technology, Annamalai University, Chidambaram - 608002, Tamilnadu, India, e-mail:
    premambal@gmail.com

    AN. Sigappi: Department of Computer Science and Engineering, Faculty of Engineering
    and Technology, Annamalai University,

    Chidambaram - 608002, Tamilnadu, India, e-mail: an.sigappi@gmail.com

    Journal of Intelligent Systems 2022; 31: 632–650

    Open Access. © 2022 S. Premkumar and AN. Sigappi, published by De Gruyter.

    This work is licensed under the Creative

    Commons Attribution 4.0 International License.

    changes in climate [3,4]. The crop growth has been already aﬀected by the changes
    in climate incurred by

    global warming. The nutrition quality of soil, ground water level, sea, and ocean
    are aﬀected by the

    modiﬁcations in average temperature, rainfall, and extreme weather conditions
    such as hail storms, dust

    storms, heatwaves, etc. due to global warming [5,6]. Degradation of soil is primarily
    created by various

    methods including 93.7% by water erosion, 9.5% by wind erosion, 5.9% by salinity
    and alkalinity, etc.

    Further changes in climate would inﬂuence adversely the crop production [7]. Since
    water is an indispen-

    sable requirement for plants and cultivation, the high level of soil is eroded
    and thereby the fertility is also

    declined. Due to the ever-changing climate, water scarcity has become a huge problem.
    Drought-like

    conditions is already formed in several areas and thereby the present and conventional
    farming practices

    are not suitable. New and unique environment preserving techniques are the need
    of the hour [8].

    The conventional approaches in agriculture are enhanced by the advent of several
    advancements in

    technology [9]. These new improved methodologies ensure optimized utilization
    of resources, accurate

    forecast of water needs and environmental parameters, reduction of human intervention,
    etc. [10]. Conse-

    quently, the outcomes of crops in terms of yield and quality are higher with cost-eﬀective
    methods. One

    such booming technology is the Internet of things (IoT) [11].

    IoT is the collection of components embedded in the sensor for measuring and transferring
    data via

    network devices as sensed from pumps and tractors to weather stations. Primarily,
    IoT deals with the

    transmission and reception of data related to farms through devices using the
    Internet for prediction

    and providing decisions to the farmers. IoT-based methodologies has brought a
    changeover in agricultural

    patterns and farming approaches [12]. IoT devices can gather information about
    soil moisture, chemical

    properties, dam levels, livestock health, and weather details in real time. The
    information acquired from IoT

    devices facilitates the farmers in tracking farms periodically. Farmers can save
    time and money by

    responding faster to farm conditions. Cloud computing models integrated with on-ﬁeld
    agricultural sensors

    need to be incorporated for tackling the issue of processing huge voluminous data.

    One of the major challenges of IoT is the processing of huge datasets in a sequential
    way. Some of the

    key factors that need to be focused on this process are as follows: information
    about the type and nature of

    data, the way of acquiring the data, etc. The preliminary stage comprises acquiring
    the data and ingesting

    the data to the system. Substantial cognizance of data are achieved as the data
    pass through all the

    gateways where it is cleansed and transformed before entering into the system.
    In the near future, dynamic

    prediction of soil moisture and precipitation techniques are to be developed for
    smart irrigation systems.

    Therefore, a system is developed for eﬃcient and optimal utilization of fresh
    water in irrigation along with

    drip irrigation system. It aids in ﬁnding which one of the plants fails to get
    suﬃcient water. When the water

    supply is provided the next day, this delay should not disturb the system. It
    becomes important for the

    farmers to understand the optimal usage of water and fertilizers to bring out
    sustenance in the agricultural

    industry. Therefore, processing must be done for analyzing the data, so that patterns
    can be analyzed and

    planning can be done for the long term, accordingly. Hence, it gives a broad vision
    in deciding where the

    processing is to be done exactly. Therefore, it is obvious that not all data are
    crucial, and it provides a clear

    view of which data need to be stored, discarded, and retained for both long-term
    and short-term purposes.

    Thus, all these challenging issues require to be addressed and that is where storage
    technologies are

    actually highlighted. The poor quality of Internet access in developing nations
    makes the implementation

    quite challenging. An applicable solution to solve this problem is through edge
    computing where the

    essential data could be oﬄoaded from the cloud over the edge of the cloud, and
    this is the exact point

    where the approach of smart sensing with edge computing gets in.

    With the purpose of broadening the potential of edge computing and using it in
    the agriculture domain,

    a novel approach using machine learning (ML) methods is proposed for analyzing
    the data acquired by the

    IoT devices deployed at the farm. Here, the data acquired from IoT components
    undergo preprocessing and

    ML models on the edge nodes to analyze and assess the appropriate results for
    providing the best instruc-

    tions for controlling the actuators (e.g., light, pumps at diﬀerent locations)
    in the farms.

    This article presents an automated system, as shown in Figure 1, to predict the
    soil moisture using the

    ﬁeld information acquired from the self-designed sensor node deployed at the ﬁeld
    and the forecast

    information of weather via Internet. A unique algorithm has been developed that
    revolves around the

    IoT-enabled edge computing model for smart irrigation system

    

    633

    machine learning techniques for the prediction of soil moisture. Here, many algorithms
    with the combina-

    tion of regression + clustering was estimated, and it is inferred that XGBoost
    + k-means outperforms other

    algorithmic combinations, and therefore, it is deployed for the prediction of
    soil moisture in the proposed

    work. The proposed algorithm makes eﬀective irrigation decisions with optimized
    usage of water in a more

    accurate and reliable manner. The eﬀective decision-making refers to the process
    of predicting the rainfall,

    thereby reducing the water usage in advance by the proposed algorithm in accordance
    with the predicted

    rainy days. Through this automatic decision-making, over watering is avoided by
    saving the soil. The

    server-side software is developed with node-side connectivity using the information
    for visualization and

    decision support features. This proposed algorithm is implemented in edge to prove
    the eﬃciency of the

    edge server handling the automated system better than the cloud control. The performance
    of the decen-

    tralized edge-based architecture has been evaluated for downloading the hybrid
    algorithm from cloud in

    real time execution. The performance can be enhanced by adopting edge computing
    architecture and

    measured with the help of network parameters like latency, bandwidth, and response
    time. Edge computing

    capacity is also estimated using the CPU processor and memory consumption while
    executing the proposed

    algorithm with irrigation scheduling.

    2 Related work

    In ref. [13], a smart irrigation system not aﬀected by communication disconnection
    and delay is developed

    using edge nodes deployed at the farms. Environmental parameters have an intricate
    impact on the plant

    growth. It becomes necessary for evaluating multiple AI models simultaneously
    in an actual cultivation

    environment for comparing AI models under the same conditions. Due to the working
    of existing irrigation

    systems on the cloud, communication is instable in the concurrent evaluation of
    AI models. However, the

    instability does not induce an edge node in its performance.

    The factors such as type of plant, soil, climate, humidity, temperature, and soil
    moisture need to be

    considered for the irrigation system packed with potential smart decisions. The
    nature and type of plant,

    soil, and climate are queried by ontology (branch of metaphysics dealing with
    the nature of being), whereas

    other factors such as temperature, humidity, and soil moisture are sensed by the
    sensor network. The

    trained ML model predicts the watering decisions based on ontology and other factors
    as mentioned earlier.

    Figure 1: Architecture of the proposed system.

    634

    

    S. Premkumar and AN. Sigappi

    Smart irrigation has three modules: (i) sensor network modules that sense the
    parameters impacting the water

    requirement by using sensors DHT22, light sensor BH1750, and HL-69 hygrometer
    for sensing the temperature,

    soil moisture, light, and humidity in air. (ii) Edge and IoT server’s module to
    send and receive data through

    HTTP requests. (iii) Training module in which KNN is applied on the sample dataset
    for training and decision-

    making regarding the water needs. Based on the input values, the trained model
    categorizes the input into ﬁve

    possible classes: highly not needed, not needed, average, needed, and highly needed
    [14].

    A decentralized smart irrigation approach is proposed for strawberry greenhouses
    in contrast to con-

    ventional cloud-based solutions for keeping the agricultural data at the edge
    of the network. A full-scale

    smart irrigation system in an actual strawberry greenhouse environment is developed
    after a small-scale

    smart irrigation networking prototype system and a reference architecture targeting
    edge data distribution

    for strawberry greenhouse applications are framed. A three-step industrial approach
    is formed for

    designing, implementing, and validating a solution for smart strawberry irrigation
    in greenhouses and

    keeping the corresponding data at the edge of the network at the same time: (i)
    A small-scale smart

    irrigation prototype solution with oﬀ-the-shelf hardware and software equipment
    is tested and evaluated

    on various types of plants for gaining useful insights for deployments on a large
    scale. (ii) A reference

    network architecture is designed for targeting smart irrigation and edge data
    distribution speciﬁcally for

    strawberry greenhouses. (iii) A large-scale system in an actual strawberry greenhouse
    environment is

    developed in Greece, incorporating the proposed reference architecture [15].

    Edge computing is proposed for addressing the issues by taking advantage of computing
    resources in

    the edge of the network. The issues such as an edge mobile device make it easier
    to achieve low end-to-end

    latency, high bandwidth, and low jitter to services located on the edge network.
    An edge can enforce the

    privacy policies of its owner prior to the release of the data to the cloud through
    edge analytics. If a cloud

    service becomes unavailable due to network failure, cloud failure, or a denial-of-service
    attack, a fallback

    service on a nearby edge can temporarily mask the failure. Cloud services, partial
    analysis, and control

    functions are extended to the edge nodes from the cloud data center. Edge nodes
    facilitate the timely

    monitoring of sensors in smart farming by the reduced latency and enhanced data
    transmission. Due to

    these factors, edge computing is applied through farming [16,17]. A three-tier
    open-source software plat-

    form we proposed by authors, and the platform enhanced the precision agriculture
    by introducing edge

    computing and fog computing. An network functions virtualization (NFV)-based approach
    is deployed for

    performing the local operational decisions at the edge level for mitigating the
    inﬂuence of network failures

    while using cloud data centers [18]. For control processing in smart farming,
    a platform enabling cost-

    eﬀective sensor/actuator network based on IoT, utilizes edge computing [19,20].

    The authors in ref. [21] predicted the soil moisture using a mathematical model
    that measures the

    values given by a sensor matrix on the ground. Due to the huge interval in measurements
    (10 minutes), the

    model presented estimated error by more than 10%. This methodology has incorporated
    the online

    approach by making the sensors to send data every minute to edge devices without
    time-based interruption.

    The authors of ref. [22] applied a combinative approach of using ﬁeld sensor network’s
    data along with

    weather forecast station’s data for the management of optimality in water conditions
    for the enhanced

    growth of grapes. The generated data are forwarded to a web server, which displays
    graphics without

    statistical analysis of such data. The analysis must be performed a posteriori
    by the user.

    The watering mechanism for a plant via IoT methodology is devised by the proposed
    smart irrigation

    model without acquiring any pre-processed data. A prototype application is developed,
    which gets adapted

    to the parameters needed in irrigation after a couple of human-made irrigations.
    With the usage of various

    ML algorithms, several tests are devised for manual and automated irrigations
    for the performance evalua-

    tion. After the evaluation using four diﬀerent ML algorithms such as logistic
    regression (LR), K-nearest

    neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting regression
    trees (GBRT), it is found

    that GBRT outperforms other algorithms. To analyze the overall performance, a
    test bed for the sensor edge,

    mobile client, and the decision service on the cloud is established. Two diﬀerent
    indoor species are selected

    as test items for the prototype, namely, Peace lily and Sardinia. The outcomes
    were quite good, and it is

    inferred that the prototype has learned the patterns of irrigation and making
    decisions automatically with a

    high rate of accuracy [23].

    IoT-enabled edge computing model for smart irrigation system

    

    635

    The authors from ref. [24] adopted the deep learning methodology for detecting
    the type and the

    category of the plant using an automated plant irrigation system. The water necessity
    of the plant is

    determined using the recognition of predeﬁned set of plant images and data set
    acquired from farm. It

    utilizes the database for fetching the irrigation information after the recognition
    process is completed.

    Modeling the training processes are time consuming as voluminous set of images
    needs to be stored.

    The authors in refs [25,26] incorporated ML methods in the irrigation decision
    support model using a

    pre-processed irrigation data set. A model is developed for learning the irrigation
    needs of any plants

    progressively rather than using a readily available dataset. Several ML algorithms
    are evaluated with their

    precision for concluding the irrigation decisions. Manual irrigations are performed
    two times before making

    precise decisions. Due to the dynamicity in model, data processing is done progressively,
    and it can be

    applied to several plants having varying irrigation conditions. There is a need
    for the learning model that

    can be trained by itself using a comparatively lighter learning process using
    environmental parameters that

    do not need larger storage in the system but need higher computation. From the
    aforementioned survey for

    making a precise decision with instant computation locally, edge computing needs
    to be integrated into the

    irrigation system. This article is directed towards presenting a platform that
    implies IoTs and edge com-

    puting in monitoring soil moisture via sensors, data communication between sensors
    and edge devices, and

    an Analytics-as-a-Service cloud. It analyzes the collected data in the form of
    a density map of soil moisture

    for denoting the areas in need of greater or lesser frequency of irrigation. Here,
    density map does not refer to

    the geographical point data by satellite mapping, and it actually denotes the
    point of dry area and watery

    area through soil moisture detection point. This point is averaged among areas
    of irrigation to be done and

    the irrigation process is controlled with prediction of rainfall using the proposed
    system.

    3 The proposed system

    The proposed learning model for irrigation is implemented in a prototype IoT system
    that has four compo-

    nents: (i) Edge node layer – This layer consists of sensors, actuator, and two
    microcontrollers. In this layer,

    edge node acquires the sensor data from the surroundings and controls the actuator
    for actuating water

    pumps to start irrigation. (ii) Edge server layer – This layer consists of Raspberry
    Pi that act as edge server

    and capable of multitask processing. Here, edge server controls the edge nodes
    for sending signal and

    receiving data at regular interval of time. It is also connected to the cloud
    server for receiving developed and

    trained machine learning model to be deployed and make irrigation decision for
    controlling edge nodes.

    (iii) Edge service layer – This layer is deployed in the edge server and it is
    responsible for controlling the

    whole system through a developed web dashboard. The dashboard has live feed data,
    control of edge

    nodes, and cloud services access. This service layer also has the control access
    of the proposed machine

    learning model. (iv) Cloud server layer – This layer composed of cloud services
    and cloud storage where its

    role is to train the machine learning model and store the data in database. It
    sends the trained proposed

    model to the edge server for decision-making regarding irrigation scheduling.
    The comprehensive inter-

    connections in the system are shown in Figure 2. The proposed IoT-based smart
    irrigation system includes

    ﬁve major components: ﬁeld deployed module, Web-based interface, Web API weather
    input, soil moisture

    prediction mechanism, and edge communication model.

    3.1 Field deployed module

    In the ﬁeld requirements, a wireless sensor network of the sensor nodes needs
    to be deployed as shown in

    Figure 3. Here, ﬁeld data collection device accommodates four diﬀerent sensors:
    Capacitive Soil Moisture

    Sensor V2.0, DS18B20 Water Proof Temperature Sensor Probe for soil temperature,
    ultraviolet (UV) Light

    Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511 Analog
    Output Ultra-Violet

    636

    

    S. Premkumar and AN. Sigappi

    Light Sensor Module. An Arduino Mega connected to Raspberry Pi 4 Model-B read,
    the output of these

    sensors where the program is developed in Python for the Pi model to fetch the
    hourly data from sensors

    and store the data in MongoDB [27] database. It is then synchronized with the
    server database using the

    developed web service. A Wi-Fi-enabled Arduino controls the water pump connected
    to a relay switch.

    Figure 2: Components of the proposed system.

    Figure 3: Real-time prototype of the proposed edge model.

    IoT-enabled edge computing model for smart irrigation system

    

    637

    For the real time monitoring, a trigger is made for controlling the web service
    from the responsive web-

    based interface. The irrigation decisions are checked periodically by the proposed
    model performed in the

    server. The water pump is actuated, and irrigation process is started only if
    the server makes any irrigation

    decision. A wireless sensor network (WSN) [28] scenario with ZigBee [29] technology
    can be implemented

    for a large farming area in which several sensor nodes can be aﬃxed in the speciﬁed
    area and every sensor

    node possesses sensors similar to a standalone device. Then, the Arduino Mega
    reads the sensor output

    connected to ZigBee for transferring data to Gateway Node for aggregating the
    received data and storing it

    in MongoDB locally and also for transferring the data via web service to the edge
    server.

    3.2 Web-based interface

    The proposed framework consists of a web-based application to allow farmers visualize
    the growing data

    and interacting with the garden in real time. In addition, users can also be able
    to examine and analyze the

    historical growing data, if needed, through functionalities such as irrigation
    control, motor control predic-

    tion model deployment, and manual data entry implemented in this web application.
    Here, Node.js was

    chosen for developing the web application [30,31], while MongoDB [27] was utilized
    as the database system.

    Data stored in the database, which is deployed in the cloud, will be used for
    further data analysis in the

    future. The web application’s functions are designed following a software design
    pattern called model-

    view-controller (MVC) as shown in Figure 4. In the frontend, ChartJS is used to
    represent data through

    dynamic charts. The web application is also used as an interface to manage all
    the physical devices/

    actuators in the garden. To deploy the web-server to the cloud, a cloud platform
    as a service (PaaS), namely,

    Heroku, had been utilized. Heroku is a cloud platform that provides platform as
    a service (PaaS), facilitates

    the creation of applications and deploying these online rapidly [32,33]. It also
    enhances scalability and

    functionality by integrating several add-on services. The ﬁeld data are sent to
    the server by Raspberry Pi

    using this web service. This web service manages the network outage/ﬂuctuation
    during data synchroniza-

    tion from the ﬁeld device to the server by taking the help of ﬂag settings at
    the database level. The interface

    facilitates the scheduling of irrigation along with visualizing real time sensors
    and predicted soil moisture

    for upcoming days and precipitation information. By using the denoted threshold
    value of soil moisture

    suggested by agronomists, the irrigation can be scheduled by the user. The system
    maintains the threshold

    value depending on the predicted pattern of soil moisture and precipitation information.
    The process of

    irrigation is initiated automatically and stopped after the speciﬁed threshold
    value generated from the

    proposed algorithm of soil moisture when it is reached.

    Figure 4: Web interface for the irrigation system.

    638

    

    S. Premkumar and AN. Sigappi

    3.3 Web API weather input

    The weather prediction data are collected by a web service developed in Python.
    The forecast data such as

    humidity, temperature, ultra violet index, precipitation, and cloudiness of web
    forecasting portals like

    Open Weather API are aggregated by the developed web service [34]. These portals
    provide the forecasted

    information in HTML, XML, or JSON format. The predicted data with JSON format
    are read by the developed

    web and stored in database at the edge server, which is concerned in the prediction
    algorithm. Also, these

    data are utilized as testing dataset in the ML model for predicting the soil moisture.

    3.4 Soil moisture prediction mechanism

    An algorithm for predicting the soil moisture based on data derived from ﬁeld
    sensors and weather fore-

    casting using the combination of supervised and unsupervised machine learning
    techniques has been

    developed underpinned by regression algorithms and k-means clustering for estimating
    the diﬀerence/

    change in soil moisture owing to weather conditions. Many regression algorithms
    are compared against

    each other and infusing each of them with k-means to check the preciseness in
    mean square error (MSE),

    R2, accuracy and mean absolute percentage error (MAPE) for prediction of soil
    moisture of upcoming days

    with the help of sensor data and weather forecasting days. The information about
    soil moisture for the

    upcoming days and suggestions for irrigation in accordance with the prescribed
    levels of soil moisture and

    predicted precipitation values, thereby saving energy and water, is presented
    by the algorithm. The infor-

    mation generated from the device and the predicted values from the algorithm soil
    moisture prediction

    hybrid algorithm (SMPHA) are stored in the server.

    3.5 Edge communication model

    The communication protocols in the proposed framework are ﬂexible and transparent
    in nature for

    accepting both wired and wireless methodologies. For the maximum utilization of
    potentiality in edge

    computing components, the communication among various components in the edge-IoT
    system requires

    intense probing by using the versatility among the devices in network edges. For
    transferring the data

    gathered from pivot sensors, a communication technology such as Zigbee [35] is
    needed for the irrigation

    systems. Therefore, the communication component in the proposed work is classiﬁed
    into three main areas

    as shown in Figure 5. The Message Query Telemetry Transport (MQTT) protocol is
    used for the

    Figure 5: Proposed edge communication model.

    IoT-enabled edge computing model for smart irrigation system

    

    639

    communication in the proposed system. The analysis in ref. [36] presented seven
    IoT messaging protocols

    (MQTT, CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols
    that play a

    major role in smart farming. The authors have concluded that MQTT proved to be
    the most secure protocol

    after probing all the protocols with respect to latency, energy and bandwidth
    requirements, throughput,

    reliability, and security. Moreover, MQTT is secure in both end-to-end architecture
    and gateway server

    architecture. In an MQTT setup, a MQTT server termed as MQTT broker executes on
    the IoT solution [37].

    Under a common identiﬁer, a “publisher” and a “subscriber” link among themselves
    to this broker. In the

    IoT solution, publishers and subscribers are the IoT devices and IoT hubs or control
    devices, respectively.

    When the publishers have new data for recording, the data are published to the
    broker. The broker then

    ﬂags that it has new publisher data, and the corresponding data are read by the
    subscriber. Then, the

    subscriber analyzes the data and reacts accordingly.

    The ﬁrst level accomplishes with connecting the end users to system with the help
    of mobile or web-

    based applications through the Internet. The next level (cloud computing server)
    deals with the connection

    of web server and MQTT broker for directing the user requests and other components
    at the edge landscape

    or from the farms to the right cloud-based services like displaying the real time
    status of the farm for the

    users, triggering a new deployment of the updated ML model to the corresponding
    edge node. The third

    level (farming area) is directed toward the deployment of sensors and IoT devices
    (actuators) for commu-

    nicating with other components in the entire system.

    4 Deployment of soil moisture prediction hybrid algorithm

    The watering mechanism of the plant has diﬀerent approaches in the proposed model.
    Primarily, the system

    is trained with manual irrigations datasets during the process of learning with
    respect to suggestions

    deﬁned by agronomists. The model is trained to learn the needs of irrigation in
    the ﬁrst level of deployment

    in cloud without the inclusion of pre-processed data. After acquiring the required
    data and training, the

    proposed system is initiated to grasp the plant’s watering needs by undergoing
    plenty of manual irrigations.

    Thereafter, manual irrigation is not required and the system makes automated decisions
    in watering using

    the gathered data and the application of ML methods. The proposed model then decides
    the irrigation

    strategies automatically using ML methods without the need including collected
    datasets in the automatic

    irrigation process. The proposed model can be improved through the learning process
    when the number of

    precise irrigation inputs is provided to the model at each stage of training.

    The decision-making procedure is developed with two modules for irrigation strategies
    according to the

    soil moisture prediction for upcoming days. The ﬁrst module deals with training
    the model in cloud with

    manual irrigation datasets through steps such as data collection, data preprocessing,
    training, and model

    development. The system acquires values of air temperature (TH), soil temperature
    (SMT), soil moisture

    (SM), humidity (HU), and ultraviolet rays (UV) periodically from the physical
    environment in the data

    collection stage, which is essentially required for arriving at the watering decisions.
    Also, the time of

    performing the manual irrigation is recorded in the database. These data are timestamped
    and stored in

    as datasets to aid in making decisions for knowing the time of irrigation. In
    the next step of pre-processing,

    inconsistencies are eliminated and outliers caused by sensor errors are detected
    from the irrigation dataset,

    thereby helping in the removal of broken data. The training stage involves the
    application of supervised

    machine learning (ML) algorithms. Here the regression algorithms such as support
    vector regression (SVR),

    multiple linear regression (MLR), lasso regression (LR), decision tree regressor
    (DTR), random forest

    regressor (RF), and XG-boost regressor (XB) techniques are used for the deployment.
    The regression algo-

    rithms are trained using the collected datasets. Finally, through training, regression
    models are created,

    namely, SVR model, MLR model, LR model, DTR model, RF model, and XB model that
    are been combined

    with the second module for decision-making.

    The second module caters to the prediction of irrigation for upcoming days by
    infusing the weather data

    as an input to the regression trained models. The live datasets from the weather
    API for future prediction of

    640

    

    S. Premkumar and AN. Sigappi

    soil moisture variable are used. The dependent variables from weather forecast
    data like temperature (TH),

    humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the aforementioned
    model for soil

    moisture prediction. Then, the regression trained model is evaluated and deployed
    using the weather

    testing data for the prediction of soil moisture in accordance with the precipitation.
    After the prediction

    of data for the upcoming days, these developed regression models are combined
    with unsupervised ML

    algorithm named k-means clustering for estimating the changes incurred in soil
    moisture prediction due to

    the impact of weather conditions. Further, each regression models with k-means
    algorithm are evaluated

    for performances in terms of irrigation decision-making process as shown in Table
    1. The combined algo-

    rithms are estimated through MAPE, MSE, R2, execution speed, power consumption,
    and accuracy. The

    estimation and computation of these parameters are detailed by the authors in
    ref. [38].

    XGBoost + k-means (XB+k-means) approach provides more accuracy with less MSE comparatively
    and

    also the R2 with 98% in soil moisture prediction using combined approach is given
    in Table 1. It is evident

    that the proposed combination performs better when compared to other regression
    + k-means-based

    approaches. XB + k-means-based hybrid machine learning algorithm is applied in
    irrigation planning

    module on account of aforementioned performance metrices of ML. Although it performs
    moderately in

    terms of execution time and power usage, it is selected for the deployment in
    edge computing as it has

    better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed
    that the prediction of soil

    moisture for the upcoming days from the proposed algorithm (XB+k-means) is nearer
    to the actual value as

    shown in Table 2, and hence, XB+k-means is selected for the implementation of
    SMPHA in edge-based

    irrigation scheduling.

    4.1 Hardware setup

    IoT system is crucial to handle, collect, and transfer the data to the computing
    nodes at the edge or in the

    cloud. These devices are connected to the edge nodes through wireless communication
    protocols like

    ZigBee. It is used in reducing the latency and loss of data. An Arduino micro-control
    unit controls the

    combined IoT sensors and actuators at the same part of a ﬁeld into a cluster,
    each connected to a Raspberry

    Table 2: Comparison of predicted SM value with actual SM value

    Date

    Average SM value

    from sensor

    Average predicted SM

    value (XB+k-means)

    28-09-2021

    35.23

    34.04

    29-09-2021

    36.41

    37.20

    30-09-2021

    31.57

    30.46

    01-10-2021

    34.66

    33.15

    02-10-2021

    36.73

    37.12

    03-10-2021

    32.88

    33.01

    Table 1: Comparison of performance metrices obtained from various ML algorithms

    Algorithms used

    Accuracy

    R2

    MSE

    MAPE (%)

    Execution time

    Power (J)

    SVR + k-means

    0.96

    0.96

    0.25

    1.98

    0.06078

    1164.85

    MLR + k-means

    0.94

    0.88

    0.31

    2.15

    0.02075

    429.30

    LR + k-means

    0.95

    0.94

    0.32

    2.23

    0.02482

    351.35

    DTR + k-means

    0.93

    0.95

    0.29

    1.62

    0.15687

    914.70

    RF + k-means

    0.95

    0.91

    0.27

    1.57

    0.16745

    1475.13

    XB + k-means

    0.97

    0.98

    0.20

    1.08

    0.03547

    537.87

    IoT-enabled edge computing model for smart irrigation system

    

    641

    Pi that acts as an edge node in processing the gathered data and controlling the
    actuators. For example,

    Figure 2 shows an edge architecture with a Raspberry Pi connected to two components:
    Arduino Uno and

    Arduino Mega units via ZigBee connection. The ﬁrst Arduino Mega node is responsible
    for collecting data

    from sensors and the second one is for controlling the actuators in the ﬁeld.
    Depending on the sensor type

    with collecting Arduino unit, the sensors are connected via analog or digital
    PWM pins while controlling

    Arduino uno joins with actuators in the ﬁeld and controls (turn on/oﬀ) them in
    accordance with upper

    layers (from the edge web server). The trained (cloud) and deployed ML model in
    edge nodes provides the

    necessary instructions to the edge nodes.

    4.2 Web layer setup

    The deployment of web server assists the user in planning and managing the irrigation
    system. It visualizes

    the crucial information of factors like temperature of air and soil, UV, humidity,
    and soil moisture in live

    irrigation with real time updates in the form of various charts. In accordance
    with the selected ﬁeld, the web

    application redirects the user to the ﬁeld’s dashboard as shown in Figure 4. The
    dashboard consists of ﬁeld

    parameters as well as control signals for activating all the physical devices/actuators
    at the garden layer.

    These signals are denoted as switch buttons, and each switch controls (turn on/oﬀ)
    a particular kind of

    actuator (for instance, water pump to start and stop the irrigation). The user
    interface facilitates remote

    controlling of the ﬁeld by just clicking on the buttons as shown in Figure 4.

    4.3 Edge layer setup

    The edge node acts as a computing center where incoming data are analyzed and
    fed as the input vector to

    the ML model for processing and to return the control signals for activating or
    deactivating the actuators

    placed at the farm. Edge node processes the physical data (real time) at every
    end device such as the

    collected and processed data via the Raspberry Pi nodes presented in the proposed
    scheme. The prediction

    model is designed using TensorFlow API and trained, tested on Google Colab in
    this work. Amazon Web

    Service (AWS) oﬀers a library named Boto3 having many APIs to upload and download
    objects. After the

    development of model, it is transferred to Amazon S3, a service provided by AWS.
    The edge node utilizes the

    trained model from S3 for analyzing the sensed data acquired from garden’s sensors.
    The decision is

    delivered based on real time data analysis at the edge node and transmitted to
    Arduino nodes in the ﬁelds

    landscape immediately for controlling the actuators. In another ﬂow, the data
    collected from sensors are

    ﬁltered so as to keep only the modiﬁed data at the edge node before being sent
    back for mitigating the

    communication cost to the database in the cloud. These data are used in the updation
    of the ML model to

    enhance its eﬃciency.

    4.4 Analytics setup

    The main goal of this experiment lies in gathering the various physical parameters
    of a farming land via

    sensors and utilizing the fetched data along with weather forecast information
    for developing an algorithm

    using hybrid machine learning approach to infuse higher accuracy in predicting
    the soil moisture for the

    upcoming days. As discussed in Section 4, for the proper planning and provisioning
    of optimal irrigation,

    the algorithm provides a predictable estimate of soil moisture with the assistance
    of various statistical

    measures as shown in Table 1. The measures are adopted for estimating the appropriateness
    and error rate

    of the proposed algorithm. It is inferred from the experiment that, optimal irrigation
    is feasible using a good

    642

    

    S. Premkumar and AN. Sigappi

    estimation (close to the actual value) of the soil moisture (Table 2), with the
    support of ﬁeld data and

    forecast information, thereby utilizing the natural rain eﬃciently.

    The SMPHA ML model is interdependent on dynamic changes in weather environment
    where the

    models deployed on edge nodes need to change the controls accordingly after model
    gets trained con-

    tinuously. For the process of retraining, the trained model needs to be updated.
    The parameters such as TM,

    HU, ST, UV, SM about grown plants are logged for the training purpose, and these
    generated datasets are

    recorded from the already developed manual mode system [39]. The growth of the
    Indian Mundu Chilli [40]

    is taken for the observation from the ﬁrst stage to the last grown stage for 95
    days. While retraining the

    model, the training is carried in cloud without causing eﬀect to the functionalities
    at edge nodes. A signal is

    transferred to the corresponding edge server for triggering the task of updating
    the SMPHA model from the

    web server. At that time, the newly trained model is downloaded to replace the
    existing one at the con-

    sidering edge server. From then, the ML model at the edge server is called to
    be updated with the real-world

    knowledge and is ready for its garden controlling tasks (to apply in the next
    farming season).

    4.5 Work ﬂow

    The ﬂowchart in Figure 6 depicts the working of the proposed system based on the
    decision support system

    that is beneﬁcial for irrigation needed for the growth of vegetables. The chilli
    plant is grown in a growbag

    attached with sensors and Pi as shown in Figure 3 and monitored for 95 days of
    data collection. To bring out

    optimality in the irrigation system, features relating to climate, soil, crop,
    and ﬁeld infrastructure are to be

    considered. To provide several recommendations in the production of vegetables,
    decision support systems

    (DSSs) are designed, which process voluminous information [39]. This proposed
    work is the extension of

    soil moisture diﬀerences (SMD) model [41] developed for soil moisture prediction.
    The threshold values of

    soil moisture are used in the SMD model where the system schedules the irrigation
    date based on the

    predicted soil moisture and weather forecast (precipitation) information automatically
    using SVR+ k-means

    modeling. Therefore, in the extension of the aforementioned work, further more
    number of sensors are used

    to log soil moisture value, which is averaged in the proposed model. This model
    is developed in two

    divisions of ﬂowchart as shown in Figure 7, where both are interconnected. It
    is observed that the prediction

    of XB + k-mean approach provides better results as presented in Table 2.

    The ﬁrst phase of the ﬂowchart describes the hybrid algorithm for the soil moisture
    prediction (SMPHA)

    using the combination of XB + k-means algorithm. During the data collection step,
    the sensor data for the

    parameters, namely, TM, HU, ST, UV, and SM, are collected. During preprocessing,
    null values and outliers

    are removed and the preprocessed data are used to train the XG-Boost model. The
    developed model is then

    trained with variables of live weather features (TM, HU, UV, PC) obtained from
    Weather API for the

    prediction of SM data. These data are given as input to k-means clustering algorithm
    to predict the soil

    moisture, which is deﬁned as SMPHA value to be infused in the next phase of the
    ﬂowchart. The second

    phase of the ﬂowchart deﬁnes the automatic irrigation planning setup. The setup
    starts obtaining the soil

    moisture maximum (SMMax) and soil moisture minimum (SMMin) values in the dashboard
    for setting the

    maximum and minimum level of soil moisture. Then, the current soil moisture (CuSM)
    is sensed and

    compared against the threshold SMMin. If the resulting value is less than SMMin,
    the process proceeds

    with SMPHA. On the contrary, it stops the irrigation process by sending 0 to the
    relay. In SMPHA, the

    nearest precipitation date is selected and it is assigned to the predicted soil
    moisture (PSM). The SMMax is

    decided by ﬁnding the minimum of (PSM + SMMin, SMMax), and the predicted SMMax
    is further checked

    against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to
    the relay as a signal to start

    irrigation. If the condition fails, then it sends 0 to stop irrigation. The process
    of automatic irrigation ends

    by forecasting the irrigation schedule in accordance with the live weather parameters.

    IoT-enabled edge computing model for smart irrigation system

    

    643

    5 Experimental setup and evaluation

    The test bed is developed and deployed, and the data are collected for the analysis
    in irrigation manage-

    ment. Here, Heroku cloud platform is used to deploy the cloud web server. The
    same cloud is also installed

    at a local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n
    connections to denote the edge

    nodes. JMeter application is used to get sequential accesses to the web page from
    various users for eval-

    uating the network parameters. The speciﬁcation of these servers is given in Tables
    3 and 4.

    We evaluated the performance of the proposed IoT-based smart farm on two diﬀerent
    platforms,

    namely, in the cloud and on the local computer to show the feasibility and the
    beneﬁt of the edge com-

    puting scheme. Further many parameters are considered for evaluation and discussed
    in the next section to

    show that edge deployment is better than cloud.

    Figure 6: Flow chart of the proposed edge model.

    644

    

    S. Premkumar and AN. Sigappi

    5.1 Evaluation

    A hybrid machine learning methodology is used in evaluating the ﬁrst stage of
    the proposed model. The

    predicted value of the soil moisture is better in terms of their accuracy and
    error rate. From the comparison

    of the other ML algorithms as shown in Table 2, XB + k-means performs better and
    taken further to be

    deployed in edge and cloud to check its eﬃciency with each other. Therefore, for
    analyzing the eﬃciency of

    the edge server in accordance with the proposed hybrid algorithm SMPHA is evaluated
    in terms of the time

    taken to train the ML model in edge and cloud. In this experiment Raspberry Pi
    is used to train the SMPHA

    model with 196,400 rows, that is, input data sample size and takes around 1,710,000
    ms (approximately

    28.5 min). The same model when it is trained in Google Colab cloud environment,
    it takes 204,000 ms

    (approximately 3.4 min) as depicted in Table 5. The main purpose is to run the
    trained model on edge not to

    train the model at edge. So due to the lack of computing capability at the edge,
    it takes more time to train

    the model, but it can be ignored as it does not aﬀect the purpose of the proposed
    model. Here, edge is

    introduced to obtain the task of computing from the cloud (i.e., oﬄoading the
    task) by making the system

    more edge-oriented deployment. It can be accomplished rapidly as it requires only
    14 s to download a

    trained SMPHA model from the cloud to the edge node with a size of 3,101 kb as
    given in Table 5. The time to

    Figure 7: Average response time with 10 test scenarios.

    Table 3: Conﬁguration of raspberry Pi

    CPU

    Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5 GHz

    RAM

    8 GB LPDDR4-3200 SDRAM

    Network

    2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE, Gigabit Ethernet

    Pinboard

    8 GB LPDDR4-3200 SDRAM

    Operating system, language

    Raspbian , Python 3

    Table 4: Conﬁguration of Heroku cloud

    Country

    United states

    Service

    Amazon web service S3

    Processor

    2.4 GHz Intel Xeon E5-2676 v3 Processor

    CPU Power

    8 GB

    Virtual CPUs

    3–5

    IoT-enabled edge computing model for smart irrigation system

    

    645

    download varies according to the size of the trained model. So, from this process
    it can be inferred that

    downloading the trained model saves time when compared to training the model at
    the edge. Through this

    in real time, deployment of the trained SMPHA model in edge is better compared
    to deployment in cloud

    services. Furthermore, network parameters like latency, throughput, bandwidth,
    and response time are

    adopted to measure the performance improvements in edge computing.

    The performance metrices taken into account are latency, bandwidth, and response
    time [42]. The

    latency of an application is the product of two factors: computing latency and
    transmission latency. The

    time spent on data processing and transmission between end devices to cloud servers
    is termed as com-

    puting latency and transmission latency, respectively. The computational capacity
    of the system decides

    the computing latency as the network servers possess a considerable amount of
    capacity to make the data

    processing faster, whereas the sensors come with limited computing capacity. The
    latency in transmission

    is increased by the end devices and cloud servers. Bandwidth: As large number
    of sensors are deployed in

    IoT, data generated would be huge that consumes an intense range of bandwidth
    and leads to several

    problems such as delay in transmission and loss of packets. It becomes unacceptable
    for the data to be

    transferred directly to cloud servers without applying compression. Therefore,
    data preprocessing and

    aggregation are needed for IoT gateways before redirecting them to remote cloud
    servers. Then, the issue

    to be confronted is to control the traﬃc ﬂow by migrating data processing and
    aggregation tasks optimally

    to decrease the bandwidth needs of the end users while maintaining the data quality.
    Response time: The

    total response time is calculated by adding up transmission and processing time.
    The local deployment of

    the proposed model for controlling IoT-based irrigation are deployed on two modes:
    (i) Cloud mode: The

    developed SMPHA model is implemented in the cloud communicating with IoT sensors
    nodes directly to

    manage the irrigation process. The data are stored and processed at the cloud
    server itself where it uses

    Heroku platform. (ii) Edge mode – Raspberry Pi is deployed as an edge server that
    involves in processing of

    the SMPHA model controlling the IoT sensor nodes. Here, the data are stored and
    processed locally within

    the edge servers. This SMPHA model from both the edge and cloud does the job of
    controlling the actuators

    to initiate and quit the working of water ﬂow motors. Through this deployment
    in both the environments,

    performance of edge server and cloud server can be checked in terms of latency,
    throughput, bandwidth,

    and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This
    performance metrices is

    not feasible to calculate while deploying in real time, so the aforementioned
    scenarios of two modes are

    virtually created by generating many request and response threads between the
    servers. This sampling,

    load test, and distributed testing are conducted through JMeter application [43]
    and also veriﬁed with

    Wireshark [44] in cloud servers. The test scenario is created here by data of
    sending and receiving sampling

    data between cloud to IoT sensors and between Edge to IoT sensors. The sampling
    data considered in this

    work refer to the approximate number of requests generated by Arduino to cloud
    and Arduino to Raspberry

    Pi that are calculated in real time. The test scenario is divided into 10 days
    of sampling data collected for

    each day. The evaluation results are depicted for latency and response times in
    10 days perspective. In

    latency parameter, edge service has decreased by an average of 77.85% time compared
    to the with cloud. In

    the same manner, the response time of edge service is also decreased by 74.09%
    time compared to cloud

    service. In throughput calculation, sampling data are calculated for an hourly
    basis for the 10 hours data in

    a day. From the hourly comparisons of throughput value, edge outperforms with
    67.17% high Mbps usage.

    Through this analysis as shown in Table 6, it is evident that the proposed edge
    computing methodology

    deployed in Raspberry Pi or in local computers outperforms the cloud-oriented
    approach.

    Table 5: Comparison of model training time

    Edge

    Cloud

    Model training time

    28.4 min

    3.4 min

    Downloading time

    Not applicable

    14 s

    646

    

    S. Premkumar and AN. Sigappi

    Finally, to illustrate the eﬃciency of resource management in edge computing,
    CPU and memory

    utilization are considered for the analysis as both factors rely on the service
    execution model and the

    computational needs of the services being ﬁred from oﬀ-loaders. Figure 10 depicts
    the utilization of CPU

    and RAM on the Raspberry Pi acting as an edge node in two cases: with and without
    the deployment of

    SMPHA model on it. As shown in Figure 10, the SMPHA model aﬀects the CPU of the
    Raspberry Pi node

    signiﬁcantly as it consumed around 41.2% of the CPU compared to only 3.5% when
    it does not host the

    Figure 8: Average latency with 10 test scenarios.

    Figure 9: Average throughput value with 10 h test scenarios.

    Table 6: Performance metrices for cloud and edge services

    Performance metrices

    Cloud service

    Edge service

    Throughput (Mbps)

    0.04944

    0.08265

    Latency (ms)

    1415.8

    313.6

    Response time (ms)

    1519.6

    393.8

    Bandwidth (bps)

    86

    1,365

    IoT-enabled edge computing model for smart irrigation system

    

    647

    SMPHA model. However, the memory (RAM) utilization in both the cases (with and
    without deployment of

    an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization
    does not have

    much diﬀerence in with and without SMPHA. It is worthwhile to note that, the CPU
    utilization is still much

    lower than the 50% of total CPU capacity in Raspberry Pi. Therefore, it becomes
    feasible for adopting edge

    server implementation in the proposed irrigation system.

    6 Conclusion

    This article proposed a novel approach to edge-based irrigation system to facilitate
    decision-making on

    watering the plants on scheduled time. The proposed approach applying IoT with
    an edge computing

    framework enables the farming system to adapt to the changes in environmental
    conditions automatically

    and eﬃciently. The process of automatic irrigation regulates irrigation according
    to the live weather para-

    meters for forecasting the irrigation process. Soil moisture prediction was performed
    using major regression

    algorithms that are again combined with k-means clustering for estimating the
    changes incurred in soil

    moisture prediction. These techniques were compared through metrics such as MAPE,
    MSE, speed, and

    power consumption from which XB + k-means was found to perform better. The XB
    + k-means algorithm

    was further used for the implementation of decision mechanism on the developed
    edge computing model.

    The proposed edge model saves the data communication cost and reduces the response
    time of IoT services.

    It can be deployed on existing devices on the network edges serving as edge nodes,
    thereby reducing the

    overall implementation cost of a large-scale IoT system. The edge-based approach
    was found to perform

    better than the cloud-based approach in terms of response time, latency, throughput,
    and bandwidth

    usage. Finally, the edge model was analyzed through CPU and memory usage while
    running with and

    without the algorithm. In both cases, the memory utilization is almost lower to
    total available resource of

    the edge device. From this, edge device can allocate its remaining resource for
    other computing services,

    which increases the eﬃciency of edge computing device. The number of end edge
    nodes can be increased

    according to the ﬁeld area and then to check the potency of the system.

    Conﬂict of interest: The authors declare no conﬂict of interest.

    Data availability statement: All data that support the ﬁndings of this study are
    included within the article.

    Figure 10: CPU and memory utilization with and without SMPHA.

    648

    

    S. Premkumar and AN. Sigappi

    References

    [1]

    India: Issues and Priorities for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/

    2012/05/17/india-agriculture-issues-priorities.

    [2]

    India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.

    [3]

    Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR, Baylis M, et al. Scientists’
    warning to humanity: Microorganisms

    and climate change. Nature Rev Microbiol. 2019;17(9):569–86. doi: 10.1038/s41579-019-0222-5.

    [4]

    Huong NTL, Bo YS, Fahad S. Economic impact of climate change on agriculture using
    Ricardian approach: A case of

    Northwest Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. doi: 10.1016/j.jssas.2018.02.006.

    [5]

    Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A, Malyan SK. Global warming impacts
    of nitrogen use in agriculture: An

    assessment for India since 1960. Carbon Management. 2020;11(3):291–301. doi: 10.1080/17583004.2020.1752061.

    [6]

    Sarkar S, Chatterjee S, Misra S. Assessment of the suitability of fog computing
    in the context of internet of things. IEEE

    Trans Cloud Comput. 2018;6(1):46–59. doi: 10.1109/TCC.2015.2485206.

    [7]

    Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food security
    and food production systems. In: Field

    CB, Barros VR, Dokken DJ, Mach KJ, Mastrandrea MD, Bilir TE, et al., editors.
    Climate Change 2014: Impacts, Adaptation,

    and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working
    Group II to the Fifth Assessment Report of

    the Intergovernmental Panel on Climate Change Cambridge, United Kingdom: Cambridge
    University Press and New York,

    NY, USA; 2014. p. 485–533.

    [8]

    Lal R. Adaptation and mitigation of climate change by improving agriculture in
    India. In: S. SherazMahdi (Ed.), Climate

    Change and Agriculture in India: Impact and Adaptation. Cham: Springer International
    Publishing; 2019. p. 217–27.

    [9]

    Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research on implementation
    and deployment of IoT projects in

    smart cities. Hershey: IGI global, 2019.

    [10] Baylis A. Advances in precision farming technologies for crop protection.
    Outlooks Pest Manag. 2017;28(4):158–61.

    [11]

    Mulla D, Khosla R. Historical evolution and recent advances in precision farming.
    Soil-Speciﬁc Farming Precision

    Agriculture. Boca Raton: CRC Press; 2015.

    [12] Dutta L, and Basu TK. Extraction and optimization of leaves images of mango
    tree and classiﬁcation using ANN. IJRAET

    2013;1(3):46–51.

    [13] Kawai T, Mineno H. Evaluation environment using edge computing for artiﬁcial
    intelligence-based irrigation system. 2020

    16th International Conference on Mobility, Sensing and Networking (MSN). Tokyo,
    Japan: IEEE; 2020. p. 214–9.

    [14] Munir MS, Bajwa IS, Ashraf A, Anwar W, Rashid R. Intelligent and smart irrigation
    system using edge computing and IoT.

    Complexity. 2021;2021:1–16.

    [15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the
    edge of smart irrigation networks: A case study in

    strawberry greenhouses. Comput Netw. 2020;167:107039.

    [16] Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.

    [17] Shi W, Dustdar S. The promise of edge computing. Computer. 2016;49(5):78–81.

    [18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha Rodrigues
    G, Saquette LR, et al. Low-cost fog

    computing platform for soil moisture management. In: 2020 International Conference
    on Information Networking (ICOIN).

    Barcelona, Spain: IEEE; 2020. p. 499–504.

    [19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M, Mora-Pascual, J,
    Mora-Martínez, J. Developing ubiquitous sensor

    network platform using internet of things: application in precision agriculture.
    Sensors. 2016;16(7):1141.

    [20] Xu X, Liu X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement
    for smart cities in edge computing. IEEE Internet

    Things J. 2020;7(5):4084–91.

    [21] Wu X, Liu M. In-situ soil moisture sensing: Measurement scheduling and estimation
    using compressive sensing. In: 2012

    ACM/IEEE 11th International Conference on Information Processing in Sensor Networks
    (IPSN). Beijing, China: IEEE; 2012.

    p. 1–11.

    [22] Kameoka T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart
    sensing in a Vineyard for advanced

    viticultural management. In: Proceedings of the 2014 International Workshop on
    Web Intelligence and Smart Sensing.

    Saint Etienne France; 2014. p. 1–4.

    [23] Cagri Serdaroglu K, Onel C, Baydere S. IoT-based smart plant irrigation system
    with enhanced learning. In: 2020 IEEE

    Computing, Communications and IoT Applications (ComComAp.) Beijing, China: IEEE;
    2020. p. 1–6.

    [24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated plant recognition
    using deep learning. In: Proceedings

    of the 10th International Conference on Computer Modeling and Simulation - ICCMS2018.
    Sydney, Australia: ACM Press;

    2018. p. 87–91.

    [25] Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying
    machine learning on sensor data for irrigation

    recommendations: Revealing the agronomist’s tacit knowledge. Precision Agricult.
    2018;19(3):421–44.

    [26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A. IoT and machine learning
    approaches for automation of farm irrigation

    system. Proc Comput Sci. 2020;167:1250–7.

    [27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases. Int J
    Scientiﬁc Eng Res. 2016;7(5):1035–7.

    IoT-enabled edge computing model for smart irrigation system

    

    649

    [28] Ojha T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture:
    The state-of-the-art in practice and future

    challenges. Comput Electr Agricult. 2015;118:66–84.

    [29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara MA. Automated
    irrigation system using a wireless sensor

    network and GPRS module. IEEE Trans Instrument Measurement. 2014;63(1):166–76.

    [30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT system design with
    real time stream processing and data ﬂow

    integration. In: 2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok,
    Thailand: IEEE; 2019. p. 1–5.

    [31] Lv H, Wang S. Design and application of IoT microservices based on Seneca.
    USA: DEStech Transactions on Computer

    Science and Engineering, (icte.). 2016.

    [32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing using AES under
    HEROKU cloud. In: 2018 27th Wireless and

    Optical Communication Conference (WOCC). Hualien: IEEE; 2018. p. 1–5.

    [33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural model for a high-performance
    fog/edge/cloud IoT platform.

    In: 2019 IEEE 5th world forum on internet of things (WF-IoT.) Limerick, Ireland:
    IEEE; 2019. p. 633–8.

    [34] Weather API. Retrieved from https://openweathermap.org/api.

    [35] Drew Gislason. Zigbee wireless networking, 1st ed. Newnes, London: Elsevier
    Publisher; 2008.

    [36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing for MQTT applications.
    In: Virvou M, Nakagawa H, Jain LC. (Eds.),

    Knowledge-Based Software Engineering: 2020. Cham: Springer International Publishing;
    2020. p. 47–59.

    [37] Babun L, Denney K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms:
    Communication, security, and privacy

    perspectives. Comput Netw. 2021;192:108040.

    [38] Rastogi K, Lohani D. Edge computing-based internet of things framework for
    indoor occupancy estimation. Int J Ambient

    Comput Intell. 2020;11(4):16–37.

    [39] Premkumar S, Sigappi AN. Functional framework for edge-based agricultural
    system. In: AI, Edge and IoT-based Smart

    Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.

    [40] Phani Kumar J, Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan
    K. Genetic divergence among Ramnad

    mundu chilli (Capsicum annuum L.) genotypes for yield and quality. Electr J Plant
    Breeding. 2021;12(1):228–34.

    [41] Goap A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation
    management system using Machine learning

    and open source technologies. Comput Electronic Agricult. 2018;155:41–9.

    [42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud,
    fog and edge computing: A review, taxonomy,

    benchmarks and standards for future research. Internet Things. 2020;12:100273.

    [43] Sunardi A, Suharjito MVC architecture: a comparative study between Laravel
    framework and slim framework in freelancer

    project monitoring system web based. Proc Comput Sci. 2019;157:134–41.

    [44] Robert Shimonski. The wireshark ﬁeld guide, 1st ed. New York: Syngress Press,
    Elsevier; 2013.

    650

    

    S. Premkumar and AN. Sigappi

    '
  inline_citation: (Premkumar & Sigappi, 2022)
  journal: Journal of intelligent systems
  key_findings: The proposed edge-based approach outperforms the cloud-based approach
    in terms of response time, latency, throughput, and bandwidth usage.
  limitations: null
  main_objective: Proposing a novel approach to edge-based irrigation systems to facilitate
    decision-making on watering plants on a scheduled time.
  pdf_link: https://www.degruyter.com/document/doi/10.1515/jisys-2022-0046/pdf
  publication_year: 2022
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: IoT, edge computing, regression algorithms, k-means clustering
  title: IoT-enabled edge computing model for smart irrigation system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2018.2879454
  analysis: '>'
  apa_citation: Mukherjee, A., Misra, S., Raghuwanshi, N. S., & Mitra, S. (2019).
    Blind Entity Identification for Agricultural IoT Deployments. IEEE Internet of
    Things Journal, 6(2), 3156-3163.
  authors:
  - Anandarup Mukherjee
  - Sudip Misra
  - N. S. Raghuwanshi
  - Sushmita Mitra
  citation_count: 26
  data_sources: Data from various sensors, such as soil moisture, soil temperature,
    humidity, rainfall, solar radiation, ambient temperature, battery voltage, and
    solar voltage
  explanation: The paper proposes a method to optimize data transmission in automated
    irrigation management systems by reducing packet size, enabling the identification
    of sending nodes and sensors without using identifiers, and distributing processing
    across the network for scalability and reliability. The proposed approach reduces
    network traffic and energy consumption while maintaining the ability to identify
    the source of the data.
  extract_1: This method of minimizing packet size of traffic between slave to master
    node and to the remote server, via the Internet results in substantial reduction
    of network traffic, reduction of data, and conservation of node energy.
  extract_2: Outsourcing the error detection and other identification tasks, which
    are computation intensive, to a remote server, allows the use of low-cost, low-specification
    and low-energy processors for IoT deployment.
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 6 Issue: 2 Blind Entity Identification for Agricultural IoT Deployments
    Publisher: IEEE Cite This PDF Anandarup Mukherjee; Sudip Misra; Narendra Singh
    Raghuwanshi; Sushmita Mitra All Authors 28 Cites in Papers 1108 Full Text Views
    Abstract Document Sections I. Introduction II. Related Work III. System Overview
    IV. Experimental Setup V. Performance Analysis Show Full Outline Authors Figures
    References Citations Keywords Metrics Abstract: Integration of various technologies
    to an Internet of Things (IoT) framework share the common goals of a consistent
    and structured data format that can be applied to any device, given the vast application
    scope of IoT. Additional goals include minimizing channel traffic and system energy
    consumption. In this paper, we propose to dismiss the requirement of certain seemingly
    crucial identifier fields from packets arriving through various sensor nodes in
    an agricultural IoT deployment. The proposed approach reduces packet size, thereby
    reducing channel traffic and energy consumption, as well as retaining the capability
    of identifying these originating nodes. We propose a method of a blind agricultural
    IoT node and sensor identification, which can be sourced and operated from a master
    node as well as a remote server. Additionally, this scheme has the capability
    of detecting the radio link quality between the master and slave nodes in a rudimentary
    form, as well as identifying the sensor nodes. We successfully trained and tested
    various multilayer perceptron-based models for blind identification, in real-time,
    using our implemented agricultural IoT implementation. The effect of changes in
    learning rate and momentum of the optimizer on the accuracy of classification
    is also studied. The projected cumulative energy savings across the network architecture,
    of our scheme, in conjunction with TCP/IP header compression techniques, are substantial.
    For a 100 node deployment using a combination of the proposed blind identification
    reduced sampling strategies over regular IPv4-based TCP/IP connection, an estimated
    annual saving of ≈99% is projected. Published in: IEEE Internet of Things Journal
    ( Volume: 6, Issue: 2, April 2019) Page(s): 3156 - 3163 Date of Publication: 02
    November 2018 ISSN Information: DOI: 10.1109/JIOT.2018.2879454 Publisher: IEEE
    Funding Agency: SECTION I. Introduction The use of Internet of Things (IoT) has
    gradually permeated all walks of life, such as monitoring various macro-aspects
    of human habitations—cities, pollution mapping, and monitoring, agriculture, irrigation
    management, health-care, power supply management, transportation, education, and
    security—as well as the micro-aspects—smart home automation, child and elderly
    care, fire detection, and vehicle monitors. The evolution of simple wireless sensor
    networks (WSNs) to IoT has significantly reduced end-to-end human intervention
    in routine tasks, such as agriculture, home automation, industrial monitoring,
    and environmental monitoring. The use of low-cost wireless sensors and robust
    addressing strategies are helping in the reuse and redeployment of sensors in
    various IoT applications and scenarios [1]. Starting from narrowly focused and
    homogeneous primitive sensor-based local processing and actuation methods, present-day
    networked systems have evolved into widely dispersed, heterogeneous sensor, and
    actuator systems with remote or distributed processing. These systems are becoming
    popular due to their scalability, ease of integration, and reduced cost of implementation.
    Additionally, domains such as big-data processing and cloud computing [2], integrated
    with IoT platform and addressing schemes are enabling large-scale fusion and automated
    analysis of data [3]. A. Implementation Overview In this paper, as outlined in
    the architecture in Fig. 1, we use an ensemble of multilayer perceptron (MLP)
    [4] models on a master node as well as a remote server to automatically detect
    link errors, identify sensor nodes, and then, identify each sensor from the packets
    received from various field sensor nodes. MLP has proved to be a powerful tool
    for pattern differentiation tasks [5]. The solar-powered, field-deployed sensor
    nodes (slave nodes) transmit their data to a nearby master node by means of short-range
    wireless communication radios, which in our case are ZigBee S1 radio modules.
    The aggregated data from the master node is then transmitted to a remote server
    through the Internet by making use of long-range wireless radios from a gateway
    device, which in our deployment is a cellular network supporting GSM module. The
    remote server acts as a data storage unit as well as an analytical engine prepped
    with the trained MLP models. Subscribers/users of this system can access the raw
    data as well as visualize the data arriving at the server via the Internet. In
    the field, we focus on our system deployed for monitoring various agricultural
    field parameters—soil moisture ( S m ), soil temperature ( S st ), humidity (
    S h ), rainfall ( S r ), solar-radiation ( S sr ), ambient temperature ( S at
    ), battery voltage of each node ( S vb ), and solar voltage generated at the solar
    panel of each node ( S sv )—the architecture of which is shown in Fig. 1. Practices,
    such as precision agriculture, irrigation management, and agricultural management
    are rapidly shifting their focus on information and communication technologies.
    These modern methods rely on the use of customized sensors for weather, soil,
    water, and plant monitoring for enabling the use of agricultural IoT [6]. The
    vast domains and agricultural expanses over which a multitude of sensors are deployed
    generate huge amount of data D such that for n sensor nodes, each generating data
    d per unit time, the overall data traffic generated in the network per unit time
    is represented in the form of a tuple as D={ d 1 , d 2 , d 3 ,…, d n } . The data
    from slave nodes N i ,∀i∈(1,n) can be either from a soil parameter monitoring
    node or a weather monitoring station. Therefore, d i ,∀i∈(1,n) can be either from
    a soil sensor node or a weather station in our implementation. Further, each of
    these constituent data from individual sensor nodes d can be again represented
    as a tuple such that d soil ={ S head , S m1 , S m2 , S m3 , S m4 , S st , S bv
    , S sv , S foot } and d weather ={ S head , S h , S r , S sr , S at , S bv , S
    sv , S foot } . S head , S foot , d soil , and d weather represent the packet
    header, footer, data from soil parameter sensor node, and data from weather monitoring
    station, respectively. Data of this magnitude cannot be locally processed and
    analyzed, albeit at the cost of making these implementations costly. The use of
    low-cost sensors with reconfigurable radios, and an easily accommodating architecture
    can only be sustained and made cheaper if the processing is performed remotely
    at a master node as well as a remote server, and not on the field-deployed sensor
    nodes themselves. To further enhance the usefulness of this approach, reduction
    in operating costs and channel traffic are required for seamless operation of
    this architecture. Fig. 1. Architecture of the implemented agricultural IoT-based
    field monitoring system. Show All Assumption 1:The slave nodes N , which are placed
    at the boundary of the master node’s radio range, fail to transmit data due to
    link loss only. Assumption 2:The consolidated readings from each node ( N 1 ,
    N 2 ,… ), which consist of soil moisture, soil temperature, battery voltage, and
    solar voltage sensors, have very minute variations. These are due to variations
    in depth of the soil moisture sensor, terrain type, temperature conditions, and
    soil moisture heterogeneity [7], [8]. Fig. 1 shows the characteristics of links
    between the master and slave nodes of our deployed system. The nodes are assumed
    to be fixed and well optimized, due to the use of low power solutions such as
    ZigBee or 6LoWPAN. Without changes in the existing radio standards, modifications
    in the radio links are not an option without increasing the cost of deployment.
    Two approaches are undertaken to reduce the network data-load as outlined in Fig.
    1—master-node data compression and header compression over the TCP/IP network.
    Energy conservation within the domain of a master-node make use of schemes, such
    as compressive sensing, sink placement, and cluster-based routing [9], whereas
    energy conservation follows techniques, such as header compression [10], edge
    computing [11], fog computing, and other paradigms [12] when the data is in the
    realm of TCP/IP. Within the domain of the master node, to reduce D , the sampling
    instants of the sensor nodes themselves are changed to achieve reduced network
    data load D opt . For an original sensor sampling frequency of ω original , a
    reduced sensor sampling frequency ω reduced , and a scaling factor k , D opt (
    ω reduced )<D( ω original ) , such that ω reduced =(1/k) ω original ,∀k>1 . This
    is possible only for applications such as agriculture, as they deal with data
    which is not of temporal criticality and can be deemed as noncritical data. Delays
    in transmission of agricultural field data do not affect the purpose of deployment—monitoring
    changes in field and weather parameters, which tend to change slowly over time—as
    compared to time-critical systems such as fire monitors and health monitoring
    systems. The additional improvement is proposed in the communication link between
    the master node and the remote server. Prior to transmission to the remote server,
    the master node packetizes data in the correct order so that data from the individual
    nodes as well as sensors can be identified. A sample packet of the data from the
    master node to the server is shown in Fig. 2(a). Here, we propose a blind identification
    method using pretrained MLPs, where the master node periodically uploads data
    to the server with just the sensor data, data index, and date fields, as shown
    in Fig. 2(b). The learning algorithms in the remote server are responsible for
    identifying link errors, node identifiers, as well as sensor identifiers, from
    the incoming optimized data packets. The blind identification approach is evaluated
    at the remote server as well as the master node to reduce the unnecessary network
    transmission latency between the master node and the remote server. Fig. 2. Format
    of packets sent from slave to master nodes. (a) Original packet format. (b) Optimized
    packet format. Show All Within the purview of each master node, we intentionally
    implement sensor nodes with low-computational capability, in order to allow for
    an economical large-scale sensor-node implementation. Any approach which increases
    the computational complexity of the slave nodes, such as compressive sensing,
    and intelligent routing, automatically increases the overall cost of the field
    implementation. Hence, our proposed scheme implements slave nodes, which simply
    collect data from various locations in a field and forward it to a master node,
    which inturn removes the local packet identifiers and tags, prior to forwarding
    it over the Internet. Once the sensed data leaves the master node, header compression
    is applied on it to further reduce the network data-load of the implementation
    on the Internet. Robust header compression (ROHC) is one of the most popular techniques
    dealing with packet header compression over the Internet [10]. In lieu of our
    implementation, ROHC accentuated 3G/LTE telecommunication uplinks connecting the
    master node to the remote server is considered in addition to our proposed scheme,
    for compression of the packets gathered from the master nodes. This paper is organized
    as follows. Section II explores the state of the art in this domain. Section III
    provides the system overview and describes the dataset, followed by the details
    of the experimental setup in Section IV. Section V provides the performance analysis
    of our proposed scheme, followed by the conclusion of this paper in Section VI.
    SECTION II. Related Work The involvement of IoT with various ancillary technologies
    such as cloud, machine learning, big data, and others has resulted in rapid development
    of societally beneficial and impactful solutions boasting of a multitude of features—intelligence,
    scalability, automation, virtualization, and others. IoT platforms integrated
    with cloud-based infrastructure for load provisioning and execution of applications
    provide the additional advantages of virtualization of infrastructure as demonstrated
    by Truong and Dustdar [13]. Similar works on IoT-cloud framework for cooperation
    between cloud and smart devices was demonstrated by Kum et al. [2], whereas Nastic
    et al. [14] demonstrated the use of IoT-based software-defined units for controlling
    cloud systems. The use of reconfigurable smart sensors for IoT in industrial environments
    was demonstrated by Chi et al. [15]; whereas, Lazarescu [16] demonstrated the
    use of IoT and WSN in long-term environmental monitoring. Offloading data to a
    more powerful remote computing facility allows for processing intensive tasks
    such as automated analytics, learning, and automation, which is yet another important
    aspect of IoT [17]. Agriculture is a domain which is actively transitioning toward
    the use of IoT and machine learning for monitoring, analysis, prediction, and
    automation in tasks, which was previously manual and intuition-based. Transcending
    from traditional implementations of IoT, Kaloxylos et al. [6] described the implementation
    of an IoT-cloud-based precision farming system, achieving an Agri-IoT-cloud-based
    framework. More recently, IoT-based agricultural solution pilots are deployed
    across multiple countries in order to usher in food-security, reduce wastage of
    food, and scientifically optimize agricultural practices [18]. Similarly, IoT
    platforms are developed for precision agriculture as well as ecological monitoring
    [19]. The surging plethora of data types, architectures, and applications associated
    with IoT face the bottleneck of network bandwidth, which for most cases is established
    using legacy technologies, such as IPv4 over TCP or UDP. Various approaches for
    optimizing network bandwidth usage of in-place network infrastructure are proposed
    over the years. Approaches ranging from reduction of transmitted packet size [10]
    and judicious use of edge devices [20] to edge mining [11] have reported various
    degrees of successes in network bandwidth optimization. Header compression solutions
    such as ROHC [10], ROHCv2 [21], and others [12] build upon the fact that headers
    are static/constant in an IP stream. Synthesis: Solutions addressing the problem
    of payload minimization of the gathered data from the local networks connected
    to an IoT infrastructure is lacking, especially in agricultural scenarios. As,
    the bulk of the nodes and sensors deployed in these scenarios are resource and
    energy constrained, strategies must be devised to minimize their energy consumption
    in the long run. Additionally, these nodes are expected to house multiple heterogeneous
    sensors, which increases the payload size generated from each of these nodes.
    The payload, being uploaded to the cloud through the Internet reaches gargantuan
    proportions, in cases of large IoT deployment with frequent data sampling. SECTION
    III. System Overview The architecture of our implemented agricultural IoT is divided
    into four parts: 1) slave nodes; 2) master node; 3) IoT framework; and 4) the
    remote stochastic learning (RSL) module. The architecture of this implementation
    is shown in Fig. 1. Each slave node N i hosts ATmega328P processor with a processing
    speed of 16 MHz, and is equipped with four soil moisture sensors S m1 to S m4
    , placed at depths of 15 cm, 30 cm, 45 cm, and 60 cm. Additionally, the slave
    nodes are equipped with a soil temperature sensor, battery voltage detector, and
    solar voltage detector circuitry which is connected to the battery and a solar
    panel. The radio used is a ZigBee module, which is configured to work in a mesh
    network. The customized mini-processor in the slave node also control relays,
    which may be connected to pumps for automatic irrigation by triggering them from
    the remote server. Some of the deployed slave nodes in our implementation are
    shown in Fig. 3. Fig. 3. Our implemented agricultural IoT slave nodes. (a) Weather
    station, (b) soil sensor node, and (c) weather station. Show All The master node
    communicates to the slave nodes via ZigBee radio links. The master node hosts
    a quad-core ARM Cortex A53 (ARMv8), with a processing speed of 1.2 GHz. It also
    acts as the local gateway for its networked slave nodes, providing them with locally
    identifiable addresses within its operational domain. The communications from
    and to the remote server to the slave nodes are redirected through this gateway,
    which also happens to be the master node for this IoT framework. Multiple such
    gateways can be easily incorporated into the IoT framework to send their data
    to the remote server via the Internet. Our implemented server runs a Windows 8
    operating system with an Intel i3 processor, and clock speed of 3.72 GHz. The
    RSL module is hosted on the remote server. The data from all nodes D opt in the
    field are continually uploaded to the remote server by means of Web-sockets through
    the gateway. The pretrained models (Algorithm 1) in the server are used for classifying
    the incoming data. The data, after being sorted by the RSL module are analyzed
    for determining the field stress conditions and water requirements of crops. The
    actuators controlling the irrigation pumps can be accordingly activated from the
    server based on the soil parameter threshold conditions programmed in the server
    module. The whole field-side, slave node placement is divided into two parts based
    on the radio range R of the slave nodes from the master node—normal range and
    boundary range. The nodes in the boundary range tend to lose connection to the
    master node occasionally due to bad weather conditions and other unavoidable circumstances.
    Algorithm 1 RSL Show All procedure CREATE MODEL Q Show All procedure CREATE MODEL
    N Show All procedure CREATE MODEL S Show All A. Data The data obtained from various
    sensors affixed to a slave node d i is sent to the master node, from where it
    is uploaded to a remote server via the Internet using the IoT platform. Initially,
    the packets are uploaded in the format given in Fig. 2(a). Each slave sends d
    i =14 bytes of data per second. The data logging interval ω can be increased or
    decreased on-demand by means of text messages from its registered users/owners,
    which changes the values of the scaling factor k accordingly. We, additionally,
    reduce some of the fields from the data packets, and henceforth, refer to it as
    the optimized packet [Fig. 2(b)]. The reduction of 4 bytes of data per slave,
    per second, is a significant reduction in data volume, in case of long-term monitoring
    using large-scale sensor networks. Specific to our implementation, nodes 1 and
    3 are placed in the boundary zone, as depicted in Fig. 1. They have a high probability
    of link errors (Assumption 1). Nodes 2 and 4 are in the normal range of the master
    node and suffer from relatively, minuscule errors due to link failure. Subsequently,
    even after reducing the packet size, we can further reduce the data load to the
    server by reducing the data polling interval to twice per hour. As the sensors,
    in this case, are used for noncritical data measurement and the soil parameters
    tend to change slowly over time, this drastic reduction in data sampling does
    not significantly affect the overall decision-making process. This strategy would
    have been unthinkable in case of critical data, such as those obtained from health-care,
    traffic [22], or disaster management implementations of IoT. However, we find
    that the packet size reduction works fine with all applications of this framework.
    Assumption 3:The individual sensors in a sensor node have negligible fingerprints,
    even if they are of the same type. This may be due to insufficient hardware calibration
    [23] or even due to atomic level irregularities induced at the time of device
    fabrication. Assumption 4:The soil moisture sensors depend on the variation in
    dielectric constants between air, soil, and water to measure soil moisture content.
    This varies slightly due to varying electromagnetic interference (EMI) at various
    locations. Proof:The changes in dielectric properties of a substance, due to the
    introduction of an electromagnetic field, depends on the polarization effect of
    molecules. For a relative dielectric permittivity of E , the variation of E with
    frequency ω as described by Romano et al. [24] is given as E(ω)= E ′ (ω)−j[ E
    ′′ (ω)+ σ DC ω E 0 ] (1) View Source where: AbbreviationExpansion E ′ (ω) real
    component and signifies the energy stored in the system due to alignment of dipoles
    and EMI; E ′′ (ω) imaginary component and accounts for the dissipation of energy;
    σ DC signifies DC electrical conductivity and depends on actual transport of charge
    carriers; ω angular frequency of the imposed electromagnetic field. Changes in
    E ′ (ω) due to unnecessary EM interference or soil properties give rise to variations
    in sensor readings from the same type of soil moisture sensors. However, these
    changes are very small [24], and are neglected from consideration in this paper.
    SECTION IV. Experimental Setup This section discusses the experimental setup used
    in this paper. This covers the methodology used, remote server-based learning,
    and the computation of the carbon footprint for the implementation. Four assumptions
    are taken into account while applying the methodologies on the discussed architecture
    and learning modules in the server, as given by Assumptions 1–4. A. Overview of
    the Experiments As discussed in Section III, the placement of nodes is mainly
    divided into two groups: 1) normal range and 2) boundary range. We classify the
    unlabeled data arriving at the server and fit against the models generated using
    historical data from both normal and boundary range slave nodes. The method of
    classifying the data is outlined in Algorithm 1. On the training dataset, we first
    choose the ideal learning rate and momentum values (described in the next section)
    of the MLP-based classifier. Upon finally arriving at an optimum value, which
    can be used for the three cases—link error detection, node identification, and
    sensor identification—we demonstrate the accuracy of detection and loss minimization
    by a mean squared loss estimator (MSE), for our method. As a typical master node
    is resource constrained in terms of computation power, we modify the MLP architecture
    at the remote server to make its execution feasible on the master node. We term
    the original MLP model at the remote server as the Heavy model and the modified
    one on the master node as the Light model. Finally, we calculate the carbon footprint
    of our approach against the previous unoptimized approach. The carbon footprint
    of a system is calculated in terms of emission of CO2 released in the atmosphere
    in order to generate the power consumed by the system. The emission factor for
    an electric system is 6.89551× 10 −4 metric tons of CO2/kWh, as per e-GRID of
    the United States Environment Protection Agency, from the year 2010 data. In other
    words, consumption of 1 kWh of electricity releases 0.16 kg of CO2 in the atmosphere.
    This quantity may seem insignificant, but it tends to build up in cases of large
    sensor network deployments, running over prolonged periods of time. B. Methodology
    The data from Normal range nodes are grouped in a class and the Boundary range
    nodes are grouped into another class for training the MLP-based classifier. Our
    approach of dropping node and sensor identifiers from the packets makes it necessary
    to have an identification process in place which will categorize the uploaded
    data accordingly. Algorithm 1 identifies link errors as well as categorizes the
    incoming data into the various node and sensor classes according to their fingerprints.
    Although the sensors may be the same in all nodes, they do have minute variations
    of their own due to insufficient sensor and hardware calibration, a mismatch in
    placement depth [23], varying land topology and heterogeneity in soil moisture
    profiles [7], [8]. Similarly, the individual sensors are also differentiated from
    each other due to the inherent presence of minute calibration mismatch, fabrication
    irregularities and nonlinearity; this irregularity proves beneficial for our individual
    sensor identification. Fig. 4 shows the overall collective scheme of using the
    three trained models—Model Q, Model N, and Model S—in detecting link errors, identifying
    sensor nodes, and then identifying the individual sensors in each node. Fig. 4.
    Dataflow representation of the server-side packet restructuring module or the
    RSL module. Show All C. Remote Learning The following three modules—Model Q, Model
    N, and Model S—comprise the RSL algorithm in the server. The working of these
    modules is shown in Fig. 4. These models are trained based on the previously collected
    data. New data from the sensor nodes coming into the server are classified based
    on these pretrained models. The ensemble of these three models is used for blind
    identification of packets and its features from a restructured and reduced packet,
    arriving at the remote server. 1) Optimizer Selection: The optimizer selection
    ensures precise and speedy decision making for any machine learning-based algorithm.
    A stochastic gradient descent (SGD) [25] approach over back-propagation is chosen
    due to its high variance, low running cost, low-memory requirements, and ability
    to handle large data sizes over the entire training set. SGD operates by updating
    an objective J(θ) , where θ is one of its parameters, as θ:=θ−α ∇ θ E[J(θ)] (2)
    View Source where E[J(θ)] is the expectation of the objective and is calculated
    over the entire training set. However, in an SGD update, the expectation term
    is eliminated and is represented as θ:=θ−α ∇ θ J(θ; x (i) , y (i) ) . The values
    of ( x (i) , y (i) ) are obtained from the ith iteration of the training set.
    The objective updates are calculated based on small training data. 2) Activation
    Function Selection: A proper activation function selection is critical to our
    operation as it defines the distribution of the data to pass. For our approach,
    a regularized linear unit (ReLU) [26] is used as the activation function, instead
    of the traditional Sigmoid function, as the output of the Sigmoid function lies
    in the range [0, 1] and tends to saturate beyond this. The ReLU, on the other
    hand, has a range of [0,∞] and can be used for modeling real numbers, instead
    of just probability (as is done by Sigmoid functions). A Sigmoid function is represented
    as σ(x)=(1+ e −x ) −1 . In contrast to the Sigmoid function, the ReLU function
    is denoted as f(x)= Σ ∞ i=1 σ(x−i+0.5) . f(x) is similar to f(x)=log(1+ e x )
    , which is also referred to as a Softplus function and is approximated as f(x)=log(1+
    e x )≈max(0,x+N(0,1)). (3) View Source This is often referred to as rectified
    linear function (ReL). The gradient of the ReL function does not vanish, unlike
    the Sigmoid-based activation functions. 3) Learning: The data is generally shuffled
    prior to training in order to avoid biasing due to unforeseen, repetitive patterns
    in the dataset. Another function, the momentum ( γ ), is used to speed up the
    convergence of the objective. The update of momentum is given by v= θ= γv+α ∇
    θ J(θ; x (i) , y (i) )∀size(v)=size(θ) θ−v (4) (5) View Source where v is the
    current velocity and γ∈(0,1] . Section V shows the learning rate ( α ) and momentum
    value ( γ ) selection for the given agricultural sensor dataset. It also demonstrates
    the superiority of the ReLU-based activation over Sigmoid-based functions in SGD
    implementation of our system. D. Calculating the Carbon Footprint The carbon footprint
    of the architecture and our proposed improvement is calculated as S S−M = S S−M
    = S payload−14 + S ZigBee−API bytes S payload−14 +24bytes (6) (7) View Source
    where S S−M is the size of data received at the master node from the slave, S
    payload−14 is the data collected from the sensors and other parameters of the
    slave node using the original packet format ( ≃14 bytes, in this case), as shown
    in Fig. 2(a). S ZigBee-API is the ZigBee API’s frame format, which is fixed at
    24 bytes [27]. Again, it takes P 1-bit =184.9μW /bit to transmit 1 bit of data;
    ZigBee takes 1 s to transmit 24 bytes of data [27]. As we focus only on reducing
    the payload of the ZigBee data, from the slave to the master node. Henceforth,
    we shall consider only the payload part for our carbon footprint computation.
    Moreover, the slave and master nodes run on solar power and can be safely considered
    as zero-carbon footprint devices. The part of the architecture, starting from
    the gateway to the remote server (as shown in Fig. 1) have high energy requirements
    and rely on traditional and mostly nonrenewable energy sources. However, the use
    of approaches such as ROHC-based header compression significantly reduces the
    energy consumption of this part of the network architecture. The remaining part
    of the architecture consisting of sensor nodes is dependent on solar energy for
    regular operation and does not generate a carbon-footprint. Hence, only the path
    from gateway to the remote server is considered for carbon footprint computation
    of our approach. Since the master node discards the ZigBee-API frames, we represent
    the effective packet size sent to the remote server as S U = S payload−14 , where
    S U is the unoptimized packet size. Furthermore, S O and S OR are assigned to
    indicate optimized packet size and optimized packet size with reduced sampling,
    respectively. For S payload−10 and S payload−10−r denoting the reduced payload
    and the reduced payload with reduced data sampling, we assign, S O = S payload−10
    and S OR = S payload−10−r . Subsequently, for P (kWh) signifying the power consumed
    (in kW ) for transmitting S payload bytes of data per hour, and C P denoting the
    carbon footprint in kg-CO2 released into the atmosphere, we denote P(kWh)=185.9×
    10 −6 × S payload ×3.6 and calculate C P =P(kWh)×0.16  Kg-CO 2 . SECTION V. Performance
    Analysis This section discusses the output obtained from the experimental setup.
    The MLP is trained over the dataset, for both Sigmoid and ReLU activations. The
    learning rate ( α ) and momentum ( γ ) are varied to check the accuracy of classification
    for all three RSL modules— Model Q , Model N , and Model S —for determining the
    optimum MLP parameters. To sum-up the MLP results. Fig. 5(a) and (d) shows the
    performance of the Sigmoid and ReLU-based activation functions in determining
    link errors. The ReLU-based parameters, with α=[0.01,0.001] and 0.7≥γ≤0.9 , consistently
    perform better than all other cases. Fig. 5(b) and (e) shows that ReLU with α=[0.1,0.01]
    and 0.8≥γ≤0.9 , show superior performance over Sigmoid activation for classifying
    various nodes, from the incoming dataset. Fig. 5(c) and (f) shows the performance
    of the MLP in classifying the various sensors in a node. Here, ReLU activation
    for α=0.1 and 0.7≥γ≤0.9 give the best performance, for classifying individual
    sensors, from the incoming data. The optimum hyper-parameters, determined for
    the training of the three heavy RSL modules at the remote server— Model Q , Model
    N , and Model S —are evaluated using an ReLU activation, SGD optimizer, MSE loss
    function with α=0.01 and γ=0.9 for the Decay, Epoch, and Batch-size of the MLP
    set to 1× 10 −6 , 50, and 16, respectively. The model specific MLP parameters
    for the three models are 2 inputs, 2 outputs, and 2 hidden layers with 64,128
    neurons each for Model Q , 7 inputs, 4 outputs, and 2 hidden layers with 128,128
    neurons each for Model N , and 4 inputs, 5 outputs, and 64,128 neurons in 2 hidden
    layers for Model S , respectively. The corresponding accuracy of classification,
    achieved by using these parameters are 96% for Model Q , 92.5% for Model N , and
    95.6% for Model S units of the RSL module at the remote server. Fig. 6(a) and
    (b) shows the changes in accuracy and the minimization of loss (using MSE) for
    the RSL modules during training of the dataset. The dataset was trained over 50
    epochs, as beyond this the learning curve saturates and no further improvement
    in learning is achieved. Fig. 5. Effect of γ and α variations on the accuracy
    of classification for the RSL algorithms for the heavy model at the remote server.
    (a) LinkQ (Sigmoid). (b) NodeID (Sigmoid). (c) SensorID (Sigmoid). (d) LinkQ (ReLU).
    (e) NodeID (ReLU). (f) SensorID (ReLU). Show All Fig. 6. Overall classification
    accuracy and loss of the trained models for node identification, sensor identification,
    and link quality detection for the heavy model at the remote server. (a) Change
    in accuracy. (b) Change in loss. Show All Fig. 7(a) shows the carbon footprint
    of the agricultural deployment for five selected approaches, viz.—(G1) unoptimized
    packet over TCP/IP, (G2) optimized packet over TCP/IP, (G3) optimized packet with
    reduced sampling (sampled every alternate second) over TCP/IP, (G4) optimized
    packet with reduced sampling (sampled every fourth second) over TCP/IP, and (G5)
    unoptimized packet over ROHC TCP/IP—calculated with respect to varying nodes for
    a year. For a 100 node deployment, it is estimated that, as compared to the proposed
    scheme, the use of ROHC instead of compressionless TCP/IP achieves an overall
    reduction in carbon footprint by 50% for the same datasize as shown in Fig. 7(a)
    G1 and G5. Additionally, comparison between approaches G1 with G2, G3, and G4
    shows that our proposed scheme achieves savings of over 99% CO2 generated annually
    over regular IPv4 TCP/IP transmission. Again, comparing G1 with G5 (ROHC with
    comparable dataload), we observe that ROHC manages to attain further savings of
    50% of the CO2 generated annually for the same datasizes. It is to be noted that
    header compression schemes such as ROHC do not affect the payload size of the
    transmitted data. Additionally, as both uncompressed IPv4 packets over TCP/IP
    and ROHC work beyond the purview of the master node, massive savings in generated
    data within the master node’s domain affects the carbon footprint beyond its operational
    boundaries by dictating the payload size. Our proposed scheme manages to massively
    reduce the payload size of the data to be transmitted over the network to the
    remote server. The additional use of compression methods such as ROHC, which is
    primarily a header compression scheme, further helps in the reduction of carbon
    footprint [as shown in the inset plot in Fig. 7(a)] in domains such as agriculture,
    where the need for real-time data is not necessary. Fig. 7. Carbon footprint of
    the agricultural deployment with 100 nodes, projected for all the 5 approaches
    for a year, and comparison between master-node and remote server-based learning
    approaches within the same implementation. (a) Carbon footprint for 100 nodes
    over a year. (b) Metrics for learning at the master node versus at the remote
    server. Show All It is to be noted that having the learning models integrated
    directly with the master node would reduce the network load, and the latency caused
    thereof. However, we found that the latencies produced due to the operation of
    MLP models hosted at master node [as shown in Fig. 7(b)], were much higher than
    the 1 min mark, rendering them useless for operation in a real-time manner. These
    models and their parameters are similar in all respects to the ones hosted at
    the remote server, which we label as Heavy Model in Fig. 7(b). Upon modifying
    the MLP model architectures to make them extremely lightweight for faster service
    at the master nodes [light model in Fig. 7(b), which has 2 hidden layers each
    with 5,5 neurons], albeit at the cost of detection accuracies, we found that the
    latencies were almost double of the ones incurred at the server. Additionally,
    it is worthwhile to mention that the detection accuracies of the three trained
    models fell below 70% in case of Model N and Model S , whereas it fell below 30%
    for Model Q . In summary, Fig. 7(b) highlights the importance and need of remote
    learning at the server in comparison to learning at the master nodes for the same
    MLP architectures. SECTION VI. Conclusion This paper proposes an optimized method
    for detecting simple link failures between slave and master nodes. Additionally,
    the method for identifying slave nodes from data packets, even in the absence
    of node identifiers in the payload packet and identifying individual sensors in
    a node, in the absence of sensor identifier in the payload packet has also been
    designed and tested. This approach is tested on a remote server as well as a constrained
    master node, much nearer to the implementation site. Outsourcing the error detection
    and other identification tasks, which are computation intensive, to a remote server,
    allows the use of low-cost, low-specification and low-energy processors for IoT
    deployment. This method of minimizing packet size of traffic between slave to
    master node and to the remote server, via the Internet results in substantial
    reduction of network traffic, reduction of data, and conservation of node energy.
    The choice of hosting the proposed scheme at a master node severely hampers the
    performance of the scheme by increasing the on-node execution time. Even implementing
    lighter MLP models incur higher execution time at a master node. We conclude that
    the benefits of hosting these MLP models at the remote server far outweigh the
    benefits of minor savings in network bandwidth offered by hosting these models
    at the master node. In the future, we plan to implement unsupervised learning
    methods and other online learning methods to accommodate for heterogeneous data
    from sensor networks of similar or different types. Authors Figures References
    Citations Keywords Metrics More Like This Internet of Things and Wireless Sensor
    Networks for Smart Agriculture Applications: A Survey IEEE Access Published: 2023
    Weighted Connected Vertex Cover Based Energy-Efficient Link Monitoring for Wireless
    Sensor Networks Towards Secure Internet of Things IEEE Access Published: 2021
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: Mukherjee et al. (2019)
  journal: IEEE Internet of Things Journal
  key_findings: '- The proposed method can significantly reduce network traffic and
    energy consumption.

    - The method allows the use of low-cost, low-specification, and low-energy processors
    for IoT deployment.

    - Outsourcing the error detection and other identification tasks to a remote server
    reduces the computational burden on the slave nodes.'
  limitations: The paper does not evaluate the latency of the proposed method, which
    could be a concern in real-time applications. Additionally, the method assumes
    that the slave nodes are stationary and have a stable radio link with the master
    node. In practice, these assumptions may not always hold, which could affect the
    performance of the method.
  main_objective: To optimize data transmission in automated irrigation management
    systems through packet size reduction, node and sensor identification without
    identifiers, and distributed processing.
  pdf_link: null
  publication_year: 2019
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Multilayer perceptron (MLP) models, fog computing, ZigBee S1
    radio modules, TCP/IP
  title: Blind Entity Identification for Agricultural IoT Deployments
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jas.2020.1003536
  analysis: '>'
  apa_citation: 'Yang, X., Shu, L., Chen, J., Wu, J., Huang, E., Ferrag, M. A., &
    Nurellari, E. (2021). A Survey on Smart Agriculture: Development Modes, Technologies,
    and Security and Privacy Challenges. IEEE/CAA Journal of Automatica Sinica, 8(2),
    273-302.'
  authors:
  - Xing Yang
  - Lei Shu
  - Jianing Chen
  - Mohamed Amine Ferrag
  - Jun Wu
  - Edmond Nurellari
  - Kai Huang
  citation_count: 178
  data_sources: Smart agriculture literature, scientific papers, and experimental
    research
  explanation: According to this paper's evaluation of smart agriculture-related literature,
    fog computing addresses the problem of distributing processing and storage across
    a network by providing scalability and dependability. Because it incorporates
    both IoT and machine learning technologies, 5G communication enables data transmission
    between devices and the cloud with unmatched speed and efficiency. However, the
    paper highlights that despite these advancements, several IoT-enabled smart agriculture
    applications face security threats that can jeopardize their reliability.
  extract_1: Fig. 1. Characteristics and confronted issues of agriculture development
    (from agriculture 1.0 to agriculture 4.0).
  extract_2: In short, the new mode is a smart agricultural solution that combines
    agriculture with modern information technology.
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE/CAA Journal of Automatic...
    >Volume: 8 Issue: 2 A Survey on Smart Agriculture: Development Modes, Technologies,
    and Security and Privacy Challenges Publisher: IEEE Cite This PDF Xing Yang; Lei
    Shu; Jianing Chen; Mohamed Amine Ferrag; Jun Wu; Edmond Nurellari; Kai Huang All
    Authors 186 Cites in Papers 6536 Full Text Views Abstract Document Sections I.
    Introduction II. Development Modes of Smart Agriculture III. Key Technologies
    and Applications in Smart Agriculture IV. Security and Privacy Countermeasures
    V. Security Challenges of Smart Agriculture Show Full Outline Authors Figures
    References Citations Keywords Metrics Abstract: With the deep combination of both
    modern information technology and traditional agriculture, the era of agriculture
    4.0, which takes the form of smart agriculture, has come. Smart agriculture provides
    solutions for agricultural intelligence and automation. However, information security
    issues cannot be ignored with the development of agriculture brought by modern
    information technology. In this paper, three typical development modes of smart
    agriculture (precision agriculture, facility agriculture, and order agriculture)
    are presented. Then, 7 key technologies and 11 key applications are derived from
    the above modes. Based on the above technologies and applications, 6 security
    and privacy countermeasures (authentication and access control, privacy-preserving,
    blockchain-based solutions for data integrity, cryptography and key management,
    physical countermeasures, and intrusion detection systems) are summarized and
    discussed. Moreover, the security challenges of smart agriculture are analyzed
    and organized into two aspects: 1) agricultural production, and 2) information
    technology. Most current research projects have not taken agricultural equipment
    as potential security threats. Therefore, we did some additional experiments based
    on solar insecticidal lamps Internet of Things, and the results indicate that
    agricultural equipment has an impact on agricultural security. Finally, more technologies
    (5 G communication, fog computing, Internet of Everything, renewable energy management
    system, software defined network, virtual reality, augmented reality, and cyber
    security datasets for smart agriculture) are described as the future research
    directions of smart agriculture. Published in: IEEE/CAA Journal of Automatica
    Sinica ( Volume: 8, Issue: 2, February 2021) Page(s): 273 - 302 Date of Publication:
    24 November 2020 ISSN Information: DOI: 10.1109/JAS.2020.1003536 Publisher: IEEE
    Funding Agency: SECTION I. Introduction Agriculture is the primary industry in
    the world, and it plays an important role in social stability and economic development
    [1]. Overcoming the contradiction between the population explosion and the limited
    grain yield is a challenge that motivates an increasing number of studies on smart
    agriculture. The development of agriculture is based on both the improvement in
    productivity and the restrictions of the era, and the progress of science and
    technology drives the revolution of agriculture [2]. Fig. 1 is used to help readers
    understand the characteristics and confronted issues of agriculture development
    (from Agriculture 1.0 to Agriculture 4.0). Agriculture 1.0: the traditional agricultural
    era (between 1784 and around 1870) dominated by human and animal resources, the
    main issue of agriculture was the low efficiency of operation. Agriculture 2.0:
    the era of mechanized agriculture (in the 20th century), the main issue was the
    inefficient use of resources. Agriculture 3.0: the era of high-speed development
    of automatic agriculture (between 1992 to 2017), the main issue was the low level
    of intelligence. Agriculture 4.0: the era of smart agriculture (which is characterized
    by unmanned operations, begin at 2017) is mainly marked by the use of modern information
    technology to both serve agriculture and develop it intelligently. Smart agriculture
    is a new agricultural production mode, that contributes to agricultural information
    perception, quantitative decision-making, intelligent control, precise investment,
    and personalized service through the deep integration of modern information technologies,
    e.g., the internet, Internet of Things (IoT), big data, cloud computing, and Artificial
    Intelligence (AI) with agriculture. In short, the new mode is a smart agricultural
    solution that combines agriculture with modern information technology. Although
    modern information technology brings new opportunities to the development of agricultural
    production, it also creates great demands and challenges to security and privacy
    in the field of smart agriculture. For instance, both intellectual and unmanned
    operations are the development goals of smart agriculture, whose characteristics
    not only increase productivity but also increase the security risks of equipment
    and data. Fig. 1. Characteristics and confronted issues of agriculture development
    (from agriculture 1.0 to agriculture 4.0). Show All A. Motivation for the Article
    This article has three motivational factors: Smart agriculture is an emerging
    paradigm that extends information technology to traditional agriculture, and it
    has the potential as the development trend of agriculture due to the limited productivity
    of traditional agriculture and the wide application of information technology.
    Therefore, it is very important to summarize the existing production mode and
    specific researches. Although smart agriculture has been extensively studied,
    little work has been done on the analysis of security challenges compared with
    industrial security solutions. There is a great difference between urban (industry)
    conditions and rural (agriculture) conditions, as shown in Table I. It indicates
    that security countermeasures based on urban conditions may not suitable for rural
    conditions. Therefore, it is critical to analyze the characteristics of security
    issues under the smart agriculture scenarios. For the above factors, this article
    aims to present a survey of the security topics that arise from smart agriculture,
    which naturally leads to a large number of open research issues. B. Related Works
    1) Works Related to Smart Agriculture Some of the articles related to smart agriculture
    and its security issues are listed in Table III. In [3], typical applications
    of cloud computing technology in agricultural IoT were discussed, and a simple
    IoT agriculture model was addressed with a wireless network. Gondchawar et al.
    sought to make agriculture smart by using automation and IoT technology, e.g.,
    smart GPS-based remote-controlled robot, smart irrigation with decision-making
    system, and smart warehouse management [4]. Antonacci et al. discussed the application
    of nanostructured sensors to support farmers in accessing fast and accurate analyses
    [5]. In [6], IoT deployment challenges and specific issues were discussed. In
    addition, the wireless communication technologies that are associated with agricultural
    applications were analyzed. Elijah et al. depicted the applications of IoT and
    data analytics in agriculture and analyzed the benefits of these applications
    [7]. Khanna et al. highlighted the applications of IoT in precision agriculture
    [8]. In [9], the research initiatives and scientific literature of smart agriculture
    were discussed in detail. The applications of big data in smart agriculture were
    discussed in [10], especially in terms of the food supply chain. In addition,
    the study mentioned that ensuring privacy and security is one of the greatest
    challenges of big data. Bacco et al. presented ground and aerial vehicles, along
    with the vision systems of UAVs in smart agriculture scenarios [11]. To identify
    the differences between UAV missions, the study also proposed a simple taxonomy.
    In [12] and [13], climate-smart agriculture was mainly used in precision agriculture
    by monitoring and predicting meteorological factors and environmental conditions.
    Various applications, services, and sensors based on IoT devices and communications
    techniques in smart agriculture were introduced in [14]. In [3]–[10], these studies
    also mentioned security issues without further discussion. 2) Works Related to
    Security Issues in Smart Agriculture Security issues in smart agriculture have
    been studied in [15]–[20], among them privacy-oriented blockchain-based solutions
    were introduced in [15], [16] proposed a holistic study on security and privacy
    in a smart agriculture ecosystem, and [17] studied the cyber security in smart
    agriculture. A prediction model framework for cyber-attacks in precision agriculture
    was presented in [18], and it is suggested that anomaly detection is needed to
    eliminate false alarms. Furthermore, Haseeb et al. proposed a security mechanism
    based on symmetric data encryption in agricultural sensors and a robust transmission
    strategy for IoT-based smart agriculture applications [19]. Moreover, Farooq et
    al. made a brief overview of security requirements, security challenges, stack
    challenges, thread model, and attack taxonomy on smart agriculture without further
    discussion about them [20]. Although the above surveys reviewed various smart
    agriculture applications and described security issues from the aspect of various
    information technologies, there is little discussion about security challenges
    in agricultural production. Table I Comparison of security issues between urban
    (industry) and rural (agriculture) C. Contributions The contributions of this
    paper are listed as follows. The development status of smart agriculture is summarized
    and classified into three typical development modes: precision agriculture, facility
    agriculture, and order agriculture. Furthermore, 7 key technologies and 11 key
    applications are discussed. Security and privacy countermeasures are summarized
    as (1) authentication and access control, (2) privacy-preserving, (3) blockchain-based
    solutions for data integrity, (4) cryptography and key management, (5) physical
    countermeasures, and (6) intrusion detection systems. Potential security challenges
    of smart agriculture are highlighted and divided into two aspects: (1) agricultural
    production and (2) information technology. Agricultural equipment will also affect
    the security strategy. For instance, it is suggested that high voltage discharge
    interference of Solar Insecticidal Lamps Internet of Things (SIL-IoT) should be
    considered as attacks or have an impact on security strategy. In [25], [26], we
    did some experiments and the results indicate that the interference of high voltage
    discharge affects data transmission. Then, we found that the interference has
    an impact on data acquisition from the results of our additional experiments in
    this paper. Furthermore, the electromagnetic interference of photovoltaic power
    generation may also be potential attacks in photovoltaic agricultural Internet
    of Things. The remaining part of this paper is structured as Fig. 2: Section II
    describes the development modes of smart agriculture. Section III lists some key
    technologies and applications in smart agriculture. Section IV summaries the security
    and privacy countermeasures for smart agriculture. Section V discusses the security
    challenges of smart agriculture. Section VI summarizes the future trends and opportunities
    of smart agriculture and Section VII concludes the article. To help readers understand
    this paper, acronyms found in this paper are shown in Table II. SECTION II. Development
    Modes of Smart Agriculture At present, smart agriculture is the common goal of
    agricultural development in all countries worldwide. The world''s typical smart
    agriculture development modes are divided into three types, as shown in Table
    IV. Considering the characteristics of the vast territory and uneven population
    distribution in China, the development modes need to be modified before they are
    applied to the different regions of China. These modes have a strong impact on
    promoting production management, industrial operation, and unmanned development
    of agriculture. Fig. 3 shows three types of development modes and their characteristics
    in smart agriculture. A. Precision Agriculture According to the environmental
    conditions of each operation unit in the field and the temporal-spatial differences
    of crop yield, various agronomic measures should be carefully and accurately applied
    to optimize the quantity, quality and timing of water, fertilizer, seeds, pesticides,
    etc., so as to obtain the highest yield and maximum economic benefits, and protect
    the agricultural ecological environment and protect the agricultural natural resources.
    Precision agriculture is an advanced technology to improve crop yields, in which
    Wireless Sensor Networks (WSNs) is the main developmental driving force [30].
    The combination of WSNs and agriculture can effectively reduce the potential risks
    of the production process and help farmers make favorable decisions by deploying
    a large number of low-power, multi-function, wireless communication sensors on
    farmland to collect relevant data throughout the agricultural production process
    (e.g., environmental data, crop growth data, and livestock health data) [31].
    The modern information technology used in precision agriculture is mainly “3S”,
    which includes remote sensing technology (RS), geographic information system (GIS),
    and global positioning system (GPS) [15]. Various types of data (e.g., GPS data,
    GIS data, RS data), as well as AI methods, are used in precision agriculture to
    deduce the crop growth process and propose crop production management in an expert
    decision system, which is different from the traditional agricultural production
    management methods based on subjective experience. The functions of precision
    agriculture include: Reducing environmental pollution by reasonably controlling
    the pesticide dosage; Reducing the waste of resources by improving the efficiency
    of agricultural irrigation; Enhancing the land utilization by improving the ecological
    environment of farmland; Improving the yield and quality of agricultural products
    by analyzing the law of crop growth and thereby maintaining the best crop growth
    conditions. Fig. 2. Organization of this paper. Development modes, 7 key technologies,
    and 11 applications of smart agriculture are summarized in section II and III,
    which contribute to discuss security issues in section IV, V and VI. Show All
    The main security threats in precision agriculture are: Sensors being vulnerable
    to eavesdrop, steal and inject malicious data due to signal loss from their long-distance
    of deployment strategy and harsh environment; Location tampering of outdoor sensors
    and actors resulting in agricultural facilities failure and abnormal operation.
    B. Facility Agriculture Facility agriculture has the goal of good quality and
    high yield, and this agricultural production mode is in the industrial style.
    This type of agriculture is a remarkable sign in the development of modern agriculture,
    and it is characterized by high demand for capital, technology, and labor. Using
    engineering technology, facility agriculture can provide man-made conditions suitable
    for crop growth, and facility protection; it can also remove the environmental
    restrictions on agricultural production and improve the efficiency of automatic
    production. Compared with traditional agriculture, facility agriculture can meet
    the multi-level consumption demands derived from societal development without
    the constraints of the natural environment and seasonal agricultural products
    [32]. Moreover, facility agriculture, facility horticulture, and facility breeding
    share a similar mode of production, and all of them are outfitted with the technologies,
    i.e., biotechnology, engineering technology, meteorology technology, IoT technology,
    and computer technology. The cores of the above three production modes consist
    of prediction models and decision-making management systems that are based on
    historical data, e.g., environmental data, crop growth data under different conditions,
    and crop growth data with different types of genes. Considering the different
    environmental requirements of crops, elements in the facility (e.g., temperature,
    air pressure, relative humidity, light intensity, and fertilizer application rate)
    are monitored and controlled in real time to ensure crops grow in the most favorable
    conditions. The most typical example is the intelligent greenhouse. The differences
    between specific studies (i.e., greenhouse, aquaculture, plant factory and poultry
    and livestock breeding) include different environmental elements, different sensor
    devices, and specific computer-controlled programs. The functions of facility
    agriculture include: Ensuring sustainable and efficient production within a completely
    closed environment with the function of intelligent control; Ensuring agricultural
    production against the restriction of geographical conditions; Shortening the
    production cycle of agricultural products; Improving the quality and yield of
    products. Table II Acronyms found in this paper As a combination of both agriculture
    and industry, facility agriculture, will be the development trend of agriculture,
    and it has become a pillar industry in developed countries e.g., the U.S., the
    Netherlands, and Japan. Due to the characteristics of centralized administration
    and automatic management, facility agriculture is vulnerable to control system
    intrusion and unauthorized access. C. Order Agriculture With the advancement of
    urbanization in China, urban development is rapid, while rural development is
    slow. There are three main problems that hamper rural development: A weak agricultural
    foundation, Hidden dangers in the quality and security of agricultural products,
    Information island transactions within agricultural products [33]. It implies
    that on its own, advanced agricultural production technologies are not sufficient,
    and it helps to create value only when it meets an enabling market opportunity
    [34]. Therefore, order agriculture has achieved an effective business model by
    outsourcing the production demand for agricultural products in advance, which
    can reduce the planting and breeding risks, and avoid blind production [29]. Besides,
    to ensure food security and manage agricultural products, a traceability system
    which makes consumers obtain the appropriate information agricultural productions
    is applied to agricultural product supply chain. Furthermore, agricultural product
    supply chain plays a vital role in the market supervision of agricultural products
    trade. The functions of agricultural product supply chain include: Improving the
    transparency of agricultural product information by modern e-commerce and blockchain
    technology; Eliminating the information island of an agricultural product transaction
    [35]; Reducing the information asymmetry between farmers and suppliers; Reducing
    the imbalance between the supply of and demand for agricultural products. For
    instance, Leng et al. [36] proposed a public agricultural supply chain system
    based on double chain architecture to provide a security guarantee mechanism for
    the public platform and improve the utilization of business resources. In [37],
    an agricultural provenance system based on blockchain was presented to solve the
    trust crisis in product supply chain. D. Summary Precision agriculture, facility
    agriculture, and order agriculture are the main development modes of smart agriculture,
    which combine traditional agricultural forms (outdoor), emerging agricultural
    forms (indoor), and agricultural products industry chain with emerging technologies.
    Various applications of smart agriculture based on the above development modes
    contribute to the improvement of grain products and the quality of agricultural
    products, the reduction of agricultural production costs, and the transparency
    of agricultural products trading. Table III Related works Fig. 3. Research fields
    of smart agriculture based on 1) Precision agriculture, 2) Facility agriculture,
    and 3) Order agriculture. Show All Table IV Three typical development modes of
    smart agriculture SECTION III. Key Technologies and Applications in Smart Agriculture
    In this section, 7 key technologies and 11 key applications in smart agriculture
    based on the three development modes mentioned in Section II are introduced. The
    arrangement of this section is shown in Fig. 2. Agricultural IoT (key technology,
    introduced in Subsection A) is the information carrier of the other technologies
    and applications in smart agriculture. Seven Typical applications of it (introduced
    in Subsection B) are: 1) IoT in field agriculture, 2) IoT in aquaculture, 3) IoT
    in poultry and livestock breeding, 4) IoT in greenhouse, 5) plant factory, 6)
    photovoltaic agricultural IoT, and 7) SIL-IoT. Besides, agricultural IoT has the
    functions of data acquisition, data transmission, data storage, and data analysis.
    According to the four functions, six key technologies are: 1) sensors and actuators,
    and 2) agriculture satellite remote sensing (data acquisition technologies, introduced
    in Subsection C); 3) various data transmission technologies (listed in Table V);
    4) agriculture blockchain (data storage technology, introduced in Subsection E);
    5) agriculture AI and 6) agriculture edge computing (data analysis technologies,
    introduced in Subsection F). And four key applications are: 1) agriculture crowd
    sensing, and 2) plant phenotype information system (data acquisition applications,
    introduced in Subsection D); 3) agriculture UAV, and 4) driverless tractor (data
    analysis applications, introduced in Subsection G). A. Agricultural Internet of
    Things Technology Agricultural IoT is a key technology in smart agriculture which
    makes it possible to quantify the environmental factors, crop growth, and process
    of agricultural production by automatic processing, analysis, and access [38].
    According to the definition of IoT, IoT architecture can be divided into perception
    layer, transmission layer, and application layer, as shown in Fig. 4. Table V
    Comparison of the existing wireless communication technologies In the perception
    layer, various types of sensors are used to collect both field environment information
    and crop growth information, and these sensors are also used to describe the state
    of the environment [39]. The transmission layer includes all types of network
    communication protocols in which the data collected by the perception layer can
    be transmitted to the application layer based on these protocols. Various wireless
    communication technologies and their parameters are listed in Table V (adapted
    from [6], [7], [38], [40], [41], and Wikipedia). Due to the characteristics of
    the large-scale and outdoor environment in precision agriculture, technologies
    with low transmission range (e.g., WiFi and Thread) and high energy consumption
    (e.g., WiFi) cannot apply to precision agriculture. In addition, low data rate
    technologies (e.g., 2 G(GSM), Z-Wave, LoRa) are not applicable for some technologies
    with high throughput data transmission (e.g., plant phenotype information system).
    The application layer plays a vital role in agriculture, and it can be the cloud-based
    (i.e., multiple servers) and local-based (i.e., edge computing based on the gateway)
    system. The application layer consists of the following functions: Data storage,
    e.g., cloud-based platform and Hadoop distributed file system for quick and safe
    accessing to data [42]; Data management, e.g., Supervisory Control And Data Acquisition
    (SCADA) for monitoring real-time data [18]; Data analytics, e.g., decision-making
    system, yield models and plant instructions for automatic control in agricultural
    production [43]; Data marketing, e.g., data visualization, traceability system
    of agricultural products for ownership, privacy, new business models [44]. Fig.
    4. Various technologies and applications based on iot architecture. Show All B.
    Agricultural Internet of Things Application 1) Internet of Things in Field Agriculture
    Field crops mainly refer to such products as wheat, rice, and corn, which are
    of great significance to ensuring grain security [45]. In field agriculture, the
    main research topics include field resource management and agricultural condition
    monitoring, and IoT plays an important role in both of these areas. Based on the
    characteristics of various regions in field agriculture, it is difficult to apply
    wired transmission in that setting. Therefore, WSNs technology is mainly used
    instead of wired transmission in field agriculture [46]. After analyzing the data
    transmitted by the transmission layer, the application layer can be expanded into
    a variety of digital tools that benefit the agricultural production e.g., decision
    support systems, expert systems, and cloud data storage. Although IoT technology
    improves the efficiency and quality of field agricultural production, it also
    entails some security problems (e.g., agricultural facility damage). 2) Internet
    of Things in Aquaculture China has become the largest aquaculture country with
    aquaculture production that accounts for approximately two-thirds of the world''s
    production [47]. Currently, aquaculture is transferred from traditional extensive
    aquaculture to industrialized and precise aquaculture. IoT in aquaculture is a
    symbol of the transformation of aquaculture, it is an intelligent aquaculture
    system based on WSNs that collects environmental data for real-time monitoring,
    early warning analysis, and auxiliary decision-making [48]. Special facilities,
    e.g., water quality parameter sensors, underwater robots, underwater cameras,
    and meteorological stations, are applied to monitor environment elements such
    as the water temperature, dissolved oxygen, pH value, salinity, and chloride in
    real time. In addition, actuators are used to adjust the water quality of the
    culture pond to ensure the most suitable environmental conditions for the growth
    of aquatic organisms [49]. The differences between IoT in aquaculture and IoT
    in field agriculture include not only the monitoring objects but also the complex
    aquaculture environment and various influencing factors during the growth of aquatic
    organisms. Thus, it is difficult to implement accurate and effective monitoring,
    detection, and optimization management [50]. 3) Internet of Things in Poultry
    and Livestock Breeding Compared with the other forms of agricultural production,
    poultry and livestock breeding have higher production scales and requirements
    in terms of the technology, facility, and funds [51]. IoT in poultry and livestock
    breeding is based on both indoor conditions and outdoor environment, as shown
    in Fig. 5. Indoor conditions include facilities e.g., environmental control equipment
    (to ensure environmental stability), automatic feeding equipment (to ensure forage
    supply), video monitoring equipment (to monitor animal behavior). In addition,
    to track the growth status of each animal under indoor conditions and outdoor
    environment and increase the traceability of meat products, Radio Frequency Identification
    (RFID) technology is generally used to set the electronic identification, assign
    a serial number to each animal, and simplify data storage and tracing [52]. Hence,
    the advantages of monitoring, identification, and positioning of animals through
    RFID technology are: Effectively strengthening the detection of the breeding environment;
    Preventing the spread of various epidemic diseases among animals; Ensuring the
    price stability of meat products [53]. For instance, the recent sharp rise in
    the price of pork in China, which resulted from African swine fever in 2019, will
    not happen again if IoT technology is well applied in poultry and livestock breeding.
    Currently, important studies of IoT in poultry and livestock breeding include
    the electronic identification of animals, database management of animal information,
    the quality control and safety traceability of product, and auxiliary disease
    diagnosis using AI technology [54]. Due to the high production value of poultry
    and livestock breeding, high data sensitivity is required for the decision-making
    system. Failures in sensors, links, and decision-making systems may lead to irreparable
    economic losses to farmers. Fig. 5. Indoor conditions and outdoor environment
    of poultry and livestock breeding, e.g., (a) Indoor conditions for chicken farm,
    (b) Outdoor environment for sheep breeding, (c) Indoor conditions for hog farm,
    and (d) Outdoor environment for cattle breeding. Show All 4) Internet of Things
    in Greenhouse Through the environmental control system, IoT in a greenhouse provides
    a closed growing environment to ensure the healthy growth of crops without the
    restrictions of an external environment, which helps improve the yield and quality
    of crops [55]. Agriculture production of IoT in greenhouse can be divided into
    the following steps: Collecting the environmental data through sensors, including
    the temperature, relative humidity, carbon dioxide concentration, light intensity,
    soil temperature, soil humidity, and pH value; Uploading the collected data to
    the control system through signal transmission facilities; Modeling and analyzing
    the heterogeneous data through the prediction model in the control system [56].
    Through the above three steps, the facilities in a greenhouse, e.g., the sprinkler
    irrigation facility, drip irrigation facility, and temperature regulation facility,
    can execute commands intelligently and automatically to maintain steady environmental
    conditions. 5) Plant Factory Due to the growing scarcity of both arable land and
    water sources, a type of low-consumption, environmental-protection, high-yield,
    and safe agricultural production mode has emerged as the most suitable mode for
    agriculture. The plant factory is one of the representative technologies, which
    is a reflection of the transformation from traditional agriculture to modern industry
    [57]. The plant factory''s characteristics include: No limitation due to the environmental
    conditions; Less pollution; Less waste of resources; A controllable production
    cycle, these features ensure the agriculture production even with a deterioration
    of the ecological environment [58]. Similar to the production mode of IoT in a
    greenhouse, a plant factory cultivates crops under the controlled conditions of
    factors such as the temperature, humidity, carbon dioxide concentration, and light
    intensity. The differences are that the plant factory has: Higher mechanization;
    Higher automation; More hydroponics; A higher space utilization rate; Proximity
    to a city; A closed and clean environment. At present, plant factories are mainly
    distributed among East Asia, Europe, and the U.S., and artificial light plant
    factories are being developed rapidly in Japan. Due to the reduction of arable
    land, frequent natural disasters, and the shortage of rural labor, agriculture
    is also trending to plant factories in China [59]. The key technologies of the
    plant factory are as follows: Three-dimensional and multi-layer soilless cultivation
    technology; Artificial lighting luminous technology; Intelligent environment control
    technology; Automatic control technology of the plant production space. The above
    technologies are associated with the production efficiency and production cost
    of a plant factory [60]. A plant factory is confronted with the following issues:
    The high cost of the initial construction and maintenance; Limited types of crop
    cultivation; A low level of intelligent production; Low security and privacy [60].
    Because the above issues hinder the development of plant factories, they should
    gain more attention and emphasis. 6) Photovoltaic Agricultural Internet of Things
    With the reduction of natural resources and the aggravation of environmental pollution,
    clean and renewable energy plays an indispensable role in the energy transformation
    of the world [61] In China, photovoltaic power generation occupies a significant
    position in new energy power generation, and there is vast potential for its development
    [62]. In addition, photovoltaic power generation has the advantages of low operation
    cost, no greenhouse gas emissions, and a low maintenance cost [63]. However, the
    development of photovoltaic power generation is limited by the low energy conversion
    efficiency, the high correlation with meteorological factors, and the waste of
    residual power after the grid connection [64], [65]. With the combination of photovoltaic
    power generation and agricultural IoT, the residual power can be utilized effectively.
    Generally, if the actual generation exceeds the demand of the grid, power will
    be limited to protect the grid, which leads to energy waste. With the application
    of residual power for agricultural IoT facilities through battery storage, the
    wasted power and farm operation costs can be effectively reduced. For example,
    photovoltaic energy was used for the irrigation of farmland, and SolarCoin (similar
    to Bitcoin) was proposed for energy and water trading [66]. In addition, because
    a large area of land is required for both field agricultural production and photovoltaic
    power generation, deploying photovoltaic panels over farmland can optimize land
    usage [67]. Moreover, sensors for monitoring field crops can acquire power from
    a photovoltaic system and monitor photovoltaic power generation facilities [68].
    However, this technology also brings some security challenges. For instance, photovoltaic
    power generation may have a great impact on information transmission and further
    increase the risk of receiving malicious data. 7) Solar Insecticidal Lamps Internet
    of Things Solar insecticidal lamps (SIL) kill migratory pests by releasing a high
    voltage pulse current, which contributes to reducing the usage of pesticides [69].
    At present, SIL are widely applied in China, for instance, 20000 SIL have been
    deployed for pest control in Xinyu City, Jiangxi Province, China. With a low level
    of intelligence, most of the traditional SIL are deployed only for killing pests
    among the fields. However, pest information cannot be obtained to make forecasts
    of pests and adjust the work time of insecticidal lamps adaptively. Therefore,
    the application situation of SIL was investigated and the structure diagram of
    SIL-IoT node was introduced in [69]. It has been found that the effective killing
    distance of SIL (SIL deployment radius ≤ 110 m) [70] is in the valid communication
    radius of wireless sensor nodes (e.g., ZigBee, LoRa), as shown in Fig. 6. Due
    to the advantages of SIL-IoT (i.e., pollution-free, high insecticidal efficiency,
    and easy for scheduling), SIL-IoT will be applied widely for pest prevention and
    control, as well as the data acquisition of field agriculture. Recently, Yang
    et al. [70] proposed a node deployment strategy based on partition structure for
    SIL-IoT. The node deployment problem is transformed into a secondary allocation
    problem by using the natural partition structure of farmland, and the problem
    is solved by genetic algorithm. Under the constraint of ensuring full coverage,
    this strategy significantly reduces the number of SIL-IoT nodes. In addition,
    Huang et al. [25], [26] found that high voltage pulse discharge released by SIL
    has been as an interference to ZigBee-based device in SIL-IoT. It is mentioned
    that the device in [25], [26] can be used as a method to attack WSNs, leading
    to the abnormal working state, and it is suggested that the installing space between
    SIL and ZigBee-based device is at least 25 cm. Moreover, Yang et al. [71] mentioned
    that the interference will affect fault diagnosis of SIL-IoT and thereby affect
    the reliability of SIL-IoT. In [71], the characteristics and challenges of fault
    diagnosis in SIL-IoT are analyzed and it is highlighted that security attacks
    will lead to the failure of fault diagnosis. Fig. 6. SIL-IoT component and communication
    diagram. The insecticidal range is smaller than the communication range, which
    ensures that the SIL-IoT nodes deployed in the field meet the communication requirements.
    Show All Although the application of IoT technology expands the functions of insecticidal
    lamps and improves their utilization rate, it entails some new security challenges.
    For example, signal interference is serious when the insecticidal lamp is discharged,
    and traditional signal transmission security methods may not suitable for this
    situation. C. Data Acquisition Technology Data acquisition is an interface that
    uses a device to collect data from the outside of the system and input them into
    the internal system. Data acquisition technology mainly includes: RS232, RS485
    serial ports for connecting multiple detection instruments to implement automatic
    data acquisition; USB interface for outputting data; The wireless communication
    module for transmit data; Various sensors for collecting data and various actuators
    for maintaining the controlled variable; Satellite for obtaining, measuring and
    processing the related data through the interaction between electromagnetic wave
    and object. These technologies can be applied to agriculture crowd sensing and
    plant phenotype information system, which obtain data from perception module of
    mobile devices, camera, spectrometer, various weather sensors, etc.. 1) Sensors
    and Actuators Agricultural sensors are mainly used to collect both environmental
    conditions and crop growth information [39] and then transmit the data to the
    cloud [38]. Various sensors in smart agriculture can be classified into location
    sensors, photoelectric sensors, mechanical sensors, electrochemical sensors, airflow
    sensors, and optical sensors, as shown in Table VI (adapted from [5], [7], [72]).
    These sensors are applied to collect meteorological information (e.g., temperature,
    humidity, carbon dioxide concentration), crop information (e.g., crop growth conditions,
    crop disease), soil information (e.g., tensiometers, soil type, and moisture level
    of the soil), location information (e.g., precision location of crops), etc..
    Then, these information are transmitted to the cloud. If the data collected by
    the sensor meet certain judgment conditions, actuators will activate or deactivate
    agricultural equipment. The main actuators in facility agriculture are: Irrigation
    equipment to ensure the sufficient moisture for crop growth; Lighting control
    equipment to ensure the suitable lighting conditions for crop growth; Air circulation
    to ensure the carbon dioxide concentration in closed growth conditions; Crop disease
    control to ensure the healthy growth of the crop. Table VI Sensors in smart agriculture
    2) Agricultural Satellite Remote Sensing Agricultural satellite remote sensing
    is a technology that monitors: Various types of agricultural systems e.g., field
    planting and aquaculture; The process of agricultural production; Multiple elements
    of agriculture i.e., production, environment, and ecology information [73]. It
    is mainly applied to the following fields: area estimation, crop growth monitoring,
    pest information monitoring, yield prediction, grassland vegetation monitoring,
    and agricultural resources mapping [74]. Moreover, the trends of agricultural
    satellite remote sensing development in the world include both joint observation
    and high spatial-temporal resolution monitoring. In China, the demand for sky-air-ground-integration
    in agriculture was proposed in the “Outline of the National Rural Development
    Plan of Sky-air-ground Digital Agriculture (2018-2025)”. The requirements also
    include realizing (1) the digitalization of all factors and all production processes,
    and (2) intelligent dynamic monitoring in field planting, animal husbandry, and
    related areas [75]. To implement sky-air-ground-integration, several problems
    must be solved, e.g., we need both cooperative observation among satellites, and
    massive data fusion among satellites, aircraft, UAVs, and surface stations, as
    shown in Fig. 7. Fig. 7. Massive data fusion among satellites, aircraft, UAVs,
    and surface stations. Show All D. Data Acquisition Application 1) Agricultural
    Crowd Sensing Crowd sensing employs the functions of perception computing, common
    measurement, and information sharing by a large number of personal mobile devices
    (e.g., smartphones and wearable devices) to complete large-scale and complex perception
    tasks [76]. Mobile terminal equipment is used as the basic sensing unit to complete
    the collection of sensing data through the wireless network. Furthermore, with
    the combination of the ideas of both mobile perception and crowdsourcing, crowd
    sensing has the advantages of low cost, strong scalability, and strong mobility.
    The emphases of crowd sensing are: The data processing technology; The incentive
    mechanism; The crowd sensing software platform. To date, crowd sensing has been
    widely used in intelligent transportation, public security, environmental monitoring,
    and other applications. It is mainly applied in urban environments, and there
    have been few applications in rural ones. Due to the increasing proportion of
    farmers with smartphones and the demands of collecting agricultural data, agricultural
    crowd sensing has huge potential for data acquisition [77]. For instance, Ginige
    et al. [78] proposed a mobile-based information system which consists of a smart
    computing framework, and was studied for farmers to report pest and disease outbreak
    events. As a new IoT sensing technology, agriculture crowd sensing will inevitably
    entail a variety of security challenges [79]. For example, a SmartfLAIr system
    was proposed for an increased resolution of leaf area index and a perturbation
    based privacy mechanism with Trusted Third Party (TTP) architecture was designed
    to ensure user privacy [80]. 2) Plant Phenotype Information System The plant phenotype
    information system is a technology that quantitatively analyses the interaction
    effect of both the genotype and the environment on crop products'' quality and
    other traits. It has the following functions: Monitoring the growth of crops by
    deploying various types of sensors and measuring instruments under Specified conditions
    [81]; Analyzing the data from both UAVs and satellite remote sensing to quantify
    the growth state and yield of crops under different genes and environmental factors;
    Selecting stable and high-yield crop genes and their suitable growth environment.
    All the functions are based on abundant plant phenotype information, which is
    mainly composed of massive images, videos, and text data. To make the data suitable
    for analytics, the main studies of plant phenotypic information systems are: Massive
    data annotation [82], management [83] and integration [84] (i.e., data annotation,
    data association and data storage by knowledge graph technology); Massive image
    data analysis [85], [86] (e.g., machine learning, and deep learning algorithms).
    Due to the characteristics of interdisciplinary fusion, multi-team cooperation
    is required for a plant phenotype information system. Hence, Ubbens et al. [87]
    proposed a deep plant phenomics system, which was an easy platform by providing
    a pre-trained model for plant scientists. In addition, a plant phenotype information
    system involves various technologies, e.g., sensor facility, network communication,
    big data platform, and data processing method, which entails many security issues.
    E. Data Storage Technology Data storage objects include temporary files generated
    by data stream or information that needs to be searched in the process of processing.
    At present, the main data storage methods include: Direct Attached Storage (DAS),
    a storage device directly connected to the host system without centralized management
    solution; Network Attached Storage (NAS), a device with data storage function
    connected to the network; Storage Area Network (SAN), a network in which storage
    devices are connected to each other and connected to a server or group of servers.
    Moreover, database is the most commonly used data storage software, which consists
    of: Relational database, the relational model is used to organize data in database,
    e.g., Oracle, SQLServer, MySQL; Non-relational database, removing the relational
    characteristics of relational database to ensure the scalability of data, e.g.,
    Redis, MongoDB, Neo4J). From the aspects of storage mode, traditional databases
    mostly adopts centralized storage mode, which are confronted with capacity bottleneck
    issue. Therefore, distributed database is presented, which provides scalable service
    capacity and storage capacity by the way of sub database and sub table, and provides
    transparent data access and smooth capacity expansion and reduction by database
    agent. Similar to the characteristics of distributed database, blockchain is a
    decentralized distributed database, which collectively maintains a reliable database
    by decentralizing and trusting mechanisms. 1) Agriculture Blockchain Blockchain
    technology was proposed by scholars with the pseudonym of “Satoshi Nakamoto” in
    2008. It is a point-to-point distributed data-storage-architecture scheme, and
    it uses a variety of consensus mechanisms to achieve collaborative trust among
    multiple participants [88]. Furthermore, the application of cryptographic methods
    ensures the security of data transmission. At present, the intelligent operation
    of node data can be implemented by deploying smart contracts (a kind of script
    code) on distributed nodes [89]. Blockchain supplies a reliable technical guarantee
    for both the integrity and immutability of information, and it is widely used
    in product information traceability [90]. In agriculture, blockchain has the following
    functions: 1) establishing the backtracking mechanism of agricultural products.
    Reliable and safe information about agricultural products including their planting,
    processing, and selling are provided to improve information transparency. In addition,
    the distributed information storage method based on digital encryption and verification
    technology ensures the information security of agricultural products [91]; 2)
    establishing a new agricultural product trading market. The distributed storage
    technology of blockchain is used to digitize the upstream and downstream information
    of agricultural products. Moreover, the information is shared across the entire
    agricultural blockchain alliance [92]. Although blockchain can be used as an information
    security solution, it is essentially data storage and releases technology. Because
    blockchain technology is still in the exploration stage in agriculture, the security
    challenges of blockchain remain to be explored. F. Data Analysis Technology Data
    analysis is a process of detailed research and summary of data to extract useful
    information, which uses appropriate methods (e.g., statistical analysis method,
    machine learning method) to analyze the large amount of data. Artificial intelligence
    is an emerging technology which contributes to the accuracy of data analysis.
    In addition, edge computing technology greatly reduces the traffic amount and
    delay by deploying artificial intelligence algorithms on the device rather than
    cloud server. 1) Agricultural Artificial Intelligence With the development of
    IoT technology, the amount of agricultural data has increased dramatically. AI
    technology can provide an expert system to analyze agricultural big data, select
    valuable information, and increase agricultural productivity finally [93], [94].
    At present, there are many studies and applications in agriculture AI [95], [96].
    The main studies of agriculture AI include: Intelligent robots based on pre-set
    machine learning models and computer vision technology that complete basic agricultural
    tasks much more quickly than manpower and traditional robots, e.g., intelligent
    seeding robot and intelligent harvesting robots; Crop and soil monitoring, which
    have applied both computer vision technology and deep learning algorithms to analyze
    the crop growth data and soil health data; Predictive analysis, which forecasts
    the impact of weather changes on crop harvests by training machine learning model
    [97]. Based on the above studies, manual operations are being replaced by intelligent
    machines and decision-making systems, which contribute to the development of smart
    agriculture [10]. However, AI technology will result in huge losses (e.g., a wrong
    decision for the irrigation system and plant factory environment control) if it
    suffers from attacks. 2) Agricultural Edge Computing Cloud computing provides
    scalable, on-demand, and virtualized resources for users [98]. Therefore, cloud
    computing has been widely applied in planting, aquaculture, poultry and livestock
    breeding, plant factories, and related applications [54]. However, it is difficult
    to use the centralized data processing method of cloud computing to meet the growing
    amount of data, which stem from the explosive growth of agricultural data. Although
    cloud computing has the advantages of both strong computing power and fast processing
    speed, the demands of data analysis cannot be fully met by it due to its disadvantages
    (e.g., high cost, high delay, and low capacity of protecting the privacy of users).
    Thus, edge computing is applied in agriculture to solve these problems, as shown
    in Fig. 8. The “edge” refers to any network and computing resources between the
    data source (e.g., sensors) and the cloud data center [99]. For instance, the
    smartphone is the edge between the user and the cloud. By transmitting sensor
    data to edge devices for calculation, communication delay can be reduced effectively
    [100]. Therefore, edge computing is suitable for tasks with both low computational
    cost and high timeliness requirements [101]. In the area of SIL-IoT, if insect
    pest location data are transmitted to the cloud for decision-making and then returned
    to an actuator, the pest outbreak area may be transferred before the implementation
    of relevant measures. However, if the data are transmitted to the edge nodes and
    then returned to the actuator, the delay caused by the data transmission will
    be greatly reduced. Therefore, it is important to promote agricultural edge computing
    and find its potential security problems [102]. G. Data Analysis Application 1)
    Agricultural Unmanned Aerial Vehicle With the development of “3S” technology,
    UAVs have become widely used in agriculture, industry, and commerce. Furthermore,
    the UAVs'' characteristics of labor-saving and high efficiency are consistent
    with the development goal of smart agriculture. At present, the studies of agricultural
    UAVs mainly focus on plant protection operations, forestry monitoring, crop pollination,
    and herd positioning [103]. Due to the advantages of high operating efficiency,
    low pollution, and no poisoning risks for farmers in agricultural applications,
    the development of agricultural UAVs has been rapidly growing in some countries
    e.g., the U.S., Russia, South Korea, and especially Japan. With more than 2400
    registered agricultural UAVs and more than 14 000 operators, Japan has become
    the country that has the largest number of agricultural UAVs [104]. Compared with
    the above countries in the fields of UAVs, the development of Chinese UAVs has
    lagged, but the investment in agricultural UAVs has increased in recent years.
    Fig. 8. Comparison of edge computing and cloud computing. The advantages of edge
    computing are low cost and low delay, which benefit to high time efficiency tasks,
    e.g., SIL-IoT, agricultural uvas, driverless tractors. Show All There are various
    types of agricultural UAVs on the market, as shown in Fig. 9. For instance, UAVs
    can be divided into both hydraulic UAVs and electric UAVs according to the dynamic
    system. Furthermore, UAVs can be divided into fixed-wing UAVs, single-rotor UAVs,
    and multi-rotor UAVs according to the model structure. Currently, electric multi-rotor
    UAVs have a major market share due to their low cost, low failure rate, simple
    operation, and environmental protection. Besides, the plant protection UAV is
    one of the most common applications of agricultural UAVs, based on high operating
    efficiency, good spraying effect, low pollution level, and operation without limitations
    due to the crop height. The technology gaps in the production areas where plant
    protection cannot be carried out manually are addressed by agricultural UAVs [103].
    2) Driverless Tractor The traditional tractor is indispensable power machinery
    in field agriculture, as it provides traction for cultivating machines, traction
    seeders, a machine that spray insecticide, harvesters, etc. [105]. The driverless
    tractor is a combination of the traditional tractor and modern driverless technology.
    The advantages of driverless tractors include both optimal operation path planning
    by the map transmission system and dynamic obstacle avoidance by lidar, which
    contribute to improving the quality and efficiency of operations, and maximizing
    the utilization rates of land, seed and fertilizer [106], [107]. Currently, the
    applications of the global navigation satellite system (GNSS) and laser system
    in driverless tractors have been generalized in Europe, so as to avoid obstacles
    and operate in the appointed paths effectively [108]. In [109], further studies
    have been conducted in North America on the key components of automatic navigation,
    including navigation sensors, vehicle motion models, navigation plan devices,
    and steering controllers. Liu et al. [110] proposed an artificial vehicle powertrain
    system to build a general framework for data-driven intelligent control, which
    can be applied to the driverless tractor. Fig. 9. (a) Fixed-wing UAV, (b) Single-rotor
    hydraulic UAV, and (c) Multi-rotor electric uav. Currently, electric multi-rotor
    UAVs have a major market share due to their low cost, low failure rate, simple
    operation, and environmental protection. Show All Furthermore, China has begun
    to develop driverless tractors in recent years. For instance, the major research
    program “Cognitive Computing of Audio-visual Information” of the National Natural
    Science Fund of China (NSFC) was established in 2008, and it has provided finance
    and policy support for driverless driving. H. Summary In this section, we described
    7 key technologies and 11 key applications in smart agriculture based on IoT architecture
    (perception layer for data acquisition, transmission layer for data transmission,
    and application layer for data storage and data analysis). Some applications of
    agricultural IoT are introduced: IoT in field agriculture, IoT in aquaculture,
    IoT in poultry and livestock breeding, IoT in greenhouse, plant factory, photovoltaic
    agricultural IoT, and SIL-IoT, which have unique characteristics in specific agricultural
    scenarios and are confronted with various security threats (e.g., agricultural
    facility damage for IoT in field agriculture, failures in sensors for IoT in poultry
    and livestock breeding, control system intrusion for IoT in greenhouse and plant
    factory, malicious data attacks for photovoltaic agricultural IoT, and signal
    interference for SIL-IoT). In addition, sensors and actuators, and agriculture
    satellite remote sensing are introduced as data acquisition technologies, which
    contribute to the applications of data acquisition (agriculture crowd sensing,
    and plant phenotype information system). There are some security threats for data
    acquisition technologies and applications, e.g., facility damage and interception
    of node communication for sensors and actuators, unauthorized access for agriculture
    satellite remote sensing, privacy leaks for agriculture crowd sensing, and control
    system intrusion for plant phenotype information system. Agriculture blockchain
    is described as a distributed data storage technology to ensure data storage security,
    which is also confronted with security threats (e.g., access control failure,
    unsafe consensus agreement). Moreover, agriculture artificial intelligence and
    agriculture edge computing are introduced as data analysis technologies. They
    are confronted with various security threats e.g., malicious data attacks, unauthorized
    access, and control system intrusion. The above data analysis technologies are
    applied in agriculture UAV and driverless tractor for path planning, automatic
    operation, local information processing, etc.. There are some security threats
    for agriculture UAV and driverless tractor, e.g., false location information by
    malicious data attacks, facility damage by control system intrusion, data interception
    by interception of node communication. Therefore, effective security and privacy
    countermeasures play a vital role in ensuring security of smart agriculture. SECTION
    IV. Security and Privacy Countermeasures The summary of existing security and
    privacy countermeasures which are suitable for smart agriculture are presented
    in Table VII. The relationship between some key technologies and applications
    in smart agriculture and security and privacy countermeasures are shown in Fig.
    10. A. Authentication and Access Control To enhance the security and privacy of
    smart agriculture, user authentication systems should ensure the following security
    and performance requirements: resilience to various attacks, device anonymity,
    session key agreement, mutual authentication, and unlinkability. Lee et al. [111]
    proposed a three-factor anonymous user authentication scheme, which can be applied
    in a network model composed of three types of nodes, namely, a mobile node, a
    sensor node, and a gateway. Based on the bio-hash function, Lee et al.''s scheme
    can satisfy user anonymity, users untraceability, and resists stolen mobile device
    attacks. For achieving cross-domain permission delegation and access control,
    Gauhar et al. [112] proposed a decentralized blockchain-based framework, named
    xDBAuth, which the blockchain technology is used for providing transparent to
    all the users in the IoT network. The xDBAuth framework considers a network model
    composed of five main elements, including, smart contract, IoT devices, blockchain
    manager, overlay network, and underlay network. Based on the two algorithms, namely,
    cross-domain resource access algorithm and proof-of-authenticity/integrity algorithm,
    the xDBAuth framework can provide authentication/authorization, availability,
    integrity, and non-repudiation. In addition, Shin et al. [113] designed a privacy-preserving
    authentication scheme for wireless sensor networks in 5 G-integrated IoT, which
    the IoT architecture is based on a wireless sensor network, gateways, cloud computing,
    and with three types of layers, including, network layer, application layer, and
    support layer. The Shin et al.''s scheme uses elliptic curve cryptography to guarantees
    gateway anonymity, user anonymity with untraceability, and resistant to four types
    of attacks, including, offline password guessing attacks, mobile device loss attacks,
    stolen verifier attacks, and user impersonation attacks. B. Privacy-Preserving
    For achieving privacy-preserving, Wang et al. [114] proposed a privacy-preserving
    spectrum sharing framework for the IoT network, which can be applied for smart
    agriculture by considering at the same time the spatial spectrum reuse and truthfulness.
    Specifically, the proposed framework considers three units, including, a cryptographic
    authority, multiple bidders, and an auctioneer. Based on the Elgamal encryption
    scheme, the proposed framework can keep the bidders'' bids confidential and achieving
    user satisfaction ratio. Therefore, in order to enable offline/online computation
    and support IoT devices with various cryptographic settings, Wei et al. [115]
    designed privacy-preserving message authentication scheme, named SAMA, for IoT
    networks, which can be applied for smart agriculture. The SAMA scheme uses various
    systems such as RSA-type and ElGamal-type for preserving the location and identity
    privacy of a data source as well as message authenticity and integrity. Zhang
    et al. [116] proposed a privacy-preserving data aggregation scheme, named LVPDA,
    which can be applied for the edge-computing-enabled smart agriculture. During
    the data aggregation process, the LVPDA scheme combines an online/offline signature
    technique and Paillier homomorphic encryption method for privacy-preserving and
    integrity verification. Based on the q-strong Diffie-Hellman (q-SDH) assumptions,
    the LVPDA scheme is proven unforgeable under the chosen message attack. Fig. 10.
    Different security and privacy countermeasures for 7 key technologies and 11 key
    applications in smart agriculture. Show All Table VII Summary of security and
    privacy countermeasures for smart agriculture C. Blockchain-Based Solutions for
    Data Integrity The blockchain technology is used as a security solution to provide
    data integrity in smart agriculture. To provide automated data processing in fish
    farming, Hang et al. [118] designed a blockchain-based fish farm platform, which
    is based on smart contracts. The proposed platform uses four main components,
    including, end-user, blockchain network, fish farm, and data storage. Based on
    the blockchain network, the proposed platform can provide reliable and secure
    storage. Therefore, to provide traceability and trust in the agri-food supply
    chain, Shahid et al. [119] proposed a security solution deployed over the Ethereum
    blockchain network. The proposed solution considers an agri-food supply chain
    with a layered architecture and is categorized into three layers, including, data
    layer, blockchain layer, and storage layer. To achieve accountability and authenticity,
    the proposed solution uses an interplanetary file storage system that receives
    the data and returns a hash of these data to the blockchain network. D. Cryptography
    and Key Management The symmetric encryption/decryption along with the cryptographic
    hash function are used by Wazid et al. [125] for designing a secure user authenticated
    key management protocol, which can be applied in smart agriculture. The network
    model used by the proposed protocol is composed of three different nodes, including,
    the sensing nodes, the gateway node, and cluster head nodes. To verify the biometric
    authentication, the proposed protocol uses the fuzzy extractor technique. To ensure
    confidentiality with end-to-end security guarantees, Esposito et al. [123] proposed
    a clustered and distributed key management framework, which is based on the group-based
    keys. Specifically, the proposed framework uses a network model composed of group
    nodes with the cluster head and the border nodes. In addition, within the proposed
    protocol, the key to be shared, is divided into encoded parts, and only a part
    of the received parts is transmitted by the cluster head to its neighboring nodes.
    E. Physical Countermeasures Both cyber and physical attacks are in high demand
    in smart agriculture. Li et al. [121] proposed an auditing and analytics-based
    IoT monitoring mechanism. The proposed mechanism uses disaggregation-aggregation
    architecture using the evaluation of the power usage of the system''s sub-components.
    Therefore, the proposed mechanism adopts two deep learning models, including,
    the aggregation model and disaggregation model. Therefore, to provide a comprehensive
    view of the security status of smart homes in smart agriculture, Ali and Awad
    [124] proposed the operationally critical threat, asset, and vulnerability evaluation
    methodology, named OCTAVE, which focuses on information assets. The OCTAVE method
    is applied in the network model composed of three parts, including, IoT devices,
    a gateway, and a web server. In addition, the OCTAVE method uses four main phases
    to allow comprehensive risk assessment, including: 1) establish drivers phase,
    2) profile assets phase, 3) identify threats phase, and 4) risk mitigation phase.
    F. Intrusion Detection Systems Cyber-attacks for smart agriculture infrastructures
    are emerging as an increasingly important concern for both organizations and nations.
    To detect these cyber-attacks in smart agriculture, security researchers have
    proposed intrusion detection systems based on machine learning and data mining
    algorithms. Ferrag et al. [117] and Maglaras et al. [127] designed a hybrid intrusion
    detection system, named RDTIDS, for internet-of-things networks, which can be
    applied for smart agriculture. Specifically, the RDTIDS system uses decision tree
    and rules-based concepts to classify the network traffic as attack/benign. The
    experimental results on the BoT-IoT dataset and the CICIDS2017 dataset shows that
    the RDTIDS system achieves the highest accuracy with 96.995% and 96.665%, respectively.
    In addition, Anthi et al. [120] designed a three-layer intrusion detection system
    for detecting a series of cyber-attacks on IoT networks, which can be applied
    for smart agriculture. The proposed system uses a supervised approach to classifies
    attacks such as replay attack, reconnaissance attack, man-in-the-middle attack,
    spoofing attack, and denial of service attack. The experimental results on cyber
    attacks dataset show that the proposed system achieves an F-measure of: 1) 96.2%,
    2) 90.0%, and 3) 98.0%. Sforzin et al. [126] proposed an intrusion detection architecture
    for the IoT network, named RPiDS, which can be applied for smart agriculture.
    The RPiDS architecture uses a small, portable device, pre-packaged with an intrusion
    detection system for detecting an active attack and or suspicious network-related
    activity. The experimental results on Raspberry Pi equipped with Snort show that
    RPiDS architecture is adapted to conduct intrusion detection in an IoT framework.
    Ahmim et al. [122] designed an intrusion detection system that can be applied
    for smart agriculture. Specifically, the proposed system can be installed at the
    fog computing layer for detecting cyber-attack using the combination of the probability
    predictions of a tree of classifiers. The experimental results on KDD''99 and
    NSL©datasets show that the proposed system achieves the highest accuracy with
    96.27% and 89.75%, respectively. SECTION V. Security Challenges of Smart Agriculture
    Most of the existing security and privacy countermeasures are based on industrial
    scenarios or only based on simulation performance, without considering the actual
    application scenarios. Therefore, it is necessary to analyze security challenges
    based on smart agriculture, which contributes to applying the above security and
    privacy countermeasures to various smart agriculture scenarios. A. Security Challenges
    in Agricultural Production 1) Harsh Environment The modes of agricultural production
    mainly include large-scale field farming, small-scale greenhouse farming, aquaculture,
    and poultry and livestock breeding. However, the maintenance problems of sensors
    and farm implements by the above modes cannot be ignored. The primary maintenance
    problems include hardware protection for the facilities and the energy consumption
    design of the facilities. Due to the characteristics of sparse deployment and
    the absence of supervision in agricultural IoT facilities, sensor nodes may be
    stolen and used by malicious users, which would lead to serious security problems
    (e.g., data leakage and network paralysis). In addition, agricultural IoT facilities
    are required to have reliable long-distance signal transmissions, and they must
    reduce their energy consumption to ensure their long-term stable operation. Therefore,
    a balance between energy consumption and the reliability of the signal transmission
    is critical for agricultural IoT facilities. 2) Threats from Agricultural Equipment
    Except for the harsh environment, the security issues caused by the working characteristics
    of agricultural equipment cannot be ignored. For instance, SIL release high voltage
    (∼2150 V to ∼6000 V) pulse discharge while migratory insects with phototaxis feature
    contact with the metal mesh, which has a great impact on ZigBee [25]. In [25],
    [26], we did some experiments and the results indicate that the interference of
    high voltage discharge affects data transmission. In this paper, we did the following
    experiments under the same experimental devices [26] (parameter, evaluating indicator,
    purpose, and device are shown in Table VIII). The first experiment (only indicating
    that the interference affects sending node) has been done in [26] before, we did
    that again with three evaluating indicators and extended it to two additional
    experiments, which are used to verify whether the interference has an impact on
    receiving node and sensors. Observing the interference of high voltage pulse discharge
    for sending node under the distances of 10, 15, 20, and 25 cm. Table IX illustrates
    that the interference is stronger to ZigBee with the closer distance between SIL
    and sending node (there is a positive correlation between FET and interference
    intensity). It is mentioned in [26] that the interference (quantified by FET times)
    has an impact on the ZigBee-based device. However, the influences of the interference
    on data transmission and data acquisition are not mentioned. Therefore, we did
    the next two experiments. Observing the interference of high voltage pulse discharge
    for receiving node under the distances of 0, 5, and 10 cm. The results are depicted
    in Fig. 11, and communication duration is the time difference between node receiving
    data normally and not receiving data normally. It is observed from the results
    that the communication duration has a positive correlation with the distance between
    SIL and receiving node. Moreover, when the distance between SIL and receiving
    node is more than 10 cm, the interference is not obvious under the existing experimental
    equipment and conditions. The distance may increase with the increase of the interference
    intensity generated by the equipment. Observing the interference of high voltage
    pulse discharge for sensors under the distances of 0 and 5 cm. The sensors with
    ID 1 and 2 were used for the experiment (distances between them and SIL are 0
    and 5 cm), and the sensor with ID 3 was used as the control group (distance between
    it and SIL is 1m). As shown in Fig. 12, when we turn on the discharge module at
    15:34:30, the data acquisition is abnormal and the device reset after a few seconds.
    The proportion of abnormal data (the proportion of abnormal data to all data in
    a certain period) and the proportion of device reset are shown in Table X. When
    the distance is 0cm, sensors with ID 1 and 2 can hardly collect data normally.
    The interference is not obvious when the distance between SIL and sensors is more
    than 5cm. However, in the case of a harsh environment and aging equipment, the
    effective range and extent of injury of interference may be unpredictable. Fig.
    11. Interference on different distances between SIL and receiving node. Average
    communication duration values of 0 cm, 5 cm, and 10 cm are 45.6 s, 116.5 s, and
    765.9 s. Maximum values of 0 cm, 5 cm, and 10 cm are 151 s, 422 s, and 1970 s.
    Minimum values of 0 cm, 5 cm, and 10 cm are 4 s, 4 s, and 45 s. Show All Table
    VIII Interference experiments for different devices Fig. 12. Data acquisition
    under interference. For the first line, “2020-07-08-15-15:34:32” is time format,
    “02” is sensor ID in red dotted box, “26.6” is temperature (°C) in yellow dotted
    box, and “72” is relative humidity (%) in green dotted box. Besides, data in blue
    dotted box are normal data, data in violet dotted box are abnormal data, and data
    in grey dotted box are device reset information. Show All Table IX Interference
    on different distances between SIL and sending node Table X Interference on different
    distances between SIL and sensors The above experiments indicate that the interference
    of high voltage pulse discharge has an impact on data transmission and data acquisition.
    The interference is a kind of security threat and may mislead the execution of
    security strategy. For instance, if the receiving node cannot receive data normally
    due to interference, the security strategy may classify it as a DDoS attack. B.
    Security Challenges in Information Technology 1) Unauthorized Access Unauthorized
    access refers to unauthorized use of system resources and unauthorized access
    to a database, which results in serious network security challenges. To access
    data and control agricultural IoT facilities beyond the limit of users'' authority,
    hackers attack the access control mechanism of the system by forging a counterfeit
    identity [128]. The main reasons for unauthorized access are: Rapid change of
    accessing the particular user account from the unrecognized location; Accessing
    the user account with an unrecognized device; Sudden IP, server domain and gateway
    change [128]. Identity authentication, which identifies legal users by their passwords
    and biometrics, is applied to prevent unauthorized access [129]. Furthermore,
    access control strategies should be set up to manage user rights, and to ensure
    the security of various resources in the system. As shown in Fig. 13, hackers
    can illegally access edge nodes and cloud databases to obtain crop growth data
    and modify control system information, which would have an impact on crop growth
    and data quality. Fig. 13. When a variety of data is transmitted to the cloud
    or edge node, hackers access the database through unauthorized access. Show All
    2) Interception of Node Communication Wireless communication technology is widely
    applied in various agricultural IoT facilities. Unfortunately, the information
    transmitted by wireless communication is easily copied and stolen [130]. The information
    usually contains both environmental data collected by sensors and facility control
    signals in agricultural production. Data tampering and interception by hackers
    may have serious consequences [131]. To ensure the security of wireless communication,
    appropriate encryption strategies for wireless devices are required to encrypt
    data [132]. Simultaneously, various wireless sensors may not be able to support
    complex encryption algorithms for communication security. Therefore, a balance
    between the encryption strength and the facility capacity must be sought. As presented
    in Fig. 14, data collected by sensors can be sent to a gateway through the communication
    terminal. Hackers steal data by invading wireless communications, which results
    in serious consequences. Fig. 14. In the process of node communication, hackers
    intercept data by invading receiving nodes. Show All 3) Facility Damage Due to
    the complex conditions in an agricultural production environment, facilities that
    are deployed in an agricultural environment may send incorrect data, be damaged,
    or lose the capacity to collect data. Facility damage may result in data distorted
    and missing, which would affect the data analysis and the decision-making system
    [133]. Therefore, it is necessary to establish a facility detection mechanism.
    If the facility stops working or the data collected by the sensors deviate from
    the normal range, faults should be detected and related measures should be implemented
    promptly by the neighboring nodes or diagnosis nodes. Fig. 15 shows various faults
    that result from facility damage, which have negative impacts on the daily operation
    of agricultural UAVs. 4) Malicious Data Attacks AI technology can be applied with
    its ability to analyze massive data and sensory data is the main factor in any
    decision-making process [134]. In addition, a pre-trained model with optimal environmental
    parameter settings contributes to improving the yield and quality of agricultural
    products. However, by inserting malicious data into the database, the model training
    process is affected, which would cause a deviation in the model results. The primary
    solutions include the privacy protection of agricultural IoT facilities [135],
    and online and real-time monitoring system [136]. As presented in Fig. 16, due
    to malicious data attacks, the solar insecticidal lamps in an actual pest outbreak
    area are sleeping, which leads to crops damage. Simultaneously, we have a waste
    of energy caused by incorrect responses of the solar insecticidal lamps that are
    in the false pest outbreak area. Fig. 15. System fault, link fault, sensor fault,
    and other factors lead to uneven spraying of pesticides. Show All Fig. 16. Due
    to malicious data attacks, the solar insecticidal lamps in an actual pest outbreak
    area are sleeping, which leads to crops damage. Simultaneously, we have a waste
    of energy caused by incorrect responses of the solar insecticidal lamps that are
    in the false pest outbreak area. Show All 5) Control System Intrusion After the
    data collection and analysis, the control system sends commands to the machinery
    to complete the corresponding production operation. Therefore, the security of
    the control system plays a vital role in agricultural production. Control system
    intrusion may lead to no response from the production machinery [137], which would
    have a strong impact on agricultural production. Therefore, protecting the decision-making
    system from intrusion, and protecting the control signals from interference has
    a great impact on the performance of agricultural production. Fig. 17 illustrates
    a driverless tractor operating on the wrong route after a control system intrusion.
    C. Summary Due to the harsh environment and threats from agricultural equipment,
    the protection measures and anti-interference design of the agricultural equipment
    are very important. Furthermore, severe weather prediction and interference filtering
    at the software layer contribute to the security of agricultural production. However,
    ensuring the security of agricultural production is a very complex task, mainly
    because of changeable climatic conditions, large-scale and harsh environments,
    and various agricultural equipment with different standards. Fig. 17. A driverless
    tractor operating on the wrong route after a control system intrusion. Show All
    In addition, recent works related to information security are shown in Table XI.
    Key distribution and authentication mechanisms are a major research direction
    of unauthorized access, and among these works, machine learning algorithms have
    been used to improve the accuracy of the classifications [138]. Furthermore, hypothesis
    testing is a method that can estimate false alarm rate and false negative rate
    (i.e., 5% false rejection rate with four PCA dimensions [129]). Recent studies
    of the interception of node communication focus on the decode-and-forward protocol,
    and the affected layer is typically the cyber-physical layer. Intercept probability
    is mainly used to estimate the performance of model, increasing power-splitting
    factor signal power, and the number of relays may improve the security of wireless
    transmission [130], [132], [139]. In addition, Zou and Wang [131] demonstrated
    that sensor scheduling method contributes to against eavesdropping attack. The
    perception layer is the main affected layer in facility damage. Various methods
    are used to protect sensors and actuators, and the effective ones include node
    privacy and source encryption methods [140]. Malicious data attacks mainly happen
    in smart grids and position systems, and statistical methods and deep learning
    algorithms have primarily been applied to mitigate this problem [136]. In [141],
    an analytical method based on no previous knowledge of attack was adapted to multiple
    and simultaneous cyber-attacks. Alromih et al. [134] proposed a randomized watermarking
    filtering method to ensure data security in transmission layer and save as up
    to 85% more energy than Cui et al. [142]. In addition, an online robust PCA-based
    algorithm was proposed to reconstruct the original data when the corruption rate
    is no more than 20% [136]. Industrial control systems (ICS) are the major attack
    target of control system intrusions, which have strong impacts on these systems''
    transmission layer and application layer. Modbus/TCP oriented attack is a major
    type of control system intrusion. Ndona and Sadre [143] proposed a two-level intrusion
    detection system to efficient against Modbus/TCP oriented attacks with a small
    impact on communication latency. In [144], a new intrusion detection algorithm
    based on one-class SVM was presented with advantages of fast and strong generalization
    ability, less support vector, simple mode, and great practical value. Moreover,
    A stereo depth intrusion detection system with a low rate of false positive (not
    exceed 0.045%) was proposed [145]. With the development of smart agriculture,
    agricultural production will be the novel attack target, and above intrusion detection
    algorithms will contribute to the security of the agricultural control system.
    In summary, analyzing types of attacks for different smart agriculture researches
    and security strategies suitable for various agricultural scenarios is critical
    to ensuring the security of smart agriculture. SECTION VI. Future Trends and Security
    Issues The following issues may be the future research trends of smart agriculture,
    and they may result in novel security challenges. We briefly describe the concepts
    below. A. Fifth Generation Communication (5 G) 5 G is the next generation wireless
    communication technology with characteristics of high-frequency electromagnetic
    wave and low latency. Compared with the existing wireless communication technology,
    5 G provides faster data transmission speed and larger data throughput, which
    support the device communication, AI algorithm deployed in user end, distributed
    fault diagnosis method, and complex security strategy. However, 5 G is also vulnerable
    to security threats, e.g., interception of node communication. In addition, the
    security defined in the 3rd Generation Partnership Project (3GPP) focuses on resistance
    to network attacks, authenticity, integrity, and confidentiality. However, some
    emerging cryptographic techniques, e.g., public key infrastructure, anonymization,
    security mechanisms of IPsec, and differential privacy, etc., can be considered
    for achieving security and privacy requirements. To design efficient and secure
    privacy-preserving schemes using these techniques for 5 G-enabled smart agriculture
    networks, the following critical challenges need to be solved: How to protect
    the confidentiality of transmitted data between network entities? How to authenticate
    the source of the received data? How to protect the integrity of transmitted data
    between different network entities? How to detect and prevent attacks (e.g., falsification
    of multiple identities and replays data between network entities)? A possible
    research direction in this topic could be related to developing an efficient secure
    and privacy-preserving scheme for 5 G-enabled smart agriculture networks. For
    instance, the physical-layer threats in UAVs'' communication based on 5 G was
    discussed in [148]. Table XI Summary of recent works related to information security
    B. Fog Computing (FC) and Internet of Everything (IoE) FC is a computing paradigm
    that reduces communication delays by moving the cloud computing facilities and
    services to the access network. Since the FC is designed upon traditional networking
    components, it is highly vulnerable to security attacks (e.g., wiretapping, tampering,
    loss of information, and Trojan horses) [149]. IoT mainly focuses on machine-to-machine
    sensor-based smart facility communication, as well as IoE aims at providing services
    to people by IoT. Due to the resource-limited sensors and bandwidth-limited wireless
    communication, the Fog of Everything (FoE) was proposed in [150] to set up a complexity
    system. It will contribute to SIL-IoT and photovoltaic agricultural IoT which
    have multi-tasking requirements (i.e., operating, monitoring, and scheduling).
    In addition, data of farmers, consumers and sensors are fused by FoE, and part
    of processing modules of agricultural information, agricultural products trading
    and other data can be deployed in the local network layer, as shown in Fig. 18.
    With the application of new generation of communication technology, e.g., 5 G,
    FoE can meet more intelligent agricultural production demands, and improve the
    security of existing smart agriculture applications. Simultaneously, in the process
    of data fusion, transmission, storage and analysis, new security issues will inevitably
    arise due to the application of novel computing paradigm and information carrier,
    especially cyber security at the edge. Fig. 18. The novel mode of agricultural
    production by FoE architecture. Show All C. Renewable Energy Management System
    (Renewable EMS) With the aggravation of the global energy crisis, considerable
    attention has been paid to the study of integrating and using high penetration
    of renewable energy in past decades [151]. Renewable energy has been widely applied
    in various domains, and agriculture is one of the most potential application scenarios.
    Energy management plays a vital role in smart multi-microgrids for agriculture
    (e.g., energy management of photovoltaic agricultural IoT), and it can ensure
    the energy supply of sensors deployed outdoors with the combination of wireless
    charging technology. At present, the security scheme of renewable EMS usually
    includes fault self-diagnosis of hardware and software, identity authentication,
    data encryption, intrusion detection, and data backup, as shown in Fig. 19. Because
    agricultural facilities are mainly deployed in outdoor environment, fault self-diagnosis
    of hardware and software is very important to ensure the security scheme. In addition,
    blockchain technology may contribute to the security of renewable energy management
    system. Fig. 19. The security scheme of renewable EMS, including 1) Fault self-diagnosis
    of hardware and software in agricultural facilities and renewable energy equipment,
    2) Identity authentication and data encryption in data transmission layer, 3)
    Intrusion detection and data backup in background management. Show All D. Software
    Defined Network (SDN) Software defined network is characterized as a centrally-control
    network. With user-defined virtualization and programming, the relaying and controlling
    are performed separately, which can provide flexibility and reliability to the
    network management [152]. In recent years, SDN has been a hot subject, especially
    multi-domain SDN that controls large-scale networks, i.e., precision agriculture
    [153]. Moreover, It can effectively simplify the network, and manage heterogeneous
    network equipment. The SDN controller can monitor the security situation of whole
    network in real-time. However, centralizing the network control plane and enabling
    network programmability are the emphases of hacking, and may lead to new security
    challenges, controllers'' safety from applications, controller''s scalability
    and availability, resilience and placement, etc. [154]. For instance, a plant
    phenotype information system integrates multiple data sources, and SDN architecture
    can improve its performance and security, but new security threats are an urgent
    problem. As shown in Fig. 20, if hackers attack the SDN controller, it will transmit
    wrong control instructions, which results in abnormal data flow and affects the
    trust between the SDN controller and the plant phenotype information system applications.
    Fig. 20. A plant phenotype information system based on SDN architecture (including
    multiple data sources, control pane, data pane, and application layer) and security
    issues (trust between applications and controller, wrong control instructions,
    and abnormal data flow) result from hacker attacks. Show All E. Virtual Reality
    (VR) and Augmented Reality (AR) VR is a simulated experience that can be similar
    to or completely different from the real world. AR is the technology of superimposing
    virtual objects upon the real world [155]. Although VR has been widely applied
    as an educational method in industry, there are a few researches about VR in agriculture
    domain. For instance, Kim et al. developed an educational simulator by VR technology
    for a better farmer education compared with two-dimensional screens [156]. Besides,
    a VR simulator that contributes to technical training of maintenance of agricultural
    machinery was developed [157]. Huuskonen et al. designed a wearable AR equipment
    to aid and guide the farmer to collect soil samples [158]. Both VR and AR technologies
    contribute to the automation and intelligence of agriculture. For instance, farmers
    can remotely and precisely control agricultural robots through VR and AR equipment
    in the control center. In addition, farmers can study the fault diagnosis and
    security countermeasures by VR educational simulator, which contribute to the
    improvement of security-conscious and prevention skills of farmers. However, both
    VR and AR technologies are vulnerable to various types of attacks, which have
    an impact on reliability of systems as they are designed to replace our perception
    of the physical world (e.g., tracking attacks) [159]. F. Cyber Security Datasets
    for Smart Agriculture When proposing intrusion detection systems, it is struggling
    to find comprehensive and valid cyber security datasets to test and evaluate the
    performance of cyber security intrusion detection. The study in [160] reviewed
    the most cyber security datasets used in deep learning approaches for cyber security
    intrusion detection such as NSL-KDD dataset, KDD Cup 1999 dataset, and UNSW-NB15
    dataset. These datasets are not simulated for smart agriculture environments.
    Therefore, the development of a new dataset to build a network intrusion detector
    under a smart agriculture environment is one of the significant research challenges.
    In addition, we believe that a comparative study of machine learning approaches
    for cyber security intrusion detection is needed for smart agriculture environments.
    G. Summary The integration of the above issues and agriculture provides the opportunity
    to promote intelligent and automatic agriculture. In addition, faster data transmission
    speed (5 G), lower communication cost and latency (FC), lower energy consumption
    (renewable energy management system), separate relaying and controlling (SDN),
    simulation environment (VR and AR), and datasets for evaluating model (Cyber security
    datasets for smart agriculture) contribute to the development of smart agriculture,
    as shown in Fig. 21. However, the above issues are confronted with more severe
    security challenges because security threats of them have not been fully explored.
    When the above issues are widely used in smart agriculture, there will be a quantity
    of security problems. And these problems may lead to serious consequences, e.g.,
    tracking attacks to VR equipment will result in improper positioning and harm
    to users. Therefore, secure and privacy-preserving schemes play a vital role in
    reliability of smart agriculture. Researches on the existing security and privacy
    countermeasures in the above issues can prevent security threats of them in smart
    agriculture. For instance, the authentication and access control and privacy-preserving
    scheme for 5 G-enabled smart agriculture networks is required with the rapid development
    of smart agriculture. To ensure the security of 5 G in agriculture, the researches
    on existing security and privacy countermeasures, and specific strategies will
    become hot issues in this field and promote the development of smart agriculture.
    From the above sections, it is suggested that: Expanding and improving the existing
    security and privacy countermeasures in smart agriculture (most of them are in
    the theoretical stage, and few actual cases). Analyzing the characteristics and
    challenges of security issues in smart agriculture scenarios, and applying the
    existing security and privacy countermeasures mainly for industrial scenarios
    to smart agriculture scenarios (industrial scenarios are widely used, but the
    characteristics of agricultural production are not taken into consideration).
    Following the development of novel technologies, applying them to smart agriculture
    scenarios, and highlighting the new security issues brought by them simultaneously.
    SECTION VII. Conclusion With rapidly advancing modern technology, smart agriculture,
    which is a combination of agriculture and information technology, is becoming
    a trend of agricultural development. However, information technology also entails
    various security challenges. This paper surveys the state-of-the-art works related
    to smart agriculture and discusses the security challenges of smart agriculture.
    We introduce three smart agriculture development modes (precision agriculture,
    facility agriculture, and order agriculture), and investigate 7 key technologies
    and 11 key applications of smart agriculture. It is followed by a summary of security
    and privacy countermeasures for smart agriculture. Authentication and access control,
    privacy-preserving, blockchain-based solutions for data integrity, cryptography
    and key management, physical countermeasures, and intrusion detection systems
    are introduced and discussed in detail. Then, we discuss the security challenges
    in agricultural production and information technology. In addition, we did some
    experiments based on SIL-IoT, and the results indicate that the interference of
    high voltage pulse discharge has an impact on data transmission and data acquisition.
    Moreover, we present six issues which may be the future research trends of smart
    agriculture and introduce the novel security challenges. Fig. 21. Future research
    trends, security challenges, and lessons learned about smart agriculture. Show
    All Authors Figures References Citations Keywords Metrics More Like This Security
    Challenges and Solutions for Internet of Things based Smart Agriculture: A Review
    2022 4th International Conference on Smart Sensors and Application (ICSSA) Published:
    2022 A Survey on Internet of Things: Architecture, Enabling Technologies, Security
    and Privacy, and Applications IEEE Internet of Things Journal Published: 2017
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: Yang; Shu; Chen; Wu; Huang; Ferrag; Nurellari (2021)
  journal: IEEE/CAA journal of automatica sinica
  key_findings: '1. Fog computing provides scalability and reliability by distributing
    processing and storage across a network.

    2. 5G communication enables high-speed data transmission between devices and the
    cloud.

    3. IoT-enabled smart agriculture applications face security threats that can jeopardize
    their reliability.'
  limitations: Data quality, scalability, reliability, and security are the major
    limitations of fog computing and 5G communication for smart agriculture. While
    5G technology promises fast data transmission, it can only be applied to a limited
    range of devices. Similarly, fog computing is not always feasible for applications
    that require real-time data processing or that have strict latency requirements.
  main_objective: To explore how automated systems for real-time irrigation management
    can contribute to the efficient use of water resources and enhance agricultural
    productivity
  pdf_link: null
  publication_year: 2021
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Internet of Things (IoT), machine learning, 5G communication,
    fog computing
  title: 'A Survey on Smart Agriculture: Development Modes, Technologies, and Security
    and Privacy Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
