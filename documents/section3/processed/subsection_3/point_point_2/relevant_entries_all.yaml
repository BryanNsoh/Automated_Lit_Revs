- DOI: https://doi.org/10.3390/info10110348
  analysis: '>'
  apa_citation: 'Triantafyllou, A., Sarigiannidis, P., & Bibi, S. (2019). Precision
    Agriculture: A Remote Sensing Monitoring System Architecture. Information, 10(11),
    348.'
  authors:
  - Anna Triantafyllou
  - Panagiotis Sarigiannidis
  - Stamatia Bibi
  citation_count: 64
  explanation: '**Key Points of the Paper as They Relate to the Outline Point:**


    This paper proposes a comprehensive reference architecture model for real-time,
    end-to-end automated irrigation management systems that can contribute to addressing
    the global food challenge. The model focuses on optimizing water resources and
    enhancing agricultural productivity through the efficient use of IoT and machine
    learning technologies.


    **How the Paper Contributes to Addressing the Outline Point:**


    The paper aligns with the outline point ''Explore the use of advanced sensing
    technologies, such as hyperspectral imaging and thermal sensing, for non-invasive
    plant stress detection.'' by discussing the importance of advanced sensing technologies,
    such as hyperspectral and thermal imaging, in the sensor layer of the proposed
    architecture.


    The paper highlights that these sensing technologies can provide non-invasive
    plant stress detection, which is crucial for early and accurate detection of plant
    health issues. This information can then be used by the system to adjust irrigation
    and other management practices in real-time, helping to optimize crop yields and
    reduce water usage.'
  extract_1: The Sensor Layer is in charge of acquiring the data of the different
    climatic and soil variables involved in the growth and production of the crops.
    Data can be acquired either by ground sensors, located above or inside the soil,
    or by UAV sensors involving embedded cameras, location and other sensors.
  extract_2: "•\tOptical Sensors/UAV Sensors: Optical sensors are usually embedded\
    \ in UAVs and use light reflection information to measure the varying properties\
    \ of soil and vegetation. In that case, the sensors acquire image data, which\
    \ are further analyzed with photogrammetry techniques."
  full_citation: '>'
  full_text: ">\n  \ninformation\nArticle\nPrecision Agriculture: A Remote Sensing\
    \ Monitoring\nSystem Architecture †\nAnna Triantafyllou *\n, Panagiotis Sarigiannidis\
    \ *\nand Stamatia Bibi *\nDepartment of Electrical and Computer Engineering, University\
    \ of Western Macedonia, Kozani 50100, Greece\n* Correspondence: atriantafyllou@uowm.gr\
    \ (A.T.); psarigiannidis@uowm.gr (P.S.); sbibi@uowm.gr (S.B.)\n† This paper is\
    \ an extended version of our paper published in International Workshop on IoT\
    \ Applications and\nIndustry 4.0 (IoT4 2019), co-located with IEEE DCOSS 2019,\
    \ Santorini Island, Greece.\nReceived: 29 September 2019; Accepted: 3 November\
    \ 2019; Published: 9 November 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\
    \x02\x03\x04\x05\x06\a\nAbstract: Smart Farming is a development that emphasizes\
    \ on the use of modern technologies in the\ncyber-physical ﬁeld management cycle.\
    \ Technologies such as the Internet of Things (IoT) and Cloud\nComputing have\
    \ accelerated the digital transformation of the conventional agricultural practices\n\
    promising increased production rate and product quality. The adoption of smart\
    \ farming though is\nhampered because of the lack of models providing guidance\
    \ to practitioners regarding the necessary\ncomponents that constitute IoT-based\
    \ monitoring systems. To guide the process of designing\nand implementing Smart\
    \ farming monitoring systems, in this paper we propose a generic reference\narchitecture\
    \ model, taking also into consideration a very important non-functional requirement,\n\
    the energy consumption restriction. Moreover, we present and discuss the technologies\
    \ that incorporate\nthe seven layers of the architecture model that are the Sensor\
    \ Layer, the Link Layer, the Encapsulation\nLayer, the Middleware Layer, the Conﬁguration\
    \ Layer, the Management Layer and the Application\nLayer. Furthermore, the proposed\
    \ Reference Architecture model is exempliﬁed in a real-world\napplication for\
    \ surveying Saffron agriculture in Kozani, Greece.\nKeywords: Wireless Sensor\
    \ Networks; Internet of Things; precision agriculture; smart farming;\ncommunication\
    \ technologies; Cloud Computing\n1. Introduction\nPresently, the digital transformation\
    \ of the agricultural sector is considered a priority to face the\nnumerous challenges\
    \ presented in the ﬁelds. Environmental monitoring and remote controlling in\n\
    agriculture is rapidly growing towards developing more productive and competitive\
    \ agricultural\nsystems and tools. Precision Agriculture and Smart Farming can\
    \ lead to this direction. These two terms\nrefer to the integration of advanced\
    \ technologies into existing agricultural practices to achieve ﬁne-grid\ncrops\
    \ management. Smart farming systems can provide to farmers meaningful environmental\
    \ data\nfrom the cultivation ﬁelds aiming to boost competitiveness and proﬁt.\
    \ Almost every aspect of the\nagricultural ﬁeld can beneﬁt from these kinds of\
    \ technological advances ranging from planting and\nirrigation processes to plant\
    \ protection and harvesting methods.\nThe future of precision agriculture lies\
    \ upon modern technological advancements and remote\nsensing techniques using\
    \ Unmanned Aerial Vehicles (UAV) and different kind of smart sensors. Sensors\n\
    are measuring devices that convert an external stimulus or else input signal,\
    \ into an appropriately\nmeasurable output signal. Sensor devices can transform\
    \ a macroscopic size (light, power, pressure,\netc.) to an electrically measurable\
    \ size. Once the electrical signal is processed, it is converted into a\nstandardized\
    \ signal with certain characteristics. The sensor’s properties can be altered\
    \ in a measurable\nmanner, either directly or indirectly by the exposure to a\
    \ particular analyzer or change in environmental\nconditions. UAVs are ﬂying vehicles\
    \ that do not have a pilot on their spindle. Instead they ﬂy either\nInformation\
    \ 2019, 10, 348; doi:10.3390/info10110348\nwww.mdpi.com/journal/information\n\
    Information 2019, 10, 348\n2 of 25\nautonomously or by means of remote control.\
    \ Unmanned aircraft used for remote monitoring are part\nof Unmanned Aerial Systems\
    \ (UASs). UASs involve all necessary devices and procedures for UAV\noperation,\
    \ while managing data collection. UAVs enable Earth Observation (EO) towards improving\n\
    accuracy, executing more frequent and better monitoring of the ﬁelds and cover\
    \ large (not easily\naccessible) areas. Sensors and UAVs are a part of the Internet\
    \ of Things (IoT) paradigm. The IoT is a\nmodern communication network involving\
    \ the employment of a vast number of distributed smart\ndevices around a uniﬁed\
    \ wide area network. Its basic characteristic stands upon the ability to recognize\n\
    and notify users instantly about real-time events by the use of smart objects.\
    \ Smart objects-devices\nhave basic computational skills, constrained resources\
    \ and unique identiﬁers for communication.\nThe adoption of smart farming though\
    \ is hampered because of the lack of models providing\nguidance to practitioners\
    \ regarding the necessary components that constitute IoT-based monitoring\nsystems.\
    \ The typically dense and heterogeneous nature of IoT deployments poses immense\
    \ challenges\non interoperability among the desired components. However, an efﬁciently\
    \ designed architecture based\non modern enhanced IoT technologies can pave the\
    \ way into easily adopting and deploying smart\nsystems into our everyday life\
    \ activities. The latest years a signiﬁcant number of efforts were presented\n\
    regarding the most suitable network structure and technologies for smart farming\
    \ applications [1–9].\nHowever, the architectural models presented in [1,7–9]\
    \ were based only on static sensor nodes, ignoring\nthe advantage of UAVs in monitoring\
    \ and failing to provide efﬁcient mapping of the ﬁeld to the\nfarmer. Furthermore,\
    \ no prediction mechanisms were employed in [2] towards improving production.\n\
    Moreover, limited contribution was provided in [3–5] regarding energy saving and\
    \ link layer IoT\ntechnologies in farm management information systems, while the\
    \ data-driven agricultural model\nproposed in [6] did not discuss data security\
    \ issues. In contrast to previous studies, the contribution\nof this paper lies\
    \ upon the presentation of a detailed architectural model for an advanced smart\n\
    farming monitoring system by using UAVs and taking into consideration energy-saving\
    \ and security\nrequirements. This architectural model engages novel IoT technologies\
    \ [10] and Wireless Sensor\nNetworks (WSNs) capabilities to provide a sufﬁcient\
    \ view of precision agriculture. Furthermore,\nthe proposed architecture enables\
    \ a combination of modern remote sensing techniques such as UAV\ntracking, Global\
    \ Positioning System (GPS) for location detection, Geographic Information Systems\n\
    (GIS), real-time monitoring with different types of sensors and intelligent input\
    \ control systems. These\ntechnologies have already been tested in various agricultural\
    \ ﬁelds in different countries for the\ncultivation of rice, wheat, tomatoes,\
    \ vegetables, potatoes, ornamental ﬂowers, chilly, cacao, pepper,\ncorn, olives,\
    \ apples, lemons, grape and others. By incorporating new technologies into agricultural\n\
    production and by using modern EO techniques growers will be able to manage their\
    \ crops at a\ndifferent and more advanced kind of level in detail that was not\
    \ possible a few years ago. This\npaper is an extension of our work in [11]. Towards\
    \ enhancing contribution a use case study is also\npresented regarding an ongoing\
    \ research project known as Drone Innovation in saffron Agriculture\nSurveillance(DIAS).\
    \ The DIAS architectural model is based on the proposed paradigm.\nThis paper\
    \ is organized as follows. Section 2 presents an overview of the proposed smart\
    \ farming\nmonitoring system architecture. In Section 3, the sensor layer is introduced,\
    \ followed by the network\nlayer and its suitable protocols and technologies regarding\
    \ communication, routing, encapsulation\ntechniques and interoperability mechanisms\
    \ in Section 4. Section 5 is focused on the management\nlayer and the provided\
    \ services of the proposed monitoring system, while Section 6 focuses on IoT\n\
    agricultural applications. Section 7 deals with energy-saving technologies and\
    \ security mechanisms\nthat can be implemented in cooperation with networking\
    \ technologies of the system. The use case\nstudy of the DIAS architecture is\
    \ presented in Section 8. Existing challenges are mentioned and\ndiscussed in\
    \ Section 9. Finally, Section 10 concludes this study.\n2. The Architecture of\
    \ a Smart Farming Monitoring System\nA precision agriculture monitoring system\
    \ consists mainly of the sensing agricultural parameters,\nthe identiﬁcation of\
    \ sensing location and data gathering, the routing of data from crop ﬁeld to\n\
    Information 2019, 10, 348\n3 of 25\ncontrol station for decision making, the actuation\
    \ and control decision based on sensed data and the\nvisualization of results\
    \ to the grower through an application. The architectural design of our model\n\
    follows the ISO/IEC 7498-1 standard or else known as the OSI Model [12], proposing\
    \ a communication\nsystem into seven abstraction layers. However, due the employment\
    \ of IoT technologies and artiﬁcial\nintelligence capabilities the basic agricultural\
    \ layers are deﬁned as presented in Figure 1:\nFigure 1. Remote Sensing System\
    \ Architecture.\n•\nThe Sensor Layer, referring to the Physical Layer of the OSI\
    \ Model, includes all kinds of\ncrops sensors and smart objects for data collection\
    \ and monitoring. Sensors can be placed\nunder ground(in the soil), on the crops\
    \ or on UAVs [6]. Underground sensors are especially\nmanufactured to be water\
    \ resistant and usually refer to measurements of moisture, pH and soil\nchemical\
    \ properties such as sulfur. UAV sensors measure environmental parameters such\
    \ as\nhumidity, temperature, wind speed, luminosity or solar radiation. However,\
    \ the most popular\nkind of sensors to be placed on UAVs are thermal cameras.\
    \ Thermal drones which use vision\nInformation 2019, 10, 348\n4 of 25\nimaging\
    \ cameras have so many positive uses by detecting heat coming from almost all\
    \ objects\nand materials turning them into images and video.\n•\nThe Link Layer,\
    \ referring to the Data Link Layer of the OSI Model, constitutes of all available\n\
    networking and routing technologies between sensors for information exchange.\
    \ To deploy\nefﬁcient crop and ﬁeld management the IoT platform uses Wireless\
    \ Sensor Networks (WSNs).\nThe use of WSN in smart farming systems provides immediate\
    \ monitoring and optimization of\ncrop quality, while offering a potential for\
    \ large area surveillance with high sampling densities.\nThe constant monitoring\
    \ of a great number of environmental parameters by distributed sensor\nnodes along\
    \ the ﬁeld help the grower supervise and maintain optimal conditions to achieve\n\
    maximum productivity with remarkable energy savings.\n•\nThe Encapsulation Layer,\
    \ referring to the Network Layer of the OSI Model, focuses on the\nestablishment\
    \ of smart sensor connection to the IPv6-based internet. This layer consists of\n\
    IoT networking encapsulation techniques and routing protocols to transform the\
    \ regular WSN\nnetwork trafﬁc into smart information. In other words, the technologies\
    \ of this layer enable the\ncultivated ﬁeld sensory data to be encapsulated in\
    \ IPv6 routing packets and be forwarded to the\naccording network server.\n•\n\
    The Middleware Layer, referring to the Transport Layer of the OSI Model, uses\
    \ different application\nlevel transport protocols in order to forward the data\
    \ generated from IoT sensor devices based on\ndifferent paradigms. It also provides\
    \ interfaces that enable device communication for management\nor actuation purposes.\
    \ This layer facilitates the desired interoperability due to the existence of\n\
    diverse standards, which are endorsed by different entities.\n•\nThe Conﬁguration\
    \ Layer, referring to the Session and Presentation Layers of the OSI Model,\n\
    is situated between the Middleware Layer and the Management Layer. This layer\
    \ is responsible\nfor gathering the raw data coming from the devices or other\
    \ external services, curate, harmonize\nand possibly aggregate them, so that they\
    \ can be published as context information, or supplied\nto upstream data processing\
    \ algorithms or analytics. In addition, this layer is also capable of\nsending\
    \ actuation commands to the Middleware Layer. Finally, the Conﬁguration Layer\
    \ may\nalso be capable of gathering data from other data sources, such as agricultural\
    \ machinery or\npublic geo-services.\n•\nThe Management Layer involves the processing\
    \ and analysis of the collected data. In this layer\nthe most efﬁcient data management\
    \ and data mining techniques are adopted to obtain accurate\npredictions and support\
    \ regarding ﬁeld operations such as optimized pesticide application,\ndisease\
    \ detection, efﬁcient irrigation management. Data processing is supported by Decision\n\
    Support Systems (DSS) that take care of the overall management of available collected\
    \ information\nfrom the ﬁelds towards increasing productivity, optimizing crop\
    \ yield, maintaining quality\nand saving resources.\nIt is well known that farmers\
    \ suffer great economic losses due to\nincorrect weather forecasting or incorrect\
    \ irrigation methods. Data analysis is the most important\ncomponent of IoT agricultural\
    \ systems resulting in efﬁcient pesticide use and protection against\ndiseases.\
    \ This layer can be considered to be an additional layer regarding the OSI Model\
    \ enabling\nartiﬁcial intelligence advancements to the overall system.\n•\nThe\
    \ Application Layer, referring to the Application Layer of the OSI Model, includes\
    \ all\nsuitable application module interfaces for implementing fertilizer and\
    \ irrigation control, disease\nand animal detection, alerts regarding the cultivation\
    \ process and visualization of statistical\ndata. This layer enables the farmer\
    \ to monitor and manage his ﬁelds in a user-friendly way.\nData visualization\
    \ techniques such as graphs, heatmaps, orthomosaics, and three-dimensional\nmodels\
    \ are employed, among others, to allow easy and intuitive representation of the\
    \ knowledge\nacquired from the ﬁeld monitoring. The farmer can inspect the results\
    \ produced by the services\nof the system and take action accordingly.\nInformation\
    \ 2019, 10, 348\n5 of 25\nEnergy-saving mechanisms and data privacy and security\
    \ techniques are also considered to be\nvery important in the context of Smart\
    \ farming and should be applied vertically in all the layers of\nthe architecture.\
    \ To support the efﬁciency and effectiveness of a smart farming monitoring system\n\
    energy consumption should be kept under control. Due to the limited battery life\
    \ and constrained\nresources of sensor nodes, energy-saving techniques must be\
    \ applied across the sensor and network\nlayer accordingly. Energy-saving techniques\
    \ deal with the active and inactive operational time\nin each sensor node, the\
    \ scheduling of information transmission and the routing process of data\npackets.\
    \ Moreover, security mechanisms are vital for maintaining the privacy of the collected\
    \ data and\nsafeguarding farmers’ personal information exchange.\n3. The Sensor\
    \ Layer\nThe Sensor Layer is in charge of acquiring the data of the different\
    \ climatic and soil variables\ninvolved in the growth and production of the crops.\
    \ Data can be acquired either by ground sensors,\nlocated above or inside the\
    \ soil, or by UAV sensors involving embedded cameras, location and other\nsensors.\
    \ The Sensor Layer constitutes the cradle of modern EO approaches towards optimizing\n\
    decision support in remote sensing monitoring systems. EO monitoring of cultivation\
    \ areas is\nhighly enhanced using autonomous UAVs. Popular EO techniques include\
    \ satellite and radar-based\ntechnologies [13] towards estimating basic biophysical\
    \ parameters in the ﬁelds, such as Leaf Area\nIndex (LAI), crop height and water\
    \ requirements [14,15]. According to [16] radar-based technologies\nare used to\
    \ enable the estimation of soil moisture spatial variability and can efﬁciently\
    \ estimate LAI.\nHowever, EO can achieve sturdy higher spatial resolutions only\
    \ with calibration against accurate\nground truth instruments that measure at\
    \ within ﬁeld scale resolutions. UAVs deploy EO via using\nphotogrammetry techniques\
    \ enabling the generation of three-dimensional digital surface models of the\n\
    ﬁelds. In particular, autonomous, manual or GPS-based image acquisition, ortho-image\
    \ generation and\nimage triangulation and geo-referencing based on navigation\
    \ sensors are employed. More information\nregarding these methods is provided\
    \ in Sections 5 and 8.2. In the Sensor Layer each sensor sends the\nacquired data\
    \ in the cloud through a WSN. The WSN is made up of sensor nodes that operate\
    \ under a\nmesh or point-to-point topology, a coordinator node and a gateway.\
    \ Each node in such a network is\nconnected to one or more sensors [17]. In precision\
    \ agriculture the most important types of sensors for\nmeasuring the different\
    \ types of corps attributes are:\n•\nOptical Sensors/UAV Sensors: Optical sensors\
    \ are usually embedded in UAVs and use light\nreﬂection information to measure\
    \ the varying properties of soil and vegetation. In that case,\nthe sensors acquire\
    \ image data, which are further analyzed with photogrammetry techniques.\nObject\
    \ detectors and pattern recognition form the basic building block for extracting\
    \ information\nfrom the images. Such information may involve the vegetation and\
    \ soil color, the moisture\ncontent and temperature of soil and vegetation, the\
    \ position, height, size and shape of vegetation\nalong with the level of chlorophyll.\
    \ In this category we ﬁnd visible light sensors, multispectral\nsensors, hyperspectral\
    \ sensors and thermal sensors.\n•\nElectrochemical Sensors/Ground Sensors: These\
    \ types of sensors acquire data regarding the\nnutrient contents of soil and its\
    \ associated pH. Electrodes in these sensors work by detecting\nspeciﬁc ions in\
    \ the soil. Different families of electrochemical sensors can be recognized depending\n\
    on the electrical magnitude used for transduction of the recognition event: potentiometric,\
    \ which\nindicates change of membrane potential; conductometric, which indicates\
    \ change of conductance;\nimpedimetric, which indicates change of impedance; and\
    \ voltammetric or amperometric, which\nindicates change of current for an electrochemical\
    \ reaction with the applied voltage in the ﬁrst\ncase, or with time at a ﬁxed\
    \ applied potential in the latter.\n•\nLocation Sensors/UAV Sensors: Location\
    \ sensors are usually embedded in UAVs and provide\nspatial information regarding\
    \ the positioning of an element. These types of sensors use signals\nfrom GPS\
    \ satellites to determine latitude, longitude, and altitude to within feet. Three\
    \ satellites\nminimum are required to triangulate a position. Precise positioning\
    \ is the cornerstone of precision\nInformation 2019, 10, 348\n6 of 25\nagriculture.\
    \ GPS integrated circuits such as the NJR NJG1157PCD-TE1 are a good example of\n\
    location sensors.\n•\nWeather Stations/Ground Sensors: Weather stations are free-standing\
    \ units situated at different\nlocations throughout the cultivating ﬁelds. These\
    \ stations measure various data for precision\nagriculture such as airﬂow, seasonal\
    \ rainfall, speed of wind, humidity level, direction of wind,\natmospheric pressure\
    \ and solar radiation, etc. Weather stations are an important component\nof EO\
    \ technologies since they can provide daily agro-meteorological information regarding\
    \ the\ncultivating ﬁelds.\nSummarizing the above, Table 1 presents the most frequently\
    \ acquired data by sensors in the\nagricultural domain. A sensor node consists\
    \ of a radio transceiver with an internal antenna or a\nconnection to an external\
    \ antenna, a micro-controller, an electronic circuit for interfacing with the\n\
    sensors and an energy source, usually a battery or a built-in energy harvested\
    \ form. There are numerous\ncommercial models of micro-controllers to be used\
    \ in precision agriculture applications. The most\npopular ones are the Arduino,\
    \ the Raspberry Pi, the Atmega328 and the LPC2148 boards. Accordingly,\ncommonly\
    \ used wireless communication modules used are the XBee module, the WSN802G module\n\
    and the NRF24L01 module. A sensor node can vary in size and cost, depending on\
    \ the complexity\nof its capabilities. Size and cost constraints result in corresponding\
    \ limitations on resources such as\nenergy, memory, computing speed, and bandwidth\
    \ of communications. The types of sensors that are\nmostly used in Smart farming\
    \ monitoring systems are summarized in Table 2.\nTable 1. Precision agriculture\
    \ sensor data types.\nData Type\nSensor Type\nSoil moisture and temperature\n\
    Ground sensors\nSoil color\nUAV sensors\nEnvironmental humidity and temperature\n\
    Ground sensors or UAV sensors\nLeaf-wetness\nGround sensors or UAV sensors\nElectric\
    \ conductivity\nElectrochemical sensors\nWind speed and direction\nWeather stations\n\
    Barometric pressure\nWeather stations\nCarbon dioxide\nElectrochemical sensors\n\
    Ph value\nElectrochemical sensors\nLight intensity\nWeather stations or Ground\
    \ sensors\nSolar radiation\nWeather stations or Ground sensors\nRainfall\nWeather\
    \ stations\nSize of crops\nUAV sensors\nShape of crops\nUAV sensors\nThickness\
    \ of plant stem\nUAV sensors\nLatitude, longitude and altitude of the plants\n\
    Location sensors\nInformation 2019, 10, 348\n7 of 25\nTable 2. Precision agriculture\
    \ sensor models.\nSensor Type\nSensor Model\nSoil moisture sensor\n10-HS,SY-HS-220,\
    \ FC-28\nTemperature sensor\nLM35, SHT15, DS18B20\nHumidity sensor\nDHT22, DHT11\n\
    Electric conductivity sensor\nDFR0300\nWind speed and direction sensor\nSEN0170\n\
    Barometric pressure sensor\nBMP180\nCarbon dioxide sensor\nCDM4161A, MHZ16\nPh\
    \ sensor\nMCP1525\nLight sensor\nTSL2561, BH1750\nSolar radiation sensor\n6450\
    \ TSR\nThermal sensors\nThermoMAP\n4. The Network Layer\n4.1. The Link Layer\n\
    In precision agriculture WSN communication protocols and technologies are used\
    \ to support\nthe connection between sensor nodes in the network and to provide\
    \ a channel for communication\nbetween the coordinator node and the gateway. According\
    \ to the type of application, such as precision\nfarming, ﬁeld irrigation management\
    \ or greenhouse crop management, the sensor network topology\nand communication\
    \ demands may differ. Hardware and software characteristics may also affect\n\
    the choice of communication technology to be used between the nodes. Each node\
    \ uses a routing\nprotocol [18] in the view of transferring the data collected\
    \ to the coordinator node.\nBased on many experimental studies on agricultural\
    \ ﬁelds, there is not an ideal combination of a\nspeciﬁc communication technology\
    \ and a routing protocol. Discovering and keeping up with routes in\nWSNs is a\
    \ quite demanding task since energy restrictions and alterations in node status,\
    \ such as failure\nmay cause sudden changes in the network topology. It is a fact\
    \ that the wireless routing solution for\nagriculture applications should be highly\
    \ energy-efﬁcient, scalable, and autonomous. Up until now\nrouting tactics proposed\
    \ in the literature for WSNs employ speciﬁc methods such as data aggregation,\n\
    clustering, different node role assignment and data-centric methods.\nThe basic\
    \ goal is to build each smart monitoring system upon application appropriate networking\n\
    technologies to operate efﬁciently with minimum energy consumption. Once the coordinator\
    \ node\nobtains the data it forwards the ﬂow of information to the gateway to\
    \ reach the main server, where\nthe database is located. However, in some cases\
    \ the coordinator node can be substituted by a base\nstation to obtain the collected\
    \ data using a Wi-Fi connection as presented in [2], or another cellular\ncommunication\
    \ technology.\n4.1.1. Precision Agriculture Communication Protocols\nThere is\
    \ a wide variety of networking technologies suitable for the deployment of smart\
    \ farming\napplications. The most popular are the following:\n•\nThe IEEE 802.15.4\
    \ standard is a widely used networking technology in precision agriculture and\n\
    deﬁnes the physical layer and the Media Access Control (MAC) technique in Low-Rate\
    \ Wireless\nPersonal Area Networks (LR-WPANs).\n•\nZigBee is another suitable\
    \ technology for short range radio communication in the ﬁelds using\nlow-power\
    \ devices capable of transmitting data over long distances using intermediate\
    \ stations.\nInformation 2019, 10, 348\n8 of 25\n•\nLoRa is a type of wireless\
    \ conﬁguration that has been created to achieve long-range connections\nfor Low-power\
    \ Wide Area Networks (LPWANs).\nLoRAWAN is a protocol for managing\ncommunication\
    \ between LPWAN gateways and nodes.\n•\nBluetooth Low Energy is a global personal\
    \ area network protocol built for transmitting small\ndata pieces infrequently\
    \ at low rates with signiﬁcantly low power consumption per bit.\n•\nRFID (Radio\
    \ Frequency Identiﬁcation) is a different technology that uses radio signals to\
    \ monitor\nand identify in real time objects without requiring line-of-sight communication.\
    \ An RFID\nsystem includes a reader, a tag, and a host and is presented as ideal\
    \ for ﬁeld monitoring in\nmultiple studies.\nMoreover, the communication between\
    \ sensor nodes and a base station can be supported by:\n•\nthe Wi-Fi protocol,\
    \ based on the IEEE 802.11 standard. This standard speciﬁes the set of media\n\
    access control (MAC) and physical layer (PHY) protocols for implementing wireless\
    \ local area\nnetwork (WLAN) Wi-Fi computer communication in various frequencies.\n\
    •\nthe GSM (Global System for Mobile Communications), a standard developed by\
    \ the European\nTelecommunications Standards Institute (ETSI) to describe the\
    \ protocols for second-generation\n(2G) digital cellular networks used by mobile\
    \ devices such as mobile phones and tablets.\n•\nthe GPRS (General Packet Radio\
    \ Service) technology standard that provides rapid sending and\nreceiving of data\
    \ over the GSM mobile networks based on packet switching, a well-known\nnetwork\
    \ transmission process.\n•\nthe 2G, 3G and 4G (LTE) are respectively the 2nd,\
    \ 3rd and 4th generation of GSM technology\naiming at higher speeds.\nTable 3\
    \ summarizes the communication technologies adopted in smart farming systems according\n\
    to literature.\nTable 3. Smart farming networking technologies.\nCommunication\
    \ Technology\nData Rate\nFrequency Band\nRange\nReferences\nIEEE 802.15.4\n20–250\
    \ Kbps\n2400/915/868 MHz\n10 m\n[7]\nIEEE 802.15.4-ZigBee\n20–250 Kbps\n2400/915/868\
    \ MHz\n10–100 m\n[19]\nWi-Fi-IEEE 802.11\n450 Mbps\n2.4 GHz–5 GHz\n100 m\n[2,20]\n\
    GPRS-2G GSM\n64 Kbps\n900 MHz–1800 MHz\n100 m\n[21]\n3G\n14.4 Kbps–2 Mbps\n1.6–2\
    \ GHz\n100 m\n[21]\n4G-LTE\n100 Mbps–1 Gps\n2–8 GHz\n100 m\n[14]\nLoRa\n0.3–50\
    \ Kbps\n433,868,780,915 MHz\n2–5 km\n[1,22]\nBluetooth LE\n1 Mbps\n2.4 GHz–2.485\
    \ GHz\n>100 m\n[5]\nRFID\n400 Kbps\n125 KHz–915 MHz\n3 m\n[23]\n4.1.2. Precision\
    \ Agriculture Routing Protocols\nData routing algorithms play an important role\
    \ in WSNs by establishing the path of\ncommunication for data exchange between\
    \ sensor nodes and base stations on a network. A variety\nof routing techniques\
    \ have been proposed until now, aiming to achieve higher performance with\nminimal\
    \ power consumption. IoT and WSN routing protocols can be categorized according\
    \ to network\nstructure and the way information will be disseminated through the\
    \ network. A routing protocol can\nbelong to more than one category, aiming to\
    \ satisfy as many performance metrics as possible.\nAccording to the way by which\
    \ routing decisions are made proactive and reactive routing\ntechniques can be\
    \ used. Proactive routing (or table-driven) supports the periodic renewal and\n\
    updating of the routes and destinations that are formed between the nodes throughout\
    \ the network.\nOn the other hand, reactive routing (or on demand) includes discovering\
    \ routes on demand based\non the transmission of route request packets. The downside\
    \ to reactive protocols is their latency,\nsince transmissions over unknown or\
    \ expired routes face delays, for which either the application or\nthe routing\
    \ protocol must account by buffering or dropping data.\nInformation 2019, 10,\
    \ 348\n9 of 25\nFurthermore, according to WSN structure, routing algorithms can\
    \ depend on neighbor nodes to\nbroadcast the collected information. Another popular\
    \ technique is based on dividing the network into\nclusters. Each cluster depends\
    \ on a cluster head node to manage the routing of information between\nother clusters\
    \ or base stations. Hierarchical routing is the most popular routing method in\
    \ smart\nfarming monitoring systems and soil parameter monitoring [23,24]. Multi-path\
    \ routing protocols\ncan also be used to implement a smart farm monitoring system\
    \ to balance the data transfer load and\nconserved energy. Table 4 presents characteristic\
    \ examples of routing protocols adopted in smart\nfarming systems according to\
    \ literature.\nTable 4. Smart farming routing protocols.\nRouting Protocols\n\
    Category\nFeatures\nDestination-Sequenced\nDistance Vector (DSVD)\nProactive\n\
    Route availability to all network destinations with\nminimal delay.\nLink Estimation\
    \ Parent\nSelection (LEPS)\nProactive\nA map of the network is kept regarding\
    \ the\ninterconnection of nodes.\nTiny Lightweight UNderlay\nAd-hoc Routing (TinyLunar)\n\
    Reactive\nProvided\ninterfaces\nhelp\nto\nform\nroute\ncharacteristics.\nAd-hoc\
    \ On-Demand\nDistance Vector(AODV)\nReactive\nUsed in ZigBee communication protocol\
    \ for\ninterconnection of sensor nodes.\nDynamic Source\nRouting(DSR)\nReactive\n\
    A route on demand is formed when a transmission\nnode requests it.\nOptimized\
    \ Link State\nRouting Protocol (OLSR)\nFlat Routing\nInformation about the status\
    \ of the nodes is used to\nselect the appropriate path for packet forwarding.\n\
    ProtoSense\nFlat routing\nReliable retransmission of information using\nconﬁrmation\
    \ messages.\nPeriodic Threshold-Sensitive\nEnergy-Efﬁcient Sensor\nNetwork (APTEEN)\n\
    Hierarchical\nRouting\nIt takes into account energy saving and network\nlifetime\
    \ [24].\nLocation Routing Algorithm\nwith Cluster-Based Flooding\n(LORA-CBF) [25]\n\
    Location-based\nrouting\nIt uses the ﬂood method in a hierarchical network\nstructure\
    \ to route data packets.\n4.2. The Encapsulation Layer\nMost of the current agro-environmental\
    \ monitoring applications are based on machine to\nmachine (M2M) communication\
    \ support regarding real-time data transmission. There is a variety\nof communication\
    \ patterns to be used so that the terminal can receive the information necessary\
    \ to\nmonitor the production. WSN technologies, enhanced by the IoT paradigm,\
    \ enable smart sensor\ncommunication and connection to the IPv6-based internet,\
    \ by addressing the agricultural sensors\nwith IPv6 long addresses that can ﬁt\
    \ in lightweight IoT data link frames. IoT can immensely improve\nthe autonomous\
    \ capabilities of resourced-constrained nodes in a Low-power and Lossy Network\n\
    (LLN). An agricultural WSN is a LLN. In such a network, some of the nodes may\
    \ have a direct\nInternet connection to send and receive messages from the Internet.\
    \ However, other nodes from the\nsame network, may lack that kind of ability due\
    \ to hardware limitations, and require the use of the\nInternet-connected nodes\
    \ to access external services. Data exchange in a local context is also possible\n\
    without the necessity of transmitting data to the Internet. The task of discovering\
    \ the routes and\nallowing data messages to be transmitted among agricultural\
    \ sensor nodes is performed by the routing\nprotocol. Due to this fact, in such\
    \ networks, network performance is strongly related to how the\nrouting protocols\
    \ use the limited hardware resources of the network device.\n•\nThe 6LoWPAN [7,26]\
    \ is the most popular network encapsulation protocol for precision agriculture\n\
    applications. It refers to the transmission of IPv6 protocol packets over Low-Power\
    \ Wireless\nInformation 2019, 10, 348\n10 of 25\nPersonal Area Networks. In a\
    \ smart farming monitoring system, it is used by sensor devices that\nare compatible\
    \ with the IEEE802.15.4 standard for WSNs. 6LoWPAN efﬁciently encapsulates\nIPv6\
    \ long headers in IEEE 802.15.4 small data frames for information exchange between\
    \ sensor\nnodes. The advantages of this protocol are that it uses a special header\
    \ compression method and\na fragmentation process to reduce the transmission overhead\
    \ [10].\n•\nThe IPv6 over LoRa [27] implementation enables the transmission of\
    \ IPv6 protocol packets over\nLoRa links. If LoRaWAN is chosen for sensor node\
    \ communication in a smart farming monitoring\nsystem, LoRa is the MAC protocol\
    \ responsible for establishing communication between the\nLoRa gateway and the\
    \ LoRa sensor end devices. In an agriculture monitoring system, the IPv6\nadaptation\
    \ enables the deployment of the IoT paradigm as a separate architectural layer.\
    \ The basic\naim of this layer is to manage header compression and packet fragmentation\
    \ to deal with the\nrequirements of LoRa modulation in the physical layer.\n•\n\
    The IPv6 over 802.11ah [10] or Wi-Fi-ah (HaLow) is a low-power/low-rate protocol\
    \ able to support\nnumerous sensor node devices on a single base station. This\
    \ technology can be used for precision\nagriculture by enabling wireless base\
    \ stations in the ﬁeld to transmit data while also being energy\nconservative.\
    \ Wi-Fi-ah (HaLow) uses special characteristics of the 6LoWPAN technology for\n\
    effective transmission of IPv6 protocol packets over IEEE 802.11ah wireless networks.\n\
    •\nRPL (IPv6 Routing over Low Power and Lossy Networks) [26] is the most popular\
    \ IoT routing\nprotocol based on the distance vector routing technique. It is\
    \ a proactive protocol that constructs\na speciﬁc graph able to direct all trafﬁc\
    \ towards the sink node. RPL is the ideal routing protocol\nfor agricultural LLNs,\
    \ since it can quickly create network routes between sensor nodes in the\nﬁeld,\
    \ share routing knowledge and adapt the topology in an efﬁcient way. It is also\
    \ efﬁcient for\nmulti-hop, many-to-one and one-to-one communication.\n•\nLOADng-IoT\
    \ is another IoT routing protocol, proposed in [28] as an enhancement for reactive\n\
    protocol LOADng, which is considered to be the best current solution for LLNs.\
    \ LOADng-IoT is\nable to boost the process of route discovery, reduce the overhead\
    \ of control messages, and improve\nthe network′s quality-of-service(QoS). In\
    \ a smart farm monitoring system, this protocol will allow\nsensor nodes without\
    \ an Internet connection to forward their data packets to external Internet\n\
    services with much greater reliability and lower latency.\n4.3. The Middleware\
    \ Layer\nThe Middleware Layer is responsible for establishing and controlling\
    \ the association between\nIoT sensor devices. More speciﬁcally, the services\
    \ of this layer include smart device management by\nthe use of different transport\
    \ protocols to forward the generated data from the involved IoT devices.\nMost\
    \ of these transport standards use the Transmission Control Protocol (TCP) or\
    \ the User Datagram\nProtocol (UDP) for forwarding information. There is a wide\
    \ variety of data protocols [29] that belong\nto this layer towards developing\
    \ an efﬁcient managing platform for smart ﬁeld devices. However,\nchoosing the\
    \ most appropriate device management technology depends on software and hardware\n\
    speciﬁcations, network and technology architecture and communication standards\
    \ being used in the\naccording system to achieve maximum and efﬁcient performance.\
    \ In the view of using different kind of\nsmart entities in an agriculture monitoring\
    \ system, the services of this architectural layer facilitate the\ndesired interoperability\
    \ of the technologies introduced. All collected data will be stored on a remote\n\
    server and transmitted to the client machine through Application Programming Interfaces\
    \ (APIs) that\nprovide web services for third-party users. APIs enable device\
    \ communication in an application level\nfor different kinds of purposes and are\
    \ based on different architectures to transfer data from the server\nto the client.\n\
    •\nThe MQTT-SN (Message Queuing Telemetry Transport For Sensor Networks) is a\
    \ messaging\nprotocol that facilitates device data collection and communication\
    \ with servers using brokers.\nA broker is a network entity which arranges transactions\
    \ between other network entities. By using\nthe MQTT protocol, a precision agriculture\
    \ monitoring system can enable smart sensor devices to\nInformation 2019, 10,\
    \ 348\n11 of 25\npublish messages to a broker and/or subscribe to a broker in\
    \ order to receive certain messages.\nThe exchanged messages will be organized\
    \ by topics that act as a system for dispatching messages\nto subscribers.\n•\n\
    The CoAP (Constrained Application Protocol) is another popular protocol for IoT\
    \ device\ndata management. CoAP is based on a request/response pattern of communication\
    \ allowing\nconstrained devices to have web service functionalities. It is an\
    \ HTTP-like web transfer protocol\nwith the ability to extend the Representational\
    \ State Transfer (REST) architecture to Low-Power\nWireless Personal Area Networks\
    \ (LoWPANs). REST is an architectural style for providing\nstandards between computer\
    \ systems on the web, while distinguishing the concerns of client\nand server.\n\
    •\nThe XMPP-IoT (Extensible Messaging and Presence Protocol) is an open technology\
    \ for real-time\ncommunication based on XML messages between connected devices\
    \ and the available server.\nXMPP can efﬁciently power instant messaging, collaboration\
    \ and content syndication in a smart\nfarm monitoring system between all network\
    \ entities.\n•\nDevice and asset management in a precision agriculture monitoring\
    \ system can also be\nimplemented using the Mihini [30] software.\nMihini is an\
    \ open-source project by Eclipse\nTechnology that enables communication between\
    \ an M2M server and the applications running\non an embedded gateway. M3DA is\
    \ the protocol used for the transport of M2M data. M3DA can\nallow user applications\
    \ to exchange typed data/commands back and forth with an M2M server,\nin a way\
    \ that optimizes the use of bandwidth.\n•\nThe OMA SpecWorks’s Lightweight M2M\
    \ [31] is another device management protocol for M2M\nor IoT devices. It can be\
    \ used in a smart farming information system to efﬁciently transfer\nservice data\
    \ from the network to resource-constrained devices. In contrast to traditional\
    \ M2M\nstandards in which a device usually needs to keep up multiple stacks of\
    \ technologies, protocols\nand security services, the LwM2M scheme allows the\
    \ existence of one stack of technology for\ndevice management, not only on the\
    \ level of the device itself, but also on the application level.\nIn addition,\
    \ LwM2M is based on protocol and security standards from the Internet Engineering\n\
    Task Force (IETF).\n•\nThe ONEM2M [32] technical speciﬁcation standards are an\
    \ upcoming solution for device and\nasset management in precision agriculture.\
    \ ONEM2M is a middleware IoT platform that provides\nfunctions and APIs for different\
    \ service domains dealing with interoperability challenges. There\nare commercial\
    \ and open-source implementations of this technology.\n•\nA popular queuing protocol\
    \ for enabling server connection in IoT is the AMQP (Advanced\nMessage Queuing\
    \ Protocol). This open standard protocol can facilitate message orientation,\n\
    queuing, routing, reliability and security in precision agriculture applications.\n\
    •\nLast but not least, the DDS (Data-Distribution Service) [33] is the ﬁrst open\
    \ international M2M\nstandard directly addressing publish-subscribe communications\
    \ for real-time and embedded\nsystems. This protocol has the advantage of providing\
    \ fast data, event, and command exchange\namong the IoT sensor nodes in a precision\
    \ agriculture monitoring system.\n4.4. The Conﬁguration Layer\nThe Conﬁguration\
    \ Layer deals with protocols running on top of the IoT monitoring platform\nallowing\
    \ the exchange of data speciﬁed by its context regarding what is described, what\
    \ was measured,\nwhen, where, by what, the time of validity, ownership, and others.\
    \ The main objective of this layer\nis to curate, harmonize and aggregate the\
    \ collected raw data, so that it can be published as context\ninformation, or\
    \ supplied to upstream data processing algorithms or analytics. It is also capable\
    \ of\nsending operational commands to the Middleware Layer. Context information\
    \ is a term widely used\nin IoT research and characterizes data that may come\
    \ from existing systems, users, through mobile\napplications, IoT smart devices,\
    \ agricultural machinery or public geo-services. The Conﬁguration layer\nuses\
    \ an IoT broker to guarantee a common interpretation of information produced by\
    \ heterogeneous\ndata sources that typically employ different data formats and\
    \ ontologies, and therefore are unable to\nInformation 2019, 10, 348\n12 of 25\n\
    directly share information among them. An IoT broker enables the forwarding of\
    \ lower-level device\ninformation to higher-level Thing Information.\n•\nRegarding\
    \ precision agriculture applications, a popular context broker is implemented\
    \ by the\nFIWARE NGSI technology, named Orion Context Broker. FIWARE is a framework\
    \ of open-source\nplatform components towards the deployment of the IoT paradigm.\
    \ FIWARE NGSI is the FIWARE\nversion of the OMA NGSI, an API based on HTTP that\
    \ enables the integration of components\nand provides the basis for the interoperability\
    \ and portability of IoT-enabled Smart Agriculture\napplications [34]. NGSI is\
    \ an information model developed by OMA SpecWorks to manage\ncontext information\
    \ with a meta-model based on entities, attributes and metadata. This protocol\n\
    manages data concerning context entities, such as the lifetime and quality of\
    \ information.\n•\nThe implementation of a smart farming monitoring system is\
    \ greatly depended upon geo-services,\nlocation detection tools and mapping technologies.\
    \ In such systems, the exchange of geographical\ninformation should be effortlessly\
    \ accomplished between the involved network entities across\nthe web. The Open\
    \ Geospatial Consortium-Web Feature Service (OGC-WFS) [35] constitutes a\ndesirable\
    \ asset in formulating geographic information and offering direct ﬁne-grained\
    \ access\nat feature property level of the data to IoT sensor nodes in precision\
    \ agriculture applications.\nOGC offers various standards that can ease the way\
    \ location data is exchanged and stored in\na smart farming system that is based\
    \ on drone monitoring. Furthermore, the OpenGIS Web\nMap Service Interface Standard\
    \ (WMS) [35] can be efﬁciently used by UAVs, since it provides a\nsimple HTTP\
    \ interface for requesting geo-registered map images from one or more distributed\n\
    geospatial databases.\n5. The Management Layer\nIn a smart farming monitoring\
    \ system, the basic component of intelligence is considered to be the\nstudy and\
    \ ﬁltering of the collected data. The use of EO techniques enable the advance\
    \ of cultivation\nprocedures and increase productivity by providing the base layer\
    \ for spatial information analysis and\nmonitoring of agricultural activities.\
    \ A large percentage of smart agriculture applications are based\non simulators,\
    \ commercial programs and speciﬁc programming languages for implementing and\n\
    controlling the data system. The Management layer uses modern software tools to\
    \ efﬁciently satisfy\nmultiple tasks, presented in Table 5.\nInformation management\
    \ is deployed so the farmer can consult, record and modify the\ninformation collected\
    \ by the sensors in tables, statistical graphs and interactive maps. In addition,\n\
    it can download daily, monthly and annual reports of historical data. However,\
    \ the farmer can\nmainly see the current data of the monitored variables of one\
    \ or all the WSN nodes and consult the\nhistory. The interaction with the network\
    \ and services layer is achieved using an intermediate layer of\nmanagement logic\
    \ [36]. WSN data will be stored in an online database [37].\nThe system also enables\
    \ Big Data analytics in agriculture monitoring by using tools such as\nthe Apache\
    \ Hadoop software and various Big Data hardware platforms [38] as possible resources.\n\
    Big Data refers to information assets characterized by such a high volume, velocity\
    \ and variety\nable to require speciﬁc technology and analytical methods for its\
    \ transformation into value [39].\nIn precision agriculture smart applications,\
    \ the collected data are recorded in a speciﬁc format,\nto discover patterns,\
    \ correct errors, eliminate duplicate and inconsistencies and to solve noise problems.\n\
    Big Data technologies are playing an essential role in modern farming systems,\
    \ since predictive insights\nare provided regarding optimizing the quality of\
    \ the crop, minimizing environmental impact, reducing\ncosts, increasing proﬁt\
    \ and generally optimizing production efﬁciency. In addition, Big Data enable\
    \ the\nmanagement of real-time operational decisions and the redesign of business\
    \ processes for advancing\nthe food supply chain.\nFurthermore, the proposed architectural\
    \ scheme promotes various data processing techniques that\nupgrade the impact\
    \ of EO technologies in agriculture. EO by satellite leads to the acquisition\
    \ of regular\nor spatially continuous data regarding large areas. It provides\
    \ essential information on the functioning\nInformation 2019, 10, 348\n13 of 25\n\
    of ﬁelds and on the causes of environmental change. UAVs enable EO by using photogrammetry\n\
    techniques to extract three-dimensional digital surface models of the ﬁeld, as\
    \ well as orthophotographs.\nOne popular algorithm for this purpose is Structure\
    \ from Motion (SfM) [40]. An orthophotograph\ncan be used to create a realistic\
    \ map of the ﬁelds by measuring true distances and providing to the\nfarmer a\
    \ clearer helpful view from the sky. Based on photographs, digital image processing\
    \ tools,\nsuch as Pix4Dmapper can calculate various vegetation indices that can\
    \ lead to conclusions, either\non each photograph individually or after the production\
    \ of orthophotos regarding the crops’ state.\nVegetation indices are mathematical\
    \ quantitative combinations of the absorption and scattering of\nplant in different\
    \ bands of the electromagnetic spectrum [41]. Calculating vegetation indices will\
    \ help\nto identify useful crop characteristics concerning important biological\
    \ and physical parameters of the\nvegetation. The best-known vegetation index\
    \ is the Normalized Difference Vegetation Index (NDVI),\nwhich is the evolution\
    \ of the vegetation index ratio and is calculated by the visible and near infrared\n\
    light reﬂected from the vegetation.\nLast but not least, the smart agriculture\
    \ monitoring system also performs data mining processes\nbased on tools such as\
    \ the Apache Mahout Framework so as to identify and discover hidden patterns\n\
    in the collected data, once they are processed, in the form of reviews. In addition,\
    \ Machine Learning\ntechniques will be used in the smart monitoring platform in\
    \ order to estimate the extracted parameters\nof the crops’ growth rate and also\
    \ help to identify objects or animals trough the collected images by\nusing Object-Based\
    \ Image Analysis (OBIA) [42]. Moreover, new machine learning models—algorithms\n\
    focused on data classiﬁcation [43,44]—can be used to minimize the size of redundant\
    \ data and fasten\nthe analysis.\nTable 5. Smart farming monitoring system services.\n\
    Service Type\nTools\nDescription\nInformation\nmanagement\nDatabase\nThe central\
    \ server database for storing and maintaining the sensor\ncollected data, management\
    \ commands and application user\ninformation.\nManagement logic\nThe process of\
    \ managing the systems units, organizing and\ndisplaying the evaluated data into\
    \ a user-friendly way.\nBig Data\nanalytics\nApache Hadoop\nFramework\nComplex\
    \ process of examining large and varied data sets with an\nintention to uncover\
    \ meaningful and useful information that can\nhelp in deriving conclusion and\
    \ take decisions.\nBig Data hardware\nplatforms\nThe\nuse\nof\ndifferent\nhardware\n\
    platforms\nfor\nBig\nData\nanalytics according to the available hardware, scale-ability\
    \ and\nperformance characteristics of each platform.\nData and Image\nprocessing\n\
    Digital Image\nprocessing\nVegetation Indexes calculation\nPhotogrammetry\ntechniques\n\
    Extracting three-dimensional digital surface or terrain models of\nthe ﬁeld and\
    \ orthophotographs.\nMachine learning\nclassiﬁcation\nalgorithms\nClassiﬁcation\
    \ of data to decrease the size of redundant\ninformation and identify objects\
    \ or animals.\nData mining\nApache Mahout\nFramework\nSystematic and sequential\
    \ process of identifying hidden patterns\nand information in a large dataset.\n\
    Object-Based Image\nAnalysis\nIdentify objects or animals through the collected\
    \ images\nFurthermore, all these services are hosted in the cloud to be able to\
    \ access them remotely from\nany geographical location.\nInformation 2019, 10,\
    \ 348\n14 of 25\n6. The Application Layer\nBased on the proposed precision agriculture\
    \ monitoring system architecture, the farmer can\ninteract with the IoT applications\
    \ of the system to remotely manage the cultivation process.\nSuch applications\
    \ may concern any aspect of the agricultural ﬁeld ranging from planting and irrigation\n\
    processes to plant protection and harvesting methods [45]. The applications that\
    \ can be adopted may\ninvolve the fertilizer application, the weed mapping, the\
    \ spraying process, the irrigation of the ﬁeld\nand the alert system.\nThe Variable\
    \ Rate Fertilizer (VRF) application has as a target to optimize the usage of nutrients\
    \ by\ndeﬁning the amount of fertilizer applied based on the health of the plant.\
    \ Variable rate fertilizer in\nprecision agriculture is an area of technology\
    \ that focuses on the automated application of fertilizer to\na given landscape.\
    \ The way in which the materials are applied is based on data that is collected\
    \ by\nsensors, maps, and GPS. VRF applications bring several beneﬁts related to\
    \ savings on fertilizers and\nchemicals, potential yield increase and environmental\
    \ protection. In the same context is the Variable\nSpraying application. These\
    \ types of applications implement controllers that turn the herbicide\nsprayers\
    \ on and off. Usually variable spraying applications take into consideration information\n\
    coming from the weed mapping tools such as the weed locations. In that case the\
    \ appropriate volume\nof herbicide is estimated and applied in the ﬁeld based\
    \ on the weed intensity.\nThe Weed Mapping application focuses on the visualization\
    \ of the weed occurrences within\na certain crop ﬁeld with the help of mappings.\
    \ The GPS receiver with an aerial vehicle generates\nmaps which show the weed\
    \ occurrences. These weed maps can be combined with fertilizer maps\nand yield\
    \ maps. The IoT-based irrigation system use a micro-controller that serves as\
    \ information\ngateway receiving real-time information from soil moisture and\
    \ temperature sensors placed on the\nﬁelds. Generally, a moisture/temperature\
    \ threshold is speciﬁed based on which the micro-controller\nautomatically switches\
    \ on the water pump. The micro-controller also has servo motors to ensure that\n\
    the area is uniformly irrigated. The entire system can be managed remotely by\
    \ the end-user through\nthe dedicated application.\nAlert/ notiﬁcation applications\
    \ are also very popular in IoT-based precision agriculture. Producers\nand agriculture\
    \ companies implement IoT solutions for instantly tracking their crop ﬁelds. In\
    \ this case,\nthe data coming from IoT devices is processed and transformed into\
    \ knowledge properly visualized\nfor offering information regarding the health\
    \ of the vegetation and the soil, the behavior patterns of\nthe plants, detect\
    \ signs of disease on time, identify insects and harmful animals and instantly\
    \ alert\nproducers about potential difﬁculties. This type of applications serves\
    \ for storing and analyzing data,\nproviding producers with relevant recommendations.\n\
    The aforementioned applications aim at the efﬁcient ﬁeld and crop management to:\n\
    •\nincrease production efﬁciency\n•\nimprove product quality\n•\nprovide more\
    \ efﬁcient use of chemicals in cultivation\n•\nmanage pesticide amounts\n•\nreduce\
    \ energy consumption\n•\nprotect the soil\n•\ncontrol water consumption and underground\
    \ water amounts\nThe IoT-based agriculture applications can be implemented for\
    \ an Android or Windows\nsmart-phone, a tablet or as a web application. The applications\
    \ of IoT-based smart farming apart from\nconventional, large farming operations,\
    \ targets also other growing or common trends in agricultural\nsuch as organic\
    \ farming, family farming (complex or small spaces, particular cattle and/or cultures,\n\
    preservation of particular or high quality varieties etc.), and enhance highly\
    \ transparent farming. Our\nprecision agriculture monitoring system can also beneﬁt\
    \ the dry farming technique that encompass\nspeciﬁc agricultural techniques for\
    \ the non-irrigated cultivation of crops. Furthermore, greenhouses\ncan use our\
    \ architectural model to intelligently monitor as well as control the climate,\
    \ eliminating the\nneed for manual intervention.\nInformation 2019, 10, 348\n\
    15 of 25\n7. Energy-Saving Techniques and Security Mechanisms\n7.1. Energy-Saving\
    \ Technologies\nIn precision farming applications sensor nodes are usually powered\
    \ by low-energy batteries that\nare difﬁcult or impossible to recharge or replace.\
    \ This is considered to be a major disadvantage to\nmaintain a real-time monitoring\
    \ system. Energy-saving techniques is vital to maintain the system’s\nefﬁciency\
    \ in smart farming. This kind of techniques can provide battery life extension\
    \ by reducing the\namount of communication between the nodes and the base station,\
    \ while minimizing the redundant\ndata in the network. Energy preservation techniques\
    \ for precision agriculture systems are presented as\na separate architectural\
    \ level covering the sensing and networking procedures of smart farming.\nIn the\
    \ Sensor layer, the proposed energy-saving approach is an on/off process which\
    \ is based on\nthe selection of a subset of nodes that will remain active for\
    \ a certain period of time, while others remain\ninactive. Following this assumption,\
    \ SWORD (sleep/wake on redundant data) is an energy preserving\nscheme that can\
    \ be used to collect data on soil moisture [19]. The SWORD algorithm performs\
    \ data\ncontrol by removing redundant data so as to minimize energy consumption\
    \ and increase the life of\nsensor nodes in the network.\nIn the Network layer,\
    \ data transmissions and receptions can also be scheduled based on the\nsleep/awake\
    \ periods of sensor nodes at predetermined intervals. For this purpose, A2S, an\
    \ automated\nagricultural precision tracking system can be used [46]. Based on\
    \ this energy-saving technology,\nwhenever the sensing period is set by the application\
    \ server, the sink node keeps the schedule and\nit spreads the sleep order message\
    \ over its network every sensing period. Each time a node receives\nthe sleep\
    \ message, it sets the sleep timer’s end time to the value of the duration ﬁeld\
    \ included in the\nmessage. When the meter time ends, the node detects the environment\
    \ and battery voltage level and\nsends the data to the source. Then, he expects\
    \ the next sleep request message.\nMoreover, another energy-saving scheduling\
    \ technique that can be deployed in the Network layer\ninvolves the use of unmanned\
    \ ﬂying vehicles in an agricultural crop monitoring system. Based on this\nscheme,\
    \ the node on the unmanned ﬂying vehicle wakes the ground nodes to retrieve the\
    \ measured\ndata. To perform this function, a coded radio signal is sent via a\
    \ transmitter to the ground nodes.\nThe nodes are in an inactive state, except\
    \ for a small receiver waiting to receive the trigger signal.\nFurthermore, taking\
    \ advantage of APTEEN hierarchical routing protocol, a time division multiple\n\
    access technique can be implemented as a scheduling method. Based on this technique,\
    \ messages are\nsent to put some nodes in sleep mode so as to avoid packet collisions\
    \ between sensor nodes belonging\nto different clusters. In addition, carrier\
    \ sense multiple access technique is another alternative method,\nwhich is equally\
    \ effective for avoiding collisions.\n7.2. Security Mechanisms\nPrecision agriculture\
    \ monitoring systems involve the exchange of sensitive information regarding\n\
    the cultivation process, the state of crops and personal data of authorized staff.\
    \ It is of great importance\nfor such systems to be protected against cyber-attacks.\
    \ An unauthorized entry of a malicious individual\nin the system may cause great\
    \ damage to the cultivation process or even acquire the farmers personal\ninformation\
    \ [47]. In the pursuit of safeguarding a smart farm monitoring system the conﬁdentiality\n\
    of data should be met. In addition, it is vital to ensure the reliability of the\
    \ data and the ability to\nconﬁrm that a message has not been tampered with, altered\
    \ or changed while on the network. Also,\nthe services of resources offered by\
    \ the network, or by a single sensor node must be available whenever\nrequired\
    \ and ﬁnally to be able to identify the origin of a message received. Basic security\
    \ mechanisms\nare already deployed by the combined IoT technologies in every architectural\
    \ level of the proposed\nsmart monitoring system. However, there are more ways\
    \ to increase the level of security in each\nlayer separately.\nOne popular way\
    \ of providing physical layer security in WSN and IoT systems is cryptography.\n\
    Physical layer security refers to the inner security capabilities of the Sensor\
    \ layer regarding the\nInformation 2019, 10, 348\n16 of 25\nrandomness of wireless\
    \ channels, the signal-to-noise ratio gaps or intended jamming. There are\nthree\
    \ kinds of cryptographic methods used in WSNs, the symmetric and asymmetric ones\
    \ and hash\nfunctions. Hash functions are special mathematical functions which\
    \ map a given input to a certain\noutput with a ﬁxed size. Well-known cryptographically\
    \ secure hashes are the Secure Hash Algorithm-2\n(SHA-2) and Advanced Encryption\
    \ Standard (AES) algorithm. In symmetric cryptographic techniques,\na single shared\
    \ key is used between the two communicating nodes both for encryption and decryption.\n\
    This key stays known only to the nodes of the network. On the other hand, in asymmetric\
    \ cryptography,\na private key can be used to decrypt and sign data. A public\
    \ key is also used to encrypt and verify data.\nThe private key needs to be kept\
    \ conﬁdential while the public key can be published freely. Asymmetric\ncryptographic\
    \ techniques may use the RSA (Rivest–Shamir–Adleman) algorithm, the ECC (Elliptical\n\
    Curve Cryptography) algorithm or the pairing technique. Popular frameworks of\
    \ symmetric and\nasymmetric technique can be found in [48].\nRegarding the Link\
    \ layer of our proposed architecture security mechanisms focus against the\ninterception,\
    \ modiﬁcation and fabrication of the exchanged data. Attack detection mechanisms\
    \ can\nbe applied, such as the misbehavior-aware threshold detection scheme for\
    \ LLNs proposed in [49].\nIn addition, secure routing protocols may be used such\
    \ as SAR(Secure aware routing protocol), which is\nbased on on-demand protocol\
    \ such as AODV or DSR and DPRAODV (Detection, Prevention and\nReactiveAODV) [50].\n\
    Middleware security mechanisms deal with unauthorized modiﬁcations that occur\
    \ due to\ntransmission errors (accidental) and require the use of digital signatures.\
    \ Digital signature schemes\nare cryptographic schemes that include key generation\
    \ algorithms, signing algorithms and signature\nverifying algorithms. A digital\
    \ signature is an authentication mechanism that enables the creator of the\nmessage\
    \ to attach a code that acts as a signature. The Digital Signature Algorithm (DSA),\
    \ developed by\nthe National Institute of Standards and Technology, is one of\
    \ many examples of a signing algorithm.\nAccess control is an important building\
    \ block for the overall security of a precision agriculture\nmonitoring system.\
    \ The IoT requires access control models that apply authorization policies across\n\
    a multitude of smart sensors. In a smart farm monitoring platform, authentication\
    \ is required\nto prevent authorized users from accessing resources in an unauthorized\
    \ manner. For instance,\na worker in the ﬁelds is a legitimate user but does not\
    \ have the access rights as the main administrator\nfarmer. Most importantly,\
    \ access control prevents illegitimate users from gaining access to resources.\n\
    The Attribute-Based Access Control (ABAC) model is a technique that assigns attributes\
    \ to each entity\nin the system. The attributes may refer to either a user or\
    \ a resource and are deﬁned as properties\nof every entity to enable authentication.\
    \ Another paradigm able to provide solid communication in\nthe application layer\
    \ is the Role-Based Access Control model (RBAC) where a user is assigned as\n\
    administrator or ordinary user that predetermines access rights policies. In the\
    \ Application layer,\neach user can be authenticated by the use of passwords or\
    \ a smart key card [51].\n8. Use Case Study: The DIAS Architecture\nThe DIAS research\
    \ project stands for Drone Innovation in saffron Agriculture Surveillance.\nIt\
    \ is co-funded by the European Union and Greek national funds through the Operational\
    \ Program\nCompetitiveness, Entrepreneurship, and Innovation. University of Western\
    \ Macedonia (UOWM) in\ncooperation with Kozani Saffron Producers Cooperative (KSPC)\
    \ aims at developing an integrated\nautomated surveillance system for saffron\
    \ cultivation.\nThis 24 h real-time saffron cultivation\nsurveillance system is\
    \ relied on signal and image collecting and processing, which is derived from\n\
    advanced surveillance, risk identiﬁcation and early warning systems, based on\
    \ integrated sensor\nnetworks, and aerial unmanned vehicles.\n8.1. Saffron Cultivation\n\
    The saffron cultivation is considered to be of extreme importance for the Western\
    \ Macedonia\ncitizens, due to the activity over saffron cultivation by a large\
    \ number of citizens, the limited farming\nInformation 2019, 10, 348\n17 of 25\n\
    geography, the unique production process to plant the saffron seeds, and the unique\
    \ production risk\nthat this operation faces. The only kind of saffron that is\
    \ systematically cultivated around the world,\nfor at least ten centuries, is\
    \ the edible saffron or as it known in scientiﬁc (botanical) terminology Crocus\n\
    Sativus Linneaus.\nThe cultivation process includes harvesting the ﬂowers, as\
    \ presented in Figure 2, splitting the\nstigmas and stamens from the petals, drying\
    \ and sorting of saffron. The picking of 1000 ﬂowers is\nprocess of a duration\
    \ around 45–55 min, while additional 100 to 130 min are required for removing\n\
    the stigmas for drying. In total, 370 to 470 h are required to produce 1 kg of\
    \ dried saffron [52].\nThe ﬂowers are picked exactly when they are fully bloomed,\
    \ and the saffron strand or stigma is at its\nreddest. The harvesting process\
    \ begins shortly after dawn to minimize the further sunlight exposure\nto the\
    \ crops, since they may lose their color and even ﬂavor. Saffron cultivation requires\
    \ dry soil\nwith speciﬁc levels of moisture, controlled irrigation and right amounts\
    \ of nitrogen, phosphorus\nand potassium. Cultivation is commonly disturbed by\
    \ mice, moles and rats wrecking the stems.\nFurthermore, fungi may cause speciﬁc\
    \ diseases at the early stages of saffron growth.\nFigure 2. Saffron harvesting.\n\
    The DIAS platform aims to improve the production process, by offering the ability\
    \ of immediate\ninterference in case of animal, disease or wild weeds detection.\
    \ The farmer will be able to monitor the\nﬁelds in real time and getting alerts\
    \ in case of unwanted incidents regarding the state of the plants\nduring all\
    \ cultivation period, while raising proﬁts. To satisfy these goals, the monitoring\
    \ process will\nbe aligned speciﬁcally with the farmers concerns and actions during\
    \ each month of cultivation as\npresented in Figure 3.\nFigure 3. Saffron cultivation\
    \ yearly stages.\n8.2. DIAS Architecture\nThe DIAS platform follows the architectural\
    \ design of the proposed remote sensing monitoring\nsystem. As presented in Figure\
    \ 4 the DIAS system is consisted of seven architectural layers. In each\nlayer\
    \ the most suitable aforementioned technologies are used towards achieving the\
    \ overall system’s\nefﬁcient performance and reliable operations. The saffron\
    \ cultivation is a quite demanding and delicate\nprocess requiring the deployment\
    \ of tailor-based technologies and continuous crop monitoring to\navoid animal\
    \ and disease interventions.\nIn the Sensor layer, quadcopter UAVs with thermal,\
    \ hyperspectral and RGB cameras are being\nused in cooperation with multiple wireless\
    \ nodes equipped with various sensors for data collection\nregarding the crops.\
    \ Saffron cultivation monitoring requires the study of small sized crops and\n\
    the notice of minimal crop state variations during each month. To select the desired\
    \ information\nUAVs must ﬂy in a certain distance and place for a speciﬁc period\
    \ of time and by using different\nInformation 2019, 10, 348\n18 of 25\nposition\
    \ angles. Quadcopter UAVs is considered to be the best choice for saffron monitoring\
    \ since\nthey have rotary wings, which provide them with the ability of maneuverability,\
    \ while also ﬂying\nin low speed. Regarding RGB cameras, they are ideal since\
    \ saffron cultivation requires the capture\nof data-images in different weather\
    \ conditions avoiding inadequate or excessive exposure of the\nimage. Using multispectral\
    \ or hyperspectral sensors, UAVs can also obtain information related to\nspectral\
    \ absorption and reﬂection of the crops in several bands. This quite useful since\
    \ the provided\ninformation can then be used to calculate vegetation indices and\
    \ monitor the state of saffron crops\nbased on them. On the other hand, thermal\
    \ imaging detects speciﬁc levels of radiation and translates\nit into a grayscale\
    \ image, using brighter and darker shades of heat representation. This ability\
    \ is also\nessential in saffron cultivation since the ﬁelds are regularly trampled\
    \ by animals that are not being\ndetected on time in before they cause any damage.\
    \ The DIAS monitoring system uses different ground\nand on-leaf sensors to collect\
    \ useful data for improving the cultivation process. More speciﬁcally,\nenvironmental\
    \ humidity and temperature is evaluated since saffron requires speciﬁc conditions\
    \ to\nprosper. Additionally, the levels of luminosity, leaf-wetness, soil moisture,\
    \ pH and wind speed are also\nof great importance. Furthermore, the amounts of\
    \ nitrogen, phosphorus and potassium in the soil can\nhave a severe impact on\
    \ the plant’s growth, as well as the moisture levels in the soil. The farmer will\n\
    be able to predict production loss efﬁciently due to a round knowledge of the\
    \ saffron ﬁelds condition\nand even intervene with possible treatments to change\
    \ its course for the better.\nRegarding the Link and Encapsulation layer, sensor\
    \ data exchange in the DIAS platform is enabled\nby the LoRaWAN technology and\
    \ the IPv6 protocol. LoRa technology offers several advantages.\nThe LoRa physical\
    \ layer uses ISM bands 868 and 915 MHz—frequencies that are free to use anywhere\n\
    in the world. In addition, LoRa devices consume very little power making it ideal\
    \ for battery-powered\ndevices and it can also transmit and receive data for up\
    \ to 15 km in suburban areas and 5 km in\nurban areas. Another advantage of LoRa\
    \ is its high network capacity. In LoRaWAN, a single gateway\ncan accommodate\
    \ 1000 end-node devices. On the other hand, IPv6 offers large addressing space\n\
    and has built-in support for network auto-conﬁguration. In the DIAS platform,\
    \ each sensor node\nis characterized by its own IP address and uses a power saving\
    \ scheduling and routing protocol to\ntransmit the collected data to the nearest\
    \ LoRa Gateway. The information to be exchanged is encrypted\nbefore transmission.\
    \ Each LoRa gateway forwards the information to the according network router for\n\
    Internet access and data storage to the system’ database. UAVs’ data transmission\
    \ and communication\nis enabled by the IEEE 802.11ah networking standard in cooperation\
    \ with the IPv6 protocol, to forward\nthe collected images to the network server\
    \ as well.\nIn the Middleware layer, the DIAS platform will employ the MQTT-SN\
    \ protocol. MQTT-SN\nenables the management of all DIAS networking devices through\
    \ message exchanges coordinated by\nthe FIWARE’s context broker. It is essential\
    \ to maintain the monitoring’s system reliability towards\nachieving meaningful\
    \ data collection. Based on this protocol, the exchanged messages can be organized\n\
    by topics and importance regarding device management commands, transmission requests\
    \ initiated by\na higher layer and data acquisition. Sixteen number of message\
    \ types are supported and transmitted\nin an asynchronous way of communication\
    \ by the publish-subscribe model. TCP and UDP will also be\nused as transport\
    \ protocols. MQTT is ideal for the DIAS system since it excels in smart sensor\
    \ device\ncommunication on a wide area network, due to the publish/subscribe architecture\
    \ with the broker\nin the middle. MQTT is also very useful if the bandwidth is\
    \ limited to enhance network reliability\nand availability.\nIn the according\
    \ Conﬁguration layer, all saffron ﬁeld collected data will be grouped and\nformulated\
    \ to reach the information management unit. This layer facilitates the FIWARE\
    \ NGSI\nAPI so to produce the desired information model of the acquired ﬁeld data\
    \ based on efﬁcient\ncontext management.\nThe FIWARE’s Orion Context Broker has\
    \ powerful features enhancing\nthe capabilities and performance of the DIAS monitoring\
    \ system such as enabling asynchronous\napplication notiﬁcations. The basic operations\
    \ of the current layer include enabling the publication,\nInformation 2019, 10,\
    \ 348\n19 of 25\nconsumption, subscription and processing of all the information\
    \ relevant to the crops and the\ncultivation process in the DIAS platform.\nFigure\
    \ 4. The DIAS architecture.\nThe Management layer constitutes the basic operation\
    \ center of the DIAs platform. It stores,\nmaintains, analyzes the collected data\
    \ and produces predictions for the progress of the crops growth\nrate and statistics\
    \ regarding they current state. According to the commands acquired from the user\
    \ of\nthe platform in the highest architectural layer, the information management\
    \ logic initiates the according\nprocesses. Data processing includes the use of\
    \ the Random Forest machine learning classiﬁcation\nalgorithm for direct extraction\
    \ of conclusions regarding the growth and health of vegetation. This\nalgorithm\
    \ is directly applied on the data of the images acquired by the UAVs, evaluating\
    \ the RGB\nInformation 2019, 10, 348\n20 of 25\ncolors and the intensity of each\
    \ pixel. The Random Forest scheme performs very well with high\ndimensionality\
    \ and can handle binary features, categorical features, and numerical features.\
    \ This\nmethod is chosen since very little pre-processing is required and the\
    \ data does not need to be rescaled\nor transformed. Digital image processing\
    \ of geospatially corrected aerial images (orthophotographs)\nfocuses on producing\
    \ the according vegetation indexes for evaluating the state of saffron plants.\
    \ Two\nkind of vegetation indexes will be calculated by the PiX4D image processing\
    \ tool. Vegetation indexes\nderived from multispectral information, such as NDVI\
    \ will enable the detection of unhealthy or sparse\nvegetation that reﬂects more\
    \ visible light and less near infrared light, making it easy to monitor the\n\
    growth and health of saffron crops. On the other hand, regarding the use of RGB-based\
    \ Vegetation\nIndices, Excess Greenness Index (ExG) is based on the assumption\
    \ that saffron plants will display a\nclear high degree of greenness, while soil\
    \ being the only background element. Finally, the Normalized\nDifference Index\
    \ (NDI) will be also used since it can enable the separation of saffron plants\
    \ from\nsoil and residue background images, using only green and red channels.\
    \ Spectral information can\nhelp signiﬁcantly in assessing a lot biological and\
    \ physical characteristics of the saffron crops. Any\nkind of wild weeds or animal\
    \ detection based on thermal imaging in the ﬁelds initiates alerts for\nimmediate\
    \ intervention and is taken into consideration as a note in the cultivation calendar\
    \ created by\nthe platform for the farmer. For this purpose, the OBIA algorithm\
    \ is also used to recognize weeds or\ndiscriminate species. Object-based image\
    \ analysis is based on the comparison between sets of similar\npixels called image\
    \ objects in measures of spectral properties (i.e., color), size, shape, and texture,\n\
    as well as context. The OBIA algorithm is chosen since it is more suited to landscape-scale\
    \ analyses\nand can ﬁlter out meaningless information and assimilate other pieces\
    \ of information into a single\nobject. After processing, all the collected sensor\
    \ data are categorized and evaluated in accordance with\nthe desired vegetation\
    \ index values, moisture levels and general plant state for each month during\n\
    the cultivation process. For these tasks, the DIAS platform employs powerful and\
    \ well-known tools,\nthe Apache Spark Framework focusing on Big Data analytics\
    \ and the WEKA (Waikato Environment)\nFramework specializing in data mining tasks.\
    \ The evaluation results will point out the vulnerable\nspots in the ﬁeld with\
    \ helpful statistical graphs and suggest possible solutions to the farmer, such\
    \ as\nthe use of fertilizer.\nIn the Application Layer, each user can access the\
    \ DIAS platform by using his/her own unique\npassword. According to their authority\
    \ and activities in the saffron ﬁeld the users have different access\nrights in\
    \ the DIAS platform. A user may be the administrator of the platform, a representative\
    \ of the\nKSPC board, a farmer or a worker in the ﬁelds. For instance, a worker\
    \ can only observe the evaluation\nresults in order to aid the farmer in treating\
    \ the plant growth, while the KSPC representative can\nadd observation notes,\
    \ can schedule and initiate sensor data collection in a speciﬁc ﬁeld and also\n\
    manage the ﬂight plan of UAVs. On the other hand, the platform administrator is\
    \ only one who can\nadd new users and new saffron ﬁelds for cultivation to be\
    \ observed in the system. Access in the\nDIAS platform is forbidden for non-authorized\
    \ users. In the Application layer, the management of\nthe four basic operational\
    \ units of the DIAS system can be initiated. These are the Visualization Unit,\n\
    the Data Management Unit, the Prediction Unit and the Data collection Unit. By\
    \ entering the Data\ncollection Unit, a user can initiate sensor data collection\
    \ in a selected ﬁeld or modify existing data\nin the platform. By entering the\
    \ Data Management Unit, the user can evaluate orthophotographs\nand calculate\
    \ vegetation indexes according to speciﬁc data in a speciﬁc saffron ﬁeld with\
    \ the help of\nPix4DMapper tool. The Visualization Unit is related to the presentation\
    \ of statistical results and graphs\nregarding each saffron ﬁeld, while the Prediction\
    \ Unit employs the aforementioned data mining tools\nto produce a sufﬁcient evaluation\
    \ of the collected data. All system information is stored in the central\nserver\
    \ database.\nBased on the acquired and processed data, farmers can produce statistics\
    \ regarding the progress in\nsaffron production and avoid ﬁnancial loss, while\
    \ improving the quality of the crops and accomplishing\na considerable rise in\
    \ production.\nInformation 2019, 10, 348\n21 of 25\n8.3. Beneﬁts and Costs\nGreece\
    \ is the second largest saffron producing country, with an average output of 4\
    \ tons of p.a.\nduring the last four decades, most of which is directed in export\
    \ markets. The establishment of the\n‘Kozani Saffron Producers Cooperative’ marked\
    \ the beginning of a good decade for this product\nwith production reaching its\
    \ height record of more than 12 tons in 1982 [53]. Nevertheless, in the\nperiod\
    \ following Greece’s accession to the European Community, farmers began abandoning\
    \ saffron\ncultivation. This fact resulted in a signiﬁcant decrease in yield with\
    \ an average yield of 800 g per\nstremma (1 ha = 10 stremmas = 1000 m2 ). However,\
    \ this trend seems to be reversed since 2010 and\ncurrently yields vary around\
    \ 1 ton per stremma. Currently, Greek saffron price is about 1200 euros per\n\
    Kg. Nearly 5000 spots are needed to produce 100 g of red saffron. The average\
    \ produce per acre is 6 kg\nof dried stigmas (red product). The lower production\
    \ of the plant is on the ﬁrst year of the plantation,\nwhile the highest on the\
    \ third and the fourth.\nIn the year of 2015, a study in Greek saffron cultivation\
    \ resulted that farm managers need\nto address the efﬁciency of input use and\
    \ raise capital and labor productivities to maintain\ncompetitiveness [53]. The\
    \ saffron quality is determined by the color, ﬂavor and size of the stigmas.\n\
    The DIAS platform aims to upgrade proﬁt earnings by the adoption of new technologies,\
    \ ensuring\nﬂower picking at appropriate time in a proper collection material\
    \ at an appropriate age. Animal\nintrusions in the ﬁelds, causing a huge loss\
    \ in production, will be prevented and crops diseases will\nbe detected in time.\
    \ The overall equipment cost is considered to be a safe investment for farmers\n\
    since most of the technologies involved are open source and the initial cost of\
    \ the related hardware\nand software can be shared across producers. Currently,\
    \ the DIAS initiative is under construction\nand no experimental results are available\
    \ to conﬁrm the proposed objectives. However, in Table 6\nwe present the production\
    \ rate of Greek Saffron as recorded in [53], while in Table 7 an average\nestimation\
    \ is provided regarding the increase in cultivation operations by adopting the\
    \ DIAS platform.\nThese percentages are the estimations provided by two of the\
    \ producers whose ﬁelds participate in\nthe pilot study. The estimations show\
    \ that on average the farmers calculate an increase of around\n20% in production,\
    \ this percentage is in accordance to other types of cultivations such as olives\
    \ and\npotatoes [54].\nThe use of the DIAS project can offer a signiﬁcant increase\
    \ in saffron production. Nevertheless,\nsince no pilots have been implemented\
    \ yet in the project, the Return on Investment (ROI) is difﬁcult to be\nestimated.\
    \ An investment of time and money from the DIAS consortium is required to investigate\
    \ how\nthe data gathered from UAVs can connect to and affect other things that\
    \ are happening on the ﬁelds.\nSaffron growers need that information to provide\
    \ context and create a correlation regarding causes\nand effects. At that point\
    \ ROI becomes signiﬁcant promoting UAVs as a part of the desired solution\nand\
    \ not as the solution itself. Furthermore, due to shared costs between project\
    \ partners, ROI becomes\na collective performance measure that can be estimated\
    \ only when each member has acquired the\naccording technological beneﬁts. A complex\
    \ proﬁtability study is required to specify the precision\nservice offerings,\
    \ as presented in [55,56]. Each partner in the DIAS project owns and offers different\n\
    assets in this endeavor, thus calculating the overall ROI of UAV usage from the\
    \ side of farmers is not\nyet possible.\nTable 6. Greek saffron cultivation economic\
    \ estimation in one year.\nAverage production results\n2200 euros\nAverage produced\
    \ yield\n1.8 Kgs\nAverage labor cost of annual working hours\n145 euros per 1000\
    \ m2\nAverage cultivated land\n15,000 m2\nInformation 2019, 10, 348\n22 of 25\n\
    Table 7. Economic estimation for Greek saffron cultivation via using the DIAS\
    \ platform in one year.\nDIAS platform hardware and software equipment cost\n\
    45,000 euros\nAverage increase in production results in euros\n10%\nAverage increase\
    \ in produced yield in Kgs per 1000 m2\n20%\nAverage increase in saffron quality\
    \ per 1000 m2\n25%\n9. Challenges\nThe implementation and maintenance of a monitoring\
    \ system in precision agriculture faces\nseveral challenges. The greatest challenge\
    \ in the sensor layer is for sensor nodes to achieve efﬁcient and\ncontinuous\
    \ operation for a long time in a natural environment, while taking into account\
    \ the climate\nchange and wildlife interventions. The battery life of sensor nodes\
    \ is not considered satisfactory,\nand it is necessary to design and implement\
    \ energy-saving protocols with the highest possible\nsystem performance among\
    \ other precautions. In addition, depending on the type of application,\nthe supported\
    \ agricultural work and the implementation technologies, the problems that arise\
    \ can be\ndifferentiated. For instance, the use of sensors and controllers from\
    \ different manufacturers prevents\ncommunication between them and makes it more\
    \ difﬁcult to interconnect with other agricultural\ncomponents. Also, the sensor\
    \ inertia phenomenon was observed in a high-speed WSN due to non-steep\nchanges\
    \ in humidity and soil temperature.\nIn the network layer, the basic challenges\
    \ regarding the operation of a crop monitoring system\nwith WSN and IoT technologies\
    \ include the limited computational capabilities of sensor nodes.\nThe restricted\
    \ memory of the nodes disables them to handle large amounts of communication data\n\
    and cluster-based interconnection procedures. Due to this fact, long data queues\
    \ are created in each\nnode, leading to greater delay in transmissions. The same\
    \ outcome can be triggered by the long\ncommunication distance of sensor nodes.\
    \ One major issue that routing algorithms must deal with in\nsuch cases is the\
    \ high level of energy consumption, which leads to a reduction in the overall\
    \ viability\nof the network. In precision agriculture monitoring systems routing\
    \ protocols should offer minimum\ndelay, be able to provide efﬁcient services\
    \ in many sensor nodes, while taking into account the limited\nresources. They\
    \ should also be capable of accepting all sorts of environments including severe\
    \ and loss\nenvironments, while providing information security and privacy. Most\
    \ routing protocols use some\nlocalization technique to obtain knowledge concerning\
    \ their locations. The performance of the routing\nprotocol is a function of network\
    \ size and transmission media. Therefore, transmission media of good\nquality\
    \ enhances the network performance directly.\nHowever, in many cases the failure\
    \ of such advanced monitoring system may be due to the\ngeographic, cultural or\
    \ socio-economic distance between system designers and the intended user\ncommunity.\
    \ Cost is an important limiting factor in the implementation of such systems.\
    \ The cost\ndepends to a great extent on the quality of the materials and the\
    \ topology of the network.\n10. Conclusions\nThis paper proposes the architectural\
    \ components of a smart farming monitoring system, based on\nmodern IoT communication\
    \ technologies and WSN capabilities, in cooperation with energy-saving\nprotocol\
    \ schemes. A use case study based on the DIAS project is also presented, enhancing\
    \ the reliability\nand contribution of our model. The IoT agricultural applications\
    \ enable farmers to collect and analyze\nmeaningful data. Large landowners and\
    \ small farmers should welcome the potential of IoT market\nfor agriculture by\
    \ installing smart technologies to increase competitiveness and sustainability\
    \ in their\nproductions. The rapid growth of population forces farmers to meet\
    \ the demand by implementing\nagricultural IoT solutions in a prosperous manner.\
    \ In the future, an in-depth study will be carried out\nregarding the real-time\
    \ performance of the proposed model in the DIAS project.\nInformation 2019, 10,\
    \ 348\n23 of 25\nAuthor Contributions: Conceptualization, A.T., P.S. and S.B.;\
    \ Methodology, A.T., P.S. and S.B.; Writing—original\ndraft, A.T.; Writing—review\
    \ & editing, P.S. and S.B.\nFunding: This research was co-funded by the European\
    \ Union and Greek national funds through the Operational\nProgram Competitiveness,\
    \ Entrepreneurship, and Innovation, grant number T1EDK-04873, project “Drone\n\
    innovation in Saffron Agriculture,” DIAS.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nReferences\n1.\nGuillermo, J.C.; García-Cedeño, A.;\
    \ Rivas-Lalaleo, D.; Huerta, M.; Clotet, R. IoT Architecture Based on\nWireless\
    \ Sensor Network Applied to Agricultural Monitoring: A Case of Study of Cacao\
    \ Crops in Ecuador.\nIn Advances in Information and Communication Technologies\
    \ for Adapting Agriculture to Climate Change II; Springer\nInternational Publishing:\
    \ Cham, Switzerland, 2019; pp. 42–57.\n2.\nDonzia, S.K.Y.; Kim, H.K.; Hwang, H.J.\
    \ A Software Model for Precision Agriculture Framework Based on\nSmart Farming\
    \ System and Application of IoT Gateway. In Computational Science/Intelligence\
    \ and Applied\nInformatics; Lee, R., Ed.; Springer International Publishing: Cham,\
    \ Switzerland, 2019; pp. 49–58. [CrossRef]\n3.\nKoksal, O.; Tekinerdogan, B. Architecture\
    \ design approach for IoT-based farm management information\nsystems. Precis.\
    \ Agric. 2018, 20, 926–958. [CrossRef]\n4.\nKamilaris, A.; Gao, F.; Prenafeta-Boldu,\
    \ F.X.; Ali, M.I. Agri-IoT: A semantic framework for Internet of\nThings-enabled\
    \ smart farming applications. In Proceedings of the 2016 IEEE 3rd World Forum\
    \ on Internet of\nThings (WF-IoT), Reston, VA, USA, 12–14 December 2016; pp. 442–447.\
    \ [CrossRef]\n5.\nFerrandez, J.; Manuel García-Chamizo, J.; Nieto-Hidalgo, M.;\
    \ Mora-Pascual, J.; Mora-Martínez, J. Developing\nUbiquitous Sensor Network Platform\
    \ Using Internet of Things: Application in Precision Agriculture. Sensors\n2016,\
    \ 16, 1141. [CrossRef] [PubMed]\n6.\nVasisht, D.; Kapetanovic, Z.; Won, J.; Jin,\
    \ X.; Chandra, R.; Sinha, S.; Kapoor, A.; Sudarshan, M.; Stratman, S.\nFarmBeats:\
    \ An IoT Platform for Data-Driven Agriculture. In Proceedings of the 14th USENIX\
    \ Symposium on\nNetworked Systems Design and Implementation (NSDI 17), Boston,\
    \ MA, USA, 27–29 March 2017; USENIX\nAssociation: Berkeley, CA, USA, 2017; pp.\
    \ 515–529;\n7.\nAhmed, N.; De, D.; Hussain, I. Internet of Things (IoT) for Smart\
    \ Precision Agriculture and Farming in Rural\nAreas. IEEE Internet Things J. 2018,\
    \ 5, 4890–4899. [CrossRef]\n8.\nJi, M.; Yoon, J.; Choo, J.; Jang, M.; Smith, A.\
    \ LoRa-based Visual Monitoring Scheme for Agriculture\nIoT. In Proceedings of\
    \ the 2019 IEEE Sensors Applications Symposium (SAS), Sophia Antipolis, France,\n\
    11–13 March 2019; pp. 1–6. [CrossRef]\n9.\nFerrandez, J.; Manuel García-Chamizo,\
    \ J.; Nieto-Hidalgo, M.; Mora-Martínez, J. Precision Agriculture Design\nMethod\
    \ Using a Distributed Computing Architecture on Internet of Things Context. Sensors\
    \ 2018, 18, 1731.\n[CrossRef] [PubMed]\n10.\nTriantafyllou, A.; Sarigiannidis,\
    \ P.; Lagkas, T.D. Network Protocols, Schemes, and Mechanisms for Internet\nof\
    \ Things (IoT): Features, Open Challenges, and Trends. Wirel. Commun. Mob. Comput.\
    \ 2018, 2018, 5349894.\n[CrossRef]\n11.\nTriantafyllou, A.; Tsouros, D.C. ; Sarigiannidis,\
    \ P.; Bibi, S. An Architecture model for Smart Farming.\nIn Proceedings of the\
    \ 15th International Conference on Distributed Computing in Sensor Systems (DCOSS),\n\
    Santorini Island, Greece, 29–31 May 2019; pp. 385–392. [CrossRef]\n12.\nInternational\
    \ Organization for Standardization; ISO/IEC 7498-1: The Basic Model; Technical\
    \ Report; 1994;\nISO Central Secretariat, Chemin de Blandonnet 8, CP 401 - 1214\
    \ Vernier, Geneva, Switzerland. Available\nOnline: https://www.iso.org/standard/20269.html\
    \ (accessed on 5 November 2019).\n13.\nVuolo, F.; D’Urso, G.; Michele, C.D.; Bianchi,\
    \ B.; Cutting, M. Satellite-based irrigation advisory services:\nA common tool\
    \ for different experiences from Europe to Australia. Agric. Water Manag. 2015,\
    \ 147, 82–95.\n[CrossRef]\n14.\nBauer, J.; Aschenbruck, N. Design and implementation\
    \ of an agricultural monitoring system for smart\nfarming. In Proceedings of the\
    \ 2018 IoT Vertical and Topical Summit on Agriculture—Tuscany (IOT Tuscany),\n\
    Tuscany, Italy, 8–9 May 2018; pp. 1–6. [CrossRef]\nInformation 2019, 10, 348\n\
    24 of 25\n15.\nCalera, A.; Campos, I.; Osann, A.; D’Urso, G.; Menenti, M. Remote\
    \ Sensing for Crop Water Management:\nFrom ET Modelling to Services for the End\
    \ Users. Sensors 2017, 17, 1104. [CrossRef] [PubMed]\n16.\nPetropoulos, G.P.;\
    \ Srivastava, P.K.; Piles, M.; Pearson, S. Earth Observation-Based Operational\
    \ Estimation of\nSoil Moisture and Evapotranspiration for Agricultural Crops in\
    \ Support of Sustainable Water Management.\nSustainability 2018, 10, 181. [CrossRef]\n\
    17.\nAnzola, J.; García Díaz, V.; Jiménez, A. WSN analysis in grid topology for\
    \ potato crops for IoT. In Proceedings\nof the 4th Multidisciplinary International\
    \ Social Networks Conference, Bangkok, Thailand, 17–19 July 2017;\npp. 1–7. [CrossRef]\n\
    18.\nSarigiannidis, P.; Lagkas, T.; Bibi, S.; Ampatzoglou, A.; Bellavista, P.\
    \ Hybrid 5G optical-wireless SDN-based\nnetworks, challenges and open issues.\
    \ IET Netw. 2017, 6, 141–148. [CrossRef]\n19.\nJawad, H.M.; Nordin, R.; Gharghan,\
    \ S.K.; Jawad, A.M.; Ismail, M.; Abu-AlShaeer, M.J. Power Reduction\nwith Sleep/Wake\
    \ on Redundant Data (SWORD) in a Wireless Sensor Network for Energy-Efﬁcient Precision\n\
    Agriculture. Sensors 2018, 18, 3450. [CrossRef] [PubMed]\n20.\nKone, C.T.; Haﬁd,\
    \ A.; Boushaba, M. Performance Management of IEEE 802.15.4 Wireless Sensor Network\
    \ for\nPrecision Agriculture. IEEE Sens. J. 2015, 15, 5734–5747. [CrossRef]\n\
    21.\nDu, K.; Sun, Z.; Zheng, F.; Chu, J.; Ma, J. Monitoring System for Wheat Meterological\
    \ Disasters using\nWireless Sensor Networks. In Proceedings of the 2017 ASABE\
    \ Annual International Meeting, Spokane, WA,\nUSA, 16–19 July 2017. [CrossRef]\n\
    22.\nHeble, S.; Kumar, A.; Prasad, K.V.V.D.; Samirana, S.; Rajalakshmi, P.; Desai,\
    \ U.B. A low power IoT network\nfor smart agriculture. In Proceedings of the 2018\
    \ IEEE 4th World Forum on Internet of Things (WF-IoT),\nSingapore, 5–8 February\
    \ 2018; pp. 609–614. [CrossRef]\n23.\nAnurag, D.; Roy, S.; Bandyopadhyay, S. Agro-sense:\
    \ Precision agriculture using sensor-based wireless mesh\nnetworks. In Proceedings\
    \ of the 2008 First ITU-T Kaleidoscope Academic Conference—Innovations in NGN:\n\
    Future Network and Services, Geneva, Switzerland, 12–13 May 2008; pp. 383–388.\
    \ [CrossRef]\n24.\nEl-kader, S.M.A.; El-Basioni, B.M.M. Precision farming solution\
    \ in Egypt using the wireless sensor network\ntechnology. Egypt. Inform. J. 2013,\
    \ 14, 221–233. [CrossRef]\n25.\nAquino-Santos, R.; González, A.; Edwards-Block,\
    \ A.; Virgen Ortíz, R. Developing a New Wireless Sensor\nNetwork Platform and\
    \ Its Application in Precision Agriculture. Sensors 2011, 11, 1192–1211. [CrossRef]\n\
    [PubMed]\n26.\nChen, Y.; Chanet, J.P.; Hou, K.M.; Shi, H.; de Sousa, G. A Scalable\
    \ Context-Aware Objective Function (SCAOF)\nof Routing Protocol for Agricultural\
    \ Low-Power and Lossy Networks (RPAL). Sensors 2015, 15, 19507–19540.\n[CrossRef]\
    \ [PubMed]\n27.\nWeber, P.; Jäckle, D.; Rahusen, D.; Sikora, A. IPv6 over LoRaWANTM.\
    \ In Proceedings of the 2016 3rd\nInternational Symposium on Wireless Systems\
    \ within the Conferences on Intelligent Data Acquisition and\nAdvanced Computing\
    \ Systems (IDAACS-SWS), Offenburg, Germany, 26–27 September 2016; pp. 75–79.\n\
    [CrossRef]\n28.\nSobral, J.V.V.; Rodrigues, J.J.P.C.; Rabêlo, R.A.L.; Saleem,\
    \ K.; Furtado, V. LOADng-IoT: An Enhanced Routing\nProtocol for Internet of Things\
    \ Applications over Low Power Networks. Sensors 2019, 19, 150. [CrossRef]\n[PubMed]\n\
    29.\nTukade, T.M.; Banakar, R. Data transfer protocols in IoT—An overview. Int.\
    \ J. Pure Appl. Math. 2018,\n118, 121–138.\n30.\nMihini/M3DA Speciﬁcation. Available\
    \ Online: https://wiki.eclipse.org/Mihini/M3DA_Speciﬁcation\n(accessed on 5 November\
    \ 2019).\n31.\nOMA LightweightM2M. Available Online: https://www.omaspecworks.org/what-is-oma-specworks/iot/\n\
    lightweight-m2m-lwm2m/ (accessed on 5 November 2019).\n32.\noneM2M—Standards for\
    \ M2M and the Internet of Things. Available Online: http://www.onem2m.org/\n(accessed\
    \ on 5 November 2019).\n33.\nDDS Foundation. Available Online: https://www.dds-foundation.org/what-is-dds-3/\
    \ (accessed on 5\nNovember 2019).\n34.\nFIWARE NGSI. Available Online: https://forge.ﬁware.org/plugins/mediawiki/wiki/ﬁware/index.php/\n\
    FI-WARE_NGSI_Context_Management_tutorial (accessed on 5 November 2019).\n35.\n\
    OGC Implementation Standards. Available Online: https://www.opengeospatial.org/docs/is\
    \ (accessed on\n5 November 2019).\nInformation 2019, 10, 348\n25 of 25\n36.\n\
    Eleftherakis, G.; Pappas, D.; Lagkas, T.; Rousis, K.; Paunovski, O.\nArchitecting\
    \ the IoT Paradigm:\nA Middleware for Autonomous Distributed Sensor Networks.\
    \ Int. J. Distrib. Sens. Netw. 2015, 2015, 139735.\n[CrossRef]\n37.\nCapella,\
    \ J.V.; Campelo, J.C.; Bonastre, A.; Ors, R. A Reference Model for Monitoring\
    \ IoT WSN-Based\nApplications. Sensors 2016, 16, 1816. [CrossRef] [PubMed]\n38.\n\
    Ryu, M.; Yun, J.; Miao, T.; Ahn, I.; Choi, S.; Kim, J. Design and implementation\
    \ of a connected farm for smart\nfarming system. In Proceedings of the 2015 IEEE\
    \ SENSORS, Busan, Korea, 1–4 November 2015; pp. 1–4.\n[CrossRef]\n39.\nWolfert,\
    \ S.; Ge, L.; Verdouw, C.; Bogaardt, M.J. Big Data in Smart Farming—A review.\
    \ Agric. Syst. 2017,\n153, 69–80. [CrossRef]\n40.\nWestoby, M.; Brasington, J.;\
    \ Glasser, N.; Hambrey, M.; Reynolds, J. ‘Structure-from-Motion’ photogrammetry:\n\
    A low-cost, effective tool for geoscience applications. Geomorphology 2012, 179,\
    \ 300–314. [CrossRef]\n41.\nHuang, Y.; Reddy, K.N.; Fletcher, R.S.; Pennington,\
    \ D. In Proceedings of the UAV Low-Altitude Remote\nSensing for Precision Weed\
    \ Management. Weed Technol. 2018, 32, 2–6. [CrossRef]\n42.\nHuang, Y.; Chen, Z.X.;\
    \ Tao, Y.U.; Huang, X.Z.; Gu, X.F. Agricultural remote sensing big data: Management\n\
    and applications. J. Integr. Agric. 2018, 17, 1915–1931. [CrossRef]\n43.\nKeswani,\n\
    B.;\nMohapatra,\nA.G.;\nMohanty,\nA.;\nKhanna,\nA.;\nRodrigues,\nJ.J.P.C.;\nGupta,\n\
    D.;\nde Albuquerque, V.H.C. Adapting weather conditions based IoT enabled smart\
    \ irrigation technique in\nprecision agriculture mechanisms. Neural Comput. Appl.\
    \ 2019, 31, 277–292. [CrossRef]\n44.\nHamouda, Y.E.M.; Msallam, M.M. Smart heterogeneous\
    \ precision agriculture using wireless sensor network\nbased on extended Kalman\
    \ ﬁlter. Neural Comput. Appl. 2019, 31, 5653–5669. [CrossRef]\n45.\nCambra, C.;\
    \ Sendra, S.; Lloret, J.; Garcia, L. An IoT service-oriented system for agriculture\
    \ monitoring.\nIn Proceedings of the 2017 IEEE International Conference on Communications\
    \ (ICC), Paris, France,\n21–25 May 2017; pp. 1–6. [CrossRef]\n46.\nYoo, S.; Kim,\
    \ J.; Kim, T.; Ahn, S.; Sung, J.; Kim, D. A2S: Automated Agriculture System based\
    \ on WSN.\nIn Proceedings of the 2007 IEEE International Symposium on Consumer\
    \ Electronics, Irving, TX, USA,\n20–23 June 2007; pp. 1–5. [CrossRef]\n47.\nLagkas,\
    \ T.; Argyriou, V.; Bibi, S.; Sarigiannidis, P. UAV IoT Framework Views and Challenges:\
    \ Towards\nProtecting Drones as “Things”. Sensors 2018, 18, 4015. [CrossRef] [PubMed]\n\
    48.\nSharma, G.; Bala, S.; Verma, A.K. Security Frameworks for Wireless Sensor\
    \ Networks—Review. Procedia\nTechnol. 2012, 6, 978–987. [CrossRef]\n49.\nPu, C.Energy\
    \ Depletion Attack Against Routing Protocol in the Internet of Things. In Proceedings\
    \ of the\n2019 16th IEEE Annual Consumer Communications Networking Conference\
    \ (CCNC), Las Vegas, NV, USA,\n11–14 January 2019; pp. 1–4. [CrossRef]\n50.\n\
    Savarimuthu, N.; Vijayalakshmi, K.; Padmapriya, V.\nA Review of Network Layer\
    \ Attacks and\nCountermeasures in WSN. IJESC 2018, 10. [CrossRef]\n51.\nBeltran,\
    \ V.; Skarmeta, A.F.\nOverview of Device Access Control in the IoT and its Challenges.\n\
    IEEE Commun. Mag. 2019, 57, 154–160. [CrossRef]\n52.\nKumar, R.; Singh, V.; Devi,\
    \ K.; Sharma, M.; Singh, M.; Ahuja, P. State of Art of Saffron (Crocus sativus\
    \ L.)\nAgronomy: A Comprehensive Review. Food Rev. Int. 2008, 25, 44–85. [CrossRef]\n\
    53.\nMelfou, K.; Loizou, E.; Oxouzi, E.; Papanagiotou, E. Economic Performance\
    \ of Quality Labeled Saffron in\nGreece. Procedia Econ. Financ. 2015, 24, 419–425.\
    \ doi:10.1016/S2212-5671(15)00698-X. [CrossRef]\n54.\nvan Evert, F.; Gaitán-Cremaschi,\
    \ D.; Fountas, S.; Kempenaar, C. Can precision agriculture increase the\nproﬁtability\
    \ and sustainability of the production of potatoes and olives?\nSustainability\
    \ 2017, 9, 1863.\n[CrossRef]\n55.\nErickson, B.; Widmar, D.A. 2015 Precision Agricultural\
    \ Services Dealership Survey Results; Purdue University:\nWest Lafayette, IN,\
    \ USA, 2015\n56.\nBaio, F.; Silva, S.; Camolese, H.; Neves, D. Financial analysis\
    \ of the investment in precision agriculture techniques\non cotton crop. Eng.\
    \ Agrícola 2017, 37, 838–847. [CrossRef]\nc⃝ 2019 by the authors. Licensee MDPI,\
    \ Basel, Switzerland. This article is an open access\narticle distributed under\
    \ the terms and conditions of the Creative Commons Attribution\n(CC BY) license\
    \ (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: (Triantafyllou et al. 2019)
  journal: Information (Basel)
  limitations: The paper does not provide specific details or experimental results
    on the performance of the proposed architecture with the use of advanced sensing
    technologies.
  pdf_link: https://www.mdpi.com/2078-2489/10/11/348/pdf
  publication_year: 2019
  relevance_evaluation: Highly relevant - The paper directly addresses the outline
    point by discussing the use of advanced sensing technologies, such as hyperspectral
    imaging and thermal sensing, in the sensor layer of their proposed architecture
    for non-invasive plant stress detection.
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: 'Precision Agriculture: A Remote Sensing Monitoring System Architecture †'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.14569/ijacsa.2023.01406123
  analysis: '>'
  apa_citation: 'Raouhi, E. M., Lachgar, M., Hrimech, H., & Kartit, A. (2023). Unmanned
    Aerial Vehicle-based Applications in Smart Farming: A Systematic Review. International
    Journal of Advanced Computer Science and Applications, 14(6), 1150-1160.'
  authors:
  - El Mehdi Raouhi
  - Mohamed Lachgar
  - Hamid Hrimech
  - Ali Kartit
  citation_count: 2
  explanation: 'The key points of the paper are as follows:


    1. Unmanned aerial vehicles (UAVs) and machine learning (ML) technologies are
    increasingly being used in smart farming to improve crop monitoring, irrigation
    management, and pest and disease control.


    2. UAVs can collect high-resolution imagery and other data that can be used to
    create detailed maps of fields and crops. This data can be used to identify areas
    of stress or disease, and to track the growth and development of crops.


    3. ML algorithms can be used to analyze the data collected by UAVs and identify
    patterns and trends that would be difficult to detect manually. This information
    can be used to make better decisions about crop management, and to improve the
    efficiency and sustainability of agricultural operations.


    4. The integration of UAVs and ML in smart farming is a rapidly growing field,
    and there is a great deal of potential for these technologies to improve the productivity
    and profitability of agriculture.


    The relevance of the paper to the specific point mentioned in the outline is that
    it provides an overview of the current state-of-the-art in UAV-based applications
    in smart farming using AI, IoT, and cloud technologies. The paper also identifies
    gaps in the literature and suggests future research directions. This information
    is valuable for researchers, policymakers, and practitioners who are interested
    in the use of UAVs and other advanced technologies in smart farming.'
  full_citation: '>'
  full_text: '>

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Unmanned Aerial Vehicle-based Applications in

    Smart Farming: A Systematic Review

    El Mehdi Raouhi1, Mohamed Lachgar2, Hamid Hrimech3 Ali Kartit4

    LTI Laboratory, ENSA, University ChouaibDoukkali, El Jadida, Morocco1,2,4

    LAMSAD Laboratory, ENSA, University Settat, Berrechid, Morocco3

    Abstract—On one hand, the emergence of cutting-edge tech-

    nologies like AI, Cloud Computing, and IoT holds immense

    potential in Smart Farming and Precision Agriculture. These

    technologies enable real-time data collection, including high-

    resolution crop imagery, using Unmanned Aerial Vehicles (UAVs).

    Leveraging these advancements can revolutionize agriculture by

    facilitating faster decision-making, cost reduction, and increased

    yields. Such progress aligns with precision agriculture principles,

    optimizing practices for the right locations, times, and quantities.

    On the other hand, integrating UAVs in Smart Farming faces

    obstacles related to technology selection and deployment, par-

    ticularly in data acquisition and image processing. The relative

    novelty of UAV utilization in Precision Agriculture contributes to

    the lack of standardized workflows. Consequently, the widespread

    adoption and implementation of UAV technologies in farming

    practices are hindered. This paper addresses these challenges by

    conducting a comprehensive review of recent UAV applications

    in Precision Agriculture. It explores common applications, UAV

    types, data acquisition techniques, and image processing methods

    to provide a clear understanding of each technology’s advantages

    and limitations. By gaining insights into the advantages and

    challenges associated with UAV-based applications in Precision

    Agriculture, this study aims to contribute to the development

    of standardized workflows and improve the adoption of UAV

    technologies.

    Keywords—Artificial intelligence; internet of things; sensor; big

    data; cloud; unmanned aerial vehicle; smart farming

    I.

    INTRODUCTION

    The agriculture industry is currently undergoing a sig-

    nificant transformation fueled by cutting-edge technologies,

    offering promising prospects for enhanced farm productivity

    and profitability. Precision Agriculture, which focuses on the

    precise application of inputs where and when they are needed,

    represents the third stage of the modern agricultural revolution.

    Advanced farm knowledge systems, empowered by the abun-

    dance of data, have further propelled the evolution of Preci-

    sion Agriculture [1]. Numerous studies have demonstrated the

    positive impacts of adopting Precision Agriculture technolo-

    gies, such as increased net returns and operating profits, as

    reported by the U.S. Department of Agriculture (USDA) [2].

    Moreover, there is a growing emphasis on implementing these

    technologies in environmentally conscious ways to ensure

    sustainable farm production. However, effectively harnessing

    the vast amount of data generated by crops remains a persistent

    challenge [3].

    To address these challenges, it is crucial to explore and

    integrate cutting-edge technologies in the realm of Smart

    Farming and Precision Agriculture. Unmanned Aerial Vehicles

    (UAVs), Cloud Computing, Internet of Things (IoT), Big Data

    analytics, and Artificial Intelligence (AI) have emerged as key

    enablers of innovation in this domain [4]. UAVs equipped with

    advanced sensors and imaging capabilities allow for real-time

    data collection, including high-resolution imagery of crops.

    Cloud Computing provides the infrastructure for data storage,

    processing, and analysis, while IoT facilitates the seamless

    integration of various agricultural devices and sensors. Big

    Data analytics and AI techniques enable intelligent insights

    and decision-making based on the collected data [5], [6].

    This paper aims to delve into the theoretical background

    and related work of UAV, Cloud, IoT, Big Data, and AI

    approaches in Smart Farming and Precision Agriculture. Ad-

    ditionally, authors propose a comprehensive systematic review

    study that investigates the current state of research and de-

    velopment in this area. By analyzing existing literature, in

    order to identify the gaps, challenges, and opportunities for

    utilizing these technologies in the context of Smart Farming

    and Precision Agriculture, Fig. 1, depicted below, offers valu-

    able insights into the evolution characteristics and challenges

    of agricultural development, spanning from Farming 1.0 to

    Farming 5.0. This figure serves as a valuable tool to showcase

    the effective utilization and evolution of technologies within

    the realms of Smart Farming and Precision Agriculture. The

    problem statement of this study revolves around the lack

    of a standardized framework for leveraging UAVs, Cloud

    Computing, IoT, Big Data, and AI in Smart Farming and

    Precision Agriculture. This lack of standardization hinders the

    widespread adoption and implementation of these technolo-

    gies, limiting their potential benefits for farmers, agricultural

    productivity, and sustainable practices. To address this prob-

    lem, our proposed solution is to conduct a systematic review

    that synthesizes existing research, identifies key insights, and

    provides recommendations for the development of standard-

    ized frameworks and practices in this field.

    The motivation behind this work stems from the immense

    potential of integrating UAVs, Cloud Computing, IoT, Big Data

    analytics, and AI in Smart Farming and Precision Agriculture.

    By leveraging these technologies effectively, farmers can make

    faster and more informed decisions, reduce costs, optimize

    resource utilization, and increase yields. Moreover, this inte-

    gration aligns with the growing demand for sustainable farming

    practices and the need to meet the rising global food demands.

    The contribution of this paper lies in the comprehensive review

    of existing literature, which consolidates knowledge, identifies

    research gaps, and proposes recommendations for the future

    development of Smart Farming and Precision Agriculture.

    By providing insights into the theoretical foundations, related

    work, problem statement, proposed solution, and motivation,

    www.ijacsa.thesai.org

    1150 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Fig. 1. Characteristics and challenges of agricultural development (from Farming
    1.0 to Farming 5.0.

    in order to advance the understanding and adoption of UAVs,

    Cloud Computing, IoT, Big Data analytics, and AI in the

    agricultural domain.

    This paper is structured as follows. Firstly, Section 1

    presents the theorical background of UAV, Cloud, IoT, Big

    Data and AI approaches. Afterwards, current technical compo-

    nents of Smart farning and precision agriculture in the research

    area are specified. Within this section, a more in-depth reflec-

    tion is carried out on the rising of AI and IoT in smart farming.

    Secondly, Section 2 describes the detailed process steps of the

    systematic review and the defined research methodology of this

    study. Then, Section 3 summarizes the research results. Section

    4 describes the discussion with challenges and future directions

    of this research study. Finally, a conclusion is presented in the

    last section of this paper.

    II.

    BACKGROUND

    A. Unnamed Aerial Vehicles for Agriculture

    Unmanned Aerial Systems (UAS), also known as drones,

    have become increasingly popular in agriculture due to their

    ability to provide a quick, cost-effective and efficient way to

    gather data and perform tasks on large fields and crops [7].

    UAS (Unmanned Aerial Systems) indeed come in different

    types and can be equipped with a variety of sensors and

    cameras presented in Fig. 2 that can capture high-resolution

    images, aerial maps and thermal imagery, which can be used

    for a range of agriculture applications, including:

    •

    Crop monitoring: UAS can be used to gather real-time

    data on crop health, growth, and yield potential.

    •

    Irrigation management: Drones can be equipped with

    infrared cameras to identify areas that are in need of

    irrigation and to help optimize water use.

    •

    Pest and disease management: Drones can be used

    to detect and map the spread of pests and diseases in

    crops, helping farmers to take timely action to prevent

    or treat these issues.

    •

    Field mapping: UAS can produce high-resolution

    maps of fields, providing data on soil structure, to-

    pography, and plant populations, which can be used to

    make informed decisions about planting, fertilization

    and other aspects of crop management.

    •

    Livestock management: Drones can be used to monitor

    the health and behavior of livestock, as well as to keep

    track of the location of animals.

    Overall, the use of UAS in agriculture provides a new tool for

    farmers to gather data, monitor their crops and make more

    informed decisions, ultimately leading to improved yields,

    increased efficiency and reduced costs.

    B. Cloud, Internet of Things, Big data and IA

    1) Cloud: computing plays a crucial role in smart farming,

    which is an application of the Internet of Things (IoT) in

    agriculture. The cloud enables farmers to store, process, and

    analyze large amounts of data generated from various IoT

    devices and sensors on their farms [9]. This data can include

    information on weather patterns, soil moisture levels, crop

    growth, and even the health of livestock. By analyzing this data

    in real-time, farmers can make more informed decisions about

    crop management and animal husbandry, leading to increased

    productivity and efficiency.

    Additionally, cloud-based solutions can provide farmers

    with access to advanced algorithms and predictive analytics

    tools that can help them optimize their farming operations.

    For example, cloud-based machine learning models can predict

    www.ijacsa.thesai.org

    1151 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Fig. 2. Different types of agricultural UAVs (Harvesting UAV, Spraying UAV, Mapping
    UAV, Sensing UAV) [8].

    crop yields, identify pest infestations, and suggest the most

    appropriate treatments. Furthermore, the cloud allows farmers

    to monitor their farms remotely and receive real-time updates

    on conditions and activities.

    2) Internet of Things: The concept of the Internet of Things

    (IoT) pertains to a network comprising physical devices,

    vehicles, appliances, and various objects. These entities are

    equipped with sensors, software, and connectivity features that

    empower them to gather and exchange data via the internet.

    These connected devices can communicate and interact with

    each other, as well as with humans, creating a vast ecosystem

    of interconnected systems [10]. The IoT has the potential to

    revolutionize various sectors, including agriculture, healthcare,

    transportation, smart homes, and many others, by enabling

    increased automation, efficiency, and data-driven decision-

    making. In smart farming, IoT is used to gather real-time data

    from various sources such as weather stations, soil moisture

    sensors, and crop and animal monitoring systems.

    IoT devices and sensors in smart farming can range from

    simple weather sensors to more complex systems such as pre-

    cision agriculture systems that use Global Positioning System

    (GPS) to monitor the growth and health of crops. These devices

    can also be connected to irrigation systems, allowing farmers

    to control the amount of water they use based on real-time

    soil moisture levels. One of the key benefits of IoT in smart

    farming is that it enables farmers to make data-driven decisions

    in real-time. This leads to more efficient use of resources and

    improved crop yields. IoT also enables farmers to monitor their

    farms remotely, reducing the need for on-site visits and freeing

    up more time for other tasks.

    In addition to its direct benefits, IoT in smart farming

    can also help address important global challenges such as

    food security and sustainability [11]. By using technology to

    optimize their operations, farmers can produce more food using

    fewer resources, reducing their carbon footprint and helping to

    ensure that future generations have access to safe and healthy

    food. Overall, the Internet of Things is revolutionizing the way

    farming is done and is poised to play a crucial role in the future

    of agriculture.

    Wireless Sensor Networks (WSNs) are networks of small,

    low-cost, and low-power devices that can be used to monitor

    and collect data from the environment [12]. These devices,

    called “nodes”, are equipped with sensors, microcontrollers,

    and wireless communication capabilities, allowing them to

    transmit data wirelessly to a central location for analysis.

    WSNs are widely used in a variety of applications, in-

    cluding smart farming, where they are used to monitor soil

    moisture, temperature, light, and other environmental param-

    eters that affect crop growth [13]. The data collected by the

    sensor nodes can be used to make informed decisions about

    irrigation, fertilization, and other agricultural practices, leading

    to increased efficiency and higher crop yields.

    One of the key benefits of WSNs is that they are low-cost

    and easy to deploy, making them accessible to farmers of all

    sizes and resources. They are also scalable, allowing farmers

    to add more nodes as their needs grow [14]. Finally, a review

    of 77 research papers published between 2012 and 2022 on

    the implementation of IoT in various agricultural applications

    showed that roughly 16% focused on precision agriculture

    and the same percentage on irrigation monitoring. 13% of

    the papers delved into soil monitoring, while temperature and

    animal monitoring were each covered in 11% of the research.

    Air and disease monitoring each received 5% of attention, with

    water monitoring accounting for 7%. Fertilization monitoring

    was the least studied, with only 4% of the research papers

    devoted to it in [15].

    C. Big Data

    Big Data plays a significant role in the context of smart

    farming. Smart farming involves the application of advanced

    technologies, such as sensors, Internet of Things (IoT) de-

    vices, and data analytics, to enhance agricultural practices and

    decision-making processes [16]. These technologies generate

    vast amounts of data from various sources, including weather

    conditions, soil moisture levels, crop health indicators, and

    machinery performance.

    www.ijacsa.thesai.org

    1152 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Big Data analytics allows for the collection, storage, pro-

    cessing, and analysis of large volumes of agricultural data in

    real-time or near-real-time. By applying advanced analytics

    techniques, such as machine learning and predictive model-

    ing, valuable insights can be extracted from this data. These

    insights can help optimize farming practices, improve resource

    allocation, enhance crop yield, and enable more informed

    decision-making for farmers and agricultural stakeholders [17].

    Furthermore, Big Data analytics can enable predictive capa-

    bilities in smart farming. By leveraging historical data and

    machine learning algorithms, models can be developed to

    forecast disease outbreaks, pests infestation, crop yield, and

    market demand. These predictive insights empower farmers to

    make proactive decisions, mitigate risks, and optimize resource

    allocation. In summary, the integration of Big Data analyt-

    ics in smart farming allows for data-driven decision-making,

    optimization of agricultural practices, and the potential for

    increased productivity, sustainability, and profitability in the

    agriculture industry [18], [19].

    D. Artificial Intelligence

    Artificial Intelligence (AI) encompasses the creation of

    computer systems capable of executing tasks typically requir-

    ing human intelligence, including pattern recognition, predic-

    tion, and learning from experience. In smart farming, AI is

    used to automate various processes and make more informed

    decisions [16]. One of the key applications of AI in smart

    farming is precision agriculture, where AI algorithms are used

    to analyze data from various sources, such as weather stations

    and sensors, to determine the best practices for growing crops.

    For example, AI can be used to optimize irrigation and fer-

    tilization practices, leading to increased efficiency and higher

    yields. AI can also be used in animal husbandry to monitor

    the health and behavior of livestock. Also, AI algorithms can

    be used to detect signs of illness in animals, such as changes

    in their heart rate or behavior, and alert farmers to take action.

    Another application of AI in smart farming is in the detection

    and control of pests and diseases. AI algorithms can be used to

    analyze images of crops and detect signs of pests or diseases,

    allowing farmers to take proactive measures to address them. In

    conclusion, AI is a valuable tool in the development of smart

    farming, enabling farmers to make more informed decisions

    and automate various processes [20]. By using AI, farmers can

    improve efficiency, increase yields, and reduce waste, making

    a valuable contribution to the future of agriculture. However,

    it’s important to note that while AI has the potential to greatly

    benefit the agriculture industry; it also presents challenges,

    such as the need for large amounts of data and the potential

    for bias in algorithms. Thus, it’s important to approach the

    integration of AI in smart farming with caution and a focus

    on ethical and sustainable practices.

    III.

    METHODOLOGY

    In recent years, the academic community has extensively

    analyzed numerous works related to smart farming develop-

    ment from various perspectives. For instance, [21] introduced a

    systematic review focusing on precision farming. Then, authors

    in [22] provided a review on technologies in precision agricul-

    ture, highlighting innovations, technologies, and applications.

    Also, authors in [23] explored the use of big data on smart

    farming, emphasizing the primary opportunities and challenges

    associated with this technology. Additionally, [24] conducted a

    quantitative literature review, offering an overview of academic

    production in smart farming.

    In order to enhance the existing analyses, the present

    study seeks to conduct a comprehensive review of UAV based

    applications in the field of smart farming. To accomplish this

    objective, we employed the Preferred Reporting Items for

    Systematic Reviews (PRISMA) methodology [25], a frame-

    work specifically designed to facilitate literature reports and

    systematic reviews. In October 2022, authors conducted a

    search using the available search tool on the Scopus database

    website. Additionally, another search was performed in april

    2023 within the same database to include papers published

    in the year 2023. Scopus was selected due to its exten-

    sive coverage and relevance in similar bibliographic reviews

    mentioned in [24] and [26]. Our search strategy focused

    on terms related to technological applications in agriculture,

    such as “Precision Agriculture,” “Precision Farming,” “Smart

    Farming,” and “Smart Agriculture,” in conjunction with “UAV”

    and related terms. The publication date of articles was not a

    basis for exclusion. However, we restricted our research scope

    to journal and conference articles published in English. To

    ensure methodological rigor, this systematic review adhered to

    the guidelines outlined in the Preferred Reporting Items for

    Systematic Reviews and Meta-Analyses (PRISMA), with the

    most recent version being 2020. In Table I, you will find a

    compilation of the research questions (RQ) that the Systematic

    Literature Review (SLR) aims to address.

    In this paper, a systematic literature review (SLR) was

    conducted to assess recent research papers on the use of IoT,

    Big data, Cloud & AI techniques in the field of Smart farm-

    ing. However, advancements in technology and the increasing

    availability of digital resources have led to the development of

    new systematic review process, but the traditional systematic

    literature review methodology remains the standard approach

    for conducting systematic reviews, new tools and techniques

    are emerging that can enhance the process and provide addi-

    tional benefits to researchers and decision-makers. However,

    it is important to consider the limitations of these new ap-

    proaches and to ensure that the results of the systematic review

    remain reliable and trustworthy. The following are the steps

    involved in the systematic literature review methodology: In

    this context, lookup has produced a plethora of SLR standards

    that should be observed to reap tremendous empirical research.

    In this paper, we concentrate on the SLR guidelines proposed

    by authors in [19], which can be classified into the following

    categories. There are four steps:

    •

    Step 1: Identifying the research goal(s).

    •

    Step 2: Research subject framing (conceptual bound-

    aries).

    •

    Step 3: Using inclusion/exclusion criteria to collect

    data.

    •

    Step 4: Validation of the research findings is the fourth

    step.

    www.ijacsa.thesai.org

    1153 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    TABLE I. RESEARCH QUESTIONS OF THE STUDY

    Number

    Research Question (RQ)

    RQ1

    What are the various applications of UAVs in Precision Agriculture?

    RQ2

    Which crops are monitored by UAV systems?

    RQ3

    How can UAV-based technologies be adapted for use in different types

    of crops or farming environments?

    RQ4

    What types of data can be obtained through the use of UAVs?

    RQ5

    Which methods of data processing can be employed to analyze the

    agricultural data collected by UAVs?

    RQ6

    What are the challenges associated with using drones for disease

    detection in agriculture?

    RQ7

    What are the potential ethical and legal implications associated with

    the use of drones in agriculture, and how can these issues be ad-

    dressed?

    A. Research Objectives

    This study attempts to systematically analyze possible

    future possibilities for IoT, Cloud, Big Data and AI in Smart

    Farming by analyzing current knowledge and the state of the

    research, with a focus on recent research advancements. This

    paper is interested in learning how this study topic has changed

    throughout time. Furthermore, the outcomes of the evaluation

    will be utilized to identify critical activities for future study as

    well as practical applications.

    B. Framing of the Research Subject

    The goal of this study is to evaluate Big Data, Cloud,

    internet of things, artificial intelligence technologies for Smart

    Farming in a systematic way. As a result, the research subject,

    i.e. the conceptual boundaries, were defined in the agriculture

    environment using the terms “Unnamed Aerial Vehicle”, “Big

    Data”, “Cloud”, “internet of things”, “artificial intelligence”

    and related concepts “machine learning” and “deep learning.”

    The following Table II displays the Inclusion and exclusion

    criteria identified to refine the search request.

    C. Data Collection by Using Criteria

    A definition of search parameters, databases, search key-

    words, and publication time is also required by the SLR.

    The selection of search resources and the choice of search

    phrases are both part of the search strategy. To find the papers,

    automated search engine from the most relevant sources were

    chosen: Scopus. A further examination of similar databases

    (ACM Digital Library and Emerald) revealed significant vari-

    ations in the research studies that resulted. As a result, Scopus

    was used as the primary database for secondary data evaluation

    in this research study. The systematic research approach [24]

    and the inclusion and exclusion criterias, which are based on

    the process query depicted in Fig. 3.

    Screening the article title, abstract, and keywords for rele-

    vant literature for Blockchain, IoT and AI in the subject areas

    of management was the first step. We included a variety of

    document formats in this stage and limited them to the English

    language. This first method was mostly utilized to obtain a

    sense of where research was at the time. As a result, the study

    was not limited intialy to a specific period. In total, 536 studies

    were found as a result of this method. We concentrated on

    studies in the areas of Smart Farming and Precision Agriculture

    in the second step. As a consequence, we narrowed down

    the previously identified 536 publications to 186 papers that

    contained the terms Smart Farming or Precision Agriculture.

    TABLE II. INCLUSION CRITERIA (IC) AND EXCLUSION CRITERIA (EC).

    Number

    Question

    IC1

    Paper published in a peer reviewed scientific journal

    IC2

    Works published in English

    IC3

    Articles on Computer Science Subject Area

    IC4

    Keywords on Agriculture, Unmanned Aerial Vehicles, Machine Learn-

    ing

    EC1

    Reviews, conference papers, conference reviews, letters, books, book

    chapters and editorials are excluded from this study

    EC2

    Works that do not provide enough information on the methodology

    adopted and that do not report their results in a clear way are excluded.

    EC3

    Articles whose full text is not available are excluded

    TABLE III. QUALITY ASSESSMENT QUESTIONS

    Number

    Question

    Q1

    Have the study’s objectives been effectively communicated and de-

    fined?

    Q2

    Is the scope and context of the study clearly outlined and appropriately

    described?

    Q3

    Has the proposed solution been thoroughly explained and supported

    by empirical evidence?

    Q4

    Do the variables utilized in the study demonstrate both validity and

    reliability?

    Q5

    Is the research process adequately documented and transparent?

    Q6

    Have all the research questions been adequately addressed?

    Q7

    Are any negative findings presented or discussed within the study?

    Q8

    Are the main findings clearly stated, emphasizing credibility, validity,

    and reliability?

    Furthermore, we created a ranking of all detected keywords,

    which was utilized to verify the meta-search query for the

    current database investigation. In our research strategy, no

    important terms were left out. To evaluate only high-quality

    studies, the study was limited to conference papers, conference

    reviews, articles, or reviews in the third step. In conclusion,

    the final meta-search query was as follows:

    Research Query : (“UAV” OR “Unnamed Aerial Vehicle”)

    AND (“Machine Learning” OR “Deep Learning”) AND (“IoT

    technology” OR “IoT” OR “Internet of Things” OR “internet-

    of-things”) AND (“Smart Farming” OR “Smart Agriculture”

    OR “Precision Farming” OR “Precision Agriculture”) AND

    (“Cloud Computing”).

    The chosen papers were evaluated using eight quality

    assessment questions listed in Table III [27]. Scores of 1 (high

    quality), 0.5 (moderate quality), or 0 (poor quality) were given

    to each paper. Papers that received a total score below four

    were removed from the study.

    IV.

    RESULTS

    This section present the results obtained and content

    analysis on the complete texts of the identified papers. The

    initial stage of the selection process involved screening the

    title, abstract, and introduction of each paper to ascertain

    its relevance. The subsequent step was to eliminate papers

    that did not meet the exclusion criteria outlined in Table II.

    As a result, 80 papers were identified as the basis for the

    further research process. It is important to note that quotation

    marks are used to ensure that multi-word terms are searched

    together, preventing individual words from being considered

    separately. After conducting the search, the resulting articles

    were manually reviewed by analyzing their titles, keywords,

    abstracts, and texts. Duplicate articles were eliminated, and

    the remaining articles were assessed to determine whether

    www.ijacsa.thesai.org

    1154 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Fig. 3. Process steps of the systematic literature review.

    they were relevant to the study’s objectives. Valid articles

    were those that focused on IoT-based solutions for agricultural

    problems, were not literature reviews, were written in English,

    Portuguese, or Spanish, and pertained to agriculture rather than

    livestock activities. The study’s search and selection process is

    summarized in Fig. 4. The initial search yielded 536 articles,

    which were then analyzed and narrowed down to 186 articles

    that met the study’s eligibility criteria. During the screening

    phase, 350 articles were deemed invalid and discarded based on

    their lack of relevance to the study’s objectives. Of these, 65%

    did not focus on smart farming. Additionally, almost 35% of

    the discarded papers were literature reviews or studies related

    to smart farming that did not involve IoT. A small number

    of papers pertained to smart farming but did not address IoT

    (about 5% were related to sensors), and some papers had

    abstracts or texts that were not available (about 2%).

    In the eligibility phase, the content of the 80 remaining

    articles was reviewed using the same criteria as in the screening

    phase. Of these, 23 articles were discarded, with 27% not

    related to IoT and 32% not to smart farming. The remain-

    ing 41% were literature reviews or papers without available

    content. This research analysis conducted in 57 articles that

    were eligible for inclusion in the study’s sample.

    A. Description Analysis

    57 papers were ultimately assigned to the topic and rated as

    relevant for deep analysis, out of a total of 536 papers that had

    been previously identified regarding the application of Cloud,

    Big Data, IoT, AI, within UAV Application in Smart Farming.

    The distribution of the selected studies’ suitability, which was

    assessed by reading their titles and abstracts, the distribution

    of articles published per year is shown in Fig. 5, then the

    distribution of documents per year per source is provided

    in Fig. 6 and finally the Fig. 7 describe the distribution of

    documents by appropriateness.

    The decrease in research on the application of drones in

    precision agriculture may be multiple and dependent on vari-

    ous factors such as funding, research priorities, technological

    advancements, etc. However, some possible hypotheses can

    be suggested: Recent technological advancements may have

    solved a significant portion of the issues related to drone

    application in precision agriculture, thereby reducing the need

    for further research in this field. Funding for research in this

    field may have been reduced or directed towards other research

    areas. The scientific community may be transitioning to other

    agricultural monitoring technologies or methods, such as the

    use of remote sensors or satellites. It is also possible that the

    number of scientific publications on the subject has decreased,

    but research is still ongoing in other contexts as provided in

    the distribution of document by subject area provided in Fig.

    8, such as in the private industry. Ultimately, it is important to

    realize that the decrease in research in a given field does not

    necessarily imply that research should be abandoned or that

    previous results are no longer relevant. Existing research can

    still be used to improve existing applications and guide future

    research.

    Out of the 166 full texts in the field of smart farming

    that were found, 96 papers (58%) were rated as having high

    appropriateness, 53 papers (32%) as having medium appropri-

    ateness, and 17 papers (10%) as having low appropriateness in

    relation to the goal of this research project. Book chapters are

    of total of 21%, while research articles are 44%, and reviews

    are 23%.

    Based on the 166 complete articles that were found, Fig.

    8 displays the distribution of document types in the field of

    smart farming by subject area.

    B. Content Analysis

    The complete texts of the papers were reviewed and iden-

    tified in this section. Table IV summarizes the most important

    clusters, primary references, to group the chosen literature into

    related clusters, we engaged in a thorough content analysis.

    In addition Table V complete this set of research documents

    by UAV articles analyzed by characteristics and limitations

    identified in the survey.

    IoT (Internet of Things) technology is transforming the

    agricultural industry by enabling farmers to collect and an-

    alyze data from various sources to make informed decisions.

    However, like any technology, IoT also presents challenges and

    issues, particularly in the context of smart farming. Table VI

    provides a comparison of IoT issues and challenges in smart

    farming:

    www.ijacsa.thesai.org

    1155 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Fig. 4. Flow chart of databases search criteria and identification process of
    records.

    Fig. 5. Distribution of articles published per year.

    RQ1. WHAT ARE THE VARIOUS APPLICATIONS OF UAVS

    IN PRECISION AGRICULTURE?

    The use of Artificial Intelligence (AI) and cloud technol-

    ogy in Unmanned Aerial Vehicles (UAVs) has brought about

    significant improvements in smart farming. Here are some of

    the impacts:

    •

    Soil Analysis: UAVs can be used to collect soil

    samples, analyze soil moisture levels, and assess soil

    quality, which can help farmers optimize fertilization

    and irrigation practices.

    •

    Planting: UAVs can be used to plant seeds precisely

    and efficiently, reducing labor costs and increasing

    planting accuracy. Crop spraying: UAVs equipped

    with spraying systems can be used to apply pesticides,

    herbicides, and fertilizers accurately, reducing the en-

    Fig. 6. Distribution of documents per year per source.

    Fig. 7. Distribution of document by appropriateness.

    www.ijacsa.thesai.org

    1156 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    TABLE IV. SELECTED PRIMARY STUDIES IN SCOPUS

    Ref

    Authors

    Year

    Technology and Subject Area

    [28]

    I. Buja et al.

    2021

    Plant diseases

    [29]

    K.A. Awan et al.

    2020

    Cloud based IoT

    [30]

    M.E. P´erez-Pons

    et al.

    2021

    Sustainable agricultural market

    [20]

    P. Placidi et al.

    2021

    Crop health monitoring

    [22]

    T. Kawai

    2021

    Agricultural systems

    [12]

    A.Z. Bayih et al.

    2022

    Sustainable Smallholder Agricul-

    ture

    [[13]

    T. Qayyum et al.

    2022

    Clustering model in smart farming

    [14]

    J. Bravo-Arrabal

    et al.

    2021

    The internet of cooperative agents

    [9]

    D. Loukatos et al.

    2023

    Malfunction Detection of Water

    Pump Equipment

    [11]

    N.N.

    Thilakarathne

    et al.

    2022

    Crop Recommendation Platform

    [10]

    A. Saleh et al.

    2022

    Edge Node for IoT-Enabled Sensor

    Networks

    [3]

    A. Cravero et al.

    2022

    Agricultural Big Data

    [6]

    G. Giray et C.

    Catal

    2021

    Sustainable agriculture

    [1]

    S. Pal et al.

    2023

    IoT-Based Smart Farming

    [31]

    Z. Nurlan et al.

    2022

    Wireless Sensor Network

    [32]

    F.S. Alrayes et al.

    2023

    Fuzzy Logic-IoT-Cloud Environ-

    ment

    [33]

    S.S. Sarnin et al.

    2019

    Smart insects repeller

    [15]

    Y. Liu et al.

    2022

    Intelligent Data Management Sys-

    tem

    [34]

    P. Deepika et B.

    Arthi

    2022

    Plant pest detection

    [35]

    K. Sharma et al.

    2022

    Predictive Analysis and Smart agri-

    culture

    [36]

    W. Zhao et al.

    2023

    Smart Irrigation and Crop Monitor-

    ing

    [37]

    T. Sutikno et D.

    Thalmann

    2022

    Internet of things

    [38]

    A.

    Zervopoulos

    et al.

    2020

    Wireless sensor network synchro-

    nization

    [39]

    C.G.V.N. Prasad

    et al.

    2022

    Edge Computing and Blockchain

    [40]

    M.L. Rathod et

    al.

    2022

    Cloud Computing and Networking

    [41]

    C.H. Wu et al.

    2020

    Long Short-Term Memory

    [42]

    S. Yadav et al.

    2022

    Disruptive Technologies - Senti-

    ment Analysis.

    [43]

    C. Bersani et al.

    2022

    Monitoring and Control of Smart

    Greenhouses

    [44]

    M. Junaid et al.

    2021

    Smart agriculture cloud

    [45]

    J. Almutairi et al.

    2022

    UAV-Enabled

    Edge-Cloud

    Com-

    puting Systems

    [46]

    B. Almadani et

    S.M. Mostafa

    2021

    IoT based multimodal communica-

    tion model

    [47]

    A.S.P. Pamula et

    al.

    2022

    Real-Time Monitoring

    [48]

    E. Petkov et al.

    2023

    Smart Egg Incubation

    [49]

    S. Chaterji et al.

    2021

    Digital Agriculture

    [50]

    S. Katiyar et A.

    Farhana

    2021

    Artificial Intelligence and IoT

    [51]

    M.Z. Islam et al.

    2022

    QoS Provisioning

    [52]

    Y. Gong et al.

    2022

    Grid-Based coverage path planning

    [53]

    R. Winkler

    2021

    Environmental monitoring

    Fig. 8. Distribution of document by subject area.

    vironmental impact and saving time and money.

    •

    Irrigation Management: UAVs equipped with thermal

    sensors can be used to identify areas of the field that

    need irrigation, allowing farmers to optimize water

    usage and reduce waste.

    •

    Yield Mapping: UAVs can be used to generate yield

    maps, which can help farmers optimize crop manage-

    ment practices and increase overall yield.

    •

    Livestock Monitoring: UAVs equipped with cameras

    can be used to monitor livestock, detect health prob-

    lems, and track animal behavior.

    •

    Crop Monitoring: UAVs equipped with sensors and

    cameras can be used to monitor crop health and

    growth, detect diseases, pests, and stress factors af-

    fecting the crop and generate crop health maps.

    The integration of AI and cloud technology in UAVs has

    brought about significant improvements in smart farming. It

    has enabled precision agriculture, increased efficiency, reduced

    environmental impact, and enabled real-time monitoring of

    farm operations. Also, drones have revolutionized many in-

    dustries, including precision agriculture. So the Fig. 9 provide

    significant UAV applications in precision agriculture using

    AI and Cloud Technologies. Overall, UAVs can significantly

    improve efficiency, accuracy, and sustainability in precision

    agriculture, making it a valuable tool for modern farmers.

    RQ2. WHICH CROPS ARE MONITORED BY UAV

    SYSTEMS?

    Unmanned Aerial Vehicle (UAV) systems are increasingly

    being used for crop monitoring and management in agriculture.

    Various types of crops can be monitored using UAV systems,

    including different Cereals. These crops are often monitored

    for growth stages, yield prediction, and disease detection [63].

    Fruits and vegetables: Such as grapes, citrus, apples, tomatoes,

    and potatoes. UAV systems can monitor the growth and health

    of these crops, detect pests and diseases, and assess yield.

    Oilseeds: Such as soybeans, sunflowers, and canola. UAV

    systems can be used to monitor crop growth, assess the health

    of plants, and predict yields. Specialty crops: Such as coffee,

    tea, cocoa, and tobacco. UAV systems can help monitor the

    health of these crops, detect early signs of disease or pest

    www.ijacsa.thesai.org

    1157 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    TABLE V. CHARACTERISTICS AND LIMITATIONS OF THE RESEARCH: SET OF UAV ANALYZED
    ARTICLES BY PUBLICATION YEAR, SHORT DESCRIPTION,

    AUTHOR AND AREA OF APPLICATION

    Reference

    Author

    Publication

    year

    Description

    Characteristics

    Limitations

    [54]

    N. A. Sehree

    and

    A.

    M.

    Khidhir

    2022

    Classification of olive tree

    cases based on deep con-

    volutional neural network

    using unmanned aerial ve-

    hicle (UAV) imagery

    This paper proposes a framework

    that integrates UAVs with IoT and

    cloud computing for smart agricul-

    ture. The authors demonstrate the

    feasibility of the proposed frame-

    work through a case study. They

    conclude that the proposed frame-

    work can improve crop yield and

    reduce costs for farmers.

    The authors primarily focus on the

    challenges associated with imple-

    menting UAV-based systems, rather

    than discussing potential solutions

    or strategies for overcoming these

    challenges. While this is an im-

    portant aspect to consider, a more

    detailed analysis of potential solu-

    tions or strategies could be useful

    for practitioners and researchers in

    the field.

    [55]

    J. M. Jurado

    et al.

    2020

    Individual

    charac-

    terization

    of

    olive

    trees

    through

    multi-

    temporal monitoring and

    multispectral mapping on

    3D models.

    This study proposes an intelligent

    UAV-based system that uses deep

    learning and IoT for crop growth

    monitoring. The authors demon-

    strate the effectiveness of the pro-

    posed system through experiments.

    They conclude that the proposed

    system can accurately monitor crop

    growth and help farmers make in-

    formed decisions.

    The authors used a greenhouse to

    conduct their experiments, which

    may not accurately reflect the chal-

    lenges and limitations of imple-

    menting a UAV-based crop moni-

    toring system in an outdoor agri-

    cultural environment.

    [56]

    P. Rallo et al.

    2020

    Investigating the use of

    UAV imagery to enhance

    genotype selection in olive

    breeding programs.

    This

    paper

    proposes

    a

    novel

    approach

    to

    weed

    detection

    in

    smart

    agriculture

    using

    UAVs

    and deep learning. The authors

    demonstrate the effectiveness of

    the

    proposed

    approach

    through

    experiments.

    They

    conclude

    that the proposed approach can

    accurately

    detect

    weeds

    and

    help farmers reduce the use of

    herbicides.

    The authors used only one type

    of UAV (a DJI Phantom 4 Pro

    drone) for their experiments. Dif-

    ferent types of UAVs have differ-

    ent capabilities, such as flight time,

    payload capacity, and camera qual-

    ity, which could impact the effec-

    tiveness and accuracy of a UAV-

    based weed detection system.

    [57]

    A. Safonova

    et al.

    2021

    Estimating the biovolume

    of olive trees using multi-

    resolution image segmen-

    tation with Mask Region-

    based Convolutional Neu-

    ral Network (R-CNN) on

    UAV imagery.

    The authors demonstrate the fea-

    sibility of the proposed system

    through experiments. They con-

    clude that the proposed system

    can improve crop yield and reduce

    costs for farmers.

    The authors do not address any po-

    tential security or privacy concerns

    related to the use of IoT and UAV-

    based systems in smart farming.

    [58]

    A. Di Nisio

    et al.

    2020

    Rapid

    detection

    of

    olive

    trees

    affected

    by

    Xylella

    fastidiosa

    using

    multispectral

    imaging

    from UAVs.

    This study proposes a UAV-based

    smart farming system that uses

    machine learning and cloud com-

    puting. The authors demonstrate

    the effectiveness of the proposed

    system through experiments. They

    conclude that the proposed system

    can improve crop yield and reduce

    costs for farmers

    The

    system’s

    ability

    to

    handle

    varying weather conditions, crop

    types, and growth stages. Addition-

    ally, the authors do not discuss any

    potential environmental impacts of

    using UAVs for crop monitoring

    and the potential disruption to local

    wildlife.

    [59]

    A.

    Castrignan`o

    et al.

    2021

    Development of a semi-

    automatic approach to de-

    tect Xylella fastidiosa in

    olive trees at an early

    stage. This method uti-

    lizes

    UAV

    multispectral

    imagery.

    This study proposes a UAV-based

    crop monitoring system that uses

    IoT

    The study may have only tested the

    UAV-based crop monitoring system

    in a limited range of environmental

    conditions, which may limit the

    generalizability of the findings.

    [60]

    ˇSiljeg et al.

    2023

    Utilizing

    Geospatial

    Object-Based

    Image

    Analysis

    (GEOBIA)

    and

    Vegetation

    Indices

    for

    extracting

    olive

    tree

    canopies

    from

    highly

    detailed

    UAV

    multispectral imagery.

    This study proposes a UAV-based

    crop monitoring system that uses

    IoT

    The study may have only tested the

    UAV-based crop monitoring system

    in a limited range of environmental

    conditions, which may limit the

    generalizability of the findings.

    www.ijacsa.thesai.org

    1158 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    TABLE VI. CHARACTERISTICS OF THE RESEARCH: COMPARISON OF IOT ISSUES AND CHALLENGES
    IN UAV APPLICATIONS ON SMART FARMING

    (Y-YES, N-NON AND N/A-NON APPLICABLE)

    Properties

    [61]

    [36]

    [45]

    [54]

    [55]

    [56]

    [62]

    [57]

    [58]

    [59]

    [13]

    Security

    Y

    N

    N

    N

    N

    N

    Y

    N

    N

    N

    N

    Control actuators Network lifetime

    Y

    Y

    N

    N

    N

    Y

    N

    N

    N

    N

    N

    Network latency Transmission reliability Quality of experience

    (QoE)

    Y

    Y

    N

    N

    N

    Y

    N

    N

    N

    N

    N

    Reduce risk of pesticides harming Animals or Human Semantic

    interoperability

    Y

    Y

    N

    N

    N

    Y

    N

    N

    N

    N

    N

    Detection of weather conditions Yes

    Y

    Y

    N

    N

    N

    Y

    N

    N

    N

    N

    N

    Preventive measures using IoT Semantic interoperability

    Y

    Y

    N

    N

    N

    Y

    N

    N

    N

    N

    N

    Architecture

    Y

    Y

    N

    N

    N

    Y

    N

    N

    N

    N

    N

    Reduce communication cost Quality of Service (QoS)

    Y

    Y

    N/A

    N

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    Sensing and actuators as a service (SaaS) Handle multi-keyword

    search.

    N/A

    N/A

    N/A

    N/A

    Y

    N/A

    Y

    N/A

    N/A

    N

    N

    Failure detection Prediction for IoT

    N/A

    N/A

    N/A

    N

    Y

    N

    N

    N

    N/A

    N/A

    N/A

    Increased computational time Faster detection rate for crop disease

    Y

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    Y

    Y

    N/A

    Reduced the time of diagnosis of animal illness.

    Y

    Y

    N/A

    N

    N

    Y

    N/A

    N

    N

    N

    N/A

    Enhanced data transmission

    N

    N

    N

    N

    N

    N

    N

    N

    N

    N

    N

    Interactive voice response with farmers Determination of soil

    condition

    N

    N

    N

    N

    N

    N/A

    N/A

    N/A

    N

    N

    N

    Soil conductivity Protection of crop disease using IoT

    N

    N

    N

    N

    N

    N

    N/A

    N/A

    N/A

    N/A

    N/A

    Color-based segmentation for early detection and utilization of

    three-dimensional point cloud

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    N/A

    Fig. 9. Significant UAV applications in smart farming using AI and cloud.

    infestations, and optimize harvest. While the use of UAV

    systems for crop monitoring has several advantages, there

    are also some limitations to the types of crops that can

    be effectively monitored. Here are some of the limitations

    collected by analyzing the following articles [64], [65], [66].

    So, there are several limitations to using UAVs for crop

    monitoring. Firstly, UAVs can only cover a limited area in

    a single flight, which makes it difficult to monitor large farms

    efficiently. Secondly, UAVs are affected by weather conditions

    and may not be able to fly in adverse weather, which can

    impact data collection. Thirdly, UAVs require skilled operators

    and specialized equipment, which can be costly and time-

    consuming to maintain. Then, regulations around the use of

    UAVs can be complex and vary between countries, which can

    add another layer of complexity to their use in crop monitoring.

    These limitations must be carefully considered when deciding

    whether to use UAVs for crop monitoring and when planning

    a UAV-based monitoring program.

    In conclusion, while UAV systems can be an effective tool

    for crop monitoring, there are limitations to the types of crops

    that can be effectively monitored. Crop height, density, size,

    weather conditions, and sensor limitations are all factors that

    www.ijacsa.thesai.org

    1159 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Fig. 10. UAV system technologies.

    can affect the effectiveness of UAV monitoring. Generally,

    UAV systems can provide farmers with valuable insights and

    data to optimize crop management, increase productivity, and

    reduce the use of pesticides and fertilizers.

    RQ3. HOW CAN UAV-BASED TECHNOLOGIES BE

    ADAPTED FOR USE IN DIFFERENT TYPES OF CROPS OR

    FARMING ENVIRONMENTS?

    Precision agriculture involves the use of various tech-

    nologies to optimize crop management and increase yields.

    Unmanned Aerial Vehicle (UAV) systems are becoming in-

    creasingly popular in precision agriculture due to their ability

    to collect high-resolution data quickly and efficiently. Here are

    some UAV system technologies in Fig. 10 that are commonly

    adopted in precision agriculture:

    •

    Multispectral imaging: UAVs equipped with multi-

    spectral cameras can capture images of crops at dif-

    ferent wavelengths, providing valuable information on

    plant health, stress levels, and nutrient deficiencies.

    •

    Thermal imaging: Thermal cameras mounted on UAVs

    can detect differences in temperature across a field,

    helping to identify areas of stress or water deficiency

    in crops.

    •

    Lidar (Light Detection and Ranging): UAVs equipped

    with Lidar technology can create high-resolution 3D

    maps of crops and terrain, which can be used for crop

    modeling and yield prediction.

    •

    Global Positioning System (GPS): UAVs equipped

    with GPS can precisely navigate and collect data on

    a field, helping farmers to monitor crop growth and

    identify problem areas.

    •

    Machine learning and artificial intelligence: UAV sys-

    tems can collect vast amounts of data that can be

    analyzed and processed using machine learning and

    artificial intelligence algorithms.

    •

    Variable rate application (VRA): UAV systems can be

    used for VRA, where the data collected can be used to

    tailor crop management practices to specific areas of a

    field, optimizing inputs like fertilizers and pesticides,

    reducing costs and environmental impact.

    Overall, these UAV system technologies can provide farm-

    ers with detailed information on crop health, growth, and yield

    potential, helping them to make more informed decisions on

    crop management and increase productivity.

    RQ4. WHAT TYPES OF DATA CAN BE OBTAINED

    THROUGH THE USE OF UAVS?

    Unmanned Aerial Vehicles are deployed in various appli-

    cations, including agriculture, environmental monitoring, and

    infrastructure inspection. UAVs are equipped with sensors that

    can capture different types of data. Here are some examples

    of data that can be acquired by UAVs:

    •

    Visual imagery: UAVs can capture high-resolution

    visual imagery using cameras that range from standard

    RGB cameras to more specialized cameras like mul-

    tispectral, hyperspectral, and thermal cameras. These

    images can be used to monitor vegetation health,

    detect anomalies, and map land cover.

    •

    LiDAR: LiDAR sensors can be mounted on UAVs

    to generate high-resolution 3D maps of the terrain,

    vegetation, and structures. This data can be used

    for precise measurements of features such as height,

    volume, and biomass.

    •

    GPS data: UAVs can collect GPS data, which can

    be used to generate maps, track the drone’s position,

    and measure distances. Environmental data: UAVs

    can be equipped with sensors that measure environ-

    mental variables such as temperature, humidity, and

    air quality. This data can be used for environmental

    monitoring and disaster response.

    •

    Magnetic and acoustic data: UAVs can be equipped

    with magnetometers to measure the magnetic field

    of the Earth’s surface. This data can be used for

    geological surveys and mineral exploration. UAVs can

    also be equipped with microphones to capture acoustic

    data.

    Overall, UAVs can capture a wide range of data types,

    which can be used for various applications in fields such as

    agriculture, environmental monitoring, infrastructure inspec-

    tion, and disaster response.

    RQ5. WHICH METHODS OF DATA PROCESSING CAN BE

    EMPLOYED TO ANALYZE THE AGRICULTURAL DATA

    COLLECTED BY UAVS?

    The data acquired by UAVs in precision agriculture can

    be processed and analyzed using various techniques to extract

    useful information. Here are some examples of data processing

    methods that can be used to exploit agricultural data acquired

    by UAVs described in Fig. 11.

    •

    Image processing: UAVs capture high-resolution im-

    ages of crops, which can be processed using image

    processing techniques to extract information such as

    crop health, leaf area index, and crop growth stage.

    www.ijacsa.thesai.org

    1160 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    Fig. 11. Data processing methods used to exploit data collected by UAV.

    •

    Geographic Information System (GIS): UAV data can

    be integrated with GIS to create maps that provide

    valuable information about crop health, yield, and soil

    properties.

    •

    3D modeling: UAVs can capture data in the form of

    point clouds using LIDAR sensors, which can be used

    to create 3D models of the field. These models can

    be used to estimate crop height, biomass, and plant

    spacing.

    In summary, the data acquired by UAVs in precision agri-

    culture can be processed and analyzed using various techniques

    to extract valuable information about crop health, yield, and

    soil properties. These techniques include image processing,

    GIS, multispectral data analysis, machine learning, and 3D

    modeling.

    RQ6. WHAT ARE THE CHALLENGES ASSOCIATED WITH

    USING DRONES FOR DISEASE DETECTION IN

    AGRICULTURE?

    The challenges can be categorized into two primary

    groups: dataset-related challenges and model-building chal-

    lenges. Dataset-related challenges encompass deformations in

    the image dataset, insufficient availability of expert-labeled

    data, significant randomness in the data, and inadequate repre-

    sentation of classes in the dataset. Challenges associated with

    model building are the scarcity of training samples, extended

    training and processing times. Out of the papers analyzed, only

    two proposed potential solutions for these difficulties. The use

    of UAV in smart farming has become increasingly popular

    due to their ability to collect vast amounts of data quickly

    and accurately. However, the integration of Internet of Things

    (IoT) technologies into UAV applications also brings unique

    challenges and issues. The Table VI provides a comparison

    of the key challenges and issues related to IoT in UAV

    applications for smart farming.

    RQ7. WHAT ARE THE POTENTIAL ETHICAL AND LEGAL

    IMPLICATIONS ASSOCIATED WITH THE USE OF DRONES

    IN AGRICULTURE, AND HOW CAN THESE ISSUES BE

    ADDRESSED?

    The use of drones in agriculture presents various ethical

    and legal implications that need to be considered and ad-

    dressed. From an ethical standpoint, privacy concerns arise

    as drones can capture sensitive information about individuals

    or their properties. There is also the potential for drones to

    infringe on airspace regulations, endangering other aircraft

    or public safety. Furthermore, the automation and autonomy

    of drones raise questions about accountability and liability

    in case of accidents or damage caused by these devices. To

    address these issues, several measures can be implemented.

    Firstly, clear regulations and guidelines should be established

    regarding the operation of drones in agricultural settings. These

    regulations should address aspects such as flight restrictions,

    licensing requirements, and privacy protection. Adequate en-

    forcement mechanisms should be in place to ensure compli-

    ance.

    Secondly, public awareness campaigns and education ini-

    tiatives can inform both farmers and the general public about

    the responsible and legal use of drones in agriculture. This can

    help foster understanding and mitigate privacy concerns. Addi-

    tionally, technological solutions can be developed to enhance

    privacy protection, such as implementing geofencing mecha-

    nisms that restrict drone access to certain areas or utilizing

    data anonymization techniques. Collaboration between stake-

    holders, including farmers, drone operators, regulatory bodies,

    and legal experts, is crucial for developing comprehensive

    guidelines and frameworks that address the ethical and legal

    implications of drone use in agriculture. Regular review and

    updates of regulations can also ensure they remain relevant

    as technology evolves. Ultimately, a balanced approach is

    needed that considers the benefits of drone technology in

    agriculture while safeguarding privacy, public safety, and legal

    compliance.

    www.ijacsa.thesai.org

    1161 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    TABLE VII. SIGNIFICANT REVIEW STUDIES ON UAV BASED APPLICATIONS ON SMART FARMING
    COMPARED TO THIS SYSTEMATIC REVIEW

    References

    Objectives of the review

    Method/Guidelines

    Analysis Criteria

    Results

    [67]

    Help potential researchers de-

    tect

    relevant

    IoT

    problems

    and, based on the applica-

    tion requirements, adopt suit-

    able technologies.

    SLR

    Recent advancements and chal-

    lenges of Internet of Things in

    smart farming

    The upcoming studies, inventions, and

    initiatives mostly in field of IoT-based

    smart agriculture would improve the

    quality of living for farmers and result

    in significant improvements in the agri-

    cultural sector.

    [68]

    Pinpoints the challenges in im-

    plementing the solutions in the

    farmer’s field in real-time.

    SLR

    Recent trends in computer vision

    such as generative adversarial net-

    works (GAN), vision transformers

    (ViT) and other popular deep learn-

    ing architectures.

    Integration of the deep learning com-

    puter vision approaches with the UAV,

    and spectral data can help in building

    advanced-intelligent solutions.

    [69]

    Presents an analysis of drone

    technologies and their mod-

    ifications

    with

    time

    in

    the

    agriculture sector in the last

    decade.

    SLR

    Artificial Intelligent (AI) and deep

    learning for the remote monitoring

    of crops has

    There is a ramp in drone application for

    precision agriculture after 2017. This

    is due to the reduction of weight, cost

    of UAVs, and increment in payload

    capability

    [26]

    Suggest further research to im-

    prove the current food produc-

    tion globally

    SLR

    The application of smart farming

    to crop and animal production and

    post-harvesting

    An effective Intelligent IoT system for

    smart farming can start the beginning of

    the journey toward by providing more

    information within the farming system

    for non-academics and researchers.

    Proposed

    Systematic

    Review

    Propose future research direc-

    tions and highlight areas of

    improvement for the effective

    implementation of these tech-

    nologies in agriculture.

    SLR & PRISMA

    Data collection and sensing tech-

    nologies, AI and data analysis

    techniques, IoT and connectivity,

    Cloud computing and data manage-

    ment, Performance and effective-

    ness, Challenges and limitations

    Exploration of the integration of un-

    manned aerial systems (UAS), AI, IoT,

    and cloud technologies specifically in

    the context of smart farming, providing

    an up-to-date and in-depth analysis of

    the benefits, challenges, and future re-

    search directions in this rapidly evolv-

    ing field.

    V.

    DISCUSSIONS

    The reason to conduct this systematic review on UAV-

    based applications in smart farming using AI, IoT, and cloud

    technologies is to provide a comprehensive overview of the

    current state-of-the-art in this field. This review aims to gather

    and analyze existing research studies, to identify gaps in the

    literature, and to provide insights into the potential of these

    technologies for smart farming.

    The systematic review will contribute to the research field

    in several ways. Firstly, it will provide a clear understanding

    of the current state-of-the-art in UAV-based applications in

    smart farming, including the various applications, benefits,

    and challenges associated with the use of these technologies.

    Secondly, it will identify gaps in the literature and areas where

    further research is needed. This will help researchers to focus

    their efforts on areas that are most promising and where further

    advancements are needed. Thirdly, it will provide insights into

    the potential of these technologies to transform the agriculture

    industry, promote sustainable farming practices, and address

    global food security challenges.

    UAV-based applications in smart farming using AI, IoT,

    and cloud technologies face several data challenges that must

    be addressed for successful implementation. These challenges

    include acquiring and efficiently storing the large amounts of

    data generated by UAVs, ensuring the quality and reliability

    of the data, processing and analyzing the data in real-time

    using AI and cloud technologies, seamlessly integrating the

    UAV-based applications with other systems, and ensuring

    data privacy and security. Overcoming these challenges will

    require the development of robust data management strategies,

    advanced algorithms for data analysis, secure and interoperable

    systems, and effective policies and regulations for data privacy

    and security. Addressing these challenges will be crucial for

    the successful implementation of UAV-based applications in

    smart farming and the realization of their potential benefits for

    the agricultural industry. Meteorological conditions can have a

    significant impact on UAV-based applications in smart farming

    that use AI, IoT, and cloud technologies. For example, wind

    speed and direction can affect the stability and maneuverability

    of the UAV, which can impact the quality of the data collected.

    Similarly, rain, fog, and low-light conditions can affect the

    quality of the images and sensor readings collected by the

    UAV, which can impact the accuracy of the data analysis.

    Extreme weather conditions such as hurricanes, thunder-

    storms, and blizzards can also pose safety risks for the UAV

    and the personnel operating it. High winds, lightning, and

    heavy precipitation can damage the UAV or cause it to crash,

    while snow and ice can affect its mobility and stability. To mit-

    igate the impact of meteorological conditions on UAV-based

    applications in smart farming, it is important to have reliable

    weather forecasting systems in place. This can help farmers

    and operators plan UAV flights around weather patterns, avoid-

    ing unsafe conditions and optimizing data collection.

    Additionally, it is important to use UAVs equipped with

    weather-resistant sensors and cameras that can operate in a

    range of environmental conditions. This can help ensure the

    accuracy and reliability of the data collected, even in adverse

    weather conditions. In summary, meteorological conditions can

    www.ijacsa.thesai.org

    1162 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    have a significant impact on UAV-based applications in smart

    farming, and it is important to have reliable weather forecasting

    systems and weather-resistant equipment to mitigate these

    effects.

    Overall, this systematic review will be a valuable resource

    for researchers, policymakers, and practitioners interested in

    UAV-based applications in smart farming using AI, IoT, and

    cloud technologies. It will help to identify areas where further

    research is needed, and provide insights into the potential

    of these technologies to address some of the most pressing

    challenges facing the agriculture industry today.

    By validating and comparing the PRISMA (Preferred Re-

    porting Items for Systematic Reviews and Meta-Analyses)

    results with the presented objectives, scenarios, and analysis

    criteria in Table VII, this systematic review aims to enhance the

    existing survey methodology. It strives to provide an updated

    research review based on established guidelines, which can

    have several advantages. So, by employing a validated method-

    ology and adhering to established guidelines like PRISMA, this

    work aims to provide a reliable, transparent, and up-to-date

    resource that can contribute to the existing body of knowledge

    in UAV-based applications in smart farming using AI, IoT, and

    cloud technologies. Despite the numerous benefits associated

    with the use of UAVs, AI, IoT, and cloud technologies in smart

    farming, there are still some limitations and challenges that

    need to be addressed in the future. One of the main limitations

    is the high cost of acquiring and maintaining these technolo-

    gies, which may limit their adoption by smallholder farmers.

    Another limitation is the lack of regulatory frameworks and

    policies to guide their use, particularly in developing countries.

    Overall, this systematic review will be a valuable resource

    for researchers, policymakers, and practitioners interested in

    UAV-based applications in smart farming using AI, IoT, and

    cloud technologies. It will help to identify areas where further

    research is needed, and provide insights into the potential

    of these technologies to address some of the most pressing

    challenges facing the agriculture industry today. Despite the

    numerous benefits associated with the use of UAVs, AI, IoT,

    and cloud technologies in smart farming, there are still some

    limitations and challenges that need to be addressed in the

    future.

    VI.

    CONCLUSION

    In

    conclusion,

    this

    paper

    provides

    a

    comprehensive

    overview of the utilization of unmanned aerial vehicules

    (UAS), or drones, in agriculture and the integration of AI, IoT,

    and cloud technologies for precision farming. The systematic

    review conducted following the PRISMA method highlights

    the potential of UAV-based applications in smart farming using

    these advanced technologies. The major takeaways from this

    work include the significant potential of UAVs in enhanc-

    ing agricultural productivity and sustainability. The findings

    demonstrate that UAVs offer valuable capabilities for data

    collection, precision monitoring, and decision-making in large-

    scale farming operations. The integration of AI, IoT, and cloud

    technologies further enhances these capabilities by enabling

    real-time data analysis, remote accessibility, and efficient re-

    source management. The justification for this research lies

    in the growing importance of technology-driven solutions

    in modern agriculture. By leveraging UAVs and advanced

    technologies, farmers can make informed decisions, optimize

    resource usage, and improve crop yields. The presented work

    serves as a valuable resource for researchers, policymakers,

    and practitioners interested in understanding the potential and

    challenges of UAV-based applications in smart farming.

    Moving forward, future research should focus on devel-

    oping more advanced machine learning models to enhance

    accuracy in crop yield predictions and pest infestation iden-

    tification. Additionally, exploring the feasibility of drones for

    other agricultural tasks such as irrigation management and soil

    analysis can provide valuable insights. Conducting empirical

    studies will further validate the benefits and limitations of these

    technologies in agriculture.

    REFERENCES

    [1]

    S. Pal, H. VijayKumar, D. Akila, N. Z. Jhanjhi, O. A. Darwish,

    and

    F.

    Amsaad,

    “Information-Centric

    IoT-Based

    Smart

    Farming

    with

    Dynamic

    Data

    Optimization,”

    Computers,

    Materials

    and

    Continua, vol. 74, no. 2, pp. 3865–3880, 2023. [Online]. Available:

    https://doi.org/10.32604/cmc.2023.029038

    [2]

    J. Nie, Y. Wang, Y. Li, and X. Chao, “Sustainable computing in smart

    agriculture: survey and challenges,” Turkish Journal of Agriculture

    and Forestry, vol. 46, no. 4, pp. 550–566, 2022. [Online]. Available:

    https://doi.org/10.55730/1300-011X.3025

    [3]

    A. Cravero, S. Pardo, P. Galeas, J. L´opez Fenner, and M. Caniup´an,

    “Data Type and Data Sources for Agricultural Big Data and Machine

    Learning,” Sustainability (Switzerland), vol. 14, no. 23, pp. 1–37,

    2022. [Online]. Available: https://doi.org/10.3390/su142316131

    [4]

    A. Sharma, E. Podoplelova, G. Shapovalov, A. Tselykh, and A. Tselykh,

    “Sustainable smart cities: Convergence of artificial intelligence and

    blockchain,” Sustainability (Switzerland), vol. 13, no. 23, 2021.

    [Online]. Available: https://doi.org/10.3390/su132313076

    [5]

    A. Abdollahi, K. Rejeb, A. Rejeb, M. M. Mostafa, and S. Zailani,

    “Wireless sensor networks in agriculture: Insights from bibliometric

    analysis,” Sustainability (Switzerland), vol. 13, no. 21, 2021. [Online].

    Available: https://doi.org/10.3390/su132112011

    [6]

    G.

    Giray

    and

    C.

    Catal,

    “Design

    of

    a

    data

    management

    reference

    architecture

    for

    sustainable

    agriculture,”

    Sustainability

    (Switzerland),

    vol.

    13,

    no.

    13,

    2021.

    [Online].

    Available:

    https://doi.org/10.3390/su13137309

    [7]

    Aqeel-Ur-Rehman and Z. A. Shaikh, “Smart agriculture,” Applications

    of Modern High Performance Networks, pp. 120–129, 2009. [Online].

    Available: https://doi.org/10.2174/978160805077210901010120

    [8]

    J. Kim, S. Kim, C. Ju, and H. I. Son, “Unmanned aerial vehicles in agri-

    culture: A review of perspective of platform, control, and applications,”

    IEEE Access, vol. 7, pp. 105 100–105 115, 2019.

    [9]

    D. Loukatos, M. Kondoyanni, G. Alexopoulos, C. Maraveas, and

    K. G. Arvanitis, “On-Device Intelligence for Malfunction Detection

    of Water Pump Equipment in Agricultural Premises: Feasibility and

    Experimentation,” Sensors, vol. 23, no. 2, 2023. [Online]. Available:

    https://doi.org/10.3390/s23020839

    [10]

    A. Saleh, P. Joshi, R. S. Rathore, and S. S. Sengar, “Trust-Aware

    Routing Mechanism through an Edge Node for IoT-Enabled Sensor

    Networks,” Sensors, vol. 22, no. 20, pp. 1–22, 2022. [Online].

    Available: https://doi.org/10.3390/s22207820

    [11]

    N. N. Thilakarathne, M. S. A. Bakar, P. E. Abas, and H. Yassin,

    “A Cloud Enabled Crop Recommendation Platform for Machine

    Learning-Driven Precision Farming,” Sensors, vol. 22, no. 16, 2022.

    [Online]. Available: https://doi.org/10.3390/s22166299

    [12]

    A. Z. Bayih, J. Morales, Y. Assabie, and R. A. de By, “Utilization

    of Internet of Things and Wireless Sensor Networks for Sustainable

    Smallholder Agriculture,” Sensors, vol. 22, no. 9, pp. 1–31, 2022.

    [Online]. Available: https://doi.org/10.3390/s22093273

    [13]

    T. Qayyum, Z. Trabelsi, A. Malik, and K. Hayawi, “Trajectory

    design for uav-based data collection using clustering model in

    smart farming,” Sensors, vol. 22, no. 1, 2022. [Online]. Available:

    https://doi.org/10.3390/s22010037

    www.ijacsa.thesai.org

    1163 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    [14]

    J.

    Bravo-Arrabal,

    M.

    Toscano-Moreno,

    J.

    J.

    Fernandez-Lozano,

    A. Mandow, J. A. Gomez-Ruiz, and A. Garc´ıa-Cerezo, “The internet

    of cooperative agents architecture (X-ioca) for robots, hybrid sensor

    networks, and mec centers in complex environments: A search and

    rescue case study,” Sensors, vol. 21, no. 23, 2021. [Online]. Available:

    https://doi.org/10.3390/s21237843

    [15]

    Y. Liu, R. Kumar, A. Tripathi, A. Sharma, and M. Rana, “he

    Application of Internet of Things and Oracle Database in the

    Research

    of

    Intelligent

    Data

    Management

    System,”

    Informatica

    (Slovenia), vol. 46, no. 3, pp. 403–410, 2022. [Online]. Available:

    https://doi.org/10.31449/inf.v46i3.4019

    [16]

    R.

    H.

    Ip,

    L.

    M.

    Ang,

    K.

    P.

    Seng,

    J.

    C.

    Broster,

    and

    J.

    E.

    Pratley,

    “Big

    data

    and

    machine

    learning

    for

    crop

    protection,” Computers and Electronics in Agriculture, vol. 151,

    no.

    November

    2017,

    pp.

    376–383,

    2018.

    [Online].

    Available:

    https://doi.org/10.1016/j.compag.2018.06.008

    [17]

    M. v. Sch¨onfeld, R. Heil, and L. Bittner, “Big Data on a Farm—Smart

    Farming,” pp. 109–120, 2018.

    [18]

    S. Himesh, E. V. Prakasa Rao, K. C. Gouda, K. V. Ramesh, V. Rakesh,

    G. N. Mohapatra, B. Kantha Rao, S. K. Sahoo, and P. Ajilesh,

    “Digital revolution and Big Data: A new revolution in agriculture,” CAB

    Reviews: Perspectives in Agriculture, Veterinary Science, Nutrition and

    Natural Resources, vol. 13, no. 021, pp. 1–7, 2018.

    [19]

    S. Wolfert, L. Ge, C. Verdouw, and M. J. Bogaardt, “Big Data in Smart

    Farming – A review,” Agricultural Systems, vol. 153, pp. 69–80, 2017.

    [20]

    P. Placidi, R. Morbidelli, D. Fortunati, N. Papini, F. Gobbi, and

    A.

    Scorzoni,

    “Monitoring

    soil

    and

    ambient

    parameters

    in

    the

    iot precision agriculture scenario: An original modeling approach

    dedicated to low-cost soil water content sensors,” Sensors, vol. 21,

    no. 15, 2021. [Online]. Available: https://doi.org/10.3390/s21155110

    [21]

    A. Chodorek, R. R. Chodorek, and P. Sitek, Monitor Urban and

    Industrial Areas, 2021.

    [22]

    T. Kawai, “Video slice: image compression and transmission for

    agricultural systems,” Sensors, vol. 21, no. 11, 2021. [Online].

    Available: https://doi.org/10.3390/s21113698

    [23]

    J. Majumdar, S. Naraseeyappa, and S. Ankalaki, “Analysis of agriculture

    data using data mining techniques : application of big data,” Journal

    of Big Data, 2017. [Online]. Available: https://doi.org/10.1186/s40537-

    017-0077-4

    [24]

    Y. Kalyani and R. Collier, “A systematic survey on the role

    of

    cloud,

    fog,

    and

    edge

    computing

    combination

    in

    smart

    agriculture,” Sensors, vol. 21, no. 17, 2021. [Online]. Available:

    https://doi.org/10.3390/s21175922

    [25]

    C. Sohrabi, T. Franchi, G. Mathew, A. Kerwan, M. Nicola, M. Griffin,

    M. Agha, and R. Agha, “PRISMA 2020 statement: What’s new and the

    importance of reporting guidelines,” International Journal of Surgery,

    vol. 88, no. March, pp. 39–42, 2021.

    [26]

    G. Idoje, T. Dagiuklas, and M. Iqbal, “Survey for smart farming

    technologies:

    Challenges

    and

    issues,”

    Computers

    and

    Electrical

    Engineering, vol. 92, no. February 2020, p. 107104, 2021. [Online].

    Available: https://doi.org/10.1016/j.compeleceng.2021.107104

    [27]

    B. Kitchenham, O. Pearl Brereton, D. Budgen, M. Turner, J. Bailey,

    and S. Linkman, “Systematic literature reviews in software engineering

    -

    A

    systematic

    literature

    review,”

    Information

    and

    Software

    Technology, vol. 51, no. 1, pp. 7–15, 2009. [Online]. Available:

    http://dx.doi.org/10.1016/j.infsof.2008.09.009

    [28]

    I. Buja, E. Sabella, A. G. Monteduro, M. S. Chiriac`o, L. De Bellis,

    A. Luvisi, and G. Maruccio, “Advances in plant disease detection

    and monitoring: From traditional assays to in-field diagnostics,”

    Sensors,

    vol.

    21,

    no.

    6,

    pp.

    1–22,

    2021.

    [Online].

    Available:

    https://doi.org/10.3390/s21062129

    [29]

    K. A. Awan, I. U. Din, A. Almogren, and H. Almajed, “Agritrust—a

    trust management approach for smart agriculture in cloud-based

    internet of agriculture things,” Sensors (Switzerland), vol. 20, no. 21,

    pp. 1–21, 2020. [Online]. Available: https://doi.org/10.3390/s20216174

    [30]

    M. E. P´erez-Pons, R. S. Alonso, O. Garc´ıa, G. Marreiros, and J. M.

    Corchado, “Deep q-learning and preference based multi-agent system

    for sustainable agricultural market,” Sensors, vol. 21, no. 16, pp. 1–16,

    2021. [Online]. Available: https://doi.org/10.3390/s21165276

    [31]

    Z.

    Nurlan,

    T.

    Zhukabayeva,

    M.

    Othman,

    A.

    Adamova,

    and

    N. Zhakiyev, “Wireless Sensor Network as a Mesh: Vision and

    Challenges,” IEEE Access, vol. 10, pp. 46–67, 2022. [Online].

    Available: https://doi.org/10.1109/ACCESS.2021.3137341

    [32]

    F. S. Alrayes, N. Alshuqayran, M. K. Nour, M. Al Duhayyim,

    A.

    Mohamed,

    A.

    A.

    A.

    Mohammed,

    G.

    P.

    Mohammed,

    and

    I.

    Yaseen,

    “Optimal

    Fuzzy

    Logic

    Enabled

    Intrusion

    Detection

    for

    Secure

    IoT-Cloud

    Environment,”

    Computers,

    Materials

    and

    Continua, vol. 74, no. 3, pp. 6737–6753, 2023. [Online]. Available:

    https://doi.org/10.32604/cmc.2023.032591

    [33]

    S. S. Sarnin, N. J. H. Binti Mohammad, N. F. Naim, N. Ya’acob,

    A. Idris, W. N. Wan Mohamad, and M. N. Md Tan, “Smart insects

    repeller,” Indonesian Journal of Electrical Engineering and Computer

    Science, vol. 17, no. 1, pp. 205–212, 2019. [Online]. Available:

    https://doi.org/10.11591/ijeecs.v17.i1.pp205-212

    [34]

    P.

    Deepika

    and

    B.

    Arthi,

    “Prediction

    of

    plant

    pest

    detection

    using improved mask FRCNN in cloud environment,” Measurement:

    Sensors, vol. 24, no. October, p. 100549, 2022. [Online]. Available:

    https://doi.org/10.1016/j.measen.2022.100549

    [35]

    K. Sharma, C. Sharma, S. Sharma, and E. Asenso, “Broadening the

    Research Pathways in Smart Agriculture: Predictive Analysis Using

    Semiautomatic Information Modeling,” Journal of Sensors, vol. 2022,

    2022. [Online]. Available: https://doi.org/10.1155/2022/5442865

    [36]

    W. Zhao, M. Wang, and V. T. Pham, “Unmanned Aerial Vehicle and

    Geospatial Analysis in Smart Irrigation and Crop Monitoring on IoT

    Platform,” Mobile Information Systems, vol. 2023, 2023. [Online].

    Available: https://doi.org/10.1155/2023/4213645

    [37]

    T.

    Sutikno

    and

    D.

    Thalmann,

    “Insights

    on

    the

    internet

    of

    things:

    past,

    present,

    and

    future

    directions,”

    Telkom-

    nika

    (Telecommunication

    Computing

    Electronics

    and

    Control),

    vol.

    20,

    no.

    6,

    pp.

    1399–1420,

    2022.

    [Online].

    Available:

    https://doi.org/10.12928/TELKOMNIKA.v20i6.22028

    [38]

    A.

    Zervopoulos,

    A.

    Tsipis,

    A.

    G.

    Alvanou,

    K.

    Bezas,

    A. Papamichail, S. Vergis, A. Stylidou, G. Tsoumanis, V. Komianos,

    G. Koufoudakis, and K. Oikonomou, “Wireless sensor network

    synchronization for precision agriculture applications,” Agriculture

    (Switzerland), vol. 10, no. 3, pp. 1–20, 2020. [Online]. Available:

    https://doi.org/10.3390/agriculture10030089

    [39]

    C. G. Prasad, A. Mallareddy, M. Pounambal, and V. Velayutham,

    “Edge Computing and Blockchain in Smart Agriculture Systems,”

    International Journal on Recent and Innovation Trends in Computing

    and Communication, vol. 10, no. 1, pp. 265–274, 2022. [Online].

    Available: https://doi.org/10.17762/ijritcc.v10i1s.5848

    [40]

    M. L. Rathod, A. Shivaputra, H. Umadevi, K. Nagamani, and

    S. Periyasamy, “Cloud Computing and Networking for SmartFarm

    AgriTech,” Journal of Nanomaterials, vol. 2022, no. i, 2022. [Online].

    Available: https://doi.org/10.1155/2022/6491747

    [41]

    C. H. Wu, C. Y. Lu, J. W. Zhan, and H. T. Wu, “Using Long

    Short-Term Memory for Building Outdoor Agricultural Machinery,”

    Frontiers in Neurorobotics, vol. 14, no. May, pp. 1–8, 2020. [Online].

    Available: https://doi.org/10.3389/fnbot.2020.00027

    [42]

    S. Yadav, A. Kaushik, M. Sharma, and S. Sharma, “Disruptive

    Technologies in Smart Farming: An Expanded View with Sentiment

    Analysis,” AgriEngineering, vol. 4, no. 2, pp. 424–460, 2022. [Online].

    Available: https://doi.org/10.3390/agriengineering4020029

    [43]

    C. Bersani, C. Ruggiero, R. Sacile, A. Soussi, and E. Zero, “Internet of

    Things Approaches for Monitoring and Control of Smart Greenhouses

    in Industry 4.0,” Energies, vol. 15, no. 10, 2022. [Online]. Available:

    https://doi.org/10.3390/en15103834

    [44]

    M. Junaid, A. Shaikh, M. U. Hassan, A. Alghamdi, K. Rajab, M. S.

    Al Reshan, and M. Alkinani, “Smart agriculture cloud using AI based

    techniques,” Energies, vol. 14, no. 16, 2021. [Online]. Available:

    https://doi.org/10.3390/en14165129

    [45]

    J.

    Almutairi,

    M.

    Aldossary,

    H.

    A.

    Alharbi,

    B.

    A.

    Yosuf,

    and

    J.

    M.

    Elmirghani,

    “Delay-Optimal

    Task

    Offloading

    for

    UAV-Enabled

    Edge-Cloud

    Computing

    Systems,”

    IEEE

    Access,

    vol.

    10,

    pp.

    51 575–51 586,

    2022.

    [Online].

    Available:

    https://doi.org/10.1109/ACCESS.2022.3174127

    [46]

    B.

    Almadani

    and

    S.

    M.

    Mostafa,

    “IIoT

    based

    multimodal

    communication model for agriculture and agro-industries,” IEEE

    Access,

    vol.

    9,

    pp.

    10 070–10 088,

    2021.

    [Online].

    Available:

    https://doi.org/10.1109/ACCESS.2021.3050391

    www.ijacsa.thesai.org

    1164 | P a g e

    IJACSA-International Journal of Advanced Computer Science and Applications,

    Vol. 14, No. 6, 2023

    [47]

    A. S. Pamula, A. Ravilla, and S. V. H. Madiraju, “Applications of the

    Internet of Things (IoT) in Real-Time Monitoring of Contaminants in

    the Air, Water, and Soil †,” Engineering Proceedings, vol. 27, no. 1,

    2022. [Online]. Available: https://doi.org/10.3390/ecsa-9-13335

    [48]

    E.

    Petkov,

    T.

    Kalushkov,

    D.

    Valcheva,

    and

    G.

    Shipkovenski,

    “Fault Tolerance Smart Egg Incubation System with Computer

    Vision,” International Journal of Advanced Computer Science and

    Applications, vol. 14, no. 2, pp. 511–517, 2023. [Online]. Available:

    https://doi.org/10.14569/IJACSA.2023.0140260

    [49]

    S. Chaterji, N. DeLay, J. Evans, N. Mosier, B. Engel, D. Buckmaster,

    M. R. Ladisch, and R. Chandra, “Lattice: A Vision for Machine

    Learning, Data Engineering, and Policy Considerations for Digital

    Agriculture

    at

    Scale,”

    IEEE

    Open

    Journal

    of

    the

    Computer

    Society, vol. 2, no. June, pp. 227–240, 2021. [Online]. Available:

    https://doi.org/10.1109/ojcs.2021.3085846

    [50]

    S. Katiyar and A. Farhana, “Smart Agriculture: The Future of

    Agriculture

    using

    AI

    and

    IoT,”

    Journal

    of

    Computer

    Science,

    vol.

    17,

    no.

    10,

    pp.

    984–999,

    2021.

    [Online].

    Available:

    https://doi.org/10.3844/jcssp.2021.984.999

    [51]

    M. Z. Islam, R. Ali, A. Haider, and H. S. Kim, “QoS Provisioning:

    Key Drivers and Enablers Toward the Tactile Internet in Beyond

    5G Era,” IEEE Access, vol. 10, pp. 85 720–85 754, 2022. [Online].

    Available: https://doi.org/10.1109/ACCESS.2022.3197900

    [52]

    Y. Gong, K. Chen, T. Niu, and Y. Liu, “Grid-Based coverage

    path planning with NFZ avoidance for UAV using parallel self-

    adaptive ant colony optimization algorithm in cloud IoT,” Journal

    of Cloud Computing, vol. 11, no. 1, 2022. [Online]. Available:

    https://doi.org/10.1186/s13677-022-00298-2

    [53]

    R.

    Winkler,

    “MeteoMex:

    open

    infrastructure

    for

    networked

    environmental

    monitoring

    and

    agriculture

    4.0,”

    PeerJ

    Computer

    Science,

    vol.

    7,

    pp.

    1–23,

    2021.

    [Online].

    Available:

    https://doi.org/10.7717/PEERJ-CS.343

    [54]

    N. A. Sehree and A. M. Khidhir, “Olive trees cases classification based

    on deep convolutional neural network from unmanned aerial vehicle

    imagery,” Indonesian Journal of Electrical Engineering and Computer

    Science, vol. 27, no. 1, pp. 92–101, 2022. [Online]. Available:

    https://doi.org/10.11591/ijeecs.v27.i1.pp92-101

    [55]

    J. M. Jurado, L. Ortega, J. J. Cubillas, and F. R. Feito, “Multispectral

    mapping on 3D models and multi-temporal monitoring for individual

    characterization of olive trees,” Remote Sensing, vol. 12, no. 7, pp.

    1–26, 2020. [Online]. Available: https://doi.org/10.3390/rs12071106

    [56]

    P.

    Rallo,

    A.

    I.

    de

    Castro,

    F.

    L´opez-Granados,

    A.

    Morales-

    Sillero, J. Torres-S´anchez, M. R. Jim´enez, F. M. Jim´enez-Brenes,

    L.

    Casanova,

    and

    M.

    P.

    Su´arez,

    “Exploring

    UAV-imagery

    to

    support genotype selection in olive breeding programs,” Scientia

    Horticulturae, vol. 273, no. July, p. 109615, 2020. [Online]. Available:

    https://doi.org/10.1016/j.scienta.2020.109615

    [57]

    A. Safonova, E. Guirado, Y. Maglinets, D. Alcaraz-Segura, and

    S. Tabik, “Olive tree biovolume from uav multi-resolution image

    segmentation with mask r-cnn,” Sensors, vol. 21, no. 5, pp. 1–17,

    2021. [Online]. Available: https://doi.org/10.3390/s21051617

    [58]

    A. D. Nisio, F. Adamo, G. Acciani, and F. Attivissimo, “Fast

    detection of olive trees affected by xylella fastidiosa from uavs using

    multispectral imaging,” Sensors (Switzerland), vol. 20, no. 17, pp.

    1–23, 2020. [Online]. Available: https://doi.org/10.3390/s20174915

    [59]

    A. Castrignan`o, A. Belmonte, I. Antelmi, R. Quarto, F. Quarto,

    S. Shaddad, V. Sion, M. R. Muolo, N. A. Ranieri, G. Gadaleta,

    E. Bartoccetti, C. Riefolo, S. Ruggieri, and F. Nigro, “Semi-automatic

    method for early detection of xylella fastidiosa in olive trees using

    uav multispectral imagery and geostatistical-discriminant analysis,”

    Remote Sensing, vol. 13, no. 1, pp. 1–23, 2021. [Online]. Available:

    https://doi.org/10.3390/rs13010014

    [60]

    A. S. R. M. F. D. M. J. I. M. L. P. D. R. R. Milosevic,

    “GEOBIA and Vegetation Indices in Extracting Olive Tree Canopies

    Based on Very High-Resolution UAV Multispectral Imagery,” Applied

    Sciences (Switzerland), vol. 13, no. 2, 2023. [Online]. Available:

    https://doi.org/10.3390/app13020739

    [61]

    M. A. Uddin, A. Mansour, D. L. Jeune, M. Ayaz, and E. H. M.

    Aggoune, “Uav-assisted dynamic clustering of wireless sensor networks

    for crop health monitoring,” Sensors (Switzerland), vol. 18, no. 2,

    2018. [Online]. Available: https://doi.org/10.3390/s18020555

    [62]

    K. Neupane and F. Baysal-Gurel, “Automatic identification and

    monitoring of plant diseases using unmanned aerial vehicles: A

    review,” Remote Sensing, vol. 13, no. 19, 2021. [Online]. Available:

    https://doi.org/10.3390/rs13193841

    [63]

    A. D. Boursianis, M. S. Papadopoulou, P. Diamantoulakis, A. Liopa-

    Tsakalidi, P. Barouchas, G. Salahas, G. Karagiannidis, S. Wan, and

    S. K. Goudos, “Internet of Things (IoT) and Agricultural Unmanned

    Aerial Vehicles (UAVs) in smart farming: A comprehensive review,”

    Internet of Things (Netherlands), vol. 18, no. xxxx, p. 100187, 2022.

    [Online]. Available: https://doi.org/10.1016/j.iot.2020.100187

    [64]

    K. Zou, X. Chen, F. Zhang, H. Zhou, and C. Zhang, “A field weed

    density evaluation method based on uav imaging and modified u-net,”

    Remote Sensing, vol. 13, no. 2, pp. 1–19, 2021. [Online]. Available:

    https://doi.org/10.3390/rs13020310

    [65]

    T. B. Shahi, C. Y. Xu, A. Neupane, D. Fresser, D. O’Connor,

    G. Wright, and W. Guo, “A cooperative scheme for late leaf

    spot estimation in peanut using UAV multispectral images,” PloS

    one,

    vol.

    18,

    no.

    3,

    p.

    e0282486,

    2023.

    [Online].

    Available:

    http://dx.doi.org/10.1371/journal.pone.0282486

    [66]

    S. F. di Gennaro, E. Battiston, S. di Marco, O. Facini, A. Matese,

    M. Nocentini, A. Palliotti, and L. Mugnai, “Unmanned Aerial Vehicle

    (UAV)-based remote sensing to monitor grapevine leaf stripe disease

    within a vineyard affected by esca complex,” Phytopathologia Mediter-

    ranea, vol. 55, no. 2, pp. 262–275, 2016.

    [67]

    B. B. Sinha and R. Dhanalakshmi, “Recent advancements and

    challenges of Internet of Things in smart agriculture: A survey,”

    Future Generation Computer Systems, vol. 126, pp. 169–184, 2022.

    [Online]. Available: https://doi.org/10.1016/j.future.2021.08.006

    [68]

    V. G. Dhanya, A. Subeesh, N. L. Kushwaha, D. K. Vishwakarma,

    T. Nagesh Kumar, G. Ritika, and A. N. Singh, “Deep learning

    based computer vision approaches for smart agricultural applications,”

    Artificial Intelligence in Agriculture, vol. 6, pp. 211–229, 2022.

    [Online]. Available: https://doi.org/10.1016/j.aiia.2022.09.007

    [69]

    A. Hafeez, M. A. Husain, S. P. Singh, A. Chauhan, M. T. Khan,

    N. Kumar, A. Chauhan, and S. K. Soni, “Implementation of drone

    technology for farm monitoring & pesticide spraying: A review,”

    Information Processing in Agriculture, vol. 10, no. 2, pp. 192–203,

    2022. [Online]. Available: https://doi.org/10.1016/j.inpa.2022.02.002

    www.ijacsa.thesai.org

    1165 | P a g e

    '
  inline_citation: "(El Mehdi Raouhi1, Mohamed Lachgar2, Hamid Hrimech3 Ali Kartit4\
    \ \nLTI Laboratory, ENSA, University ChouaibDoukkali, El Jadida, Morocco1,2,4\n\
    LAMSAD Laboratory, ENSA, University Settat, Berrechid, Morocco3)"
  journal: International Journal of Advanced Computer Science and Applications
  limitations: The paper does not provide a comprehensive overview of all UAV-based
    applications in smart farming, but rather focuses on those that use AI, IoT, and
    cloud technologies.
  pdf_link: http://thesai.org/Downloads/Volume14No6/Paper_123-Unmanned_Aerial_Vehicle_based_Applications_in_Smart_Farming.pdf
  publication_year: 2023
  relevance_evaluation:
    extract_1: Unmanned aerial vehicles (UAVs) and machine learning (ML) technologies
      are increasingly being used in smart farming to improve crop monitoring, irrigation
      management, and pest and disease control.
    extract_2: The integration of UAVs and ML in smart farming is a rapidly growing
      field, and there is a great deal of potential for these technologies to improve
      the productivity and profitability of agriculture.
    relevance_score: 0.9
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Unmanned Aerial Vehicle-based Applications in Smart Farming: A Systematic
    Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.14569/ijacsa.2023.01407107
  analysis: '>'
  apa_citation: 'Hossain, M. M., Rahman, M. A., Chaki, S., Ahmed, H., Haque, A., Tamanna,
    I., ... Ferdous, M. J. (2023). Smart-Agri: A Smart Agricultural Management with
    IoT-ML-Blockchain Integrated Framework. International Journal of Advanced Computer
    Science and Applications, 14(7), 985-996.'
  authors:
  - Md. Mamun Hossain
  - Md. Ashiqur Rahman
  - Sudipto Chaki
  - Humayra Ahmed
  - Ahsanul Haque
  - Iffat Tamanna
  - Silvio Felipe Barbosa Lima
  - Most. Jannatul Ferdous
  - Mohammad Shaifur Rahman
  citation_count: 1
  data_sources: Sensor data, agricultural field data
  explanation: Md. Mamun Hossain et al. (2023) present an advanced Internet of Things
    (IoT)-Machine Learning (ML)-Blockchain integrated system for smart agricultural
    management. This system addresses key challenges in agriculture, such as efficient
    water resource utilization, enhanced productivity, and data security. The paper
    focuses on the initial stages of the automated irrigation management pipeline,
    particularly data collection, edge and fog computing, and real-time data transmission.
  extract_1: With the release of open-source Arduino devices and the availability
    of different sensors, it is now possible to build devices that can monitor soil
    moisture content and irrigate fields or landscapes as needed. Machine learning
    algorithms are used to assess various agricultural data and may readily forecast
    which decisions should be made to improve farmland productivity.
  extract_2: In comparison to their previous farming ways, the farmer may easily combine
    ML and IoT into their farming and create an automated system that is more time
    effective and less risky.
  full_citation: '>'
  full_text: ">\n(IJACSA) International Journal of Advanced Computer Science and Applications,\n\
    Vol. 14, No. 7, 2023\nSmart-Agri: A Smart Agricultural Management with\nIoT-ML-Blockchain\
    \ Integrated Framework\nMd. Mamun Hossain, Md. Ashiqur Rahman, Sudipto Chaki,\
    \ Humayra Ahmed, Ahsanul Haque,\nIffat Tamanna, Sweety Lima, Most. Jannatul Ferdous,\
    \ Md. Saifur Rahman\nDepartment of Computer Science and Engineering,\nBangladesh\
    \ University of Business and Technology, Dhaka, Bangladesh\nAbstract—This paper\
    \ presents intuitive directions for field\nresearch by introducing a ground-breaking\
    \ IoT-ML-driven in-\ntelligent farm management platform. This study’s main goal\n\
    is to address agricultural difficulties by providing a thorough,\nintegrated solution.\
    \ This work makes a variety of important\ncontributions. By utilizing cutting-edge\
    \ technology like IoT and\nMachine Learning (ML), it first improves conventional\
    \ farm\nmanagement procedures. Farmers now have the capacity to\nremotely monitor\
    \ and regulate irrigation management thanks to\nsensor-based real-time data. Second,\
    \ based on data gathered from\nagricultural fields, our machine learning model\
    \ offers improved\nwater control management and fertilizer use recommendations,\n\
    maximizing production while minimizing resource usage. The\nsuggested solution\
    \ also uses blockchain technology to create a\nsafe, decentralized network that\
    \ guarantees data integrity and\ndefends against threats. We also introduce energy\
    \ harvesting\ntechnology to address the issue of continuous energy supply for\n\
    IoT devices, which lessens the load on farmers by removing the\nrequirement for\
    \ additional batteries. We achieved 89.5% accuracy\nin our proposed machine learning\
    \ model. The suggested model\nwould provide a variety of services to farmers,\
    \ including pesticide\nrecommendations and water motor control via mobile applications\n\
    and a cloud database.\nKeywords—Smart agriculture; machine learning; internet\
    \ of\nthings; energy harvesting; blockchain technology\nI.\nINTRODUCTION\nWithout\
    \ a doubt, agriculture is the most important source of\nlivelihood in Bangladesh.\
    \ As the world’s population expands,\nincreased agricultural output is essential.\
    \ The amount of\nfresh water and appropriate fertilizer used in irrigation must\n\
    be raised in order to maintain enhanced farm productivity.\nUnintentional water\
    \ waste happens when water consumption\nis not planned. Choosing the right fertilizer\
    \ for a particular\nfarmland is likewise a difficult challenge for our farmers.\n\
    This demonstrates the urgent need for alternatives to reduce\nwater waste and\
    \ appropriate fertilizer choices without placing\nfarmers under stress. In the\
    \ Electronic age, agriculture is rapidly\nbecoming a data-intensive sector, with\
    \ farmers collecting and\nanalyzing massive amounts of data from various sources\
    \ (e.g.,\nsensors, farming machinery, etc.) to obtain vital information\nand become\
    \ more efficient in production. Technology nowadays\nhas advanced a lot. With\
    \ the help of Machine Learning and\nIoT devices, a drastic change can be made\
    \ possible in the\nagricultural industry [1].\nWith the release of open-source\
    \ Arduino devices and the\navailability of different sensors, it is now possible\
    \ to build\ndevices that can monitor soil moisture content and irrigate\nfields\
    \ or landscapes as needed. Machine learning algorithms\nare used to assess various\
    \ agricultural data and may readily\nforecast which decisions should be made to\
    \ improve farmland\nproductivity. In comparison to their previous farming ways,\n\
    the farmer may easily combine ML and IoT into their farming\nand create an automated\
    \ system that is more time effective\nand less risky. Here, Fig. 1 depicts the\
    \ difference between the\ntraditional system with the ML-based agricultural framework.\n\
    Wireless Sensor Networks(WSNs) technologies have a\nmajor challenge with limited\
    \ energy. Many research in WSNs\nhas also been focused on reliable energy supply\
    \ to extend\nthe survival time of limited power sources in a network [2].\nEnergy\
    \ harvesting techniques are used to overcome the energy-\nscarcity problem of\
    \ WSNs. Energy harvesting is a process in\nwhich energy is obtained from the environment\
    \ as renewable\nenergy sources like solar radiation, Radio Frequency (RF),\nwind,\
    \ geothermal, electromagnetic (EM) waves, hydro, etc.,\nand is stored effectively\
    \ for driving various applications systems\nwhich may include wireless sensor\
    \ networks (WSNs) [3] [4].\nTherefore, it can be used to operate the devices of\
    \ the embedded\nsystem for a reliable energy supply.\nSecurity is one of the most\
    \ critical aspects of IoT, as it\ndeals with the protection of data and devices\
    \ from unauthorized\naccess, use, disclosure, disruption, modification, or destruction\n\
    [5]. Encryption mechanisms are mostly used to ensure that\ndata is securely transmitted.\
    \ But, regularly used encryption\nalgorithms such as DES, AES, and RSA will be\
    \ heavy for small-\nscale embedded systems. Therefore, blockchain technology can\n\
    be used as a lightweight calculation technique to reliably operate\nand secure\
    \ an IoT system[6] [7].\nThis paper presents the latest IoT-ML-driven intelligent\
    \ agri-\ncultural management and provides a substantial new research\ndirection.\
    \ The central insight of this work is to offer possible\nsolutions to farming\
    \ hazards while providing a combined\nframework. Some significant contributions\
    \ of this paper are\noutlined as follows:\n•\nSmart Management: Traditional agricultural\
    \ manage-\nment is strengthened with edge-cutting technologies\n(i.e., IoT and\
    \ Machine Learning).\n•\nDistant Monitoring and Controlling: Farmers can\nmonitor\
    \ and control irrigation management from a\ndistance in terms of sensor-based\
    \ real-time data.\n•\nIntelligent Decision Making: Our machine learning\nmodel\
    \ provides substantial water control management\nwww.ijacsa.thesai.org\n985 |\
    \ P a g e\n(IJACSA) International Journal of Advanced Computer Science and Applications,\n\
    Vol. 14, No. 7, 2023\nFig. 1. Architectural differences between traditional agricultural\
    \ management\nwith IoT-ML-Blockchain based agricultural framework.\nand fertilizer\
    \ utilization direction for a minimum\nresource with a maximum throughput based\
    \ on the\ndata collected from the farming field.\n•\nBlock chain Based Security\
    \ System: Our proposed\nsolution uses blockchain technology to create a secure\n\
    and decentralized network that can ensure data integrity\nand protect data from\
    \ denial of service (DDoS) attacks,\nand man-in-the-middle (MITM) attacks.\n•\n\
    Energy Harvesting: To ensure a continuous energy\nsupply for the IoT system, we\
    \ have introduced energy\nharvesting technology which reduces the hassle for the\n\
    farmers of using extra batteries.\nThe rest of the paper is organized as follows:\
    \ Section II\nprovides an overview of existing works related to our proposed\n\
    framework. Section III provides a detailed description of the\nhardware that have\
    \ used in this research. Section IV discusses\nthe proposed IoT-ML-based smart\
    \ agricultural framework.\nSection V discusses the blockchain-based security of\
    \ our system.\nSection VI presents the real-life implementation of our project.\n\
    Next, Section VII illustrates and analyzes the experimental\nresult from our machine\
    \ learning models. Section VIII future\nresearch directions in this field of research.\
    \ Finally, Section IX\ngives a brief conclusion.\nII.\nRELATED RESEARCH\nSeveral\
    \ ML-IoT-based researches and project works on\nagriculture systems have been\
    \ carried out till today.\nIn [8], For remote sensing and smart agriculture, Ullo\
    \ et al.\npresented a review of research on the developments in smart\nsensors\
    \ and IoT. They put forth some suggestions for IoT\nadvancements that will support\
    \ researchers and agriculturalists\nin their work.\nIn [9], Samuel et al. analyzed\
    \ numerous techniques for crop\nselection, crop sowing, weed detection, and system\
    \ monitoring.\nThey have recommended different image processing methods\nfor weed\
    \ and leaf detection and evaluated the benefits and\ndrawbacks of each. Drone\
    \ implementation has been considered\nfor real-time monitoring and seed planting.\
    \ However, no actual\nimplementation is shown in this research; they have only\n\
    reviewed several smart agricultural strategies.\nIn [10], they analyze soil moisture\
    \ levels and apply auto\nirrigation to the crops. In order to eliminate the need\
    \ for human\ninvolvement, this system also senses temperature, humidity, and\n\
    the presence of impediments in the targeted region. These data\nare accessible\
    \ to the user via mobile from the cloud. By giving\nthe motor driver the command\
    \ YES/NO based on this data, the\nuser can control the operation of the motor.\n\
    In [11], they use a cloud-based architecture and the Internet\nof Things to examine\
    \ a smart irrigation system. This system\nis designed to measure soil moisture\
    \ and humidity and then\nprocess this data in the cloud using a variety of machine-\n\
    learning techniques. Farmers receive accurate information\nregarding water content\
    \ regulations. If farmers apply smart\nirrigation, they can reduce their water\
    \ usage.\nIn [12], they use IoT and machine learning to predict\nlate blight disease\
    \ in potatoes and tomatoes prior to the first\noccurrence. This will send farmers\
    \ a warning message on the\nprecise time to apply the protective pesticides.\n\
    In [13], for yield prediction, they present a hybrid ML\nmodel using IoT. They\
    \ use a two-tier ML approach named\naKNCN and ELM-mBOA.In the first tire, they\
    \ estimate soil\nquality and in the second tier, they predict the crop yield.\n\
    In agriculture, supply, and demand have always been crucial\nissues for sustainable\
    \ production management. To address\nand provide a possible solution to this problem,\
    \ M. Lee et\nal. proposed an IoT-based controlled agricultural production\nmanagement\
    \ [14]. The authors developed a decision support\nsystem to predict specific criteria\
    \ based on IoT-enabled sensor\ndata.\nA cloud-based real-time data analysis model\
    \ is proposed\nin [15] instead of dew-point humidity. In this regard, they\ndesigned\
    \ a CMM index measurement model to evaluate the\ncrops’ comfort level of relative\
    \ humidity levels.\nTo increase the crop production rate, real-time data analysis\n\
    based on an artificial model is proposed by Y. Zhou et al. in [16].\nThe current\
    \ innovation trend expects farmers to use IoT and\ntechnology to identify the\
    \ organization of those difficulties they\nface, such as water management deficiencies\
    \ in agriculture\nand productivity concerns. This research has attempted to\n\
    build dazzling agricultural cultivation patterns utilizing IoT\ntechnologies.\
    \ IoT has significantly improved agriculture by\nanalyzing various agricultural\
    \ difficulties and issues.\nAn IOT-based intelligent technology for agriculture\
    \ that can\nsense soils and environmental factors was proposed by Abhijith\nH.\
    \ V. et al. in [17]. In order to identify the urgent needs for\noptimal crop growth,\
    \ they applied data mining techniques to\nthe sensed data.\nAbraham et al. [18]\
    \ create a proof-of-concept farm surveil-\nlance system that employs IoT and deep\
    \ learning to identify\nwww.ijacsa.thesai.org\n986 | P a g e\n(IJACSA) International\
    \ Journal of Advanced Computer Science and Applications,\nVol. 14, No. 7, 2023\n\
    farm encroachment.\nThe purpose of the study Wongpatikaseree et al. [19], is\n\
    to propose a traceability system, summarizing and presenting\nobserved data from\
    \ the smart farm.\nFor smart farming, Deden Ardiansyah et al. [20] suggested\n\
    a WSN Server that can handle and optimize agricultural data.\nThey instantly store\
    \ the data in the database, which is afterward\nrepresented as a website and accessible\
    \ through the Internet\nnetwork.\nAutomation in agriculture is a basic need for\
    \ remote\ncontrol-based agricultural management to ensure sustainable\ndevelopment\
    \ in this field of research. In this regard, L.\nVijayaraja et al. proposed an\
    \ IoT-based monitoring system\nusing wireless communication networks in [21].\
    \ The power\nsupply management used in this framework is entirely from the\nrenewable\
    \ energy source that provides a cost-effective model\nfor sensor-based decision\
    \ management in intelligent farming.\nIn [22], Yaw-Wen Kuo, et al. presented a\
    \ Long-range IoT\nsystem where they developed four types of IoT units based on\n\
    Long-range technology. They employed pH, ORP, and EC in\nType A and water, air,\
    \ and humidity sensors in Type B. In type\nC, the pump can be operated remotely,\
    \ and in type D, a water\nflow or water meter-controlling system is provided.\n\
    They presented a cloud service-based architecture in [23]\nthat includes a variety\
    \ of services for farmers, including agri-\nfood-related services, financing,\
    \ fostering, warehouse manage-\nment, etc. They have suggested interactive video\
    \ conferencing,\nvoice-based services, text messaging, web portal services, and\n\
    more under the heading of cloud services.\nA key component of practicing smart\
    \ agriculture is precision\nagriculture. In this context, Patil et al. [24] suggested\
    \ a system\nthat measures soil moisture using sensors for temperature,\nhumidity,\
    \ and soil moisture. Additionally, they offered various\nmethods for highlighting\
    \ the issue of data loss.\nIn [25], Quasim et al. use blockchain techniques in\
    \ smart\nhealthcare systems to ensure the security of healthcare data.\nIt provides\
    \ the security, privacy, and efficiency of the data in\ntransmission between wearable\
    \ sensors and Internet of Things\n(IoT) devices.\nIn [26], Makhdoom et al. made\
    \ a blockchain-based frame-\nwork for privacy-preserving and secure data sharing\
    \ in smart\ncities. The system secures data sharing by segmenting the\nblockchain\
    \ network into different channels, where each channel\nconsists of a limited number\
    \ of authorized organizations and\nhandles a particular type of data, such as\
    \ financial information,\nhealth data, smart car data, or data related to smart\
    \ energy.\nAdditionally, smart contracts contain access control rules that\nregulate\
    \ who has access to the data of users within a channel.\nMany different types\
    \ of intelligent agricultural systems were\ndeveloped in the earlier work. Some\
    \ of these current systems\nare tabulated in Table I.\nIII.\nSYSTEM HARDWARE\n\
    To set up the IoT environment for a smart agricultural\nsystem, we have selected\
    \ a variety of hardware components,\nincluding the ESP8266 Node MCU (Fig. 2) processing\
    \ unit\nand several sensors, including capacitive soil moisture (Fig. 3),\nPH\
    \ sensor (Fig. 4), MH-RD Rain Sensor (Fig. 5), and LDR\nSensor (Fig. 6). Our IoT\
    \ system is powered by DC-DC power\nconverter (Fig. 9), solar energy harvesting\
    \ components (Fig.\n10), single-channel relay modules (Fig. 7), DC motors (Fig.\
    \ 8),\netc.\nA. Node MCU ESP8266\nFig. 2. Node MCU module.\nFeatures1:\n•\nOperating\
    \ Voltage: 3.3V\n•\nInput Voltage: 7-12V\n•\nDigital I/O Pins (DIO): 16\n•\nClock\
    \ Speed: 80 MHz\n•\nSmall size module\nB. Capacitive Soil Moister Sensor v1.0\n\
    Fig. 3. Soil moisture sensor.\nFeatures2:\n•\nOperating Voltage: DC 3.3-5.5V\n\
    •\nOutput Voltage: DC 0-3.0V\n•\nDigital I/O Pins (DIO): 16\n•\nAnalog output\n\
    •\nSupports 3-Pin Sensor interface\nC. PH Sensor(SEN-00239)\nFeatures3:\n•\nSupply\
    \ voltage: 5V\n•\nCurrent: 5-10 mA\n•\nConsumption: ≤ 0.5 W\n•\nWorking temperature:\
    \ 10-50◦C\nwww.ijacsa.thesai.org\n987 | P a g e\n(IJACSA) International Journal\
    \ of Advanced Computer Science and Applications,\nVol. 14, No. 7, 2023\nTABLE\
    \ I. PREVIOUS RESEARCH WORKS IN TERMS OF OBJECTIVES, USED TOOLS, AND POSSIBLE\
    \ RESEARCH GAPS\nReference\nResearch Purpose\nUsed Technologies/Techniques\nFocused\
    \ Methods\nChallenges/Research Gaps\n[11]\nIoT-Cloud based automated Ir-\nrigation\n\
    Raspberry Pi, central cloud storage, soil\ndata set, machine learning techniques,\n\
    and mobile applications\nFocused to measure soil moisture and\nhumidity and then\
    \ process this data in\nthe cloud using a variety of machine\nlearning techniques\n\
    Farmers get information about water\nonly, no other necessary information.\n[12]\n\
    IoT-based agriculture monitor-\ning system for predictive anal-\nysis\nAir temperature\
    \ sensor, air humidity\nsensor, and soil moisture sensor, Micro-\ncontroller Unit\
    \ (NodeMCU), MQTT pro-\ntocol, R-Pi 3 microcontroller, MYSQL\nFocused to predict\
    \ the late blight disease\nin potatoes and tomatoes before the first\noccurrence\n\
    Not fully automated, need human inter-\nference to apply the action\n[14]\nIoT-based\
    \ agricultural produc-\ntion System\nDual CDMA protocol, pH sensor, water\nsensor,\
    \ and temperature sensor\nFocus on reliable agricultural production\nmanagement\n\
    Absence of dynamic data analysis model\n[15]\nIoT-Cloud based agricultural\nmonitoring\
    \ system\nArduino UNO, temperature and humidity\nsensors, Arduino Ethernet shield\
    \ and\nThingSpeak cloud platform\nFinding the index of thermal control\nfunctions\
    \ to find the comfort levels of\nagricultural parameters\nSensor data processing\
    \ time is slower\nin terms of CMM-MIST measurement\nalgorithm.\n[16]\nMachine\
    \ Learning based agri-\ncultural management\nThreat Model (TM), Deep Crop Map-\n\
    ping Model (DCMM), Random Forest\nRegression Algorithm (RFRA)\nAn intelligent\
    \ management to predict\nsoil moisture content based on the ML\narchitecture\n\
    The key challenge of this research is real-\ntime data processing\n[17]\nIntelligent\
    \ technology for IOT-\nbased agriculture\nPH sensor, temperature, rainfall, humid-\n\
    ity sensor, Predictive classification algo-\nrithm, MatLab\nFocused on the identification\
    \ of urgent\nneeds for optimal crop growth\nPrediction of specific need isn’t\
    \ gained\nproperly\n[18]\nComprehensive farm monitor-\ning system\nArduino Board,\
    \ Node MCU, Sensors,\nmobile App, machine learning, deep\nlearning\nCentered on\
    \ a surveillance system pro-\ntotype and an app-based remote admin-\nistration\
    \ solution\nRemotely monitoring but not fully auto-\nmated controlling\n[19]\n\
    IoT-based Smart farming\nSensors, mobile technology, Wi-Fi, cloud\ncomputing\n\
    Can measure soil temperature, soil\nmoister, humidity, pH and EC values\nHuman\
    \ interaction, water wastage\n[20]\nWater management based on\nIoT\nSoil moisture,\
    \ Wi-Fi segments\nReal-time data monitoring for soil mois-\nture and remote data\
    \ access\nLow or excessive irrigation, and water\nwaste\n[21]\nIoT-based cost-effective\
    \ agri-\ncultural management\nMoisture and Water sensors, Node MCU,\nSolar panel\
    \ and LCD display unit\nFocused on the low-cost parameter while\nensuring a sustainable\
    \ energy efficient\nmanagement\nThe key research gap of this work is\nthat this\
    \ model is applicable for small\nfarming areas.\n[22]\nIoT platform has a long\
    \ range\nfor controlling pumps and\nmonitoring agriculture\nLP WAN, Base station,\
    \ Ph sensor, Elec-\ntrical Conductivity sensor, Water Tem-\nperature Sensor, GY39\n\
    Presented a complete IoT system includ-\ning the design of a remote unit and server\n\
    construction\nIt is required to conduct additional re-\nsearch on the pH sensor\
    \ because the data\nthat has been gathered is inaccurate and\ncollected from other\
    \ vendors.\n[23]\nCloud service architecture for\nagriculture using IoT and Big\n\
    Data\nDifferent Sensor, Central Cloud Database\nProposed a cloud-based architecture\
    \ for\nthe agricultural industry that comprised\na range of services, including\
    \ farm mon-\nitoring, market-oriented service, agri-\nbusiness monitoring, etc.\n\
    Not implemented just proposed an archi-\ntectural model.\n[24]\nAI in smart agriculture\
    \ appli-\ncations\nArduino UNO, Soil moisture sensor, Wi-\nFi module\nAimed to\
    \ use a single moisture sensor\nand make decisions, such as turning on or\noff\
    \ the pump, based on the data collected.\nDiscussing the disease of crop using\n\
    image analysis technique but no actual\nimplementation is shown.\nProposed\nSystem\n\
    Smart\nagricultural\nsystem\nbased\non\nan\nIoT-ML-\nBlockchain\nIntegrated\n\
    Framework\nIoT devices, Mobile Application, Ma-\nchine Learning, and Blockchain-based\n\
    security system\nFocused on intelligent decision making,\nDistant Controlling,\
    \ Energy Harvesting,\nand Security based smart agricultural\nmanagement system\n\
    Future target to ensure Low latency net-\nwork and high bandwidth transmission,\n\
    easy deployment of Networks elements\nand Edge computing technology.\nFig. 4.\
    \ PH Sensor with module.\nFig. 5. MH RD rain sensor.\nD. MH-RD Rain Sensor\nFeatures4:\n\
    •\nWorking voltage: 5V\n•\nOutput format: Digital switching output (0 and 1)\n\
    •\nWith bolt holes for easy installation\n•\nUses a wide voltage LM393 comparator\n\
    E. LDR (Light Dependent Resistor)\nFeatures5:\n•\nAble to detect variable light\
    \ resistance (50-100 K\nOhms)\n1https : //components101.com/development − boards/nodemcu\
    \ −\nesp8266 − pinout − features − and − datasheet\n2https : //how2electronics.com/interface\
    \ − capacitive − soil −\nmoisturesensor − arduino/#Features038Specifications\n\
    3https\n:\n//www.techshopbd.com/detail/2576/PHSensorwith −\nModuletechshopbangladesh\n\
    4https : //components101.com/sensors/rain − drop − sensor −\nmodule#%20value\n\
    5https\n:\n//www.indiamart.com/proddetail/ldr − light −\ndependent − resistor\
    \ − 18812839691.html\nwww.ijacsa.thesai.org\n988 | P a g e\n(IJACSA) International\
    \ Journal of Advanced Computer Science and Applications,\nVol. 14, No. 7, 2023\n\
    Fig. 6. Light dependent resistor.\n•\nPhoto-resistor (photo-conductive cell)\n\
    •\nPower Level: 200 W\n•\nDiameter: 3-20 mm\nF. Single-Channel Relay Module\n\
    Fig. 7. Single-Channel relay module.\nFeatures6:\n•\nGround Voltage: 0 V\n•\n\
    VCC: Provide input to the relay coil\n•\nSupply Voltage: 3.75 to 6 V\n•\nCurrent:\
    \ 2 mA\n•\nRelay Maximum Current: 10 A\nG. DC Motor 6V\nFig. 8. DC motor.\nFeatures7:\n\
    •\nDiameter of the motor: 23.5mm\n•\nHeight: 30mm\n•\nStart voltage: 0.8V\n•\n\
    Rated voltage: 6V\n•\nNon-charging current: 25mA\n•\nSpeed: 2980 RPM\nFig. 9.\
    \ Adjustable DC-DC power converter.\nH. Adjustable DC-DC Power Converter (1.25V\
    \ - 35V-3A)\nFeatures8:\n•\nInput Voltage: 3.2V - 40VDC\n•\nOutput Voltage: 1.25V\
    \ - 35VDC\n•\nMax. Output Current: 3A\n•\nMax. Efficiency: 92\n•\nOutput Ripple:\
    \ ≤ 100mV\n•\nSwitching Frequency: 65KHz\n•\nOperating Temperature: -45°C to +85°C\n\
    •\nDimensions: 43mm*21mm*14mm(l*w*h)\nI.\nMSP430 Solar Energy Harvesting Tool\n\
    Fig. 10. MSP430 solar energy harvesting development tool texas instruments\nEZ430-RF2500-SEH.\n\
    Features9:\n•\nBattery-less operation\n•\nFunctions in dim ambient light and 400+\
    \ transmissions\n•\nAdaptable to any RF network or sensor input\n•\nInputs available\
    \ for external harvesters (thermal, piezo,\n2nd solar panel, etc.)\n•\nUSB debugging\
    \ and programming interface with ap-\nplication backchannel to PC\n•\n18 available\
    \ analog and communications input/output\npins\n•\nHighly integrated, ultra-low-power\
    \ MSP430 MCU with\n16-MHz performance\nwww.ijacsa.thesai.org\n989 | P a g e\n\
    (IJACSA) International Journal of Advanced Computer Science and Applications,\n\
    Vol. 14, No. 7, 2023\nFig. 11. Schematic pin configuration of our proposed framework.\n\
    IV.\nPROPOSED FRAMEWORK\nA. Circuit Diagram and Connections\nWe used Fritzing10,\
    \ an open-source hardware online appli-\ncation to make a schematic pin (Fig.\
    \ 11) diagram of our smart\nagriculture system.\nWe used ESP8266 NodeMCU V3, with\
    \ an integrated WIFI\nmodule as our processing hardware component. The system\n\
    connects an analog capacitive soil moisture sensor and an\nanalog pH sensor using\
    \ multiplexing to the A0 analog input\nof NodeMCU, a photo-resistor known as Light\
    \ Dependent\nResistors (LDR) sensor to a D3 digital input, and a raindrop\nsensor\
    \ with rain board and control module to D0 input Pin. In\naddition, the device\
    \ is connected with a D3 output pin to a DC\n5V micro submersible mini water pump\
    \ with the relay. We used\n6https : //components101.com/switches/5v − single −\
    \ channel −\nrelay − module − pinout − features − applications − working\n7https\n\
    :\n//techshopbd.com/detail/248/DCMotor6Vtechshop −\nbangladesh\n8https : //techshopbd.com/detail/2067/Adjustable\
    \ − DC − DC −\nPowerConverter\n9https\n:\n//www.radiolocman.com/op/device.html?di\n\
    =\n66638&/eZ430 − RF2500 − SEH\n10ıFritzing − circuitdesign, ȷhttps : //fritzing.org/\n\
    the NodeMCU’s 5V VU pin to power the Motor and Relay.\nHowever the LDR Sensor\
    \ and Rain Drop Sensor, only need\na 3.3V supply, the Capacitive Soil Moisture\
    \ Sensor and pH\nSensor need 5V. The GND pin serves as the common ground\nfor\
    \ every sensor. A solar panel system that is coupled to a\n9-volt battery backup\
    \ powers the system.\nB. Working Principle\nWe have divided our proposed framework\
    \ into different\nsubparts and each part’s working procedure is given below. The\n\
    overall working procedure is depicted in Fig. 12.\n1) Collecting Data From Sensor:\
    \ We used four different\ntypes of sensors, including capacitive soil moisture\
    \ sensors, pH\nsensors, MH-RD rain sensors, and LDR sensors, to execute\nsmart\
    \ IoT agriculture. We can estimate how much water is in\nthe soil with the aid\
    \ of a soil moisture sensor. A pH sensor,\nwhich ranges from 0 to 14, allows us\
    \ to determine the water’s\nacidity or alkalinity. Water turns acidic if the value\
    \ falls below\n7, else it is alkanoic. Consider levels 5.5 to 7 to be ideal for\n\
    growing crops. We can choose the best fertilizer for the soil\nwith the aid of\
    \ a pH sensor.\nBasically, a rain sensor is used to detect rain. A rain board\n\
    that can detect rain and a control module that can compare\nwww.ijacsa.thesai.org\n\
    990 | P a g e\n(IJACSA) International Journal of Advanced Computer Science and\
    \ Applications,\nVol. 14, No. 7, 2023\nData from \nmoisture, \nrain, \ndaylight\
    \ and \npH sensors\nFirebase Cloud \nDatabase\nDataset \nExtraction\nDataset \n\
    Preprocessing\nTrain ML \nModel\nML Predicted \nResult\nMonitor and \nControl\
    \ via \nMobile App\nPerform actions \nwhether on-off pump \nor apply suitable\
    \ \nfertilizers\nNode MCU Unit\nData from Node MCU to Firebase \nvia Blockchain\
    \ Network\nEnergy \nharvesting using \nsolar panel\nFig. 12. Proposed IoT-ML-Blockchain\
    \ framework for smart agricultural management.\nanalog and digital values are\
    \ both included. The raindrop sensor\naids in our selection of how to operate\
    \ the motor. The LDR\nsensor, which is used to detect the presence of light, has\
    \ also\nbeen employed.\nNow, each of these sensors is linked to a node MCU board\n\
    in our project, and data from the sensors is uploaded to the node\nMCU board and\
    \ shown on the serial monitor of the Arduino\nUNO editor and\n2) Sending Data\
    \ to Cloud Server: The node MCU board\nreceives all sensor data, which we would\
    \ love to save in the\ncloud in order to control for remote distance. We have\
    \ utilized\nFirebase as a cloud server. We linked the Firebase authentication\n\
    and real-time database URL that we built for our project with\nthe Arduino UNO\
    \ script in order to integrate Firebase with\nNode MCU.\nAll data is sent as a\
    \ parent-child combination to Firebase.\nAll of the sensor data is sent from the\
    \ node MCU as a child\nof Smart Irrigation, which we have constructed as Parent.\
    \ The\nFirebase stores the child value as a key-value pair.\n3) Data Collection:\
    \ The Firebase’s database contains all of\nthe sensor data, which is compiled\
    \ as a CSV file. Four columns\nmake up our dataset: pH, LDR, Rain, and Moisture.\
    \ Nearly\n820 data are in our dataset. Only integer values are accepted in\nthe\
    \ Moisture column here, whereas string values are accepted\nin the Rain and LDR\
    \ columns.\n4) Data Pre-processing: Data can be often inconsistent.\nMissing values\
    \ or values out of range is typical. So, the dataset\nneeds some pre-processing\
    \ before it can be used to train any\nmodel [27]. For this reason, we have considered\
    \ three such\ncases.\n•\nMissing Value Handling: While exploring our dataset,\n\
    we observed humidity, raining status, daylight status,\nand pH level fields with\
    \ missing values. Therefore, we\nhave filled them with average values of the respective\n\
    field.\n•\nOne Hot Decoder: Label encoding is simply the\nprocess of converting\
    \ each value in a column to a\nnumber. By using label encoding, we have converted\n\
    the categorical text data into model-understandable\nnumerical data. We had to\
    \ use the label encoding to\nget our dataset ready for our model.\n•\nAbnormal\
    \ Data Handling: Some data contain abnor-\nmal values. For example, the range\
    \ of the temperature\nin our dataset falls between -20 to 30 degrees Celsius.\n\
    However, we have even found some data above and\nbelow this range. Data tuples\
    \ with these abnormalities\nhave been dropped from the dataset.\n•\nNormalization:\
    \ Normalization is used to increase the\naccuracy of models [28]. It is simply\
    \ the process of\nhaving all the data on the same scale. We have used\nwww.ijacsa.thesai.org\n\
    991 | P a g e\n(IJACSA) International Journal of Advanced Computer Science and\
    \ Applications,\nVol. 14, No. 7, 2023\ntemperature, pressure, relative humidity,\
    \ and pressure\nas features to train our model. The features used\nto teach a\
    \ machine-learning algorithm have different\nranges of values. This can badly\
    \ affect the machine’s\nlearning ability. To solve this problem, we have\nstandardized\
    \ the feature values so that all the features\nstand equal in their representation.\
    \ By normalization,\nall the feature values are mapped in the range between\n\
    0 and 1.\n5) Machine Learning Model: The developed architecture is\na Neural Network\
    \ (NN) based because of its great accuracy. The\nfundamental advantage of NN over\
    \ classical machine learning\nmodels is that it recognizes significant traits\
    \ automatically\nand without human intervention. It’s a feed-forward NN with\n\
    parameters using the back-propagation algorithm and stochastic\ngradient descent.\
    \ Distinct processing layers serve different\npurposes. The output of the feature\
    \ map is produced by\nconventional layers, which conduct linear convolution between\n\
    a series of input tensors and filters. The nonlinear transformation\nis performed\
    \ using the ReLU, which is the most widely\nemployed activation function. The\
    \ activation function for the\nfully connected layer to the end must be careful\
    \ on the tasks.\nBatch normalization and an activation layer are performed after\n\
    each convolution.\nReLU = max(0, X)\n(1)\nd(x) = activation(wx + b)\n(2)\nDropout(x,\
    \ p) = (x : prob., p) (x : prob., 1 − p)\n(3)\nS(x) =\n1\n1 + e−x\n(4)\n6) Mobile\
    \ Application Development: A smart remote con-\ntrol application can ease our\
    \ maximum task [29]. We have used\nthe MIT app inventor to make the mobile application\
    \ that will\nbe connected to our system and by using this app we can do\nthe following\
    \ task\n•\nFertilizer Suggestion: By analyzing the pH value, the\napp may suggest\
    \ which fertilizer is best for a given\nsoil. The app will recommend some alkanoic\
    \ fertilizer\nif the pH value rises to help reduce the rising pH value\nand vice\
    \ versa. Algorithm 1 depicts how the fertilizer\nis suggested in our system.\n\
    •\nVisualization of Predicted Results: In order to predict\nwhether the motor\
    \ would turn off or not based on\nthe moisture, LDR, and raindrop sensor values,\
    \ we\nconstruct a neural network model and link it with\nour mobile app. Algorithm\
    \ 2 depicts how the remote\ncontrolling is done to control the motor in our system.\n\
    •\nRemote Motor Controlling: The farmer can use the\napp to control the motor\
    \ from any distant or remote\nAlgorithm 1: Decision Making for Fertilizer Sugges-\n\
    tion\n1. Initialize the pH sensor\n2. Read data from pH sensor\n3.if pH >= 6.5\
    \ && pH <= 7.5 then\nSoil is balanced.\nNo fertilizer is recommended.\n4.else\
    \ if pH < 6.5 then\nSoil is acidic.\nStore the pH amount.\nFind the level_id corresponding\
    \ pH amount.\nSearch through the fertilizer data(in JSON format)\nif level_id\
    \ == keyofJSONdata then\nSend the fertilizer name back to the user.\nelse\nThe\
    \ result doesn’t match our dataset.\nelse\nSoil is alkanoic\nStore the pH amount\n\
    Find the level_id corresponding pH amount\nSearch through the fertilizer data(in\
    \ JSON format)\nif level_id == keyofJSONdata then\nSend the fertilizer name back\
    \ to the user\nelse\nThe result doesn’t match our dataset\nAlgorithm 2: Decision\
    \ Making for Pump on/off\n1. Initialize the Moisture, Rain, and LDR sensors.\n\
    2. Read data from each sensor.\n3. Send the data to the server using an HTTP POST\n\
    request.\n4. Apply machine learning to the collected data.\n5. Retrieve the predicted\
    \ result(PUMP ON/OFF).\n6. Send Predicted results to the mobile phone.\n7. Wait\
    \ for user input from the mobile phone.\n8. if user_action = true then\nSend a\
    \ signal to the node MCU board.\nPerform action according to signal.\nelse\nWait\
    \ for 300 seconds\nTake an automated action according to the\npredicted result\
    \ (PUMP ON/OFF)\nlocation based on the prediction outcome. When the\nfarmer presses\
    \ the off button, it sends a value of 0 to\nthe firebase, which then passes this\
    \ signal on to the\nnode MCU via the wifi module and sets the pin value\nto the\
    \ LOW, so turning off the motor.\nV.\nBLOCKCHAIN-BASED SMART-AGRI\nBlockchain\
    \ was described as a data structure using asym-\nmetric encryption algorithms\
    \ and hash functions to ensure\nthat data tampering and forgery are impossible\
    \ [30] [31] [32].\nEvery smart system needs to be taken under the shelter of a\n\
    security system to avoid getting an external attack. Our smart\nagricultural system\
    \ is public so any intruder can make attacks\nsuch as DoS attacks to crash the\
    \ system, and spoofing to alter\nthe control. In the IoT environment where high\
    \ computational\nencryption, decryption, and high-level security are not possible.\n\
    www.ijacsa.thesai.org\n992 | P a g e\n(IJACSA) International Journal of Advanced\
    \ Computer Science and Applications,\nVol. 14, No. 7, 2023\nTherefore, We are\
    \ implanting blockchain technologies into our\nsmart agricultural system through\
    \ which we are capable to\nmaintain high throughput, low latency, low communication\n\
    cost, and tamper-proof and traceability. Blockchain refers to a\ndistributed ledger\
    \ system where data or transactions are stored\nin blocks that are connected to\
    \ each other through making\nhash which can not only serve as unique IDs but also\
    \ prove\nthe integrity of the blocks. The hash of the previous block is\nused\
    \ to make a hash for the next block along with its data.\nIf any intruder wants\
    \ to tamper or alter the block data, all\nthe consecutive block hash will be changed.\
    \ Therefore, any\nintruder attempts to alter the data or spoof the blockchain\
    \ will\nnot be possible.\nIn this system, we consider nodeMCU, Firebase cloud,\
    \ and\nmobile app as nodes. In order to avoid altering data in the\nnetwork, we\
    \ are using blockchain technology. When any node\nwants to send data to other\
    \ nodes, it encapsulates the data\ninto a block along with its hash values (SHA256)\
    \ and nodeID\nthen adds it to the blockchain. All these nodes will contain the\n\
    blockchain locally. After adding the block, the node sends it\nto the cloud through\
    \ the network. We are not using any PoW,\nPoS, or accountant selection algorithms\
    \ which is not possible\nbecause of a very small amount of nodes and our nodeMCU\n\
    has very limited capabilities to run these algorithms (Algorithm\n3). When the\
    \ block is sent to the cloud, I validate the block by\nchecking all the hashes\
    \ of the previous block along with the\nnodeID. If it gets any error, the node\
    \ will consider the block\nas from an attacker and reject the block from adding\
    \ to the\nchain. Fig. 13 depicts the blockchain in our system.\nFig. 13. Blockchain\
    \ in the system.\nVI.\nIMPLEMENTATION\nA. Hardware Implementation\nOur Smart-agri\
    \ system hardware demo showed in Fig. 14.\nB. Mobile App Implementation\nThe interface\
    \ of the mobile app that we developed in\nthe MIT App Inventor resembles (Fig.\
    \ 15). The “Fertilizer\nSuggestion\" button can be found in the app. Depending\
    \ on the\nAlgorithm 3: Blockchain-based data security in smart-\nagri\n1. Initialization\n\
    2. Read data\n3. Block_Hash ← SHA256 (Previous_hash, data,\nnodeId, timestamp,\
    \ nonce)\n4. Make a block (Block_hash, data, nonce, nodeID,\ntimestamp)\n5. Add\
    \ the block to the chain locally.\n6. Send the block to the cloud.\n7.if Block_hash\
    \ = Previous_Hash then\nAccept the block, then add it to the chain.\nSend acknowledgment.\n\
    Fig. 14. Hardware set-up of our proposed framework.\npH sensor measurement, this\
    \ button tells us whether the soil\nis alkanoic or acidic when we click it. We\
    \ used the decision\ntree algorithm to determine the ideal fertilizer for a given\
    \ soil\nbased on its quality.\nThe farmer can view the data from the moisture,\
    \ raindrop,\nand daylight sensors in our app. Our program uses a neural\nnetwork\
    \ model that we built and implemented to forecast\nwhether the motor would be\
    \ on or off. We can operate our\nmotor using the two buttons in our app labeled\
    \ “ON\" and\n“OFF\". The motor status in the firebase changes to 1 when we\npress\
    \ the “ON\" button, and the firebase sends a signal to the\nnodeMCU board, which\
    \ then turns the motor on automatically.\nAnd that is how we can use our mobile\
    \ app to implement\nremote control.\nwww.ijacsa.thesai.org\n993 | P a g e\n(IJACSA)\
    \ International Journal of Advanced Computer Science and Applications,\nVol. 14,\
    \ No. 7, 2023\nTABLE II. SYSTEM EVALUATION WITH THE EXISTING SYSTEMS\nReference\n\
    Remote Motor\nControlling\nEnergy\nHar-\nvesting\nCustomised\nMobile\nApplication\n\
    Machine\nLearning\nIntegrated\nFramework\nCreating Own\nData set\nCentral Cloud\n\
    Database\npH based fer-\ntilizer sugges-\ntions\nBlockchain\nbased\nSecurity\n\
    Full au-\ntoma-\ntion\n[11]\n×\n×\n✓\n✓\n×\n✓\n×\n×\n×\n[12]\n×\n×\n×\n✓\n×\n\
    ×\n×\n×\n×\n[14]\n×\n×\n×\n✓\n×\n×\n×\n×\n[16]\n×\n×\n×\n✓\n✓\n×\n×\n×\n×\n[17]\n\
    ×\n×\n×\n✓\n×\n×\n✓\n×\n×\n[18]\n✓\n×\n✓\n✓\n×\n×\n✓\n×\n×\n[19]\n✓\n×\n✓\n×\n\
    ×\n✓\n×\n×\n×\n[20]\n✓\n×\n✓\n×\n×\n×\n×\n×\n✓\n[21]\n×\n×\n×\n×\n×\n×\n×\n×\n\
    ×\n[22]\n✓\n×\n✓\n×\n×\n✓\n×\n×\n×\n[23]\n✓\n×\n×\n×\n✓\n✓\n×\n×\n×\n[24]\n✓\n\
    ×\n✓\n×\n×\n✓\n×\n×\n×\nProposed\nMethod\n✓\n✓\n✓\n✓\n✓\n✓\n✓\n✓\n✓\nTABLE III.\
    \ SUMMARY OF PROPOSED NEURAL NETWORK PERFORMANCE PARAMETERS\nEpochs\nProcessing\
    \ Time /msec\nBinary Cross Entropy Validation Loss\nGradient Descent Neural Network\
    \ Validation Accuracy\n10\n7\n0.5478\n0.8947\n25\n8\n0.4525\n0.8948\n50\n7\n0.3766\n\
    0.8948\n75\n7\n0.3462\n0.8949\n100\n8\n0.3376\n0.8948\nVII.\nEXPERIMENTAL RESULT\
    \ ANALYSIS\nA. System Evaluation\nIn Table II, we have shown the difference between\
    \ our\nsystem and the existing systems. The criterion based on which\nwe have\
    \ shown the differences are remote monitor control, data\nvisualization, customized\
    \ mobile application, machine learning\nintegrated framework, creating own database,\
    \ central cloud\ndatabase, pH-based fertilizer suggestions, Machine learning\n\
    model development, and full automation. The references from\n[11] to [24] there\
    \ is no such system that has implemented all the\ncriteria in their system. But\
    \ we have successfully implemented\nall the criteria in our systems.\nB. Machine\
    \ Learning Model Evaluation\nOur deep learning neural network is implemented with\n\
    the help of our own dataset. We split the dataset into 80-20\nratios for training\
    \ and validation purposes. The heat map of the\nfeatures columns is illustrated\
    \ in Fig. 16. We fit our gradient\ndescent neural network within the data set.\
    \ The input layer\nof the neural network receives 3 input lines from the features\n\
    column, namely, rain status, moisture level, and daylight status\nrespectively.\
    \ Then we add one dense layer with 16 neurons and\nthe activation function as\
    \ ReLu. The next layer is a dropout\nlayer with a 20% drop rate. Next, we add\
    \ another dense layer\nwith 8 neurons and apply the activation function as ReLu.\n\
    Then we add another dropout layer with a 20% drop rate.\nFinally, for the output\
    \ layer, we add another dense layer with\na single neuron with is satiable for\
    \ binary classification (i.e.\nmotor on-off decision) with activation function\
    \ as Sigmoid.\nThe experimental result of our model is represented in\nTable III\
    \ while showing the validation loss rate as binary cross\nentropy and validation\
    \ accuracy level in different epochs. Our\nmodel successfully outcomes a stable\
    \ level of accuracy for\nthe different epochs. We got almost 89.5% accuracy in\
    \ our\nexperimental set-up.\nVIII.\nFUTURE RESEARCH DIRECTION\nFor future smart\
    \ irrigation management, several issues must\nbe addressed as follows:\n•\nLow-latency\
    \ in Real-Time Application: The moni-\ntoring and controlling mobile application\
    \ must be able\nto transmit real-time data to the farmers or its entity\nwhile\
    \ ensuring a low latency network.\n•\nHigh Bandwidth: To facilitate a buffer-less\
    \ transmis-\nsion, we need to ensure maximum bandwidth level to\nthe transmission\
    \ process.\n•\nConnectivity: To meet the high communication de-\nmands of future\
    \ IoT-ML integrated irrigation systems,\nreliable synchronization between linked\
    \ autos would\nbe required.\n•\nDeployment of Network Elements: When a network\n\
    has a high enough number of nodes, its overall\nperformance increases. Because\
    \ network equipment\ndeployment is costly, it is vital to have the required\n\
    number of network components up and running as\nquickly as feasible.\n•\nAugmented\
    \ Reality: AR is a multimedia application\nthat mixes real-world scenes into virtual\
    \ scenes and\nsuperimposes virtual scenes over real-world scenes to\nsupplement\
    \ traditional real-image information. This\ntechnology has the potential to help\
    \ farmers become\nmore aware of the app’s functionality.\n•\nEdge Computing: This\
    \ networking approach is built\non a network control layer that is logically centralized.\n\
    www.ijacsa.thesai.org\n994 | P a g e\n(IJACSA) International Journal of Advanced\
    \ Computer Science and Applications,\nVol. 14, No. 7, 2023\nFig. 15. Mobile application\
    \ interface.\nFig. 16. Heat-Map of the features of our ML part.\nIt contributes\
    \ to the creation of a dependable resource\nmanagement and traffic control system.\n\
    IX.\nCONCLUSION\nWe have put forth an integrated solution that enables\nfarmers\
    \ to solve the challenges that limit their production\nand profitability by utilizing\
    \ cutting-edge technologies like\nmachine learning (ML), the Internet of Things\
    \ (IoT), and\nblockchain. Through user-friendly mobile applications and\na secure\
    \ cloud database, this model, implemented with a\ngenerated database, offers helpful\
    \ insights and recommendations\nto farmers, including pesticide usage and water\
    \ motor control.\nReal-time monitoring and data collecting is made possible\n\
    by the integration of IoT devices, enabling accurate decision-\nmaking and assuring\
    \ optimal resource allocation. Incorpo-\nrating blockchain technology also improves\
    \ data traceability,\ntransparency, and integrity, fostering trust and accountability\n\
    throughout the agricultural ecosystem. Farmers may gain from\nhigher productivity,\
    \ decreased expenses, and enhanced general\nagricultural management by implementing\
    \ our Smart-Agri\nframework. They can obtain up-to-date, accurate information,\n\
    make decisions that will increase productivity and reduce\nwaste, and improve\
    \ their agricultural techniques. We have\napplied the gradient descent neural\
    \ network model for water\ncontrol management and achieved up to 89.5% accuracy.\
    \ In\naddition, the suggested structure creates chances for cooperation,\ninformation\
    \ exchange, and market access, all of which help\nthe agricultural industry thrive\
    \ and flourish sustainably.\nIn the future, the framework’s scalability, and its\
    \ inter-\noperability can all be explored through more research and\ndevelopment\
    \ in this area, along with potential problems like\nconnectivity problems and\
    \ data privacy issues. We can build an\necosystem that really revolutionizes the\
    \ agriculture sector by\ncontinually improving and building upon these technological\n\
    achievements, making it more intelligent, efficient, and robust\nin the face of\
    \ changing global issues.\nACKNOWLEDGMENT\nWe would like to acknowledge the support\
    \ of the\nBangladesh University of Business and Technology and the\nIoT lab for\
    \ their suggestion and resource sharing.\nREFERENCES\n[1]\nA. Rehman, T. Saba,\
    \ M. Kashif, S. M. Fati, S. A. Bahaj, and H. Chaudhry,\n“A revisit of internet\
    \ of things technologies for monitoring and control\nstrategies in smart agriculture,”\
    \ Agronomy, vol. 12, no. 1, p. 127, 2022.\n[2]\nM. Biswas, A. Rahman, M. S. Kaiser,\
    \ S. Al Mamun, K. S. Ebne Mizan,\nM. S. Islam, and M. Mahmud, “Indoor navigation\
    \ support system for\npatients with neurodegenerative diseases,” in Brain Informatics:\
    \ 14th\nInternational Conference, BI 2021, Virtual Event, September 17–19,\n2021,\
    \ Proceedings 14.\nSpringer, 2021, pp. 411–422.\n[3]\nH. Elahi, K. Munir, M. Eugeni,\
    \ S. Atek, and P. Gaudenzi, “Energy\nharvesting towards self-powered iot devices,”\
    \ Energies, vol. 13, no. 21,\np. 5528, 2020.\n[4]\nA. Sabovic, A. K. Sultania,\
    \ C. Delgado, L. De Roeck, and J. Famaey,\n“An energy-aware task scheduler for\
    \ energy-harvesting batteryless iot\ndevices,” IEEE Internet of Things Journal,\
    \ vol. 9, no. 22, pp. 23 097–\n23 114, 2022.\n[5]\nM. A. Rahman, H. Ahmed, and\
    \ M. M. Hossain, “An integrated hardware\nprototype for monitoring gas leaks,\
    \ fires, and remote control via mobile\napplication,” International Journal of\
    \ Advanced Computer Science and\nApplications, vol. 13, no. 10, 2022.\n[6]\nK.\
    \ Demestichas, N. Peppes, T. Alexakis, and E. Adamopoulou,\n“Blockchain in agriculture\
    \ traceability systems: A review,” Applied\nSciences, vol. 10, no. 12, p. 4113,\
    \ 2020.\nwww.ijacsa.thesai.org\n995 | P a g e\n(IJACSA) International Journal\
    \ of Advanced Computer Science and Applications,\nVol. 14, No. 7, 2023\n[7]\n\
    O. Bermeo-Almeida, M. Cardenas-Rodriguez, T. Samaniego-Cobo,\nE. Ferruzola-Gómez,\
    \ R. Cabezas-Cabezas, and W. Bazán-Vera,\n“Blockchain in agriculture: A systematic\
    \ literature review,” in Technolo-\ngies and Innovation: 4th International Conference,\
    \ CITI 2018, Guayaquil,\nEcuador, November 6-9, 2018, Proceedings 4.\nSpringer,\
    \ 2018, pp. 44–\n56.\n[8]\nS. L. Ullo and G. R. Sinha, “Advances in iot and smart\
    \ sensors for\nremote sensing and agriculture applications,” Remote Sensing, vol.\
    \ 13,\nno. 13, p. 2585, 2021.\n[9]\nK. Malarvizhi, S. Karthik, M. G. SG et al.,\
    \ “Machine learning and\ninternet of things based smart agriculture,” in 2020\
    \ 6th International\nConference on Advanced Computing and Communication Systems\n\
    (ICACCS).\nIEEE, 2020, pp. 1101–1106.\n[10]\nJ. Boobalan, V. Jacintha, J. Nagarajan,\
    \ K. Thangayogesh, and S. Tamila-\nrasu, “An iot based agriculture monitoring\
    \ system,” in 2018 international\nconference on communication and signal processing\
    \ (ICCSP).\nIEEE,\n2018, pp. 0594–0598.\n[11]\nK. Phasinam, T. Kassanuk, P. P.\
    \ Shinde, C. M. Thakar, D. K. Sharma,\nM. Mohiddin, A. W. Rahmani et al., “Application\
    \ of iot and cloud\ncomputing in automation of agriculture irrigation,” Journal\
    \ of Food\nQuality, vol. 2022, 2022.\n[12]\nA. A. Araby, M. M. Abd Elhameed, N.\
    \ M. Magdy, N. Abdelaal, Y. T.\nAbd Allah, M. S. Darweesh, M. A. Fahim, H. Mostafa\
    \ et al., “Smart iot\nmonitoring system for agriculture with predictive analysis,”\
    \ in 2019 8th\nInternational Conference on Modern Circuits and Systems Technologies\n\
    (MOCAST).\nIEEE, 2019, pp. 1–4.\n[13]\nA. Gupta and P. Nahar, “Classification\
    \ and yield prediction in smart\nagriculture system using iot,” Journal of Ambient\
    \ Intelligence and\nHumanized Computing, pp. 1–10, 2022.\n[14]\nM. Lee, J. Hwang,\
    \ and H. Yoe, “Agricultural production system based\non iot,” in 2013 IEEE 16Th\
    \ international conference on computational\nscience and engineering.\nIEEE, 2013,\
    \ pp. 833–837.\n[15]\nM. S. Mekala and P. Viswanathan, “Clay-mist: Iot-cloud enabled\
    \ cmm\nindex for smart agriculture monitoring system,” Measurement, vol. 134,\n\
    pp. 236–244, 2019.\n[16]\nY. Zhou, Q. Xia, Z. Zhang, M. Quan, and H. Li, “Artificial\
    \ intelligence\nand machine learning for the green development of agriculture\
    \ in the\nemerging manufacturing industry in the iot platform,” Acta Agriculturae\n\
    Scandinavica, Section B—Soil & Plant Science, vol. 72, no. 1, pp.\n284–299, 2022.\n\
    [17]\nH. Abhijith, D. A. Jain, and U. A. A. Rao, “Intelligent agriculture\nmechanism\
    \ using internet of things,” in 2017 International Conference\non Advances in\
    \ Computing, Communications and Informatics (ICACCI).\nIEEE, 2017, pp. 2185–2188.\n\
    [18]\nG. Abraham, R. Raksha, and M. Nithya, “Smart agriculture based on\niot and\
    \ machine learning,” in 2021 5th International Conference on\nComputing Methodologies\
    \ and Communication (ICCMC).\nIEEE, 2021,\npp. 414–419.\n[19]\nK. Wongpatikaseree,\
    \ P. Kanka, and A. Ratikan, “Developing smart farm\nand traceability system for\
    \ agricultural products using iot technology,”\nin 2018 IEEE/ACIS 17th International\
    \ Conference on Computer and\nInformation Science (ICIS), 2018, pp. 180–184.\n\
    [20]\nD. Ardiansyah, A. S. M. Huda, Darusman, R. G. Pratama, and\nA. P. Putra,\
    \ “Wireless sensor network server for smart agriculture\noptimatization,” IOP\
    \ Conference Series: Materials Science and\nEngineering, vol. 621, no. 1, p. 012001,\
    \ oct 2019. [Online]. Available:\nhttps://doi.org/10.1088/1757-899x/621/1/012001\n\
    [21]\nL. Vijayaraja, R. Dhanasekar, R. Kesavan, D. Tamizhmalar, R. Premku-\nmar,\
    \ and N. Saravanan, “A cost effective agriculture system based on\niot using sustainable\
    \ energy,” in 2022 6th International Conference\non Trends in Electronics and\
    \ Informatics (ICOEI).\nIEEE, 2022, pp.\n546–549.\n[22]\nY.-W. Kuo, W.-L. Wen,\
    \ X.-F. Hu, Y.-T. Shen, and S.-Y. Miao, “A lora-\nbased multisensor iot platform\
    \ for agriculture monitoring and submersible\npump control in a water bamboo field,”\
    \ Processes, vol. 9, no. 5, p. 813,\n2021.\n[23]\nP. Srinivasulu, M. S. Babu,\
    \ R. Venkat, and K. Rajesh, “Cloud service\noriented architecture (csoa) for agriculture\
    \ through internet of things\n(iot) and big data,” in 2017 IEEE international\
    \ conference on electrical,\ninstrumentation and communication engineering (ICEICE).\
    \ IEEE, 2017,\npp. 1–6.\n[24]\nR. K. Patil and S. S. Patil, “Cognitive intelligence\
    \ of internet of things in\nsmart agriculture applications,” in 2020 IEEE Pune\
    \ Section International\nConference (PuneCon).\nIEEE, 2020, pp. 129–132.\n[25]\n\
    M. T. Quasim, F. Algarni, A. A. E. Radwan, and G. M. M. Alshmrani, “A\nblockchain\
    \ based secured healthcare framework,” in 2020 International\nConference on Computational\
    \ Performance Evaluation (ComPE). IEEE,\n2020, pp. 386–391.\n[26]\nI. Makhdoom,\
    \ I. Zhou, M. Abolhasan, J. Lipman, and W. Ni, “Privyshar-\ning: A blockchain-based\
    \ framework for privacy-preserving and secure\ndata sharing in smart cities,”\
    \ Computers & Security, vol. 88, p. 101653,\n2020.\n[27]\nM. Rahaman, M. Chowdhury,\
    \ M. A. Rahman, H. Ahmed, M. Hossain,\nM. H. Rahman, M. Biswas, M. Kader, T. A.\
    \ Noyan, and M. Biswas,\n“A deep learning based smartphone application for detecting\
    \ mango\ndiseases and pesticide suggestions,” International Journal of Computing\n\
    and Digital Systems, vol. 13, no. 1, pp. 1–1, 2023.\n[28]\nM. N. Rahaman, S. Chaki,\
    \ M. S. Biswas, M. Biswas, S. Ahmed, M. J. N.\nMahi, and N. Faruqui, “Identifying\
    \ the signature of suicidality: A\nmachine learning approach,” in THEETAS 2022:\
    \ Proceedings of The\nInternational Conference on Emerging Trends in Artificial\
    \ Intelligence\nand Smart Systems, THEETAS 2022, 16-17 April 2022, Jabalpur, India.\n\
    European Alliance for Innovation, 2022, p. 279.\n[29]\nM. A. R. Milon Biswas,\
    \ H. Ahmed, A. Anis, and M. M. Hossain, “A\nsmartphone-based application for medical\
    \ assistance of elderly patients,”\nInternational Journal of Research and Innovation\
    \ in Applied Science\n(IJRIAS), vol. 7, no. 6, pp. 15–19, 2022.\n[30]\nZ. Zheng,\
    \ S. Xie, H.-N. Dai, X. Chen, and H. Wang, “Blockchain\nchallenges and opportunities:\
    \ A survey,” International journal of web\nand grid services, vol. 14, no. 4,\
    \ pp. 352–375, 2018.\n[31]\nY. Yuan, F.-Y. Wang et al., “Blockchain: the state\
    \ of the art and future\ntrends,” Acta Automatica Sinica, vol. 42, no. 4, pp.\
    \ 481–494, 2016.\n[32]\nS. Ahmed, M. Biswas, M. Hasanuzzaman, M. J. N. Mahi, M.\
    \ A. Islam,\nS. Chaki, and L. Gaur, “A secured peer-to-peer messaging system based\n\
    on blockchain,” in 2022 3rd International Conference on Intelligent\nEngineering\
    \ and Management (ICIEM).\nIEEE, 2022, pp. 332–337.\nwww.ijacsa.thesai.org\n996\
    \ | P a g e\n"
  inline_citation: (Hossain et al., 2023)
  journal: International journal of advanced computer science & applications (Online)
  key_findings: The proposed system integrates advanced sensing technologies, IoT,
    ML, and Blockchain to provide real-time monitoring and control of irrigation systems,
    enabling farmers to optimize water use, improve crop yield, and ensure data integrity
    and security.
  limitations: null
  main_objective: To present a novel IoT-ML-Blockchain integrated framework for smart
    agricultural management that addresses the challenges of efficient water resource
    utilization, enhanced productivity, and data security.
  pdf_link: http://thesai.org/Downloads/Volume14No7/Paper_107-Smart_Agri_A_Smart_Agricultural_Management.pdf
  publication_year: 2023
  relevance_evaluation: The paper is highly relevant to the specific point I am making
    in my literature review, which is to explore the use of advanced sensing technologies,
    such as hyperspectral imaging and thermal sensing, for non-invasive plant stress
    detection. The paper provides a comprehensive overview of the current state and
    future potential of real-time, end-to-end automated irrigation management systems
    that integrate IoT and ML technologies, which is essential for understanding the
    context and significance of my specific point.
  relevance_score: '1.0'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: IoT, ML, Blockchain
  title: 'Smart-Agri: A Smart Agricultural Management with IoT-ML-Blockchain Integrated
    Framework'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy10010140
  analysis: '>'
  authors:
  - Deepak Gautam
  - Vinay Pagay
  citation_count: 36
  explanation: From your close reading of the paper, provide a concise explanation
    of the study's purpose and main objectives, using a maximum of 3 sentences.
  extract_1: 'The purpose and intention of this systematic review on automated systems
    for real-time irrigation management can be interpreted as follows:

    Addressing the global food challenge: The review aims to explore how automated,
    real-time irrigation management systems can contribute to the efficient use of
    water resources and enhance agricultural productivity to meet the growing demand
    for food.'
  extract_2: 'Evaluating the current state and future potential: The primary objective
    is to critically assess the current state of end-to-end automated irrigation management
    systems that integrate IoT and machine learning technologies. The review also
    seeks to identify gaps and propose solutions for seamless integration across the
    automated irrigation management system to achieve fully autonomous, scalable irrigation
    management.'
  full_citation: '>'
  full_text: ">\nagronomy\nReview\nA Review of Current and Potential Applications\
    \ of\nRemote Sensing to Study the Water Status of\nHorticultural Crops\nDeepak\
    \ Gautam\nand Vinay Pagay *\nSchool of Agriculture, Food and Wine, The University\
    \ of Adelaide, PMB 1, Glen Osmond, SA 5064, Australia;\ndeepak.gautam@adelaide.edu.au\n\
    * Correspondence: vinay.pagay@adelaide.edu.au; Tel.: +61-8-83130773\nReceived:\
    \ 25 August 2019; Accepted: 9 January 2020; Published: 17 January 2020\n\x01\x02\
    \x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: With increasingly\
    \ advanced remote sensing systems, more accurate retrievals of crop water\nstatus\
    \ are being made at the individual crop level to aid in precision irrigation.\
    \ This paper summarises\nthe use of remote sensing for the estimation of water\
    \ status in horticultural crops. The remote\nmeasurements of the water potential,\
    \ soil moisture, evapotranspiration, canopy 3D structure, and\nvigour for water\
    \ status estimation are presented in this comprehensive review. These parameters\n\
    directly or indirectly provide estimates of crop water status, which is critically\
    \ important for irrigation\nmanagement in farms. The review is organised into\
    \ four main sections: (i) remote sensing platforms;\n(ii) the remote sensor suite;\
    \ (iii) techniques adopted for horticultural applications and indicators of\n\
    water status; and, (iv) case studies of the use of remote sensing in horticultural\
    \ crops. Finally, the\nauthors’ view is presented with regard to future prospects\
    \ and research gaps in the estimation of the\ncrop water status for precision\
    \ irrigation.\nKeywords: UAS; UAV; drone; unmanned; satellite; water stress; irrigation;\
    \ vegetation index\n1. Introduction\nUnderstanding the water status of crops is\
    \ important for optimal management and application\nof water to accommodate for\
    \ inter and intra-ﬁeld variability to achieve a speciﬁc target, such as\nmaximum\
    \ water use eﬃciency, yield, quality, or proﬁtability [1,2]. The importance of\
    \ optimal water\nmanagement in agriculture in semi-arid or arid regions has become\
    \ increasingly important in light\nof recent water scarcities through reduced\
    \ allocations, as well as increased demand due to greater\nareas under production\
    \ [3,4]. Climate change is expected to further intensify the situation due to\n\
    the increased frequency of heatwaves and drought episodes [5]. Climate change\
    \ coupled with the\nnecessity to increase food production due to an increase in\
    \ global population has placed pressure on\nhorticultural sector to improve eﬃciencies\
    \ in resources use, e.g., water, for sustainable farming [6–10].\nHorticultural\
    \ crops will have to produce more ‘crop-per-drop’ in the face of limited water\
    \ resources.\nInformed management of water resources whilst maintaining or increasing\
    \ crop quality and yield are\nthe primary goals of irrigation scheduling in horticulture.\
    \ These goals can be achieved by improving\nour understanding of the water status\
    \ of the crops at key phenological stages of development.\nTraditional decision-making\
    \ for irrigation of horticultural crops includes using information from\na combination\
    \ of sources such as historical regimes, soil moisture measurements, visual assessments\
    \ of\nsoil and/or crop, weather data including evapotranspiration (ET), and measurements\
    \ of crop water\nstatus using direct-, proximal- or remote-sensing techniques\
    \ [11–13]. Some growers undertake routine\nground-based measurements, e.g., pressure\
    \ chamber, for estimation of crop water status to make\ndecisions on irrigation\
    \ [14–16]. These ground-based measurements are robust; however, destructive,\n\
    Agronomy 2020, 10, 140; doi:10.3390/agronomy10010140\nwww.mdpi.com/journal/agronomy\n\
    Agronomy 2020, 10, 140\n2 of 35\ncumbersome, and expensive to acquire a reasonable\
    \ amount of data [14,16–18]. Consequently, the\nmeasured leaf is assumed to represent\
    \ the average population of leaves of the individual crop, and\na few crops are\
    \ assumed to represent the average population of the entire irrigation block.\
    \ As a\nresult, over- or under-watering can occur, which can lower yield and fruit\
    \ quality [19–22]. This is\nespecially evident for non-homogenous blocks where\
    \ spatial variability of soil and water status is\nexpected [23–25].\nTo address\
    \ some of the limitations of ground-based measurements, remote measurement\ntechniques\
    \ were introduced with capabilities to measure at higher spatial resolution, larger\
    \ area, and\non a regular basis [26–29]. Remote sensing, in particular, unmanned\
    \ aircraft systems (UAS), presents a\nﬂexible platform to deploy on-demand sensors\
    \ as a tool to eﬃciently and non-destructively measure\ncrop water status [30].\
    \ Using thermal and spectral signatures, remote sensing techniques can be used\n\
    to characterise a crop’s water status. Knowledge of crop water status allows growers\
    \ to more eﬃciently\nschedule irrigation (i.e., when and how much water to apply).\
    \ In this regard, UAS platforms provide a\nconvenient methodology to monitor the\
    \ water status across a farm, both spatially and temporally at\nthe canopy level\
    \ [31–33]. The spectral, spatial, and temporal ﬂexibility oﬀered by UAS-based\
    \ remote\nsensing may in future assist growers in irrigation decision-making [34,35].\n\
    This review provides an overview of the application of remote sensing to understand\
    \ the\ncrop’s water status (e.g., leaf/stem water potential, leaf/canopy conductance),\
    \ soil moisture, ET, and\nphysiological attributes, all of which can contribute\
    \ to understanding the crop’s water status to\nimplement precision irrigation.\
    \ Although the key focus of this review is UAS-based remote sensing,\na comparison\
    \ has been undertaken with other remote sensing platforms, such as earth observation\n\
    satellites, which are being increasingly used to acquire similar information.\
    \ In the following sections,\nwe provide an overview of the most common remote\
    \ sensing platforms in horticulture, various sensors\nused for remote sensing,\
    \ and several predictive indices of crop water status. Two case studies of remote\n\
    sensing in horticultural crops, grapevine and almond, are then presented followed\
    \ by an overview of\nthe current research gaps and future prospects.\n2. Remote\
    \ Sensing Platforms\nGround-based direct or proximal sensors acquire instantaneous\
    \ water status measurement from\na spatial location. For decision-making purposes,\
    \ the data is generally collected from multiple\nlocations across a ﬁeld, which\
    \ allows geospatial interpolation, such as kriging, to be applied [36–38].\nThis\
    \ scale of data collection is, however, cumbersome, ineﬃcient, and error-prone,\
    \ especially for water\nstatus measurements of large areas [17]. Monitoring and\
    \ observing farms at a larger spatial scale\nprompted the launch of several earth\
    \ observation satellite systems that typically operate at an altitude\nof 180–2000\
    \ km [39]. Manned high-altitude aircraft (operating within few km) and, more recently,\
    \ UAS\n(operating under 120 m) ﬁlled the spatial gap between high-resolution ground\
    \ measurements and\nrelatively low-resolution satellite measurements [40,41].\
    \ In the context of water status estimation for\nhorticultural crops, all the\
    \ aforementioned remote sensing platforms are utilised depending on the\nuser\
    \ requirements [23,42,43]. Each remote sensing platform has its own advantage\
    \ and shortcomings.\nThe decision to obtain remote sensing crop water status data\
    \ from one or more of these platforms will\ndepend on the spatial and temporal\
    \ resolution desired. Satellite and manned aircraft can be useful\nfor regional-scale\
    \ characterisation, whereas UAS can be more useful to map the intra-ﬁeld variability.\n\
    Vehicle-based ground systems also possess similar measurement capabilities, like\
    \ remote sensing,\nhowever, at a smaller scale [44,45]. These systems can move\
    \ within the horticultural rows obtaining\nwater status measurements of adjacent\
    \ plants while the vehicle is moving, enabling them to cover a\nrelatively larger\
    \ area as compared to ground-based direct measurements [46–48].\n2.1. Satellite\
    \ Systems\nThe use of satellite systems for remote sensing started with the launch\
    \ of Landsat-1 in 1972 [39,49].\nThe subsequent launch of SPOT-1 in 1986 and Ikonos\
    \ in 1999 opened the era of commercial satellite\nAgronomy 2020, 10, 140\n3 of\
    \ 35\nsystems that resulted in rapid improvement in imaging performance, including\
    \ spatial and spectral\nresolution [50]. Continued launch of satellites from the\
    \ same families, with newer sensor models\nand improved capability, resulted in\
    \ the formation of satellite constellations (e.g., Landsat, Sentinel,\nSPOT, RapidEye,\
    \ GeoEye/WorldView families). The satellite constellation substantially improved\
    \ the\nrevisit cycle of the satellite system [51]. Recently, the miniature form\
    \ of the satellite termed Nanosat or\nCubesat has been developed, which can be\
    \ deployed on the same orbit in a large number (20s–100s),\nenabling frequent\
    \ and high-resolution data acquisition (e.g., Dove satellite from Planet Labs)\
    \ [52].\nThe earth observation satellite system, such as Landsat, Sentinel, MODIS,\
    \ RapidEye, and GeoEye,\nhave been used to study horticultural crops (Table 1).\
    \ These satellite system oﬀer camera systems\nwith spectral bands readily available\
    \ in visible, near infrared (NIR), short-wave infrared (SWIR), and\nthermal infrared\
    \ (TIR). The measurement in these bands provides opportunities to study a crop’s\
    \ water\nstatus indirectly via, for example, calculation of the normalised diﬀerence\
    \ vegetation index (NDVI),\ncrop water stress index (CWSI), and ET [8–10] at the\
    \ ﬁeld- and regional-scales.\nTable 1. Some satellite systems that have been used\
    \ to study the water status of horticultural crops.\nSatellites\nBand Numbers:\
    \ Band Designation\nSpatial Resolution (m)\nRevisit Cycle\nLandsat 7\n8: V 3,\
    \ NIR 1, SWIR 2, TIR 1, Pan 1\n15–60\n16 days\nLandsat 8\n11: C 1, V 3, NIR 1,\
    \ SWIR 2, Pan 1, Ci 1, TIR 2\n15–100\n16 days\nSentinel-2\n13: C 1, V 3, RE 3,\
    \ NIR 2, WV 1, Ci 1, SWIR 2\n10–60\n5 days\nSpot-6 and-7\n5: Pan 1, V 3, NIR 1\n\
    1.5\n1 day\nRapidEye\n5: V 3, NIR 1, RE 1\n5\n5.5 days\nGeoEye-1\n5: Pan 1, V\
    \ 3, NIR 1\n0.41–2\n3 days\nNote: Superscript integers 1, 2, 3 represent the number\
    \ of bands; V = visible, NIR = near infrared, SWIR = short-wave\ninfrared, TIR\
    \ = thermal infrared, Pan = panchromatic, C = coastal, Ci = cirrus, RE = red edge,\
    \ WV = water vapour.\nThe reﬂected/emitted electromagnetic energy from the crop\
    \ reaching the sensor is recorded at a\nspeciﬁc wavelength. The width of the observed\
    \ wavelength expressed in full width at half maximum\n(FWHM) is called spectral\
    \ resolution. The number of observed bands and the spectral resolution\nindicates\
    \ the ability of the satellite to resolve spectral features on the earth’s surface.\
    \ Commonly used\nearth observation satellite systems possess between four and\
    \ 15 bands with approximately 20–200 nm\nFWHM spectral resolution. The bands are\
    \ generally designated for the visible and NIR region with\nextended capabilities\
    \ in SWIR, TIR, as well as red edge region (Table 1). The most widely used band\n\
    combinations to study the water status of vegetation are the visible, NIR and\
    \ TIR bands [23,25,53,54].\nWith the plethora of satellite systems currently available,\
    \ user requirements on band combination\nmay be achieved by using multiple satellites.\
    \ However, acquiring an extra or a narrower band to the\nexisting capabilities\
    \ is not possible.\nThe ground distance covered per pixel of the satellite image\
    \ is called the spatial resolution,\nwhereby, a higher spatial resolution indicates\
    \ a smaller ground distance. Existing satellite systems,\ndue to their lower spatial\
    \ resolution and large coverage, are suited to study larger regions [55]. For\
    \ a\nsmaller observation area, such as a farm block, an irrigation zone, a single\
    \ row of the horticultural crop,\nor a single canopy, this spatial resolution\
    \ is considered sub-optimal. Often, a pixel of the satellite image\ncomprises\
    \ of multiple rows and multiple canopies of horticultural crops [42,56]. Thus,\
    \ the spectral\nresponse on a single pixel of the satellite image includes a mixed\
    \ spectral signal from the canopy,\ninter-row vegetation and/or bare soil. The\
    \ mixed-pixel is particularly unavoidable in horticultural\ncrops with large inter-row\
    \ surfaces, introducing errors in satellite-based estimations [42,56]. Improving\n\
    the spatial resolution from freely available Landsat/Sentinel satellites (spatial\
    \ resolution 10–15 m) to\nsuch as WorldView-3 (spatial resolution 0.3 m), does\
    \ not necessarily resolve single canopies of many\nhorticultural crops.\nCurrent\
    \ satellite systems generally oﬀer a temporal resolution of about 1–2 weeks this\
    \ resolution\ncorresponds to the satellite’s revisit interval (Table 1). For example,\
    \ freely available Landsat-8 and\nSentinel-2 oﬀer revisit cycles of 16 and 5 days,\
    \ respectively. Although the MODIS sensor on NASA’s\nAgronomy 2020, 10, 140\n\
    4 of 35\nTerra and Aqua satellites oﬀer a greater temporal resolution (1–2 days),\
    \ its spatial resolution is relatively\ncoarse (250 m–1 km) to be valuable for\
    \ horticulture [25]. The revisit cycle of satellites does not alone\nrepresent\
    \ the timeframe on which the data can be interpreted. For instance, post-data\
    \ acquisition,\nthere are often delays in data transfer to the ground station,\
    \ handling, and delivery to the end user.\nThe end user then needs to process\
    \ the data before making an interpretation. Such processing can\nbe a combination\
    \ of atmospheric, radiometric, and geometric corrections, where applicable [57,58].\n\
    Furthermore, as the agricultural applications of the satellite imagery are illumination\
    \ sensitive and\nweather dependent, conditions have to be optimal on the satellite\
    \ revisit day to avoid data corruption\ndue to, for example, cloud cover [23,53].\
    \ Cloud corrupted data (~55% of the land area is covered by\ncloud at any one\
    \ time [59]) will require users to wait for the next revisit to attempt the data\
    \ acquisition.\nTime-series image fusion techniques, such as the spatial and temporal\
    \ adaptive reﬂectance fusion\nmodel, can improve the spatial and temporal resolution\
    \ of the satellite data [60,61]. These fusion\ntechniques blend the frequent (however\
    \ low-resolution) with higher-resolution (but infrequent) satellite\ndata [62,63].\
    \ The result combines the best aspects of multiple satellite systems to produce\
    \ frequent and\nhigher-resolution data, which can be useful for timely monitoring\
    \ of water status.\nThe clear advantage of the satellite system is the ability\
    \ to capture data at a large scale and at an\naﬀordable cost (e.g., the user can\
    \ download Landsat and Sentinel data for free). The compromise with\nthe satellite\
    \ data is in spatial resolution, as well as the relatively long revisit cycle\
    \ (in the order of days\nto weeks), making the data less than ideal for speciﬁc\
    \ applications, e.g., irrigation scheduling.\n2.2. Manned Aircraft System\nOperating\
    \ within few kilometres above ground level, manned aircraft have been used to\
    \ remotely\nacquire agricultural data at higher spatial detail (compared to the\
    \ satellites) and over a larger region\n(compared to UAS) [42,64]. Light ﬁxed-wing\
    \ aircraft and helicopters are the commonly used manned\naircraft employed in\
    \ agricultural remote sensing. The ﬁxed-wing aircraft generally ﬂies higher and\n\
    faster, enabling the coverage of a larger area, whereas the helicopters are traditionally\
    \ ﬂown lower\nand slower, enabling a spatially detailed observation. A signiﬁcant\
    \ advantage of the manned aircraft,\ncompared to UAS, lies in their ability to\
    \ carry heavier high-grade sensors, such as AVIRIS, HyPlant,\nHySpex SWIR-384,\
    \ Specim AisaFENIX, and Riegl LMS Q240i-60 [65–67]. The use of manned aircraft\
    \ is,\nhowever, limited by high operational complexity, safety regulations, scheduling\
    \ inﬂexibility, costs, and\nproduct turnaround time. As a result, these platforms\
    \ are barely used as compared to the recent surge\nin the use of UAS, speciﬁcally\
    \ for horticultural crops [68–70].\nIn horticulture, manned aircraft was used\
    \ to characterise olive and peach canopy temperature\nand water stress using speciﬁc\
    \ thermal bands (10.069 µm and 12.347 µm) of a wideband (0.43–12.5 µm)\nairborne\
    \ hyperspectral camera system [71,72]. This work found moderate correlations (R2\
    \ = 0.45–0.57)\nof ground vs. aerial olive canopy temperature measurements [72],\
    \ and high correlations (R2 = 0.94)\nof canopy temperature vs. peach fruit size\
    \ (diameter) [71]. The advantage of manned aircraft for\nremote sensing of a large\
    \ region was highlighted in recent work that characterised regional-scale\ngrapevine\
    \ (Vitis vinifera L.) water stress responses of two cultivars, Shiraz and Cabernet\
    \ Sauvignon, in\nAustralia [64]. Airborne thermal imaging was able to discriminate\
    \ between the two cultivars based on\ntheir water status responses to soil moisture\
    \ availability (Figure 1).\nAgronomy 2020, 10, 140\n5 of 35\nAgronomy 2020, 10,\
    \ 140 \n5 of 35 \n \n \nFigure 1. Water status of Shiraz and Cabernet Sauvignon\
    \ under similar soil moisture as captured from \nmanned aircraft [64]. \n2.3.\
    \ Unmanned Aircraft Systems \nBoth the fixed-wing and the rotary-wing variant\
    \ of UASs are used in agricultural remote \nsensing. Each variant has its advantages\
    \ and shortcomings vis-à-vis sensor payload, flexibility, and \ncoverage. In this\
    \ regard, the literature provides a list of state-of-the-art UAS [73], their categorisation\
    \ \n[74], and overview of structural characteristics, as well as flight parameters\
    \ [75], in the context of \nagricultural use. Depending on the number of rotors,\
    \ a rotary-wing UAS can be a helicopter, a \nquadcopter, a hexacopter, or an octocopter,\
    \ among others. Rotary-wing UAS are more agile and can \nfly with a higher degree\
    \ of freedom [76], while fixed-wing UAS needs to be moving forward at a \ncertain\
    \ speed to maintain thrust. As a result, rotary-wing UAS provides flexibility\
    \ and specific \ncapabilities, such as hovering, vertical take-off and landing,\
    \ vertical (up and down) motions, or return \nto the previous location. On the\
    \ contrary, fixed-wing UAS fly faster, carry heavier payloads, and have \ngreater\
    \ flying time enabling coverage of larger areas in a single flight [77]. Recently\
    \ developed fixed-\nwing UAS with vertical take-off and landing capabilities,\
    \ such as BirdEyeView FireFly6 PRO, Elipse \nVTOL-PPK, and Carbonix Volanti, captures\
    \ the pros of both fixed-wing and rotary-wing, making \nthem a promising platform\
    \ for agricultural purposes. In the context of precision agriculture, the \napplication\
    \ of UAS, their future prospects, and knowledge gaps are discussed in [53,78–81].\
    \ While \nmany horticultural crops have been studied using UAS technology, the\
    \ most studied horticultural \ncrops are vineyards [31,82–84], citrus [85,86],\
    \ peach [32,33], olive [18,87,88], pistachio [89,90], and \nalmond [91–94], among\
    \ others [95–99]. Some of the UAS types used for water status studies of \nhorticultural\
    \ crops are shown in Figure 2. \n \n \n(a) \n(b) \nFigure 1. Water status of Shiraz\
    \ and Cabernet Sauvignon under similar soil moisture as captured from\nmanned\
    \ aircraft [64].\n2.3. Unmanned Aircraft Systems\nBoth the ﬁxed-wing and the rotary-wing\
    \ variant of UASs are used in agricultural remote sensing.\nEach variant has its\
    \ advantages and shortcomings vis-à-vis sensor payload, ﬂexibility, and coverage.\n\
    In this regard, the literature provides a list of state-of-the-art UAS [73], their\
    \ categorisation [74], and\noverview of structural characteristics, as well as\
    \ ﬂight parameters [75], in the context of agricultural use.\nDepending on the\
    \ number of rotors, a rotary-wing UAS can be a helicopter, a quadcopter, a hexacopter,\n\
    or an octocopter, among others. Rotary-wing UAS are more agile and can ﬂy with\
    \ a higher degree of\nfreedom [76], while ﬁxed-wing UAS needs to be moving forward\
    \ at a certain speed to maintain thrust.\nAs a result, rotary-wing UAS provides\
    \ ﬂexibility and speciﬁc capabilities, such as hovering, vertical\ntake-oﬀ and\
    \ landing, vertical (up and down) motions, or return to the previous location.\
    \ On the contrary,\nﬁxed-wing UAS ﬂy faster, carry heavier payloads, and have\
    \ greater ﬂying time enabling coverage of\nlarger areas in a single ﬂight [77].\
    \ Recently developed ﬁxed-wing UAS with vertical take-oﬀ and landing\ncapabilities,\
    \ such as BirdEyeView FireFly6 PRO, Elipse VTOL-PPK, and Carbonix Volanti, captures\n\
    the pros of both ﬁxed-wing and rotary-wing, making them a promising platform for\
    \ agricultural\npurposes. In the context of precision agriculture, the application\
    \ of UAS, their future prospects,\nand knowledge gaps are discussed in [53,78–81].\
    \ While many horticultural crops have been studied\nusing UAS technology, the\
    \ most studied horticultural crops are vineyards [31,82–84], citrus [85,86],\n\
    peach [32,33], olive [18,87,88], pistachio [89,90], and almond [91–94], among\
    \ others [95–99]. Some of\nthe UAS types used for water status studies of horticultural\
    \ crops are shown in Figure 2.\nAgronomy 2020, 10, 140 \n5 of 35 \n \n \nFigure\
    \ 1. Water status of Shiraz and Cabernet Sauvignon under similar soil moisture\
    \ as captured from \nmanned aircraft [64]. \n2.3. Unmanned Aircraft Systems \n\
    Both the fixed-wing and the rotary-wing variant of UASs are used in agricultural\
    \ remote \nsensing. Each variant has its advantages and shortcomings vis-à-vis\
    \ sensor payload, flexibility, and \ncoverage. In this regard, the literature\
    \ provides a list of state-of-the-art UAS [73], their categorisation \n[74], and\
    \ overview of structural characteristics, as well as flight parameters [75], in\
    \ the context of \nagricultural use. Depending on the number of rotors, a rotary-wing\
    \ UAS can be a helicopter, a \nquadcopter, a hexacopter, or an octocopter, among\
    \ others. Rotary-wing UAS are more agile and can \nfly with a higher degree of\
    \ freedom [76], while fixed-wing UAS needs to be moving forward at a \ncertain\
    \ speed to maintain thrust. As a result, rotary-wing UAS provides flexibility\
    \ and specific \ncapabilities, such as hovering, vertical take-off and landing,\
    \ vertical (up and down) motions, or return \nto the previous location. On the\
    \ contrary, fixed-wing UAS fly faster, carry heavier payloads, and have \ngreater\
    \ flying time enabling coverage of larger areas in a single flight [77]. Recently\
    \ developed fixed-\nwing UAS with vertical take-off and landing capabilities,\
    \ such as BirdEyeView FireFly6 PRO, Elipse \nVTOL-PPK, and Carbonix Volanti, captures\
    \ the pros of both fixed-wing and rotary-wing, making \nthem a promising platform\
    \ for agricultural purposes. In the context of precision agriculture, the \napplication\
    \ of UAS, their future prospects, and knowledge gaps are discussed in [53,78–81].\
    \ While \nmany horticultural crops have been studied using UAS technology, the\
    \ most studied horticultural \ncrops are vineyards [31,82–84], citrus [85,86],\
    \ peach [32,33], olive [18,87,88], pistachio [89,90], and \nalmond [91–94], among\
    \ others [95–99]. Some of the UAS types used for water status studies of \nhorticultural\
    \ crops are shown in Figure 2. \n \n \n(a) \n(b) \nFigure 2. Cont.\nAgronomy 2020,\
    \ 10, 140\n6 of 35\nAgronomy 2020, 10, 140 \n6 of 35 \n \n \n \n(c) \n(d) \nFigure\
    \ 2. Examples of unmanned aircraft systems (UAS) used to study water status in\
    \ horticulture \ncrops: (a) hexacopter equipped with RGB, multispectral and thermal\
    \ camera at The University of \nAdelaide, Adelaide, Australia (b) quadcopter equipped\
    \ with a thermal and multispectral camera \n[100], (c) fixed-wing aircraft used\
    \ for GRAPEX project to carry RGB, thermal and monochrome camera \nwith narrowband\
    \ filters [101], and (d) helicopter used for various studies of crop water status\
    \ \n[18,92,102]. \nUAS offers flexibility on spatial resolution, observation scale,\
    \ spectral bands, and temporal \nresolution to collect data on any good weather\
    \ day. However, like satellite and manned aircraft, the \nUAS is inoperable during\
    \ precipitation, high winds, and temperatures. By easily altering the flying \n\
    altitude, the UAS provides higher flexibility to observe a larger area with lower\
    \ spatial resolution or \nsmaller area with much greater detail [103]. Temporally,\
    \ the UAS can be scheduled at a user-defined \ntime at short notice, thus accommodating\
    \ applications that are time-sensitive, such as capturing vital \nphenological\
    \ stages of crop growth. Spectrally, UAS offer flexibility to carry on-demand\
    \ sensors and \ninterchangeability between sensor payloads; thus, any desired\
    \ combination of sensors and spectral \nbands can be incorporated to target specific\
    \ features. \nUAS-acquired image data requires post-processing before it can be\
    \ incorporated into the grower \ndecision-making process. Mosaicking of UAS images\
    \ currently has a turnaround time of \napproximately one day to one week, subject\
    \ to the size of the dataset, computational power, and \nspectral/spatial quality\
    \ of the product [104,105]. Spectral quality of the data is of optimal importance,\
    \ \nwhereas the spatial quality can be of less importance, such as for well-established\
    \ horticultural crops. \nHigher spectral quality demands calibration of the spectral\
    \ sensors and correction of atmospheric \neffects. Following post-processing of\
    \ aerial images, the UAS-based spectral data have shown to be \nhighly correlated\
    \ with ground-based data [82,102,106]. \nThe most common UAS-based sensor types\
    \ to study the crop water status are the thermal, \nmultispectral and RGB, while\
    \ hyperspectral and LiDAR (Light detection and ranging) sensors are \nused less\
    \ often [23,79,107]. Spectral sensors provide the capability to capture broader\
    \ physiological \nproperties of the crop, such as greenness (related to leaf chlorophyll\
    \ content and health) and biomass, \nthat generally correlate with crop water\
    \ status [82,108]. Narrower band spectral sensors provide \ndirect insight into\
    \ specific biophysical and biochemical properties of crops, such as via photochemical\
    \ \nreflectance index (PRI) and solar-induced chlorophyll fluorescence (SIF),\
    \ which reflects a plant’s \nphotosynthetic efficiency [109,110]. Thermal-based\
    \ sensors capture the temperature of the crop’s \nsurface, which indicates the\
    \ plant’s stress (both biotic and abiotic) [53]. Generally, digital RGB camera\
    \ \nand LiDAR can be used to quantify 3D metrics, such as the plant size and shape,\
    \ via 3D pointclouds \nwith sufficient accuracy for canopy level assessment [111–118].\
    \ \n3. Remote Sensor Types \n3.1. Digital Camera \nA digital camera typically\
    \ incorporates an RGB, modified RGB, and a monochrome digital \ncamera. The lens\
    \ quality of the camera determines the sharpness of the image, while the resolution\
    \ \nFigure 2. Examples of unmanned aircraft systems (UAS) used to study water\
    \ status in horticulture\ncrops: (a) hexacopter equipped with RGB, multispectral\
    \ and thermal camera at The University of\nAdelaide, Adelaide, Australia (b) quadcopter\
    \ equipped with a thermal and multispectral camera [100],\n(c) ﬁxed-wing aircraft\
    \ used for GRAPEX project to carry RGB, thermal and monochrome camera with\nnarrowband\
    \ ﬁlters [101], and (d) helicopter used for various studies of crop water status\
    \ [18,92,102].\nUAS oﬀers ﬂexibility on spatial resolution, observation scale,\
    \ spectral bands, and temporal\nresolution to collect data on any good weather\
    \ day. However, like satellite and manned aircraft, the\nUAS is inoperable during\
    \ precipitation, high winds, and temperatures. By easily altering the ﬂying\n\
    altitude, the UAS provides higher ﬂexibility to observe a larger area with lower\
    \ spatial resolution or\nsmaller area with much greater detail [103]. Temporally,\
    \ the UAS can be scheduled at a user-deﬁned\ntime at short notice, thus accommodating\
    \ applications that are time-sensitive, such as capturing vital\nphenological\
    \ stages of crop growth. Spectrally, UAS oﬀer ﬂexibility to carry on-demand sensors\
    \ and\ninterchangeability between sensor payloads; thus, any desired combination\
    \ of sensors and spectral\nbands can be incorporated to target speciﬁc features.\n\
    UAS-acquired image data requires post-processing before it can be incorporated\
    \ into the grower\ndecision-making process. Mosaicking of UAS images currently\
    \ has a turnaround time of approximately\none day to one week, subject to the\
    \ size of the dataset, computational power, and spectral/spatial\nquality of the\
    \ product [104,105]. Spectral quality of the data is of optimal importance, whereas\
    \ the\nspatial quality can be of less importance, such as for well-established\
    \ horticultural crops. Higher\nspectral quality demands calibration of the spectral\
    \ sensors and correction of atmospheric eﬀects.\nFollowing post-processing of\
    \ aerial images, the UAS-based spectral data have shown to be highly\ncorrelated\
    \ with ground-based data [82,102,106].\nThe most common UAS-based sensor types\
    \ to study the crop water status are the thermal,\nmultispectral and RGB, while\
    \ hyperspectral and LiDAR (Light detection and ranging) sensors are\nused less\
    \ often [23,79,107]. Spectral sensors provide the capability to capture broader\
    \ physiological\nproperties of the crop, such as greenness (related to leaf chlorophyll\
    \ content and health) and biomass,\nthat generally correlate with crop water status\
    \ [82,108]. Narrower band spectral sensors provide\ndirect insight into speciﬁc\
    \ biophysical and biochemical properties of crops, such as via photochemical\n\
    reﬂectance index (PRI) and solar-induced chlorophyll ﬂuorescence (SIF), which\
    \ reﬂects a plant’s\nphotosynthetic eﬃciency [109,110]. Thermal-based sensors\
    \ capture the temperature of the crop’s\nsurface, which indicates the plant’s\
    \ stress (both biotic and abiotic) [53]. Generally, digital RGB camera\nand LiDAR\
    \ can be used to quantify 3D metrics, such as the plant size and shape, via 3D\
    \ pointclouds\nwith suﬃcient accuracy for canopy level assessment [111–118].\n\
    3. Remote Sensor Types\n3.1. Digital Camera\nA digital camera typically incorporates\
    \ an RGB, modiﬁed RGB, and a monochrome digital camera.\nThe lens quality of the\
    \ camera determines the sharpness of the image, while the resolution of the\n\
    Agronomy 2020, 10, 140\n7 of 35\ncamera determines its spatial resolution and\
    \ details within an image. The RGB camera uses broad\nspectral bandwidth within\
    \ the blue, green and red spectral region to capture energy received at the\n\
    visible region of the electromagnetic spectrum. The images are used to retrieve\
    \ dimensional properties\nof the crop, terrain conﬁguration, macrostructure of\
    \ the ﬁeld, and the spatial information. Based on\nthe dimensional properties,\
    \ such as size, height, perimeter, and area of the crown, the resource need\n\
    practices can be estimated [119–121]. Generally, a larger crop is expected to\
    \ more quickly use available\nwater resources, resulting in crop water stress\
    \ at a later stage of the season if irrigation is not suﬃcient.\nThe evolution\
    \ of canopy structure within and between seasons can be useful to understand the\
    \ spatial\nvariability within the ﬁeld and corresponding water requirements. The\
    \ macro-structure of horticultural\ncrops, such as row height, width, spacing,\
    \ crop count, the fraction of ground cover, and missing\nplants, can be identiﬁed\
    \ remotely, which can aid in the allocation of resources [113,122]. The terrain\n\
    conﬁguration in the form of a digital elevation model (DEM) generated from a digital\
    \ camera can also\nenable understanding of the water status in relation to the\
    \ aspect and slope conﬁguration of the terrain.\n3.2. Multispectral Camera\nA\
    \ multispectral camera oﬀers multiple spectral bands across the electromagnetic\
    \ spectrum.\nMost common airborne multispectral cameras have 4–5 bands which include\
    \ rededge and NIR\nbands in addition to the visible bands, R-G-B (e.g., Figure\
    \ 3a,c). Conﬁgurable ﬁlter placement of\nthe spectral band is also available,\
    \ which can potentially target certain physiological responses of\nhorticultural\
    \ crops [102]. Spectrally, the airborne multispectral camera has been reported\
    \ to perform\nwith consistency, producing reliable measurements following radiometric\
    \ calibration and atmospheric\ncorrection [123–125].\nTheir spatial resolution\
    \ has been found to be suﬃcient for horticultural\napplications enabling canopy\
    \ level observation of the spectral response. For this reason, as well as\nrelatively\
    \ low cost, multispectral cameras are used more frequently in horticulture applications.\n\
    Agronomy 2020, 10, 140 \n7 of 35 \n \nof the camera determines its spatial resolution\
    \ and details within an image. The RGB camera uses \nbroad spectral bandwidth\
    \ within the blue, green and red spectral region to capture energy received \n\
    at the visible region of the electromagnetic spectrum. The images are used to\
    \ retrieve dimensional \nproperties of the crop, terrain configuration, macrostructure\
    \ of the field, and the spatial information. \nBased on the dimensional properties,\
    \ such as size, height, perimeter, and area of the crown, the \nresource need\
    \ practices can be estimated [119–121]. Generally, a larger crop is expected to\
    \ more \nquickly use available water resources, resulting in crop water stress\
    \ at a later stage of the season if \nirrigation is not sufficient. The evolution\
    \ of canopy structure within and between seasons can be \nuseful to understand\
    \ the spatial variability within the field and corresponding water requirements.\
    \ \nThe macro-structure of horticultural crops, such as row height, width, spacing,\
    \ crop count, the \nfraction of ground cover, and missing plants, can be identified\
    \ remotely, which can aid in the \nallocation of resources [113,122]. The terrain\
    \ configuration in the form of a digital elevation model \n(DEM) generated from\
    \ a digital camera can also enable understanding of the water status in relation\
    \ \nto the aspect and slope configuration of the terrain. \n3.2. Multispectral\
    \ Camera \nA multispectral camera offers multiple spectral bands across the electromagnetic\
    \ spectrum. Most \ncommon airborne multispectral cameras have 4–5 bands which\
    \ include rededge and NIR bands in \naddition to the visible bands, R-G-B (e.g.,\
    \ Figure 3a,c). Configurable filter placement of the spectral \nband is also available,\
    \ which can potentially target certain physiological responses of horticultural\
    \ \ncrops [102]. Spectrally, the airborne multispectral camera has been reported\
    \ to perform with \nconsistency, producing reliable measurements following radiometric\
    \ calibration and atmospheric \ncorrection [123–125]. Their spatial resolution\
    \ has been found to be sufficient for horticultural \napplications enabling canopy\
    \ level observation of the spectral response. For this reason, as well as \nrelatively\
    \ low cost, multispectral cameras are used more frequently in horticulture applications.\
    \ \n \n \n(a) \n(b) \n \n \n(c) \n(d) \nFigure 3. Some examples of sensors used\
    \ on a UAS platform to study water status of horticultural \ncrops: (a) A multispectral\
    \ camera (Tetracam Mini-MCA-6, Tetracam, Inc., Chatsworth, CA, USA) \n[126]. (b)\
    \ A thermal camera (FLIR TAU II, FLIR Systems, Inc., USA) [100,108]. (c) A multi-sensor\
    \ \ncamera setup with an RGB (Sony α7R III, Sony Electronics, Inc., Minato, Tokyo,\
    \ Japan), a multispectral \n(MicaSense RedEdge, MicaSense Inc., Seattle, WA, USA),\
    \ and a thermal (FLIR TAU II 640, FLIR \nSystems, Inc., USA) camera. (d) A micro-hyperspectral\
    \ camera (Micro-Hyperspec, Headwall \nPhotonics, MA, USA) [110]. \nChlorophyll\
    \ and cellular structures of vegetation absorb most of the visible light and reflect\
    \ \ninfrared light. The rise in reflectance between the red and NIR band is unique\
    \ to live green vegetation \nand is captured by vegetation spectral index called\
    \ NDVI (Table 2, Equation (3). Once the vegetation \nFigure 3. Some examples of\
    \ sensors used on a UAS platform to study water status of horticultural\ncrops:\
    \ (a) A multispectral camera (Tetracam Mini-MCA-6, Tetracam, Inc., Chatsworth,\
    \ CA, USA) [126].\n(b) A thermal camera (FLIR TAU II, FLIR Systems, Inc., USA)\
    \ [100,108]. (c) A multi-sensor camera setup\nwith an RGB (Sony α7R III, Sony\
    \ Electronics, Inc., Minato, Tokyo, Japan), a multispectral (MicaSense\nRedEdge,\
    \ MicaSense Inc., Seattle, WA, USA), and a thermal (FLIR TAU II 640, FLIR Systems,\
    \ Inc., USA)\ncamera. (d) A micro-hyperspectral camera (Micro-Hyperspec, Headwall\
    \ Photonics, MA, USA) [110].\nChlorophyll and cellular structures of vegetation\
    \ absorb most of the visible light and reﬂect\ninfrared light. The rise in reﬂectance\
    \ between the red and NIR band is unique to live green vegetation\nand is captured\
    \ by vegetation spectral index called NDVI (Table 2, Equation (3)). Once the vegetation\n\
    starts to experience stress (biotic and abiotic), its reﬂectance in the NIR region\
    \ is reduced, while the\nreﬂectance in the red band is increased. Thus, such stress\
    \ is reﬂected in the vegetation proﬁle and\nAgronomy 2020, 10, 140\n8 of 35\n\
    easily captured by indices, such as NDVI. For this reason, NDVI has shown correlations\
    \ with a wide\narray of crops response including vigour, chlorophyll content,\
    \ leaf area index (LAI), crop water stress,\nand occasionally yield [34,82–84,127].\n\
    The rededge band covers the portion of the electromagnetic spectrum between the\
    \ red and NIR\nbands where reﬂectance increases drastically. Studies have suggested\
    \ that the sharp transition between\nthe red absorbance and NIR reﬂection is able\
    \ to provide additional information about vegetation and\nits hydric characteristics\
    \ [128]. Using the normalised diﬀerence red edge (NDRE) index, the rededge\nband\
    \ was found to be useful in establishing a relative chlorophyll concentration\
    \ map [127]. Given the\nsensitivity of NDRE, it can be used for applications,\
    \ such as crops drought stress [107]. With regard to\nthe water use eﬃciency,\
    \ a combination of vegetation indices (VIs) along with structural physiological\n\
    indices were found to be useful to study water stress in horticultural crops [34,82,129].\n\
    3.3. Hyperspectral\nHyperspectral sensors have contiguous spectral bands sampled\
    \ at a narrower wavelength intervals\nspanning from visible to NIR spectrum at\
    \ a high to ultra-high spectral resolution (Figure 3d). Scanning\nat contiguous\
    \ narrow-band wavelengths, a hyperspectral sensor produces a three dimensional\
    \ (two\nspatial dimensions and one spectral dimension) data called hyperspectral\
    \ data cube. The hyperspectral\ndata cube is a hyperspectral image where each\
    \ pixel contain spatial information, as well as the entire\nspectral reﬂectance\
    \ curve [130]. Based on the operating principle and output data cube, hyperspectral\n\
    sensors for remote sensing can include a point spectrometer (aka spectroradiometer),\
    \ whiskbroom\nscanner, pushbroom scanner, and 2D imager (Figure 4) [130,131].\
    \ A point spectrometer, samples\nwithin its ﬁeld of view solid angle to produce\
    \ an ultra-high spectral resolution spectral data of a\npoint [130,132]. A whiskbroom\
    \ scanner deploys a single detector onboard to scan one single pixel at a\ntime.\
    \ As the scanner rotates across-track, successive scans form a row of the data\
    \ cube, and as the\nplatform moves forward along-track, successive rows form a\
    \ hyperspectral image [133]. A pushbroom\nscanner deploys a row of spatially contiguous\
    \ detectors arranged in the perpendicular direction of\ntravel and scans the entire\
    \ row of pixels at a time. As the platform moves forward, the successive\nrows\
    \ form a two-dimensional hyperspectral image [40,134]. The 2D imager using diﬀerent\
    \ scanning\ntechniques [130] captures hyperspectral data across the image scene\
    \ [135,136]. The point spectrometer\noﬀers the highest spectral resolution and\
    \ lowest signal-to-noise ratio (SNR) among the UAS-compatible\nhyperspectral sensors\
    \ [137,138].\nAgronomy 2020, 10, 140 \n8 of 35 \n \nstarts to experience stress\
    \ (biotic and abiotic), its reflectance in the NIR region is reduced, while the\
    \ \nreflectance in the red band is increased. Thus, such stress is reflected in\
    \ the vegetation profile and \neasily captured by indices, such as NDVI. For this\
    \ reason, NDVI has shown correlations with a wide \narray of crops response including\
    \ vigour, chlorophyll content, leaf area index (LAI), crop water stress, \nand\
    \ occasionally yield [34,82–84,127]. \nThe rededge band covers the portion of\
    \ the electromagnetic spectrum between the red and NIR \nbands where reflectance\
    \ increases drastically. Studies have suggested that the sharp transition \nbetween\
    \ the red absorbance and NIR reflection is able to provide additional information\
    \ about \nvegetation and its hydric characteristics [128]. Using the normalised\
    \ difference red edge (NDRE) \nindex, the rededge band was found to be useful\
    \ in establishing a relative chlorophyll concentration \nmap [127]. Given the\
    \ sensitivity of NDRE, it can be used for applications, such as crops drought\
    \ stress \n[107]. With regard to the water use efficiency, a combination of vegetation\
    \ indices (VIs) along with \nstructural physiological indices were found to be\
    \ useful to study water stress in horticultural crops \n[34,82,129]. \n3.3. Hyperspectral\
    \ \nHyperspectral sensors have contiguous spectral bands sampled at a narrower\
    \ wavelength \nintervals spanning from visible to NIR spectrum at a high to ultra-high\
    \ spectral resolution (Figure \n3d). Scanning at contiguous narrow-band wavelengths,\
    \ a hyperspectral sensor produces a three \ndimensional (two spatial dimensions\
    \ and one spectral dimension) data called hyperspectral data \ncube. The hyperspectral\
    \ data cube is a hyperspectral image where each pixel contain spatial \ninformation,\
    \ as well as the entire spectral reflectance curve [130]. Based on the operating\
    \ principle \nand output data cube, hyperspectral sensors for remote sensing can\
    \ include a point spectrometer (aka \nspectroradiometer), whiskbroom scanner,\
    \ pushbroom scanner, and 2D imager (Figure 4) [130,131]. A \npoint spectrometer,\
    \ samples within its field of view solid angle to produce an ultra-high spectral\
    \ \nresolution spectral data of a point [130,132]. A whiskbroom scanner deploys\
    \ a single detector onboard \nto scan one single pixel at a time. As the scanner\
    \ rotates across-track, successive scans form a row of \nthe data cube, and as\
    \ the platform moves forward along-track, successive rows form a hyperspectral\
    \ \nimage [133]. A pushbroom scanner deploys a row of spatially contiguous detectors\
    \ arranged in the \nperpendicular direction of travel and scans the entire row\
    \ of pixels at a time. As the platform moves \nforward, the successive rows form\
    \ a two-dimensional hyperspectral image [40,134]. The 2D imager \nusing different\
    \ scanning techniques [130] captures hyperspectral data across the image scene\
    \ \n[135,136]. The point spectrometer offers the highest spectral resolution and\
    \ lowest signal-to-noise \nratio (SNR) among the UAS-compatible hyperspectral\
    \ sensors [137,138]. \n \nFigure 4. The data cube structure of different spectral\
    \ sensors. The number of bands and resolution is \nshown as an example and does\
    \ not indicate true sensor capability (adapted from [130]). \nFigure 4. The data\
    \ cube structure of diﬀerent spectral sensors. The number of bands and resolution\
    \ is\nshown as an example and does not indicate true sensor capability (adapted\
    \ from [130]).\nIn horticultural applications, hyperspectral data, due to the\
    \ high resolution contiguous spectral\nsampling, possesses tremendous potential\
    \ to detect and monitor speciﬁc biotic and abiotic stresses [139].\nNarrowband\
    \ hyperspectral data was used to detect water stress using the measurement of\
    \ ﬂuorescence\nAgronomy 2020, 10, 140\n9 of 35\nand PRI over a citrus orchard\
    \ [110]. PRI was identiﬁed as one of the best predictors of water stress for a\n\
    vineyard in a study that investigated numerous VIs using hyperspectral imaging\
    \ [140]. High-resolution\nthermal imagery obtained from a hyperspectral scanner\
    \ was used to map canopy stomatal conductance\n(gs) and CWSI of olive orchards\
    \ where diﬀerent irrigation treatments were applied [18]. With the\nlarge volume\
    \ of spatial/spectral data extracted from the hyperspectral data cube, machine\
    \ learning\nwill likely be adopted more widely in the horticultural environment\
    \ to model water stress [141].\nSee Reference [54] for a comprehensive review\
    \ of hyperspectral and thermal remote sensing to detect\nplant water status.\n\
    3.4. Thermal\nThermal cameras use microbolometers to read passive thermal signals\
    \ in the spectral range of\napproximately 7–14 µm (Figure 3b). Small UAS are capable\
    \ of carrying a small form-factor thermal\ncamera with uncooled microbolometers,\
    \ which does not use an internal cooling mechanism and,\ntherefore, does not achieve\
    \ the high SNR that can be found in cooled microbolometer-based thermal\ncameras.\
    \ An array of microbolometer detectors in the thermal camera receives a thermal\
    \ radiation\nsignal and stores the signal on the corresponding image pixel as\
    \ raw data number (DN) values.\nThe result is a thermal image where each pixel\
    \ has an associated DN value, which can be converted to\nabsolute temperature.\
    \ A representative list of commercial thermal cameras used on UAS platforms\n\
    and their applications with regard to agricultural remote sensing is found in\
    \ the literature [23,53,73].\nThermal imagery enables the measurement of the foliar\
    \ temperature of plants. The foliar temperature\ndiﬀerence between well-watered\
    \ and water-stressed crops is the primary source of information for\nwater stress\
    \ prediction using a thermal sensor [142]. When mounted on a remote sensing platform,\
    \ the\ncanopy level assessment of crop water status can be performed on a large\
    \ scale.\nThermal cameras are limited by their resolution (e.g., 640 × 512 is\
    \ the maximum resolution of\nUAS compatible thermal cameras in the current market)\
    \ and high price-tag [53]. The small number of\npixels results in low spatial\
    \ resolution limiting either the ability to resolve a single canopy or ability\
    \ to\nﬂy higher and cover a larger area. If ﬂown at a higher altitude, the eﬀective\
    \ spatial resolution may\nbe inadequate for canopy level assessment of some horticultural\
    \ crops. For example, a FLIR Tau2\n640 thermal camera with a 13 mm focal length\
    \ when ﬂown at an altitude of approximately 120 m\nresults in a spatial resolution\
    \ of 15.7 cm. For relatively large horticultural crops, such as grapevine,\nalmond,\
    \ citrus, and avocado, the resolution at a maximum legal ﬂying altitude of 120\
    \ m in Australia\n(for small-sized UAS) oﬀers an adequate spatial resolution to\
    \ observe a single canopy.\nAnother challenge with the use of thermal cameras\
    \ is the temporal drift of the DN values\nwithin successive thermal images, especially\
    \ with uncooled thermal cameras [143]. Due to the lack\nof an internal cooling\
    \ mechanism for the microbolometer detectors, DN values registered by the\nmicrobolometers\
    \ experience temporal drift i.e., the registered DN values for the same temperature\n\
    target will drift temporally. Thus, the thermal image can be unreliable especially\
    \ when the internal\ntemperature of the camera is changing rapidly, such as during\
    \ camera warmup period or during the\nﬂight when a gust of cool wind results in\
    \ cooling of the camera. To overcome this challenge, the user\nmay need to provide\
    \ suﬃcient startup time before operation (preferably 30–60 min) [102,143–145],\n\
    shield the camera to minimize the change in the internal temperature of the camera\
    \ [142], calibrate the\ncamera [146–153], and perform frequent ﬂat-ﬁeld corrections.\n\
    3.5. Multi-Sensor\nTo carry multiple sensors, the total UAS payload needs to be\
    \ considered that includes, in\naddition to the sensors, an inertial measurement\
    \ unit (IMU) and global navigation satellite system\n(GNSS) for the georeferencing\
    \ purpose [40,154]. Higher accuracy sensors tend to be heavier, and in\na multi-sensor\
    \ scenario, the payload can quickly reach or even exceed the payload limit. This\
    \ has\nlimited contemporary measurements in earlier multirotor UAS requiring separate\
    \ ﬂights for each of\nsensor [126]. The use of ﬁxed-wing UAS has allowed carrying\
    \ higher payloads due to the much larger\nAgronomy 2020, 10, 140\n10 of 35\nthrust-to-weight\
    \ ratio as compared to a rotary-wing aircraft [155]. Similarly, recent advancement\
    \ in\nUAS technology and lightweight sensors have enabled multirotor (payload\
    \ 5–6 kg readily available) to\nonboard multi-sensors.\nWater status of crops\
    \ is a complex process inﬂuenced by a number of factors including the\nphysiology\
    \ of the crop, available soil moisture, the size and vigour of the crop, and meteorological\n\
    factors [30,108,116,156,157]. For this reason, a multi-sensor platform is used\
    \ to acquire measurements\nof the diﬀerent aspects of the crop for water status\
    \ assessment [34,102,108]. The most common\ncombination of sensors found in the\
    \ literature is the RGB, multispectral (including rededge and NIR\nbands) and\
    \ thermal. Together, these sensors can be used to investigate the water status\
    \ of the crop\nusing various indicators, such as PRI, CWSI, ﬂuorescence, and structural\
    \ properties, with the aim of\nimproving the water use eﬃciency [102,110,158–160].\n\
    4. Techniques of Remote Sensing in Horticulture\n4.1. Georeferencing of Remotely\
    \ Sensed Images\nGeoreferencing provides a spatial reference to the remotely sensed\
    \ images such that the pixels\nrepresenting crops or regions of interest on the\
    \ images are correctly associated with their position on\nEarth. The georeferencing\
    \ process generally uses surveyed coordinate points on the ground, known\nas ground\
    \ control points (GCPs), to determine and apply scaling and transformation to\
    \ the aerial\nimages [161]. Alternatively, instead of GCPs, the user can georeference\
    \ aerial images by using the\naccurate position of the camera, or by co-registration\
    \ with the existing georeferenced map [105,162].\nIn the case of UAS-based images,\
    \ the capture timing is scheduled to ensure a recommended\nforward overlap (>80%)\
    \ between successive images.\nThe ﬂight path is designed to ensure the\nrecommended\
    \ side overlap (>70%) between images from successive ﬂight strips. Thus, the captured\n\
    series of images are processed using the Structure-from-Motion (SfM) technique\
    \ to generate a 3D\npointcloud and orthomosaic [73,130] (see Figure 5). Commonly\
    \ used SfM software to process the\nremote sensing images are Agisoft PhotoScan\
    \ and Pix4D. The commonly retrieved outputs from the\nSfM software for assessment\
    \ of horticulture crops include the orthomosaic, digital surface model\n(DSM),\
    \ DEM, and 3D pointcloud [113,126,163]. This technique of georeferencing can be\
    \ applied to any\nsensor that produces images, e.g., RGB, thermal, or multispectral\
    \ cameras [126,164,165].\nAgronomy 2020, 10, 140 \n10 of 35 \n \nsensor [126].\
    \ The use of fixed-wing UAS has allowed carrying higher payloads due to the much\
    \ larger \nthrust-to-weight ratio as compared to a rotary-wing aircraft [155].\
    \ Similarly, recent advancement in \nUAS technology and lightweight sensors have\
    \ enabled multirotor (payload 5–6 kg readily available) \nto onboard multi-sensors.\
    \ \nWater status of crops is a complex process influenced by a number of factors\
    \ including the \nphysiology of the crop, available soil moisture, the size and\
    \ vigour of the crop, and meteorological \nfactors [30,108,116,156,157]. For this\
    \ reason, a multi-sensor platform is used to acquire measurements \nof the different\
    \ aspects of the crop for water status assessment [34,102,108]. The most common\
    \ \ncombination of sensors found in the literature is the RGB, multispectral (including\
    \ rededge and NIR \nbands) and thermal. Together, these sensors can be used to\
    \ investigate the water status of the crop \nusing various indicators, such as\
    \ PRI, CWSI, fluorescence, and structural properties, with the aim of \nimproving\
    \ the water use efficiency [102,110,158–160]. \n4. Techniques of Remote Sensing\
    \ in Horticulture \n4.1. Georeferencing of Remotely Sensed Images \nGeoreferencing\
    \ provides a spatial reference to the remotely sensed images such that the pixels\
    \ \nrepresenting crops or regions of interest on the images are correctly associated\
    \ with their position on \nEarth. The georeferencing process generally uses surveyed\
    \ coordinate points on the ground, known \nas ground control points (GCPs), to\
    \ determine and apply scaling and transformation to the aerial \nimages [161].\
    \ Alternatively, instead of GCPs, the user can georeference aerial images by using\
    \ the \naccurate position of the camera, or by co-registration with the existing\
    \ georeferenced map [105,162]. \nIn the case of UAS-based images, the capture\
    \ timing is scheduled to ensure a recommended \nforward overlap (>80%) between\
    \ successive images. The flight path is designed to ensure the \nrecommended side\
    \ overlap (>70%) between images from successive flight strips. Thus, the captured\
    \ \nseries of images are processed using the Structure-from-Motion (SfM) technique\
    \ to generate a 3D \npointcloud and orthomosaic [73,130] (see Figure 5). Commonly\
    \ used SfM software to process the \nremote sensing images are Agisoft PhotoScan\
    \ and Pix4D. The commonly retrieved outputs from the \nSfM software for assessment\
    \ of horticulture crops include the orthomosaic, digital surface model \n(DSM),\
    \ DEM, and 3D pointcloud [113,126,163]. This technique of georeferencing can be\
    \ applied to \nany sensor that produces images, e.g., RGB, thermal, or multispectral\
    \ cameras [126,164,165]. \n \nFigure 5. A typical workflow of structure-from-motion\
    \ (SfM) to produce georeferenced products from \nUAS-based image sets and ground\
    \ control points (adapted from [166,167]). SIFT = scale-invariant \nfeature transform;\
    \ ANN = approximate nearest neighbour; RANSAC = random sample consensus; \nFigure\
    \ 5. A typical workﬂow of structure-from-motion (SfM) to produce georeferenced\
    \ products from\nUAS-based image sets and ground control points (adapted from\
    \ [166,167]). SIFT = scale-invariant\nfeature transform; ANN = approximate nearest\
    \ neighbour; RANSAC = random sample consensus;\nCMVS = clustering views for multi-view\
    \ stereo; PMVS = patch-based multi-view stereo; GCP = ground\ncontrol points.\n\
    Agronomy 2020, 10, 140\n11 of 35\nThe complexity of georeferencing of hyperspectral\
    \ observations depends on the sensor type, i.e.,\nimaging or non-imaging. A non-imaging\
    \ spectroradiometer relies on the use of a GNSS antenna and\nan IMU for georeferencing\
    \ the point observation [130,132,138,168]. An imaging hyperspectral camera,\n\
    generally, in addition to GNSS and IMU measurement, uses the inter-pixel relation\
    \ in SfM to produce a\ngeoreferenced orthomosaic [40,134,135,169,170].\n4.2. Calibration\
    \ and Correction of Remotely Sensed Images\nEnsuring consistency, repeatability,\
    \ and quality of the spectral observation requires stringent\nradiometric, spectral,\
    \ and atmospheric corrections [123,171–177]. Spectral and radiometric calibration\n\
    is performed in the spectral calibration facility in darkroom settings. The sensor’s\
    \ optical properties\nand shift in spectral band position are corrected during\
    \ the spectral calibration process. Radiometric\ncalibration enables conversion\
    \ of the recorded digital values into physical units, such as radiance.\nInﬁeld\
    \ operation of the spectral sensor is inﬂuenced by variations in atmospheric transmittance\n\
    from thin clouds, invisible to the human observer. Changes in atmospheric transmittance\
    \ aﬀect the\nradiance incident on the plant. As a result, the change in acquired\
    \ spectral response by the sensor\nmay not represent the change in plants response\
    \ but the change in incident radiation on the plant.\nThe most common method to\
    \ convert the spectral data to reﬂectance is by generating an empirical line\n\
    relationship between sensor values and spectral targets, such as a Spectralon®\
    \ or calibration targets.\nThe use of downwelling sensors, such as a cosine corrector\
    \ [137], or the use of a ground-based PAR\nsensor enables absolute radiometric\
    \ calibration to generate radiance [130].\nThe calibration of the broad wavelength\
    \ multispectral sensor is generally less stringent than\nthe hyperspectral. Generally,\
    \ multispectral sensors are used to compute normalised indices such\nas NDVI.\
    \ The normalised indices are relatively less inﬂuenced, although signiﬁcant, by\
    \ the change\nin illumination conditions which aﬀect the entire spectrum proportionally\
    \ [29,101]. In this regard,\nradiometric calibration of the multispectral camera\
    \ has used a range of stringent to simpliﬁed, and\nvicarious approaches [123,125,171,173,178–180].\
    \ Some multispectral cameras are equipped with a\ndownwelling light sensor, which\
    \ is aimed at correcting for variations in atmospheric transmittance.\nHowever,\
    \ the performance of such downwelling sensors (without a cosine corrector) on\
    \ multispectral\ncameras have been reported to have directional variation resulting\
    \ in unstable correction, indicating\nthe inability of the sensor to incorporate\
    \ the entire hemisphere of diﬀused light [124,137].\nThe radiometric calibration\
    \ of the thermal images is typically based on the camera’s DN to object\ntemperature\
    \ curve, which provides the relationship between the DN of a pixel and a known\
    \ object\ntemperature, usually of a black body radiator. Measurement accuracy\
    \ and SNR of the camera under\nvarying ambient temperatures can be improved by\
    \ using calibration shutters, which are recently\navailable commercially. Furthermore,\
    \ for low measurement errors (under 1 ◦C), thermal data requires\nconsideration\
    \ to the atmospheric transmittance [18,102]. Flying over a few temperature reference\n\
    targets placed on the ground reduces the temporal drift of the camera [142,143,181].\
    \ Temperature\naccuracy within a few degrees was achieved by ﬂying over the targets\
    \ three times (at the start, middle\nand end of UAS operation) and using three\
    \ separate calibration equations for each overpass [142].\nAdditionally, using\
    \ the redundant information from multiple overlapping images, drift correction\n\
    models have been proposed, which lowered temperature error by 1 ◦C as compared\
    \ to uncorrected\northomosaic [152]. The manufacturer stated accuracies (generally\
    \ ±5 ◦C) can be suﬃcient to access the\nﬁeld variability and to detect “hotspots”\
    \ of water status. However, the aforementioned calibration and\ncorrection of\
    \ the thermal cameras are required for quantitative measurement as a goal [143].\
    \ In this\nregard, current challenges and best practices for the operation of\
    \ thermal cameras onboard a UAS is\nprovided in the literature [143].\n4.3. Canopy\
    \ Data Extraction\nA key challenge in remote sensing of horticultural as compared\
    \ to agricultural crops arises due\nto the proportion of inter-row ground/vegetation\
    \ cover and resulting mixed pixels. The proportion\nAgronomy 2020, 10, 140\n12\
    \ of 35\nof the mixed pixels increases with the decrease in spatial resolution\
    \ of the image. Most of the pixels\ntowards the edge of the canopy contain a blend\
    \ of information originating from the sun-lit canopy,\nshadowed leaves, and inter-row\
    \ bare soil/cover crop. A further challenge can arise for some crops,\nsuch as\
    \ grapevine, due to overlapping of adjacent plants.\nThe canopy data from orthomosaic\
    \ has been extracted using either a pixel-based or an object-based\napproach.\
    \ Earlier studies manually sampled from the centre of crop row which most likely\
    \ eliminated\nthe mixed pixels [182]. In the pixel-based approach, techniques,\
    \ such as applying global threshold\nand masking, have been used. Binary masks,\
    \ such as NDVI, eliminates non-canopy pixels from\nthe sampling [82,84]. Combining\
    \ the NDVI mask with the canopy height mask can exclude the\npixels associated\
    \ with non-vegetation, as well as vegetation that does not meet the height threshold.\n\
    The pixel-based approach, however, can result in inaccurate identiﬁcation of some\
    \ crops due to pixel\nheterogeneity, mixed pixels, spectral similarity, and crop\
    \ pattern variability.\nIn the object-based approach, using object detection techniques,\
    \ neighbouring pixels with\nhomogenous information, such as spectral, textural,\
    \ structural, and hierarchical features, are grouped\ninto “objects”. These objects\
    \ are used as the basis of object-based image analysis (OBIA) classiﬁcation\n\
    using classiﬁers, such as k-nearest neighbour, decision tree, support vector machine,\
    \ random forest,\nand maximum likelihood [122,183–185]. In the horticultural environment,\
    \ OBIA has been adopted\nto classify and sample from pure canopy pixels [119,122,186].\
    \ Consideration should be provided on\nthe number of features and their suitability\
    \ for a speciﬁc application to reduce the computational\nburden, as well as to\
    \ maintain the accuracies. The generalisation of these algorithms for transferability\n\
    between study sites usually penalises the achievable accuracy. For details in\
    \ object-based approach of\nsegmentation and classiﬁcation, readers are directed\
    \ to literatures [122,183,185,187–189].\nOther techniques found in the literature\
    \ include algorithms, such as ‘Watershed’, which has been\ndemonstrated in palm\
    \ orchards [82,190]. Vine rows and plants have been isolated and classiﬁed using\n\
    image processing techniques, such as clustering and skeletisation [188,191–193].\
    \ Similarly, the gridded\npolygon, available in common GIS software, such as ArcGIS\
    \ and QGIS, can be used in combination\nwith zonal statistics for this purpose.\
    \ When working with the low-resolution images, co-registration\nwith the high-resolution\
    \ images has been proposed, whereby, the high-resolution images enable better\n\
    delineation of the mixed pixels [194]. For this reason, spectral and thermal sensors,\
    \ which are usually\nlow in resolution, are generally employed along with high-resolution\
    \ digital cameras.\n4.4. Indicators of Crop Water Status\nA crop’s biophysical\
    \ and biochemical attributes can be approximated using diﬀerent indices and\n\
    quantitative products. For example, CWSI is used to proxy leaf water potential\
    \ (Ψleaf), stem water\npotential (Ψstem), gs, and net photosynthesis (Pn) [83,100,195].\
    \ With regard to horticultural crops, water\nstatus has been assessed using a\
    \ number of spectral and thermal indices (Table 2).\nTable 2. Commonly used vegetation\
    \ and thermal indices to study the water status of horticultural crops.\nIndicators\n\
    Sensor\nPurpose\nReferences\nTc, (Tc − Ta)\nThermal\nΨstem, gs, yield\n[34,82,85,99,110]\n\
    Ig, I3\nThermal\nΨstem, gs\n[82,196]\nCWSI\nThermal\nΨleaf, Ψstem, gs, Pn, yield\n\
    [18,31,33,85,90,97,99,100,182,194,197–199]\n(Tc − Ta)/NDVI\nThermal + multispectral\n\
    Ψstem, gs\n[82,200]\nNDVI\nMultispectral\nΨstem, gs, yield, LAI, vigour\n[34,56,82,86,182,201]\n\
    GNDVI\nMultispectral\nΨstem, gs, yield\n[34,82]\nRDVI\nMultispectral\nΨstem, gs\n\
    [82,86,182]\nPRI\nMultispectral\nΨleaf, gs\n[86,110,182]\nFluorescence\nHyperspectral\n\
    Ψleaf, gs\n[110]\nWBI\nHyperspectral\nΨleaf, gs\n[139,202,203]\nSIF\nHyperspectral\n\
    Water stress\n[204–206]\nNote the acronyms: Tc = Canopy temperature, Ta = ambient\
    \ temperature, Ig = conductance index, I3 = stomatal\nconductance index, CWSI\
    \ = crop water stress index, NDVI = normalised diﬀerence vegetation index, GNDVI\
    \ = green\nnormalised diﬀerence vegetation index, RDVI = renormalized diﬀerence\
    \ vegetation index, PRI = photochemical\nreﬂectance index, Fluorescence = chlorophyll\
    \ ﬂuorescence, WBI = water band index, SIF = solar-induced chlorophyll\nﬂuorescence,\
    \ LAI = leaf area index.\nAgronomy 2020, 10, 140\n13 of 35\n4.4.1. Canopy Temperature\n\
    A plant maintains its temperature by transpiring through the stomata to balance\
    \ the energy\nﬂuxes in and out of the canopy. As the plant experience stress (both\
    \ biotic and abiotic), the rate of\ntranspiration decreases, which results in\
    \ higher canopy temperature (Tc), which can be a proxy to\nunderstand the water\
    \ stress in the plant [207]. In this regard, crop water stress showed a correlation\n\
    with canopy temperature extracted from the thermal image [208], which enables\
    \ mapping the spatial\nvariability in water status [209]. Leaf/canopy temperature\
    \ alone, however, does not provide a complete\ncharacterisation of crop water\
    \ status, for instance, an equally stressed canopy can be 25 ◦C or 35 ◦C,\ndepending\
    \ on the current ambient temperature (Ta). Thus, canopy-to-air temperature diﬀerence\n\
    (Tc − Ta) was proposed, which showed a good correlation with the Ψstem, Ψleaf,\
    \ and gs in horticultural\ncrops [85,99,182].\n4.4.2. Normalised Thermal Indices\n\
    The CWSI, the conductance index (Ig) and the stomatal conductance index (I3) are\
    \ thermal\nindices most commonly used to estimate crop water status and gs [210–212].\
    \ These indices provide\nsimilar information, however, use a diﬀerent range of\
    \ numbers to represent the level of water stress.\nThe CWSI is normalised within\
    \ zero and one, whereas Ig and I3 represent stress using numbers\nbetween zero\
    \ and inﬁnity. CWSI has been adopted most widely in horticultural applications\
    \ to\nassess the water status of crops, such as the grapevines [100,213], almond\
    \ [91,198], citrus [85,110], and\nothers [18,87,99,214]. By normalising between\
    \ the lower and upper limits of (Tc − Ta), the CWSI of the\ncanopy presents quantiﬁable\
    \ relative water stress. The formula for CWSI computation is deﬁned as in\nEquation\
    \ (1) [208,212].\nCWSI =\n(Tc − Ta) − (Tc − Ta)LL\n(Tc − Ta)UL − (Tc − Ta)LL\n\
    (1)\nwhere (Tc − Ta)UL and (Tc − Ta)LL represent the upper and lower bound of\
    \ (Tc − Ta) which are found in\nthe water-stressed canopy and well-watered canopy\
    \ transpiring at the full potential (or maximum) rate,\nrespectively. Assuming\
    \ a constant ambient temperature, Equation (1) can be simpliﬁed to Equation (2),\n\
    which is the most widely reported formulation of CWSI with regard to the horticultural\
    \ remote sensing.\nCWSI = (Tc − Twet)\n\x10\nTdry − Twet\n\x11\n(2)\nwhere Twet\
    \ is the temperature of canopy transpiring at the maximum potential, and Tdry\
    \ is the\ntemperature of the non-transpiring canopy. CWSI has been shown to be\
    \ well-correlated with direct\nmeasurements of crop water status in the horticultural\
    \ environment [18,31,32,90,99]. In this regard,\na correlation of CWSI with various\
    \ ground measurements, such as Ψleaf [18,31,197], Ψstem [33,90,194],\nand gs [18,90,100],\
    \ have been established. Diurnal measurements of CWSI compared with Ψleaf showed\n\
    the best correlation at noon [89,197,209].\nCWSI is a normalised index, i.e.,\
    \ relative to a reference temperature range between Twet and Tdry,\nwhich is speciﬁc\
    \ to a region and crop type; thus, CWSI is not a universal quantitative indicator\
    \ of crop\nwater status. For instance, a CWSI of 0.5 for two diﬀerent varieties\
    \ of grapevines at diﬀerent locations\ndoes not conclusively inform that they\
    \ have equal or superior/inferior water status. Furthermore,\nthe degree of correlation\
    \ can change depending on the isohydric/anisohydric response of crop [214]\nwhere\
    \ early/late stomatal closure aﬀects the indicators of water stress [110]. Moreover,\
    \ phenological\nstage aﬀects the relationship between remotely sensed CWSI and\
    \ water stress [197]. Thus, water stress\nin a diﬀerent crop, at a diﬀerent location\
    \ and at a diﬀerent phenological stage, will have a unique\ncorrelation with CWSI\
    \ and, therefore, needs to be established independently.\nThere are multiple methods\
    \ to measure the two reference temperatures, Twet and Tdry, which\ncould result\
    \ in variable CWSI values depending on the method used. The ﬁrst method is to\
    \ measure the\ntwo reference temperatures on the crop of interest. Tdry can be\
    \ estimated by inducing stomatal closure,\nAgronomy 2020, 10, 140\n14 of 35\n\
    which is the leaf temperature approximately 30 min after applying a layer of petroleum\
    \ jelly e.g.,\nVaseline to both sides of a leaf. This eﬀectively blocks stomata\
    \ and, therefore, impedes leaf transpiration.\nTwet can be estimated by measuring\
    \ leaf temperature approximately 30 s after spraying water on the\nleaf, which\
    \ emulates maximum transpiration [23,83]. The advantage of this method is that\
    \ the stress\nlevels are normalised to actual plants response, whereas the necessity\
    \ to repeat the measurement for\nevery test site after each ﬂight can be cumbersome.\
    \ In an alternative (second) approach the range can\nbe established based on meteorological\
    \ data e.g., setting Tdry to 5 ◦C above air temperature and Twet\nmeasured from\
    \ an artiﬁcial surface. This method is also limited to local scale and presents\
    \ a problem\nregarding the choice of material, which ideally needs to have similar\
    \ to leaf emissivity, aerodynamic\nand optical properties [54,87]. The third method\
    \ uses the actual temperature measurement range\nof the remote sensing image [33,97].\
    \ This method is simple to implement, however, works on the\nassumption that the\
    \ ﬁeld contains enough variability to contain a representative Twet and Tdry.\
    \ Fourth,\nthe reference temperatures can be estimated by theoretically solving\
    \ for the leaf surface energy balance\nequations, however, are limited by the\
    \ necessity to compute the canopy aerodynamic resistance [87].\nStandard and robust\
    \ Twet and Tdry measurements are needed to characterize CWSI with accuracy,\n\
    especially for temporal analysis [85,87,211]. The level of uncertainty due to\
    \ the adaptation of diﬀerent\napproaches for Twet and Tdry determination in the\
    \ instantaneous and seasonal measurements of CWSI\nis not known. Nonetheless,\
    \ adopting a consistent approach, CWSI has been shown to be suitable for\nmonitoring\
    \ the water status and making irrigation decisions of horticultural crops [31,85].\n\
    4.4.3. Spectral Indices\nCrops reﬂectance properties convey information about\
    \ the crop, for instance, a healthier crop has\nhigher reﬂectance in the NIR band.\
    \ Most often, the bands are mathematically combined to form VIs,\nwhich provide\
    \ information on the crop’s health, growth stage, biophysical properties, leaf\
    \ biochemistry,\nand water stress [29,215–218]. Using multispectral or hyperspectral\
    \ data, several Vis, such as green\nnormalised diﬀerence vegetation index (GNDVI),\
    \ renormalised diﬀerence vegetation index (RDVI),\noptimized soil-adjusted vegetation\
    \ index (OSAVI), transformed chlorophyll absorption in reﬂectance\nindex (TCARI),\
    \ and TCARI/OSAVI, amongst others [34,79,82], can be calculated that correlate\
    \ with the\nwater stress of horticultural crops (see Table 2). The most widely\
    \ studied VI in horticulture, in this\nregard, is the NDVI (Equation (3)).\nNDVI\
    \ = Rnir − Rr\nRnir + Rr\n(3)\nwhere Rnir and Rr represent the spectral reﬂectance\
    \ acquired at the NIR and red spectral regions,\nrespectively. In horticulture,\
    \ NDVI has been used as a proxy to estimate the vigour, biomass, and water\nstatus\
    \ of the crop. A vigorous canopy with more leaves regulates more water, therefore\
    \ remaining\ncooler when irrigated [200] and experiencing early water stress when\
    \ unirrigated. With regard to\nirrigation, the broadband normalised spectral indices\
    \ (such as NDVI) are suitable to detect spatial\nvariability and to identify the\
    \ area that is most vulnerable to water stress. However, these indices are\nnot\
    \ expected to change rapidly to reﬂect the instantaneous water status of plants\
    \ that are needed to\nmake decisions on irrigation scheduling.\nThe multispectral\
    \ indices along with complementary information in thermal wavelengths have\nproven\
    \ to be well suited to monitoring vegetation, speciﬁcally in relation to water\
    \ stress [219]. The ratio\nof canopy surface temperature to NDVI, deﬁned as temperature-vegetation\
    \ dryness index (TVDI),\nwas found to be useful for the study of water status\
    \ in horticultural crops. TVDI exploits the fact that\nvegetation with larger\
    \ NDVI will have a lower surface temperature unless the vegetation is under\n\
    stress. As most vegetation normally remains green after an initial bout of water\
    \ stress, the TVDI is\nmore suited than NDVI for early detection of water stress\
    \ as the surface temperature can rise rapidly\neven during initial water stress\
    \ [200].\nSimilarly, narrowband VIs that have been studied in relation to remote\
    \ sensing of water status are\nPRI and chlorophyll ﬂuorescence, which have been\
    \ directly correlated to the crop Ψleaf, gs [110,182,204].\nAgronomy 2020, 10,\
    \ 140\n15 of 35\nSeveral hyperspectral indices to estimate water status have been\
    \ identiﬁed [139]; however, their\napplication in remote sensing of horticultural\
    \ crops is at its infancy. Hyperspectral indices speciﬁc to\nwater absorption\
    \ bands around 900 nm, 1200 nm, 1400 nm, and 1900 nm may be used to detect the\n\
    water status of horticultural crops. The absorption features were found to be\
    \ highly correlated with\nplant water status [139]. Water band index (WBI), as\
    \ deﬁned in Equation (4), has been shown to closely\ntrack the changes in the\
    \ plant water status of various crops [202,203].\nWBI = R970\nR900\n(4)\nOther\
    \ water-related hyperspectral indices with potential application for horticultural\
    \ crops can\nbe found in the literature [139,202,203]. Hyperspectral data possess\
    \ the capability to reﬂect the\ninstantaneous water status of the plant, which\
    \ can be useful for quantitative decision-making on\nirrigation scheduling.\n\
    4.4.4. Soil Moisture\nThe moisture status of the soil provides an indication of\
    \ the available water resource to the crop.\nSoil moisture is traditionally measured\
    \ indirectly using soil moisture sensors placed below the surface\nof the soil.\
    \ A key challenge with using soil moisture sensors are the spatial distribution\
    \ of moisture,\nboth vertically and horizontally, to account for inherent ﬁeld-scale\
    \ variability. For instance, the root\nsystem of some horticultural crops, such\
    \ as grapevine, is capable of accessing water up to 30 m deep,\nwhile customer-grade\
    \ soil moisture probes generally extend to 1.5 m in depth or less. Thus, soil\n\
    moisture probes do not capture all the water available to the crop as they are\
    \ point measures and\nnot necessarily where the roots are located. Moreover, estimation\
    \ of soil moisture across spatial and\ntemporal scales is of interest for various\
    \ agricultural and hydrological studies. Optical, thermal, and\nmicrowave remote\
    \ sensing with their advantages relating to high spatial scale and temporal resolutions\n\
    could potentially be used for soil moisture estimation [220–222]. L-band microwave\
    \ radiometry,\na component of synthetic aperture radar systems, has been shown\
    \ to be a reliable approach to estimate\nsoil moisture via satellite-based remote\
    \ sensing [223], such as using the ESA’s Soil Moisture and\nOcean Salinity (SMOS)\
    \ [224] and NASA’s Soil Moisture Active Passive (SMAP) satellites [225,226].\n\
    The limitation of the SMOS and SMAP missions, with regard to horticultural application,\
    \ is their\ndepth of retrieval (up to 5 cm) and spatial resolution (in the order\
    \ of tens of kilometre) [227–229].\nAs an airborne application, the volumetric\
    \ soil moisture has been estimated by analysing the SNR of\nthe GNSS interference\
    \ signal [230,231]. With aforementioned capabilities, a combination of satellite\n\
    and airborne remote sensing may, in the future, be a reliable tool to map soil\
    \ moisture across spatial,\ntemporal and depth scales.\n4.4.5. Physiological Attributes\n\
    Using the SfM on remotely-sensed images, 3D canopy structure, terrain conﬁgurations,\
    \ and canopy\nsurface models can be derived [113,114,119,186,232]. By employing\
    \ a delineation algorithm on the 3D\nmodels, the 3D attributes of the crops and\
    \ macrostructure are determined more accurately [120,122,233].\nCrop surface area\
    \ and terrain conﬁguration (e.g., slope and aspect) may help to develop an optimal\n\
    resource management strategy. For example, crops located at a higher elevation\
    \ within an irrigation\nzone may experience a level of water stress due to the\
    \ gravitational ﬂow of irrigated water.\nUsing the structural measurements, such\
    \ as the canopy height, canopy size, the envelope of each\nrow, LAI, and porosity,\
    \ among others, the water demand of the crop may be estimated. Generally,\nlarger\
    \ canopies tend to require more water than smaller canopies with less leaf area\
    \ [116,157]. Using\nthe temporal measurement of the plant’s 3D attributes, the\
    \ vigour can be computed. Monitoring\ncrop vigour over the season and over subsequent\
    \ years can provide an indication of its health and\nperformance, e.g., yield,\
    \ within an irrigation zone. Canopy structure metrics are closely related to\n\
    horticultural tree growth and provide strong indicators of water consumption,\
    \ whereby canopy size\nAgronomy 2020, 10, 140\n16 of 35\ncan be used to determine\
    \ its water requirements [234]. Other 3D attributes, such as the crown perimeter,\n\
    width, height, area, and leaf density, have been shown to enable improved pruning\
    \ of horticultural\nplants [116,119].\nLAI can be estimated using the 3D attributes\
    \ obtained from remote sensing [114,157,201], whereby,\nhigher LAI is equivalent\
    \ to more leaf layers, implying greater total leaf area and, consequently, canopy\n\
    transpiration. Leaf density, LAI, and exposed leaf area of a crop drive its water\
    \ requirement and\nproductivity [235–237]. Knowledge of ﬁeld attributes, such\
    \ as row and plant spacing, may assist in\ninter-row surface energy balance to\
    \ determine the irrigation need of the plant [238]. Combining the\nstructural\
    \ properties with spectral VIs provide an estimation of biomass [239], which can\
    \ serve as\nanother indicator of the plant’s water requirements. Although physiological\
    \ attributes have been used\nto understand plant water status and its spatial\
    \ variability, they have not been directly applied to make\nquantitative decisions\
    \ on irrigation.\n4.4.6. Evapotranspiration\nThe estimation of ET via remote sensing,\
    \ numerical modelling, and empirical methods have been\nextensively studied and\
    \ reviewed in the literature [240–247]. These models are based on either surface\n\
    energy balance (SEB), Penman-Monteith (PM), Maximum entropy production (MEP),\
    \ water balance,\nwater-carbon linkage, or empirical relationships.\nSEB models\
    \ are based on a surface energy budget in which the latent heat ﬂux is estimated\
    \ as a\nresidual of the net radiation, soil heat ﬂux, and sensible heat ﬂux. The\
    \ models are either one-source\n(canopy and soil treated as a single surface for\
    \ the estimation of sensible heat ﬂux) or two-source\n(canopy and soil surfaces\
    \ treated separately). Improvements over the original one-source SEB models\n\
    were in the form of Surface Energy Balance Algorithm for Land (SEBAL) algorithm\
    \ [248,249] and\nMapping EvapoTranspiration with high Resolution and Internalized\
    \ Calibration (METRIC) [249,250].\nSEBAL oﬀers a simpliﬁed approach to collect\
    \ ET data at both local and regional scales thereby increasing\nthe spatial scope,\
    \ while METRIC uses the same (SEBAL) technique but auto-calibrates the model using\n\
    hourly ground-based reference ET (ETr) data [251]. As such, these and other (e.g.,\
    \ MEP) models rely\non accurate measurements of surface (e.g., canopy) and air\
    \ temperatures, which can be erroneous\nunder non-ideal conditions, e.g., cloudy\
    \ days. There is also a reliance on ground-based sensors to\ncapture ambient air\
    \ temperatures required by the model.\nAmong the existing methods, FAO’s PM is\
    \ the most widely adopted model to estimate reference\nET (ETref or ET0) [252].\
    \ The PM method uses incident and reﬂected solar radiation, emitted thermal\n\
    radiation, air temperature, wind speed, and vapour pressure to calculate ET0 [253].\
    \ Remote sensing\nprovides a cost-eﬀective method to estimate the ET0 at regional\
    \ to global scales [241] by estimating\nreﬂected solar and emitted thermal radiation.\
    \ One of the advantages of using the PM approach is\nthat it is parametrised using\
    \ micrometeorological data easily obtained from ground-based automatic\nweather\
    \ stations. However, PM suﬀers from the drawback that canopy transpiration is\
    \ not dynamic\nas inﬂuenced by soil moisture availability via stomatal regulation\
    \ [241]. From a practical standpoint,\nPM-derived ET0 estimates are used in conjunction\
    \ with crop factors or crop coeﬃcients (kc), which are\nclosely related to the\
    \ light interception of the canopy [254].\nCrop evapotranspiration (ETc) is deﬁned\
    \ as the product of kc and ET0. In the absence of accurate\nETc measurements,\
    \ kc is an easy and practical means of getting reliable estimates of ETc using\
    \ ET0 [255].\nIn this regard, studies have focused on the use of remote sensing\
    \ to study spatial variability in kc and\nETc [101,256–258]. Thermal and NIR imagery\
    \ can be used to compute kc and ETc as transpiration\nrate is closely related\
    \ to canopy temperature [259–261] and kc has been shown to correlate with\ncanopy\
    \ reﬂectance [101,255]. Various thermal indices, such as CWSI, canopy temperature\
    \ ratio, canopy\ntemperature above non-stressed, and canopy temperature above\
    \ canopy threshold, can be used to\nestimate ETc, where CWSI- based ETc was found\
    \ to be the most accurate [24].\nET at a larger scale is typically estimated based\
    \ on satellite remote sensing. The temporal resolution\nof satellites is, however,\
    \ low and inadequate for horticultural applications, such as irrigation scheduling\n\
    Agronomy 2020, 10, 140\n17 of 35\n(e.g., Landsat has a 16-day revisit cycle).\
    \ In contrast, high temporal resolution satellites are coarse in\nspatial resolution\
    \ for ﬁeld-scale observations [25]. The daily or even instantaneous estimation\
    \ of ETc at\nthe ﬁeld scale is crucial for irrigation scheduling and is expected\
    \ to have great application prospects\nin the future [240,259,262,263]. In this\
    \ regard, the future direction of satellite-based ET estimates\nmay focus on temporal\
    \ downscaling either by extrapolation of instantaneous measurement [264],\ninterpolation\
    \ between two successive observations [201], data fusion of multiple satellites\
    \ [25,260], and\nspatial downscaling using multiple satellites [265–268]. An example\
    \ of early satellite-based remote\nsensing for ET is the MODIS Global Evapotranspiration\
    \ Project (MOD16), which was established in\n1999 to provide daily estimates of\
    \ global terrestrial evapotranspiration using data acquired from a\npair of NASA\
    \ satellites in conjunction with Algorithm Theoretical Based Documents (ATBDs)\
    \ [269].\nThese estimates correlated well with ground-based eddy covariance ﬂux\
    \ tower estimates of ET despite\ndiﬀerences in the uncertainties associated with\
    \ each of these techniques.\nUASs are being increasingly utilised to acquire multi-spectral\
    \ and thermal imagery to compute\nET at an unprecedented spatial resolution [270,271].\
    \ Using high-resolution images, ﬁltering the\nshadowed-pixel is possible, which\
    \ showed signiﬁcant improvement in the estimation of ET in\ngrapevine [101]. Using\
    \ high-resolution thermal and/or multispectral imagery, ET has been derived for\n\
    horticultural crops, such as grapevines [270] and olives [271]. The seasonal monitoring\
    \ of ETc at high\nspatial and temporal resolutions is of high importance for precision\
    \ irrigation of horticultural crops in\nthe future [259].\n5. Case Studies on\
    \ the Use of Remote Sensing for Crop Water Stress Detection\nThe increasing prevalence\
    \ of UAS along with low-cost camera systems has brought about much\ninterest in\
    \ the characterisation of crop water status/stress during the growing season to\
    \ inform orchard\nor farm management decisions, in particular, irrigation scheduling\
    \ [272,273]. Traditional methodologies\nto assess crop water stress are constrained\
    \ by limitations relating to large farm sizes and accompanying\nspatial variability,\
    \ high labour costs to collect data, and access to instrumentation that is both\
    \ inexpensive\nand portable [272]. The beneﬁts of precision agriculture [274],\
    \ including through precision irrigation\npractices [1], result in higher production\
    \ eﬃciencies and economic returns through site-speciﬁc crop\nmanagement [275,276].\
    \ This approach has motivated the use of high-resolution imagery acquired\nfrom\
    \ remote sensing to identify irrigation zones [99,277]. The ﬁrst horticultural\
    \ applications of UAS\nplatforms for crop water status measurement were in orange\
    \ and peach orchards where both thermal\nand multispectral-derived VIs, speciﬁcally\
    \ the PRI, were shown to be well-correlated to crop water\nstatus [102]. Here,\
    \ we explore the use of remote sensing and accompanying image acquisition platforms\n\
    to characterise the spatial and temporal patterns of the water status of two economically\
    \ important\nhorticultural crops, grapevine and almond.\n5.1. Grapevine (Vitis\
    \ spp.)\nThe characterisation of spatial variability in vine water status in a\
    \ vineyard provides valuable\nguidance on irrigation scheduling decisions [82],\
    \ and this spatial variability can be eﬃciently\ncharacterised by the use of remote\
    \ sensing platforms [29]. The ﬁrst use of remote sensing in vineyards\nfor crop\
    \ water stress detection was using manned aircraft ﬂown over an irrigated vineyard\
    \ in Hanwood\n(NSW) Australia where CWSI was mapped at a spatial resolution of\
    \ 10 cm [278]. Subsequently, UAS\nplatforms began to be used in vineyards for\
    \ vine water stress characterisation. Early work in this\ncrop used a fuel-based\
    \ helicopter with a 29 cc engine and equipped with thermal (Thermovision\nA40M)\
    \ and multispectral (Tetracam MCA-6) camera systems [102]. The study observed\
    \ strong (inverse)\nrelationships between (Tc − Ta) and gs. A related study showed\
    \ strong correlations between thermal\nand multispectral VIs, and traditional,\
    \ ground-based measures of water status, such as Ψleaf and\ngs [182]. In this\
    \ study, normalised PRI was shown to have correlation coeﬃcients exceeding 0.8\
    \ versus\nboth Ψleaf and gs, indicating that remotely-sensed VIs can be reliable\
    \ indicators of vine water status.\nThermal indices, such as (Tc − Ta) and CWSI,\
    \ were also well-correlated to Ψleaf and gs at speciﬁc times of\nAgronomy 2020,\
    \ 10, 140\n18 of 35\nthe day. The use of thermal indices, such as CWSI or Ig,\
    \ requires reference temperatures (Twet, Tdry) or\nnon-water stressed baselines\
    \ (NWSB) [279]. Due to the diﬃculty of obtaining reference temperatures or\nNWSB\
    \ using remote sensing, some authors have used the minimum temperature found from\
    \ all canopy\npixels as Twet [199], and Ta + 5 ◦C as Tdry [213,280]. NWSB is typically\
    \ obtained from well-watered\ncanopies, measuring (Tc − Ta) under a range of vapour\
    \ pressure deﬁcit conditions [279]. Thermal water\nstress indices have also shown\
    \ to be useful to distinguish between water use strategies of diﬀerent\ngrapevine\
    \ cultivars [83,281], which is useful for customising irrigation scheduling based\
    \ on the speciﬁc\nwater needs of a given cultivar. More recently, studies have\
    \ used UAS-based multispectral-based\nVIs to train an artiﬁcial neural network\
    \ (ANN) models to predict spatial patterns of Ψstem [84,282].\nUsing UAS-based\
    \ multispectral data, the authors showed that ANN estimated Ψstem with higher\n\
    accuracy (RMSE lower than 0.15 MPa) as compared to the conventional multispectral\
    \ indices based\nestimation (RMSE over 0.32 MPa).\n5.2. Almond (Prunus Dulcis)\n\
    Almonds are perennial nut trees grown in semi-arid climates and are reliant on\
    \ irrigation\napplications. Their water requirements are relatively high, with\
    \ seasonal ETc exceeding 1000 mm [283].\nThe requirement for prudent irrigation\
    \ management in the face of decreased water availability is\ncritical for maintaining\
    \ tree productivity, yield, and nut quality [284]. Towards this goal, UAS-based\n\
    remote sensing has been used to characterise the spatial patterns of tree water\
    \ status in almond\norchards. A UAS-based thermal camera was used to acquire tree\
    \ the crown temperature data from\na California almond orchard; this temperature\
    \ was used to determine the temperature diﬀerence\nbetween crown and air (Tc −\
    \ Ta) and compared to shaded leaf water potential (Ψsl) [92]. The study\nfound\
    \ a strong negative correlation (R2 = 0.72) between (Tc − Ta) and Ψsl. The same\
    \ authors conducted\na follow on study in Spain on several fruit tree species\
    \ including almond. The negative relationship\n(slope and oﬀset) between (Tc −\
    \ Ta) and Ψstem was observed to vary based on the time of observation;\nmorning\
    \ measurements had weak relationships, whereas afternoon measurements had stronger\n\
    relationships [99]. Their proposed methodology allowed for the spatial characterisation\
    \ of orchard\nwater status on a single-tree basis, demonstrating the utility of\
    \ UAS-based crop water stress data.\nBeyond the characterisation of crop water\
    \ stress for irrigation scheduling, there is an opportunity to\nuse this data\
    \ to quantify the economic impact at a spatial level.\n6. Future Prospective and\
    \ Gaps in the Knowledge\nPrecision irrigation is a promising approach to increase\
    \ farm water use eﬃciency for sustainable\nproduction, including for horticultural\
    \ crops [3,5,9,10,274,285]. It is envisioned that the future of\nprecision irrigation\
    \ will incorporate UAS, manned aircraft, and satellite-based remote sensing platforms\n\
    alongside ground-based proximal sensors coupled with wireless sensor networks.\
    \ The automation\nof UAS technology will continue to develop further to a point\
    \ that even novice users can adopt\nthe technology with ease. It is also expected\
    \ that the data processing pipeline of remote sensing\nimages will become automated\
    \ to be ‘ﬁt for purpose’ for crop water status measurements. The ideal\nsolution\
    \ may lie in the use of satellites (or sometimes manned aircraft) for regional\
    \ estimation and\nplanning [55,260], UAS for seasonal monitoring and zoning [32,100,197,286],\
    \ proximal sensors for\ncontinuous measurement [287], and artiﬁcial intelligence\
    \ to derive decision-ready products [84,282]\nthat can be used for making irrigation\
    \ scheduling decisions [31,288–295]. Continued technological\ndevelopments in\
    \ this space will enable growers to acquire actionable data with ease, and eventually\n\
    transition towards semi-automated or fully-automated irrigation applications.\n\
    Remote sensing and current irrigation application technologies are limited in\
    \ temporal and\nspatial resolution, respectively. Although UAS technology can\
    \ deliver sub-plant level spatially explicit\ninformation of water status, the\
    \ size of the management block is much coarser, typically over 10 m.\nHence, further\
    \ improvements in variable rate application technologies, e.g., boom sprayers,\
    \ or zoned\ndrip irrigation, are required to fully exploit high-resolution UAS\
    \ measurements. Nonetheless, the\nAgronomy 2020, 10, 140\n19 of 35\nrequired resolution\
    \ of remote sensing should be guided by the underlying spatial variability of\
    \ the crop.\nFor ﬁelds with relatively lower spatial variability, low/medium-resolution\
    \ remote sensing imagery\nmay suﬃce for crop water status assessment [278,296,297].\n\
    Remote sensing provides an indirect estimate of plant water status using the regression-based\n\
    approach through several calculated reﬂectance indices. In comparison, physical\
    \ and mechanistic\nmodels, e.g., radiative transfer models and energy balance\
    \ models, incorporate both direct and indirect\nmeasures of the canopy, therefore\
    \ establishing a basis for diﬀerences in plant water status. Using a\nsimilar\
    \ approach, predictions of crop water status using regression-based remote sensing\
    \ models can\nbe improved by incorporating some direct auxiliary variables.\n\
    Further developments in thermal remote sensing are also expected, speciﬁcally,\
    \ the advent of new\nthermal and hybrid thermal-multispectral water status/stress\
    \ indices that are more sensitive to canopy\ntranspiration. The most widely-adopted\
    \ thermal index, CWSI, is an instantaneous measure that is\nnormalised to local\
    \ weather conditions and inﬂuenced by genotype and phenotype. For example,\nthe\
    \ relationship between CWSI and crop water status is inﬂuenced by environmental\
    \ conditions\n(e.g., high incident radiation and low humidity vs low incident\
    \ radiation and high humidity) and\nphenological stage [197,214,298]. As a result,\
    \ corresponding ground-based measurements are required\nfor each temporal remote\
    \ measurement to determine the correlation with water status. Hence, temporal\n\
    assessments of water status using thermal cameras will require the incorporation\
    \ of meteorological\ndata along with the thermal response using novel indices.\n\
    In the area of satellite remote sensing, we foresee further developments on temporal\
    \ downscaling\nto achieve daily measurements. A higher temporal resolution may\
    \ be achieved by fusion of multiple\nsatellite observations, such as freely available\
    \ Landsat and Sentinel. Further reductions of temporal\nresolution will require\
    \ interpolation between two successive observations. Furthermore, temporal\nmodels\
    \ of water status could be developed to assist the interpolation to eventually\
    \ satisfy the\nrequirements for irrigation scheduling [25,201,263]. The continued\
    \ advancement and greater availability\nof Nanosat/Cubesat may provide an alternate\
    \ method to capture high-resolution data at a higher\na greater temporal resolution,\
    \ which can be suitable to study the water status of horticultural\ncrops [299–301].\n\
    Crop water status is a complex phenomenon, which can be interpreted with respect\
    \ to a\nnumber of variables. These variables can include spectral response, thermal\
    \ response, meteorological\ndata, 3D attributes of the canopy, and macrostructure\
    \ of the block (farm).\nClearly, there is\nan opportunity for a multi-disciplinary\
    \ approach, potentially incorporating artiﬁcial intelligence\ntechniques which\
    \ incorporate the aforementioned variables to provide a robust estimation of crop\n\
    water status [84,141,282,302,303]. Furthermore, with machine learning algorithms,\
    \ hyperspectral\nremote sensing will provide a wealth of data to estimate crop\
    \ water status. A quantitative product,\nsuch as SIF, derived from hyperspectral\
    \ data will have the potential for direct quantiﬁcation of water\nstress [204,205,304].\
    \ In this regard, the upcoming FLEX satellite mission [305,306] and recent advances\n\
    in aerial spectroradiometry [109,132,137,307–310] dedicated for observation of\
    \ SIF may be unique and\npowerful tools for high-value horticultural crops.\n\
    Multi-temporal images represent an excellent resource for seasonal monitoring\
    \ of changes in crop\nwater status. Five to six temporal points of data acquisition\
    \ at critical phenological stages of crop\ndevelopment have been recommended for\
    \ irrigation scheduling [31,32]. However, for semi-arid or arid\nregions, irrigation\
    \ is typically required multiple times per week. Acquisition and post-processing\
    \ of\nremote sensing data for actionable products multiple times a week is currently\
    \ logistically unfeasible.\nThe fusion of UAS-based remote sensing data, continuous\
    \ ground-based proximal or direct sensors,\nincluding weather station data, can\
    \ potentially inform daily estimates of water status at canopy level.\nThis approach\
    \ will require predictive models, such as those based on machine learning algorithms,\
    \ to\nestimate the current and future water status of the crop. Eventually, growers\
    \ would beneﬁt from the\nknowledge of crop water requirements for the determination\
    \ of seasonal irrigation requirements to\nsustainably farm into the future.\n\
    Agronomy 2020, 10, 140\n20 of 35\nOne vision for the future of precision irrigation\
    \ is in automated pipelines to explicitly manage\nirrigation water at the sub-block\
    \ level. This automated pipeline would likely include remote and\nproximal data\
    \ acquisition and processing, prediction and interpretation of crop water status\
    \ and\nrequirements, and subsequently, control of irrigation systems. Recent rapid\
    \ developments in cloud\ncomputing and wireless technology could assist in the\
    \ quasi-real-time processing of the remote sensing\ndata soon after acquisition\
    \ [311–313]. Eventually, automation and computational power will merge to\ndevelop\
    \ smart technology in which artiﬁcial intelligence uses real-time data analysis\
    \ for diagnosis\nand decision-making. Growers of the future will be able to take\
    \ advantage of precise irrigation\nrecommendations using information sourced from\
    \ a ﬂeet of UAS that map large farm blocks on a daily\nschedule, continuous ground-based\
    \ proximal and direct sensors, and weather stations. This data can be\nstored\
    \ on and accessed from the cloud almost instantaneously, used in conjunction with\
    \ post-processing\nalgorithms for decision-making on optimised irrigation applications\
    \ [311,314].\n7. Conclusions\nThis paper provides a comprehensive review of the\
    \ use of remote sensing to determine the water\nstatus of horticultural crops.\
    \ One of our objectives was to survey the range of remote sensing tools\navailable\
    \ for irrigation decision-making. Earth observation satellite systems possess\
    \ the required bands\nto study the water status of vegetation and soil. Satellites\
    \ are more suitable for scouting, planning,\nand management of irrigation applications\
    \ that involve large areas, and where data acquisition is\nnot time-constrained.\
    \ Manned aircraft are sparingly used in horticultural applications due to the\n\
    cost, logistics, and speciﬁc expertise needed for the operation of the platform.\
    \ UAS-based remote\nsensing provides ﬂexibility in spatial resolution (crop level\
    \ observation achievable), coverage (over\n25 ha achievable in a single ﬂight),\
    \ spectral bands, as well as temporal revisit. Routine monitoring of\nhorticultural\
    \ crops for water status characterisation is, therefore, best performed using\
    \ a UAS platform.\nWe envision a future for precision irrigation where satellites\
    \ are used for planning, and UAS used in\nconjunction with a network of ground-based\
    \ sensors to achieve actionable products on a timely basis.\nThe plant’s instantaneous\
    \ response to water stress can be captured using thermal cameras (via\nindices,\
    \ such as CWSI) and potentially narrow-band hyperspectral sensors (via, for example,\
    \ SIF),\nmaking them suitable to draw quantiﬁable decisions with regard to irrigation\
    \ scheduling. Broadband\nmultispectral and RGB cameras capture the non-instantaneous\
    \ water status of crops, making them\nsuitable for general assessment of crop\
    \ water status. Integrated use of thermal and multispectral\nimagery may be the\
    \ simplest yet eﬀective sensor combinations to capture the overall as well as\n\
    instantaneous water status of the plant. With regard to irrigation scheduling,\
    \ further developments\nare required to establish crop-speciﬁc thresholds of remotely-sensed\
    \ indices to decide when and how\nmuch to irrigate.\nAuthor Contributions: Performed\
    \ the article review and prepared the original draft, D.G.; contributed to write\n\
    the case studies, V.P., and together with D.G. contributed to review and edit\
    \ the manuscript. All authors have read\nand agreed to the published version of\
    \ the manuscript.\nFunding: This research and the APC was funded by Wine Australia\
    \ (Grant number: UA 1803-1.3).\nAcknowledgments: The authors would like to acknowledge\
    \ the funding body Wine Australia, The University of\nAdelaide, and anonymous\
    \ reviewers for their contribution.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nReferences\n1.\nMonaghan, J.M.; Daccache, A.; Vickers,\
    \ L.H.; Hess, T.M.; Weatherhead, E.K.; Grove, I.G.; Knox, J.W. More\n‘crop per\
    \ drop’: constraints and opportunities for precision irrigation in European agriculture.\
    \ J. Sci.\nFood Agric. 2013, 93, 977–980. [CrossRef]\n2.\nSmith, R. Review of\
    \ Precision Irrigation Technologies and Their Applications; University of Southern\
    \ Queensland\nDarling Heights: Queensland, Australia, 2011.\nAgronomy 2020, 10,\
    \ 140\n21 of 35\n3.\nPiao, S.; Ciais, P.; Huang, Y.; Shen, Z.; Peng, S.; Li, J.;\
    \ Zhou, L.; Liu, H.; Ma, Y.; Ding, Y.; et al. The impacts of\nclimate change on\
    \ water resources and agriculture in China. Nature 2010, 467, 43. [CrossRef]\n\
    4.\nHowden, S.M.; Soussana, J.-F.; Tubiello, F.N.; Chhetri, N.; Dunlop, M.; Meinke,\
    \ H. Adapting agriculture to\nclimate change. Proc. Natl. Acad. Sci. USA 2007,\
    \ 104, 19691–19696. [CrossRef]\n5.\nWebb, L.; Whiting, J.; Watt, A.; Hill, T.;\
    \ Wigg, F.; Dunn, G.; Needs, S.; Barlow, E. Managing grapevines through\nsevere\
    \ heat: A survey of growers after the 2009 summer heatwave in south-eastern Australia.\
    \ J. Wine Res.\n2010, 21, 147–165. [CrossRef]\n6.\nDatta, S. Impact of climate\
    \ change in Indian horticulture-a review. Int. J. Sci. Environ. Technol. 2013,\
    \ 2,\n661–671.\n7.\nWebb, L.; Whetton, P.; Barlow, E. Modelled impact of future\
    \ climate change on the phenology of winegrapes\nin Australia. Aust. J. Grape\
    \ Wine Res. 2007, 13, 165–175. [CrossRef]\n8.\nWang, J.; Mendelsohn, R.; Dinar,\
    \ A.; Huang, J.; Rozelle, S.; Zhang, L. The impact of climate change on China’s\n\
    agriculture. Agric. Econ. 2009, 40, 323–337. [CrossRef]\n9.\nBeare, S.; Heaney,\
    \ A. Climate change and water resources in the Murray Darling Basin, Australia.\n\
    In Proceedings of the 2002 World Congress of Environmental and Resource Economists,\
    \ Monterey, CA, USA,\n24–27 June 2002.\n10.\nKhan, S.; Tariq, R.; Yuanlai, C.;\
    \ Blackwell, J. Can irrigation be sustainable? Agric. Water Manag. 2006, 80,\n\
    87–99. [CrossRef]\n11.\nDroogers, P.; Bastiaanssen, W. Irrigation performance\
    \ using hydrological and remote sensing modeling.\nJ. Irrig. Drain. Eng. 2002,\
    \ 128, 11–18. [CrossRef]\n12.\nRay, S.; Dadhwal, V. Estimation of crop evapotranspiration\
    \ of irrigation command area using remote sensing\nand GIS. Agric. Water Manag.\
    \ 2001, 49, 239–249. [CrossRef]\n13.\nKim, Y.; Evans, R.G.; Iversen, W.M. Remote\
    \ sensing and control of an irrigation system using a distributed\nwireless sensor\
    \ network. IEEE Trans. Instrum. Meas. 2008, 57, 1379–1387.\n14.\nRitchie, G.A.;\
    \ Hinckley, T.M. The pressure chamber as an instrument for ecological research.\
    \ In Advances in\nEcological Research; Elsevier: Amsterdam, The Netherlands, 1975;\
    \ Volume 9, pp. 165–254.\n15.\nSmart, R.; Barrs, H. The eﬀect of environment and\
    \ irrigation interval on leaf water potential of four\nhorticultural species.\
    \ Agric. Meteorol. 1973, 12, 337–346. [CrossRef]\n16.\nMeron, M.; Grimes, D.;\
    \ Phene, C.; Davis, K. Pressure chamber procedures for leaf water potential\n\
    measurements of cotton. Irrig. Sci. 1987, 8, 215–222. [CrossRef]\n17.\nSantos,\
    \ A.O.; Kaye, O. Grapevine leaf water potential based upon near infrared spectroscopy.\
    \ Sci. Agric.\n2009, 66, 287–292. [CrossRef]\n18.\nBerni, J.A.J.; Zarco-Tejada,\
    \ P.J.; Sepulcre-Cantó, G.; Fereres, E.; Villalobos, F. Mapping canopy conductance\n\
    and CWSI in olive orchards using high resolution thermal remote sensing imagery.\
    \ Remote Sens. Environ.\n2009, 113, 2380–2388. [CrossRef]\n19.\nChaves, M.M.;\
    \ Santos, T.P.; de Souza, C.; Ortuño, M.; Rodrigues, M.; Lopes, C.; Maroco, J.;\
    \ Pereira, J.S.\nDeﬁcit irrigation in grapevine improves water-use eﬃciency while\
    \ controlling vigour and production quality.\nAnn. Appl. Biol. 2007, 150, 237–252.\
    \ [CrossRef]\n20.\nBravdo, B.; Hepner, Y.; Loinger, C.; Cohen, S.; Tabacman, H.\
    \ Eﬀect of irrigation and crop level on growth,\nyield and wine quality of Cabernet\
    \ Sauvignon. Am. J. Enol. Vitic. 1985, 36, 132–139.\n21.\nMatthews, M.; Ishii,\
    \ R.; Anderson, M.; O’Mahony, M. Dependence of wine sensory attributes on vine\
    \ water\nstatus. J. Sci. Food Agric. 1990, 51, 321–335. [CrossRef]\n22.\nReynolds,\
    \ A.G.; Naylor, A.P. ‘Pinot noir’ and ‘Riesling’ grapevines respond to water stress\
    \ duration and soil\nwater-holding capacity. HortScience 1994, 29, 1505–1510.\
    \ [CrossRef]\n23.\nAlvino, A.; Marino, S. Remote sensing for irrigation of horticultural\
    \ crops. Horticulturae 2017, 3, 40. [CrossRef]\n24.\nKullberg, E.G.; DeJonge,\
    \ K.C.; Chávez, J.L. Evaluation of thermal remote sensing indices to estimate\
    \ crop\nevapotranspiration coeﬃcients. Agric. Water Manag. 2017, 179, 64–73. [CrossRef]\n\
    25.\nSemmens, K.A.; Anderson, M.C.; Kustas, W.P.; Gao, F.; Alﬁeri, J.G.; McKee,\
    \ L.; Prueger, J.H.; Hain, C.R.;\nCammalleri, C.; Yang, Y.; et al. Monitoring\
    \ daily evapotranspiration over two California vineyards using\nLandsat 8 in a\
    \ multi-sensor data fusion approach. Remote Sens. Environ. 2015, 185, 155–170.\
    \ [CrossRef]\n26.\nJackson, R.D. Remote sensing of biotic and abiotic plant stress.\
    \ Annu. Rev. Phytopathol. 1986, 24, 265–287.\n[CrossRef]\nAgronomy 2020, 10, 140\n\
    22 of 35\n27.\nMoran, M.; Clarke, T.; Inoue, Y.; Vidal, A. Estimating crop water\
    \ deﬁcit using the relation between surface-air\ntemperature and spectral vegetation\
    \ index. Remote Sens. Environ. 1994, 49, 246–263. [CrossRef]\n28.\nLamb, D.; Hall,\
    \ A.; Louis, J. Airborne remote sensing of vines for canopy variability and productivity.\n\
    Aust. Grapegrow. Winemak. 2001, 449a, 89–94.\n29.\nHall, A.; Lamb, D.; Holzapfel,\
    \ B.; Louis, J. Optical remote sensing applications in viticulture-a review. Aust.\
    \ J.\nGrape Wine Res. 2002, 8, 36–47. [CrossRef]\n30.\nDe Bei, R.; Cozzolino,\
    \ D.; Sullivan, W.; Cynkar, W.; Fuentes, S.; Dambergs, R.; Pech, J.; Tyerman,\
    \ S.\nNon-destructive measurement of grapevine water potential using near infrared\
    \ spectroscopy. Aust. J. Grape\nWine Res. 2011, 17, 62–71. [CrossRef]\n31.\nBellvert,\
    \ J.; Zarco-Tejada, P.J.; Marsal, J.; Girona, J.; González-Dugo, V.; Fereres,\
    \ E. Vineyard irrigation\nscheduling based on airborne thermal imagery and water\
    \ potential thresholds. Aust. J. Grape Wine Res. 2016,\n22, 307–315. [CrossRef]\n\
    32.\nBellvert, J.; Marsal, J.; Girona, J.; Gonzalez-Dugo, V.; Fereres, E.; Ustin,\
    \ S.; Zarco-Tejada, P. Airborne thermal\nimagery to detect the seasonal evolution\
    \ of crop water status in peach, nectarine and Saturn peach orchards.\nRemote\
    \ Sens. 2016, 8, 39. [CrossRef]\n33.\nPark, S.; Ryu, D.; Fuentes, S.; Chung, H.;\
    \ Hernández-Montes, E.; O’Connell, M. Adaptive estimation of crop\nwater stress\
    \ in nectarine and peach orchards using high-resolution imagery from an unmanned\
    \ aerial vehicle\n(UAV). Remote Sens. 2017, 9, 828. [CrossRef]\n34.\nEspinoza,\
    \ C.Z.; Khot, L.R.; Sankaran, S.; Jacoby, P.W. High resolution multispectral and\
    \ thermal remote\nsensing-based water stress assessment in subsurface irrigated\
    \ grapevines. Remote Sens. 2017, 9, 961.\n[CrossRef]\n35.\nEzenne, G.I.; Jupp,\
    \ L.; Mantel, S.K.; Tanner, J.L. Current and potential capabilities of UAS for\
    \ crop water\nproductivity in precision agriculture. Agric. Water Manag. 2019,\
    \ 218, 158–164. [CrossRef]\n36.\nOliver, M.A.; Webster, R. Kriging: A method of\
    \ interpolation for geographical information systems. Int. J.\nGeogr. Inf. Syst.\
    \ 1990, 4, 313–332. [CrossRef]\n37.\nHa, W.; Gowda, P.H.; Howell, T.A. A review\
    \ of downscaling methods for remote sensing-based irrigation\nmanagement: Part\
    \ I. Irrig. Sci. 2013, 31, 831–850. [CrossRef]\n38.\nHa, W.; Gowda, P.H.; Howell,\
    \ T.A. A review of potential image fusion methods for remote sensing-based\nirrigation\
    \ management: Part II. Irrig. Sci. 2013, 31, 851–869. [CrossRef]\n39.\nBelward,\
    \ A.S.; Skøien, J.O. Who launched what, when and why; trends in global land-cover\
    \ observation\ncapacity from civilian earth observation satellites. ISPRS J. Photogramm.\
    \ Remote Sens. 2015, 103, 115–128.\n[CrossRef]\n40.\nLucieer, A.; Malenovskỳ,\
    \ Z.; Veness, T.; Wallace, L. HyperUAS—Imaging spectroscopy from a multirotor\n\
    unmanned aircraft system. J. Field Robot. 2014, 31, 571–590. [CrossRef]\n41.\n\
    McCabe, M.F.; Rodell, M.; Alsdorf, D.E.; Miralles, D.G.; Uijlenhoet, R.; Wagner,\
    \ W.; Lucieer, A.; Houborg, R.;\nVerhoest, N.E.; Franz, T.E.; et al. The future\
    \ of Earth observation in hydrology. Hydrol. Earth Syst. Sci. 2017,\n21, 3879.\
    \ [CrossRef]\n42.\nMatese, A.; Toscano, P.; Di Gennaro, S.; Genesio, L.; Vaccari,\
    \ F.; Primicerio, J.; Belli, C.; Zaldei, A.; Bianconi, R.;\nGioli, B. Intercomparison\
    \ of UAV, aircraft and satellite remote sensing platforms for precision viticulture.\n\
    Remote Sens. 2015, 7, 2971–2990. [CrossRef]\n43.\nMancini, A.; Frontoni, E.; Zingaretti,\
    \ P. Satellite and UAV data for Precision Agriculture Applications.\nIn Proceedings\
    \ of the 2019 International Conference on Unmanned Aircraft Systems (ICUAS 2019),\
    \ Atlanta,\nGA, USA, 11–14 June 2019; pp. 491–497.\n44.\nDiago, M.P.; Bellincontro,\
    \ A.; Scheidweiler, M.; Tardáguila, J.; Tittmann, S.; Stoll, M. Future opportunities\n\
    of proximal near infrared spectroscopy approaches to determine the variability\
    \ of vineyard water status.\nAust. J. Grape Wine Res. 2017, 23, 409–414. [CrossRef]\n\
    45.\nGutierrez, S.; Diago, M.P.; Fernández-Novales, J.; Tardaguila, J. Vineyard\
    \ water status assessment using\non-the-go thermal imaging and machine learning.\
    \ PLoS ONE 2018, 13, e0192037. [CrossRef] [PubMed]\n46.\nFernández-Novales, J.;\
    \ Tardaguila, J.; Gutiérrez, S.; Marañón, M.; Diago, M.P. In ﬁeld quantiﬁcation\
    \ and\ndiscrimination of diﬀerent vineyard water regimes by on-the-go NIR spectroscopy.\
    \ Biosyst. Eng. 2018, 165,\n47–58. [CrossRef]\nAgronomy 2020, 10, 140\n23 of 35\n\
    47.\nDiago, M.P.; Fernández-Novales, J.; Gutiérrez, S.; Marañón, M.; Tardaguila,\
    \ J. Development and validation of a\nnew methodology to assess the vineyard water\
    \ status by on-the-go near infrared spectroscopy. Front. Plant Sci.\n2018, 9,\
    \ 59. [CrossRef]\n48.\nAquino, A.; Millan, B.; Diago, M.-P.; Tardaguila, J. Automated\
    \ early yield prediction in vineyards from\non-the-go image acquisition. Comput.\
    \ Electron. Agric. 2018, 144, 26–36. [CrossRef]\n49.\nMarkham, B.L.; Helder, D.L.\
    \ Forty-year calibrated record of earth-reﬂected radiance from Landsat: A review.\n\
    Remote Sens. Environ. 2012, 122, 30–40. [CrossRef]\n50.\nToth, C.; Jó´zków, G.\
    \ Remote sensing platforms and sensors: A survey. ISPRS J. Photogramm. Remote\
    \ Sens.\n2016, 115, 22–36. [CrossRef]\n51.\nTyc, G.; Tulip, J.; Schulten, D.;\
    \ Krischke, M.; Oxfort, M. The RapidEye mission design. Acta Astronaut. 2005,\n\
    56, 213–219. [CrossRef]\n52.\nSweeting, M.N. Modern small satellites-changing\
    \ the economics of space. Proc. IEEE 2018, 106, 343–361.\n[CrossRef]\n53.\nKhanal,\
    \ S.; Fulton, J.; Shearer, S. An overview of current and potential applications\
    \ of thermal remote sensing\nin precision agriculture. Comput. Electron. Agric.\
    \ 2017, 139, 22–32. [CrossRef]\n54.\nGerhards, M.;\nSchlerf, M.;\nMallick, K.;\n\
    Udelhoven, T. Challenges and Future Perspectives of\nMulti-/Hyperspectral Thermal\
    \ Infrared Remote Sensing for Crop Water-Stress Detection: A Review.\nRemote Sens.\
    \ 2019, 11, 1240. [CrossRef]\n55.\nRyan, S.; Lewis, M. Mapping soils using high\
    \ resolution airborne imagery, Barossa Valley, SA. In Proceedings\nof the Inaugural\
    \ Australian Geospatial Information and Agriculture Conference Incorporating Precision\n\
    Agriculture in Australasia 5th Annual Symposium, Orange, NSW, Australia, 17–19\
    \ July 2001.\n56.\nKhaliq, A.; Comba, L.; Biglia, A.; Ricauda Aimonino, D.; Chiaberge,\
    \ M.; Gay, P. Comparison of satellite and\nUAV-based multispectral imagery for\
    \ vineyard variability assessment. Remote Sens. 2019, 11, 436. [CrossRef]\n57.\n\
    Jones, H.G.; Vaughan, R.A. Remote Sensing of Vegetation: Principles, Techniques,\
    \ and Applications; Oxford\nUniversity Press: Oxford, UK, 2010.\n58.\nThenkabail,\
    \ P.S.; Lyon, J.G. Hyperspectral Remote Sensing of Vegetation; CRC Press: Boco\
    \ Raton, FL, USA, 2016.\n59.\nKing, M.D.; Platnick, S.; Menzel, W.P.; Ackerman,\
    \ S.A.; Hubanks, P.A. Spatial and temporal distribution of\nclouds observed by\
    \ MODIS onboard the Terra and Aqua satellites. IEEE Trans. Geosci. Remote Sens.\
    \ 2013, 51,\n3826–3852. [CrossRef]\n60.\nChen, X.; Liu, M.; Zhu, X.; Chen, J.;\
    \ Zhong, Y.; Cao, X. “Blend-then-Index” or “Index-then-Blend”:\nA Theoretical\
    \ Analysis for Generating High-resolution NDVI Time Series by STARFM. Photogramm.\
    \ Eng.\nRemote Sens. 2018, 84, 65–73. [CrossRef]\n61.\nYin, T.; Inglada, J.; Osman,\
    \ J. Time series image fusion: Application and improvement of STARFM for land\n\
    cover map and production. In Proceedings of the 2012 IEEE International Geoscience\
    \ and Remote Sensing\nSymposium, Munich, Germany, 22–27 July 2012; pp. 378–381.\n\
    62.\nGevaert, C.M.; García-Haro, F.J. A comparison of STARFM and an unmixing-based\
    \ algorithm for Landsat\nand MODIS data fusion. Remote Sens. Environ. 2015, 156,\
    \ 34–44. [CrossRef]\n63.\nLi, L.; Wang, X.; Li, M. Study on the fusion of MODIS\
    \ and TM images using the spectral response function\nand STARFM algorithm. In\
    \ Proceedings of the 2011 International Conference on Image Analysis and Signal\n\
    Processing, Wuhan, China, 21–23 October 2011; pp. 171–176.\n64.\nPagay, V.; Kidman,\
    \ C.M. Evaluating Remotely-Sensed Grapevine (Vitis vinifera L.) Water Stress Responses\n\
    Across a Viticultural Region. Agronomy 2019, 9, 682. [CrossRef]\n65.\nRascher,\
    \ U.; Alonso, L.; Burkart, A.; Cilia, C.; Cogliati, S.; Colombo, R.; Damm, A.;\
    \ Drusch, M.; Guanter, L.;\nHanus, J.; et al. Sun-induced ﬂuorescence—A new probe\
    \ of photosynthesis: First maps from the imaging\nspectrometer HyPlant. Glob.\
    \ Chang. Biol. 2015, 21, 4673–4684. [CrossRef]\n66.\nBuckley, S.; Vallet, J.;\
    \ Braathen, A.; Wheeler, W. Oblique helicopter-based laser scanning for digital\
    \ terrain\nmodelling and visualisation of geological outcrops. Int. Arch. Photogramm.\
    \ Remote Sens. Spat. Inf. Sci. 2008,\n37, 1–6.\n67.\nPullanagari, R.; Kereszturi,\
    \ G.; Yule, I. Mapping of macro and micro nutrients of mixed pastures using\n\
    airborne AisaFENIX hyperspectral imagery. ISPRS J. Photogramm. Remote Sens. 2016,\
    \ 117, 1–10. [CrossRef]\n68.\nHaboudane, D.; Miller, J.R.; Tremblay, N.; Zarco-Tejada,\
    \ P.J.; Dextraze, L. Integrated narrow-band vegetation\nindices for prediction\
    \ of crop chlorophyll content for application to precision agriculture. Remote\
    \ Sens.\nEnviron. 2002, 81, 416–426. [CrossRef]\nAgronomy 2020, 10, 140\n24 of\
    \ 35\n69.\nMiao, Y.; Mulla, D.J.; Randall, G.W.; Vetsch, J.A.; Vintila, R. Predicting\
    \ chlorophyll meter readings with aerial\nhyperspectral remote sensing for in-season\
    \ site-speciﬁc nitrogen management of corn. Precis. Agric. 2007, 7,\n635–641.\n\
    70.\nHaboudane, D.; Miller, J.R.; Pattey, E.; Zarco-Tejada, P.J.; Strachan, I.B.\
    \ Hyperspectral vegetation indices\nand novel algorithms for predicting green\
    \ LAI of crop canopies: Modeling and validation in the context of\nprecision agriculture.\
    \ Remote Sens. Environ. 2004, 90, 337–352. [CrossRef]\n71.\nSepulcre-Cantó, G.;\
    \ Zarco-Tejada, P.J.; Jiménez-Muñoz, J.; Sobrino, J.; Soriano, M.; Fereres, E.;\
    \ Vega, V.;\nPastor, M. Monitoring yield and fruit quality parameters in open-canopy\
    \ tree crops under water stress.\nImplications for ASTER. Remote Sens. Environ.\
    \ 2007, 107, 455–470. [CrossRef]\n72.\nSepulcre-Cantó, G.; Zarco-Tejada, P.J.;\
    \ Jiménez-Muñoz, J.; Sobrino, J.; De Miguel, E.; Villalobos, F.J. Detection\n\
    of water stress in an olive orchard with thermal remote sensing imagery. Agric.\
    \ For. Meteorol. 2006, 136,\n31–44. [CrossRef]\n73.\nColomina, I.; Molina, P.\
    \ Unmanned aerial systems for photogrammetry and remote sensing: A review.\nISPRS\
    \ J. Photogramm. Remote Sens. 2014, 92, 79–97. [CrossRef]\n74.\nZecha, C.; Link,\
    \ J.; Claupein, W. Mobile sensor platforms: Categorisation and research applications\
    \ in\nprecision farming. J. Sens. Sens. Syst. 2013, 2, 51–72. [CrossRef]\n75.\n\
    Urbahs, A.; Jonaite, I. Features of the use of unmanned aerial vehicles for agriculture\
    \ applications. Aviation\n2013, 17, 170–175. [CrossRef]\n76.\nGautam, D.; Ha,\
    \ C. Control of a quadrotor using a smart self-tuning fuzzy PID controller. Int.\
    \ J. Adv. Robot.\nSyst. 2013, 10, 380. [CrossRef]\n77.\nShi, Y.; Thomasson, J.A.;\
    \ Murray, S.C.; Pugh, N.A.; Rooney, W.L.; Shaﬁan, S.; Rajan, N.; Rouze, G.; Morgan,\
    \ C.L.;\nNeely, H.L.; et al. Unmanned aerial vehicles for high-throughput phenotyping\
    \ and agronomic research.\nPLoS ONE 2016, 11, e0159781. [CrossRef]\n78.\nZhang,\
    \ C.; Kovacs, J.M. The application of small unmanned aerial systems for precision\
    \ agriculture: a review.\nPrecis. Agric. 2012, 13, 693–712. [CrossRef]\n79.\n\
    Mulla, D.J. Twenty ﬁve years of remote sensing in precision agriculture: Key advances\
    \ and remaining\nknowledge gaps. Biosyst. Eng. 2013, 114, 358–371. [CrossRef]\n\
    80.\nHuang, Y.; Thomson, S.J.; Hoﬀmann, W.C.; Lan, Y.; Fritz, B.K. Development\
    \ and prospect of unmanned aerial\nvehicle technologies for agricultural production\
    \ management. Int. J. Agric. Biol. Eng. 2013, 6, 1–10.\n81.\nZude-Sasse, M.; Fountas,\
    \ S.; Gemtos, T.A.; Abu-Khalaf, N. Applications of precision agriculture in horticultural\n\
    crops. Eur. J. Hortic. Sci. 2016, 81, 78–90. [CrossRef]\n82.\nBaluja, J.; Diago,\
    \ M.P.; Balda, P.; Zorer, R.; Meggio, F.; Morales, F.; Tardaguila, J. Assessment\
    \ of vineyard\nwater status variability by thermal and multispectral imagery using\
    \ an unmanned aerial vehicle (UAV).\nIrrig. Sci. 2012, 30, 511–522. [CrossRef]\n\
    83.\nMatese, A.; Baraldi, R.; Berton, A.; Cesaraccio, C.; Di Gennaro, S.F.; Duce,\
    \ P.; Facini, O.; Mameli, M.G.;\nPiga, A.; Zaldei, A. Estimation of water stress\
    \ in grapevines using proximal and remote sensing methods.\nRemote Sens. 2018,\
    \ 10, 114. [CrossRef]\n84.\nPoblete, T.; Ortega-Farías, S.; Moreno, M.; Bardeen,\
    \ M. Artiﬁcial neural network to predict vine water status\nspatial variability\
    \ using multispectral information obtained from an unmanned aerial vehicle (UAV).\
    \ Sensors\n2017, 17, 2488. [CrossRef]\n85.\nGonzalez-Dugo, V.; Zarco-Tejada, P.J.;\
    \ Fereres, E. Applicability and limitations of using the crop water stress\nindex\
    \ as an indicator of water deﬁcits in citrus orchards. Agric. For. Meteorol. 2014,\
    \ 198, 94–104. [CrossRef]\n86.\nStagakis, S.; González-Dugo, V.; Cid, P.; Guillén-Climent,\
    \ M.L.; Zarco-Tejada, P.J. Monitoring water stress\nand fruit quality in an orange\
    \ orchard under regulated deﬁcit irrigation using narrow-band structural and\n\
    physiological remote sensing indices. ISPRS J. Photogramm. Remote Sens. 2012,\
    \ 71, 47–61. [CrossRef]\n87.\nAgam, N.; Cohen, Y.; Berni, J.A.J.; Alchanatis,\
    \ V.; Kool, D.; Dag, A.; Yermiyahu, U.; Ben-Gal, A. An insight to\nthe performance\
    \ of crop water stress index for olive trees. Agric. Water Manag. 2013, 118, 79–86.\
    \ [CrossRef]\n88.\nPoblete-Echeverría, C.; Sepulveda-Reyes, D.; Ortega-Farias,\
    \ S.; Zuñiga, M.; Fuentes, S. Plant water stress\ndetection based on aerial and\
    \ terrestrial infrared thermography: A study case from vineyard and olive\norchard.\
    \ In Proceedings of the XXIX International Horticultural congress on Horticulture:\
    \ Sustaining Lives,\nLivelihoods and Landscapes (IHC2014): International Symposia\
    \ on Water, Eco-Eﬃciency and Transformation\nof Organic Waste in Horticultural\
    \ Production, Brisbane, Australia, 25 October 2016; pp. 141–146.\nAgronomy 2020,\
    \ 10, 140\n25 of 35\n89.\nTesti, L.; Goldhamer, D.; Iniesta, F.; Salinas, M. Crop\
    \ water stress index is a sensitive water stress indicator in\npistachio trees.\
    \ Irrig. Sci. 2008, 26, 395–405. [CrossRef]\n90.\nGonzalez-Dugo, V.; Goldhamer,\
    \ D.; Zarco-Tejada, P.J.; Fereres, E. Improving the precision of irrigation in\
    \ a\npistachio farm using an unmanned airborne thermal system. Irrig. Sci. 2015,\
    \ 33, 43–52. [CrossRef]\n91.\nGarcía-Tejero, I.F.; Rubio, A.E.; Viñuela, I.; Hernández,\
    \ A.; Gutiérrez-Gordillo, S.; Rodríguez-Pleguezuelo, C.R.;\nDurán-Zuazo, V.H.\
    \ Thermal imaging at plant level to assess the crop-water status in almond trees\
    \ (cv. Guara)\nunder deﬁcit irrigation strategies. Agric. Water Manag. 2018, 208,\
    \ 176–186. [CrossRef]\n92.\nGonzalez-Dugo, V.; Zarco-Tejada, P.; Berni, J.A.;\
    \ Suárez, L.; Goldhamer, D.; Fereres, E. Almond tree canopy\ntemperature reveals\
    \ intra-crown variability that is water stress-dependent. Agric. For. Meteorol.\
    \ 2012, 154,\n156–165. [CrossRef]\n93.\nZhao, T.; Stark, B.; Chen, Y.; Ray, A.L.;\
    \ Doll, D. Challenges in water stress quantiﬁcation using small\nunmanned aerial\
    \ system (sUAS): Lessons from a growing season of almond. J. Intell. Robot. Syst.\
    \ 2017, 88,\n721–735. [CrossRef]\n94.\nZhao, T.; Doll, D.; Wang, D.; Chen, Y.\
    \ A new framework for UAV-based remote sensing data processing and\nits application\
    \ in almond water stress quantiﬁcation. In Proceedings of the 2017 International\
    \ Conference on\nUnmanned Aircraft Systems (ICUAS 2017), Miami, FL, USA, 13–16\
    \ June 2017; pp. 1794–1799.\n95.\nHerwitz, S.; Johnson, L.; Dunagan, S.; Higgins,\
    \ R.; Sullivan, D.; Zheng, J.; Lobitz, B.; Leung, J.; Gallmeyer, B.;\nAoyagi,\
    \ M.; et al. Imaging from an unmanned aerial vehicle: agricultural surveillance\
    \ and decision support.\nComput. Electron. Agric. 2004, 44, 49–61. [CrossRef]\n\
    96.\nFurfaro, R.; Ganapol, B.D.; Johnson, L.; Herwitz, S. Model-based neural network\
    \ algorithm for coﬀee ripeness\nprediction using Helios UAV aerial images. In\
    \ Remote Sensing for Agriculture, Ecosystems, and Hydrology VII;\nInternational\
    \ Society for Optics and Photonics: Bruges, Belgium, 2005; Volume 5976, p. 59760X.\n\
    97.\nPark, S.; Nolan, A.; Ryu, D.; Fuentes, S.; Hernandez, E.; Chung, H.; O’connell,\
    \ M. Estimation of crop\nwater stress in a nectarine orchard using high-resolution\
    \ imagery from unmanned aerial vehicle (UAV).\nIn Proceedings of the 21st International\
    \ Congress on Modelling and Simulation, Gold Coast, QLD, Australia,\n29 November–4\
    \ December 2015; pp. 1413–1419.\n98.\nBulanon, D.M.; Lonai, J.; Skovgard, H.;\
    \ Fallahi, E. Evaluation of diﬀerent irrigation methods for an apple\norchard\
    \ using an aerial imaging system. ISPRS Int. J. Geo-Inf. 2016, 5, 79.\n99.\nGonzalez-Dugo,\
    \ V.; Zarco-Tejada, P.; Nicolás, E.; Nortes, P.A.; Alarcón, J.; Intrigliolo, D.S.;\
    \ Fereres, E. Using\nhigh resolution UAV thermal imagery to assess the variability\
    \ in the water status of ﬁve fruit tree species\nwithin a commercial orchard.\
    \ Precis. Agric. 2013, 14, 660–678. [CrossRef]\n100. Santesteban, L.G.; Di Gennaro,\
    \ S.F.; Herrero-Langreo, A.; Miranda, C.; Royo, J.B.; Matese, A. High-resolution\n\
    UAV-based thermal imaging to estimate the instantaneous and seasonal variability\
    \ of plant water status\nwithin a vineyard. Agric. Water Manag. 2017, 183, 49–59.\
    \ [CrossRef]\n101. Aboutalebi, M.; Torres-Rua, A.F.; Kustas, W.P.; Nieto, H.;\
    \ Coopmans, C.; McKee, M. Assessment of diﬀerent\nmethods for shadow detection\
    \ in high-resolution optical imagery and evaluation of shadow impact on\ncalculation\
    \ of NDVI, and evapotranspiration. Irrig. Sci. 2018, 1, 1–23. [CrossRef]\n102.\
    \ Berni, J.A.; Zarco-Tejada, P.J.; Suárez, L.; Fereres, E. Thermal and narrowband\
    \ multispectral remote sensing\nfor vegetation monitoring from an unmanned aerial\
    \ vehicle. IEEE Trans. Geosci. Remote Sens. 2009, 47,\n722–738. [CrossRef]\n103.\
    \ Candiago, S.; Remondino, F.; De Giglio, M.; Dubbini, M.; Gattelli, M. Evaluating\
    \ multispectral images and\nvegetation indices for precision farming applications\
    \ from UAV images. Remote Sens. 2015, 7, 4026–4047.\n[CrossRef]\n104. Thomasson,\
    \ J.A.; Shi, Y.; Olsenholler, J.; Valasek, J.; Murray, S.C.; Bishop, M.P. Comprehensive\
    \ UAV\nagricultural remote-sensing research at Texas AM University. In Autonomous\
    \ Air and Ground Sensing Systems\nfor Agricultural Optimization and Phenotyping;\
    \ International Society for Optics and Photonics: Baltimore, MD,\nUSA, 2016; Volume\
    \ 9866, p. 986602.\n105. Turner, D.; Lucieer, A.; Wallace, L. Direct georeferencing\
    \ of ultrahigh-resolution UAV imagery. IEEE Trans.\nGeosci. Remote Sens. 2014,\
    \ 52, 2738–2745. [CrossRef]\n106. Primicerio, J.; Di Gennaro, S.F.; Fiorillo,\
    \ E.; Genesio, L.; Lugato, E.; Matese, A.; Vaccari, F.P. A ﬂexible\nunmanned aerial\
    \ vehicle for precision agriculture. Precis. Agric. 2012, 13, 517–523. [CrossRef]\n\
    107. Pajares, G. Overview and current status of remote sensing applications based\
    \ on unmanned aerial vehicles\n(UAVs). Photogramm. Eng. Remote Sens. 2015, 81,\
    \ 281–330. [CrossRef]\nAgronomy 2020, 10, 140\n26 of 35\n108. Di Gennaro, S.F.;\
    \ Matese, A.; Gioli, B.; Toscano, P.; Zaldei, A.; Palliotti, A.; Genesio, L. Multisensor\
    \ approach\nto assess vineyard thermal dynamics combining high-resolution unmanned\
    \ aerial vehicle (UAV) remote\nsensing and wireless sensor network (WSN) proximal\
    \ sensing. Sci. Hortic. 2017, 221, 83–87. [CrossRef]\n109. Cendrero-Mateo, M.P.;\
    \ Wieneke, S.; Damm, A.; Alonso, L.; Pinto, F.; Moreno, J.; Guanter, L.; Celesti,\
    \ M.;\nRossini, M.; Sabater, N.; et al. Sun-induced chlorophyll ﬂuorescence III:\
    \ Benchmarking retrieval methods\nand sensor characteristics for proximal sensing.\
    \ Remote Sens. 2019, 11, 962. [CrossRef]\n110. Zarco-Tejada, P.J.; González-Dugo,\
    \ V.; Berni, J.A.J. Fluorescence, temperature and narrow-band indices\nacquired\
    \ from a UAV platform for water stress detection using a micro-hyperspectral imager\
    \ and a thermal\ncamera. Remote Sens. Environ. 2012, 117, 322–337. [CrossRef]\n\
    111. Harwin, S.; Lucieer, A. Assessing the accuracy of georeferenced point clouds\
    \ produced via multi-view\nstereopsis from Unmanned Aerial Vehicle (UAV) imagery.\
    \ Remote Sens. 2012, 4, 1573–1599. [CrossRef]\n112. Wallace, L.; Lucieer, A.;\
    \ Malenovskỳ, Z.; Turner, D.; Vopˇenka, P. Assessment of forest structure using\
    \ two\nUAV techniques: A comparison of airborne laser scanning and structure from\
    \ motion (SfM) point clouds.\nForests 2016, 7, 62. [CrossRef]\n113. Weiss, M.;\
    \ Baret, F. Using 3D point clouds derived from UAV RGB imagery to describe vineyard\
    \ 3D\nmacro-structure. Remote Sens. 2017, 9, 111. [CrossRef]\n114. Mathews, A.;\
    \ Jensen, J. Visualizing and quantifying vineyard canopy LAI using an unmanned\
    \ aerial vehicle\n(UAV) collected high density structure from motion point cloud.\
    \ Remote Sens. 2013, 5, 2164–2183. [CrossRef]\n115. Stone, C.; Webster, M.; Osborn,\
    \ J.; Iqbal, I. Alternatives to LiDAR-derived canopy height models for softwood\n\
    plantations: a review and example using photogrammetry. Aust. For. 2016, 79, 271–282.\
    \ [CrossRef]\n116. Wu, D.; Phinn, S.; Johansen, K.; Robson, A.; Muir, J.; Searle,\
    \ C. Estimating changes in leaf area, leaf area\ndensity, and vertical leaf area\
    \ proﬁle for mango, avocado, and macadamia tree crowns using terrestrial laser\n\
    scanning. Remote Sens. 2018, 10, 1750. [CrossRef]\n117. Rosell, J.R.; Llorens,\
    \ J.; Sanz, R.; Arno, J.; Ribes-Dasi, M.; Masip, J.; Escolà, A.; Camp, F.; Solanelles,\
    \ F.;\nGràcia, F.; et al. Obtaining the three-dimensional structure of tree orchards\
    \ from remote 2D terrestrial LIDAR\nscanning. Agric. For. Meteorol. 2009, 149,\
    \ 1505–1515. [CrossRef]\n118. Matese, A.; Di Gennaro, S.F. Technology in precision\
    \ viticulture: A state of the art review. Int. J. Wine Res.\n2015, 7, 69–81. [CrossRef]\n\
    119. Johansen, K.; Raharjo, T.; McCabe, M.F. Using multi-spectral UAV imagery\
    \ to extract tree crop structural\nproperties and assess pruning eﬀects. Remote\
    \ Sens. 2018, 10, 854. [CrossRef]\n120. Tu, Y.-H.; Johansen, K.; Phinn, S.; Robson,\
    \ A. Measuring canopy structure and condition using multi-spectral\nUAS imagery\
    \ in a horticultural environment. Remote Sens. 2019, 11, 269. [CrossRef]\n121.\
    \ Mu, Y.; Fujii, Y.; Takata, D.; Zheng, B.; Noshita, K.; Honda, K.; Ninomiya,\
    \ S.; Guo, W. Characterization of\npeach tree crown by using high-resolution images\
    \ from an unmanned aerial vehicle. Hortic. Res. 2018, 5, 74.\n[CrossRef]\n122.\
    \ De Castro, A.I.; Jiménez-Brenes, F.M.; Torres-Sánchez, J.; Peña, J.M.; Borra-Serrano,\
    \ I.; López-Granados, F. 3-D\ncharacterization of vineyards using a novel UAV\
    \ imagery-based OBIA procedure for precision viticulture\napplications. Remote\
    \ Sens. 2018, 10, 584. [CrossRef]\n123. Del Pozo, S.; Rodríguez-Gonzálvez, P.;\
    \ Hernández-López, D.; Felipe-García, B. Vicarious radiometric\ncalibration of\
    \ a multispectral camera on board an unmanned aerial system. Remote Sens. 2014,\
    \ 6, 1918–1937.\n[CrossRef]\n124. Tu, Y.-H.; Phinn, S.; Johansen, K.; Robson,\
    \ A. Assessing radiometric correction approaches for multi-spectral\nUAS imagery\
    \ for horticultural applications. Remote Sens. 2018, 10, 1684. [CrossRef]\n125.\
    \ Stow, D.; Nichol, C.J.; Wade, T.; Assmann, J.J.; Simpson, G.; Helfter, C. Illumination\
    \ geometry and ﬂying\nheight inﬂuence surface reﬂectance and NDVI derived from\
    \ multispectral UAS imagery. Drones 2019, 3, 55.\n[CrossRef]\n126. Turner, D.;\
    \ Lucieer, A.; Watson, C. Development of an unmanned aerial vehicle (UAV) for\
    \ hyper resolution\nvineyard mapping based on visible, multispectral, and thermal\
    \ imagery.\nIn Proceedings of the 34th\nInternational Symposium on Remote Sensing\
    \ of Environment, Sydney, Australia, 10–15 April 2011; p. 4.\n127. Jorge, J.;\
    \ Vallbé, M.; Soler, J.A. Detection of irrigation inhomogeneities in an olive\
    \ grove using the NDRE\nvegetation index obtained from UAV images. Eur. J. Remote\
    \ Sens. 2019, 52, 169–177. [CrossRef]\n128. Filella, I.; Penuelas, J. The red\
    \ edge position and shape as indicators of plant chlorophyll content, biomass\n\
    and hydric status. Int. J. Remote Sens. 1994, 15, 1459–1470. [CrossRef]\nAgronomy\
    \ 2020, 10, 140\n27 of 35\n129. Zúñiga, C.E.; Khot, L.R.; Jacoby, P.; Sankaran,\
    \ S. Remote sensing based water-use eﬃciency evaluation\nin sub-surface irrigated\
    \ wine grape vines. In Autonomous Air and Ground Sensing Systems for Agricultural\n\
    Optimization and Phenotyping; International Society for Optics and Photonics:\
    \ Baltimore, MD, USA, 2016;\nVolume 9866, p. 98660O.\n130. Aasen, H.; Honkavaara,\
    \ E.; Lucieer, A.; Zarco-Tejada, P. Quantitative remote sensing at ultra-high\
    \ resolution\nwith uav spectroscopy: A review of sensor technology, measurement\
    \ procedures, and data correction\nworkﬂows. Remote Sens. 2018, 10, 1091. [CrossRef]\n\
    131. Adão, T.; Hruška, J.; Pádua, L.; Bessa, J.; Peres, E.; Morais, R.; Sousa,\
    \ J. Hyperspectral imaging: A review on\nUAV-based sensors, data processing and\
    \ applications for agriculture and forestry. Remote Sens. 2017, 9, 1110.\n[CrossRef]\n\
    132. Gautam, D.; Watson, C.; Lucieer, A.; Malenovský, Z. Error budget for geolocation\
    \ of spectroradiometer point\nobservations from an unmanned aircraft system. Sens.\
    \ Switz. 2018, 18, 3465. [CrossRef] [PubMed]\n133. Uto, K.; Seki, H.; Saito, G.;\
    \ Kosugi, Y.; Komatsu, T. Development of a low-cost hyperspectral whiskbroom\n\
    imager using an optical ﬁber bundle, a swing mirror, and compact spectrometers.\
    \ IEEE J. Sel. Top. Appl.\nEarth Obs. Remote Sens. 2016, 9, 3909–3925. [CrossRef]\n\
    134. Suomalainen, J.; Anders, N.; Iqbal, S.; Roerink, G.; Franke, J.; Wenting,\
    \ P.; Hünniger, D.; Bartholomeus, H.;\nBecker, R.; Kooistra, L. A lightweight\
    \ hyperspectral mapping system and photogrammetric processing chain\nfor unmanned\
    \ aerial vehicles. Remote Sens. 2014, 6, 11013–11030. [CrossRef]\n135. Iseli,\
    \ C.; Lucieer, A. Tree species classiﬁcation based on 3d spectral point clouds\
    \ and orthomosaics acquired\nby snapshot hyperspectral UAS sensor. ISPRS-Int.\
    \ Arch. Photogramm. Remote Sens. Spat. Inf. Sci. 2019, 4213,\n379–384. [CrossRef]\n\
    136. Hagen, N.A.; Kudenov, M.W. Review of snapshot spectral imaging technologies.\
    \ Opt. Eng. 2013, 52, 090901.\n[CrossRef]\n137. Bendig, J.; Gautam, D.; Malenovsky,\
    \ Z.; Lucieer, A. Inﬂuence of Cosine Corrector and UAS Platform Dynamics\non Airborne\
    \ Spectral Irradiance Measurements. In Proceedings of the 2018 IEEE International\
    \ Geoscience\nand Remote Sensing Symposium (IGARSS 2018), Valencia, Spain, 22–27\
    \ July 2018; pp. 8822–8825.\n138. Gautam, D. Direct Georeferencing and Footprint\
    \ Characterisation of a Non-Imaging Spectroradiometer\nMounted on an Unmanned\
    \ Aircraft System. Ph.D. Thesis, University of Tasmania, Hobart, Tasmania,\nAustralia,\
    \ 2019.\n139. Rodríguez-Pérez, J.R.; Riaño, D.; Carlisle, E.; Ustin, S.; Smart,\
    \ D.R. Evaluation of hyperspectral reﬂectance\nindexes to detect grapevine water\
    \ status in vineyards. Am. J. Enol. Vitic. 2007, 58, 302–317.\n140. Hurley, S.P.;\
    \ Horney, M.; Drake, A. Using hyperspectral imagery to detect water stress in\
    \ vineyards.\nIn Autonomous Air and Ground Sensing Systems for Agricultural Optimization\
    \ and Phenotyping IV; International\nSociety for Optics and Photonics: Baltimore,\
    \ MD, USA, 2019; Volume 11008, p. 1100807.\n141. Loggenberg, K.; Strever, A.;\
    \ Greyling, B.; Poona, N. Modelling water stress in a shiraz vineyard using\n\
    hyperspectral imaging and machine learning. Remote Sens. 2018, 10, 202. [CrossRef]\n\
    142. Gómez-Candón, D.; Virlet, N.; Labbé, S.; Jolivot, A.; Regnard, J.-L. Field\
    \ phenotyping of water stress at tree\nscale by UAV-sensed imagery: new insights\
    \ for thermal acquisition and calibration. Precis. Agric. 2016, 17,\n786–800.\
    \ [CrossRef]\n143. Kelly, J.; Kljun, N.; Olsson, P.-O.; Mihai, L.; Liljeblad,\
    \ B.; Weslien, P.; Klemedtsson, L.; Eklundh, L. Challenges\nand best practices\
    \ for deriving temperature data from an uncalibrated UAV thermal infrared camera.\n\
    Remote Sens. 2019, 11, 567. [CrossRef]\n144. Smigaj, M.; Gaulton, R.; Suarez,\
    \ J.; Barr, S. Use of miniature thermal cameras for detection of physiological\n\
    stress in conifers. Remote Sens. 2017, 9, 957. [CrossRef]\n145. Clarke, I. Thermal\
    \ Infrared Remote Sensing from Unmanned Aircraft Systems (UAS) for Precision Viticulture.\n\
    Master’s Thesis, University of Tasmania, Hobart, Tasmania, Australia, 2014.\n\
    146. Daakir, M.; Zhou, Y.; Pierrot Deseilligny, M.; Thom, C.; Martin, O.; Rupnik,\
    \ E. Improvement of\nphotogrammetric accuracy by modeling and correcting the thermal\
    \ eﬀect on camera calibration. ISPRS J.\nPhotogramm. Remote Sens. 2019, 148, 142–155.\
    \ [CrossRef]\n147. Nugent, P.W.; Shaw, J.A. Calibration of uncooled LWIR microbolometer\
    \ imagers to enable long-term ﬁeld\ndeployment. In Infrared Imaging Systems: Design,\
    \ Analysis, Modeling, and Testing XXV; International Society\nfor Optics and Photonics:\
    \ Baltimore, MD, USA, 2014; Volume 9071, p. 90710V.\nAgronomy 2020, 10, 140\n\
    28 of 35\n148. Budzier, H.; Gerlach, G. Calibration of uncooled thermal infrared\
    \ cameras. J. Sens. Sens. Syst. 2015, 4,\n187–197. [CrossRef]\n149. Lin, D.; Maas,\
    \ H.-G.; Westfeld, P.; Budzier, H.; Gerlach, G. An advanced radiometric calibration\
    \ approach for\nuncooled thermal cameras. Photogramm. Rec. 2018, 33, 30–48. [CrossRef]\n\
    150. Ribeiro-Gomes, K.; Hernández-López, D.; Ortega, J.F.; Ballesteros, R.; Poblete,\
    \ T.; Moreno, M.A. Uncooled\nthermal camera calibration and optimization of the\
    \ photogrammetry process for UAV applications in\nagriculture. Sensors 2017, 17,\
    \ 173. [CrossRef]\n151. Lin, D.; Westfeld, P.; Maas, H.G. Shutter-less temperature-dependent\
    \ correction for uncooled thermal camera\nunder fast changing FPA temperature.\
    \ Int. Arch. Photogramm. Remote Sens. Spat. Inf. Sci.—ISPRS Arch. 2017,\n42, 619–625.\
    \ [CrossRef]\n152. Mesas-Carrascosa, F.J.; Pérez-Porras, F.; de Larriva, J.E.M.;\
    \ Frau, C.M.; Agüera-Vega, F.; Carvajal-Ramírez, F.;\nMartínez-Carricondo, P.;\
    \ García-Ferrer, A. Drift correction of lightweight microbolometer thermal sensors\n\
    on-board unmanned aerial vehicles. Remote Sens. 2018, 10, 615. [CrossRef]\n153.\
    \ Torres-Rua, A. Vicarious calibration of sUAS microbolometer temperature imagery\
    \ for estimation of\nradiometric land surface temperature. Sensors 2017, 17, 1499.\
    \ [CrossRef] [PubMed]\n154. Bendig, J.; Bolten, A.; Bareth, G. Introducing a low-cost\
    \ mini-UAV for thermal-and multispectral-imaging.\nInt. Arch. Photogramm Remote\
    \ Sens. Spat. Inf. Sci. 2012, 39, 345–349. [CrossRef]\n155. Raymer, D. Aircraft\
    \ Design: A Conceptual Approach; American Institute of Aeronautics and Astronautics,\
    \ Inc.:\nReston, VA, USA, 2018.\n156. Tardieu, F.; Simonneau, T. Variability among\
    \ species of stomatal control under ﬂuctuating soil water status\nand evaporative\
    \ demand: modelling isohydric and anisohydric behaviours. J. Exp. Bot. 1998, 49,\
    \ 419–432.\n[CrossRef]\n157. White, W.A.; Alsina, M.M.; Nieto, H.; McKee, L.G.;\
    \ Gao, F.; Kustas, W.P. Determining a robust indirect\nmeasurement of leaf area\
    \ index in California vineyards for validating remote sensing-based retrievals.\n\
    Irrig. Sci. 2019, 37, 269–280. [CrossRef]\n158. Zarco-Tejada, P.J.; Berni, J.A.;\
    \ Suárez, L.; Sepulcre-Cantó, G.; Morales, F.; Miller, J.R. Imaging chlorophyll\n\
    ﬂuorescence with an airborne narrow-band multispectral camera for vegetation stress\
    \ detection.\nRemote Sens. Environ. 2009, 113, 1262–1275. [CrossRef]\n159. Gago,\
    \ J.; Douthe, C.; Florez-Sarasa, I.; Escalona, J.M.; Galmes, J.; Fernie, A.R.;\
    \ Flexas, J.; Medrano, H.\nOpportunities for improving leaf water use eﬃciency\
    \ under climate change conditions. Plant Sci. 2014, 226,\n108–119. [CrossRef]\n\
    160. Suárez, L.; Zarco-Tejada, P.J.; Sepulcre-Cantó, G.; Pérez-Priego, O.; Miller,\
    \ J.; Jiménez-Muñoz, J.; Sobrino, J.\nAssessing canopy PRI for water stress detection\
    \ with diurnal airborne imagery. Remote Sens. Environ. 2008,\n112, 560–575. [CrossRef]\n\
    161. Eugenio, F.; Marqués, F. Automatic satellite image georeferencing using a\
    \ contour-matching approach.\nIEEE Trans. Geosci. Remote Sens. 2003, 41, 2869–2880.\
    \ [CrossRef]\n162. Hugenholtz, C.; Brown, O.; Walker, J.; Barchyn, T.; Nesbit,\
    \ P.; Kucharczyk, M.; Myshak, S. Spatial accuracy of\nUAV-derived orthoimagery\
    \ and topography: Comparing photogrammetric models processed with direct\ngeo-referencing\
    \ and ground control points. Geomatica 2016, 70, 21–30. [CrossRef]\n163. Matese,\
    \ A.; Di Gennaro, S.F.; Berton, A. Assessment of a canopy height model (CHM) in\
    \ a vineyard using\nUAV-based multispectral imaging. Int. J. Remote Sens. 2017,\
    \ 38, 2150–2160. [CrossRef]\n164. Yahyanejad, S.; Misiorny, J.; Rinner, B. Lens\
    \ distortion correction for thermal cameras to improve aerial\nimaging with small-scale\
    \ UAVs. In Proceedings of the 2011 IEEE International Symposium on Robotic and\n\
    Sensors Environments (ROSE 2011), Montreal, QC, Canada, 17–18 September 2011;\
    \ pp. 231–236.\n165. Maes, W.; Huete, A.; Steppe, K. Optimizing the processing\
    \ of UAV-based thermal imagery. Remote Sens. 2017,\n9, 476. [CrossRef]\n166. Smith,\
    \ M.; Carrivick, J.; Quincey, D. Structure from motion photogrammetry in physical\
    \ geography.\nProg. Phys. Geogr. 2016, 40, 247–275. [CrossRef]\n167. Westoby,\
    \ M.J.; Brasington, J.; Glasser, N.F.; Hambrey, M.J.; Reynolds, J.M. ‘Structure-from-Motion’\n\
    photogrammetry: A low-cost, eﬀective tool for geoscience applications. Geomorphology\
    \ 2012, 179, 300–314.\n[CrossRef]\n168. Gautam, D.; Lucieer, A.; Malenovský, Z.;\
    \ Watson, C. Comparison of MEMS-based and FOG-based IMUs to\ndetermine sensor\
    \ pose on an unmanned aircraft system. J. Surv. Eng. 2017, 143. [CrossRef]\nAgronomy\
    \ 2020, 10, 140\n29 of 35\n169. Turner, D.; Lucieer, A.; McCabe, M.; Parkes, S.;\
    \ Clarke, I. Pushbroom hyperspectral imaging from an\nunmanned aircraft system\
    \ (UAS)–geometric processingworkﬂow and accuracy assessment. ISPRS-Int. Arch.\n\
    Photogramm. Remote Sens. Spat. Inf. Sci. 2017, XLII-2/W6, 379–384. [CrossRef]\n\
    170. Fang, J.; Wang, X.; Zhu, T.; Liu, X.; Zhang, X.; Zhao, D. A Novel Mosaic\
    \ Method for UAV-Based Hyperspectral\nImages. In Proceedings of the 2019 IEEE\
    \ International Geoscience and Remote Sensing Symposium (IGARSS\n2019), Yokohama,\
    \ Japan, 28 July–2 August 2019; pp. 9220–9223.\n171. Tagle, X. Study of Radiometric\
    \ Variations in Unmanned Aerial Vehicle Remote Sensing Imagery for Vegetation\n\
    Mapping. Master’s Thesis, Lund University, Lund, Sweden, 2017.\n172. Kedzierski,\
    \ M.; Wierzbicki, D.; Sekrecka, A.; Fryskowska, A.; Walczykowski, P.; Siewert,\
    \ J. Inﬂuence of lower\natmosphere on the radiometric quality of unmanned aerial\
    \ vehicle imagery. Remote Sens. 2019, 11, 1214.\n[CrossRef]\n173. Kelcey, J.;\
    \ Lucieer, A. Sensor correction of a 6-band multispectral imaging sensor for UAV\
    \ remote sensing.\nRemote Sens. 2012, 4, 1462–1493. [CrossRef]\n174. Maes, W.H.;\
    \ Steppe, K. Perspectives for remote sensing with unmanned aerial vehicles in\
    \ precision agriculture.\nTrends Plant Sci. 2019, 24, 152–164. [CrossRef]\n175.\
    \ McCabe, M.F.; Houborg, R.; Lucieer, A. High-resolution sensing for precision\
    \ agriculture:\nfrom\nEarth-observing satellites to unmanned aerial vehicles.\n\
    In Remote Sensing for Agriculture, Ecosystems,\nand Hydrology XVIII; International\
    \ Society for Optics and Photonics: Edinbrugh, UK, 2016; Volume 9998,\np. 999811.\n\
    176. Dinguirard, M.; Slater, P.N. Calibration of space-multispectral imaging sensors:\
    \ A review. Remote Sens. Environ.\n1999, 68, 194–205. [CrossRef]\n177. Geladi,\
    \ P.; Burger, J.; Lestander, T. Hyperspectral imaging: calibration problems and\
    \ solutions. Chemom. Intell.\nLab. Syst. 2004, 72, 209–217. [CrossRef]\n178. Iqbal,\
    \ F.; Lucieer, A.; Barry, K. Simpliﬁed radiometric calibration for UAS-mounted\
    \ multispectral sensor.\nEur. J. Remote Sens. 2018, 51, 301–313. [CrossRef]\n\
    179. Mamaghani, B.; Salvaggio, C. Multispectral Sensor Calibration and Characterization\
    \ for sUAS Remote\nSensing. Sensors 2019, 19, 4453. [CrossRef] [PubMed]\n180.\
    \ Mamaghani, B.; Salvaggio, C. Comparative study of panel and panelless-based\
    \ reﬂectance conversion\ntechniques for agricultural remote sensing. arXiv 2019,\
    \ arXiv:191003734.\n181. Jensen, A.M.; McKee, M.; Chen, Y. Calibrating thermal\
    \ imagery from an unmanned aerial system-AggieAir.\nIn Proceedings of the 2013\
    \ IEEE International Geoscience and Remote Sensing Symposium (IGARSS 2013),\n\
    Melbourne, Australia, 21–26 July 2013; pp. 542–545.\n182. Zarco-Tejada, P.J.;\
    \ Victoria, G.-D.; Williams, L.; Suárez, L.; Berni, J.A.; Goldhamer, D.; Fereres,\
    \ E. A PRI-based\nwater stress index combining structural and chlorophyll eﬀects:\
    \ Assessment using diurnal narrow-band\nairborne imagery and the CWSI thermal\
    \ index. Remote Sens. Environ. 2013, 138, 38–50. [CrossRef]\n183. Blaschke, T.\
    \ Object based image analysis for remote sensing. ISPRS J. Photogramm. Remote\
    \ Sens. 2010, 65,\n2–16. [CrossRef]\n184. De Castro, A.; Torres-Sánchez, J.; Peña,\
    \ J.; Jiménez-Brenes, F.; Csillik, O.; López-Granados, F. An automatic\nrandom\
    \ forest-OBIA algorithm for early weed mapping between and within crop rows using\
    \ UAV imagery.\nRemote Sens. 2018, 10, 285. [CrossRef]\n185. Peña-Barragán, J.M.;\
    \ Ngugi, M.K.; Plant, R.E.; Six, J. Object-based crop identiﬁcation using multiple\
    \ vegetation\nindices, textural features and crop phenology. Remote Sens. Environ.\
    \ 2011, 115, 1301–1316. [CrossRef]\n186. Johansen, K.; Raharjo, T. Multi-temporal\
    \ assessment of lychee tree crop structure using multi-spectral RPAS\nimagery.\
    \ ISPRS Int. Arch. Photogramm. Remote Sens. Spat. Inf. Sci. 2017, XLII-2/W6, 165–170.\
    \ [CrossRef]\n187. Ma, L.; Li, M.; Ma, X.; Cheng, L.; Du, P.; Liu, Y. A review\
    \ of supervised object-based land-cover image\nclassiﬁcation. ISPRS J. Photogramm.\
    \ Remote Sens. 2017, 130, 277–293. [CrossRef]\n188. Pádua, L.; Vanko, J.; Hruška,\
    \ J.; Adão, T.; Sousa, J.J.; Peres, E.; Morais, R. UAS, sensors, and data processing\n\
    in agroforestry: a review towards practical applications. Int. J. Remote Sens.\
    \ 2017, 38, 2349–2391. [CrossRef]\n189. Torres-Sánchez, J.; López-Granados, F.;\
    \ Peña, J.M. An automatic object-based method for optimal thresholding\nin UAV\
    \ images: Application for vegetation detection in herbaceous crops. Comput. Electron.\
    \ Agric. 2015, 114,\n43–52. [CrossRef]\n190. Cohen, Y.; Alchanatis, V.; Prigojin,\
    \ A.; Levi, A.; Soroker, V. Use of aerial thermal imaging to estimate water\n\
    status of palm trees. Precis. Agric. 2012, 13, 123–140. [CrossRef]\nAgronomy 2020,\
    \ 10, 140\n30 of 35\n191. Comba, L.; Gay, P.; Primicerio, J.; Aimonino, D.R. Vineyard\
    \ detection from unmanned aerial systems images.\nComput. Electron. Agric. 2015,\
    \ 114, 78–87. [CrossRef]\n192. Nolan, A.; Park, S.; Fuentes, S.; Ryu, D.; Chung,\
    \ H. Automated detection and segmentation of vine rows using\nhigh resolution\
    \ UAS imagery in a commercial vineyard. In Proceedings of the 21st International\
    \ Congress\non Modelling and Simulation, Gold Coast, QLD, Australia, 29 November–4\
    \ December 2015; Volume 29,\npp. 1406–1412.\n193. Bobillet, W.; Da Costa, J.-P.;\
    \ Germain, C.; Lavialle, O.; Grenier, G. Row detection in high resolution remote\n\
    sensing images of vine ﬁelds. In Proceedings of the 4th European Conference on\
    \ Precision Agriculture,\nBerlin, Germany, 15–19 June 2003; pp. 81–87.\n194. Poblete,\
    \ T.; Ortega-Farías, S.; Ryu, D. Automatic coregistration algorithm to remove\
    \ canopy shaded pixels in\nUAV-borne thermal images to improve the estimation\
    \ of crop water stress index of a drip-irrigated cabernet\nsauvignon vineyard.\
    \ Sensors 2018, 18, 397. [CrossRef]\n195. Ihuoma, S.O.; Madramootoo, C.A. Recent\
    \ advances in crop water stress detection. Comput. Electron. Agric.\n2017, 141,\
    \ 267–275. [CrossRef]\n196. Jones, H.G. Use of infrared thermometry for estimation\
    \ of stomatal conductance as a possible aid to irrigation\nscheduling. Agric.\
    \ For. Meteorol. 1999, 95, 139–149. [CrossRef]\n197. Bellvert, J.; Marsal, J.;\
    \ Girona, J.; Zarco-Tejada, P.J. Seasonal evolution of crop water stress index\
    \ in grapevine\nvarieties determined with high-resolution remote sensing thermal\
    \ imagery. Irrig. Sci. 2015, 33, 81–93.\n[CrossRef]\n198. García-Tejero, I.F.;\
    \ Gutiérrez-Gordillo, S.; Ortega-Arévalo, C.; Iglesias-Contreras, M.; Moreno,\
    \ J.M.;\nSouza-Ferreira, L.; Durán-Zuazo, V.H. Thermal imaging to monitor the\
    \ crop-water status in almonds\nby using the non-water stress baselines. Sci.\
    \ Hortic. 2018, 238, 91–97. [CrossRef]\n199. Alchanatis, V.; Cohen, Y.; Cohen,\
    \ S.; Moller, M.; Sprinstin, M.; Meron, M.; Tsipris, J.; Saranga, Y.; Sela, E.\n\
    Evaluation of diﬀerent approaches for estimating and mapping crop water status\
    \ in cotton with thermal\nimaging. Precis. Agric. 2010, 11, 27–41. [CrossRef]\n\
    200. Goetz, S. Multi-sensor analysis of NDVI, surface temperature and biophysical\
    \ variables at a mixed grassland\nsite. Int. J. Remote Sens. 1997, 18, 71–94.\
    \ [CrossRef]\n201. Sun, L.; Gao, F.; Anderson, M.; Kustas, W.; Alsina, M.; Sanchez,\
    \ L.; Sams, B.; McKee, L.; Dulaney, W.;\nWhite, W.; et al. Daily mapping of 30\
    \ m LAI and NDVI for grape yield prediction in California Vineyards.\nRemote Sens.\
    \ 2017, 9, 317. [CrossRef]\n202. Peñuelas, J.; Filella, I.; Biel, C.; Serrano,\
    \ L.; Save, R. The reﬂectance at the 950–970 nm region as an indicator\nof plant\
    \ water status. Int. J. Remote Sens. 1993, 14, 1887–1905. [CrossRef]\n203. Jones,\
    \ C.L.; Weckler, P.R.; Maness, N.O.; Stone, M.L.; Jayasekara, R. Estimating water\
    \ stress in plants\nusing hyperspectral sensing. In Proceedings of the 2004 ASAE\
    \ Annual Meeting, Ottawa, ON, Canada,\n1–4 August 2004; p. 1.\n204. Aˇc, A.; Malenovskỳ,\
    \ Z.; Olejníˇcková, J.; Gallé, A.; Rascher, U.; Mohammed, G. Meta-analysis assessing\n\
    potential of steady-state chlorophyll ﬂuorescence for remote sensing detection\
    \ of plant water, temperature\nand nitrogen stress. Remote Sens. Environ. 2015,\
    \ 168, 420–436. [CrossRef]\n205. Mohammed, G.H.; Colombo, R.; Middleton, E.M.;\
    \ Rascher, U.; van der Tol, C.; Nedbal, L.; Goulas, Y.;\nPérez-Priego, O.; Damm,\
    \ A.; Meroni, M.; et al. Remote sensing of solar-induced chlorophyll ﬂuorescence\n\
    (SIF) in vegetation: 50 years of progress. Remote Sens. Environ. 2019, 231, 111177.\
    \ [CrossRef]\n206. Panigada, C.; Rossini, M.; Meroni, M.; Cilia, C.; Busetto,\
    \ L.; Amaducci, S.; Boschetti, M.; Cogliati, S.; Picchi, V.;\nPinto, F.; et al.\
    \ Fluorescence, PRI and canopy temperature for water stress detection in cereal\
    \ crops. Int. J.\nAppl. Earth Obs. Geoinformation 2014, 30, 167–178. [CrossRef]\n\
    207. Jones, H.G.; Stoll, M.; Santos, T.; Sousa, C.D.; Chaves, M.M.; Grant, O.M.\
    \ Use of infrared thermography for\nmonitoring stomatal closure in the ﬁeld: application\
    \ to grapevine. J. Exp. Bot. 2002, 53, 2249–2260. [CrossRef]\n208. Jackson, R.D.;\
    \ Idso, S.B.; Reginato, R.J.; Pinter, P.J. Canopy temperature as a crop water\
    \ stress indicator.\nWater Resour. Res. 1981, 17, 1133–1138. [CrossRef]\n209.\
    \ Bellvert, J.; Zarco-Tejada, P.J.; Girona, J.; Fereres, E. Mapping crop water\
    \ stress index in a ‘Pinot-noir’vineyard:\ncomparing ground measurements with\
    \ thermal remote sensing imagery from an unmanned aerial vehicle.\nPrecis. Agric.\
    \ 2014, 15, 361–376. [CrossRef]\n210. Fuentes, S.; De Bei, R.; Pech, J.; Tyerman,\
    \ S. Computational water stress indices obtained from thermal image\nanalysis\
    \ of grapevine canopies. Irrig. Sci. 2012, 30, 523–536. [CrossRef]\nAgronomy 2020,\
    \ 10, 140\n31 of 35\n211. Jackson, R.D. Canopy temperature and crop water stress.\
    \ In Advances in Irrigation; Elsevier: Amsterdam,\nThe Netherlands, 1982; Volume\
    \ 1, pp. 43–85.\n212. Idso, S.; Jackson, R.; Pinter, P., Jr.; Reginato, R.; Hatﬁeld,\
    \ J. Normalizing the stress-degree-day parameter for\nenvironmental variability.\
    \ Agric. Meteorol. 1981, 24, 45–55. [CrossRef]\n213. Möller, M.; Alchanatis, V.;\
    \ Cohen, Y.; Meron, M.; Tsipris, J.; Naor, A.; Ostrovsky, V.; Sprintsin, M.; Cohen,\
    \ S.\nUse of thermal and visible imagery for estimating crop water status of irrigated\
    \ grapevine. J. Exp. Bot. 2006,\n58, 827–838. [CrossRef] [PubMed]\n214. Egea,\
    \ G.; Padilla-Díaz, C.M.; Martinez-Guanter, J.; Fernández, J.E.; Pérez-Ruiz, M.\
    \ Assessing a crop water\nstress index derived from aerial thermal imaging and\
    \ infrared thermometry in super-high density olive\norchards. Agric. Water Manag.\
    \ 2017, 187, 210–221. [CrossRef]\n215. Bannari, A.; Morin, D.; Bonn, F.; Huete,\
    \ A. A review of vegetation indices. Remote Sens. Rev. 1995, 13, 95–120.\n[CrossRef]\n\
    216. Ballester, C.; Zarco-Tejada, P.; Nicolas, E.; Alarcon, J.; Fereres, E.; Intrigliolo,\
    \ D.; Gonzalez-Dugo, V. Evaluating\nthe performance of xanthophyll, chlorophyll\
    \ and structure-sensitive spectral indices to detect water stress in\nﬁve fruit\
    \ tree species. Precis. Agric. 2018, 19, 178–193. [CrossRef]\n217. Romero-Trigueros,\
    \ C.; Nortes, P.A.; Alarcón, J.J.; Hunink, J.E.; Parra, M.; Contreras, S.; Droogers,\
    \ P.; Nicolás, E.\nEﬀects of saline reclaimed waters and deﬁcit irrigation on\
    \ Citrus physiology assessed by UAV remote sensing.\nAgric. Water Manag. 2017,\
    \ 183, 60–69. [CrossRef]\n218. Zhao, T.; Stark, B.; Chen, Y.; Ray, A.; Doll, D.\
    \ More reliable crop water stress quantiﬁcation using small\nunmanned aerial systems\
    \ (sUAS). IFAC-PapersOnLine 2016, 49, 409–414. [CrossRef]\n219. Sandholt, I.;\
    \ Rasmussen, K.; Andersen, J. A simple interpretation of the surface temperature/vegetation\
    \ index\nspace for assessment of surface moisture status. Remote Sens. Environ.\
    \ 2002, 79, 213–224. [CrossRef]\n220. Wang, L.; Qu, J.J. Satellite remote sensing\
    \ applications for surface soil moisture monitoring: A review.\nFront. Earth Sci.\
    \ China 2009, 3, 237–247. [CrossRef]\n221. Colaizzi, P.D.; Barnes, E.M.; Clarke,\
    \ T.R.; Choi, C.Y.; Waller, P.M. Estimating soil moisture under low frequency\n\
    surface irrigation using crop water stress index. J. Irrig. Drain. Eng. 2003,\
    \ 129, 27–35. [CrossRef]\n222. Ahmed, A.; Zhang, Y.; Nichols, S. Review and evaluation\
    \ of remote sensing methods for soil-moisture\nestimation. SPIE Rev. 2011, 2,\
    \ 028001.\n223. Kerr, Y.H. Soil moisture from space: Where are we? Hydrogeol.\
    \ J. 2007, 15, 117–120. [CrossRef]\n224. Kerr, Y.H.; Waldteufel, P.; Wigneron,\
    \ J.-P.; Delwart, S.; Cabot, F.; Boutin, J.; Escorihuela, M.-J.; Font, J.; Reul,\
    \ N.;\nGruhier, C.; et al. The SMOS mission: New tool for monitoring key elements\
    \ ofthe global water cycle.\nProc. IEEE 2010, 98, 666–687. [CrossRef]\n225. Entekhabi,\
    \ D.; Njoku, E.G.; O’Neill, P.E.; Kellogg, K.H.; Crow, W.T.; Edelstein, W.N.;\
    \ Entin, J.K.; Goodman, S.D.;\nJackson, T.J.; Johnson, J.; et al. The soil moisture\
    \ active passive (SMAP) mission. Proc. IEEE 2010, 98, 704–716.\n[CrossRef]\n226.\
    \ Yueh, S.; Entekhabi, D.; O’Neill, P.; Njoku, E.; Entin, J. NASA soil moisture\
    \ active passive mission status\nand science performance. In Proceedings of the\
    \ 2016 IEEE International Geoscience and Remote Sensing\nSymposium (IGARSS 2016),\
    \ Beijing, China, 10–16 July 2016; pp. 116–119.\n227. Piles, M.; Sánchez, N.;\
    \ Vall-llossera, M.; Camps, A.; Martínez-Fernández, J.; Martínez, J.; González-Gambau,\
    \ V.\nA Downscaling Approach for SMOS Land Observations: Evaluation of High-Resolution\
    \ Soil Moisture Maps\nOver the Iberian Peninsula. IEEE J. Sel. Top. Appl. Earth\
    \ Obs. Remote Sens. 2014, 7, 3845–3857. [CrossRef]\n228. Cui, C.; Xu, J.; Zeng,\
    \ J.; Chen, K.-S.; Bai, X.; Lu, H.; Chen, Q.; Zhao, T. Soil moisture mapping from\
    \ satellites:\nAn intercomparison of SMAP, SMOS, FY3B, AMSR2, and ESA CCI over\
    \ two dense network regions at\ndiﬀerent spatial scales. Remote Sens. 2018, 10,\
    \ 33. [CrossRef]\n229. Peng, J.; Loew, A.; Merlin, O.; Verhoest, N.E. A review\
    \ of spatial downscaling of satellite remotely sensed soil\nmoisture. Rev. Geophys.\
    \ 2017, 55, 341–366. [CrossRef]\n230. Roussel, N.; Darrozes, J.; Ha, C.; Boniface,\
    \ K.; Frappart, F.; Ramillien, G.; Gavart, M.; Van de Vyvere, L.;\nDesenfans,\
    \ O.; Baup, F. Multi-scale volumetric soil moisture detection from GNSS SNR data:\
    \ Ground-based\nand airborne applications. In Proceedings of the 2016 IEEE Metrology\
    \ for Aerospace (MetroAeroSpace),\nFlorence, Italy, 22–23 June 2016; pp. 573–578.\n\
    231. Yan, S.; Zhang, N.; Chen, N.; Gong, J. Feasibility of using signal strength\
    \ indicator data to estimate soil\nmoisture based on GNSS interference signal\
    \ analysis. Remote Sens. Lett. 2018, 9, 61–70. [CrossRef]\nAgronomy 2020, 10,\
    \ 140\n32 of 35\n232. Johansen, K.; Sohlbach, M.; Sullivan, B.; Stringer, S.;\
    \ Peasley, D.; Phinn, S. Mapping banana plants from\nhigh spatial resolution orthophotos\
    \ to facilitate plant health assessment. Remote Sens. 2014, 6, 8261–8286.\n[CrossRef]\n\
    233. Hall, A.; Louis, J.; Lamb, D.W. Low-resolution remotely sensed images of\
    \ winegrape vineyards map spatial\nvariability in planimetric canopy area instead\
    \ of leaf area index. Aust. J. Grape Wine Res. 2008, 14, 9–17.\n[CrossRef]\n234.\
    \ Furness, G.; Magarey, P.; Miller, P.; Drew, H. Fruit tree and vine sprayer calibration\
    \ based on canopy size and\nlength of row: unit canopy row method. Crop Prot.\
    \ 1998, 17, 639–644. [CrossRef]\n235. Rosell, J.; Sanz, R. A review of methods\
    \ and applications of the geometric characterization of tree crops in\nagricultural\
    \ activities. Comput. Electron. Agric. 2012, 81, 124–141. [CrossRef]\n236. Lee,\
    \ K.; Ehsani, R. A laser scanner based measurement system for quantiﬁcation of\
    \ citrus tree geometric\ncharacteristics. Appl. Eng. Agric. 2009, 25, 777–788.\
    \ [CrossRef]\n237. Li, F.; Cohen, S.; Naor, A.; Shaozong, K.; Erez, A. Studies\
    \ of canopy structure and water use of apple trees on\nthree rootstocks. Agric.\
    \ Water Manag. 2002, 55, 1–14. [CrossRef]\n238. Kustas, W.; Agam, N.; Alﬁeri,\
    \ J.; McKee, L.; Prueger, J.; Hipps, L.; Howard, A.; Heitman, J. Below canopy\n\
    radiation divergence in a vineyard: Implications on interrow surface energy balance.\
    \ Irrig. Sci. 2019, 37,\n227–237. [CrossRef]\n239. Bendig, J.V. Unmanned aerial\
    \ vehicles (UAVs) for multi-temporal crop surface modelling. A new method for\n\
    plant height and biomass estimation based on RGB-imaging. Ph.D. Thesis, University\
    \ of Cologne, Cologne,\nGermany, 2015.\n240. Gowda, P.H.; Chavez, J.L.; Colaizzi,\
    \ P.D.; Evett, S.R.; Howell, T.A.; Tolk, J.A. ET mapping for agricultural\nwater\
    \ management: present status and challenges. Irrig. Sci. 2008, 26, 223–237. [CrossRef]\n\
    241. Zhang, K.; Kimball, J.S.; Running, S.W. A review of remote sensing based\
    \ actual evapotranspiration estimation.\nWiley Interdiscip. Rev. Water 2016, 3,\
    \ 834–853. [CrossRef]\n242. Liou, Y.-A.; Kar, S. Evapotranspiration estimation\
    \ with remote sensing and various surface energy balance\nalgorithms—A review.\
    \ Energies 2014, 7, 2821–2849. [CrossRef]\n243. Courault, D.; Seguin, B.; Olioso,\
    \ A. Review on estimation of evapotranspiration from remote sensing data:\nFrom\
    \ empirical to numerical modeling approaches. Irrig. Drain. Syst. 2005, 19, 223–249.\
    \ [CrossRef]\n244. Kalma, J.D.; McVicar, T.R.; McCabe, M.F. Estimating land surface\
    \ evaporation: A review of methods using\nremotely sensed surface temperature\
    \ data. Surv. Geophys. 2008, 29, 421–469. [CrossRef]\n245. Li, Z.-L.; Tang, R.;\
    \ Wan, Z.; Bi, Y.; Zhou, C.; Tang, B.; Yan, G.; Zhang, X. A review of current\
    \ methodologies\nfor regional evapotranspiration estimation from remotely sensed\
    \ data. Sensors 2009, 9, 3801–3853. [CrossRef]\n246. Marshall, M.; Thenkabail,\
    \ P.; Biggs, T.; Post, K. Hyperspectral narrowband and multispectral broadband\n\
    indices for remote sensing of crop evapotranspiration and its components (transpiration\
    \ and soil evaporation).\nAgric. For. Meteorol. 2016, 218, 122–134. [CrossRef]\n\
    247. Maes, W.; Steppe, K. Estimating evapotranspiration and drought stress with\
    \ ground-based thermal remote\nsensing in agriculture: a review. J. Exp. Bot.\
    \ 2012, 63, 4671–4712. [CrossRef]\n248. Bastiaanssen, W.G.; Menenti, M.; Feddes,\
    \ R.; Holtslag, A. A remote sensing surface energy balance algorithm\nfor land\
    \ (SEBAL). 1. Formulation. J. Hydrol. 1998, 212, 198–212. [CrossRef]\n249. Allen,\
    \ R.; Irmak, A.; Trezza, R.; Hendrickx, J.M.; Bastiaanssen, W.; Kjaersgaard, J.\
    \ Satellite-based ET estimation\nin agriculture using SEBAL and METRIC. Hydrol.\
    \ Process. 2011, 25, 4011–4027. [CrossRef]\n250. Allen, R.G.; Tasumi, M.; Trezza,\
    \ R. Satellite-based energy balance for mapping evapotranspiration with\ninternalized\
    \ calibration (METRIC)—Model. J. Irrig. Drain. Eng. 2007, 133, 380–394. [CrossRef]\n\
    251. Allen, R.G.; Tasumi, M.; Morse, A.; Trezza, R.; Wright, J.L.; Bastiaanssen,\
    \ W.; Kramber, W.; Lorite, I.;\nRobison, C.W. Satellite-Based Energy Balance for\
    \ Mapping Evapotranspiration with Internalized Calibration\n(METRIC)-Applications.\
    \ J. Irrig. Drain. Eng. 2007, 133, 395–406. [CrossRef]\n252. Allen, R.G.; Pereira,\
    \ L.S.; Raes, D.; Smith, M. FAO Irrigation and drainage paper No. 56. Rome Food\
    \ Agric.\nOrgan. U. N. 1998, 56, e156.\n253. Jackson, R.D.; Moran, M.S.; Gay,\
    \ L.W.; Raymond, L.H. Evaluating evaporation from ﬁeld crops using airborne\n\
    radiometry and ground-based meteorological data. Irrig. Sci. 1987, 8, 81–90. [CrossRef]\n\
    254. Williams, L.; Ayars, J. Grapevine water use and the crop coeﬃcient are linear\
    \ functions of the shaded area\nmeasured beneath the canopy. Agric. For. Meteorol.\
    \ 2005, 132, 201–211. [CrossRef]\nAgronomy 2020, 10, 140\n33 of 35\n255. Jayanthi,\
    \ H.; Neale, C.M.; Wright, J.L. Development and validation of canopy reﬂectance-based\
    \ crop\ncoeﬃcient for potato. Agric. Water Manag. 2007, 88, 235–246. [CrossRef]\n\
    256. Samani, Z.; Bawazir, A.S.; Bleiweiss, M.; Skaggs, R.; Longworth, J.; Tran,\
    \ V.D.; Pinon, A. Using remote sensing\nto evaluate the spatial variability of\
    \ evapotranspiration and crop coeﬃcient in the lower Rio Grande Valley,\nNew Mexico.\
    \ Irrig. Sci. 2009, 28, 93–100. [CrossRef]\n257. Kustas, W.P.; Anderson, M.C.;\
    \ Alﬁeri, J.G.; Knipper, K.; Torres-Rua, A.; Parry, C.K.; Nieto, H.; Agam, N.;\n\
    White, W.A.; Gao, F.; et al. The grape remote sensing atmospheric proﬁle and evapotranspiration\
    \ experiment.\nBull. Am. Meteorol. Soc. 2018, 99, 1791–1812. [CrossRef]\n258.\
    \ Kamble, B.; Kilic, A.; Hubbard, K. Estimating crop coeﬃcients using remote sensing-based\
    \ vegetation index.\nRemote Sens. 2013, 5, 1588–1602. [CrossRef]\n259. Hou, M.;\
    \ Tian, F.; Zhang, L.; Li, S.; Du, T.; Huang, M.; Yuan, Y. Estimating crop transpiration\
    \ of soybean\nunder diﬀerent irrigation treatments using thermal infrared remote\
    \ sensing imagery. Agronomy 2019, 9, 8.\n[CrossRef]\n260. Knipper, K.R.; Kustas,\
    \ W.P.; Anderson, M.C.; Alﬁeri, J.G.; Prueger, J.H.; Hain, C.R.; Gao, F.; Yang,\
    \ Y.;\nMcKee, L.G.; Nieto, H.; et al. Evapotranspiration estimates derived using\
    \ thermal-based satellite remote\nsensing and data fusion for irrigation management\
    \ in California vineyards. Irrig. Sci. 2019, 37, 431–449.\n[CrossRef]\n261. Hoﬀmann,\
    \ H.; Nieto, H.; Jensen, R.; Guzinski, R.; Zarco-Tejada, P.; Friborg, T. Estimating\
    \ evapotranspiration\nwith thermal UAV data and two source energy balance models.\
    \ Hydrol. Earth Syst. Sci. Discuss. 2016, 20,\n697–713. [CrossRef]\n262. Cammalleri,\
    \ C.; Anderson, M.; Kustas, W. Upscaling of evapotranspiration ﬂuxes from instantaneous\
    \ to\ndaytime scales for thermal remote sensing applications. Hydrol. Earth Syst.\
    \ Sci. 2014, 18, 1885–1894.\n[CrossRef]\n263. Biggs, T.W.; Marshall, M.; Messina,\
    \ A. Mapping daily and seasonal evapotranspiration from irrigated crops\nusing\
    \ global climate grids and satellite imagery: Automation and methods comparison.\
    \ Water Resour. Res.\n2016, 52, 7311–7326. [CrossRef]\n264. Chávez, J.L.; Neale,\
    \ C.M.; Prueger, J.H.; Kustas, W.P. Daily evapotranspiration estimates from extrapolating\n\
    instantaneous airborne remote sensing ET values. Irrig. Sci. 2008, 27, 67–81.\
    \ [CrossRef]\n265. McCabe, M.F.; Wood, E.F. Scale inﬂuences on the remote estimation\
    \ of evapotranspiration using multiple\nsatellite sensors. Remote Sens. Environ.\
    \ 2006, 105, 271–285. [CrossRef]\n266. Kustas, W.; Li, F.; Jackson, T.; Prueger,\
    \ J.; MacPherson, J.; Wolde, M. Eﬀects of remote sensing pixel resolution\non\
    \ modeled energy ﬂux variability of croplands in Iowa. Remote Sens. Environ. 2004,\
    \ 92, 535–547. [CrossRef]\n267. Hong, S.; Hendrickx, J.M.; Borchers, B. Eﬀect\
    \ of scaling transfer between evapotranspiration maps derived\nfrom LandSat 7\
    \ and MODIS images. In Targets and Backgrounds XI: Characterization and Representation;\n\
    International Society for Optics and Photonics: Orlando, FL, USA, 2005; Volume\
    \ 5811, pp. 147–159.\n268. Abiodun, O.O.; Guan, H.; Post, V.E.; Batelaan, O. Comparison\
    \ of MODIS and SWAT evapotranspiration over\na complex terrain at diﬀerent spatial\
    \ scales. Hydrol. Earth Syst. Sci. 2018, 22, 2775–2794. [CrossRef]\n269. Justice,\
    \ C.; Townshend, J.; Vermote, E.; Masuoka, E.; Wolfe, R.; Saleous, N.; Roy, D.;\
    \ Morisette, J. An overview\nof MODIS Land data processing and product status.\
    \ Remote Sens. Environ. 2002, 83, 3–15. [CrossRef]\n270. Nieto, H.; Bellvert,\
    \ J.; Kustas, W.P.; Alﬁeri, J.G.; Gao, F.; Prueger, J.; Torres-Rua, A.; Hipps,\
    \ L.E.; Elarab, M.;\nSong, L. Unmanned airborne thermal and mutilspectral imagery\
    \ for estimating evapotranspiration in irrigated\nvineyards. In Proceedings of\
    \ the 2017 IEEE International Geoscience and Remote Sensing Symposium\n(IGARSS\
    \ 2017), Fort Worth, TX, USA, 23–28 July 2017; pp. 5510–5513.\n271. Ortega-Farías,\
    \ S.; Ortega-Salazar, S.; Poblete, T.; Poblete-Echeverría, C.; Zúñiga, M.; Sepúlveda-Reyes,\
    \ D.;\nKilic, A.; Allen, R. Estimation of olive evapotranspiration using multispectral\
    \ and thermal sensors placed\naboard an unmanned aerial vehicle. Acta Hortic.\
    \ 2017, 1150, 1–8. [CrossRef]\n272. Gago, J.; Douthe, C.; Coopman, R.E.; Gallego,\
    \ P.P.; Ribas-Carbo, M.; Flexas, J.; Escalona, J.; Medrano, H. UAVs\nchallenge\
    \ to assess water stress for sustainable agriculture. Agric. Water Manag. 2015,\
    \ 153, 9–19. [CrossRef]\n273. Sepúlveda-Reyes, D.; Ingram, B.; Bardeen, M.; Zúñiga,\
    \ M.; Ortega-Farías, S.; Poblete-Echeverría, C. Selecting\ncanopy zones and thresholding\
    \ approaches to assess grapevine water status by using aerial and ground-based\n\
    thermal imaging. Remote Sens. 2016, 8, 822. [CrossRef]\n274. McBratney, A.; Whelan,\
    \ B.; Ancev, T.; Bouma, J. Future directions of precision agriculture. Precis.\
    \ Agric. 2005,\n6, 7–23. [CrossRef]\nAgronomy 2020, 10, 140\n34 of 35\n275. Ferguson,\
    \ R.; Rundquist, D. Remote sensing for site-speciﬁc crop management. In Precision\
    \ Agriculture Basics;\nShannon, D.K., Clay, D.E., Kitchen, N.R., Eds.; American\
    \ Society of Agronomy: Madison, WI, USA; Crop\nScience Society of America: Madison,\
    \ WI, USA; Soil Science Society of America: Madison, WI, USA, 2018;\npp. 103–118.\n\
    276. Florin, M.J.; McBratney, A.B.; Whelan, B.M. Extending site-speciﬁc crop management\
    \ from individual ﬁelds\nto an entire farm. In Proceedings of the Precision agriculture\
    \ ’05, Proceedings of the 5th European Conference\non Precision Agriculture, Uppsala,\
    \ Sweden, 9–12 June 2005; pp. 857–863.\n277. Perea-Moreno, A.J.; Aguilera-Urena,\
    \ M.J.; Merono-de Larriva, J.E.; Manzano-Agugliaro, F. Assessment of\nthe potential\
    \ of UAV video image analysis for planning irrigation needs of golf courses. Water\
    \ 2016, 8, 584.\n[CrossRef]\n278. Meron, M.; Tsipris, J.; Charitt, D. Remote mapping\
    \ of crop water status to assess spatial variability of crop\nstress. Precis.\
    \ Agric. 2003, 405–410.\n279. Idso, S.B. Non-water-stressed baselines: A key to\
    \ measuring and interpreting plant water stress. Agric. Meteorol.\n1982, 27, 59–70.\
    \ [CrossRef]\n280. Cohen, Y.; Alchanatis, V.; Meron, M.; Saranga, Y.; Tsipris,\
    \ J. Estimation of leaf water potential by thermal\nimagery and spatial analysis.\
    \ J. Exp. Bot. 2005, 56, 1843–1852. [CrossRef] [PubMed]\n281. Pagay, V.; Kidman,\
    \ C.; Jenkins, A. Proximal and remote sensing tools for regional-scale characterisation\
    \ of\ngrapevine water and nitrogen status in Coonawarra. Wine Vitic. J. 2016,\
    \ 31, 42–47.\n282. Romero, M.; Luo, Y.; Su, B.; Fuentes, S. Vineyard water status\
    \ estimation using multispectral imagery from an\nUAV platform and machine learning\
    \ algorithms for irrigation scheduling management. Comput. Electron. Agric.\n\
    2018, 147, 109–117. [CrossRef]\n283. Goldhamer, D.A.; Viveros, M.; Salinas, M.\
    \ Regulated deﬁcit irrigation in almonds: eﬀects of variations in\napplied water\
    \ and stress timing on yield and yield components. Irrig. Sci. 2006, 24, 101–114.\
    \ [CrossRef]\n284. Girona, J.; Marsal, J.; Cohen, M.; Mata, M.; Miravete, C. Physiological,\
    \ growth and yield responses of almond\n(Prunus dulcis L ) to diﬀerent irrigation\
    \ regimes. Acta Hortic. 1993, 335, 389–398. [CrossRef]\n285. Sadler, E.; Evans,\
    \ R.; Stone, K.; Camp, C. Opportunities for conservation with precision irrigation.\
    \ J. Soil\nWater Conserv. 2005, 60, 371–378.\n286. Corbane, C.; Jacob, F.; Raclot,\
    \ D.; Albergel, J.; Andrieux, P. Multitemporal analysis of hydrological soil surface\n\
    characteristics using aerial photos: A case study on a Mediterranean vineyard.\
    \ Int. J. Appl. Earth Obs. Geoinf.\n2012, 18, 356–367. [CrossRef]\n287. Osroosh,\
    \ Y.; Peters, R.T.; Campbell, C.S. Daylight crop water stress index for continuous\
    \ monitoring of water\nstatus in apple trees. Irrig. Sci. 2016, 34, 209–219. [CrossRef]\n\
    288. Osroosh, Y.; Peters, R.T.; Campbell, C.S.; Zhang, Q. Comparison of irrigation\
    \ automation algorithms for\ndrip-irrigated apple trees. Comput. Electron. Agric.\
    \ 2016, 128, 87–99. [CrossRef]\n289. Lamm, F.R.; Aiken, R.M. Comparison of temperature-time\
    \ threshold-and ET-based irrigation scheduling for\ncorn production. In Proceedings\
    \ of the 2008 ASABE Annual International Meeting, Providence, RI, USA,\n29 June–2\
    \ July 2008; p. 1.\n290. O’Shaughnessy, S.A.; Evett, S.R.; Colaizzi, P.D.; Howell,\
    \ T.A. A crop water stress index and time threshold\nfor automatic irrigation\
    \ scheduling of grain sorghum. Agric. Water Manag. 2012, 107, 122–132. [CrossRef]\n\
    291. Bellvert, J.; Zarco-Tejada, P.; Gonzalez-Dugo, V.; Girona, J.; Fereres, E.\
    \ Scheduling vineyard irrigation based\non mapping leaf water potential from airborne\
    \ thermal imagery. In Precision Agriculture’13; Staﬀord, J.V., Ed.;\nSpringer:\
    \ Cham, Switzerland, 2013; pp. 699–704.\n292. Bellvert, J.; Girona, J. The use\
    \ of multispectral and thermal images as a tool for irrigation scheduling in\n\
    vineyards. In The Use of Remote Sensing and Geographic Information Systems for\
    \ Irrigation Management in\nSouthwest Europe; Erena, M., López-Francos, A., Montesinos,\
    \ S., Berthoumieu, J.-P., Eds.; CIHEAM: Zaragoza,\nSpain, 2012; pp. 131–137.\n\
    293. Erdem, Y.; ¸Sehirali, S.; Erdem, T.; Kenar, D. Determination of crop water\
    \ stress index for irrigation scheduling\nof bean (Phaseolus vulgaris L.). Turk.\
    \ J. Agric. For. 2006, 30, 195–202.\n294. Osroosh, Y.; Troy Peters, R.; Campbell,\
    \ C.S.; Zhang, Q. Automatic irrigation scheduling of apple trees using\ntheoretical\
    \ crop water stress index with an innovative dynamic threshold. Comput. Electron.\
    \ Agric. 2015, 118,\n193–203. [CrossRef]\n295. Irmak, S.; Haman, D.Z.; Bastug,\
    \ R. Determination of crop water stress index for irrigation timing and yield\n\
    estimation of corn. Agron. J. 2000, 92, 1221–1227. [CrossRef]\nAgronomy 2020,\
    \ 10, 140\n35 of 35\n296. Acevedo-Opazo, C.; Tisseyre, B.; Ojeda, H.; Ortega-Farias,\
    \ S.; Guillaume, S. Is it possible to assess the spatial\nvariability of vine\
    \ water status? OENO One 2008, 42, 203–219. [CrossRef]\n297. Acevedo-Opazo, C.;\
    \ Tisseyre, B.; Guillaume, S.; Ojeda, H. The potential of high spatial resolution\
    \ information\nto deﬁne within-vineyard zones related to vine water status. Precis.\
    \ Agric. 2008, 9, 285–302. [CrossRef]\n298. Petrie, P.R.; Wang, Y.; Liu, S.; Lam,\
    \ S.; Whitty, M.A.; Skewes, M.A. The accuracy and utility of a low cost\nthermal\
    \ camera and smartphone-based system to assess grapevine water status. Biosyst.\
    \ Eng. 2019, 179,\n126–139. [CrossRef]\n299. Woellert, K.; Ehrenfreund, P.; Ricco,\
    \ A.J.; Hertzfeld, H. Cubesats: Cost-eﬀective science and technology\nplatforms\
    \ for emerging and developing nations. Adv. Space Res. 2011, 47, 663–684. [CrossRef]\n\
    300. Kramer, H.J.; Cracknell, A.P. An overview of small satellites in remote sensing.\
    \ Int. J. Remote Sens. 2008, 29,\n4285–4337. [CrossRef]\n301. McCabe, M.; Aragon,\
    \ B.; Houborg, R.; Mascaro, J. CubeSats in Hydrology: Ultrahigh-Resolution Insights\n\
    Into Vegetation Dynamics and Terrestrial Evaporation. Water Resour. Res. 2017,\
    \ 53, 10017–10024. [CrossRef]\n302. Trombetti, M.; Riaño, D.; Rubio, M.; Cheng,\
    \ Y.; Ustin, S. Multi-temporal vegetation canopy water content\nretrieval and\
    \ interpretation using artiﬁcial neural networks for the continental USA. Remote\
    \ Sens. Environ.\n2008, 112, 203–215. [CrossRef]\n303. King, B.; Shellie, K. Evaluation\
    \ of neural network modeling to predict non-water-stressed leaf temperature in\n\
    wine grape for calculation of crop water stress index. Agric. Water Manag. 2016,\
    \ 167, 38–52. [CrossRef]\n304. Shan, N.; Ju, W.; Migliavacca, M.; Martini, D.;\
    \ Guanter, L.; Chen, J.; Goulas, Y.; Zhang, Y. Modeling canopy\nconductance and\
    \ transpiration from solar-induced chlorophyll ﬂuorescence. Agric. For. Meteorol.\
    \ 2019, 268,\n189–201. [CrossRef]\n305. Moreno, J.; Goulas, Y.; Huth, A.; Middelton,\
    \ E.; Miglietta, F.; Mohammed, G.; Nebdal, L.; Rascher, U.;\nVerhof, W. Report\
    \ for mission selection: CarbonSat ﬂex–An earth explorer to observe vegetation\
    \ ﬂuorescence.\nEur. Space Agency 2015, 1330/2, 179–185.\n306. Drusch, M.; Moreno,\
    \ J.; Del Bello, U.; Franco, R.; Goulas, Y.; Huth, A.; Kraft, S.; Middleton, E.M.;\
    \ Miglietta, F.;\nMohammed, G.; et al. The ﬂuorescence explorer mission concept-ESA’s\
    \ Earth explorer 8. IEEE Trans. Geosci.\nRemote Sens. 2017, 55, 1273–1284. [CrossRef]\n\
    307. Gautam, D.; Lucieer, A.; Watson, C.; McCoull, C. Lever-arm and boresight\
    \ correction, and ﬁeld of view\ndetermination of a spectroradiometer mounted on\
    \ an unmanned aircraft system. ISPRS J. Photogramm.\nRemote Sens. 2019, 155, 25–36.\
    \ [CrossRef]\n308. Garzonio, R.; Di Mauro, B.; Colombo, R.; Cogliati, S. Surface\
    \ reﬂectance and sun-induced ﬂuorescence\nspectroscopy measurements using a small\
    \ hyperspectral UAS. Remote Sens. 2017, 9, 472. [CrossRef]\n309. Gautam, D.; Lucieer,\
    \ A.; Bendig, J.; Malenovský, Z. Footprint Determination of a Spectroradiometer\
    \ Mounted\non an Unmanned Aircraft System. IEEE Trans. Geosci. Remote Sens. 2019,\
    \ 1–12. [CrossRef]\n310. Bendig, J.; Malenovskỳ, Z.; Gautam, D.; Lucieer, A. Solar-Induced\
    \ Chlorophyll Fluorescence Measured\nFrom an Unmanned Aircraft System: Sensor\
    \ Etaloning and Platform Motion Correction. IEEE Trans. Geosci.\nRemote Sens.\
    \ 2019, 1–8. [CrossRef]\n311. TongKe, F. Smart agriculture based on cloud computing\
    \ and IOT. J. Converg. Inf. Technol. 2013, 8, 210–216.\n312. Ojha, T.; Misra,\
    \ S.; Raghuwanshi, N.S. Wireless sensor networks for agriculture: The state-of-the-art\
    \ in\npractice and future challenges. Comput. Electron. Agric. 2015, 118, 66–84.\
    \ [CrossRef]\n313. Hori, M.; Kawashima, E.; Yamazaki, T. Application of cloud\
    \ computing to agriculture and prospects in other\nﬁelds. Fujitsu Sci. Tech. J.\
    \ 2010, 46, 446–454.\n314. Goap, A.; Sharma, D.; Shukla, A.; Krishna, C.R. An\
    \ IoT based smart irrigation management system using\nMachine learning and open\
    \ source technologies. Comput. Electron. Agric. 2018, 155, 41–49. [CrossRef]\n\
    © 2020 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open\
    \ access\narticle distributed under the terms and conditions of the Creative Commons\
    \ Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Agronomy (Basel)
  limitations: []
  pdf_link: https://www.mdpi.com/2073-4395/10/1/140/pdf
  publication_year: 2020
  relevance_evaluation: '0.9-1.0: Exceptionally relevant - Comprehensively addresses
    all key aspects of the point you are making with highly insightful, reliable,
    and up-to-date information. A must-include for the review.'
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: A Review of Current and Potential Applications of Remote Sensing to Study
    the Water Status of Horticultural Crops
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1515/jisys-2022-0046
  analysis: '>'
  apa_citation: Premkumar, S., & Sigappi, A. N. (2022). IoT-enabled edge computing
    model for smart irrigation system. Journal of Intelligent Systems, 31(1), 632–650.
  authors:
  - S. Premkumar
  - A. N. Sigappi
  citation_count: 5
  data_sources: Weather data, Soil moisture data
  explanation: The study focuses on deploying automated irrigation management systems
    that combine data collection, edge computing, and real-time data analysis to enhance
    water usage efficiency in agriculture. The authors propose an IoT-enabled edge
    computing model that integrates sensors, microcontrollers, a Raspberry Pi, and
    cloud services to monitor soil moisture levels and predict future moisture changes
    based on weather forecasts. This system utilizes a hybrid machine learning algorithm
    (XB+k-means) to analyze data and make irrigation decisions, which are then communicated
    to actuators controlling water pumps. The system also includes a dashboard for
    monitoring real-time data and controlling actuators remotely.
  extract_1: A soil moisture prediction hybrid algorithm (SMPHA) has been developed
    that revolves around the decision-making techniques with live environmental parameters
    including weather parameters for the prediction of soil moisture through the impact
    of precipitation.
  extract_2: Numerous algorithms with the combination of regression + clustering are
    estimated, and it is inferred that XGBoost + k-means outperforms other algorithmic
    combinations that is deployed in edge model.
  full_citation: '>'
  full_text: '>

    Research Article

    S. Premkumar* and AN. Sigappi

    IoT-enabled edge computing model for smart

    irrigation system

    https://doi.org/10.1515/jisys-2022-0046

    received January 10, 2022; accepted March 16, 2022

    Abstract: Precision agriculture is a breakthrough in digital farming technology,
    which facilitates the appli-

    cation of precise and exact amount of input level of water and fertilizer to the
    crop at the required time for

    increasing the yield. Since agriculture relies on direct rainfall than irrigation
    and the prediction of rainfall

    date is easily available from web source, the integration of rainfall prediction
    with precision agriculture

    helps to regulate the water consumption in farms. In this work, an edge computing
    model is developed for

    predicting soil moisture in real time and managing the water usage in accordance
    with rain prediction. A

    soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves
    around the decision-

    making techniques with live environmental parameters including weather parameters
    for the prediction of

    soil moisture through the impact of precipitation. Numerous algorithms with the
    combination of regression

    + clustering are estimated, and it is inferred that XGBoost + k-means outperforms
    other algorithmic com-

    binations that is deployed in edge model. This model is used as an intermediary
    between the end IoT

    devices and cloud that results in the saving of computationally intensive processing
    performed on cloud

    servers. The servers located on a local edge network perform the developed algorithmic
    computations.

    Avoiding transmission over the cloud results in signiﬁcant latency, response time,
    and computation power

    savings and therefore increases the eﬃciency of data transfer. The proposed edge
    computing model is

    implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes as the
    combination of Pi with

    actuators and sensors. The monitored data from Pi are stored in MongoDB webserver
    that is controlled by

    Web dashboard. Finally, the developed model is implemented in cloud and edge where
    the edge server

    implementation performs better in terms of latency, bandwidth, throughput, response
    time, and CPU

    memory usage.

    Keywords: smart irrigation, edge-based irrigation, edge computing, precision agriculture,
    soil moisture

    prediction, irrigation management system, IoT, oﬄoading mechanism

    1 Introduction

    It is evident that agriculture always has a specialized role in the anthrophonic
    evolution and has been

    serving as an important economic factor for the growth of a country [1]. Around
    58% of the population

    depend on agriculture as the chief source of livelihood in India. The quality
    and productivity of agricultural

    products have declined over these years as several factors have inﬂuenced the
    crop productivity both

    directly and indirectly. Some major factors that aﬀect the crop production are
    climatic changes, global

    warming, and water scarcity [2]. The agricultural land’s productivity is aﬀected
    by the direct and indirect

    

    * Corresponding author: S. Premkumar, Department of Computer Science and Engineering,
    Faculty of Engineering and

    Technology, Annamalai University, Chidambaram - 608002, Tamilnadu, India, e-mail:
    premambal@gmail.com

    AN. Sigappi: Department of Computer Science and Engineering, Faculty of Engineering
    and Technology, Annamalai University,

    Chidambaram - 608002, Tamilnadu, India, e-mail: an.sigappi@gmail.com

    Journal of Intelligent Systems 2022; 31: 632–650

    Open Access. © 2022 S. Premkumar and AN. Sigappi, published by De Gruyter.

    This work is licensed under the Creative

    Commons Attribution 4.0 International License.

    changes in climate [3,4]. The crop growth has been already aﬀected by the changes
    in climate incurred by

    global warming. The nutrition quality of soil, ground water level, sea, and ocean
    are aﬀected by the

    modiﬁcations in average temperature, rainfall, and extreme weather conditions
    such as hail storms, dust

    storms, heatwaves, etc. due to global warming [5,6]. Degradation of soil is primarily
    created by various

    methods including 93.7% by water erosion, 9.5% by wind erosion, 5.9% by salinity
    and alkalinity, etc.

    Further changes in climate would inﬂuence adversely the crop production [7]. Since
    water is an indispen-

    sable requirement for plants and cultivation, the high level of soil is eroded
    and thereby the fertility is also

    declined. Due to the ever-changing climate, water scarcity has become a huge problem.
    Drought-like

    conditions is already formed in several areas and thereby the present and conventional
    farming practices

    are not suitable. New and unique environment preserving techniques are the need
    of the hour [8].

    The conventional approaches in agriculture are enhanced by the advent of several
    advancements in

    technology [9]. These new improved methodologies ensure optimized utilization
    of resources, accurate

    forecast of water needs and environmental parameters, reduction of human intervention,
    etc. [10]. Conse-

    quently, the outcomes of crops in terms of yield and quality are higher with cost-eﬀective
    methods. One

    such booming technology is the Internet of things (IoT) [11].

    IoT is the collection of components embedded in the sensor for measuring and transferring
    data via

    network devices as sensed from pumps and tractors to weather stations. Primarily,
    IoT deals with the

    transmission and reception of data related to farms through devices using the
    Internet for prediction

    and providing decisions to the farmers. IoT-based methodologies has brought a
    changeover in agricultural

    patterns and farming approaches [12]. IoT devices can gather information about
    soil moisture, chemical

    properties, dam levels, livestock health, and weather details in real time. The
    information acquired from IoT

    devices facilitates the farmers in tracking farms periodically. Farmers can save
    time and money by

    responding faster to farm conditions. Cloud computing models integrated with on-ﬁeld
    agricultural sensors

    need to be incorporated for tackling the issue of processing huge voluminous data.

    One of the major challenges of IoT is the processing of huge datasets in a sequential
    way. Some of the

    key factors that need to be focused on this process are as follows: information
    about the type and nature of

    data, the way of acquiring the data, etc. The preliminary stage comprises acquiring
    the data and ingesting

    the data to the system. Substantial cognizance of data are achieved as the data
    pass through all the

    gateways where it is cleansed and transformed before entering into the system.
    In the near future, dynamic

    prediction of soil moisture and precipitation techniques are to be developed for
    smart irrigation systems.

    Therefore, a system is developed for eﬃcient and optimal utilization of fresh
    water in irrigation along with

    drip irrigation system. It aids in ﬁnding which one of the plants fails to get
    suﬃcient water. When the water

    supply is provided the next day, this delay should not disturb the system. It
    becomes important for the

    farmers to understand the optimal usage of water and fertilizers to bring out
    sustenance in the agricultural

    industry. Therefore, processing must be done for analyzing the data, so that patterns
    can be analyzed and

    planning can be done for the long term, accordingly. Hence, it gives a broad vision
    in deciding where the

    processing is to be done exactly. Therefore, it is obvious that not all data are
    crucial, and it provides a clear

    view of which data need to be stored, discarded, and retained for both long-term
    and short-term purposes.

    Thus, all these challenging issues require to be addressed and that is where storage
    technologies are

    actually highlighted. The poor quality of Internet access in developing nations
    makes the implementation

    quite challenging. An applicable solution to solve this problem is through edge
    computing where the

    essential data could be oﬄoaded from the cloud over the edge of the cloud, and
    this is the exact point

    where the approach of smart sensing with edge computing gets in.

    With the purpose of broadening the potential of edge computing and using it in
    the agriculture domain,

    a novel approach using machine learning (ML) methods is proposed for analyzing
    the data acquired by the

    IoT devices deployed at the farm. Here, the data acquired from IoT components
    undergo preprocessing and

    ML models on the edge nodes to analyze and assess the appropriate results for
    providing the best instruc-

    tions for controlling the actuators (e.g., light, pumps at diﬀerent locations)
    in the farms.

    This article presents an automated system, as shown in Figure 1, to predict the
    soil moisture using the

    ﬁeld information acquired from the self-designed sensor node deployed at the ﬁeld
    and the forecast

    information of weather via Internet. A unique algorithm has been developed that
    revolves around the

    IoT-enabled edge computing model for smart irrigation system

    

    633

    machine learning techniques for the prediction of soil moisture. Here, many algorithms
    with the combina-

    tion of regression + clustering was estimated, and it is inferred that XGBoost
    + k-means outperforms other

    algorithmic combinations, and therefore, it is deployed for the prediction of
    soil moisture in the proposed

    work. The proposed algorithm makes eﬀective irrigation decisions with optimized
    usage of water in a more

    accurate and reliable manner. The eﬀective decision-making refers to the process
    of predicting the rainfall,

    thereby reducing the water usage in advance by the proposed algorithm in accordance
    with the predicted

    rainy days. Through this automatic decision-making, over watering is avoided by
    saving the soil. The

    server-side software is developed with node-side connectivity using the information
    for visualization and

    decision support features. This proposed algorithm is implemented in edge to prove
    the eﬃciency of the

    edge server handling the automated system better than the cloud control. The performance
    of the decen-

    tralized edge-based architecture has been evaluated for downloading the hybrid
    algorithm from cloud in

    real time execution. The performance can be enhanced by adopting edge computing
    architecture and

    measured with the help of network parameters like latency, bandwidth, and response
    time. Edge computing

    capacity is also estimated using the CPU processor and memory consumption while
    executing the proposed

    algorithm with irrigation scheduling.

    2 Related work

    In ref. [13], a smart irrigation system not aﬀected by communication disconnection
    and delay is developed

    using edge nodes deployed at the farms. Environmental parameters have an intricate
    impact on the plant

    growth. It becomes necessary for evaluating multiple AI models simultaneously
    in an actual cultivation

    environment for comparing AI models under the same conditions. Due to the working
    of existing irrigation

    systems on the cloud, communication is instable in the concurrent evaluation of
    AI models. However, the

    instability does not induce an edge node in its performance.

    The factors such as type of plant, soil, climate, humidity, temperature, and soil
    moisture need to be

    considered for the irrigation system packed with potential smart decisions. The
    nature and type of plant,

    soil, and climate are queried by ontology (branch of metaphysics dealing with
    the nature of being), whereas

    other factors such as temperature, humidity, and soil moisture are sensed by the
    sensor network. The

    trained ML model predicts the watering decisions based on ontology and other factors
    as mentioned earlier.

    Figure 1: Architecture of the proposed system.

    634

    

    S. Premkumar and AN. Sigappi

    Smart irrigation has three modules: (i) sensor network modules that sense the
    parameters impacting the water

    requirement by using sensors DHT22, light sensor BH1750, and HL-69 hygrometer
    for sensing the temperature,

    soil moisture, light, and humidity in air. (ii) Edge and IoT server’s module to
    send and receive data through

    HTTP requests. (iii) Training module in which KNN is applied on the sample dataset
    for training and decision-

    making regarding the water needs. Based on the input values, the trained model
    categorizes the input into ﬁve

    possible classes: highly not needed, not needed, average, needed, and highly needed
    [14].

    A decentralized smart irrigation approach is proposed for strawberry greenhouses
    in contrast to con-

    ventional cloud-based solutions for keeping the agricultural data at the edge
    of the network. A full-scale

    smart irrigation system in an actual strawberry greenhouse environment is developed
    after a small-scale

    smart irrigation networking prototype system and a reference architecture targeting
    edge data distribution

    for strawberry greenhouse applications are framed. A three-step industrial approach
    is formed for

    designing, implementing, and validating a solution for smart strawberry irrigation
    in greenhouses and

    keeping the corresponding data at the edge of the network at the same time: (i)
    A small-scale smart

    irrigation prototype solution with oﬀ-the-shelf hardware and software equipment
    is tested and evaluated

    on various types of plants for gaining useful insights for deployments on a large
    scale. (ii) A reference

    network architecture is designed for targeting smart irrigation and edge data
    distribution speciﬁcally for

    strawberry greenhouses. (iii) A large-scale system in an actual strawberry greenhouse
    environment is

    developed in Greece, incorporating the proposed reference architecture [15].

    Edge computing is proposed for addressing the issues by taking advantage of computing
    resources in

    the edge of the network. The issues such as an edge mobile device make it easier
    to achieve low end-to-end

    latency, high bandwidth, and low jitter to services located on the edge network.
    An edge can enforce the

    privacy policies of its owner prior to the release of the data to the cloud through
    edge analytics. If a cloud

    service becomes unavailable due to network failure, cloud failure, or a denial-of-service
    attack, a fallback

    service on a nearby edge can temporarily mask the failure. Cloud services, partial
    analysis, and control

    functions are extended to the edge nodes from the cloud data center. Edge nodes
    facilitate the timely

    monitoring of sensors in smart farming by the reduced latency and enhanced data
    transmission. Due to

    these factors, edge computing is applied through farming [16,17]. A three-tier
    open-source software plat-

    form we proposed by authors, and the platform enhanced the precision agriculture
    by introducing edge

    computing and fog computing. An network functions virtualization (NFV)-based approach
    is deployed for

    performing the local operational decisions at the edge level for mitigating the
    inﬂuence of network failures

    while using cloud data centers [18]. For control processing in smart farming,
    a platform enabling cost-

    eﬀective sensor/actuator network based on IoT, utilizes edge computing [19,20].

    The authors in ref. [21] predicted the soil moisture using a mathematical model
    that measures the

    values given by a sensor matrix on the ground. Due to the huge interval in measurements
    (10 minutes), the

    model presented estimated error by more than 10%. This methodology has incorporated
    the online

    approach by making the sensors to send data every minute to edge devices without
    time-based interruption.

    The authors of ref. [22] applied a combinative approach of using ﬁeld sensor network’s
    data along with

    weather forecast station’s data for the management of optimality in water conditions
    for the enhanced

    growth of grapes. The generated data are forwarded to a web server, which displays
    graphics without

    statistical analysis of such data. The analysis must be performed a posteriori
    by the user.

    The watering mechanism for a plant via IoT methodology is devised by the proposed
    smart irrigation

    model without acquiring any pre-processed data. A prototype application is developed,
    which gets adapted

    to the parameters needed in irrigation after a couple of human-made irrigations.
    With the usage of various

    ML algorithms, several tests are devised for manual and automated irrigations
    for the performance evalua-

    tion. After the evaluation using four diﬀerent ML algorithms such as logistic
    regression (LR), K-nearest

    neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting regression
    trees (GBRT), it is found

    that GBRT outperforms other algorithms. To analyze the overall performance, a
    test bed for the sensor edge,

    mobile client, and the decision service on the cloud is established. Two diﬀerent
    indoor species are selected

    as test items for the prototype, namely, Peace lily and Sardinia. The outcomes
    were quite good, and it is

    inferred that the prototype has learned the patterns of irrigation and making
    decisions automatically with a

    high rate of accuracy [23].

    IoT-enabled edge computing model for smart irrigation system

    

    635

    The authors from ref. [24] adopted the deep learning methodology for detecting
    the type and the

    category of the plant using an automated plant irrigation system. The water necessity
    of the plant is

    determined using the recognition of predeﬁned set of plant images and data set
    acquired from farm. It

    utilizes the database for fetching the irrigation information after the recognition
    process is completed.

    Modeling the training processes are time consuming as voluminous set of images
    needs to be stored.

    The authors in refs [25,26] incorporated ML methods in the irrigation decision
    support model using a

    pre-processed irrigation data set. A model is developed for learning the irrigation
    needs of any plants

    progressively rather than using a readily available dataset. Several ML algorithms
    are evaluated with their

    precision for concluding the irrigation decisions. Manual irrigations are performed
    two times before making

    precise decisions. Due to the dynamicity in model, data processing is done progressively,
    and it can be

    applied to several plants having varying irrigation conditions. There is a need
    for the learning model that

    can be trained by itself using a comparatively lighter learning process using
    environmental parameters that

    do not need larger storage in the system but need higher computation. From the
    aforementioned survey for

    making a precise decision with instant computation locally, edge computing needs
    to be integrated into the

    irrigation system. This article is directed towards presenting a platform that
    implies IoTs and edge com-

    puting in monitoring soil moisture via sensors, data communication between sensors
    and edge devices, and

    an Analytics-as-a-Service cloud. It analyzes the collected data in the form of
    a density map of soil moisture

    for denoting the areas in need of greater or lesser frequency of irrigation. Here,
    density map does not refer to

    the geographical point data by satellite mapping, and it actually denotes the
    point of dry area and watery

    area through soil moisture detection point. This point is averaged among areas
    of irrigation to be done and

    the irrigation process is controlled with prediction of rainfall using the proposed
    system.

    3 The proposed system

    The proposed learning model for irrigation is implemented in a prototype IoT system
    that has four compo-

    nents: (i) Edge node layer – This layer consists of sensors, actuator, and two
    microcontrollers. In this layer,

    edge node acquires the sensor data from the surroundings and controls the actuator
    for actuating water

    pumps to start irrigation. (ii) Edge server layer – This layer consists of Raspberry
    Pi that act as edge server

    and capable of multitask processing. Here, edge server controls the edge nodes
    for sending signal and

    receiving data at regular interval of time. It is also connected to the cloud
    server for receiving developed and

    trained machine learning model to be deployed and make irrigation decision for
    controlling edge nodes.

    (iii) Edge service layer – This layer is deployed in the edge server and it is
    responsible for controlling the

    whole system through a developed web dashboard. The dashboard has live feed data,
    control of edge

    nodes, and cloud services access. This service layer also has the control access
    of the proposed machine

    learning model. (iv) Cloud server layer – This layer composed of cloud services
    and cloud storage where its

    role is to train the machine learning model and store the data in database. It
    sends the trained proposed

    model to the edge server for decision-making regarding irrigation scheduling.
    The comprehensive inter-

    connections in the system are shown in Figure 2. The proposed IoT-based smart
    irrigation system includes

    ﬁve major components: ﬁeld deployed module, Web-based interface, Web API weather
    input, soil moisture

    prediction mechanism, and edge communication model.

    3.1 Field deployed module

    In the ﬁeld requirements, a wireless sensor network of the sensor nodes needs
    to be deployed as shown in

    Figure 3. Here, ﬁeld data collection device accommodates four diﬀerent sensors:
    Capacitive Soil Moisture

    Sensor V2.0, DS18B20 Water Proof Temperature Sensor Probe for soil temperature,
    ultraviolet (UV) Light

    Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511 Analog
    Output Ultra-Violet

    636

    

    S. Premkumar and AN. Sigappi

    Light Sensor Module. An Arduino Mega connected to Raspberry Pi 4 Model-B read,
    the output of these

    sensors where the program is developed in Python for the Pi model to fetch the
    hourly data from sensors

    and store the data in MongoDB [27] database. It is then synchronized with the
    server database using the

    developed web service. A Wi-Fi-enabled Arduino controls the water pump connected
    to a relay switch.

    Figure 2: Components of the proposed system.

    Figure 3: Real-time prototype of the proposed edge model.

    IoT-enabled edge computing model for smart irrigation system

    

    637

    For the real time monitoring, a trigger is made for controlling the web service
    from the responsive web-

    based interface. The irrigation decisions are checked periodically by the proposed
    model performed in the

    server. The water pump is actuated, and irrigation process is started only if
    the server makes any irrigation

    decision. A wireless sensor network (WSN) [28] scenario with ZigBee [29] technology
    can be implemented

    for a large farming area in which several sensor nodes can be aﬃxed in the speciﬁed
    area and every sensor

    node possesses sensors similar to a standalone device. Then, the Arduino Mega
    reads the sensor output

    connected to ZigBee for transferring data to Gateway Node for aggregating the
    received data and storing it

    in MongoDB locally and also for transferring the data via web service to the edge
    server.

    3.2 Web-based interface

    The proposed framework consists of a web-based application to allow farmers visualize
    the growing data

    and interacting with the garden in real time. In addition, users can also be able
    to examine and analyze the

    historical growing data, if needed, through functionalities such as irrigation
    control, motor control predic-

    tion model deployment, and manual data entry implemented in this web application.
    Here, Node.js was

    chosen for developing the web application [30,31], while MongoDB [27] was utilized
    as the database system.

    Data stored in the database, which is deployed in the cloud, will be used for
    further data analysis in the

    future. The web application’s functions are designed following a software design
    pattern called model-

    view-controller (MVC) as shown in Figure 4. In the frontend, ChartJS is used to
    represent data through

    dynamic charts. The web application is also used as an interface to manage all
    the physical devices/

    actuators in the garden. To deploy the web-server to the cloud, a cloud platform
    as a service (PaaS), namely,

    Heroku, had been utilized. Heroku is a cloud platform that provides platform as
    a service (PaaS), facilitates

    the creation of applications and deploying these online rapidly [32,33]. It also
    enhances scalability and

    functionality by integrating several add-on services. The ﬁeld data are sent to
    the server by Raspberry Pi

    using this web service. This web service manages the network outage/ﬂuctuation
    during data synchroniza-

    tion from the ﬁeld device to the server by taking the help of ﬂag settings at
    the database level. The interface

    facilitates the scheduling of irrigation along with visualizing real time sensors
    and predicted soil moisture

    for upcoming days and precipitation information. By using the denoted threshold
    value of soil moisture

    suggested by agronomists, the irrigation can be scheduled by the user. The system
    maintains the threshold

    value depending on the predicted pattern of soil moisture and precipitation information.
    The process of

    irrigation is initiated automatically and stopped after the speciﬁed threshold
    value generated from the

    proposed algorithm of soil moisture when it is reached.

    Figure 4: Web interface for the irrigation system.

    638

    

    S. Premkumar and AN. Sigappi

    3.3 Web API weather input

    The weather prediction data are collected by a web service developed in Python.
    The forecast data such as

    humidity, temperature, ultra violet index, precipitation, and cloudiness of web
    forecasting portals like

    Open Weather API are aggregated by the developed web service [34]. These portals
    provide the forecasted

    information in HTML, XML, or JSON format. The predicted data with JSON format
    are read by the developed

    web and stored in database at the edge server, which is concerned in the prediction
    algorithm. Also, these

    data are utilized as testing dataset in the ML model for predicting the soil moisture.

    3.4 Soil moisture prediction mechanism

    An algorithm for predicting the soil moisture based on data derived from ﬁeld
    sensors and weather fore-

    casting using the combination of supervised and unsupervised machine learning
    techniques has been

    developed underpinned by regression algorithms and k-means clustering for estimating
    the diﬀerence/

    change in soil moisture owing to weather conditions. Many regression algorithms
    are compared against

    each other and infusing each of them with k-means to check the preciseness in
    mean square error (MSE),

    R2, accuracy and mean absolute percentage error (MAPE) for prediction of soil
    moisture of upcoming days

    with the help of sensor data and weather forecasting days. The information about
    soil moisture for the

    upcoming days and suggestions for irrigation in accordance with the prescribed
    levels of soil moisture and

    predicted precipitation values, thereby saving energy and water, is presented
    by the algorithm. The infor-

    mation generated from the device and the predicted values from the algorithm soil
    moisture prediction

    hybrid algorithm (SMPHA) are stored in the server.

    3.5 Edge communication model

    The communication protocols in the proposed framework are ﬂexible and transparent
    in nature for

    accepting both wired and wireless methodologies. For the maximum utilization of
    potentiality in edge

    computing components, the communication among various components in the edge-IoT
    system requires

    intense probing by using the versatility among the devices in network edges. For
    transferring the data

    gathered from pivot sensors, a communication technology such as Zigbee [35] is
    needed for the irrigation

    systems. Therefore, the communication component in the proposed work is classiﬁed
    into three main areas

    as shown in Figure 5. The Message Query Telemetry Transport (MQTT) protocol is
    used for the

    Figure 5: Proposed edge communication model.

    IoT-enabled edge computing model for smart irrigation system

    

    639

    communication in the proposed system. The analysis in ref. [36] presented seven
    IoT messaging protocols

    (MQTT, CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols
    that play a

    major role in smart farming. The authors have concluded that MQTT proved to be
    the most secure protocol

    after probing all the protocols with respect to latency, energy and bandwidth
    requirements, throughput,

    reliability, and security. Moreover, MQTT is secure in both end-to-end architecture
    and gateway server

    architecture. In an MQTT setup, a MQTT server termed as MQTT broker executes on
    the IoT solution [37].

    Under a common identiﬁer, a “publisher” and a “subscriber” link among themselves
    to this broker. In the

    IoT solution, publishers and subscribers are the IoT devices and IoT hubs or control
    devices, respectively.

    When the publishers have new data for recording, the data are published to the
    broker. The broker then

    ﬂags that it has new publisher data, and the corresponding data are read by the
    subscriber. Then, the

    subscriber analyzes the data and reacts accordingly.

    The ﬁrst level accomplishes with connecting the end users to system with the help
    of mobile or web-

    based applications through the Internet. The next level (cloud computing server)
    deals with the connection

    of web server and MQTT broker for directing the user requests and other components
    at the edge landscape

    or from the farms to the right cloud-based services like displaying the real time
    status of the farm for the

    users, triggering a new deployment of the updated ML model to the corresponding
    edge node. The third

    level (farming area) is directed toward the deployment of sensors and IoT devices
    (actuators) for commu-

    nicating with other components in the entire system.

    4 Deployment of soil moisture prediction hybrid algorithm

    The watering mechanism of the plant has diﬀerent approaches in the proposed model.
    Primarily, the system

    is trained with manual irrigations datasets during the process of learning with
    respect to suggestions

    deﬁned by agronomists. The model is trained to learn the needs of irrigation in
    the ﬁrst level of deployment

    in cloud without the inclusion of pre-processed data. After acquiring the required
    data and training, the

    proposed system is initiated to grasp the plant’s watering needs by undergoing
    plenty of manual irrigations.

    Thereafter, manual irrigation is not required and the system makes automated decisions
    in watering using

    the gathered data and the application of ML methods. The proposed model then decides
    the irrigation

    strategies automatically using ML methods without the need including collected
    datasets in the automatic

    irrigation process. The proposed model can be improved through the learning process
    when the number of

    precise irrigation inputs is provided to the model at each stage of training.

    The decision-making procedure is developed with two modules for irrigation strategies
    according to the

    soil moisture prediction for upcoming days. The ﬁrst module deals with training
    the model in cloud with

    manual irrigation datasets through steps such as data collection, data preprocessing,
    training, and model

    development. The system acquires values of air temperature (TH), soil temperature
    (SMT), soil moisture

    (SM), humidity (HU), and ultraviolet rays (UV) periodically from the physical
    environment in the data

    collection stage, which is essentially required for arriving at the watering decisions.
    Also, the time of

    performing the manual irrigation is recorded in the database. These data are timestamped
    and stored in

    as datasets to aid in making decisions for knowing the time of irrigation. In
    the next step of pre-processing,

    inconsistencies are eliminated and outliers caused by sensor errors are detected
    from the irrigation dataset,

    thereby helping in the removal of broken data. The training stage involves the
    application of supervised

    machine learning (ML) algorithms. Here the regression algorithms such as support
    vector regression (SVR),

    multiple linear regression (MLR), lasso regression (LR), decision tree regressor
    (DTR), random forest

    regressor (RF), and XG-boost regressor (XB) techniques are used for the deployment.
    The regression algo-

    rithms are trained using the collected datasets. Finally, through training, regression
    models are created,

    namely, SVR model, MLR model, LR model, DTR model, RF model, and XB model that
    are been combined

    with the second module for decision-making.

    The second module caters to the prediction of irrigation for upcoming days by
    infusing the weather data

    as an input to the regression trained models. The live datasets from the weather
    API for future prediction of

    640

    

    S. Premkumar and AN. Sigappi

    soil moisture variable are used. The dependent variables from weather forecast
    data like temperature (TH),

    humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the aforementioned
    model for soil

    moisture prediction. Then, the regression trained model is evaluated and deployed
    using the weather

    testing data for the prediction of soil moisture in accordance with the precipitation.
    After the prediction

    of data for the upcoming days, these developed regression models are combined
    with unsupervised ML

    algorithm named k-means clustering for estimating the changes incurred in soil
    moisture prediction due to

    the impact of weather conditions. Further, each regression models with k-means
    algorithm are evaluated

    for performances in terms of irrigation decision-making process as shown in Table
    1. The combined algo-

    rithms are estimated through MAPE, MSE, R2, execution speed, power consumption,
    and accuracy. The

    estimation and computation of these parameters are detailed by the authors in
    ref. [38].

    XGBoost + k-means (XB+k-means) approach provides more accuracy with less MSE comparatively
    and

    also the R2 with 98% in soil moisture prediction using combined approach is given
    in Table 1. It is evident

    that the proposed combination performs better when compared to other regression
    + k-means-based

    approaches. XB + k-means-based hybrid machine learning algorithm is applied in
    irrigation planning

    module on account of aforementioned performance metrices of ML. Although it performs
    moderately in

    terms of execution time and power usage, it is selected for the deployment in
    edge computing as it has

    better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed
    that the prediction of soil

    moisture for the upcoming days from the proposed algorithm (XB+k-means) is nearer
    to the actual value as

    shown in Table 2, and hence, XB+k-means is selected for the implementation of
    SMPHA in edge-based

    irrigation scheduling.

    4.1 Hardware setup

    IoT system is crucial to handle, collect, and transfer the data to the computing
    nodes at the edge or in the

    cloud. These devices are connected to the edge nodes through wireless communication
    protocols like

    ZigBee. It is used in reducing the latency and loss of data. An Arduino micro-control
    unit controls the

    combined IoT sensors and actuators at the same part of a ﬁeld into a cluster,
    each connected to a Raspberry

    Table 2: Comparison of predicted SM value with actual SM value

    Date

    Average SM value

    from sensor

    Average predicted SM

    value (XB+k-means)

    28-09-2021

    35.23

    34.04

    29-09-2021

    36.41

    37.20

    30-09-2021

    31.57

    30.46

    01-10-2021

    34.66

    33.15

    02-10-2021

    36.73

    37.12

    03-10-2021

    32.88

    33.01

    Table 1: Comparison of performance metrices obtained from various ML algorithms

    Algorithms used

    Accuracy

    R2

    MSE

    MAPE (%)

    Execution time

    Power (J)

    SVR + k-means

    0.96

    0.96

    0.25

    1.98

    0.06078

    1164.85

    MLR + k-means

    0.94

    0.88

    0.31

    2.15

    0.02075

    429.30

    LR + k-means

    0.95

    0.94

    0.32

    2.23

    0.02482

    351.35

    DTR + k-means

    0.93

    0.95

    0.29

    1.62

    0.15687

    914.70

    RF + k-means

    0.95

    0.91

    0.27

    1.57

    0.16745

    1475.13

    XB + k-means

    0.97

    0.98

    0.20

    1.08

    0.03547

    537.87

    IoT-enabled edge computing model for smart irrigation system

    

    641

    Pi that acts as an edge node in processing the gathered data and controlling the
    actuators. For example,

    Figure 2 shows an edge architecture with a Raspberry Pi connected to two components:
    Arduino Uno and

    Arduino Mega units via ZigBee connection. The ﬁrst Arduino Mega node is responsible
    for collecting data

    from sensors and the second one is for controlling the actuators in the ﬁeld.
    Depending on the sensor type

    with collecting Arduino unit, the sensors are connected via analog or digital
    PWM pins while controlling

    Arduino uno joins with actuators in the ﬁeld and controls (turn on/oﬀ) them in
    accordance with upper

    layers (from the edge web server). The trained (cloud) and deployed ML model in
    edge nodes provides the

    necessary instructions to the edge nodes.

    4.2 Web layer setup

    The deployment of web server assists the user in planning and managing the irrigation
    system. It visualizes

    the crucial information of factors like temperature of air and soil, UV, humidity,
    and soil moisture in live

    irrigation with real time updates in the form of various charts. In accordance
    with the selected ﬁeld, the web

    application redirects the user to the ﬁeld’s dashboard as shown in Figure 4. The
    dashboard consists of ﬁeld

    parameters as well as control signals for activating all the physical devices/actuators
    at the garden layer.

    These signals are denoted as switch buttons, and each switch controls (turn on/oﬀ)
    a particular kind of

    actuator (for instance, water pump to start and stop the irrigation). The user
    interface facilitates remote

    controlling of the ﬁeld by just clicking on the buttons as shown in Figure 4.

    4.3 Edge layer setup

    The edge node acts as a computing center where incoming data are analyzed and
    fed as the input vector to

    the ML model for processing and to return the control signals for activating or
    deactivating the actuators

    placed at the farm. Edge node processes the physical data (real time) at every
    end device such as the

    collected and processed data via the Raspberry Pi nodes presented in the proposed
    scheme. The prediction

    model is designed using TensorFlow API and trained, tested on Google Colab in
    this work. Amazon Web

    Service (AWS) oﬀers a library named Boto3 having many APIs to upload and download
    objects. After the

    development of model, it is transferred to Amazon S3, a service provided by AWS.
    The edge node utilizes the

    trained model from S3 for analyzing the sensed data acquired from garden’s sensors.
    The decision is

    delivered based on real time data analysis at the edge node and transmitted to
    Arduino nodes in the ﬁelds

    landscape immediately for controlling the actuators. In another ﬂow, the data
    collected from sensors are

    ﬁltered so as to keep only the modiﬁed data at the edge node before being sent
    back for mitigating the

    communication cost to the database in the cloud. These data are used in the updation
    of the ML model to

    enhance its eﬃciency.

    4.4 Analytics setup

    The main goal of this experiment lies in gathering the various physical parameters
    of a farming land via

    sensors and utilizing the fetched data along with weather forecast information
    for developing an algorithm

    using hybrid machine learning approach to infuse higher accuracy in predicting
    the soil moisture for the

    upcoming days. As discussed in Section 4, for the proper planning and provisioning
    of optimal irrigation,

    the algorithm provides a predictable estimate of soil moisture with the assistance
    of various statistical

    measures as shown in Table 1. The measures are adopted for estimating the appropriateness
    and error rate

    of the proposed algorithm. It is inferred from the experiment that, optimal irrigation
    is feasible using a good

    642

    

    S. Premkumar and AN. Sigappi

    estimation (close to the actual value) of the soil moisture (Table 2), with the
    support of ﬁeld data and

    forecast information, thereby utilizing the natural rain eﬃciently.

    The SMPHA ML model is interdependent on dynamic changes in weather environment
    where the

    models deployed on edge nodes need to change the controls accordingly after model
    gets trained con-

    tinuously. For the process of retraining, the trained model needs to be updated.
    The parameters such as TM,

    HU, ST, UV, SM about grown plants are logged for the training purpose, and these
    generated datasets are

    recorded from the already developed manual mode system [39]. The growth of the
    Indian Mundu Chilli [40]

    is taken for the observation from the ﬁrst stage to the last grown stage for 95
    days. While retraining the

    model, the training is carried in cloud without causing eﬀect to the functionalities
    at edge nodes. A signal is

    transferred to the corresponding edge server for triggering the task of updating
    the SMPHA model from the

    web server. At that time, the newly trained model is downloaded to replace the
    existing one at the con-

    sidering edge server. From then, the ML model at the edge server is called to
    be updated with the real-world

    knowledge and is ready for its garden controlling tasks (to apply in the next
    farming season).

    4.5 Work ﬂow

    The ﬂowchart in Figure 6 depicts the working of the proposed system based on the
    decision support system

    that is beneﬁcial for irrigation needed for the growth of vegetables. The chilli
    plant is grown in a growbag

    attached with sensors and Pi as shown in Figure 3 and monitored for 95 days of
    data collection. To bring out

    optimality in the irrigation system, features relating to climate, soil, crop,
    and ﬁeld infrastructure are to be

    considered. To provide several recommendations in the production of vegetables,
    decision support systems

    (DSSs) are designed, which process voluminous information [39]. This proposed
    work is the extension of

    soil moisture diﬀerences (SMD) model [41] developed for soil moisture prediction.
    The threshold values of

    soil moisture are used in the SMD model where the system schedules the irrigation
    date based on the

    predicted soil moisture and weather forecast (precipitation) information automatically
    using SVR+ k-means

    modeling. Therefore, in the extension of the aforementioned work, further more
    number of sensors are used

    to log soil moisture value, which is averaged in the proposed model. This model
    is developed in two

    divisions of ﬂowchart as shown in Figure 7, where both are interconnected. It
    is observed that the prediction

    of XB + k-mean approach provides better results as presented in Table 2.

    The ﬁrst phase of the ﬂowchart describes the hybrid algorithm for the soil moisture
    prediction (SMPHA)

    using the combination of XB + k-means algorithm. During the data collection step,
    the sensor data for the

    parameters, namely, TM, HU, ST, UV, and SM, are collected. During preprocessing,
    null values and outliers

    are removed and the preprocessed data are used to train the XG-Boost model. The
    developed model is then

    trained with variables of live weather features (TM, HU, UV, PC) obtained from
    Weather API for the

    prediction of SM data. These data are given as input to k-means clustering algorithm
    to predict the soil

    moisture, which is deﬁned as SMPHA value to be infused in the next phase of the
    ﬂowchart. The second

    phase of the ﬂowchart deﬁnes the automatic irrigation planning setup. The setup
    starts obtaining the soil

    moisture maximum (SMMax) and soil moisture minimum (SMMin) values in the dashboard
    for setting the

    maximum and minimum level of soil moisture. Then, the current soil moisture (CuSM)
    is sensed and

    compared against the threshold SMMin. If the resulting value is less than SMMin,
    the process proceeds

    with SMPHA. On the contrary, it stops the irrigation process by sending 0 to the
    relay. In SMPHA, the

    nearest precipitation date is selected and it is assigned to the predicted soil
    moisture (PSM). The SMMax is

    decided by ﬁnding the minimum of (PSM + SMMin, SMMax), and the predicted SMMax
    is further checked

    against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to
    the relay as a signal to start

    irrigation. If the condition fails, then it sends 0 to stop irrigation. The process
    of automatic irrigation ends

    by forecasting the irrigation schedule in accordance with the live weather parameters.

    IoT-enabled edge computing model for smart irrigation system

    

    643

    5 Experimental setup and evaluation

    The test bed is developed and deployed, and the data are collected for the analysis
    in irrigation manage-

    ment. Here, Heroku cloud platform is used to deploy the cloud web server. The
    same cloud is also installed

    at a local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n
    connections to denote the edge

    nodes. JMeter application is used to get sequential accesses to the web page from
    various users for eval-

    uating the network parameters. The speciﬁcation of these servers is given in Tables
    3 and 4.

    We evaluated the performance of the proposed IoT-based smart farm on two diﬀerent
    platforms,

    namely, in the cloud and on the local computer to show the feasibility and the
    beneﬁt of the edge com-

    puting scheme. Further many parameters are considered for evaluation and discussed
    in the next section to

    show that edge deployment is better than cloud.

    Figure 6: Flow chart of the proposed edge model.

    644

    

    S. Premkumar and AN. Sigappi

    5.1 Evaluation

    A hybrid machine learning methodology is used in evaluating the ﬁrst stage of
    the proposed model. The

    predicted value of the soil moisture is better in terms of their accuracy and
    error rate. From the comparison

    of the other ML algorithms as shown in Table 2, XB + k-means performs better and
    taken further to be

    deployed in edge and cloud to check its eﬃciency with each other. Therefore, for
    analyzing the eﬃciency of

    the edge server in accordance with the proposed hybrid algorithm SMPHA is evaluated
    in terms of the time

    taken to train the ML model in edge and cloud. In this experiment Raspberry Pi
    is used to train the SMPHA

    model with 196,400 rows, that is, input data sample size and takes around 1,710,000
    ms (approximately

    28.5 min). The same model when it is trained in Google Colab cloud environment,
    it takes 204,000 ms

    (approximately 3.4 min) as depicted in Table 5. The main purpose is to run the
    trained model on edge not to

    train the model at edge. So due to the lack of computing capability at the edge,
    it takes more time to train

    the model, but it can be ignored as it does not aﬀect the purpose of the proposed
    model. Here, edge is

    introduced to obtain the task of computing from the cloud (i.e., oﬄoading the
    task) by making the system

    more edge-oriented deployment. It can be accomplished rapidly as it requires only
    14 s to download a

    trained SMPHA model from the cloud to the edge node with a size of 3,101 kb as
    given in Table 5. The time to

    Figure 7: Average response time with 10 test scenarios.

    Table 3: Conﬁguration of raspberry Pi

    CPU

    Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5 GHz

    RAM

    8 GB LPDDR4-3200 SDRAM

    Network

    2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE, Gigabit Ethernet

    Pinboard

    8 GB LPDDR4-3200 SDRAM

    Operating system, language

    Raspbian , Python 3

    Table 4: Conﬁguration of Heroku cloud

    Country

    United states

    Service

    Amazon web service S3

    Processor

    2.4 GHz Intel Xeon E5-2676 v3 Processor

    CPU Power

    8 GB

    Virtual CPUs

    3–5

    IoT-enabled edge computing model for smart irrigation system

    

    645

    download varies according to the size of the trained model. So, from this process
    it can be inferred that

    downloading the trained model saves time when compared to training the model at
    the edge. Through this

    in real time, deployment of the trained SMPHA model in edge is better compared
    to deployment in cloud

    services. Furthermore, network parameters like latency, throughput, bandwidth,
    and response time are

    adopted to measure the performance improvements in edge computing.

    The performance metrices taken into account are latency, bandwidth, and response
    time [42]. The

    latency of an application is the product of two factors: computing latency and
    transmission latency. The

    time spent on data processing and transmission between end devices to cloud servers
    is termed as com-

    puting latency and transmission latency, respectively. The computational capacity
    of the system decides

    the computing latency as the network servers possess a considerable amount of
    capacity to make the data

    processing faster, whereas the sensors come with limited computing capacity. The
    latency in transmission

    is increased by the end devices and cloud servers. Bandwidth: As large number
    of sensors are deployed in

    IoT, data generated would be huge that consumes an intense range of bandwidth
    and leads to several

    problems such as delay in transmission and loss of packets. It becomes unacceptable
    for the data to be

    transferred directly to cloud servers without applying compression. Therefore,
    data preprocessing and

    aggregation are needed for IoT gateways before redirecting them to remote cloud
    servers. Then, the issue

    to be confronted is to control the traﬃc ﬂow by migrating data processing and
    aggregation tasks optimally

    to decrease the bandwidth needs of the end users while maintaining the data quality.
    Response time: The

    total response time is calculated by adding up transmission and processing time.
    The local deployment of

    the proposed model for controlling IoT-based irrigation are deployed on two modes:
    (i) Cloud mode: The

    developed SMPHA model is implemented in the cloud communicating with IoT sensors
    nodes directly to

    manage the irrigation process. The data are stored and processed at the cloud
    server itself where it uses

    Heroku platform. (ii) Edge mode – Raspberry Pi is deployed as an edge server that
    involves in processing of

    the SMPHA model controlling the IoT sensor nodes. Here, the data are stored and
    processed locally within

    the edge servers. This SMPHA model from both the edge and cloud does the job of
    controlling the actuators

    to initiate and quit the working of water ﬂow motors. Through this deployment
    in both the environments,

    performance of edge server and cloud server can be checked in terms of latency,
    throughput, bandwidth,

    and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This
    performance metrices is

    not feasible to calculate while deploying in real time, so the aforementioned
    scenarios of two modes are

    virtually created by generating many request and response threads between the
    servers. This sampling,

    load test, and distributed testing are conducted through JMeter application [43]
    and also veriﬁed with

    Wireshark [44] in cloud servers. The test scenario is created here by data of
    sending and receiving sampling

    data between cloud to IoT sensors and between Edge to IoT sensors. The sampling
    data considered in this

    work refer to the approximate number of requests generated by Arduino to cloud
    and Arduino to Raspberry

    Pi that are calculated in real time. The test scenario is divided into 10 days
    of sampling data collected for

    each day. The evaluation results are depicted for latency and response times in
    10 days perspective. In

    latency parameter, edge service has decreased by an average of 77.85% time compared
    to the with cloud. In

    the same manner, the response time of edge service is also decreased by 74.09%
    time compared to cloud

    service. In throughput calculation, sampling data are calculated for an hourly
    basis for the 10 hours data in

    a day. From the hourly comparisons of throughput value, edge outperforms with
    67.17% high Mbps usage.

    Through this analysis as shown in Table 6, it is evident that the proposed edge
    computing methodology

    deployed in Raspberry Pi or in local computers outperforms the cloud-oriented
    approach.

    Table 5: Comparison of model training time

    Edge

    Cloud

    Model training time

    28.4 min

    3.4 min

    Downloading time

    Not applicable

    14 s

    646

    

    S. Premkumar and AN. Sigappi

    Finally, to illustrate the eﬃciency of resource management in edge computing,
    CPU and memory

    utilization are considered for the analysis as both factors rely on the service
    execution model and the

    computational needs of the services being ﬁred from oﬀ-loaders. Figure 10 depicts
    the utilization of CPU

    and RAM on the Raspberry Pi acting as an edge node in two cases: with and without
    the deployment of

    SMPHA model on it. As shown in Figure 10, the SMPHA model aﬀects the CPU of the
    Raspberry Pi node

    signiﬁcantly as it consumed around 41.2% of the CPU compared to only 3.5% when
    it does not host the

    Figure 8: Average latency with 10 test scenarios.

    Figure 9: Average throughput value with 10 h test scenarios.

    Table 6: Performance metrices for cloud and edge services

    Performance metrices

    Cloud service

    Edge service

    Throughput (Mbps)

    0.04944

    0.08265

    Latency (ms)

    1415.8

    313.6

    Response time (ms)

    1519.6

    393.8

    Bandwidth (bps)

    86

    1,365

    IoT-enabled edge computing model for smart irrigation system

    

    647

    SMPHA model. However, the memory (RAM) utilization in both the cases (with and
    without deployment of

    an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization
    does not have

    much diﬀerence in with and without SMPHA. It is worthwhile to note that, the CPU
    utilization is still much

    lower than the 50% of total CPU capacity in Raspberry Pi. Therefore, it becomes
    feasible for adopting edge

    server implementation in the proposed irrigation system.

    6 Conclusion

    This article proposed a novel approach to edge-based irrigation system to facilitate
    decision-making on

    watering the plants on scheduled time. The proposed approach applying IoT with
    an edge computing

    framework enables the farming system to adapt to the changes in environmental
    conditions automatically

    and eﬃciently. The process of automatic irrigation regulates irrigation according
    to the live weather para-

    meters for forecasting the irrigation process. Soil moisture prediction was performed
    using major regression

    algorithms that are again combined with k-means clustering for estimating the
    changes incurred in soil

    moisture prediction. These techniques were compared through metrics such as MAPE,
    MSE, speed, and

    power consumption from which XB + k-means was found to perform better. The XB
    + k-means algorithm

    was further used for the implementation of decision mechanism on the developed
    edge computing model.

    The proposed edge model saves the data communication cost and reduces the response
    time of IoT services.

    It can be deployed on existing devices on the network edges serving as edge nodes,
    thereby reducing the

    overall implementation cost of a large-scale IoT system. The edge-based approach
    was found to perform

    better than the cloud-based approach in terms of response time, latency, throughput,
    and bandwidth

    usage. Finally, the edge model was analyzed through CPU and memory usage while
    running with and

    without the algorithm. In both cases, the memory utilization is almost lower to
    total available resource of

    the edge device. From this, edge device can allocate its remaining resource for
    other computing services,

    which increases the eﬃciency of edge computing device. The number of end edge
    nodes can be increased

    according to the ﬁeld area and then to check the potency of the system.

    Conﬂict of interest: The authors declare no conﬂict of interest.

    Data availability statement: All data that support the ﬁndings of this study are
    included within the article.

    Figure 10: CPU and memory utilization with and without SMPHA.

    648

    

    S. Premkumar and AN. Sigappi

    References

    [1]

    India: Issues and Priorities for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/

    2012/05/17/india-agriculture-issues-priorities.

    [2]

    India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.

    [3]

    Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR, Baylis M, et al. Scientists’
    warning to humanity: Microorganisms

    and climate change. Nature Rev Microbiol. 2019;17(9):569–86. doi: 10.1038/s41579-019-0222-5.

    [4]

    Huong NTL, Bo YS, Fahad S. Economic impact of climate change on agriculture using
    Ricardian approach: A case of

    Northwest Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. doi: 10.1016/j.jssas.2018.02.006.

    [5]

    Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A, Malyan SK. Global warming impacts
    of nitrogen use in agriculture: An

    assessment for India since 1960. Carbon Management. 2020;11(3):291–301. doi: 10.1080/17583004.2020.1752061.

    [6]

    Sarkar S, Chatterjee S, Misra S. Assessment of the suitability of fog computing
    in the context of internet of things. IEEE

    Trans Cloud Comput. 2018;6(1):46–59. doi: 10.1109/TCC.2015.2485206.

    [7]

    Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food security
    and food production systems. In: Field

    CB, Barros VR, Dokken DJ, Mach KJ, Mastrandrea MD, Bilir TE, et al., editors.
    Climate Change 2014: Impacts, Adaptation,

    and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working
    Group II to the Fifth Assessment Report of

    the Intergovernmental Panel on Climate Change Cambridge, United Kingdom: Cambridge
    University Press and New York,

    NY, USA; 2014. p. 485–533.

    [8]

    Lal R. Adaptation and mitigation of climate change by improving agriculture in
    India. In: S. SherazMahdi (Ed.), Climate

    Change and Agriculture in India: Impact and Adaptation. Cham: Springer International
    Publishing; 2019. p. 217–27.

    [9]

    Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research on implementation
    and deployment of IoT projects in

    smart cities. Hershey: IGI global, 2019.

    [10] Baylis A. Advances in precision farming technologies for crop protection.
    Outlooks Pest Manag. 2017;28(4):158–61.

    [11]

    Mulla D, Khosla R. Historical evolution and recent advances in precision farming.
    Soil-Speciﬁc Farming Precision

    Agriculture. Boca Raton: CRC Press; 2015.

    [12] Dutta L, and Basu TK. Extraction and optimization of leaves images of mango
    tree and classiﬁcation using ANN. IJRAET

    2013;1(3):46–51.

    [13] Kawai T, Mineno H. Evaluation environment using edge computing for artiﬁcial
    intelligence-based irrigation system. 2020

    16th International Conference on Mobility, Sensing and Networking (MSN). Tokyo,
    Japan: IEEE; 2020. p. 214–9.

    [14] Munir MS, Bajwa IS, Ashraf A, Anwar W, Rashid R. Intelligent and smart irrigation
    system using edge computing and IoT.

    Complexity. 2021;2021:1–16.

    [15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the
    edge of smart irrigation networks: A case study in

    strawberry greenhouses. Comput Netw. 2020;167:107039.

    [16] Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.

    [17] Shi W, Dustdar S. The promise of edge computing. Computer. 2016;49(5):78–81.

    [18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha Rodrigues
    G, Saquette LR, et al. Low-cost fog

    computing platform for soil moisture management. In: 2020 International Conference
    on Information Networking (ICOIN).

    Barcelona, Spain: IEEE; 2020. p. 499–504.

    [19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M, Mora-Pascual, J,
    Mora-Martínez, J. Developing ubiquitous sensor

    network platform using internet of things: application in precision agriculture.
    Sensors. 2016;16(7):1141.

    [20] Xu X, Liu X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement
    for smart cities in edge computing. IEEE Internet

    Things J. 2020;7(5):4084–91.

    [21] Wu X, Liu M. In-situ soil moisture sensing: Measurement scheduling and estimation
    using compressive sensing. In: 2012

    ACM/IEEE 11th International Conference on Information Processing in Sensor Networks
    (IPSN). Beijing, China: IEEE; 2012.

    p. 1–11.

    [22] Kameoka T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart
    sensing in a Vineyard for advanced

    viticultural management. In: Proceedings of the 2014 International Workshop on
    Web Intelligence and Smart Sensing.

    Saint Etienne France; 2014. p. 1–4.

    [23] Cagri Serdaroglu K, Onel C, Baydere S. IoT-based smart plant irrigation system
    with enhanced learning. In: 2020 IEEE

    Computing, Communications and IoT Applications (ComComAp.) Beijing, China: IEEE;
    2020. p. 1–6.

    [24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated plant recognition
    using deep learning. In: Proceedings

    of the 10th International Conference on Computer Modeling and Simulation - ICCMS2018.
    Sydney, Australia: ACM Press;

    2018. p. 87–91.

    [25] Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying
    machine learning on sensor data for irrigation

    recommendations: Revealing the agronomist’s tacit knowledge. Precision Agricult.
    2018;19(3):421–44.

    [26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A. IoT and machine learning
    approaches for automation of farm irrigation

    system. Proc Comput Sci. 2020;167:1250–7.

    [27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases. Int J
    Scientiﬁc Eng Res. 2016;7(5):1035–7.

    IoT-enabled edge computing model for smart irrigation system

    

    649

    [28] Ojha T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture:
    The state-of-the-art in practice and future

    challenges. Comput Electr Agricult. 2015;118:66–84.

    [29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara MA. Automated
    irrigation system using a wireless sensor

    network and GPRS module. IEEE Trans Instrument Measurement. 2014;63(1):166–76.

    [30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT system design with
    real time stream processing and data ﬂow

    integration. In: 2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok,
    Thailand: IEEE; 2019. p. 1–5.

    [31] Lv H, Wang S. Design and application of IoT microservices based on Seneca.
    USA: DEStech Transactions on Computer

    Science and Engineering, (icte.). 2016.

    [32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing using AES under
    HEROKU cloud. In: 2018 27th Wireless and

    Optical Communication Conference (WOCC). Hualien: IEEE; 2018. p. 1–5.

    [33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural model for a high-performance
    fog/edge/cloud IoT platform.

    In: 2019 IEEE 5th world forum on internet of things (WF-IoT.) Limerick, Ireland:
    IEEE; 2019. p. 633–8.

    [34] Weather API. Retrieved from https://openweathermap.org/api.

    [35] Drew Gislason. Zigbee wireless networking, 1st ed. Newnes, London: Elsevier
    Publisher; 2008.

    [36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing for MQTT applications.
    In: Virvou M, Nakagawa H, Jain LC. (Eds.),

    Knowledge-Based Software Engineering: 2020. Cham: Springer International Publishing;
    2020. p. 47–59.

    [37] Babun L, Denney K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms:
    Communication, security, and privacy

    perspectives. Comput Netw. 2021;192:108040.

    [38] Rastogi K, Lohani D. Edge computing-based internet of things framework for
    indoor occupancy estimation. Int J Ambient

    Comput Intell. 2020;11(4):16–37.

    [39] Premkumar S, Sigappi AN. Functional framework for edge-based agricultural
    system. In: AI, Edge and IoT-based Smart

    Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.

    [40] Phani Kumar J, Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan
    K. Genetic divergence among Ramnad

    mundu chilli (Capsicum annuum L.) genotypes for yield and quality. Electr J Plant
    Breeding. 2021;12(1):228–34.

    [41] Goap A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation
    management system using Machine learning

    and open source technologies. Comput Electronic Agricult. 2018;155:41–9.

    [42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud,
    fog and edge computing: A review, taxonomy,

    benchmarks and standards for future research. Internet Things. 2020;12:100273.

    [43] Sunardi A, Suharjito MVC architecture: a comparative study between Laravel
    framework and slim framework in freelancer

    project monitoring system web based. Proc Comput Sci. 2019;157:134–41.

    [44] Robert Shimonski. The wireshark ﬁeld guide, 1st ed. New York: Syngress Press,
    Elsevier; 2013.

    650

    

    S. Premkumar and AN. Sigappi

    '
  inline_citation: (Premkumar and Sigappi, 2022)
  journal: Journal of intelligent systems
  key_findings: The study found that deploying the XB+k-means machine learning algorithm
    on the edge device significantly reduced computing latency and increased responsiveness
    compared to deploying the algorithm on the cloud. Additionally, the edge-based
    approach outperformed the cloud-based approach in terms of response time, latency,
    throughput, and bandwidth usage.
  limitations: null
  main_objective: To propose an IoT-enabled edge computing model for automated irrigation
    management that utilizes machine learning algorithms to predict soil moisture
    and optimize irrigation schedules.
  pdf_link: https://www.degruyter.com/document/doi/10.1515/jisys-2022-0046/pdf
  publication_year: 2022
  relevance_evaluation: The study is highly relevant to the point being made in the
    literature review. It presents a specific implementation of an automated irrigation
    management system that incorporates IoT, edge computing, and machine learning
    techniques to predict soil moisture and optimize irrigation schedules. The system
    addresses the need for real-time data analysis, efficient water usage, and remote
    monitoring and control in modern agricultural practices.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Raspberry Pi, Edge Computing, Machine Learning, IoT
  title: IoT-enabled edge computing model for smart irrigation system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s23083880
  analysis: '>'
  authors:
  - Damilola Oladimeji
  - Kanupriya Gupta
  - Nuri Alperen Kose
  - Kubra Gundogan
  - Linqiang Ge
  - Lei Fan
  citation_count: 29
  explanation: The paper concentrates on the research on automated systems for real-time
    irrigation management. One of the key themes highlighted is the value of employing
    sensing technologies in conjunction with machine learning algorithms in the development
    of data-driven irrigation strategies. The paper also discusses the current state
    of the art in this field and identifies potential avenues for future study. The
    authors drew their study from other relevant literature about smart irrigation
    management, which aided in providing support and establishing the foundation for
    the paper.
  full_citation: '>'
  full_text: '>

    Citation: Oladimeji, D.; Gupta, K.;

    Kose, N.A.; Gundogan, K.; Ge, L.;

    Liang, F. Smart Transportation: An

    Overview of Technologies

    and Applications. Sensors 2023, 23,

    3880. https://doi.org/10.3390/

    s23083880

    Academic Editor: Nicoleta Cristina

    Gaitan and Ioan Ungurean

    Received: 27 February 2023

    Revised: 22 March 2023

    Accepted: 31 March 2023

    Published: 11 April 2023

    Copyright:

    © 2023 by the authors.

    Licensee MDPI, Basel, Switzerland.

    This article is an open access article

    distributed

    under

    the

    terms

    and

    conditions of the Creative Commons

    Attribution (CC BY) license (https://

    creativecommons.org/licenses/by/

    4.0/).

    sensors

    Review

    Smart Transportation: An Overview of Technologies

    and Applications

    Damilola Oladimeji 1,†, Khushi Gupta 1,†, Nuri Alperen Kose 1, Kubra Gundogan
    1, Linqiang Ge 2

    and Fan Liang 1,*

    1

    Department of Computer Science, Sam Houston State University, Huntsville, AL 77340,
    USA

    2

    School of Computer Science, Columbus State University, Columbus, GA 31907, USA

    *

    Correspondence: fxl027@shsu.edu

    †

    These authors contributed equally to this work.

    Abstract: As technology continues to evolve, our society is becoming enriched
    with more intelligent

    devices that help us perform our daily activities more efﬁciently and effectively.
    One of the most

    signiﬁcant technological advancements of our time is the Internet of Things (IoT),
    which interconnects

    various smart devices (such as smart mobiles, intelligent refrigerators, smartwatches,
    smart ﬁre

    alarms, smart door locks, and many more) allowing them to communicate with each
    other and

    exchange data seamlessly. We now use IoT technology to carry out our daily activities,
    for example,

    transportation. In particular, the ﬁeld of smart transportation has intrigued
    researchers due to its

    potential to revolutionize the way we move people and goods. IoT provides drivers
    in a smart city

    with many beneﬁts, including trafﬁc management, improved logistics, efﬁcient parking
    systems,

    and enhanced safety measures. Smart transportation is the integration of all these
    beneﬁts into

    applications for transportation systems. However, as a way of further improving
    the beneﬁts

    provided by smart transportation, other technologies have been explored, such
    as machine learning,

    big data, and distributed ledgers. Some examples of their application are the
    optimization of

    routes, parking, street lighting, accident prevention, detection of abnormal trafﬁc
    conditions, and

    maintenance of roads. In this paper, we aim to provide a detailed understanding
    of the developments

    in the applications mentioned earlier and examine current researches that base
    their applications on

    these sectors. We aim to conduct a self-contained review of the different technologies
    used in smart

    transportation today and their respective challenges. Our methodology encompassed
    identifying

    and screening articles on smart transportation technologies and its applications.
    To identify articles

    addressing our topic of review, we searched for articles in the four signiﬁcant
    databases: IEEE Xplore,

    ACM Digital Library, Science Direct, and Springer. Consequently, we examined the
    communication

    mechanisms, architectures, and frameworks that enable these smart transportation
    applications and

    systems. We also explored the communication protocols enabling smart transportation,
    including

    Wi-Fi, Bluetooth, and cellular networks, and how they contribute to seamless data
    exchange. We

    delved into the different architectures and frameworks used in smart transportation,
    including cloud

    computing, edge computing, and fog computing. Lastly, we outlined current challenges
    in the smart

    transportation ﬁeld and suggested potential future research directions. We will
    examine data privacy

    and security issues, network scalability, and interoperability between different
    IoT devices.

    Keywords: smart transportation; internet of things; machine learning; intelligent
    systems; distributed

    systems; smart transportation applications

    1. Introduction

    The recent increasing urbanization is a severe multiple global problem that requires

    a multifaceted answer. The population living in urban areas has increased due
    to the

    increased inﬂow of people to the cities. The United Nations projects that the
    world’s

    urban population will reach about 4.9 billion by 2030. This raises many issues,
    such as

    Sensors 2023, 23, 3880. https://doi.org/10.3390/s23083880

    https://www.mdpi.com/journal/sensors

    Sensors 2023, 23, 3880

    2 of 32

    pollution, trafﬁc, resources, etc. Due to the development of Internet of Things
    (IoT), there

    are a massive number of IoT devices that are connected to the network. Those devices

    continuously collect data and transmit the data to computing nodes for further
    analysis.

    Due to the signiﬁcant progress of deep learning techniques, many applications
    leverage

    deep learning to analyze the collected data and achieve “intelligence” and “automation”.

    Hence, based on the data analysis and IoT infrastructures, “Smart Cities” as a
    general

    application that includes smart grids, smart transportation, smart manufacturing,
    smart

    buildings, and much more, have become more popular [1–4].

    Transportation systems are an indispensable part of people’s daily life. Since
    the

    population living in urban areas has increased, the world will thus witness explosive

    growth in motor vehicles, which will have a detrimental impact and contribute
    to trafﬁc

    congestion, noise pollution, road accidents, and other issues [5]. Statistics
    reveal that there

    were around 290 million registered vehicles in the United States by the end of
    2022 [6].

    Furthermore, an average of 40% of the population is thought to have spent at least
    an

    hour daily on the road [7]. The increasing dependency on transportation systems
    has

    signiﬁcantly increased in recent years, and thus it is common that a person in
    modern

    society has to deal with a sizable number of issues with current transportation
    systems

    on a typical day, such as trafﬁc congestion, parking problems with limited parking
    spaces,

    longer commuting times, high levels of CO2 emissions, increased number of accidents,
    and

    many others.

    According to estimates, trafﬁc congestion costs the U.S. economy more than 101
    billion

    dollars annually [8], and the economy of the European Union over 2% of GDP [9].
    Moreover,

    as per reports published by the U.S. Federal Highway Administration, it was shown
    that

    about 50–60% of all trafﬁc delays are the result of trafﬁc incidents that occurred
    in the

    cities [10].

    To improve the operational effectiveness of transportation systems, it is imperative
    to

    increase the use of information technology [10]. Intelligent Transportation Systems
    or Smart

    Transportation is deﬁned as “The application of advanced sensor, computer, electronics,

    and communication technologies, and management strategies in an integrated manner

    to improve the safety and efﬁciency of the surface transportation system” [11].
    Smart

    transportation systems improve trafﬁc ﬂow and safety, reducing travel times and
    fuel

    consumption. It is imperative to use IoT infrastructures more and seamlessly integrate

    information and communication technologies (ICT) to create a sustainable, intelligent
    trans-

    portation system. The implementation and application of cutting-edge communications,

    electronic, and computing capabilities enable information transfer, trafﬁc ﬂow
    control,

    and the administration of transportation networks. Four key concepts, sustainability,
    in-

    tegration, safety, and responsiveness, are prioritized when adopting and implementing

    emerging technologies in transportation systems. These principles will be crucial
    in attain-

    ing the main goals of smart transportation, which are access and mobility, environmental

    sustainability, and economic development [12].

    Smart transportation applications have a great deal of potential to address the
    prob-

    lems faced by the constant inﬂux of population to urban areas and deliver a safer
    traveling

    experience by extensively coordinating among various trafﬁc control systems from
    differ-

    ent domains, operating at scale, and processing a sizable amount of data gathered
    from

    different sources. Emerging technologies will enable the sustainability of transportation

    infrastructures. By implementing novel techniques for gathering, processing, and
    dissem-

    inating information based on trafﬁc conditions, they will encourage the efﬁcient
    use of

    existing transportation infrastructures to regulate, control, and manage vehicular
    trafﬁc.

    This will improve congestion management and lessen its effects [12].

    This survey comprehensively examines the research on smart transportation systems

    and their applications, focusing on the diverse technologies utilized in intelligent
    transport

    systems. Our contributions are :

    Sensors 2023, 23, 3880

    3 of 32

    •

    A comprehensive survey that examines the research on smart transportation systems

    and their applications, with a focus on the diverse technologies utilized in smart

    transportation systems.

    •

    In this survey, we assess the opportunities and challenges of deploying various
    tech-

    nologies to smart transportation, with a particular emphasis on IoT and machine

    learning techniques.

    •

    The survey evaluates communication protocols currently used in smart transporta-

    tion systems while also investigating the architectures and frameworks employed
    in

    building smart transportation systems.

    •

    Additionally, we analyze various smart transportation applications to assess the

    performance of communication techniques and deep learning models. We then delve

    into challenges associated with these technologies in smart transportation systems

    and recommend future research directions in the ﬁeld.

    Methodology

    This literature review used a formal, systematic process to identify and screen
    articles

    on smart transportation technologies and applications. For the identiﬁcation of
    articles

    addressing our topic of review, we searched for articles in the four signiﬁcant
    databases

    named IEEE Xplore, ACM Digital Library, Science Direct, and Springer by using
    the terms

    (“smart transportation” OR “smart transportation applications” OR “smart transportation

    technologies” OR “smart transportation architectures.” These terms were keyed
    in the

    databases to limit the search result to a more relevant article. Relevant articles
    included

    papers published in the past 22 years (2000–2022).

    A total of 123 articles from the search were screened and assessed based on the
    title

    and abstract. We excluded articles not focusing on smart transportation applications,

    architectures, and technologies, reducing the number of relevant articles to 94.
    The selected

    papers were downloaded and read in full. A second assessment was made based on
    the

    following criteria. The ﬁrst criteria excluded articles that provide no empirical
    data, such

    as abstracts, editorials, conference summaries, short papers, and book chapters.
    Second, all

    non-English written articles were excluded. Third, similar duplicate articles
    were removed.

    After these criteria had been fulﬁlled, 87 articles remained. After these selections
    had been

    made and downloaded, we conducted a further backward reference search to learn
    more

    about this body of knowledge development. This method analyzed the citations in
    the

    selected articles related to the terms searched earlier. By doing that, we included
    16 more

    articles resulting in a total of In total 103 reviewed articles, as depicted in
    Figure 1.

    The remainder of the paper is structured as follows: Section 2 lists the different
    ar-

    chitecture and frameworks used by smart transportation systems. Section ?? presents

    the background of different technologies used in intelligent transportation systems,
    fur-

    ther expanding on the challenges presented by each technology. Section 4 presents
    the

    most prominent applications of ITS. Section 5 discusses the current challenges,
    possible

    opportunities, and future directions. Section 6 then concludes this paper.

    Sensors 2023, 23, 3880

    4 of 32

    Figure 1. Methodology process used to identify papers reviewed (where n is the
    total number of papers).

    2. Architectures and Frameworks of Smart Transportation Systems

    In this section, we discuss the various architectures and frameworks adopted for

    developing smart transportation systems. The architectures we discuss are distributed

    computing, centralized computing, and edge cloud computing. Additionally, we also

    discuss the various communication protocols that are used in smart transportation
    systems.

    2.1. Distributed Computing

    Applications for smart transportation, in general, have been supported and deliv-

    ered in large part by centralized computing, such as cloud computing. The cloud
    and

    networking infrastructure, however, face signiﬁcant challenges in transporting
    and pro-

    cessing transportation-related data, such as CCTV streams or road sensory data,
    due to the

    constantly growing number of linked vehicles. Thus, many applications in this
    ﬁeld call

    for a distributed data processing strategy instead of a centralized one due to
    the latency

    sensitivity and large volume of transportation data [13].

    For instance, driving in urban settings frequently necessitates making snap judgments

    about whether or not to change lanes or routes to avoid trafﬁc bottlenecks. An
    application

    must collect pertinent information, such as location, driving speeds, trafﬁc ﬂow,
    or collision

    events, to assist the driver in making decisions. Additionally, it must analyze
    those data and

    respond instantly. In order to meet the objectives in this scenario, the cloud
    infrastructure

    has a problem because it must quickly gather and process a large amount of data
    in a short

    amount of time. Having a distributed data processing infrastructure greatly reduces
    this

    burden of the Cloud while still achieving the latency-sensitivity requirement
    [14].

    A wireless sensor network for Intelligent Transportation System (WITS) is a prototype

    for an intelligent transportation system suggested by Chen et al. [15]. The information
    is

    gathered, and the data is transferred using the WITS system. The vehicle unit,
    the roadside

    unit along both sides of the road, and the intersection unit at the intersection
    are the

    Sensors 2023, 23, 3880

    5 of 32

    three different types of WITS nodes utilized in this system. The roadside units
    get the

    vehicle parameters from the vehicle unit, which measures them. The intersection
    unit

    then receives the information gathered by the roadside unit about the nearby vehicles.

    Next, the strategy sub-system determines an appropriate scheme in accordance with
    the

    predetermined optimization aim after receiving and analyzing the information from
    other

    units and passing it to the intersection unit.

    CarTel is a mobile distributed sensor computing system created by Hull et al.
    [16].

    An embedded mobile computer connected to a group of sensors is called a CarTel
    node.

    Each node collects and processes sensor data locally before sending it to a central
    gateway,

    where it is stored in a database and made available for additional analysis and
    visualiza-

    tion. CarTel generally facilitates the collection, processing, delivery, and visualization
    of

    heterogeneous data from intermittently connected mobile nodes. By gathering data
    on the

    trafﬁc, this method may help smoothen commute times.

    2.1.1. Service Oriented Architectures

    According to [17], (SOA) Service Oriented Architecture is a new approach to devel-

    oping dependable distributed systems, one in which all the interacting components
    are

    loosely connected, and the functions are constructed as services. With all the
    interacting

    components being loosely connected and the functions being constructed as services,
    SOA

    offers an effective method for developing dependable distributed systems.

    An intelligent trafﬁc control data center for Beijing is presented by [18] and
    is based on

    SOA. The primary justiﬁcation for choosing SOA for this implementation is that
    it includes

    common qualities such as distributed architecture, service-based applications,
    platform

    independence, and ﬁne graininess. The Beijing Trafﬁc Data Centre’s architecture
    aims for

    thorough data integration, effective data sharing, appropriate data exchange,
    support for

    on-demand services, and a cost-effective standard model for future development.

    The issue of maintaining the quality of trafﬁc information is mentioned by [19]
    due to

    the abundance of Travel Information Service (TIS) providers. This research presents
    the

    concept of a trafﬁc information service built on SOA, which combines services
    or data from

    several sources to produce trustworthy, accurate, and comprehensive information
    for the

    traveling public. In order to collect and incorporate various types of transport
    information

    into public-oriented services, two mechanisms are therefore necessary: the ﬁrst
    is to build

    a distributed architecture to integrate services from various providers, and the
    second is

    to introduce a set of uniform standards to categorize and present the description
    of TIS.

    The TIS system’s foundation in SOA enables interchange with other systems, allowing
    for

    simple integration of services from various suppliers.

    The design of a GIS (Geographic Information System) transportation system built
    on

    web service technology is presented by [20]. Without the need to integrate GIS
    instruments,

    the primary goal of the GIS-T web services is to assist ITS applications with
    spatial data

    and the processing of various geoprocessing tasks, such as - detecting duplicate
    addresses,

    displaying maps, planning routes, etc. The GIS-T web service enables several transporta-

    tion system departments to create a collaborative workspace, making coordination
    more

    straightforward and effective. Traditional GIS software ﬁnds accommodating all
    ITS re-

    quirements on a single platform difﬁcult. However, GIS-T web services technology
    has

    provided a workable answer to this issue.

    2.1.2. Grid Computing

    Grid computing uses numerous computer resources to work together and is loosely

    coupled to solve a speciﬁc problem. In grid computing, a big task is split up
    among numer-

    ous workstations to make the most efﬁcient use of the resources that are available
    [10].

    By combining the Grid, Service Oriented Architecture (SOA), and Web Service tech-

    nologies, [21] introduce the Shanghai Transportation Information Service Application
    Grid

    (STISAG), a module for ITS. STISAG primarily focuses on the issue of traffic congestion
    in

    Shanghai and provides end users with a variety of real-time traffic and travel
    information

    Sensors 2023, 23, 3880

    6 of 32

    services. The model incorporates information or services from various traffic
    sources, includ-

    ing the Shanghai Transportation Information Center, the Shanghai Taxi Company,
    and the

    Shanghai Bus Company. The model also incorporates Shanghai Grid nodes to handle
    and

    store a significant amount of traffic data as well as real-time transportation
    information.

    2.1.3. Fog Computing

    Fog is deﬁned as a network of numerous heterogeneous and decentralized devices

    that interact and may work together to accomplish processing and storage functions

    without the involvement of outside parties [22]. Fog computing can be used as
    a solution

    to the shortcomings of the cloud for smart transportation systems. The Fog computing

    paradigm uses the processing, storage, and network resources within the edge of
    the

    network to augment the capabilities of the cloud [23]. The Fog computing approach
    may be

    a preferable option for creating distributed applications [24] since it distributes
    computer

    resources closer to people and things, especially for latency-sensitive applications
    like

    Smart Transportation apps [25].

    One of the primary application domains where the Fog Computing model exhibits
    the

    best ﬁt, according to the authors of the original study on fog computing [23],
    is VANETs

    applications. This is especially true in light of recent developments in communication

    technology that enable complete Internet connectivity for infrastructure, automobiles,

    and other devices.

    A vehicular search application using CCTVs networked in transportation infrastruc-

    ture to look for a suspect driving a car is an example of a fog-based smart transportation

    application that can be found in [13]. An application is disseminated across various
    de-

    vices, including CCTV cameras, roadside units, and the like, according to a suggested

    programming model. To identify the vehicle in the frame, images from CCTVs are
    relayed

    to neighboring or local computing resources, like a roadside unit. If the recognition
    attempt

    fails, the computer system will send a Pan-Tilt-Zoom signal to the camera to direct
    its

    attention to a speciﬁed area to capture a clearer picture of the suspected car.

    2.1.4. Edge Computing

    A broad deﬁnition of edge is “Enabling technologies that enable computation to
    occur

    at the network edge so that computation occurs close to data sources” [26]. The
    authors in

    the research [27] present an Edge Computing based Public Vehicle (ECPV) system
    to sched-

    ule ridesharing among travelers and reduce the latency of decision-making by utilizing

    edge computing. This system would increase trafﬁc efﬁciency and vehicle occupancy
    ratios.

    In order to cut down on travel times and boost trafﬁc efﬁciency, the research
    formalizes

    the public vehicle scheduling problem as an optimization problem with maximum
    traveler

    satisfaction as the goal.

    2.2. Centralized Computing

    Cloud Computing

    Several researchers have applied various cutting-edge technologies to create smart

    transportation systems, but due to its sophisticated electronic data storage and
    communica-

    tion medium, cloud computing serves as a prominent player [28]. Cloud computing
    gives

    us the ability to create and deploy computing services with minimal effort, equipment,

    and up-front costs [29].

    Incorporating information technology, control technology, sensor technology, com-

    munication technology, and system inclusive technology, Cai and Sun [30] describe
    a

    contemporary intelligent transportation system based on cloud computing. In order
    to

    address the issues and difﬁculties with the current intelligent transportation
    system, this

    article presents a new generation of intelligent transportation systems based
    on cloud

    computing. From a technological standpoint, it covers the design of a cloud transportation

    system. From a managerial one, it shows how to develop the cloud transportation
    system.

    Sensors 2023, 23, 3880

    7 of 32

    Additionally, Jaworski et al. [31] proposed an urban trafﬁc control system that
    uses

    cloud computing. Its objectives are to improve trafﬁc ﬂow and trafﬁc regulation
    for better

    participant safety, less fuel consumption, and lower carbon emissions. The urban
    vehicle

    control scenario assumes that an off-board control unit that monitors each trafﬁc
    intersection

    determines the speed of every vehicle in the controlled region. An Intersection
    control

    service (ICS) is the piece of software in charge of that. The system views the
    cars as cloud

    services, and they are found and called upon using a cloud computing technique.
    Targeting

    all vehicles in the designated zones is accomplished via geographic multicast
    addressing.

    Geographical multicast addressing uses a simple addressing mechanism by pointing
    to all

    the vehicles in a particular region. ICSs are a component of a city-wide cloud
    network that

    manages trafﬁc ﬂow between intersections.

    On-demand bus services are demand-responsive transportation services where users

    can reserve their bus seats before their commute. Although on-demand bus services
    have

    been introduced in many cities, their high operating costs make them less popular.
    Tsub-

    ouchi et al. [32] describe their innovative solution considering the issue of
    high costs. Their

    solution is based on cloud computing technology, wherein their proposed system
    includes

    four major modules: a schedule calculation system, communication devices, a reservation

    interface, and a database. The primary beneﬁt of this method is the implementation
    of the

    software blocks on remote servers. As a result, the service can be operated by
    the local

    transport authorities without them having to invest in purchasing their own servers.
    Thus,

    the system’s operational expenses are consequently decreased.

    2.3. Edge Cloud Computing

    The current Intelligent Transportation System (ITS) uses various remote sensors
    to

    assess the status of a road network in real-time. It then transmits control signals
    to roadside

    systems and road users. To transmit situation awareness and control messages,
    future

    ITS may need to communicate with users of the road network and roadside furniture.

    To transmit driving intention information, such as emergency braking or road conditions,

    vehicles may need to interact with one another. Additionally, in order to receive
    advanced

    notice of impending road conditions or to transmit control signals to controlled
    intersections

    to clear lanes for emergency vehicles and public transportation, vehicles may
    also need to

    connect with roadside equipment.

    Currently, available cloud providers operate from data centers in well-connected

    nations. However, network latency for end users can be high due to long distances
    between

    the user and the cloud data center, and using mobile networks adds additional
    latency

    overheads. End users’ expectations are expanding to include those with wireless
    network

    connections, many of whom are actively mobile, as opposed to those who are headquartered

    at ﬁxed physical locations with hard network connections [29].

    By developing products based on their core cloud offerings that can run on smaller

    computing systems while maintaining compatibility with their core cloud platforms,
    estab-

    lished cloud vendors are beginning to experiment with edge-cloud computing.

    2.4. Smart Transportation Communication Protocols

    Modern vehicles have increasingly been equipped with a variety of sensors, actua-

    tors, and communication devices such as GPS devices, mobile devices, and embedded

    computers. Vehicles and nearby roadside units (RSUs) nowadays are equipped with
    pow-

    erful communication, sensing, networking, and processing capabilities making a
    vehicular

    ad-hoc network (VANET). They can exchange and communicate data and information

    with other vehicles (Vehicle—to—Vehicle network (V2V)), smart transportation devices

    (Vehicles—to—Infrastructure (V2I)), and applications and with the outside world
    using a

    variety of technologies (Internet of Things (IoT), Cloud computing, and distributed
    comput-

    ing) and communication protocols (WiFi, 4G/5G, TCP/IP) which when enforced together

    can help researchers obtain advanced and improved transportation systems.

    Sensors 2023, 23, 3880

    8 of 32

    2.4.1. 4G/5G

    With the large-scale interconnections of people and things, data trafﬁc has increased

    dramatically, putting pressure on the present generation of wireless mobile communi-

    cation [33]. As a result of the extraordinary development in the number of connected

    devices, mobile data trafﬁc, and the limits of 4G technologies, businesses, and
    academics

    are focusing their efforts on deﬁning the standards for wireless mobile communication’s

    ﬁfth generation (5G) [34].

    Cellular connectivity is essential in the smart transportation system [35]. 5G
    is geared

    toward connecting individual cars through the development of Cooperative Intelligent

    Transport Systems (CITS). 5G can help cities become smarter by making automated
    trans-

    portation systems safer and more efﬁcient than existing transportation networks.
    This also

    aids the public transportation system deal with signiﬁcant transportation concerns
    such

    as trafﬁc congestion, pollution, and crashes [33]. 5G has the potential to overcome
    these

    difﬁculties by creating a genuinely smart transportation system. With access to
    high-speed

    Internet on public transportation. A Linked Trafﬁc Cloud collects and analyzes
    real-time

    data from connected cars, infrastructure, and devices to help with operational
    decision-

    making, improved navigation, fuel, and time resource optimization, and so on [36].

    One of the main reasons of motor vehicle accidents is rapid trafﬁc slowing, particu-

    larly on fast-scrolling roads and highways with poor visibility. It can be caused
    by other

    accidents, road construction, excessive motorized vehicles, particularly during
    peak hours,

    and so on. Fixed trafﬁc sensors on roadways that connect with drivers’ mobile
    apps over

    the 4G network may often reduce such an issue, but sadly, not all roads and highways

    are equipped with such equipment. Celesti et al. [37] presented a possible alternative

    strategy for resolving such a problem by utilizing mobile trafﬁc sensors directly
    mounted

    in private and/or public transit cars and volunteer vehicles. Experiments show
    that the

    system delivers acceptable reaction times, allowing drivers to receive alarm signals
    quickly,

    reducing the danger of potential accidents.

    2.4.2. V2V, V2X, V2I, V2P

    Vehicular communication use cases are classiﬁed into four categories: V2X refers

    to Vehicle-to-Vehicle (V2V), Vehicle-to-Infrastructure (V2I), Vehicle-to-Pedestrian
    (V2P),

    and Vehicle-to-Network (V2N) communications. V2V and V2P communications are pri-

    marily between cars or vehicles and vulnerable road users (for example, pedestrians
    and

    bicycles) to transmit position, speed, and direction information to avert accidents
    [38].

    Figure 2 below shows the components of the vehicular communication protocol.

    Direct connection between automobiles and roadside infrastructure, such as Roadside

    Units (RSUs), is part of V2I. The RSU acts as a forwarding node to broaden the
    range

    of communications received from a vehicle. V2N transmission occurs between a vehicle

    and a V2X application server, enabling services such as entertainment streaming
    video

    and connection for dynamic route management. Using a wireless network, direct
    or indi-

    rect communication between two cars, or between a vehicle and roadside infrastructure

    can increase driver safety and mobility [39]. The applications include cooperative
    driv-

    ing assistance, decentralized probe vehicles, and user, and information communications.

    For example, with this technology, automobiles may broadcast a warning to other
    vehicles

    to avert accidents when changing lanes [40]. Vehicular communication, which connects

    cars, roadside units, and pedestrians, is a vital technology in the Intelligent
    Transportation

    System (ITS).

    Concerns about location privacy and secure communication impede the adoption of

    smarter and safer modes of ITS. Gupta et al. [41] presented a secure and trusted
    V2V and

    V2I communication approach based on edge infrastructures, in which trusted cloudlets
    are

    used to authorize, check, and verify the authenticity, integrity, and anonymity
    of messages

    exchanged in the system rather than direct peer-to-peer communication. Moving
    cars or

    roadside equipment are dynamically linked to adjacent cloudlets, where security
    measures

    Sensors 2023, 23, 3880

    9 of 32

    may be established to clean or prevent fraudulent communications and prevent rogue

    vehicles from communicating with other vehicles.

    Figure 2. Vehicle-to-Everything Communication(V2X) protocol.

    Vehicle-to-anything (V2X) communications deal with the interchanging of information

    between a vehicle and numerous parts of the intelligent transportation system
    (ITS), such

    as other cars, pedestrians, Internet gateways, and transportation infrastructure
    (such as

    trafﬁc lights and signs). The technology has the potential to enable a wide range
    of

    unique applications in areas such as road safety, passenger entertainment, automobile

    manufacturer services, and vehicle trafﬁc efﬁciency. V2X communications are now
    based

    on one of two basic technologies: dedicated short-range communications (DSRC)
    and

    cellular networks [42]. However, it is not predicted that a single technology
    will be able

    to handle such a wide range of projected V2X applications for a signiﬁcant number
    of

    cars in the near future. As a result, interoperability between DSRC and cellular
    network

    technologies is recommended for efﬁcient V2X communications.

    The authors of [43] propose a reliable method for selecting relays based on distance

    in vehicular networks. Their approach aims to achieve fast message dissemination
    in a

    wide range of vehicle densities while also ensuring acceptable speeds in adverse
    scenarios.

    They identify the challenges of using a distance-based approach to select relay
    nodes

    in vehicular networks and present a robust relay selection method that optimizes
    their

    previous work, exponent-based partitioning broadcast protocol (EPBP). Furthermore,
    they

    provide analytical models that demonstrate the performance of their proposal in
    terms of

    contention latency and packet delivery ratio. The results revealed that the analysis
    and

    simulations across a range of vehicle densities show that their proposal has acceptable

    performance in adverse scenarios, improved performance in general scenarios comparable

    to EPBP on densely deployed networks, and superior performance in sparse densities
    and

    adverse scenarios.

    2.4.3. Vanet

    A vehicle ad-hoc network (VANET) is deﬁned as a group of mobile vehicles com-

    municating over a wireless network to exchange information between themselves
    (V2V)

    and with local roadside units (V2I). This enables the dissemination of information
    to

    improve passenger safety and comfort. A VANET is a decentralized, self-organizing,
    dy-

    Sensors 2023, 23, 3880

    10 of 32

    namic network with restricted bandwidth and range only suitable for direct peer-to-peer

    communications [44].

    Chang et al. [45] proposed three contributions to route planning utilizing VANET

    technology. First, a vehicular-ad-hoc-network-based A (VBA) route planning algorithm

    is suggested to determine the route with the shortest travel time or the lowest
    fuel con-

    sumption based on two real-time trafﬁc information sources not previously employed
    in

    typical GPS applications. The initial source of trafﬁc information is the recorded
    trafﬁc

    information of the road segment over which the vehicle has traveled. It is then
    sent be-

    tween vehicles through an IEEE 802.11p wireless network. Google Maps then provides
    the

    second trafﬁc update. Finally, the VANET simulator runs simulations for six route
    planning

    algorithms in a single congested. As compared to standard route planning algorithms,
    VBA

    delivers considerable savings in both the average travel time and fuel consumption
    of the

    projected route.

    Additionally, Maneguette [46] created a framework to enable various sorts of services,

    storage methods, access, and information management tools for diverse modes of
    trans-

    portation, not just for people but also for commercial vehicles and emergency
    services such

    as ambulances. Furthermore, by utilizing vehicular networks and integrating VANETs
    with

    other networks, it was feasible to enhance the capacity for abstraction to satisfy
    information

    demands, therefore providing useful information for the monitoring and administering
    of

    an intelligent transportation system.

    2.4.4. Wi-Fi/ Wireless Sensor Network (WSN)

    Smart cities increasingly use Wi-Fi connections to connect various resources.
    Due

    to its restricted bandwidth, Wi-Fi networking is typically used in smart transportation

    systems to connect automobiles, trafﬁc lights, and lampposts [35]. Research organizations

    are proposing low-cost complementary solutions because roadside electrical equipment

    to support VANETs are costly. A Wireless Sensor Network (WSN) is one of the comple-

    menting solutions. The wireless self-organized sensor network nodes are often
    powered by

    battery-powered, low-cost [47], energy-efﬁcient collection, communication, and
    processing

    technologies. These low-power nodes may often run for several years on a pair
    of AA

    batteries, decreasing maintenance requirements. Because of its low power consumption

    and low cost, a large number of roadside WSNs may be strategically positioned
    to help

    vehicle communication technology [48].

    WSNs have lately gained prominence owing to their potential to alter many aspects

    of our ﬁnancial system and daily lives, including shipping automation, environmental

    monitoring, transportation, and healthcare. The gathering and sharing of transportation

    information are critical in the Intelligent Transportation System (ITS). Unfortunately,
    most

    traditional ITSs can only detect a vehicle in a ﬁxed place, and their communication
    and

    power lines raise the building and maintenance costs. The usage of wireless sensor
    networks

    (WSN) in ITSs is anticipated to address the aforementioned challenges due to its
    advantages,

    including low power consumption, wireless distribution, and ﬂexibility without
    cable

    restrictions [49].

    WSNs have assisted in many issues in transportation, such as parking automobiles

    which is a serious issue that contributes to trafﬁc congestion, air pollution,
    and driver

    discomfort. Kalebe et al. [50] presented a smart parking system capable of gathering

    quantitative data and delivering it to drivers and other smart city apps via an
    expandable

    platform. On a three-layer architecture, the suggested system was built with wireless
    sensor

    networks for IoT-based parking. Wang and He [51] also proposed a similar solution
    that

    uses WSN for reservation-based parking policy with the potential to streamline
    parking

    system operations while also alleviating trafﬁc congestion caused by parking hunting.

    To address the difﬁculties of trafﬁc control and monitoring, Sherly et al. [52]
    developed

    a real-time trafﬁc monitoring system. The information from real-time trafﬁc monitoring
    was

    utilized in the study to detect issues on the road. RFID, wireless sensor technologies,
    ad hoc

    networking, and internet-based information systems compose the IoT trafﬁc architecture.

    Sensors 2023, 23, 3880

    11 of 32

    Furthermore, Sighn et al. [53] proposed a system that uses (WiFi-equipped) Smart

    Highways and a dashboard navigation device with a 3D camera to improve accident

    prevention, monitoring, and control. As a result, in the event of an accident,
    the video

    captured can be reviewed with the evidence stored simultaneously and provide additional

    services to capture and share real-time accident/trafﬁc footage.

    This article [54] discusses the use of a connected dominating set (CDS) as a virtual

    backbone for efﬁcient routing in wireless sensor networks. Constructing a minimal
    CDS

    (MCDS) is desirable for efﬁcient packet routing and energy conservation but is
    a difﬁcult

    problem (NP-hard). The article proposes a new algorithm, called E-MCDS (energy
    efﬁcient

    MCDS construction algorithm), that considers energy consumption during the construction

    of the MCDS. The resulting CDS is approximately composed of two independent sets

    (IS). The performance ratio of E-MCDS is analyzed for two different graphs and
    found to

    be 9.33opt and 17.33nkopt, respectively. Simulation results demonstrate that E-MCDS
    is

    effective in terms of both the size of the CDS constructed and energy efﬁciency.

    Despite numerous studies that have utilized sensor mobility to enhance coverage

    and connectivity, little attention has been given to reducing sensor movement,
    which

    often depletes the limited energy of sensors and signiﬁcantly shortens the lifespan
    of the

    network. To address this issue, Liao et al. [55] tackles the challenges of the
    Mobile Sensor

    Deployment (MSD) problem and explores ways to deploy mobile sensors with minimal

    movement in order to establish a Wireless Sensor Network (WSN) that offers both
    target

    coverage and network connectivity. The MSD problem is divided into two sub-problems:

    the Target Coverage (TCOV) problem and the Network Connectivity (NCON) problem.

    For TCOV, the paper presents an extended Hungarian method that can achieve an
    optimal

    solution for general cases, along with two heuristic algorithms that rely on clique
    partition

    and the Voronoi diagram, respectively. As for the NCON problem, the paper proposes

    an edge-constrained Steiner tree algorithm to identify the destinations of mobile
    sensors,

    followed by the utilization of the extended Hungarian method to dispatch the remaining

    sensors for network connectivity.

    3. Background and Related Technologies

    This section presents an overview of the technologies currently used in smart
    trans-

    portation and their challenges.

    3.1. The Role of Internet-of-Things (IoT) in Smart Transportation Systems

    Recent advances in wireless sensor networking, cloud computing, big data, and
    IoT

    are giving rise to a new generation of smart transportation applications. IoT
    consists of a

    network of web-enabled physical objects embedded with sensors, processors, and
    com-

    munication hardware that acquire data from their environments [56]. These devices
    form

    pervasive monitoring platforms that allow massive collection and exchange of real-time

    data, thus building the foundation of smart transportation systems.

    IoT is a discovery that can solve current issues by combining technology and social

    implications [57]. It is a worldwide system that meets people’s demands. It allows
    advanced

    services with physical and virtual connections based on current and future developments

    in information and technology communication (ICT) [58]. By its name, IoT refers
    to the

    integration of data gathered from different types of objects onto any virtual
    platform using

    existing Internet infrastructure [59]. Hence, any gadget with an on/off switch
    that links to

    the internet is considered an IoT device.

    IoT applications have evolved in several parts of smart transportation. Examples

    are smart trafﬁc, smart parking, and intelligent mobility. These advancements
    make

    smart transportation conceivable to give drivers efﬁcient route ideas, quick parking
    book-

    ings, economical street lighting, telematics for public transportation, accident
    avoidance,

    and autonomous driving using sensors integrated into cars or mobile devices and
    devices

    deployed in the city [60].

    Sensors 2023, 23, 3880

    12 of 32

    According to IoT analytics, there is a rise in the adoption of IoT in various
    transportation

    segments. According to the 2020 research of the top IoT application categories,
    Manufac-

    turing/Industrial settings are the most popular (22%), followed by Transportation/Mobility

    (15%) and Energy IoT projects (14%) [61]. Their research implies that the transportation

    industry had the second-highest use of IoT in diverse projects. Figure 3 below
    shows the total

    number of projects that leveraged IoT to provide transportation solutions.

    Figure 3. IoT transportation projects by segment in 2020.

    3.1.1. Existing Relevant Works

    Smart transportation based on IoT technology promises to give citizens more ﬂexible,

    efﬁcient, and safe transportation options. Trafﬁc safety is one of the signiﬁcant
    issues

    that individuals face in congested cities. In this aspect, IoT can be more proactive
    in

    identifying human mistakes and preventing road accidents. Therefore, in order
    to achieve

    safer roadways, IoT-based solutions must be developed [62].

    Pham et al. [63] offered a unique algorithm that improves the current cloud-based

    smart-parking system’s efﬁciency and creates a network architecture based on Internet-of-

    Things technology. They suggested a system that assists users in automatically
    ﬁnding a

    free parking spot at the lowest possible cost based on new performance metrics
    to compute

    the user parking cost by considering the distance and the total number of vacant
    spaces in

    each car park. The simulation results suggest that the algorithm improves the
    likelihood of

    successful parking and reduces user waiting time.

    Jan et al. [64] created a model for evaluating transportation data using Hadoop
    and

    Spark to manage real-time transportation data. The data is distributed to the
    smart trans-

    portation system using the suggested system and decision mechanism based on the
    pro-

    posed data networking system. The peer-reviewed results of evaluating the suggested

    approach reveal data processing and real-time distribution to citizens in the
    shortest possi-

    ble time.

    Deeplaxmi et al. [65] used IoT to develop a novel system for smart transportation

    called Smart Vehicle Assistance and Monitoring System (SVAMS). SVAMS is an intelligent

    transportation system (ITS) that addresses various trafﬁc challenges. It is a
    trafﬁc manage-

    ment, monitoring, and optimization solution which links all cars through Zigbee
    and is

    centrally monitored and assisted by a data center. The system stores all data
    in the cloud

    for future analysis, processing, and usage. SVAMS is a low-cost, compact system
    with

    various functions such as emergency response, pollution level monitoring, automatic
    toll

    collection, trafﬁc rule violation detection, and vehicle tracking. Adopting SVAMS
    will aid

    in developing Clean, Corruption-Free, and Crime-Free (C-3) cities.

    Sensors 2023, 23, 3880

    13 of 32

    3.1.2. Challenges

    IoT technology is not without peril. All connected items link together in several
    ways,

    including WiFi/Ethernet remotely through IP protocols, proximity Bluetooth for
    battery

    savings, NFC, and other medium-distance radio networks. Hidden behind it are possible

    dangers to data security, physical security, device security, legislation, privacy,
    encryption,

    authentication, and many other issues that must be solved so that these impediments
    do

    not obstruct future progress [66].

    Several issues are now prominent due to data uploading by sensors, actuators,
    and in-

    telligent appliances that post the acquired data to the internet, thereby increasing
    trafﬁc.

    As a result, the most signiﬁcant issues these systems face relates more to trafﬁc
    volumes.

    Soltanmohamma et al. [67] explored the trafﬁc concerns of M2M communications over
    LTE,

    concentrating on the challenges imposed on a radio access network’s access channel
    and

    trafﬁc channel. They also outlined the beneﬁts and drawbacks of remedies provided
    by

    other scholars. They were curious about the problems caused by M2M communication
    on

    cellular LTE and LTE-A networks [68].

    Another issue is the security of IoT devices concerning smart transportation,
    which is

    critical. Most of the data acquired by IoT devices is personal and requires privacy.
    These sen-

    sitive data in IoT may be an open invitation for attackers to capture and consume
    in various

    ways. However, preserving privacy in IoT is challenging for several reasons. For
    starters,

    the CPU in IoT devices is restricted and cannot perform sophisticated instructions.

    Additionally, the security algorithm’s power consumption must be low because most

    IoT devices utilize batteries. The security method’s cost should be as cheap as
    feasible

    to cover as many devices as possible. Therefore, it is better to simplify the
    present IP

    architecture to enable seamless connection and control of diverse network environments.

    Other problems in developing IoT for smart transportation include device identiﬁca-

    tion and addressing, mobility, interoperability, and energy efﬁciency [68].

    3.2. The Role of Machine Learning (ML) in Smart Transportation Systems

    A typical deﬁnition of machine learning is a system’s capacity to make intelligent

    choices without it being explicitly programmed. Data is at the heart of ML techniques

    and ML teaches computer systems to accomplish tasks like classiﬁcation, grouping,
    predic-

    tion, pattern recognition, and many others.

    The process involves training systems to archive learning by analyzing sample
    data

    with various algorithms and statistical models. It involves categorizing the sample
    data

    by quantiﬁable properties known as features, and an ML algorithm attempts to identify
    a

    relationship between the features and speciﬁc output values known as labels [69].
    The data

    gathered during the training phase is then utilized to ﬁnd patterns or make judgments

    based on new data.

    Although Machine Learning has recently acquired popularity due to its exponential

    rate of data collection and technology improvements to enable it, its roots may
    be traced

    back to the 17th century [70]. Since the dawn of time, people have sought to make
    sense of

    data and analyze it to acquire immediate insights. Figure 4 below gives an overview
    of the

    evolution of ML.

    3.2.1. Existing Relevant Works

    Machine learning has become the base for developing cutting-edge technology due
    to

    the speed and accuracy at which data is trained, processed, and predicted. Unsurprisingly,

    we now see a rise in the application of machine learning algorithms to offer solutions
    to

    some issues faced in transportation.

    Sensors 2023, 23, 3880

    14 of 32

    Figure 4. The evolution of machine learning.

    The widespread use of smartphones equipped with location-sensing technology has

    created opportunities for transportation researchers and city planners to gather
    detailed

    mobility data through smartphone-based travel surveys. By utilizing data mining
    and

    machine learning techniques to analyze this information, we can better understand
    the

    demands placed on the current commercial parking and road infrastructure. One
    such

    data collection platform that can be used for this purpose is the Future Mobility
    Sensing

    (FMS) platform. This platform can be integrated with both portable smart mobile
    devices

    and traditional GPS trackers to monitor and analyze mobility patterns. By combining
    raw

    mobility data with other relevant contextual information, machine learning algorithms

    can be used to infer additional trip details such as travel time, mode of transportation,

    and stopping points [71].

    A survey was conducted in Singapore using an FMS platform to collect information

    on the stop activity and movement of heavy goods vehicles. However, a large portion
    of

    the recorded stops were not veriﬁed, and there was an imbalance in the reported
    activity

    types. Therefore, the authors of [71] develop a model that predicts the activity
    type based

    on various features collected through the FMS platform and point-of-interest information

    from Open Street Map. The proposed model uses a gradient-boosting approach and
    data

    resampling techniques to address the class imbalance. By integrating the model
    into

    the FMS platform, activity-related ﬁelds of the survey can be pre-populated to
    improve

    completion rates and reduce respondent burden. The model can also be used to recover

    activity information from unveriﬁed stops, providing insights into the movement
    and

    parking behaviors of commercial vehicles in Singapore.

    Additionally, You et al. [72] developed a travel data collection and visualization

    FMS system to comprehend mobility patterns and travel behavior. The FMS system

    collects and fuses data from various sources and presents them visually. It is
    made up of

    two parts: (1) the FMS Data Collection Platform, which employs mobile sensing
    devices

    such as smartphones and GPS loggers, as well as machine learning algorithms with
    user

    veriﬁcation to gather detailed, multi-day travel data, and (2) the FMS Data Fusion
    and

    Visualization Platform, which merges data from different sources and transforms
    them into

    knowledge for users to review their mobility diary, provide additional input and
    explore

    their mobility patterns.

    To combat distracted driving, one of the leading causes of car accidents, Gosh
    et al. [73]

    created a technology similar to a high-efﬁciency eye blink sensor using AdaBoost,
    which

    is an Ensemble algorithm. This alarm system can eliminate several drivers distractions,

    perhaps leading to a road accident. In comparison, Hou et al. used four models
    in their

    paper to anticipate trafﬁc ﬂow for planned work zone activities. The four models
    are

    random forest, regression tree, multilayer feedforward neural network, and nonparametric

    regression. The results revealed that the most inﬂuential variables for highway
    data were

    the latest interval’s look-back trafﬁc ﬂows at the upstream, downstream, and present

    locations. The most relevant factors for arterial data were trafﬁc ﬂows from the
    three

    look-back periods at the current site only [74].

    Sensors 2023, 23, 3880

    15 of 32

    In [75], Dogru et al.

    compared RF to SVM and ANN to detect road accidents.

    SUMO [76] is used for data collecting in a trafﬁc simulation scenario. In their
    research, cars

    communicated via a vehicle simulation to acquire information such as speed and
    position.

    The above classiﬁers are trained using the 10-fold cross-validation approach and
    veriﬁed

    using accuracy, sensitivity, and speciﬁcity measures. Regarding accuracy and sensitivity,

    the RF algorithm outperforms the other two classiﬁers.

    This article [77] evaluated the proposed system’s performance to prior studies
    and

    several machine learning approaches, such as LightGBM, K-Nearest Neighbors (KNN),

    Support Vector Machine (SVM), and Random Forest. Extensive testing ﬁndings showed

    that the suggested system correctly recognized distinct vehicle motions with an
    average

    F1-score of 0.98, an accuracy of 0.97, and a recall of 0.98, outperforming the
    competitors.

    Furthermore, the concept is simply transferable to various drivers and locales.
    Since it

    involves the primary processing of smartphone sensor input, the system is resilient
    and

    ideal for real-time applications.

    Keller et al. [78] developed a model that uses a machine learning predictive scheme

    in Advanced Driver Assistance Systems (ADAS) that assists drivers during emergency

    movements. They provided a real-time capable approach for solving the planning
    and

    control issue in a single step. Their solution works by combining a model predictive
    control

    system with an environmental model to obviate the need for a precalculated reference

    signal, i.e., a trajectory. The real-time capability is obtained by a crude discretization
    of

    the inputs, which allows the plant’s state trajectory to be predicted for all
    conceivable

    combinations of discretized input values.

    Yu et al. [79] offered a variation-based online journey time prediction technique
    em-

    ploying clustered Neural Networks(CNN) as input variables, using trafﬁc vectors
    generated

    from raw detector data. They divided the corridor travel time into (1) the base
    term and

    (2) the variation term. This research conducted intense numerical tests using
    simulated data

    from the microscopic simulator CORSIM to assess the efﬁciency of the suggested
    technique.

    3.2.2. Challenges

    The rate at which automobiles are increasing on the road is faster than the population

    growth rate, causing clogged highways and making it risky to travel on certain
    roads. It

    is impossible to handle this issue by expanding the number of roads since it is
    costly to

    build roads [80]. The alternative is to regulate trafﬁc by analyzing trafﬁc data
    collected on

    roadways; since the quantity of data created in the transportation sector is large,
    standard

    data analytics techniques may not function.

    The efﬁcacy and efﬁciency of a machine learning-based solution are often contingent

    on the data’s type and features and the learning algorithms’ performance. Collecting

    data in the relevant domains, such as cybersecurity and smart transportation,
    takes work,

    even though today’s internet permits the regular generation of massive amounts
    of data.

    Thus, gathering usable data for the target machine learning-based applications,
    such as

    smart city applications, and managing it is critical for future analysis. As a
    result, a more

    in-depth analysis of data collection methods is required in working with real-world
    data.

    Furthermore, historical data may contain many unclear values, missing values,
    outliers,

    and nonsensical data [81].

    Machine learning algorithms signiﬁcantly inﬂuence data quality and availability
    for

    training, and hence, on the ﬁnal model. As a result, correctly cleaning and pre-processing

    the various data obtained from multiple sources is a complex undertaking. To effectively

    employ the learning algorithms in the related application area, it is necessary
    to alter

    or improve current pre-processing procedures or to propose new data preparation
    ap-

    proaches [80].

    Different ML algorithms exist to analyze data and extract insights. As a result,
    ﬁnding

    an appropriate learning algorithm for the intended application is complex. The
    complexity

    is because the outcomes of various learning algorithms might differ depending
    on the

    data characteristics [82]. Choosing the incorrect ML algorithm will result in
    unanticipated

    Sensors 2023, 23, 3880

    16 of 32

    consequences, perhaps resulting in a loss of effort and the model’s efﬁcacy and
    accuracy.

    As a result, the eventual success of a machine learning-based solution and associated

    applications relies heavily on the data and the learning algorithms. Suppose the
    data

    could be more suitable for learning, such as non-representative, poor-quality,
    irrelevant

    characteristics, or inadequate amount for training. In that case, the machine
    learning

    models may become ineffective or yield reduced accuracy.

    3.3. the Role of Big Data in Smart Transportation Systems

    Today intelligent vehicles and transportation systems are key technologies that
    en-

    hance the convenience and security of drivers. Smart transportation systems have
    tra-

    ditionally relied on solitary systems. Currently, these intelligent transportation
    systems

    are moving and evolving towards seamlessly integrating a wide variety of heterogeneous

    technologies that can gather massive amounts of data, process it, and take appropriate

    actions based on the data, all in real time. Due to this evolution, there is a
    considerable

    impact on the inﬂuence that a vehicle’s or driver’s behavior can have to provide
    numerous

    beneﬁts such as preventing road accidents, reducing driver stress, reducing congestion,

    and many others, all of which can help regulate trafﬁc ﬂow throughout the city
    and increase

    information ﬂow in case of emergencies.

    Big Data has become an essential topic in academics as well as industry. It reﬂects

    vast and complicated data collection from many sources. Many prominent data processing

    techniques use Big Data methodologies, such as data mining, machine learning,
    artiﬁcial

    intelligence, data fusion, and social networks. Big data is a critical facilitator
    of smart

    city efforts. These two notions together may provide better services like healthcare,
    trans-

    portation [83], effective government, and many more, all of which improve the
    quality of

    life [84].

    McKinsey Global Institute deﬁnes big data as having adequate data collecting and
    data

    management capabilities that can be utilized for large-scale and massive data
    storage. Big

    data technology has signiﬁcant strategic importance, represented not only in the
    capacity

    to master vast amounts of data but also in the ability to analyze these valuable
    data

    professionally. It is an information resource that gathers, locates, and analyzes
    internet data

    to gain more helpful information.

    3.3.1. Existing Relevant Works

    Researchers have created smart transportation applications and systems that use
    big

    data technology like the prior technologies discussed.

    Wang et al. [85] and developed a systematic method for smart transportation man-

    agement on bus networks in this research. A three-tiered approach is proposed
    to assist

    urban planners, managers, and technicians in their management tasks. In the system’s

    implementation, they used the power of Big Data. They applied Big Data techniques
    to

    compute bus travel time, and passenger demands efﬁciently and economically, and
    this

    system is currently deployed in Brazil.

    Accidents are a signiﬁcant cause of trafﬁc congestion, resulting in fatalities
    and losses

    for those involved and lost time for those who are delayed behind the wheel. Ozbayo-

    glu et al. [86] proposed a basic real-time autonomous accident-detection system
    based on

    computational intelligence approaches to save lives and offer faster road openings.
    Big data

    processing methods are used to populate Istanbul city trafﬁc-ﬂow data for 2015
    from multi-

    ple sensor locations. The system predicts the chances of an accident occurring.
    The results

    show that, even while false alarms outnumber actual accident instances, the system
    may still

    give important information for status veriﬁcation and early response to potential
    accidents.

    Furthermore, Khazaei et al. [87] proposed a big Data analytic framework for urban

    transportation data to acquire insights into trafﬁc patterns. The platform is
    cluster-based

    and cloud-based, providing dependability, scalability, and adaptability to changing
    op-

    erating conditions for online and ofﬂine analysis. It was veriﬁed using several
    use cases,

    Sensors 2023, 23, 3880

    17 of 32

    including determining the average speed and congested stretches on major roads
    in the

    Greater Toronto Area.

    Rathore et al. [88] and Babar and Arif [89] developed a graph-oriented technique
    to

    create the city’s smart transportation system. They recommended deploying road
    sensors

    to gather comprehensive trafﬁc information and the vehicular network to obtain
    individual

    vehicle position and speed information. They presented an efﬁcient architecture
    that

    leverages the Giraph tool with parallel processing servers to achieve real-time
    efﬁciency

    in processing incoming Huge Data from IoT devices, then producing big graphs from
    the

    data and analyzing them.

    3.3.2. Challenges

    The problem in employing big data in smart transportation systems is assessing
    mas-

    sive volumes of data and making the proper logical judgment. The difﬁculties of
    signiﬁcant

    data-driven decision-making are widely acknowledged. Different sensors distributed

    across the city return massive volumes of data [84]. Precise data mining techniques
    are re-

    quired to extract relevant information from this massive collection. When working
    with big

    data, the primary issues are data quality, data availability and connection, and
    processing

    speed [90].

    •

    Security: One of the most challenging difﬁculties in any computer science applica-

    tion is security. Security becomes considerably more complex and difﬁcult with
    Big

    Data. Individuals accessing data must pass through authentication mechanisms to

    guarantee data integrity and conﬁdentiality. Need-based limited access is essential.

    Use appropriate encryption algorithms for data in transit and data at rest [91].

    •

    Data Accuracy: Big data for smart city transportation collects real-time data
    from

    multiple sensors around the city. This data may contain noise, leading to incorrect

    forecasts and unneeded turmoil in intelligent city systems. Even if we analyze
    data

    fast using various hardware mechanisms, if the information used for decision-making

    needs to be more accurate, our efforts may be futile [92].

    •

    Need for Speed: Companies in today’s hyper-computing world somehow need to

    access critical data, but they also need it quickly. Data visualization allows
    ﬁrms to

    understand and make choices more quickly, but the fundamental difﬁculty is the

    volume of data. Employing a parallel processing mechanism or a grid computing

    technique is possible, and it allows the organization to work in near real-time,
    but it is

    an expensive option.

    •

    Data Interpretation: Collecting data into the correct format requires much knowledge.

    Data from social media is unstructured and must be preprocessed before customers

    and big data analytics applications can use it.

    •

    Data Availability and Connectivity: When data for smart city and urban planning

    projects is collected from sensors and distributed at various sites, continuous
    commu-

    nication with high bandwidth is required to ensure exact and timely forecast [90].

    •

    Inadequate Skill sets: Data analyst skill is in short supply in many organizations.

    A team of data scientists, developers, and analysts with domain expertise is required,

    which is currently scarce and challenging to locate [90].

    3.4. Autonomous Driving Systems in Smart Transportation

    In smart transportation systems, autonomous driving utilizes advanced technologies,

    including sensors, cameras, artiﬁcial intelligence, and data analytics, which
    enable vehicles

    to operate with little or no human intervention [93]. This conveys that vehicles
    are only

    called autonomous when the automated system can carry out all alternating tasks,
    such as

    navigating through trafﬁc in different driving environments.

    To enable self-driving capabilities, these systems typically combine hardware
    and

    software components. These autonomous vehicles are equipped with hardware/sensors

    such as radar, lidar, and cameras to help them perceive their environment [94].
    They also

    have advanced processing systems to analyze the data and make decisions. The software

    Sensors 2023, 23, 3880

    18 of 32

    components of autonomous driving systems in smart transportation systems include

    algorithms and machine learning models that can interpret the data from the sensors.
    [95].

    3.4.1. Existing Relevant Works

    The emergence of these self-driving technologies offers various beneﬁts to smart

    transportation. Some of the beneﬁts are improved safety, increased efﬁciency,
    greater

    accessibility, enhanced productivity, improved mobility, and better trafﬁc management.

    A signiﬁcant beneﬁt of an autonomous vehicle is that it can improve trafﬁc conditions

    by increasing per-vehicle occupancy and decreasing the ﬂeet of vehicles on the
    road [96].

    Additionally, autonomous cars could perform intelligent ﬂeet management by carefully

    communicating with their counterparts, reducing trafﬁc jams. Furthermore, current
    au-

    tonomous vehicles have 360 degrees vision which helps reduce accidents signiﬁcantly.

    Anderson et al. [97] researched to prove that autonomous vehicles can reduce the

    poisonous gas disseminated into the air by selecting the best trip routes, consequently

    improving fuel efﬁciency. Additionally, Mobility-as-a-Service (MaaS) and car sharing
    are

    promising applications enabled by autonomous vehicles that do not require redundant

    human interactions. The MaaS paradigm [98] will help consumers save money, time,
    space,

    and even human resources (such as drivers). The driver of an autonomous vehicle
    can sit

    back, relax, and take pleasure in the ride. The autonomous car allows designers
    to create

    immersive passenger experiences that would not otherwise be possible [99]. Tesla
    is one of

    the current autonomous vehicles worth discussing, which utilizes a software application

    called “summon”. Owners of Tesla vehicles can summon their vehicles via the mobile

    application. Thus, the car can drive itself to a designated parking spot, such
    as a basement,

    and the owner can request to have it parked anywhere. Cars with this feature can
    also be

    parked in tight spaces where exiting is difﬁcult [100,101].

    3.4.2. Challenges

    Autonomous driving systems play a critical role in smart transportation systems,

    enhancing safety, reducing trafﬁc congestion, and making transportation more sustainable.

    However, it is important to acknowledge that these systems require extensive development

    and ongoing innovation to address the technical, legal, and ethical issues associated
    with

    their deployment. Here, we will discuss some challenges this system faces.

    •

    Regulation: The complexity of autonomous vehicles poses major technical challenges

    when it comes to their validation and testing. For traditional vehicles, current
    stan-

    dards exist, such as that from the International Standardization Organization
    (ISO),

    which deﬁnes the functional features that their vendors must adhere to during
    man-

    ufacturing. However, these standards can not be applied to an autonomous vehicle

    because of its ability to make sole decisions, unlike traditional cars that require
    humans

    to make these decisions. Therefore, due to the high uncertainty of the predictions
    that

    these vehicles may make in different driving scenarios, it is impossible and impractical

    to meet all the requirements to validate and test autonomous cars [102].

    •

    Safety and Reliability: A signiﬁcant challenge for autonomous vehicles is ensuring

    their safety for both passengers and other road users. The implementation of au-

    tonomous vehicles can reduce accidents due to human error. However, they must
    be

    capable of detecting and reacting to unexpected situations, such as sudden changes
    in

    road conditions or pedestrian movements.

    •

    Security and Privacy: Although promising study ﬁndings, security, and privacy
    remain

    fundamental barriers to the widespread use of connected automotive technologies.

    During all communications, user and location information, must be kept safe, which

    might be a challenge for autonomous vehicles because all of the inherent security
    risks

    connected with sensors, communication networks, and short-range communications

    can easily be transferred to them. As a result, security will be important in
    the future

    development of self-driving automobiles [96]. Selﬁsh individuals, hackers, angry

    employees, or terrorist groups would all be interested in a completely automated

    Sensors 2023, 23, 3880

    19 of 32

    system like an autonomous automobile. In the worst-case scenario, such cars may
    be

    utilized for terrorist acts without the need for a driver.

    •

    Cost: Although tremendous progress has been made in bringing the cost of produc-

    ing autonomous vehicles down, these savings are still insufﬁcient to make them
    a

    ﬁnancially viable choice for the average household. It will take some time before

    autonomous vehicles become a norm in middle-class families.

    3.5. Comparative Analysis of IoT, Machine Learning, Big Data, and Autonomous Driving
    Services

    in Smart Transportation Systems

    Here, we will compare the different technologies and existing literature discussed
    to

    determine which ones have been the most effective in achieving certain services.
    By analyz-

    ing and comparing the performance of different technologies, transportation authorities,

    and manufacturers can make informed decisions about which technologies and strategies

    to implement in their own smart transportation systems. This sub-section will
    explore

    comparative analysis in the context of smart transportation systems, highlighting
    some of

    the technologies used in the development of the smart system by various researchers
    and

    discussing some of the potential beneﬁts/services the system targets.

    In Table 1, we present a comparative analysis of the smart transportation technologies

    discussed previously with respect to the services they render.

    Table 1. Comparative Analysis of Smart Transportation Technologies and their Services.

    Services

    Beneﬁts

    Papers

    Technology Used

    Mobility as a Service(MaaS)

    •

    Real-time data analytics

    for car informatics

    •

    Transportation services

    via cloud computing

    [63,64,77,85,87–89,98]

    IoT, Machine learning, Big

    data, Autonomous systems.

    Shared Autonomous Vehicles

    (SAVs)

    •

    It combines the beneﬁts

    of shared mobility and

    autonomous vehicles to

    provide a safe, conve-

    nient, and cost-effective

    transportation solution.

    [96–99]

    Autonomous driving systems,

    Machine learning

    Incident management systems

    (IMS)

    •

    Manages events that oc-

    cur on transportation sys-

    tems, such as accidents,

    breakdowns, or other dis-

    ruption.

    •

    Proactively manages traf-

    ﬁc ﬂow

    [65,72,75,76,78,86]

    IoT, Machine learning, Big

    data

    Shared mobility

    •

    Ride-sharing services

    •

    Reduced trafﬁc conges-

    tion

    •

    Improved air quality

    •

    Increased accessibility to

    transportation options

    [85,88,97]

    Big data , Autonomous

    driving system

    Location Tracking Systems

    •

    Employs GPS technology

    to track the position of

    vehicles

    •

    Enables manufacturers,

    or car owners to track the

    performance of their ve-

    hicles in real-time

    [71,79,88]

    Machine learning

    Sensors 2023, 23, 3880

    20 of 32

    4. Applications of Smart Transportation Systems

    In this section, we examine the main current smart transportation systems. These

    systems are divided into seven classes based and their functionality as depicted
    in Figure 5.

    We divided these systems to provide a structured understanding of the different
    types of

    systems and compared their functionalities pertaining to smart transportation
    systems.

    4.1. Route Optimization

    Urban regions frequently have trafﬁc congestion, which is only worsening as more

    vehicles are added to the road. In order to reduce trafﬁc congestion, route optimization

    proposes the optimum path for a given destination. Both the amount of time it
    takes to

    travel and vehicle emissions are decreased by reducing trafﬁc congestion [103].
    The route

    optimization problem has been widely challenged and researched in the literature
    by

    applying various technical approaches to the IoT infrastructure.

    Google was one of the ﬁrst companies to harness the potential of crowdsourcing
    for

    developing new services. All modern mobile devices are compatible with the free
    Google

    Maps app. Integrated GPS, accelerometer, and gyroscope sensors are found in mobile

    devices. In 2009, Google unveiled a brand-new service that would provide users
    access to

    trafﬁc data within Google Maps [104]. Fixed location sensors or other monitoring
    systems

    did not gather the trafﬁc data. Using the maps application, the end user’s mobile
    device

    can submit anonymous information about their location and speed. To reduce congestion,

    Google Maps can now recommend other routes based on trafﬁc data.

    The authors of [105] investigate whether there is any connection between trafﬁc
    jams,

    greenhouse gas emissions, and the user-generated data from Google’s “popular times”

    feature. In the study, cameras on particular roadways and cars with a GNSS data
    logger

    are used to collect trafﬁc data. Emissions are estimated based on the Vehicle
    Speciﬁc Power

    (VSP) model and Google Maps’ popular time data. The ﬁndings revealed a correlation

    between the crowdsourced data of “popular times” and emissions, while further
    data

    calibration and an adaptive learning algorithm to examine related cases would
    be required

    to create precise correlations.

    Figure 5. Applications of Smart Transportation Systems.

    Sensors 2023, 23, 3880

    21 of 32

    Embracing the idea of crowdsourcing, [106] used a swarm intelligence algorithm
    for

    route optimization to investigate the potential of mobile crowd-sensing for intelligent

    transportation systems. The authors implement a Modiﬁed Crowd-Sensing version
    of the

    Ant Colony Optimization algorithm (MoCSACO). Similar to how ants follow pheromone

    lines to ﬁnd food, users will communicate with one another and navigate to less
    crowded

    areas by following the messages they receive from other users.

    Additionally, crowdsourcing route planning for the ﬁnal mile to a destination
    was

    done in [107]. According to the authors, using straightforward methods like the
    shortest

    path or shortest time rarely results in an accurate plan for the ﬁnal mile. Users,
    on the

    other hand, could share their driving patterns around various destinations, providing

    more accurate directions at the last navigation segment. In this study, a mobile
    application

    called CrowdNavi is used to gather data and offer recommendations for a journey’s
    ﬁnal

    mile. Finding the ﬁnal segment is a requirement of the application. The ﬁrst segment
    is

    determined using crowd data and a process known as landmark scoring, while the
    last

    portion is suggested using data from sites like Google Maps.

    4.2. Parking

    By eliminating the need to hunt parking lots in search of an open spot, making
    it

    easier to ﬁnd available places in advance helps lessen trafﬁc and pollution [29].
    Many

    parking applications are created to monitor parking lot availability efﬁciently,
    provide users

    with reservation options, and even incorporate parking detection and alerting
    systems.

    Many IoT devices have been employed to detect the presence of a car in a parking
    spot

    and convey the information to a centralized system. Additionally, other studies
    apply ML

    algorithms that use image data to detect free parking slots massively. Saarika
    et al. [57]

    proposes a smart parking strategy with the concept of an IoT-supported parking
    lot and

    a smart signboard to display pertinent information. Ultrasonic sensors in the
    parking lot

    will determine whether parking spaces are available, and a WiFi module will gather
    and

    transfer the data to a cloud server. A user can now utilize a smartphone application
    or a

    smart signboard to check parking availability. The signboard is an LCD or LED
    display

    powered by a Raspberry Pi that will gather and show data on parking accessibility,
    weather

    conditions, travel times to speciﬁc locations, etc.

    To determine availability, the authors in [108] also place ultrasonic sensors
    at each

    parking space. The sensor is linked to an Arduino Uno, which uses an ESP8266-01
    WiFi

    module to transmit data to a cloud server. The MQTT protocol is used for communication.

    The cloud server runs ThingSpeak, an IoT platform that provides customers with
    various

    management and monitoring options. Last but not least, customers can download
    an

    Android app that enables them to reserve parking spaces and automate parking payments.

    The authors suggest a smart parking system using a hardware and a software com-

    ponent in [109]. Magnetic sensors are employed in the hardware to detect cars
    in parking

    spaces, and a gateway device is positioned on the side of the road to collect
    data and trans-

    mit it to a distant server. The software component’s objective is to suggest to
    the user the

    closest available free parking space. This is accomplished using a genetic algorithm
    to ﬁnd

    the shortest path between the user’s position and the closest available slot.
    Rizvi et al. [56]

    introduces an additional smart parking strategy with the development of an agent-oriented

    smart parking recommendation system (ASPIRE). Through a “Local Agent”, users of
    the

    ASPIRE system can conﬁgure their parking preferences, such as their favorite location
    and

    maximum walking time, and the system will take all of this information into account
    when

    a request is made for a parking space. A cloud-based software agent will thereafter
    select

    the best parking locations for the customer. The Local Agent notiﬁes the user,
    who then

    selects their chosen parking space. The Analytic Hierarchy Process (AHP), a systematic

    mathematical method for analyzing complicated problems, is the foundation of the
    parking

    recommendation algorithm. RFID scanners that track and identify vehicles entering
    and

    exiting parking lots are also installed at the entrance. The cars must also be
    equipped

    with an RFID tag to make identiﬁcation possible. Shi et al. [110] presents an
    end-to-end

    Sensors 2023, 23, 3880

    22 of 32

    parking system. A smartphone application, a modular cloud server, physical sensors
    and

    microcontrollers installed at parking spaces, and a third-party payment provider
    make up

    the system. Geomagnetic vehicle detectors at the parking spaces scan for the presence
    of

    vehicles and relay the information to the cloud server using a BC95-B5 NB-IoT
    module.

    There are various modules on the cloud server. A basic information module that
    oversees

    the sensor nodes and other administrative duties a module with manageable information

    for the system’s maintainers, a charging module that computes charges and sends
    reports

    to the third-party charging service, and a sensor node surveillance system that
    allows

    monitoring of the availability of parking spaces and the sensor’s operational
    status, a busi-

    ness intelligence module that facilitates querying and visualizing parking data,
    and a task

    management module. Through a web-based mobile application, the system is accessible

    to the end user. Finally, the cloud server and the mobile web app enable payments
    via

    third-party payment services like Alipay and WeChat pay.

    4.3. Lights

    Smart Street Lights (SSL) are a crucial component of a smart city and are included

    in the category of smart transportation services. Smart lighting can save energy
    while

    providing dynamic functionality and manageability. Jia et al. [111] implements
    an SSL

    implementation based on IoT technology. By including a light sensor, an IR sensor,
    GPS,

    and a wireless connection module, streetlights acquire smart features. By being
    aware

    of congested locations and dynamically adjusting their light intensity, lamps
    can make

    densely populated areas safer while simultaneously using less energy. When the
    street

    light breaks, the GPS can let a centralized system tracks its location and condition
    and

    expedite maintenance procedures. The NB-IoT network serves as the foundation for
    the

    communication between the management system and SSL. The management system is

    built on fog nodes, which gather information from a number of bulbs and periodically

    assess their condition. In addition to the automatic processes that SSLs offer,
    they can

    also be remotely administered via the established management platform. Kokilavani
    and

    Malathi [112] presents a similar and simpler method for smart lights. This design
    connects

    the lamp with a light sensor, an IR sensor, and an IR led using a raspberry pi
    as the

    microcontroller. The sun’s rise and set will be detected by the light sensors,
    which will then

    turn on and off the bulb. In order to save energy, the lighting can also recognize
    passing

    vehicles or pedestrians and switch the lamps on and off dynamically.

    Additionally, the authors in [113] suggest a smart lighting system in which each
    lamp

    post will function as a WiFi hotspot, allowing various types of collected data
    to be sent to a

    central web server. To achieve a considerable cost reduction, the lights will
    dynamically

    turn on/off or dim depending on the surrounding environment. Lamp posts will be

    embedded with cameras and sensors to monitor the area, ensuring that people are
    safe

    during crises and enhancing the capabilities of a standard lamp post.

    4.4. Controlled Junction and Trafﬁc Lights

    A controlled junction uses trafﬁc lights to control when vehicles may enter the
    junction.

    This is done in an effort to smooth access to a trafﬁc jam on the route. Sensors
    are frequently

    used to control trafﬁc signal junctions. These sensors identify areas where trafﬁc
    accumu-

    lates as it approaches the junction and then extend the green light to allow for
    more vehicles

    to pass through. Transponders installed in junctions can also be used to prioritize
    entry to

    the junction so that emergency vehicles and public transportation can move through
    the

    junction more quickly. By carefully regulating the timing of trafﬁc signals and
    the speed of

    approaching cars, intersection control tries to maximize junction throughput and
    reduce

    stopping time.

    The authors in the research [114] suggest a revolutionary decentralized trafﬁc
    light

    control system that utilizes wireless sensor networks. The wireless sensor network,
    the lo-

    calized trafﬁc ﬂow model policy, and the higher-level coordination of the trafﬁc
    light agents

    are the three levels of the system architecture. The nearest Intersection Control
    Agent (ICA)

    Sensors 2023, 23, 3880

    23 of 32

    receives data from the wireless sensors, which track the number, speed, and other
    charac-

    teristics of passing cars, and uses it to estimate the intersection’s ﬂow model.
    The real-time

    adaptive control of the trafﬁc signals is the key contribution. This will also
    enhance the

    movement of cars. By regulating the trafﬁc lights, an intersection control agent
    controls

    the intersection. To control a larger area, several intersection agents can communicate
    with

    one another.

    4.5. Accident Detection

    Accident detection and prevention, a domain of smart transportation, is critical
    for

    every city because an effective preventative strategy can help save lives. If
    drivers maintain

    greater concentration while on the road, accidents can be avoided. An accident
    prevention

    system allows drivers to be notiﬁed about critical situations and allow them to
    act promptly.

    By identifying accident-prone locations or accidents that have already occurred
    in the live

    trafﬁc network, accident detection can also help to reduce the number of accidents
    and

    trafﬁc congestion. Machine learning has shown to be particularly helpful in identifying

    trafﬁc incidents, as well as in identifying patterns that may result in new accidents
    and

    alerting drivers to help them avoid them.

    The research’s authors [37] suggest an IoT cloud platform to enable trafﬁc visualization

    and early alerts about unexpected slowdowns that could cause accidents. The established

    conﬁguration would include Infrastructure as a Service (IaaS), Platform as a Service
    (PaaS),

    Software as a Service(SaaS), and a novel approach called IoT as a Service (IoTaaS).
    Devices

    installed in volunteer vehicles will be used to collect GPS data, which is then
    transmitted

    over a 4G network to a cloud server. With the help of the OpenGTS platform and
    Open-

    StreetMaps, the cloud server manages GPS data. To facilitate further analysis,
    the data is

    stored in a SQL format and a Distributed MongoDB database. The use of Docker containers

    supports the scalability of the back end. The system response time is a crucial
    factor in the

    implementation’s success, and the suggested solution can transmit an alert over
    a distance

    of 1 km in a little under 120 ms.

    4.6. Road Anomalies

    Since the state of the road immediately impacts many aspects of transportation,
    road

    anomaly detection is essential in smart transportation. A road anomaly detection
    system’s

    primary function is to ﬁnd potholes and bumps in the road and alert drivers. Trafﬁc

    congestion, car damage, and road accidents can all result from poor road conditions.

    A CNN-based method for identifying concrete fractures in photos taken with a hand-

    held camera in erratic lighting circumstances was proposed by [115]. The designed
    CNN

    is trained on 40 K images of 256 × 256 pixel resolutions and records with about
    98%

    accuracy. It was reported that their suggested method was particularly effective
    at ﬁnding

    thin fractures in low-light situations that are challenging to ﬁnd using more
    conventional

    techniques like Canny and Sobel edge detection.

    Additionally, the use of transfer learning and pre-trained deep learning models
    for

    crack damage identiﬁcation in UAV photos of civil infrastructure was proposed
    by [116].

    (which also included a small proportion of road surface images). The results demonstrate

    that, without any data augmentation or preprocessing, their suggested strategy
    can quickly

    and simply achieve up to 90% accuracy in crack discovery in real-world scenarios.

    4.7. Infrastructure

    Modern transportation has proﬁted in numerous ways from the development of IoT

    technology. It has developed new ways of thinking as well as new applications
    that have

    improved transportation. The capabilities of Intelligent Transportation Systems
    can be

    signiﬁcantly increased by changing their infrastructure. [117] makes a novel communica-

    tion method suggestion. Based on the IoT principle of M2M communication, the authors

    propose and simulate a vehicle-to-vehicle (V2V) communication framework. In the
    sug-

    gested architecture, the cars will use GPS to determine their location and communicate

    Sensors 2023, 23, 3880

    24 of 32

    with nearby automobiles to exchange information about their speed, motions, and
    locations

    while simultaneously uploading the data to a server. Thus, sudden speed changes
    can be

    warned to oncoming trafﬁc in advance to prevent accidents, and information regarding

    trafﬁc congestion can be shared with oncoming vehicles to improve guidance services.

    The research [118] suggests a hardware and software system to facilitate bus ﬂeet

    monitoring and enhance user interaction. The suggested technology includes IR
    sensors

    to count passengers boarding and leaving the bus, RFID tags to uniquely identify
    buses,

    and GPS to track the vehicle’s whereabouts in real-time. A TI CC3200 microcontroller

    with an inbuilt WiFi module is used to collect and upload the acquired data to
    a cloud

    server. Additionally, each bus stop has a TI CC3200 module attached to an LCD
    so that

    the passengers can view the provided information. The users are also given access
    to the

    information via a mobile application.

    The term “Social Internet of Vehicles” (SIoV) is created by fusing the concepts
    of social

    networks with the internet of things for applications in smart transportation.
    To reduce

    SIOV communication congestion, the authors of [119] suggest a cross-layered Vehicular

    Social Network Protocol (VSNP). To speed up communication, the protocol extends
    to the

    MAC, Physical, and network levels. Circular time slots are divided into rings
    by the MAC

    layer. Wireless Sensor Network nodes comprise the physical layer, and the network
    layer

    facilitates routing from outer rings to a ﬁxed access point. In simulations run
    in Matlab,

    the proposed protocol outperforms an existing protocol (MERLIN).

    In Table 2, we summarize some of the existing applications in smart transporta-

    tion, their technologies, architectures, and communication mechanisms, along with
    who

    uses them.

    Table 2. Summary of Existing Applications.

    Application

    Technology

    Architecture

    Communication Mechanism

    Used by:

    End User/Management

    [41]

    IoT (V2V)

    -

    -

    End User

    [42]

    IoT

    Cloud

    4G

    End User

    [58]

    IoT, RFID

    Cloud

    3G/4G

    End user

    [109]

    Crowd Sourcing

    Cloud

    4G/5G

    End User

    [110]

    Crowd Sourcing

    -

    -

    End User

    [111]

    Crowd Sourcing

    Client - Server

    -

    End User

    [112]

    Crowd Sourcing

    Cloud

    3G/4G,

    End User

    [113]

    IoT

    Cloud

    Wireless Sensor Network

    End User

    [114]

    IoT

    Cloud

    Wireless sensor network

    End User

    [115]

    IoT

    Cloud

    4G

    Management

    [116]

    IoT

    Fog Computing

    Wiﬁ, 4G

    Management

    [117]

    IoT

    -

    -

    Management

    [118]

    IoT (RFID,GPS)

    Cloud

    Wiﬁ

    End User

    [119]

    IoT

    Wireless sensor

    neworks

    Vehicular Social Network Protocol

    Management

    [120]

    Machine learning

    (CNN)

    -

    -

    Both

    [121]

    Deep Neural Network

    -

    -

    Both

    5. Challenges and Future Direction of Smart Transportation

    In this section, we highlight the present challenges with smart transportation
    systems

    as well as potential future directions for research in smart transportation systems.

    Sensors 2023, 23, 3880

    25 of 32

    5.1. Challenges

    Although smart transportation systems have gained popularity over the years due
    to

    their ability to provide fast, convenient, and effective services, they are not
    without ﬂaws.

    One is the overload of wireless networks attributable to the rising number of
    devices

    used for trafﬁc monitoring and management, which is likely the most signiﬁcant
    recognized

    communication difﬁculty. As the number of devices increases, so will the requirement
    for

    an adaptive routing protocol for resource allocation and prioritization, as well
    as a system

    for storing and managing large volumes of road trafﬁc data [84].

    Other problems revolve around vehicle-to-vehicle (V2V) communication. New certiﬁ-

    cate management systems must be created to protect the privacy, safety, and security
    of

    infrastructure communication networks [120]. V2V communications can be the subject
    of

    transmission interference or other intrusion attempts, such as seizing control
    of the vehicle

    or manipulating data transmitted to other mobile hosts, which can lead to accidents.

    With the incorporation of numerous sensors and actuators into vehicles, data collecting

    via a consistent process has become a new difﬁculty. Data collecting is also linked
    to data

    transmission to network access points (Road Side Units in most cases). To investigate,

    descriptions of the sensors as well as their setups are required [121].

    Aside from the issue of data collection, data privacy, and security also pose
    signiﬁcant

    threats to smart transportation, as discussed earlier in Section ??. Smart transportation

    systems create and gather massive quantities of data, including personally identiﬁable
    in-

    formation. It is critical to ensure the privacy and security of sensitive data,
    as these systems

    are subject to hacking by malicious individuals for selﬁsh reasons. These vulnerabilities

    could cause dire effects on passengers and drivers on the road in terms of fatalities
    and

    maybe even loss of life.

    Integrating mobile (smart) devices in vehicle and transportation systems can open
    the

    way for data collection about the vehicular environment. Combining vehicle sensor
    data

    with environmental data on a computing platform is difﬁcult since the data formats
    and

    contents differ, and there is no common technique for data fusion [90]. Interoperability

    can be difﬁcult to achieve since various technologies may use distinct data formats
    and

    protocols. This can be difﬁcult for towns and communities that do not have the
    appropriate

    technological knowledge or skill sets to maintain and equip them.

    Another issue is that of costly implementation and high level of complexity within

    these systems. Smart transportation solutions need substantial expenditures in
    hardware,

    software, and infrastructure. This can be a signiﬁcant challenge to adoption,
    particularly in

    smaller cities and villages [122]. Additionally, smart transportation systems
    are complicated

    and need speciﬁc knowledge and skills in data analytics, artiﬁcial intelligence,
    and IoT

    technology. For smart transportation systems to function efﬁciently, numerous
    technologies

    and platforms must be compatible.

    Additionally, connectivity is paramount in a smart transportation system. To function

    properly, smart transportation systems rely signiﬁcantly on data and communication

    networks. Any disruption or breakdown in these networks can result in signiﬁcant
    issues

    such as trafﬁc congestion, delays, and safety dangers.

    5.2. Future Directions

    As stated in Section 3, smart transportation is a ﬁeld that focuses on improving

    transportation systems using advanced technologies such as machine learning, IoT,
    and big

    data analytics. Here, some fundamental open problems in smart transportation systems

    that require additional investigation are discussed.

    •

    Access to the data processed and stored by these systems is crucial for government

    agencies, commercial businesses, and academics researching and developing new
    ITS

    technologies and services. This is because access to standardized data is critical
    for

    integrating connected and autonomous cars, as well as other sectors of this ﬁeld
    that

    rely heavily on data [83,84]. Communication is a critical component of data access

    when cars and travelers traverse jurisdictional boundaries and they are critical
    for

    Sensors 2023, 23, 3880

    26 of 32

    the next generation of smart transportation systems. Research could be conducted

    into ways to increase the resilience of smart transportation systems through backup

    systems, redundancy, and disaster recovery planning.

    •

    Another significant challenge is security and privacy; these are critical and
    continuous

    issues in the transportation industry [91]. Cyber attacks on transportation infrastructure

    can impact national security, public safety, and the economy. Future research
    can explore

    ways to improve the security of data transmission, storage, and processing, including
    en-

    crypting, controlling access, and detecting intrusions. Additionally, the use
    of advanced

    authentication and authorization systems, intrusion prevention systems, and threat

    intelligence can be explored in future research on smart transportation systems.

    •

    Exploring the potential of autonomous cars to decrease trafﬁc congestion and increase

    road safety: As stated earlier, autonomous cars can alleviate trafﬁc congestion
    while

    also improving road safety [96]. Researchers may look into how effective these
    cars

    are in reducing trafﬁc congestion and improving road safety, as well as their
    effects on

    transportation demand and the environment.

    •

    Investigating the use of blockchain technology to improve transportation security,

    efﬁciency, and reliability: By providing a secure and transparent record of transactions,

    blockchain technology can improve transportation security, efﬁciency, and depend-

    ability [123]. Researchers may examine blockchain technology’s potential in smart

    transportation and create new applications and use cases.

    •

    Examining the role of smart transportation in enhancing accessibility and mobility

    for disadvantaged groups (e.g., the aged, the disabled, and the low-income): Smart

    transportation may increase accessibility and mobility for underserved populations,

    including the elderly, disabled, and low-income people, [96]. Researchers may
    explore

    the efﬁcacy of smart transportation solutions in enhancing accessibility and mobility

    for these populations, as well as create methods to overcome any adoption hurdles.

    •

    Green transportation: Smart transportation systems can be structured to prioritize
    and

    encourage environmentally friendly modes of transportation [97] such as public
    trans-

    portation, cycling, and electric automobiles. This would assist in cutting greenhouse

    gas emissions while also improving air quality in cities.

    6. Conclusions

    In this paper, we gave an in-depth survey of smart transportation systems and
    applica-

    tions by reviewing the major technologies currently used to develop smart transportation

    systems. We highlighted the challenges, history as well as smart transportation
    applica-

    tions using these technologies. Additionally, we discussed the common architectures
    that

    provide the development schemes of smart transportation systems. We assembled
    several

    current research relating to these technologies as well as theoretical evaluations
    of these

    systems. We then aggravated the uses of these applications into the segments that
    are

    applied in the smart transportation sector.

    Furthermore, the communication protocols used by these smart transportation sys-

    tems to ensure functionality were analyzed. Common communication protocols were

    explained, as well as systems that currently use these protocols to improve the
    issues of the

    transportation systems. The challenges currently facing these systems have been
    addressed

    in this paper as well as future research that could have benevolent impacts in
    improving the

    issues of these systems in our society. In this paper, we gave an in-depth survey
    of smart

    transportation systems and applications by reviewing the major technologies currently
    used

    to develop smart transportation systems. We highlighted the challenges, history
    as well

    as smart transportation applications using these technologies. Additionally, we
    discussed

    the common architectures that provide the development schemes of smart transportation

    systems. We assembled several current research relating to these technologies
    as well as

    theoretical evaluations of these systems. We then aggravated the uses of these
    applications

    into the segments that are applied in the smart transportation sector.

    Sensors 2023, 23, 3880

    27 of 32

    Furthermore, the communication protocols these smart transportation systems used

    to ensure functionality were analyzed. Common communication protocols were explained,

    as well as systems that currently use these protocols to improve the issues of
    the transporta-

    tion systems. The challenges currently facing these systems have been addressed
    in this

    paper and future research that could have benevolent impacts in improving the
    issues of

    these systems in our society.

    Author Contributions: Conceptualization, F.L.; methodology, D.O. and K.G. (Khushi
    Gupta); re-

    sources, K.G. (Kubra Gundogan) and N.A.K.; data curation, N.A.K. and K.G. (Kubra
    Gundogan);

    writing—original

    draft

    preparation,

    D.O.

    and

    K.G.

    (Khushi

    Gupta);

    writing—review and editing, D.O., K.G. (Khushi Gupta) and F.L.; visualization,
    D.O. and K.G.

    (Khushi Gupta); supervision, F.L.; project administration, F.L. and L.G. All authors
    have read and

    agreed to the published version of the manuscript.

    Funding: This research received no external funding.

    Data Availability Statement: The data that support the ﬁndings of this study are
    openly available

    in Google Scholar.

    Conﬂicts of Interest: The authors declare no conﬂict of interest.

    References

    1.

    Tekler, Z.D.; Low, R.; Yuen, C.; Blessing, L. Plug-Mate: An IoT-based occupancy-driven
    plug load management system in smart

    buildings. Build. Environ. 2022, 223, 109472. [CrossRef]

    2.

    afZhuang, D.; Gan, V.J.; Tekler, Z.D.; Chong, A.; Tian, S.; Shi, X. Data-driven
    predictive control for smart HVAC system in

    IoT-integrated buildings with time-series forecasting and reinforcement learning.
    Appl. Energy 2023, 338, 120936.

    3.

    Low, R.; Tekler, Z.D.; Cheah, L. Predicting commercial vehicle parking duration
    using generative adversarial multiple imputation

    networks. Transp. Res. Rec. 2020, 2674, 820–831. [CrossRef]

    4.

    Kang, H.S.; Lee, J.Y.; Choi, S.; Kim, H.; Park, J.H.; Son, J.Y.; Kim, B.H.; Noh,
    S.D. Smart manufacturing: Past research, present

    ﬁndings, and future directions. Int. J. Precis. Eng. Manuf.-Green Technol. 2016,
    3, 111–128. [CrossRef]

    5.

    Kandogan, Y.; Johnson, S.D. Role of economic and political freedom in the emergence
    of global middle class. Int. Bus. Rev. 2016,

    25, 711–725. [CrossRef]

    6.

    How Many Cars Are in the U.S.? 2022. Available online: https://www.fool.com/the-ascent/research/car-ownership-statistics/

    (accessed on 20 July 2022).

    7.

    Zhang, J.; Wang, F.Y.; Wang, K.; Lin, W.H.; Xu, X.; Chen, C. Data-driven intelligent
    transportation systems: A survey. IEEE Trans.

    Intell. Transp. Syst. 2011, 12, 1624–1639. [CrossRef]

    8.

    Eisele, W.L.; Fossett, T.; Schrank, D.L.; Farzaneh, M.; Meier, P.J.; Williams,
    S.P. Greenhouse Gas Emissions and Urban Congestion:

    Incorporation of Carbon Dioxide Emissions and Associated Fuel Consumption into
    Texas A&M Transportation Institute Urban

    Mobility Report. Transp. Res. Rec. 2014, 2427, 73–82.

    9.

    Allen, H.; Millard, K.; Stonehill, M. A summary of the proceedings from the united
    nations climate change conference in doha

    qatar and their signiﬁcance for the land transport sector. In Proceedings of the
    Copenhagen: Bridging the Gap (btg) Initiative,

    Doha, Qatar, 1 September 2013.

    10.

    Nasim, R.; Kassler, A. Distributed architectures for intelligent transport systems:
    A survey. In Proceedings of the 2012 Second

    Symposium on Network Cloud Computing and Applications, London, UK, 3–4 December
    2012; pp. 130–136.

    11.

    McGregor, R.V.; Eng, P.; MacIver, A. Regional its architectures—From policy to
    project implementation. In Proceedings of the

    The Transportation Factor 2003, Annual Conference and Exhibition of the Transportation
    Association of Canada, (Congres et

    Exposition Annuels de l’Association des transport du Canada) Transportation Association
    of Canada (TAC), St. John’s, NL,

    Canada, 21–24 September 2003.

    12.

    Guerrero-Ibanez, J.A.; Zeadally, S.; Contreras-Castillo, J. Integration challenges
    of intelligent transportation systems with

    connected vehicle, cloud computing, and internet of things technologies. IEEE
    Wirel. Commun. 2015, 22, 122–128. [CrossRef]

    13.

    Hong, K.; Lillethun, D.; Ramachandran, U.; Ottenwälder, B.; Koldehofe, B. Mobile
    fog: A programming model for large-scale

    applications on the internet of things. In Proceedings of the Second ACM SIGCOMM
    Workshop on Mobile Cloud Computing,

    Hong Kong, China, 16 August 2013; pp. 15–20.

    14.

    Giang, N.K.; Leung, V.C.; Lea, R. On developing smart transportation applications
    in fog computing paradigm. In Proceedings of

    the 6th ACM Symposium on Development and Analysis of Intelligent Vehicular Networks
    and Applications, Valletta, Malta,

    13–17 November 2016; pp. 91–98.

    15.

    Chen, W.; Chen, L.; Chen, Z.; Tu, S. Wits: A wireless sensor network for intelligent
    transportation system. In Proceedings of the

    First International Multi-Symposiums on Computer and Computational Sciences (IMSCCS’06),
    Hangzhou, China, 20–24 June

    2006; Volume 2, pp. 635–641.

    Sensors 2023, 23, 3880

    28 of 32

    16.

    Hull, B.; Bychkovsky, V.; Zhang, Y.; Chen, K.; Goraczko, M.; Miu, A.; Shih, E.;
    Balakrishnan, H.; Madden, S. Cartel: A distributed

    mobile sensor computing system. In Proceedings of the 4th International Conference
    on Embedded networked Sensor Systems,

    Boulder, CO, USA, 31 October–3 November 2006; pp. 125–138.

    17.

    Srinivasan, L.; Treadwell, J. An overview of service-oriented architecture, web
    services and grid computing. HP Softw. Glob. Bus.

    Unit 2005, 2, 1–13.

    18.

    Zhou, C.; Duan, J.; Xin, Z. Beijing trafﬁc data center based on SOA technology.
    In Proceedings of the International Conference on

    Computer Application and System Modeling (ICCASM 2010), Taiyuan, China, 22–24
    October 2010; Volume 15, pp. 232–235.

    19.

    Li, C. Travel Information Service system for public travel based on SOA. In Proceedings
    of the Proceedings of 2010 IEEE

    International Conference on Service Operations and Logistics, and Informatics,
    Qingdao, China, 15–17 July 2010, pp. 321–324.

    20.

    Lu, X.l. Research on architecture for web services based uniform GIS transportation
    information platform. In Proceedings of the

    2006 International Conference on Machine Learning and Cybernetics, Dalian, China,
    13–16 August 2006; pp. 2770–2775.

    21.

    Tao, X.; Jiang, C.; Han, Y. Applying SOA to intelligent transportation system.
    In Proceedings of the 2005 IEEE International

    Conference on Services Computing (SCC’05) Vol-1, Orlando, FL, USA, 11–15 July2005;
    Volume 2, pp. 101–104.

    22.

    Vaquero, L.M.; Rodero-Merino, L. Finding your way in the fog: Towards a comprehensive
    deﬁnition of fog computing. ACM

    SIGCOMM Comput. Commun. Rev. 2014, 44, 27–32. [CrossRef]

    23.

    Bonomi, F.; Milito, R.; Zhu, J.; Addepalli, S. Fog computing and its role in the
    internet of things. In Proceedings of the First

    Edition of the MCC Workshop on Mobile Cloud Computing, Helsinki, Finland, 17 August
    2012; pp. 13–16.

    24.

    Hajibaba, M.; Gorgin, S. A review on modern distributed computing paradigms: Cloud
    computing, jungle computing and fog

    computing. J. Comput. Inf. Technol. 2014, 22, 69–84. [CrossRef]

    25.

    Sarkar, S.; Chatterjee, S.; Misra, S. Assessment of the Suitability of Fog Computing
    in the Context of Internet of Things. IEEE

    Trans. Cloud Comput. 2015, 6, 46–59. [CrossRef]

    26.

    Shi, W.; Dustdar, S. The promise of edge computing. Computer 2016, 49, 78–81.
    [CrossRef]

    27.

    Lin, J.; Yu, W.; Yang, X.; Zhao, P.; Zhang, H.; Zhao, W. An edge computing based
    public vehicle system for smart transportation.

    IEEE Trans. Veh. Technol. 2020, 69, 12635–12651. [CrossRef]

    28.

    Mobin, G.; Roy, A. A literature review on cloud based smart transport system.
    In Proceedings of the 2021 5th International

    Conference on Trends in Electronics and Informatics (ICOEI), Tirunelveli, India,
    3–5 June 2021; pp. 1245–1250.

    29.

    Arthurs, P.; Gillam, L.; Krause, P.; Wang, N.; Halder, K.; Mouzakitis, A. A taxonomy
    and survey of edge cloud computing for

    intelligent transportation systems and connected vehicles. IEEE Trans. Intell.
    Transp. Syst. 2021, 23, 6206–6221. [CrossRef]

    30.

    Cai, W.H.; Sun, T.T. CTS: The new generation intelligent transportation system.
    In Proceedings of the 2011 Second International

    Conference on Innovations in Bio-inspired Computing and Applications, Shenzhen,
    China, 16–18 December 2011; pp. 137–140.

    31.

    Jaworski, P.; Edwards, T.; Moore, J.; Burnham, K. Cloud computing concept for
    intelligent transportation systems. In Proceedings

    of the 2011 14th International IEEE Conference on Intelligent Transportation Systems
    (ITSC), Washington, DC, USA, 5–7 October

    2011; pp. 391–936.

    32.

    Tsubouchi, K.; Yamato, H.; Hiekata, K. Innovative on-demand bus system in Japan.
    IET Intell. Transp. Syst. 2010, 4, 270–279.

    [CrossRef]

    33.

    Gohar, A.; Nencioni, G. The role of 5G technologies in a smart city: The case
    for intelligent transportation system. Sustainability

    2021, 13, 5188. [CrossRef]

    34.

    Camacho, F.; Cárdenas, C.; Muñoz, D. Emerging technologies and research challenges
    for intelligent transportation systems: 5G,

    HetNets, and SDN. Int. J. Interact. Des. Manuf. (IJIDeM) 2018, 12, 327–335. [CrossRef]

    35.

    Aamir, M.; Masroor, S.; Ali, Z.A.; Ting, B.T. Sustainable framework for smart
    transportation system: A case study of karachi.

    Wirel. Pers. Commun. 2019, 106, 27–40. [CrossRef]

    36.

    Teece, D.J. 5G Mobile: Disrupting the Automotive Sector; UC Berkeley: Berkeley,
    CA, USA, 2017.

    37.

    Celesti, A.; Galletta, A.; Carnevale, L.; Fazio, M.; ´Lay-Ekuakille, A.; Villari,
    M. An IoT cloud system for trafﬁc monitoring and

    vehicular accidents prevention based on mobile sensor data processing. IEEE Sens.
    J. 2017, 18, 4795–4802. [CrossRef]

    38.

    Global Infrastructure Hub Vehicle to Vehicle (V2V) Connectivity. 2020. Available
    online: https://www.gihub.org/infrastructure-

    technology-use-cases/case-studies/vehicle-to-vehicle-v2v-connectivity/ (accessed
    on 10 July 2022).

    39.

    Djahel, S.; Jabeur, N.; Barrett, R.; Murphy, J. Toward V2I communication technology-based
    solution for reducing road trafﬁc

    congestion in smart cities. In Proceedings of the 2015 International Symposium
    on Networks, Computers and Communications

    (ISNCC), Hammamet, Tunisia, 13–15 May 2015; pp. 1–6.

    40.

    Jimenez, J.A. Smart transportation systems. In Smart Cities; Springer: Berlin/Heidelberg,
    Germany, 2018; pp. 123–133.

    41.

    Gupta, M.; Benson, J.; Patwa, F.; Sandhu, R. Secure V2V and V2I communication
    in intelligent transportation using cloudlets.

    IEEE Trans. Serv. Comput. 2020, 15, 1912–1925. [CrossRef]

    42.

    Abboud, K.; Omar, H.A.; Zhuang, W. Interworking of DSRC and cellular network technologies
    for V2X communications: A

    survey. IEEE Trans. Veh. Technol. 2016, 65, 9457–9470. [CrossRef]

    43.

    Cao, D.; Zheng, B.; Ji, B.; Lei, Z.; Feng, C. A robust distance-based relay selection
    for message dissemination in vehicular network.

    Wirel. Netw. 2020, 26, 1755–1771. [CrossRef]

    Sensors 2023, 23, 3880

    29 of 32

    44.

    Singh, A.; Kumar, M.; Rishi, R.; Madan, D. A relative study of MANET and VANET:
    Its applications, broadcasting approaches and

    challenging issues. In Proceedings of the International Conference on Computer
    Science and Information Technology, Bangalore,

    India, 2–4 January 2011; pp. 627–632.

    45.

    Chang, I.C.; Tai, H.T.; Yeh, F.H.; Hsieh, D.L.; Chang, S.H. A vanet-based a* route
    planning algorithm for travelling time-and

    energy-efﬁcient gps navigation app. Int. J. Distrib. Sens. Netw. 2013, 9, 794521.
    [CrossRef]

    46.

    Meneguette, R.I. A vehicular cloud-based framework for the intelligent transport
    management of big cities. Int. J. Distrib. Sens.

    Netw. 2016, 12, 8198597. [CrossRef]

    47.

    Tubaishat, M.; Zhuang, P.; Qi, Q.; Shang, Y. Wireless sensor networks in intelligent
    transportation systems. Wirel. Commun. Mob.

    Comput. 2009, 9, 287–302. [CrossRef]

    48.

    Mukhtar, A.; Xia, L.; Tang, T.B. Vehicle detection techniques for collision avoidance
    systems: A review. IEEE Trans. Intell. Transp.

    Syst. 2015, 16, 2318–2338. [CrossRef]

    49.

    Kumbhar, M.A. Wireless sensor networks: A solution for smart transportation. J.
    Emerg. Trends Comput. Inf. Sci. 2012, 3, 46.

    50.

    Araújo, A.; Kalebe, R.; Girao, G.; Goncalves, K.; Melo, A.; Neto, B. Iot-based
    smart parking for smart cities. In Proceedings of the

    2017 IEEE First Summer School on Smart Cities (S3C), Natal, Brazil, 6–11 August
    2017; pp. 31–36.

    51.

    Wang, H.; He, W. A reservation-based smart parking system.

    In Proceedings of the 2011 IEEE Conference on Computer

    Communications Workshops (INFOCOM WKSHPS), Shanghai, China, 10–15 April 2011;
    pp. 690–695.

    52.

    Sherly, J.; Somasundareswari, D. Internet of things based smart transportation
    systems. Int. Res. J. Eng. Technol. 2015, 2, 1207–1210.

    53.

    Singh, D.; Singh, M.; Singh, I.; Lee, H.J. Secure and reliable cloud networks
    for smart transportation services. In Proceedings

    of the 2015 17th International Conference on Advanced Communication Technology
    (ICACT), Phoenix Park, PyeongChang,

    Republic of Korea, 1–3 July 2015; pp. 358–362.

    54.

    Tang, Q.; Yang, K.; Li, P.; Zhang, J.; Luo, Y.; Xiong, B. An energy efﬁcient MCDS
    construction algorithm for wireless sensor

    networks. EURASIP J. Wirel. Commun. Netw. 2012, 2012, 1–15. [CrossRef]

    55.

    Liao, Z.; Wang, J.; Zhang, S.; Cao, J.; Min, G. Minimizing movement for target
    coverage and network connectivity in mobile

    sensor networks. IEEE Trans. Parallel Distrib. Syst. 2014, 26, 1971–1983. [CrossRef]

    56.

    Rizvi, S.R.; Zehra, S.; Olariu, S. Aspire: An agent-oriented smart parking recommendation
    system for smart cities. IEEE Intell.

    Transp. Syst. Mag. 2018, 11, 48–61. [CrossRef]

    57.

    Saarika, P.; Sandhya, K.; Sudha, T. Smart transportation system using IoT. In
    Proceedings of the 2017 International Conference

    On Smart Technologies For Smart Nation (SmartTechCon), Bengaluru, India, 17–19
    August 2017; pp. 1104–1107.

    58.

    El Khateeb, S. IoT architecture a gateway for smart cities in Arab world. In Proceedings
    of the 2018 15th Learning and Technology

    Conference (L&T), Jeddah, Saudi Arabia, 25–26 February 2018; pp. 153–160.

    59.

    Farooq, M.U.; Waseem, M.; Mazhar, S.; Khairi, A.; Kamal, T. A review on internet
    of things (IoT). Int. J. Comput. Appl. 2015,

    113, 1–7.

    60.

    Mehmood, Y.; Ahmad, F.; Yaqoob, I.; Adnane, A.; Imran, M.; Guizani, S. Internet-of-things-based
    smart cities: Recent advances

    and challenges. IEEE Commun. Mag. 2017, 55, 16–24. [CrossRef]

    61.

    Top 10 IOT Applications in 2020. 2022. Available online: https://iot-analytics.com/iot-2022-in-review/
    (accessed on 22 July 2022).

    62.

    Derawi, M.; Dalveren, Y.; Cheikh, F.A. Internet-of-things-based smart transportation
    systems for safer roads. In Proceedings of

    the 2020 IEEE 6th World Forum on Internet of Things (WF-IoT), New Orleans, LA,
    USA, 2–16 June 2020; pp. 1–4.

    63.

    Pham, T.N.; Tsai, M.F.; Nguyen, D.B.; Dow, C.R.; Deng, D.J. A cloud-based smart-parking
    system based on Internet-of-Things

    technologies. IEEE Access 2015, 3, 1581–1591. [CrossRef]

    64.

    Jan, B.; Farman, H.; Khan, M.; Talha, M.; Din, I.U. Designing a smart transportation
    system: An internet of things and big data

    approach. IEEE Wirel. Commun. 2019, 26, 73–79. [CrossRef]

    65.

    Niture, D.V.; Dhakane, V.; Jawalkar, P.; Bamnote, A. Smart transportation system
    using IOT. Int. J. Eng. Adv. Technol. 2021,

    10, 434–438. [CrossRef]

    66.

    Sriratnasari, S.R.; Wang, G.; Kaburuan, E.R.; Jayadi, R. Integrated Smart Transportation
    using IoT at DKI Jakarta. In Proceedings

    of the 2019 International Conference on Information Management and Technology
    (ICIMTech), Bali, Denpasar, 19–20 August

    2019; Volume 1, pp. 531–536.

    67.

    Soltanmohammadi, E.; Ghavami, K.; Naraghi-Pour, M. A survey of trafﬁc issues in
    machine-to-machine communications over

    LTE. IEEE Internet Things J. 2016, 3, 865–884. [CrossRef]

    68.

    Dogra, A.K.; Kaur, J. Moving towards smart transportation with machine learning
    and Internet of Things (IoT): A review. J. Smart

    Environ. Green Comput. 2022, 2, 3–18. [CrossRef]

    69.

    Mohammed, M.; Khan, M.B.; Bashier, E.B.M. Machine Learning: Algorithms and Applications;
    Crc Press: Boca Raton, FL, USA, 2016.

    70.

    Sheth, A. History of Machine Learning. 2018. Available online: https://medium.com/bloombench/history-of-machine-learning-

    7c9dc67857a5 (accessed on 13 August 2022).

    71.

    Low, R.; Cheah, L.; You, L. Commercial vehicle activity prediction with imbalanced
    class distribution using a hybrid sampling

    and gradient boosting approach. IEEE Trans. Intell. Transp. Syst. 2020, 22, 1401–1410.
    [CrossRef]

    72.

    You, L.; Zhao, F.; Cheah, L.; Jeong, K.; Zegras, C.; Ben-Akiva, M. Future mobility
    sensing: An intelligent mobility data collection

    and visualization platform. In Proceedings of the 2018 21st International Conference
    on Intelligent Transportation Systems (ITSC),

    Maui, HI, USA, 4–7 November 2018; pp. 2653–2658.

    Sensors 2023, 23, 3880

    30 of 32

    73.

    Ghosh, A.; Chatterjee, T.; Samanta, S.; Aich, J.; Roy, S. Distracted driving:
    A novel approach towards accident prevention. Adv.

    Comput. Sci. Technol. 2017, 10, 2693–2705.

    74.

    Hou, Y.; Edara, P.; Sun, C. Trafﬁc ﬂow forecasting for urban work zones. IEEE
    Trans. Intell. Transp. Syst. 2014, 16, 1761–1770.

    [CrossRef]

    75.

    Dogru, N.; Subasi, A. Trafﬁc accident detection using random forest classiﬁer.
    In Proceedings of the 2018 15th Learning and

    Technology Conference (L&T), Jeddah, Saudi Arabia, 25–26 February 2018; pp. 40–45.

    76.

    Behrisch, M.; Bieker, L.; Erdmann, J.; Krajzewicz, D. SUMO–simulation of urban
    mobility: An overview.

    In Proceedings

    of the SIMUL 2011, The Third International Conference on Advances in System Simulation,
    ThinkMind, Barcelona, Spain,

    23–29 October 2011.

    77.

    Li, P.; Abdel-Aty, M.; Cai, Q.; Islam, Z. A deep learning approach to detect real-time
    vehicle maneuvers based on smartphone

    sensors. IEEE Trans. Intell. Transp. Syst. 2020, 23, 3148–3157. [CrossRef]

    78.

    Keller, M.; Haß, C.; Seewald, A.; Bertram, T. A model predictive approach to emergency
    maneuvers in critical trafﬁc situations.

    In Proceedings of the 2015 IEEE 18th International Conference on Intelligent Transportation
    Systems, Gran Canaria, Spain, 15–18

    September 2015; pp. 369–374.

    79.

    Yu, J.; Chang, G.L.; Ho, H.; Liu, Y. Variation based online travel time prediction
    using clustered neural networks. In Proceedings of

    the 2008 11th International IEEE Conference on Intelligent Transportation Systems,
    Beijing, China, 12–15 October 2008; pp. 85–90.

    80.

    Sarker, I.H. Machine learning: Algorithms, real-world applications and research
    directions. SN Comput. Sci. 2021, 2, 1–21.

    [CrossRef] [PubMed]

    81.

    Mohammadi, M.; Al-Fuqaha, A. Enabling cognitive smart cities using big data and
    machine learning: Approaches and challenges.

    IEEE Commun. Mag. 2018, 56, 94–101. [CrossRef]

    82.

    Sarker, I.H.; Kayes, A.; Watters, P. Effectiveness analysis of machine learning
    classiﬁcation models for predicting personalized

    context-aware smartphone usage. J. Big Data 2019, 6, 1–28. [CrossRef]

    83.

    Lee, W.H.; Tseng, S.S.; Shieh, W.Y. Collaborative real-time trafﬁc information
    generation and sharing framework for the intelligent

    transportation system. Inf. Sci. 2010, 180, 62–70. [CrossRef]

    84.

    Azgomi, H.F.; Jamshidi, M. A brief survey on smart community and smart transportation.
    In Proceedings of the 2018 IEEE 30th

    International Conference on Tools with Artiﬁcial Intelligence (ICTAI), Volos,
    Greece, 5–7 November 2018; pp. 932–939.

    85.

    Wang, Y.; Ram, S.; Currim, F.; Dantas, E.; Sabóia, L.A. A big data approach for
    smart transportation management on bus network.

    In Proceedings of the 2016 IEEE International Smart Cities Conference (ISC2),
    Trento, Italy, 12–15 September 2016; pp. 1–6.

    86.

    Ozbayoglu, M.; Kucukayan, G.; Dogdu, E. A real-time autonomous highway accident
    detection model based on big data

    processing and computational intelligence. In Proceedings of the 2016 IEEE International
    Conference on Big Data (Big Data),

    Washington, DC, USA, 5–8 December 2016; pp. 1807–1813.

    87.

    Khazaei, H.; Zareian, S.; Veleda, R.; Litoiu, M. Sipresk: A big data analytic
    platform for smart transportation. In Smart City 360°;

    Springer: Berlin/Heidelberg, Germany, 2016; pp. 419–430.

    88.

    Rathore, M.M.; Ahmad, A.; Paul, A.; Jeon, G. Efﬁcient graph-oriented smart transportation
    using internet of things generated big

    data. In Proceedings of the 2015 11th International Conference on Signal-Image
    Technology & Internet-Based Systems (SITIS),

    Bangkok, Thailand, 23–27 November 2015; pp. 512–519.

    89.

    Babar, M.; Arif, F. Real-time data processing scheme using big data analytics
    in internet of things based smart transportation

    environment. J. Ambient Intell. Humaniz. Comput. 2019, 10, 4167–4177. [CrossRef]

    90.

    Shukla, S.; Balachandran, K.; Sumitha, V. A framework for smart transportation
    using Big Data. In Proceedings of the 2016

    International Conference on ICT in Business Industry & Government (ICTBIG), Indore,
    India, 18–19 November 2016; pp. 1–3.

    91.

    Haque, A.B.; Bhushan, B.; Dhiman, G. Conceptualizing smart city applications:
    Requirements, architecture, security issues, and

    emerging trends. Expert Syst. 2022, 39, e12753. [CrossRef]

    92.

    Batistiˇc, S.; van der Laken, P. History, evolution and future of big data and
    analytics: A bibliometric analysis of its relationship to

    performance in organizations. Br. J. Manag. 2019, 30, 229–251. [CrossRef]

    93.

    Faisal, A.; Kamruzzaman, M.; Yigitcanlar, T.; Currie, G. Understanding autonomous
    vehicles. J. Transp. Land Use 2019, 12, 45–72.

    [CrossRef]

    94.

    Schwarting, W.; Alonso-Mora, J.; Rus, D. Planning and decision-making for autonomous
    vehicles. Annu. Rev. Control. Robot.

    Auton. Syst. 2018, 1, 187–210. [CrossRef]

    95.

    Wiseman, Y. Autonomous vehicles. In Research Anthology on Cross-Disciplinary Designs
    and Applications of Automation; IGI Global:

    Hershey, PA, USA, 2022; pp. 878–889.

    96.

    Hussain, R.; Zeadally, S. Autonomous cars: Research results, issues, and future
    challenges. IEEE Commun. Surv. Tutor. 2018,

    21, 1275–1313. [CrossRef]

    97.

    Anderson, J.M.; Kalra, N.; Stanley, K.; Sorensen, P.; Samaras, C.; Tobi, A.O.
    Autonomous Vehicle Technology: A Guide

    for Policymakers, Santa Monica, Calif.: RAND Corporation. Technical Report, RR-443-2-RC,
    2016. Available online: https:

    //www.rand.org/pubs (accessed on 11 October 2017).

    98.

    Tyagi, A.K.; Aswathy, S. Autonomous Intelligent Vehicles (AIV): Research statements,
    open issues, challenges and road for future.

    Int. J. Intell. Netw. 2021, 2, 83–102. [CrossRef]

    Sensors 2023, 23, 3880

    31 of 32

    99.

    Kim, H.S.; Yoon, S.H.; Kim, M.J.; Ji, Y.G. Deriving future user experiences in
    autonomous vehicle.

    In Proceedings of the

    Adjunct Proceedings of the 7th International Conference on Automotive User Interfaces
    and Interactive Vehicular Applications,

    Nottingham, UK, 1–3 September 2015; pp. 112–117.

    100. Pierce, D. Tesla Summon Hints at How the World of Self-Driving Cars Will
    Work. Wired.

    2016. Available online: https:

    //www.wired.com/2016/01/tesla-summon/ (accessed on 22 August 2022).

    101. Li, L.; Liu, Y.; Wang, J.; Deng, W.; Oh, H. Human dynamics based driver model
    for autonomous car. IET Intell. Transp. Syst. 2016,

    10, 545–554. [CrossRef]

    102. Aeberhard, M.; Rauch, S.; Bahram, M.; Tanzmeister, G.; Thomas, J.; Pilat,
    Y.; Homm, F.; Huber, W.; Kaempchen, N. Experience,

    results and lessons learned from automated driving on Germany’s highways. IEEE
    Intell. Transp. Syst. Mag. 2015, 7, 42–57.

    [CrossRef]

    103. Al-Dweik, A.; Muresan, R.; Mayhew, M.; Lieberman, M. IoT-based multifunctional
    scalable real-time enhanced road side unit

    for intelligent transportation systems. In Proceedings of the 2017 IEEE 30th Canadian
    Conference on Electrical and Computer

    Engineering (CCECE), Windsor, ON, Canada, 30 April–3 May 2017; pp. 1–6.

    104. Barth, D. The Bright Side of Sitting in Trafﬁc: Crowdsourcing Road Congestion
    Data.

    Google Ofﬁce Blog. 2009. Available

    online: https://googleblog.blogspot.com/2009/08/bright-side-of-sitting-in-trafﬁc.html
    (accessed on 22 August 2022).

    105. Taﬁdis, P.; Teixeira, J.; Bahmankhah, B.; Macedo, E.; Coelho, M.C.; Bandeira,
    J. Exploring crowdsourcing information to predict

    trafﬁc-related impacts. In Proceedings of the 2017 IEEE International Conference
    on Environment and Electrical Engineering and

    2017 IEEE Industrial and Commercial Power Systems Europe (EEEIC/I&CPS Europe),
    Milan, Italy, 6–9 June 2017; pp. 1–6.

    106. Distefano, S.; Merlino, G.; Puliaﬁto, A.; Cerotti, D.; Dautov, R. Crowdsourcing
    and stigmergic approaches for (Swarm) intelligent

    transportation systems.

    In Proceedings of the International Conference on Human Centered Computing, Kazan,
    Russia,

    7–9 August 2017; pp. 616–626.

    107. Fan, X.; Liu, J.; Wang, Z.; Jiang, Y.; Liu, X. Crowdsourced road navigation:
    Concept, design, and implementation. IEEE Commun.

    Mag. 2017, 55, 126–128. [CrossRef]

    108. Gupta, A.; Kulkarni, S.; Jathar, V.; Sharma, V.; Jain, N. Smart car parking
    management system using IoT. Am. J. Sci. Eng. Technol.

    2017, 2, 112–119.

    109. Aydin, I.; Karakose, M.; Karakose, E. A navigation and reservation based
    smart parking platform using genetic optimization for

    smart cities. In Proceedings of the 2017 5th International Istanbul Smart Grid
    and Cities Congress and Fair (ICSG), Istanbul,

    Turkey, 19–21 April 2017; pp. 120–124.

    110. Shi, J.; Jin, L.; Li, J.; Fang, Z. A smart parking system based on NB-IoT
    and third-party payment platform. In Proceedings of the

    2017 17th International Symposium on Communications and Information Technologies
    (ISCIT), Cairns, QLD, Australia, 25–27

    September 2017; pp. 1–5.

    111. Jia, G.; Han, G.; Li, A.; Du, J. SSL: Smart street lamp based on fog computing
    for smarter cities. IEEE Trans. Ind. Inform. 2018,

    14, 4995–5004. [CrossRef]

    112. Kokilavani, M.; Malathi, A. Smart street lighting system using IoT. Int.
    J. Adv. Res. Appl. Sci. Technol. 2017, 3, 8–11.

    113. Tripathy, A.K.; Mishra, A.K.; Das, T.K. Smart lighting: Intelligent and weather
    adaptive lighting in street lights using IOT. In

    Proceedings of the 2017 International Conference on Intelligent Computing, Instrumentation
    and Control Technologies (ICICICT),

    Kerala, India, 6–7 July 2017; pp. 1236–1239.

    114. Tubaishat, M.; Shang, Y.; Shi, H. Adaptive trafﬁc light control with wireless
    sensor networks. In Proceedings of the 2007 4th IEEE

    Consumer Communications and Networking Conference, Las Vegas, NV, USA, 11–13 January
    2007; pp. 187–191.

    115. Cha, Y.J.; Choi, W.; Büyüköztürk, O. Deep learning-based crack damage detection
    using convolutional neural networks.

    Comput.-Aided Civ. Infrastruct. Eng. 2017, 32, 361–378. [CrossRef]

    116. Gopalakrishnan, K.; Gholami, H.; Vidyadharan, A.; Choudhary, A.; Agrawal,
    A. Crack damage detection in unmanned aerial

    vehicle images of civil infrastructure using pre-trained deep learning model.
    Int. J. Trafﬁc Transp. Eng 2018, 8, 1–14.

    117. Chowdhury, D.N.; Agarwal, N.; Laha, A.B.; Mukherjee, A. A vehicle-to-vehicle
    communication system using Iot approach. In

    Proceedings of the 2018 Second International Conference on Electronics, Communication
    and Aerospace Technology (ICECA),

    Coimbatore, India, 29–31 March 2018; pp. 915–919.

    118. Geetha, S.; Cicilia, D. IoT enabled intelligent bus transportation system.
    In Proceedings of the 2017 2nd International Conference

    on Communication and Electronics Systems (ICCES), Coimbatore, India, 19–20 October
    2017; pp. 7–11.

    119. Jain, B.; Brar, G.; Malhotra, J.; Rani, S.; Ahmed, S.H. A cross layer protocol
    for trafﬁc management in Social Internet of Vehicles.

    Future Gener. Comput. Syst. 2018, 82, 707–714. [CrossRef]

    120. Pop, M.D.; Pandey, J.; Ramasamy, V. Future Networks 2030: Challenges in Intelligent
    Transportation Systems. In Proceedings

    of the 2020 8th International Conference on Reliability, Infocom Technologies
    and Optimization (Trends and Future Direc-

    tions)(ICRITO), Noida, India, 4–5 June 2020; pp. 898–902.

    121. Datta, S.K.; Da Costa, R.P.F.; Härri, J.; Bonnet, C. Integrating connected
    vehicles in Internet of Things ecosystems: Challenges

    and solutions. In Proceedings of the 2016 IEEE 17th International Symposium on
    a World of Wireless, Mobile and Multimedia

    Networks (WoWMoM), Coimbra, Portugal, 21–24 June 2016; pp. 1–6.

    Sensors 2023, 23, 3880

    32 of 32

    122. Narayanan, S.; Chaniotakis, E.; Antoniou, C. Shared autonomous vehicle services:
    A comprehensive review. Transp. Res. Part C

    Emerg. Technol. 2020, 111, 255–293. [CrossRef]

    123. van der Heijden, R.W.; Engelmann, F.; Mödinger, D.; Schönig, F.; Kargl, F.
    Blackchain: Scalability for resource-constrained

    accountable vehicle-to-x communication. In Proceedings of the 1st Workshop on
    Scalable and Resilient Infrastructures for

    Distributed Ledgers, Las Vegas, NV, USA, 11–15 December 2017; pp. 1–5.

    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all
    publications are solely those of the individual

    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to

    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.

    '
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/23/8/3880/pdf?version=1681197572
  publication_year: 2023
  relevance_evaluation: 3
  relevance_score: 0.8999999761581421
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart Transportation: An Overview of Technologies and Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22155834
  analysis: '>'
  authors:
  - Noble Anumbe
  - Clint Saidy
  - Ramy Harik
  citation_count: 9
  explanation: The Future Factory is the result of the total reorganization, connection,
    and efﬁcient utilization of the means of production, including assets, processes,
    and people. It is less about the automation and digitization of individual elements
    or parts of the production process, and more about the connectivity or ties between
    a broad range of internal and external components and processes to enable real-time
    data sharing and information exchange, and intelligent feedback and responses
    between all nodes within the manufacturing ecosystem. The goal is to enable the
    achievement of smarter, quicker, and more efﬁcient solutions.
  full_citation: '>'
  full_text: '>

    Citation: Anumbe, N.; Saidy, C.;

    Harik, R. A Primer on the Factories of

    the Future. Sensors 2022, 22, 5834.

    https://doi.org/10.3390/s22155834

    Academic Editor: Jorn Mehnen

    Received: 6 June 2022

    Accepted: 27 July 2022

    Published: 4 August 2022

    Publisher’s Note: MDPI stays neutral

    with regard to jurisdictional claims in

    published maps and institutional afﬁl-

    iations.

    Copyright:

    © 2022 by the authors.

    Licensee MDPI, Basel, Switzerland.

    This article is an open access article

    distributed

    under

    the

    terms

    and

    conditions of the Creative Commons

    Attribution (CC BY) license (https://

    creativecommons.org/licenses/by/

    4.0/).

    sensors

    Article

    A Primer on the Factories of the Future

    Noble Anumbe 1,2,*

    , Clint Saidy 1,2 and Ramy Harik 1,2

    1

    Department of Mechanical Engineering, University of South Carolina, Columbia,
    SC 29201, USA

    2

    McNair Aerospace Center, University of South Carolina, Columbia, SC 29201, USA

    *

    Correspondence: anumbe@mailbox.sc.edu

    Abstract: In a dynamic and rapidly changing world, customers’ often conﬂicting
    demands have con-

    tinued to evolve, outstripping the ability of the traditional factory to address
    modern-day production

    challenges. To ﬁx these challenges, several manufacturing paradigms have been
    proposed. Some of

    these have monikers such as the smart factory, intelligent factory, digital factory,
    and cloud-based

    factory. Due to a lack of consensus on general nomenclature, the term Factory
    of the Future (or Future

    Factory) has been used in this paper as a collective euphemism for these paradigms.
    The Factory of

    the Future constitutes a creative convergence of multiple technologies, techniques,
    and capabilities

    that represent a signiﬁcant change in current production capabilities, models,
    and practices. Using

    the semi-narrative research methodology in concert with the snowballing approach,
    the authors

    reviewed the open literature to understand the organizing principles behind the
    most common smart

    manufacturing paradigms with a view to developing a creative reference that articulates
    their shared

    characteristics and features under a collective lingua franca, viz., Factory of
    the Future. Serving as a

    review article and a reference monograph, the paper details the meanings, characteristics,
    techno-

    logical framework, and applications of the modern factory and its various connotations.
    Amongst

    other objectives, it characterizes the next-generation factory and provides an
    overview of reference

    architectures/models that guide their structured development and deployment. Three
    advanced

    communication technologies capable of advancing the goals of the Factory of the
    Future and rapidly

    scaling advancements in the ﬁeld are discussed. It was established that next-generation
    factories

    would be data rich environments. The realization of their ultimate value would
    depend on the ability

    of stakeholders to develop the appropriate infrastructure to extract, store, and
    process data to support

    decision making and process optimization.

    Keywords: smart factory; advanced manufacturing; intelligent manufacturing; cyber
    manufactur-

    ing; cyber physical systems; Internet of Things; Industry 4.0; artiﬁcial intelligence;
    data driven

    manufacturing

    1. Introduction

    There is a burgeoning commitment by governments, industry, and academia to the

    digital transformation of industry with a view to attaining the Future Factory.
    Though it

    is still in its infancy, the Factory of the Future is one of the key constructs
    of Industry 4.0.

    In this paper, it is envisioned as a highly connected, very intelligent, and broadly
    digitized

    production facility. It represents the future state of a well-instrumented and
    fully con-

    nected manufacturing entity sitting atop a cyber-physical framework. It is assumed
    to be

    highly ﬂexible and extremely adaptable to production processes that rapidly accommodate

    product customization. The competitive edge of the factory of the future is that
    it reaches

    beyond the bounds of a traditional factory, which focuses on the rudimentary production

    of physical products and extends its reach into such far-ﬂung functions such as
    production

    planning, production scheduling, inventory management, supply chain logistics,
    and even

    product design and development, all with limited human intervention. It is imperative
    to

    understand past and present research trends to be able to fully understand and
    anticipate

    the future of factories, and thus support the formulation of strategies for the
    diffusion of

    Sensors 2022, 22, 5834. https://doi.org/10.3390/s22155834

    https://www.mdpi.com/journal/sensors

    Sensors 2022, 22, 5834

    2 of 76

    research ﬁndings and knowledge about the Factory of the Future. The purpose of
    this review

    paper is to articulate and characterize this Factory of the Future. The paper
    seeks to inves-

    tigate the meanings, characteristics, and technological underpinnings of the said
    Factory.

    Speciﬁcally, this research aims at answering the following research questions:
    RQ1: What

    is the Factory of the Future and what are its characteristics? What are the various
    reference

    architectures, including descriptions of their components, constraints, interconnections,

    and interactions that help deﬁne the Factory of the Future? What are the communication

    technologies that would have the most impact on the development of the Factory
    of the

    Future? Since the Factory of the Future is data-driven, what technologies and
    strategies exist

    for seamlessly connecting all assets to enable the processing of data for intelligent
    decision

    making? What are the key enabling technologies that underpin the Factory of the
    Future,

    and how are they currently being applied? The rest of the paper is arranged as
    follows:

    Section 2 lays a historical background for the evolution of manufacturing, beginning
    with

    the ﬁrst industrial revolution when manpower was the state-of-art. It proceeds
    with a

    system maturity model (i.e., Levels of System Sovereignty) that discriminates
    between

    the different levels of factory autonomy. It wraps up with a synopsis on the concept
    of

    Industry 4.0 and ends with an association between Industry 4.0 and the Future
    Factory.

    Section 3 oultlines the research methodology, and Section 4 delves deeper into
    articulating

    the concept of the Factory of the Future and its characteristics in the context
    of the man-

    ufacturing ecosystem (MeS). Section 5 discusses the conceptual framework of a
    typical

    Factory of the Future and the reference architectures which provide, in one model,
    vetted

    and recommended nomenclatures, structures, and integrations of various aspects
    (IT, OT,

    business, etc.) of an enterprise, necessary for the development or upgrade of
    the said

    factory. Section 6 outlines three communication standards/technologies (OPC-UA,
    TSN,

    and 5G mobile network) that would help shape the future of advanced manufacturing,

    and Section 7 looks at practical techniques and technologies necessary for the
    integration

    of the various assets within the factory with a view to enabling intra and inter-factory

    communication. Section 8 is dedicated to the key enabling technologies that make
    the

    Factory of the Future possible. The paper is concluded with a summary and conclusion
    in

    Section 11.

    2. A Historical Narrative: The Past, Present and Future of the Factory and Its
    Ecosystem

    Historical context is necessary to understand the Factory of the Future. This
    section

    provides a historical overview.

    2.1. The Industrial Revolutions

    Historical observers have reported a series of Industrial revolutions. These “industrial

    revolutions” are frames of reference for the intersection of events and emergent
    technolo-

    gies that often led to marked shifts in productivity, industry, and society. Each
    of the past

    revolutions was driven by the emergence of new technologies and systematically
    resulted

    in wholesale disruptions and concurrent transformations in industrial processes,
    manufac-

    turing methodologies, business models, and the organization of capital and labor.
    These

    shifts have not only resulted in global re-organization of the means of production,
    but also

    in remarkable changes to the socio-political, cultural, and economic fortunes
    of nations.

    We are currently in the dawn of the Fourth Industrial Revolution, and each of
    them can be

    described as follows: (a) The First Industrial Revolution (circa 1760 to 1840):
    This was the

    advent of mechanized production using coal, which resulted in the transition from
    muscle

    power to mechanical power [1–4]. It was triggered by the invention of the stream
    engine,

    and hydropower. It led to the emergence of the railroad construction industry.
    The major

    contribution of this era was improved efﬁciency. (b) The Second Industrial Revolution
    (late

    19th century (circa 1870) to early 20th century): The second Industrial revolution
    [5–7]

    emerged in part due to the arrival of electric power and the advent of the assembly
    line. It

    enabled mass production and kick-started the era of automation. (c) The Third
    Industrial Rev-

    olution (Mid (circa 1969) to Late Twentieth Century): The third Industrial revolution
    [8–10]

    Sensors 2022, 22, 5834

    3 of 76

    is otherwise known as the computer or digital revolution. Electronics and information

    technology were key technologies of this era. The era heralded the rise of computer
    net-

    works, the emergence of the Internet, and the arrival of robots. Automated production

    was also a product of this era, mostly facilitated by the growth of machine control
    and

    robots. (d) The Fourth Industrial Revolution: This era was marked by the ubiquity
    of physical

    object representation in highly interactive virtual information networks [11,12],
    leading up

    to the blurring of the boundaries between the physical and virtual worlds. This
    era [13]

    characterized a shift in reliance on the client-server model to the adoption of
    ubiquitous

    mobility that has come to catalyze the growth of smart things. Other remarkable
    elements

    of this era include the growth of exponential technologies such as digital twins
    [14–20],

    artiﬁcial intelligence (AI) [21–28], simulations [29–35], blockchain [36–41],
    big data and

    analytics [42–46], augmented and virtual reality (AR, VR) [47–54], and robotics
    [55–61].

    Industry 4.0 is a construct of the Fourth Industrial Revolution. It seeks to bring
    together

    the various conceptual elements capable of framing the eminent transformation
    expected

    from the collision of these technologies and the events they would likely trigger.
    The Fu-

    ture Factory is one of many outcomes of this construct. Though industry watchers
    have

    identiﬁed and focused on the four industrial revolutions referenced above, there
    are early

    speculations about a ﬁfth industrial revolution. There is currently a lack of
    consensus on a

    deﬁnition for this emerging revolution. However, current information suggests
    that the

    main distinction between the Fourth and Fifth Industrial Revolutions could surround
    the

    role of humans and the extent of their intervention in manufacturing. There are
    concerns

    that the full realization of the Fourth Industrial Revolution could alienate humans.
    There is

    therefore a strong debate being had around the idea of redeﬁning the role of humans
    in

    the factory. This could mean bringing humans back as the central feature of the
    factory

    through a deliberate emphasis on strong human–machine interaction.

    2.2. Levels of System Sovereignty (L2S): A System Maturity Model

    To evaluate the degrees of sovereignty of systems, machines, or other industrial

    components for each of the four industrial periods, we propose a system maturity
    model

    referred to as “Levels of System Sovereignty (L2IS). It shows the measure, state,
    or degree of

    a system’s autonomy or its ability to self-govern, without human intervention.
    The model

    divvies up the different stages of industrial (manufacturing) development based
    on the

    degrees to which tasks, system control, and authority are split between humans
    and

    machines (or more broadly, technology).

    Humans and machines have always shared control or authority in a mutually com-

    plimentary manner within the manufacturing space. What has varied is the degree
    of

    autonomy (control, authority, or sovereignty) maintained by either party. Based
    on this

    model, a factory (or any other qualifying industrial system) can be said to have
    at one of

    four (4) sovereignty levels: mechanization, automation, semi-autonomy, or autonomy
    (Near

    complete or full autonomy). Given this classiﬁcation, the higher the autonomy
    of a system,

    the lower the demand for human-level intelligence or manual intervention. The
    model is

    further discussed using Figure 1.

    Figure 1. Diagram depicting the four industrial revolutions and degrees of system
    sovereignty.

    Sensors 2022, 22, 5834

    4 of 76

    2.2.1. Mechanization

    At this stage of industrialization, machines (often heavy industrial machinery)
    were

    used to partially or completely do the work that was previously done using manual

    labor. Manual labor here refers to work performed by humans without any tools
    or sup-

    port. Mechanization was a distinct feature of the ﬁrst and second industrial revolutions.

    Though machines became the work horses of the industry, they lacked control of
    their ac-

    tions. Humans had total control of the machines and provided all the direction,
    instruction,

    and information.

    2.2.2. Automation

    Automation enables a reduction in human intervention in the production process.

    This is achieved through the predetermination of decision criteria, the development
    of sub-

    process relationships, and related actions and the embodiment of those pre-determinations

    in machines [62]. The integration of electronics, computers, control, and sensing
    elements

    into mechanized systems at the onset of the third Industrial revolution made it
    possible

    for machines to accept and execute instructions, giving them the ability to self-think,
    self-

    dictate, or more accurately, self-move. Automation is derived from two Greek words

    “autos” and “matos” meaning “self” and “thinking”, respectively. Notwithstanding
    the

    etymology of the word, automated systems have no initiative. They still operate
    within

    rule-based boundaries. They primarily execute pre-deﬁned tasks assigned to them
    by

    humans—they just happen to execute them faster and more efﬁciently. The automation

    category is also dominated by industrial machines and processes that are managed
    by

    hierarchical, centralized, and rigid control systems. While they can be optimized
    for

    increased efﬁciency, they are very difﬁcult to re-purpose and very poor at responding
    to

    change. The consequence is that they are unable to correctly respond when faced
    with

    unfamiliar situations, especially within dynamic environments, often necessitating
    the

    inevitable intervention of humans. Notwithstanding, the advantage of automation
    is that it

    reduces the demand for human (manual) intervention.

    2.2.3. Semi-Autonomy

    Most advanced factories today are at the “semi-autonomy” level. Semi-autonomous

    systems feature programmable devices and machines. Unlike systems from the prior
    gener-

    ation, they are smarter. They can better sense and understand their environments.
    Through

    the Internet of Things (IoT), they can interact with other entities, share data/information,

    and make some decisions within a volatile production environment leveraging machine/

    deep learning (ML/DL)-based technologies. The factors that helped facilitate this
    level

    of autonomy include the advent of the Internet, the maturation of computer networking

    technologies, the growth of the Internet of Things (IoT), and the rise of cyber-physical

    systems (CPS). Other factors include the cross-domain integration of modern operational

    technologies (OT) and info-tech/communication systems and the broader integration
    of

    advanced control devices (PLCs, PCs, PACs, etc.) into industrial systems.

    2.2.4. Autonomy

    Autonomy is the highest level of system control by non-human actors within the
    indus-

    trial and manufacturing processes. It is the expected future state of the Factory
    of the Future,

    a state where very limited human intervention would be required for the full functioning
    of

    a factory [63–66]. Artiﬁcial intelligence (AI), which provides and represents
    computational

    procedures for automated sensing, reasoning, learning, and decision making, would
    be a

    critical part of autonomy in manufacturing [67]. At full maturation, the Factory
    of the Future

    would be managed by intelligent heterarchical (i.e., non-hierarchical, or unranked)
    control

    mechanisms, which would make it possible for the factory to respond well to volatility,

    unpredictable disturbances, or sudden change within a dynamic environment. While
    we

    are still years away from that day, there is the hope (think autonomous cars),
    that one day a

    fully autonomous factory will be technologically feasible. A factory at this level
    of auton-

    Sensors 2022, 22, 5834

    5 of 76

    omy would have the ability to execute work, predict failures, grow smarter, self-correct,

    and if necessary, recover or compensate for failures with little or no explicit
    intervention

    or instructions from a human. The attainment of this state would require the maturation

    of autonomic systems, which would involve the embedding of advanced cognitive
    and

    deep learning capabilities within multiple sub-systems inside the factory. The
    time frame

    for attaining this maturation level would likely coincide with the era of artiﬁcial
    super

    intelligence (ASI) or thereabout: the artiﬁcial intelligence level where the intelligence
    of a

    computer would have equaled the intelligence of a human in virtually all areas,
    including

    reasoning, planning, solving problems, thinking abstractly, comprehending complex
    ideas,

    learning quickly, and learning from experience [68].

    Currently, human involvement in autonomic systems is signiﬁcant. As hinted earlier,

    the goal of achieving manufacturing systems autonomy is still far off. Many more
    years of

    signiﬁcant technological advancements would be required. Until then, the Factory
    of the

    Future will continue to exist within the wide chasm between automation and autonomy
    (i.e.,

    Semi-autonomy). Full autonomy is a future goal that would require signiﬁcant embedding

    of smart technologies within the manufacturing mainstream.

    2.3. Industry 4.0 and the Future Factory

    The term “Industry 4.0” (also spelled Industrie 4.0) has its origins in Germany
    [69]. It

    has been a subject of great intellectual and economic discussion within academia,
    industry,

    and government both locally and internationally [70]. It has also been a subject
    of multiple

    studies in the open literature [71,72]. Discussions around it ﬁrst emerged in
    the litera-

    ture sometime in November 2011 following a national strategic initiative by the
    German

    government aimed at the digitization, integration, transformation, and standardization
    of

    manufacturing. The US equivalent of this term is smart manufacturing [73,74].
    Industrie

    4.0 is a construct (idea or theory) of the Fourth Industrial Revolution that promotes
    the

    digitization of manufacturing. It seeks to improve upon the advances achieved
    in the Third

    Industrial Revolution, which included the adoption of computers and industrial
    automa-

    tion. It is a step higher forward that includes the integration of interconnected
    systems of

    intuitive, self-regulating, smart, and autonomous entities that seamlessly exchange
    data,

    perform tasks, and work collaboratively. The goals of the upgrades are the improvement
    in

    productivity, ﬂexibility, efﬁciency, and agility.

    CPS [75] and IoT are the core technologies that make Industry 4.0 possible. Figure
    2

    shows the other enabling technologies that are contributing to its full realization.
    In the ﬁnal

    report of the Industrie 4.0 working group entitled “Recommendations for implementing

    the strategic initiative INDUSTRIE 4.0” commissioned by the German Federal Ministry

    of Education and Research (BMBF) and aimed at securing the future of German manu-

    facturing industry, Industrie 4.0 was deﬁned as, “networks of manufacturing resources

    (manufacturing machinery, robots, conveyor and warehousing systems and production

    facilities) that are autonomous, capable of controlling themselves in response
    to different

    situations, self-conﬁguring, knowledge-based, sensor-equipped and spatially dispersed

    and that also incorporate the relevant planning and management systems” [76].
    Industry

    4.0 encompasses a plurality of methodologies, technologies, and emergent trends
    [77].

    At the very minimum, it is based on the technological concepts of cyber-physical
    systems

    (CPS) and Internet of Things (IoT) [78]. It is expected that Industry 4.0 will
    result in

    the exponential growth of data, improvement in operational effectiveness and a
    radical

    transformation of the landscape within several industry segments that will result
    in the

    development of new but nimble business models, build-out of highly customized
    products

    and the creation of very customer-centric services [76,79,80]. Interoperability,
    information

    transparency, technical assistance, and decentralized decision making were identiﬁed
    as

    the four pillars of Industrie 4.0 necessary for the development of the smart factories
    [81].

    Industry 4.0 as a concept is evolving. It is embracing newer paradigms, technologies,

    and distinct arrangements and organizational structures for these assets. Beyond
    represent-

    ing a technological transition from embedded systems to cyber-physical systems,
    it now

    Sensors 2022, 22, 5834

    6 of 76

    refers to the networking, organization, and marshaling of intelligent objects
    (people, ma-

    chines, and processes)—leveraging information, services, and communication technologies

    to help achieve machine and system autonomy, decentralized intelligence, and production

    optimization. Interoperability is about the ability of machines and other assets
    to seamlessly

    connect and communicate with one another (i.e., share data and information). Information

    transparency relates to the ability to access and acquire data and information
    and using

    same to build virtual models of the physical device or system. Technical assistance
    speaks

    to systems of non-human assets (robots, devices, and systems) working together
    to assist

    humans in solving problems. Additionally, decentralized decision making refers
    to the

    transfer of some resources and control to enable decision making at distributed
    locations

    within the network without a need for consent from a central control hub [81].

    Figure 2. Emerging technologies enabling the development of the Future Factory.

    3. Research Methodology

    The qualitative study of the Factory of the Future as a concept is a daunting
    prospect

    due to its multi-dimensional and cross-disciplinary scope. It must therefore be
    understood

    that a meaningful review of literature on the subject would require the interrogation
    of

    multiple research streams that are spread across a variety of domains and disciplines.

    3.1. Research Approach

    Given the aforementioned, reliance on traditional review methodologies for data

    collection, research trend tracking, knowledge syntheses, and objective viewpoint
    critique

    can be challenging, to say the least. For this reason, the semi-systematic (narrative)
    review

    approach was assumed to be a more realistic research approach. This approach caters
    to

    our need to implement a multi-disciplinary and multi-domain based reviews of literature

    in a less restrictive manner. This is in contrast to the traditional systematic
    review approach,

    which is primarily focused on the systematic appraisal, and synthesizing of primary
    sources

    around speciﬁc and narrowly scoped issues or topics. While a large portion of
    this review

    focuses on peer reviewed literature, it also draws upon ﬁndings from the gray
    literature

    (including industry reports, policy documents, white papers, etc.).

    3.2. Search Goals

    The authors’ primary search goal was to aggregate enough materials that could
    help

    the research team understand the Factories of the Future and the emerging technologies
    that

    are playing roles in making them smarter, faster, and more intuitive.

    3.3. Data Sources

    The primary data sources for this study included three digital sources, i.e.,
    Google

    Scholar, Web of Science, and Science Direct. To acquire the relevant articles,
    these sources

    were searched using several keywords. Starting with relevant articles from our
    primary

    search, we were able to track down other important (and sometimes obscure) articles

    that did not show up in the preliminary searches using the snowballing search
    strategy.

    Snowballing requires a set of initial articles, called seeds, to start the process.
    There are two

    approaches to this methodology: backward snowballing, which selects papers referenced
    by

    Sensors 2022, 22, 5834

    7 of 76

    the seeds, and forward snowballing, which selects papers that cite the seeds [82].
    Snowballing

    allows researchers to complement their primary set of relevant papers with additional

    sources, often using the primary search results as the seeds or starting point.
    The additional

    papers that result from the snowballing search are often papers that do not satisfy
    the origi-

    nal search query or other relevant papers that are not present in the databases
    considered.

    Grey literature and relatively dated research often fall within this category
    [83].

    3.4. Search Methodology

    The ﬁrst step was to search the data sources using certain keywords. Two main
    cate-

    gories of keywords were generated. The ﬁrst related to different manufacturing
    paradigms.

    This category included such keywords as “smart factory”, “intelligent factory”,
    “digital

    factory”, “industry 4.0”, “advanced manufacturing”, etc. They were used to aggregate

    content to enable an understanding of various aspects of the Factories of the
    Future, including

    the foundational principles, underlying concepts, and applications. The second
    category

    of key works related to the various emerging technologies that enable the Factories
    of the

    Future. Examples of keywords used in this category are “artiﬁcial intelligence”,
    “cloud

    computing”, “blockchain in manufacturing”, “big data in manufacturing”, “mixed
    reality”,

    “augmented reality”, and “virtual reality”. The search was focused on qualitative
    studies

    with abstracts or titles containing terms related to the different manufacturing
    paradigms

    and the key enabling technologies driving them. Once the relevant papers had been
    ex-

    tracted, the titles and abstracts of the articles were read for the initial screening.
    In the

    third step, all the articles selected from the initial screening were thoroughly
    reviewed to

    ensure their relevance to the subject areas. To ensure that other relevant articles
    that did

    not satisfy the original search query or were not present in the databases used
    were not

    omitted, snowballing was used in the next step. Search results from the database
    query

    and snowballing search then made up the comprehensive list of papers from which
    the list

    of principles, characteristics, and applications was prepared.

    4. Understanding the Future Factory

    As the traditional factory becomes increasingly unable to address the manufacturing

    challenges of the 21st century, there is a need to to rethink the design of today’s
    manufac-

    turing system. This would require the development of factories with capabilities
    which

    radically improve the predictability, reliability, efﬁciency, and security of
    manufacturing

    processes. This section explores the meaning and characteristics of a factory
    of this sort,

    otherwise referred to as the Future Factory or the Factory of the Future.

    4.1. The Future Factory in the Context of the Manufacturing Ecosystem (ME-S)

    Accenture Global Strategy or Management Consultants) deﬁned the manufacturing

    ecosystem as, “a network of industry players who work together to deﬁne, build,
    and execute

    market-creating customer and consumer solutions; deﬁned by the depth and breadth
    of potential

    collaboration among a set of players. The power of an ecosystem is that no single
    player owns or

    operate all components of the solution, and the value the ecosystem generates
    is larger than the

    combined value each of the players could contribute individually.” [84].

    In the past, production literally happened “under one roof”. However, as products
    be-

    came more sophisticated, and users demanded more affordable yet higher quality
    products,

    it no longer makes sense to think of manufacturing as a one “factory-only” activity.
    Often,

    no single entity owns or operates all elements of a manufacturing solution. Now
    more than

    ever, every product that rolls off the conveyor relies on some form of third-party
    service

    or technology. It is the case that producing high quality and cost-efﬁcient products
    and

    services is dependent on partnering with other providers and cooperating with
    different

    entities within the larger ecosystem, which incidentally is the key to efﬁciency.
    Due to

    the technological changes that have occurred in the past three decades, technology
    now

    has the power to reshape the production process by tightly connecting all relevant
    entities

    (humans, machines, and applications) to enable the seamless ﬂow of the data required

    Sensors 2022, 22, 5834

    8 of 76

    to provide the intelligence needed to drive efﬁciency. The goals of these networks
    are to

    exchange information, provide support, and explore meaningful ways to achieve
    shared

    objectives. These networks, loosely referred to manufacturing ecosystems (ME-S),
    often

    include partners, factory workers, suppliers, vendors, contractors, and even customers.

    Like a docking station, the manufacturing ecosystems (MES) is a hub on which the
    Future

    Factory sits, enabling it to connect to an interdependent group of interrelated
    entities and

    systems with which it routinely communicates and on which it depends for the supply
    of

    information and resources. As the Future Factory (FF) relies on the concepts of
    information

    and feedback, the seamless ﬂow of information from and to entities within the
    manufactur-

    ing ecosystems (MES) is critical for its optimal performance. At an abstract level,
    each of the

    entities within a manufacturing ecosystems (MES) can be represented as an object
    which

    can be connected to one another and to various machines, devices, and sensors
    to help

    extract valuable information. Entities participating in a manufacturing ecosystem
    have the

    rare distinction of being able to access the decision making knowledge they need,
    when

    they need it, because of the power of technology. Entities in a manufacturing
    ecosystem

    collectively facilitate the transfer and eventual transformation of raw materials
    into ﬁnished

    products. It is difﬁcult to fully understand the Future Factory (FF) in isolation
    from all

    other entities within the future manufacturing ecosystems (ME-S). In many manufacturing

    contexts, it is difﬁcult to separate manufacturing operations, for example, from
    the supply

    chains that support them, setting the need to look at manufacturing through the
    prism of an

    ecosystem. Ultimately, the resilience of the smart factories and the third-party
    systems that

    support them will depend on reliable interactions between the two. Ultimately,
    the future

    factory would be the result of the total reorganization, connection, and efﬁcient
    utilization

    of the means of production, including assets, processes, and people. It is less
    about the

    automation and digitization of individual elements or parts of the production
    process,

    and more about the connectivity or ties between a broad range of internal and
    external

    components and processes to enable real-time data sharing and information exchange,

    and intelligent feedback and responses between all nodes within the manufacturing
    ecosys-

    tem. The goal is to enable the achievement of smarter, quicker, and more efﬁcient
    solutions.

    This would require seamless connection, efﬁcient data sharing, and reliable transfer
    of

    information, in real-time, between different asset categories, including machine
    to machine

    (M2M), machine to device (M2D), human to device (H2D), machine to virtual twin
    (M2VT),

    factory to factory (F2F), factory to product (F2P), factory to human (F2H), and
    factory to

    supply chain (F2SC) within the manufacturing ecosystem. Each asset on the networked

    ecosystem is assigned an identity and connected to other assets in the network
    using

    Industrial Internet of Things (IoT) protocols and technologies.

    4.2. Describing the Factory of the Future

    The emergence of the Factory of the Future has been necessitated by sweeping globaliza-

    tion and unprecedented technological changes which have resulted in a very competitive

    and dynamic global marketplace. The resultant volatility has given rise to short
    product

    life-cycles, a “big ask” for on-demand production and increasing price pressures
    [85]. As a

    result, traditional manufacturing, with all its advanced enhancements, is fundamentally

    ill-equipped to meet the demand-pressures of the current environment. This state
    of affairs

    has necessitated a rethinking of current manufacturing paradigms. To beneﬁt from
    the

    on-going technology advancements within the manufacturing space, multiple actors
    (the

    state, industry, and academia) are actively trying to shape the future of manufacturing,

    hence the various national strategies, paradigms (smart factory, intelligent factory,
    Factory

    of the Future, etc.), frameworks, and nomenclature proposals. An example of the
    modern

    manufacturing system is the Cyber Manufacturing System (CMS)-refer to Figure 3.
    Its

    backbone is the cyber-physical system (CPS) that enables data transparency, facilitates

    reconﬁgurability, and promotes process optimization.

    Sensors 2022, 22, 5834

    9 of 76

    Figure 3. Cyber Manufacturing Systems (CMS).

    Incremental changes to traditional manufacturing paradigms are fundamentally inca-

    pable of fully addressing modern manufacturing needs. As a result, manufacturing
    as a con-

    cept needs to be fundamentally re-imagined. As a craft, it needs to be radically
    re-engineered.

    Notwithstanding the obvious need and urgency to transform manufacturing as we
    know it,

    there is no consensus around a fitting nomenclature for a factory that can serve
    as a replace-

    ment for the traditional factory. In recent years, different manufacturing paradigms
    have

    emerged, including (but not limited to) manufacturing concepts such as the Reconfigurable

    Manufacturing System (RMS) [86–92], Flexible Manufacturing System (FMS) [93–100],
    dis-

    tributed manufacturing [101–104], and cloud manufacturing [105–110]. In addition,
    terms

    such as smart factory [111–116], intelligent factory [77,113,117–119,119–121],
    and digital

    factory [122–126] represent emergent paradigms that seek to fulfill this need.
    However,

    none has seemed adequate enough to capture the approval of a plurality of stakeholders

    within the manufacturing community. This paper does not propose a unified nomencla-

    ture but instead uses a generic term (i.e., Future Factory or Factory of the Future)
    to help

    crystallize the general principles advocated by the most common advanced manufacturing

    paradigms. Additionally, note that Factory of the Future and Future Factory have
    been used

    interchangeably in this text and represent the future state of the factory during
    and beyond

    the Fourth Industrial Revolution (4IR). Given that the end goals articulated by
    many of

    these paradigms are similar, we will be drawing insights and inspiration from
    them to

    help characterize the Factory of the Future. The concept of the Future Factory
    upends

    the factors and elements of traditional manufacturing systems. The biggest challenge
    is

    being able to clearly define what the Future Factory is and to then transition
    those concepts

    effectively from theory to practice. For a start, the Future Factory is the nucleus
    of Industry

    4.0 [127]. A proper articulation of the meaning of the Future Factory is heavily
    reliant on the

    contextual and comprehensive understanding of Industry 4.0 concepts, which is
    the reason

    why a Section 2.3 of this paper was dedicated to elaborating on Industry 4.0.
    The technical

    foundation on which it stands is the selective and strategic integration and exploitation

    of the unique advantages of a collection of emerging technologies, such as cyber-physical

    production systems (CPPS)/cyber manufacturing systems (CMS), the Industrial Internet

    of Things (IIoT), Internet of Systems (IoS), artificial intelligence (AI), smart
    robotics, cloud

    computing, cybersecurity, and big data analytics. Thus, the Factory of the Future,
    as a

    system of systems (SoS), should be designed to deliver key advantages that can
    potentially

    address the challenges confronting traditional manufacturing in the age of speed,
    volatility,

    and uncertainty [128]. While all the above-referenced technologies bring with
    them unique

    capabilities, the structural underpinning or technical framework that supports
    the Factory

    of the Future is the cyber-physical production system (CPPS). The future of manufacturing

    necessitates increased flexibility in product customization, process monitoring,
    product

    quality/process control, and service delivery. Hence, collaborative networks and
    cyber-

    physical production systems (CPPS) have been identified as the future of industry
    [129].

    Administrated interactions and information flow among machines, people, organizations,

    and societies have been pursued as an ongoing research topic [130–132].

    Sensors 2022, 22, 5834

    10 of 76

    Deﬁnition 1. Thus, a barebones deﬁnition of the Factory of the Future would be
    a dynamic and

    highly integrated network of cyber-physical production systems (CPPS) that communicate
    or

    interact with each other using the Industrial Internet of Things (IIoT) and the
    Internet of Services

    (IoS). From an enterprise perspective, the Future Factory is a vertically and
    horizontally integrated

    production system with an efﬁcient connection between itself and the supply chain
    that supports it.

    Deﬁnition 2. Aptly named, the Future Factory is not an “end state”, but a constantly
    evolving

    solution that continuously but strategically integrates new technologies and systems
    with the goal of

    creating a resilient, stable, and efﬁcient system of systems (SoS) which can adapt
    to rapidly changing

    manufacturing requirements, fulﬁll dynamic customer demands (in a timely and cost-effective

    fashion), support customized mass production involving high variability (high
    product variety),

    provide options for small lot sizes, adapt to disturbances, and rapidly respond
    to change or otherwise

    recover from failure autonomously while eliminating the need for expensive post-process
    inspection.

    The Factory of The Future would be a key driver of manufacturing competitiveness

    across the globe because of the expectations of higher efﬁciency, lower production
    costs,

    mass customization, adaptability, and ﬂexibility. Its true essence is the incremental
    im-

    provements in how we design, manufacture, distribute, and service products.

    The ﬁndings in this study must be seen in the light of some limitations. The ﬁrst
    of

    these limitations is that it was performed using the semi-systematic or narrative
    review

    approach, which is less rigorous than the systematic review approach. The reason
    for the

    choice of the semi-systematic or narrative review approach was that the study
    involved

    the intersection of diverse disciplines and multiple technologies, a reality that
    hinders

    a full systematic review process [133]. The second limitation concerns the difﬁculty
    in

    standardizing all advanced manufacturing systems and factory types in terms of
    differences

    in paradigms, product types, production processes, automation levels, digitization
    levels,

    etc. The authors made great efforts to capture the high-level principles that
    underline a

    multiplicity of next-generation factory paradigms.

    4.3. The Characteristics of the Future Factory

    In its mature state, the Future Factory (FF) is envisioned as a production ecosystem

    that operates autonomously (i.e., requiring little or no human intervention) in
    various

    manufacturing operations, including production, logistics, prognostics, diagnostics,
    etc.

    From a technical point of view, all of these are made possible by a technological
    framework

    built using CPS, IoT, and intelligent decision support systems reliant on advanced
    analytics

    and knowledge learning methodologies [134]. Figure 4 graphically illustrates some
    of the

    most consequential characteristics of the Factory of the Future.

    Characteristics of the Future Factory

    Cognition

    Self-Control

    Self-Diagnosis

    Connectedness

    Integration

    Horizontal

    Integration

    Vertical

    Integration

    End-To-End

    Engineering

    Interoperability

    Consciousness

    Agility

    Context

    Awareness

    Modularity

    Capacity for

    Mass Customization

    Figure 4. Characteristics of the Future Factory.

    4.3.1. Cognition

    The massive generation, analysis, and fusion of data (big data analytics) into
    manufac-

    turing operations means that agents or entities of the factory possess cognitive
    capabilities

    and can learn, plan, and interact, all while acting autonomously and in concert
    with

    other entities.

    Sensors 2022, 22, 5834

    11 of 76

    4.3.2. Self-Control

    The Future Factory would be able to respond to changing business demands and

    conditions in real-time [135]. It would have decision making and self-controlling
    abil-

    ities, leveraging the factory’s ability to extract and analysis large amounts
    of customer

    and machine data (cloud computing), and subsequently transmit useful information
    and

    actionable intelligence on a need-to-know basis to the various entities within
    the network.

    The ability of the production facility to have access to real-time information
    about changes

    to the business environments can help the factory to adjust operations accordingly
    and

    help reduce business uncertainties and meet customer demands. The ability of the
    factory

    to self-control would be possible because of its decentralized architecture that
    allows for

    the distributed storage and ﬂow of information. Data and information would ﬂow
    through

    (to and from) a decentralized hierarchy that includes multiples localized systems,
    hubs,

    machines, and related nodes within the network (including the products themselves).

    4.3.3. Self-Diagnosis (Machine Health)

    They also self-diagnose and repair identiﬁed malfunctions without halting production

    or switching to a downtime mode.

    4.3.4. Connectedness

    Inter (and intra) connection, automation, and networking of assets within and
    between

    various activity layers, including factories, the supply chain, and the community
    (IoT,

    blockchain). This characteristic is further discussed in Section 4.4.

    4.3.5. Agility

    The factory of the future (smart factory) is ﬂexible and has adaptable production

    processes [115].

    4.3.6. Context Awareness

    The Future Factory is context aware. Context awareness in this instance refers
    to a

    system’s ability to self-sense, respond, adapt its behavior, and communicate based
    on in-

    formation transmitted from its environment or gleaned from sensors embedded in
    several

    nodes or entities within the system. Sensors have become affordable and ubiquitous
    across

    factories and entire manufacturing ecosystems [136]. Key components of the system
    can

    negotiate with each other to both request and profile functions [137]. With technologies
    such

    as block-chain, radio frequency identification (RFID), and quick response code
    (QR code),

    the smart factory can systematically identify and track assets, products, and
    people, both

    spatially and temporally, making it possible for the factory to have real time
    knowledge of its

    current state.

    4.3.7. Modularity

    Modularity is a property or quality of a manufacturing system that involves the

    use of different modules (components or sub-systems) as the basis of design or
    construc-

    tion [138]. In a modular system, modules can be quickly composed (composability)
    or

    combined to form different conﬁgurations. Modularity is a need-based decentralization

    of the production system using sub-systems that can later be recomposed into different

    conﬁgurations [139]. Modularity reduces complexity. It helps break a system into
    different

    degrees of interdependence and independence [140]. In a modular system, tweaking
    of one

    or more components does not affect the functioning of all other components. Modularity

    enables such advantages as quick adjustments in production capacity and functionality

    (reconﬁgurable manufacturing systems (RMS)), higher throughput (dedicated manufac-

    turing lines (DML)), and product variety using existing manufacturing systems
    (ﬂexible

    manufacturing systems (FMS)) [141,142].

    Sensors 2022, 22, 5834

    12 of 76

    4.3.8. Capacity for Mass Customization

    Mass customization involves the efﬁcient, cost-effective, and speedy customization
    of

    products and services at scale leveraging customer preferences (big data) [143–145].
    This

    would be facilitated by real-time communication between products and the production
    lines.

    Traditional automatic identiﬁcation and transmission technologies such as radio
    frequency

    identiﬁcation (RFID) and quick response code (QR code) can play roles in enabling
    products

    and production lines to communicate in real-time. The information transmitted
    can be used,

    for example, to address bespoke customer requests (product customization) or to
    control

    the paths of products as they navigate through different manufacturing lines or
    stages.

    4.4. Enabling Connectedness: Integration, Interoperability, and Consciousness

    Of the eight characteristics of the Factory of the Future discussed in Section
    4.3, con-

    nectedness is perhaps the most fundamental. For this reason, we will be expounding
    on

    the subject to help characterize the Future Factory. Unlike traditional factories,
    the Fu-

    ture Factory is very robust, fully connected, and agile. It can synchronously
    learn and

    adapt to changing conditions using information acquired from a constant ﬂow of
    pro-

    cess and machine health data amassed from a variety of interconnected assets,
    processes,

    and systems. All of these are made possible because of the system’s “connectedness”.
    The

    connectedness of a factory is dependent on the degrees of integration, interoperability,

    and consciousness of the system. Several researchers [71,146–148] have suggested
    that

    these elements constitute key success factors for Industry 4.0 in general, and
    the Future

    Factory (FF), in particular. Integration speaks to the tight combination, amalgamation,

    or homogenization of the entire manufacturing network, and interoperability refers
    to the

    ability of these tightly integrated systems and components to communicate or talk
    to each

    other seamlessly and in real-time. Integration is central to interoperability.
    On the other

    hand, consciousness speaks to the ability to be aware (or cognizant) and responsive
    to

    one’s environment. Below, we will further discuss the three main functions elements
    of

    consciousness: integration, interoperability, and consciousness.

    4.4.1. Integration

    Integration involves the tight linking of independent factories, processes, and
    product

    lifecycles into a core network that can communicate with one another, and share
    data

    as needed, while supporting distinct or shared technological and businesses objectives.

    The goal of integration is to enable structural cohesion, seamless ﬂow of data,
    and the ability

    of independent entities to access actionable information (technical or enterprise-related)

    from an integrated network. The automation pyramid pictured in Figure 5 is a framework

    that shows the different level of automation in a factory or industry. It represents
    a strategy

    guide for the integration of technologies in a factory. The three different types
    of integration

    identiﬁed in the ﬁnal report [75] of the Industrie 4.0 Working Group include (a)
    horizontal

    integration through value networks, (b) end-to-end digital integration of engineering

    across the entire value chain, and (c) vertical integration and networked manufacturing

    systems. By integrating all systems, the most up-to-date processes and product
    data are

    available at any time and can be shared with all entities (men, devices, and machines)
    on a

    need-to-know basis to help facilitate planning, production, maintenance, logistics,
    supply

    chain management, and customer service. Proper integration can result in a factory
    that is

    innovative, proactive, and agile. Such a factory would be able to adapt to market
    changes

    quickly, respond ﬂexibly and rapidly to changing customer demands, and achieve/maintain

    competitive advantages over peers even in the most unpredictable business environment.

    One of the main features of the Future Factory is the data-integrated core capable
    of

    supporting truly automated value chains [105,149]. Currently, the degree of asset
    and

    system integration within most factories is very limited. Though some have achieved

    the full integration of the shop ﬂoor (ﬁeld level), loopholes still exist from
    the integration

    layers up to the management level [150,151]. The goal of the Future factory is
    to connect all

    Sensors 2022, 22, 5834

    13 of 76

    entities (machines, devices, people, systems, etc.) using standard communication
    protocols,

    and therefore, enable seamless interaction between all parties.

    (a)

    Vertical integration: Vertical integration is the integration of all hierarchical
    physical

    and informational subsystems within a factory to achieve a ﬂexible, self-managing

    (autonomous), self-organized, and reconﬁgurable manufacturing system that can

    respond to production uncertainties quickly, ﬂexibly, and effectively.

    Figure 5. Automation pyramid.

    For example, if a client requests speciﬁc product customizations, the business
    de-

    velopment unit should not be on a call to engineering all day. All the information

    requested by the engineering department will already have been logged in the ERP

    system—essentially everyone has access to the same information (albeit different

    versions on a need-to-know basis). With this this level of transparency and the
    seam-

    less ﬂow of information, a vertically integrated system can be easily reconﬁgured

    to produce the customized product or manufacture small-lot sizes, at short notice

    without a signiﬁcant technical or ﬁscal penalty. The integration typically cuts
    across

    different hierarchical stages beginning from the ﬁeld (factory ﬂoor) and going
    right

    up to the enterprise resource planning (ERP) level. The joint implementation of
    all

    three integration options can result in a fully integrated factory comprising
    digitally

    connected entities (machines, people, products, and services). The overall goal
    is

    the integration of all digitized physical assets into an ecosystem that includes
    all

    elements of a local factory and all other entities or partners within their value
    chain.

    The ecosystems resulting from these integrations enable increased autonomy for
    sys-

    tem elements, decentralized control, improved efﬁciency, and transparency given
    the

    seamless transmission of data and information between all entities.

    (b)

    Horizontal integration: Horizontal integration involves the digital connection
    of a fac-

    tory to other external entities and processes across its value chain. It is illustrated
    in

    Figure 6.This arrangement would include a digitally developed network of warehous-

    ing systems, transportation assets, and production facilities that feature ICT-based

    integration of everything from inbound logistics to production, marketing, outbound

    logistics, and services [134]. The connectedness makes it possible for real time
    data to

    be obtained, analyzed, and shared in real-time to facilitate rapid and accurate
    decision

    making. All nodes on the network can have access (on a need-to-know basis) to

    information about production status, inventory levels, available resources, and
    other

    Sensors 2022, 22, 5834

    14 of 76

    critical information necessary for streamlined production. A factory so connected
    is

    said to be horizontally integrated. Horizontal integration can take place at different

    scales and at several levels. Optimal value can be created by a factory that can
    harness

    value from data gleaned from activities and processes, both internal and external

    to the factory. As part of the horizontal integration of a factory, suppliers,
    contrac-

    tors, and even other factories, whether located in the same or different geographical

    locations, can be connected into an efﬁcient ecosystem where there is seamless
    trans-

    mission of data and information. The efﬁciency gained by this arrangement can
    be

    mutually shared by all parties. For example, a factory can have regulated remote

    access to a resource (machine, device, software, etc.) within a company in another
    lo-

    cation. These outcomes can result in efﬁciency of scale, improvements in turn-around

    time, and higher productivity levels. Other advantages include transparency, better

    knowledge sharing, and improved communication.

    (c)

    End-to-end digital integration of engineering across the entire value chain: Though
    many

    factories have successfully digitized different aspects of their businesses, some
    have

    also ended up with segmented or siloed organizations where the systems of various

    units are unable to talk to one another. Though most manufacturing processes are

    supported by ICT, many of the systems and technologies that rely on them remain

    static and inﬂexible [75]. The result is that information ﬂow is inhibited, throwing

    manual transmission of data across the individual aspects back into the discussion.

    Digitally connecting these different systems and technologies can be referred
    to as

    End-to-end engineering integration. More broadly, it involves the digital integration

    of all aspects of the value chain (sourcing, product development, production,
    logistics,

    operations, marketing/sales, after-sale services, etc.) to enable the seamless
    ﬂow of

    data across the network for the purpose of delivering real-time information about

    production status to all stakeholders, enabling the development of new efﬁciency,

    supporting product customization [152], streamlining of processes, and a reduction

    in the unnecessary expenditure on manual activities. Figure 7 provides a graphical

    illustration of end-to-end digital integration.

    Figure 6. Horizontal Integration.

    Sensors 2022, 22, 5834

    15 of 76

    Figure 7. End-to-end integration.

    4.4.2. Interoperability

    Interoperability is a very critical characteristic of the Future Factory, primarily
    because

    it involves the ability of different entities (machines, devices, applications,
    etc.) to exchange,

    process, and use data/information. Multiple deﬁnitions of interoperability exist
    [153–159]

    in the literature, but they all distill down to the ability of two or more entities
    to receive,

    process, and exchange content (data, information, or services) for their mutual
    interest,

    in a timely manner, without distortions or any form of semantic inhibition. The
    goal of the

    data, information, or service so exchanged is to help all parties to operate more
    effectively

    together [153]. Abe Zeid et al. (2019) [160] outlined two approaches to interoperability,

    i.e., syntactic and semantic: (a) Syntactic interoperability relates to data formats.
    The use of

    standardized data formats can support interoperability. (b) Semantic interoperability
    is the

    human interpretation of content. The commonly used standards for semantic interoperabil-

    ity are XML and the Resource Deﬁnition Framework (RDF). The authors also identiﬁed

    two types of interoperability: (a) Factory interoperability (vertical integration):
    The ability

    of physical and informational subsystems within a factory to seamlessly communicate

    with each other. (b) Cloud-manufacturing interoperability (horizontal integration):
    Cloud-

    manufacturing interoperability is deﬁned as a form of horizontal interoperability
    where

    virtual elements of the production process can communicate with one another. This
    is

    broken down into three types: (1) Transport interoperability (related to the interoperability

    of data transfer/exchange using different protocols, i.e., Representational State
    Transfer

    (REST) over HyperText Transfer Protocol (HTTP), and Message Queuing Telemetry
    Trans-

    port (MQTT) [161]. (2) Behavioral interoperability refers to the system’s response
    when faced

    with multiple requests. (3) Policy Interoperability ensures cloud systems comply
    and conform

    to standards of stated regulations and policies. A huge cost penalty (upwards
    of $1Bn)

    was identiﬁed in the U.S. automotive industry due to the lack of interoperability
    across its

    supply network [162]. Interoperability is required to make complete integration
    possible.

    Challenges associated with interoperability remain the main constraint to the
    full

    realization of Industry 4.0 within the manufacturing industry. For example, enterprise

    interoperability is major hurdle for many businesses that currently own expensive
    legacy

    equipment. Some of these organizations are reluctant to replace these equipment
    with

    Sensors 2022, 22, 5834

    16 of 76

    newer assets because of the additional replacement costs, though they are open
    to getting

    the beneﬁts of Industry 4.0 if it is possible to retain their existing assets
    [149]. Achieving in-

    teroperability in this case would require retroﬁtting these assets so that they
    can seamlessly

    communicate (or talk) to other assets (machines and devices). The ability of these
    assets to

    communicate with related assets within an industrial network is enterprise interoperability.

    4.4.3. Consciousness

    Consciousness is the state of being aware of oneself and one’s environment. In
    the con-

    text of the Factory of the Future, consciousness speaks to the ability of a the
    factory and/or

    its respective elements (i.e., machines, robots,sensors, actuators, conveyors,
    products, etc.)

    to be able to connect and exchange information automatically with other components
    or

    systems within their ecosystem. It also includes the capabilities of predicting
    the behavior

    of connected systems, reacting appropriately, and optimizing the processes that
    take place

    within and around them. To make all of these feasible, conscious factories (including
    all

    related systems, machines, and products) need to be equipped with the capacity
    to monitor,

    detect, and control events. A factory that is conscious would be able to (for
    example) sense

    machine component degradation autonomously. It would also be able to predict (without

    prompting) a machine’s remaining useful life. Such a system would be self-aware
    and

    could self-predict, self-conﬁgure, self-maintain, and self-organize.

    4.5. From the Automation Pyramid to a Decentralized and Distributed Network

    The automation pyramid i.e., Figure 5 is a representation of the different layers
    or

    levels of automation in a factory. It helps graphically capture the integration
    of differ-

    ent technologies and the inter and intra-level communication pathways between
    them.

    A classical automation pyramid has ﬁve-level control layers that include the data,
    services,

    and functionalities which are hierarchical and relatively rigid.

    Given the advent of Industry 4.0 and all the recent technological changes, the
    rigid,

    hierarchical model would not be adequate to represent the facts on the ground.
    Current

    manufacturing trends reﬂects a complete shift in paradigm from the previous era.
    Smart

    devices are ubiquitous within the manufacturing space, making embedded intelligence

    available at the extremities. The connectedness of assets is also unprecedented
    due to the

    advent of networking via open and global information networks such as the Industrial

    Internet of Things (IIoT) and the Internet making IT/OT convergence easier.

    This level of networking was unavailable in previous automation technologies.
    With a

    variety of devices and machines connected in a mesh, laterally, horizontally,
    or vertically, it

    is difﬁcult to tell in advance what device, process, or subsystem will interact
    with another

    and in what manner. More so, the existence of predictive analytics at the edges
    now

    makes responsive control possible without the need for clearance from monitors
    or assets

    domiciled in layers “higher up” in the automation pyramid. Cloud technology and
    virtual

    twinning also enable visualization of control. With such a preponderance technologies,
    easy

    adaptability of individual assets and an unprecedented increase in the overall
    intelligence

    of the system are easily realizable.

    The classical automation pyramid is insufﬁcient to represent these new realities,
    and it

    must be stressed that this hierarchical model is all but outdated. The attainment
    of the

    vision and goals of Industry 4.0 require more ﬂexibility in the interconnectedness
    and

    communication between assets of different categories irrespective of the control
    layer to

    which they are currently assigned. It is for these reasons and more that there
    has been

    growing interest by scholars and practitioners in a gradual dissolution of the
    classical

    pyramid and the introduction of a more decentralized and distributed framework
    that

    would serve as an update or outright replacement of the classical automation pyramid
    [163].

    Figure 8 shows one such model, laid side by side with the classical automation
    pyramid.

    The need for the realization of the full potential of Industry 4.0 requires these
    changes.

    Traditionally, IT-based enterprise systems (such as the ERP and CRM) and operational

    Sensors 2022, 22, 5834

    17 of 76

    technologies (MES and SCADA) lived on different islands (i.e., different layers
    on the

    automation pyramid) with a ﬁrewall separating them.

    Figure 8. Classical automation pyramid laid side by side with a CPS-based automation
    model.

    While this model has worked well so far, it underutilized the potential value
    that inte-

    grating the two layers (and having them talk to each other) would have created.
    For exam-

    ple, data on customer complaints or preferences, maintenance data, and user behavior
    data

    typically captured with Customer relationship management (CRM) applications could
    po-

    tentially be useful in product redesign or improvement for product designers if
    they could

    have ready access to those through the enterprise resource planning (ERP) applications.

    On the other hand, the ISA95 (IEC 62264) standards play an important role in the

    Factories of the Future. Apart from the network infrastructure that connects the
    ofﬁce ﬂoor to

    the plant ﬂoor, information needs to be moved around the system to support manufacturing

    business and operations. ISA-95 is the framework that models this information.
    It deﬁnes

    the interface between control functions and other enterprise functions. It is
    technology-

    agnostic and is completely distinct from the network infrastructure that supports
    its ﬂow.

    Table 1 shows the various standards aligned to the ISA-95.

    Table 1. Standards aligned to the ISA95 model.

    ISA95 Model Levels

    Tools

    Standards

    Enterprise Level

    ERP

    ISO 15704 Enterprise Architecture Requirements

    ISO 20140 Automation Systems and Integration

    ISO 19439 Enterprise Integration

    ISO 19440 Enterprise Integration

    OAGIS

    BPMN, DMN, PMML

    B2MML

    MOM Level

    MOM

    IEC 62541, IEC 62837

    IEC 62264 (ISA 95)

    ISO 22400

    OAGIS

    PMML

    DMIS, QIF

    Sensors 2022, 22, 5834

    18 of 76

    Table 1. Cont.

    ISA95 Model Levels

    Tools

    Standards

    SCADA Level

    HMI/DCS

    IEC 62541 (OPC UA)

    IEC 61512 (ISA 88)

    Modbus

    BatchML, PACKML

    IEC 62541 (OPC UA)

    Device Level

    Field Device

    MT Connect

    IEC 61158 (EtherCAT, PROFINET)

    IEC 61784

    Modbus/Proﬁbus

    PROFlenergy

    IEC 62591/HART

    IEC 62541(FDI)

    5. Conceptual Frameworks and Reference Architectures

    Levis A. (2009) [164] described a reference architecture as a layout, blueprint,
    or sketch

    that “provides current or future descriptions of a ‘domain’ composed of components,

    and their interconnections, actions, or activities those components perform, and
    the rules or

    constraints for those activities”. Another very practical description of a reference
    architecture

    is that proposed in the Systems Integration for Manufacturing Applications (SIMA)
    Back-

    ground Study [165]. It reads as follows: “A reference architecture (a) pinpoints
    the functions

    required to accomplish a set of objectives in each domain, (b) identiﬁes the types
    of systems

    [components] that perform, or support human agents in performing, the activities
    that

    implement those functions and (c) points out the nature and content of the interfaces

    required among those systems”. The point of the reference architecture is to identify
    the

    activities and the information ﬂows required to accomplish required functions
    and to be

    able to standardize said activities to ensure their efﬁcient and effective performance.
    Essen-

    tially, a reference architecture is a toolbox packed with recommended structures,
    relations,

    and integration designed to guide practitioners towards solution approaches that
    meet

    accepted industry best practices. Reference architectures typically minimize complexity,

    since they anticipate and addresses salient questions that would otherwise arise,
    thereby

    enabling practitioners to accelerate model development and deployment. They are
    usually

    deﬁned at different levels of abstraction. They provide a common lingo or vocabulary
    that

    serves as the basis for shared communication during implementation, helping emphasize

    commonality amongst users. Typically, reference architectures also provide templates,

    reusable designs, and industry best practices that serve as scaffolds and building
    blocks

    (i.e., LEGO pieces) for new solutions. They also provide the interfaces (or APIs)
    and serve as

    frameworks for interacting with outside elements or functions that are related
    but outside

    the scope of the architecture. There are several reference architectures and standardization

    efforts that have been completed or are underway. Nation states, industry groups,
    and or-

    ganizations have been at the forefront of these efforts. The multiplicity of these
    efforts has

    thrown up a patchwork of reference models with gaps and duplications. The challenge
    is

    that of developing a smart manufacturing reference model that maps to the other
    reference

    models and considers the peculiarities and interests of all major stakeholders.
    An ISO

    and IEC joint working group was created to develop a standard reference model
    of that

    sort. Starting in 2017, a joint working group (ISO-IEC JWG21) between ISO/TC184
    (Au-

    tomation systems and integration) and IEC TC65 (industrial-process measurement,
    control,

    and automation) commenced work to help develop a common reference model for smart

    manufacturing [166].

    Some reference models include the Reference Architecture Model Industrie 4.0 (RAMI

    4.0, Germany) [167], the Industrial Internet Reference Architecture (IIRA) [168],
    IBM In-

    dustry 4.0 Architecture (IBM) [169–171], Smart Manufacturing Ecosystem (SME) [172],

    Sensors 2022, 22, 5834

    19 of 76

    Intelligent Manufacturing System Architecture (IMSA, China) [173], Industrial
    Value Chain

    Reference Architecture (IVRA, Japan) [174–176], Smart Manufacturing Standard Landscape

    (SM2) [166], Scandinavian Smart Industry Framework (SSIF) [166], KSTEP cube model

    (KSTEP, Korea) [166], NIST Smart Manufacturing Architecture [166,177,178] (NIST,
    USA),

    Scandinavian Smart Industry Framework (SSIF) [166], and ISO-IEC Smart Manufacturing

    Standard Landscape (SM2) [166] . As the industry begins to consolidate around
    certain ref-

    erence architectures, smart manufacturing solutions developers, whose solutions
    have not

    been developed and implemented on industrially accepted reference architectures,
    might

    be faced with adoption challenges beginning in the very near future [179]. At
    the moment,

    there are several simultaneous standardization efforts, championed by different
    countries

    and organizations, that have been completed or are underway. The multiplicity
    of these

    efforts has thrown up a patchwork of reference models with gaps and duplication
    among

    them. The challenge is that of developing a smart manufacturing reference model
    that

    maps to the other reference models and considers the peculiarities and interests
    of all major

    stakeholders. An ISO and IEC Joint Working Group was created to develop a standard

    Reference Model of that sort. Starting in 2017, a joint working group (ISO-IEC
    JWG21) be-

    tween ISO/TC184 (automation systems and integration) and IEC TC65 (industrial-process

    measurement, control, and automation) commenced work to help develop a common

    reference model for smart manufacturing [166]. At the moment, two of the most
    cited

    reference architectures are the Industrial Internet Reference Architecture (IIRA)
    developed by

    the Industrial Internet Consortium (IIC) and the Reference Architectural Model
    for Industry 4.0

    (RAMI 4.0) (IEC PAS 63088) developed by the “Plattform Industrie 4.0” (Germany).
    Note

    that the Industrial Internet Consortium (IIC) is now the Industry IoT Consortium
    (as of

    August 2021). While these two architectures are very similar and interoperable,
    as can be

    seem in different studies in the open literature [180,181], we will be using RAMI
    4.0 to

    illustrate the idea of a reference architecture. This reasons for this choice
    are its relatively

    high popularity and the fact that it was the basis for the development of several
    other

    important reference architectures. It has also been successfully mapped with nationally
    devel-

    oped reference architectures, including those of USA (NIST), China (IMSA), Japan
    (IVRA),

    and even the Industrial Internet Consortium (IIC) (i.e., IIRA), and successfully
    introduced

    in most national and international standardization committees and co-operations.

    5.1. The Reference Architectural Model Industrie 4.0 (RAMI 4.0)

    RAMI 4.0 [182,183] is a reference designation system that describes Industry 4.0’s
    space

    using a cubic layer model. Quite simply, RAMI 4.0 is an architecture model of
    different

    elements of Industry 4.0 (i.e., information technology (IT), manufacturing, and
    product life

    cycle) integrated into a 3D layered model. The model makes it possible for the
    multiple

    elements and different internal connections within the Industry 4.0 ecosystem
    to be broken

    up as smaller subsystems and clearly represented in 3D [184,185].

    Developed as part of the Platform Industrie 4.0 [167] working group’s standardization

    efforts for Industry 4.0, RAMI 4.0 is a three-dimensional (3D) map that integrates
    several

    elements and concepts of Industry 4.0 and how they relate to one another [186].
    Different

    components of the model are abstracted and linked to established automation standards,

    such as IEC 62264, IEC 62890, and IEC 61512/ISA95. The model provides insight
    on how

    to approach the deployment of Industry 4.0 in a structured manner. It can be used
    to

    illustrate the different elements within the Factory of the Future, including
    classiﬁcation,

    categorization, and logical groupings that provide insight on connections and
    potential data

    and information routes. As a communication tool, it provides stakeholders a framework
    for

    a common understanding and the exchange of ideas about the design and development
    of

    Industry 4.0-based systems. The RAMI 4.0 model cube shown in Figure 9 you provides
    three

    main axes for the dimensions of: (a) product life cycle and value stream (horizontal
    axis,

    left), (b) hierarchy levels (horizontal axis, right), and (c) interoperability
    layer (vertical axis).

    Sensors 2022, 22, 5834

    20 of 76

    Figure 9. Reference Architectural Model Industrie 4.0 (RAMI 4.0). Source: Plattform
    Industrie 4.0.

    5.1.1. Horizontal Axis (Right)

    The horizontal axis is orthogonal to the Life Cycle and Value Stream axis, and
    repre-

    sents a hierarchy model of cyber-physical systems (CPS) management based on functional

    considerations on a layer-by-layer basis. It stems from the international standard(s)
    IEC

    62264/IEC 61512. The hierarchical layers were adopted from the classical automation

    pyramid with enhancements that introduced the Product and Connected World categories

    at the beginning and end of the layer stack, respectively. Level 0 represents
    intelligent

    products. Level 1 and 2 are associated with the control and automation of the
    factory ﬂoor;

    Level 3 is related to the management of manufacturing operations; Level 4 corresponds
    to

    business planning and logistics; Level 5 is decision making systems at an enterprise
    level;

    Level 6 is related to connections to the cloud and interactions with (external)
    entities and

    associated stakeholders. The individual elements can be further described as follows:

    (a)

    Level 0 (Products): Refers to intelligent (communicating) products. They can interact

    with users and makers with or without embedded sensors, labels, or tags. Data
    pulled

    from these products enable product enhancement, maintenance, and future design
    im-

    provements. Conversely, data can also be pushed to the products (example updates).

    (b)

    Level 1 (Field Device): The functional level comprising intelligent devices that
    enable

    smart and intelligent control of machines and systems. It includes sensors, actuators

    and all other devices required to protect, control, and monitor manufacturing
    systems

    and processes. Process and machine health data can be pulled from these assets.

    Actionable information can also be pushed to some (e.g., actuators).

    (c)

    Level 2 (Control Device): Represents industrial control systems that are responsible

    for the logical control of ﬁeld devices. Examples include distributed control
    systems

    (DCS) and programmable devices, prominent among which are the programmable

    logic controllers (PLCs).

    (d)

    Level 3 ((Work Unit OR Station): A lower-level element in the manufacturing architec-

    ture where production planning and scheduling (including supervision of machines)

    based on events and processes are performed. This is usually done using supervisory

    control tools such as supervisory control and data acquisition (SCADA).

    Sensors 2022, 22, 5834

    21 of 76

    (e)

    Level 4 (Work Centers): Work centers are the highest-level manufacturing elements
    that

    perform and manage end-to-end manufacturing processes and functions, including

    planning, scheduling, and production activities. They typically include process
    cells,

    production units, production lines, and storage zones. Management execution systems

    (MES) and manufacturing operations management (MOM) applications are used to

    build traceable records of the manufacturing process, build supply chain visibility,

    and keep track of information of everything from labor to materials, machine health,

    product shipment, and job orders.

    (f)

    Level 5 (Enterprise): Strategic business decisions are made at this level. Enterprise

    resource planning (ERP) tools are commonly used. The enterprise is a collection
    of

    business functions operating together to set and implement and manage the realization

    of strategic business imperatives.

    (g)

    Level 6 (Connected World:) This level is one of two enhancements to the traditional

    automation pyramid. It is the level that enables connection to super-ordinate
    cloud

    services, the Internet of Things (IoT), and the Internet of Services (IoS), helping
    link

    assets in one organization to the assets in external organizations. The ﬂow of
    data

    from the shop ﬂoor to plant operating systems (MES), business systems (enterprise

    resource planning, ERP), and then the external world (e.g., other smart factories
    or

    external elements of the value chain or supply chain).

    5.1.2. Horizontal Axis (Left)

    This axis represents life cycle and value stream and is based on IEC 62890 (i.e.,
    life-

    cycle management for systems and products) used in the industrial-process measurement,

    control, and automation domains. It is focused on product life cycle and value
    stream.

    The product life cycle captures the various stages a product undergoes, from its
    develop-

    ment to when it is decommissioned or removed from the market. Value stream encompasses

    all the actions or activities that culminate in the addition of value to a customer,
    from the

    initial request to value realization. This axis emphases the extraction, processing,
    and uti-

    lization of product life cycle information in addition to data capturing and utilization

    from all activities that culminate in value creation. This information be captured
    through

    digital representations of objects (products) using an administrative shell, an
    Industry

    4.0 component. More on the administrative shell is in Section 7.1. The axis divides
    the

    product development and the usage process into a type and an instance phase. One
    of

    the design premises for type and an instance phase are the data type that can
    be captured

    during each phase. When an asset (e.g., product) is in the development phase (i.e.,
    idea,

    research, design, development, testing, or analysis) it is in the type phase.
    As soon as it is

    production (physically produced) or service, it becomes an identiﬁable entity
    of that type

    and is transitioned to the instance phase. Once it transitions into production
    or service, it is

    in the instance phase. The point of the delineation of the phases is that different
    data types

    would need to be collected in different phases. For example, the necessary data
    required

    during the research and development of a product (say a car) would be different
    from those

    that need to be collected during its production or operation (i.e., while in use
    or in service).

    An asset can be said to be in its type phase during its design (research and development).

    Throughout the life of the asset, it is important that the relationship between
    the type

    and its instances is maintained (i.e., an instance of the asset might be required
    to mirror its

    type). Different data would need to be collected from the product at different
    phases in its

    existence. Software products are a particular example where updates on the type
    are often

    transmitted to the instance.

    5.1.3. Vertical Axis

    The vertical axis represents the six interoperability layers [184,185]. The interoperabil-

    ity of the two horizontal components (left and right horizontal axes) can be considered

    in the context of these six interoperability layers. As an information and communication

    technology (ICT)-based representation system, it establishes a model for facilitating
    and

    Sensors 2022, 22, 5834

    22 of 76

    implementing new features and choreographing the ﬂow of data between different
    layers.

    The ﬁrst three layers (Business, Functional, and Information) are related to functionality,

    and the lower three layers (Asset, Integration, and Communication) are associated
    with

    technical implementation. The interoperability layers are described as follows:

    (a)

    Asset Layer: The aggregation of all physical instances of assets and components

    required to provide functionality to the system. This would include physical objects,

    such as sensors, actuators, and devices. It would also include humans, products,

    plans, documents, applications etc.

    (b)

    Integration Layer: This layer manages the digital representations of physical
    assets

    and is responsible for the transitions from the physical to the digital world.
    It contains

    asset documentation, applications, and assets (i.e., HMI devices, QR-code readers,

    sensors, control systems, etc.) that manage the transitions, generate events from
    assets

    (e.g., equipment and machinery), and provide computer aided control of technical

    processes, system drivers, and other collaterals.

    (c)

    Communication Layer: Responsible for data integration and standardization of

    communication between the integration and the information layers. This layer in-

    cludes standards, communication protocols, and services that support interoperability

    and integration.

    (d)

    Information Layer: This level manages and stores data in an organized fashion.
    It

    is associated with data services and standards that regulate the ﬂow and exchange

    of information between components, services, and their functions. It also ensures

    consistency in the integration of different data formats and interoperability
    between

    components and services.

    (e)

    Functional Layer: This layer is responsible for production rules, decision making

    logic, and the provisioning and management of the run time and modeling envi-

    ronment for services that support business processes. It also hosts the descriptions

    of functions and supports remote access serving as a platform for the horizontal

    integration of various components and functions.

    (f)

    Business Layer: This level maps out the business model, links the various business

    processes, and hosts the business rules that the system must follow. Said rules
    are

    based on information drawn from the value stream, the supply chain, the regulatory

    regime, and subsisting laws. It also orchestrates (or arranges) services in the
    functional

    layer and receives events that help track the progress of business processes.
    Standard

    run-times for executable business processes are essentially provided in both the

    Functional and Business layers [187].

    Notwithstanding its acceptance, RAMI 4.0 has not be widely implemented within

    industry. However, it has made a lot of in-roads within research and academia.
    To better

    illustrate the its utility, a few implementation examples and use cases have been
    included

    from the open literature [175,188–193].

    6. Communication Standards and Technologies of the Future

    The Communication Layer and the ISO/OSI Layers: The communication layer is only

    one of six layers in the vertical axis of the reference architectural model Industrie
    4.0

    (RAMI 4.0) [182,183]. Further treatment of this layer is being provided because
    of its

    relevance. It can be considered a crucial aspect of the factory because it provides
    the

    protocols and mechanisms necessary for the standardization of communication between

    different networked elements.

    The goal of this layer is to arrive at a uniﬁed data format that ensures interoperability

    and to provide interfaces that can support data access: an outcome that would
    solve a

    protracted bottleneck that has stymied Industry 4.0 adoption. As the communication
    layer

    is heavily IT focused, it is complemented by the seven-layer International Organization

    of Standardization/Open System Interconnection (ISO/OSI) model. Figure 10 shows
    a

    graphical illustration of the seven OSI layers. The ISO/OSI model is a popular
    IT reference

    model that deﬁnes the seven levels in a complete communication system.

    Sensors 2022, 22, 5834

    23 of 76

    Figure 10. The seven OSI layers.

    To enable multi-vendor interoperability and integration, it has adopted or recom-

    mended certain open communication technologies or standards for each layer (refer
    to

    Figure 10. Below we focus on only three that we think will have the most signiﬁcant

    impact on the Future Factory. These include (a) The Open Platform Communication
    Uniﬁed

    Architecture (OPC-UA), (b) Time-Sensitive Networking (TSN), and (c) the 5th Generation
    Mobile

    Network (5G).

    6.1. Open Platform Communication-Uniﬁed Architecture (OPC-UA)

    Though not explicitly mandated, the Open Platform Communication Uniﬁed Ar-

    chitecture (OPC-UA [IEC 62541]) protocol [194] is RAMI 4.0’s recommended approach

    for implementing this layer due to its stability, scalability, and superior performance.

    The recommendation, beyond being very practical, has also received numerous endorse-

    ments [195–199] from stakeholders. As the standardized interface for communication

    between numerous data sources, the OPC-UA has become the de facto communication

    technology standard for many applications (both in industry and in academia) and
    is the

    focus of on-going research [200,201]. Some great characteristics of OPC-UA are
    that it is

    technology-independent, implements standard network protocols, and allows for
    easy

    integration into pre-existing IT networks. It also satisﬁes standard communication
    security

    requirements, supporting secure communication over VPN and across ﬁrewalls, through

    which it can establish seamless client-to-server connectivity.

    6.2. Time-Sensitive Networking (TSN)

    The OT systems used in many factories require specialized networks and protocols.

    Conversely, IT systems are typically general-purpose technology that rely on Ethernet

    networks. The unpredictable trafﬁc patterns of the Ethernet-based “best effort”
    approach is

    unsuitable for handling time-critical data. The real-time transmission of critical
    data (e.g.,

    process data) that is necessary for real-time control within the industrial domain
    requires

    latency guarantees that are not always available from Ethernet networks. The cycle
    time for

    transmission of time-critical data can be very minute, or sometimes as small as
    one second.

    This disparity in standards and protocols often creates complications that signiﬁcantly

    impact IT/OT integration efforts. There is also the problem of data volume and
    veloc-

    ity. With the ubiquity of devices and sensors today, the amount of data running
    through

    some factories daily is enormous, sometimes overwhelming networks and storage
    sys-

    tems. Though several real-time communication methods (such as Proﬁnet IRT, EtherCAT,

    and SERCOS III), have been applied to address some of these problems, time-sensitive

    networking (TSN) is clearly a better alternative. Not only does it close the technical
    gaps

    between IT and OT, but it also addresses most other underlying challenges that
    have

    bedeviled the industry for a long time. TSN is an adaptation of the Ethernet IEEE
    802.1

    standard. It was designed to support time-sensitive networking and enables real-time,

    deterministic communication between networked assets. Figure 11, an adaption of
    the

    Sensors 2022, 22, 5834

    24 of 76

    work of the Time-Sensitive Networking (TSN) IEEE 802.1 Task Group illustrates
    the four

    main characteristics of TSN and the common standards in each category. The four
    main

    components or characteristics of TSN include (1) resource management, (2) synchroniza-

    tion, (3) reliability, and (4) latency. These characteristics deliver several
    beneﬁts, some of

    which include: (a) Support for time synchronization; i.e., all networked resources
    have a

    shared time reference. It is well-suited for the real-time control and the synchronization

    of high-performance machines, plus it offers solutions for efﬁciently managing
    network

    infrastructure with high bandwidth requirements. (b) Support for trafﬁc scheduling
    (i.e., all

    networked resources observe the same rules for processing and forwarding packets
    within

    speciﬁcally reserved time slots). With this arrangement, different data trafﬁc
    streams can

    be transmitted from a single standard open Ethernet network without any delays.
    (c) The

    ability to merge multiple industrial networks, including TCP/IP trafﬁc, into one
    single

    physical wire. (d) The ability of mechanisms to temporarily interrupt the transmission
    of

    regular Ethernet-based trafﬁc (i.e., based on the best-effort approach) to offer
    priority to

    critical data that are necessary gaining time-sensitive insights into processes
    and assets.

    (e) The ability to map across both the physical and data link layers, thereby
    reducing com-

    plexity and making implementation/management easier. (f) Compatibility with general

    purpose IT standards. TSN is a special type of Ethernet, and it is compatible
    with most

    IT systems. Its functionalities can be integrated into one standard open Ethernet
    network

    capable of supporting devices from different vendors, thereby ensuring interoperability

    and integration.

    TSN Components (Common Standards)

    Latency

    Frame Pre-emption (802.3br & 802.1Qbu)

    Cyclic Queuing & Forwarding (802.1Qch)

    Asynchronous Traﬃc Shaping (802.1Qcr)

    Credit-based Shaper (802.1Qav)

    Schedule Traﬃc (802.1Qbv)

    Resource Management

    Link-Local Registration Protocol (802.1CS)

    Stream Reservation Protocol (802.1Qat)

    TSN Conﬁguration (802.1Qcc)

    YANG (802.1Qcp)

    Reliability

    Frame Replication & Elimination (802.1CB)

    Per Stream Filtering & Policing (802.1Qci)

    Reliability for time sync (802.1AS-Rev)

    Path Control & Reservation (802.1Qca)

    Synchronization

    Timing & Synch. (802.1AS)

    Figure 11. TSN components.

    6.3. 5th Generation Mobile Network

    The growing data trafﬁc and bandwidth demands that are currently outstripping
    the

    ability of 4G (LTE) to cope because of the proliferation of smart devices, IoT
    devices and

    sensors, etc., is creating the need for ultra-low end-to-end latency in a variety
    of industries,

    including automotive and industrial automation industries [202]. The ability of
    5G to de-

    liver on these metrics is putting 5G in play within the industrial environment.
    5G provides

    end-to-end, ultra-reliable, and ultra-low latency connections [203,204], which
    can help

    improve network efﬁciency in these settings. Several reviews [205–215] of 5G technology

    exist in the open literature. The convergence of 5G, AI, and IoT will result in
    major transfor-

    mations in industrial control and factory monitoring (i.e., condition monitoring
    and failure

    prediction). With fast, efﬁcient cloud-native 5G connections, factories can strategically

    redistribute computational power to allow for fast collection and processing of
    data with

    rapid AI inference at the edges. On the other hand, networked devices and applications

    can easily and reliably tap into edge resources without needing to access the
    core network.

    The analysis of industrial processes can also be performed with high degrees of
    precision,

    allowing for swift decision making whenever necessary. Given 5G’s promise of extremely

    low latency (no jitters) and high data rates for video transmission, there is
    an expectation

    of signiﬁcant growth in innovation around the development of immersive and integrated

    media applications (e.g., mixed reality (MR), augmented reality (AR), and virtual
    reality

    (VR) applications which are becoming ubiquitous on the shop ﬂoor and beyond).

    The 3rd Generation Partnership Project (3GPPTM) is a joint project that brings
    together

    several national standards development organizations (SDOs) with the goal of developing

    technical speciﬁcations for third generation (3G) mobile systems. The three main
    service

    Sensors 2022, 22, 5834

    25 of 76

    categories for 5G New Radio (NR) as deﬁned by the 3GPPTM are as follows: (a) Enhanced

    Mobile Broadband (eMBB), (b) Ultra-Reliable Low-Latency Communications (URLLC),

    and Massive Machine-Type Communications (mMTC).

    (a)

    Enhanced Mobile Broadband (eMBB) services are geared towards applications that

    require high data rates across a wide coverage areas. Compared to 4G, they can

    handle large payloads and are stable over an extended time interval. Complimentary

    deployment of Enhanced Mobile Broadband (eMBB) alongside existing 4G broadband

    services could enable substantial improvements in trafﬁc and the efﬁciency of
    the

    industrial network at the core network level.

    (b)

    Ultra-Reliable Low-Latency Communications [URLLC] is almost deterministic in time

    bounds on packet delivery. It is ideal for applications that require end-to-end
    security

    and where reliability and speed are critical, though bandwidth might not be as
    much.

    Mission-critical applications that require quick reaction times would fall into
    this

    category. As 5G URLLC delivers ultra-low latency and guarantees against triggering

    undesirable safety stops in production lines, it has been employed in automating

    factory processes and related power systems. For example, it has been used to

    run industry technical standards such as PROFINET. Industrial robots have become

    ubiquitous on manufacturing ﬂoors. The transmission of time-critical communication

    messages to them using Ultra-Reliable Low-Latency Communication (URLLC) might

    be necessary to accommodate for instances where decision time for responding to

    an incident or accident is almost non-existent. Combining 5G and MEC results in

    a signiﬁcant reduction in network latency, which can improve the performance of

    previously tethered-only AR/VR, haptic, and tactile-based applications.

    (c)

    Massive Machine-Type Communications (mMTC) is a service that provides mainly wire-

    less connections to massive numbers (tens of billions) of network-enabled devices
    that

    intermittently transmit payload sizes (small data packets) at low trafﬁc [216].
    While

    low transmission latency is not a requirement, it has low latency, is secure,
    is reliable,

    and is scalable. As mMTC transmit small payload sizes at low transmission rates
    and

    frequencies, they require lower energy consumption, making them well suited for

    battery powered, low maintenance end devices (i.e., low-cost sensors, smart meters,

    wearables, trackers, diverse monitoring devices, etc.). NB-IoT (narrowband IoT)
    and

    Cat-M1 (operated at 1.4 MHz bandwidth) are two 3GPP standardized technologies

    that support these network-enabled devices. NB-IoT supports ultra-low complexity

    devices with very narrow bandwidth and data rate peaks of approximately, around

    200 kHz and 250 kbs per second, respectively. Conversely, Cat-M1 supports relatively

    more complex devices and operates at a bandwidth of 1.4 MHz, with lower latency

    and better location and asset tracking capabilities. Both can also sleep for extended

    periods and maintain excellent power-saving mode (PSM) abilities and extended

    discontinuous reception [217].

    5G can also be integrated with other communication standards for improved effects.

    For example, to exact the optimal impact on industrial IoT services and wireless
    industrial

    networking, 5G is best integrated into the Ethernet-based industrial network with
    TSN.

    While dedicated to the control of data communication (synchronization and data
    stream

    prioritization), TSN can also help forward critical process data, ensuring that
    they arrive in

    time at different end points within the network. On the other hand, 5G can be
    dedicated to

    the transmission of non-real-time-capable data (i.e., monitoring, predictive maintenance,

    and energy optimization-type data, etc.).

    7. Realizing the Promise of Industry 4.0 through the Digitization of Physical
    Assets

    It is the case that there are often differences in device/equipment types (makes,
    models,

    age e.g., legacy equipment), communication protocols employed, and interactions
    between

    hardware, communication technologies, networking devices, and applications within

    factories. Due to these differences, making all entities (equipment, devices,
    applications,

    etc.) seamlessly talk to each other can be prohibitively difﬁcult. Relying on
    a vast array

    Sensors 2022, 22, 5834

    26 of 76

    of sensing devices, communication facilities, and services [218], these disparate
    systems

    generate and use large amounts of diverse and sometimes complex data types to
    perform

    various functions. Building systems that effectively store, manage, and analyze
    these

    data and ensure valuable use can be daunting. Two main hurdles need to be crossed
    to

    make this happen. First, all assets need to be physically connected. That feat
    has been

    achieved using technologies such as OPC-UA [219] (further discussed in Section
    6.1 and

    related technologies such as Proﬁbus/Proﬁnet [220]. The second challenge is making
    all

    devices, irrespective of the “language” they speak, to both communicate and understand

    one another. As has been acknowledged in earlier sections of this paper, one of
    the

    key goals of the Industry 4.0 era is the digitization of industrial systems and
    processes

    with a view to harnessing intelligence from them to help improve operational efﬁciency,

    productivity, and value. However, the digitization of manufacturing systems requires
    the

    efﬁcient connection of all assets within the production network and the seamless
    exchange

    of data between assets. It also requires the development of information models
    that

    can accurately describe all assets and information sources to enable semantic
    integration

    and interoperable exchange of data between all assets [221]. The development of
    robust

    data/information models is critical to realizing some of the more creative goals
    of the

    Factory of the Future, such as plug-and-play automation of production modules,
    easy

    reconﬁgurability of production systems to cater to small batch production of customized

    products, and self-organization of the production line. The Factory of the Future,
    as a

    highly dynamic environment, will feature ﬂuctuations in the number and variety
    of nodes

    (assets). With the right technologies in place, adding, removing, rearranging,
    retroﬁtting,

    or upgrading a network of assets would not be a hassle [222].

    The practical significance of AAS is large, as it can be used to transform a factory
    into an

    easily re-configurable manufacturing system (also known as plug and produce) [223,224]
    that

    is flexible [225] and is capable of dynamically orchestrating and allocating resources
    [226]. It

    can also have significant implications for preventive maintenance [227], product
    customiza-

    tion, and the design and development of upgradable production lines and order-controlled

    production. Implementing the AAS paradigm within a factory can make integration
    faster.

    It can also mean faster ramp-down and ramp-up of production lines, and maximization
    of

    production efﬁciency throughout the life cycle of a plant [228].

    Though the promise of the digitization of production (Future Factory) is very
    com-

    pelling, there is still concern about how to implement these ideas in concrete
    terms using

    available technologies, techniques, and standards. It is instructive that whatever
    techniques

    and standards are adopted must be ﬂexible enough to accommodate different device
    cate-

    gories (age, variety, and types), application domains, and use cases, and must
    be able to

    transcend organizational boundaries [229]. RAMI 4.0 and Industry 4.0 components
    are two

    important and complementary constructs of Industry 4.0. They are both described
    in the

    Reference Architecture Model Industrie 4.0 (DIN SPEC 91345) [167]. Section 5.1
    provides

    more details about RAMI 4.0. Industry 4.0 components, on the other hand, are made
    up of

    two main parts: (1) the assets and (2) the asset administration shell (AAS). This
    is further

    discussed in Section 7.1.

    7.1. Industry 4.0 Components: Assets and the Asset Administration Shell (AAS)

    I4.0 components (and especially asset administration shell (AAS)) is Industry
    4.0’s

    recommendation for tackling the aforementioned implementation challenges. The
    entire

    idea of the I4.0 components is to encompass every asset within an administration
    shell.

    7.1.1. Key Elements of Industry 4.0 Components:

    Some of the key concepts or elements of Industry 4.0 components are outlined below:

    (a)

    Asset: An asset is anything (physical or non-physical) within the production system

    that requires a connection to another asset or an Industry 4.0 solution, e.g.,
    simple

    devices, components, machines, assembly lines, or even entire production systems.

    Other examples of assets include automation components, services, and even ap-

    Sensors 2022, 22, 5834

    27 of 76

    plications/software platforms. Each asset within the production system must be

    identiﬁable to the system (in the ﬁrst instance), and to all other assets (including

    devices, systems, and services). To be considered compatible, each asset must
    have

    a set of deﬁned properties and must be able to collect and share all relevant
    data to

    similarly networked entities (other assets; stakeholders, e.g., companies participating

    both in the value and supply chains) throughout its lifecycle. This means they
    each

    need to read, interpret, and understand all asset data, including identity (asset
    type,

    model number, etc.), operational status, and all other asset-related data.

    (b)

    Asset Administration Shell (AAS): Industrie 4.0 recommends the asset administration

    shell (AAS) as an important building block of the Factory of the Future [75,186,230,231].

    Multiple articles in the literature provide reviews on asset administration shells

    (AAS) [232,233]. The asset administration shell (AAS) is a mechanism for digitally

    representing physical assets and other abstract entities. In practice, it helps
    provide

    descriptions of the properties and capabilities of an asset and serves as a platform
    for

    interaction between the asset and other assets.

    As an industrial application, a digital twin (DT) helps transform an asset to
    its digital

    equivalent, serving as a bridge between a tangible asset and the virtual or IoT
    world.

    A typical AAS holds identifying, operational, status, and technical information
    about

    the asset it represents, over its lifetime. It contains the communication methods

    and stores all asset related data [149]. Some of the information the AAS stores
    is

    related to the conﬁguration of the asset, its maintenance record, or data related
    to its

    connectivity with other devices. Diagrammatically, an asset is enclosed within
    an asset

    administration shell (AAS), as shown in Figure 12.

    Each asset in the production system has its own administration shell, i.e., Figure
    12.

    Two or more assets can be grouped into a unit [234]. The unit (much like an individual

    asset) can map to its own administration shell. A common administration shell
    i.e.,

    Figure 13 can be used to manage the communication of multiple asset administration

    shells (AAS) at a higher hierarchical level. The conﬁguration shown in Figure
    14 is

    also suited for Factory-to-Factory communication. This architecture can allow
    the

    transparent and seamless ﬂow of data between sister factories and other associated

    assets within a value or supply chain Figure 15 shows a different conﬁguration
    of

    assets, each mapped to its own administration shell, and connected to other assets

    through open communication protocols to facilitate the seamless ﬂow of data

    Beyond acting as a store for important asset data, the AAS also serves as a reliable
    and

    consistent mechanism for managing data and related functions and services.

    Figure 12. AAS showing an asset (3D Printer).

    Sensors 2022, 22, 5834

    28 of 76

    Figure 13. Common intra-factory asset administration shell.

    Figure 14. Common inter-factory (factory-to-factory) asset administration shell.

    Figure 15. A network of assets wrapped in their AAS.

    Sensors 2022, 22, 5834

    29 of 76

    7.1.2. The Anatomy of an Asset Administration Shell (AAS)

    The Asset Administration Shell (AAS) is composed of a body and a header. Refer
    to

    Figure 16, a metamodel of a typical (3D Printing machine) Asset Administration
    Shell (AAS).

    The header contains identifying information that precisely describes the asset
    administration

    shell and the represented assets, plus related asset utilization information.
    High-level

    asset-related information stored in the header would include the asset descriptions,
    serial

    numbers, manufacturers’ identiﬁcation, etc.

    Figure 16. AAS metamodel for a 3D printer.

    Other information could include information about the usage of the asset, its
    sub-

    components, and other high-level details about the administration shell. The body,
    on the

    other hand, contains information about the assets. It has two parts: a manifest
    and a

    component manager. The manifest serves as a directory that lists different sub-models.

    Sub-models (or partial models) are important features of the administration shell
    that

    represent different aspects of the asset they represent; each sub-model is standardized

    for each aspect of the asset, e.g., a description or capability of the asset.
    Each sub-model

    contains a structured quantity of hierarchically organized properties that refer
    to the asset’s

    data and functions (or capabilities). The properties have a standardized format
    based on

    IEC 61360. On the other hand, the component manager (or resource manager) administers

    the sub-models and helps link the information coming from the asset administration
    shell

    (AAS) to the larger asset network through the Industrial Internet of Things (IIoT).

    7.2. Seamless Transfer of Data: OPC-UA, AAS, and Companion Speciﬁcations

    Data exchange between entities in an industrial network is a critical feature
    of the

    Future Factory. The Open Platform Communications Uniﬁed Architecture (OPC UA)
    is an

    important technology for machine-to-machine communication. It deﬁnes data transport

    protocols and standardizes information modeling; however, OPC UA communication

    alone is not sufﬁcient for seamless data exchange. Before OPC UA communication
    can

    effectively occur, the content of the data to be exchanged must be clearly deﬁned.
    To make

    communication feasible and seamless, companion models need to be mapped onto OPC
    UA.

    OPC UA does not deﬁne data content but only serves as a framework for the description
    of

    the meta model. Though OPC UA deﬁnes a base information model, the actual deﬁnition
    of

    the data content for different domains is achieved using companion speciﬁcations
    or meta

    model, of which there are several (40+). Companion speciﬁcations make the deﬁnition
    of

    standardized exchanges possible within the framework of speciﬁc business functions.
    These

    domain-speciﬁc models make it easier to achieve interoperability between equipment
    and

    devices from different vendors. Companion information models follow standard syntax

    described in XSD ﬁle (XML Schema Deﬁnition), and therefore present data in a form
    that

    can be read by a computer program.

    One such companion speciﬁcation is AutomationML, which focuses on the engineering

    of automation systems. Thus, an implementation for a I4.0 components and its asset

    Sensors 2022, 22, 5834

    30 of 76

    administration shell could potentially involve a technology combination involving
    the OPC

    UA (IEC 62541) and AutomationML (IEC 62714).

    Within a typical manufacturing environment, there are different kinds of equipment

    from a diverse range of manufacturers, creating a situation where multiple communication

    protocols are in play within the asset pool. This creates communication problems
    for enter-

    prises if the goal is IIOT integration (i.e., networking the assets and having
    them “talk” to

    one another), because until recently, different companies relied on different
    communication

    protocols and applications which were not interoperable. OPC-UA was created to
    solve this

    problem. and the adoption rate by industry has been impressive. It provides the
    additional

    beneﬁts of secure communication (encryption and authentication) and a standardized

    interface. OPC-UA solves the operational technology (OT) communication conundrum.

    The Future Factory integrates previously independent and discrete systems transform-

    ing them into a complex whole. It is literally the convergence of operational
    technology

    (OT) and information technology (IT). There must be a way to connect OT to IT.
    However,

    the IT and OT domains have signiﬁcant differences, and there are unresolved integration

    and knowledge transfer challenges that need to be resolved. That is where the
    asset admin-

    istration shell (AAS) comes in. It is the software/ﬁrmware component that transforms
    the

    physical assets into digital ones (or Industry 4.0 assets). That data content
    stored in the AAS

    is developed using the companion speciﬁcation (i.e., AutomationML). The combination
    of

    OPC-UA and the AAS helps eliminate the discontinuity between the layers (OT and
    IT),

    enabling the seamless ﬂow of data/information. Refer to Figure XYZ02 below.

    7.3. Data Exchange: The Administration Shell and the Semantic Web

    The AAS provides a consistent way of storing and managing all asset data, functions,

    and services so that they are readily available for manipulation, publication,
    and exchange

    between all network participants as required. Once connected, the AAS serves as
    a stan-

    dardized and secure communication interface for sharing data and information about
    the

    asset’s identity, operations, and status with the production system’s network.
    Using a

    standard such as AutomationML, the AAS can be mapped to OPC UA, MQTT, or other

    formats [188]. Due to its standardized design, AAS can integrate the knowledge
    and

    semantics of multiple domains together, to help achieve component and cross-company

    interoperability across the entire value stream.

    Though the current data exchange process for many manufacturing applications

    has greatly improved due to the use of predeﬁned structures and keys, any real-world

    implementation is still dependent on laborious manual work. It requires a robust
    un-

    derstanding of the AAS model, an appreciation of multiple terms/values, and time-

    consuming/laborious data mapping [235]. To alleviate the burden, some scholars
    [236]

    have recommended building a connection between current manufacturing-based data

    provisioning models (such as AAS) and the semantic web. Great reasons to consider
    this

    option is that sematic web representation formalisms such as RDF, RDF Schema,
    and OWL,

    are more matured, have more advanced data integration and formalization capabilities,

    and have the capacity to introduce logical reasoning to the asset administration
    shell (AAS).

    For these reasons, information models developed using these frameworks would be
    use-

    ful additions to information exchange systems [235] such as AAS. RDF and linked
    data

    principles have been successfully used to integrate different data types [237–239].
    They

    are the basis for the development of semantic solutions or information models
    that have

    proved effective for seamlessly linking I4.0 components with generated data [240],
    hence

    helping improve the interoperability of production assets. To promote data exchange
    and

    enable semantic interoperability, RDF-based information models are aligned to
    important

    industry standards, such as RAMI [186] and IEC 62264 [241]. As a resource description

    framework (RDF), a standard model for data interchange on the Web makes the generation

    and transmission of data across networks easy. An additional beneﬁt of RDF is
    that it makes

    data readily available on a standard interface using SPARQL3 (an RDF query language).

    A group of researchers [236] proposed adding a semantic layer to the administrative
    shell.

    Sensors 2022, 22, 5834

    31 of 76

    As part of the proposal, the RDF is included as a middle layer that can be deployed
    to

    support interoperability between the data generated from both I4.0 components
    and legacy

    systems. The researchers envision the establishment of RDF as a common communication

    language (lingua franca) between assets within Industry 4.0.

    8. Key Building Blocks, Technology Enablers, and Innovation Accelerators

    Though many organizations now aspire to upgrade their manufacturing and business

    operations into full-scale Factories of the Future, knowing where to start or
    even what

    makes for an Industry 4.0-compliant factory is not always clear-cut. The fact
    remains

    that applications or instances of the Future Factory are process-speciﬁc, and
    therefore vary

    from one industry to another. However, there are certain elementary units or common

    building blocks that show up in one form or the other in most conﬁgurations of
    these

    factories. The number and variety of building blocks that constitute a speciﬁc
    Future Factory

    conﬁguration will depend on the industry, and the unique process applications
    a company

    seeks to improve or optimize with its operations and processes. Understanding
    these key

    elements can prove helpful in properly characterizing Future Factories and smoothing
    the

    transition for industrial adopters. Figure 17 shows some of the most important
    core and

    periphery building blocks (or elements) of the Future Factory.

    8.1. The Core Elements of the Factory of the Future

    In the opinion of the authors, the trio cyber-physical systems (CPS), Industrial
    Internet

    of Things (IIoT) and digital twins (DT) constitutes the bare-bone elements of
    the current

    Factory of the Future. As will be shown later, several other technologies (including
    the cloud,

    artiﬁcial intelligence, AR/VR, blockchain, etc.) can be wrapped around these to
    extend

    the functionality, resilience, and integrity of the core elements or systems.
    Cyber-physical

    systems (CPS) and the Internet of Things (IoT) both enable end-to-end connectivity
    and

    support the transmission, transformation, and storage of data/information across
    different

    levels of the factory. The similarities and differences between CPS and IoT have
    been the

    subjects of many debates within the research community. NIST [242] performed an
    exten-

    sive review of these debates based on several references in the open literature
    [243–248].

    On the other hand, digital twinning enables the virtualization of the system to
    enable

    data and information cloning and seamless transmission and manipulation. Based
    on our

    analysis, the three foundational elements of the factory of the future are: (i)
    cyber-physical

    systems (CPS), (ii) Industrial Internet of Things (IIoT), and (iii) digital twins
    (DT). These

    elements are further discussed below:

    Figure 17. Building blocks.

    Sensors 2022, 22, 5834

    32 of 76

    8.1.1. Cyber-Physical Systems (CPS)

    Baring the development of some more advanced system, the cyber-physical system

    (CPS) will be a central feature of the Factories of the Future. The Factory of
    the Future is

    essentially a network of cyber-physical systems (CPS). They bridge the cyber and
    physical

    worlds seamlessly. In CPS, computational and physical systems are intertwined,
    with the

    interaction between the duo being a convergence of computation, communication,
    and con-

    trol. They also integrate sensing, control, networking, and computation into physical

    objects and related infrastructure [249]. The roles and uses to which they can
    be applied

    are virtually endless. Though things can get very complex, very quickly, multiple
    CPS

    can be combined into a super CPS or what can be referred to as a system of systems
    (SoS).

    CPS have been variously deﬁned: One deﬁnition is that they integrate computation
    with

    physical processes, where embedded computers and networks monitor and control
    the

    physical processes [249]; and the behavior of the system is deﬁned by both computational

    and physical components [250]. Rajkumar et al. referred to them as physical and
    engineered

    systems whose operations are monitored, coordinated, controlled, and integrated
    by a

    computing and communication core. They have also been referred to as hybrid systems

    that are simultaneously computational and physical [251]. Though there are different

    interpretations of what constitutes a cyber-physical system (CPS), there is nonetheless
    an

    agreement that they are the result of the integration of a computing nucleus and
    physical

    systems; and the computing core, like a central intelligence entity, orchestrates
    (monitors,

    coordinates, and controls) the operations of all elements’ nodes and entities
    within the

    physical or engineered system. In recent times, cyber-physical systems have permeated

    several elements of modern life.

    There are multiple applications of CPS in a wide variety of industries. Some of
    these

    applications can be seen in self-driving cars, smart grids, robotic systems, unmanned
    aerials

    vehicles, advanced industrial control systems, and automatic pilot avionics [252].
    In the

    case of the self-driving car, also known as the autonomous vehicle (AV) or driverless
    car,

    the computational core and the physical elements of the system are seamlessly
    incorporated

    to achieve the effective monitoring, coordination, and control of the vehicle.
    As a complex

    CPS, the vehicle combines a wide variety of physical nodes or sensors (GPS, radar,
    sonar,

    odometer, etc.) to perceive its environment. The sensory data collected from these
    physical

    assets are then analyzed and interpreted by advanced control systems to help identify

    suitable navigation paths and avoid collisions autonomously. Some autonomous control

    systems have even been able to make control decisions through knowledge acquired
    from

    steering patterns of human drivers acquired from video feeds from mounted-cameras
    and

    basic GPS-like maps. The seamless interaction of diverse components of the self-driving
    car

    to create value with little or no human intervention is a model for what is possible
    in the

    Future Factory (FF). Another relatable example is the smart phone, a mobile cyber-physical

    system which is a sub-class of cyber-physical systems. The smart phone is a composition

    of independently interacting physical components and a computing and communication

    core. The operations of the smart phone are monitored, coordinated, controlled,
    and inte-

    grated by the computing and communication core. The computational resources include
    a

    robust processing capacity with a local storage facility. Plus, there are the
    mobile operating

    system and smart phone applications. The physical components include several sensory

    input and output devices, such as cameras, GPS chips, touch screens, speakers,
    micro-

    phones, light sensors, and proximity sensors. The sensors gather distributed intelligence

    about the environment, including monitoring physical and cyber-indicators such
    as touch

    (touchscreen), sound (microphone), and the presence of nearby objects (proximity
    sensors).

    The computing elements communicate, gather, and analyze data from the sensors,
    devel-

    oping actionable intelligence useful for carrying out more accurate actions and
    tasks or

    controlling or modifying the physical and cyber environments. A communication
    highway

    between the smart phone and other CPS, and network connectivity that links the
    smart

    phone and various servers and the cloud environment, are enabled by communication
    tech-

    nologies such as WiFi, 4G, and EDGE. It is also important to note that there are
    structural

    Sensors 2022, 22, 5834

    33 of 76

    similarities between CPS and the Internet of Things (IoT), such as the similar
    architecture;

    however, a major distinction between the duo is that there is a higher level of
    co-ordination

    between the computational and physical elements in CPS [253].

    Smart manufacturing is a leading CPS application domain. As the backbone of most

    smart manufacturing solutions, CPS are the subject of extensive reviews and research

    work. For example, S.K Khaitan and J. D. McCalley [252] completed a literature
    survey on

    design techniques and applications of cyber-physical systems (CPS). The survey
    covers

    several important aspects, including the architecture and modeling of CPSs; simulation
    of

    CPSs; and tools and programming of frameworks for CPS and their veriﬁcation, including

    model checking techniques to verify the correctness of their cyber–physical composition.

    Cyber-Physical Systems: Foundations, Principles and Applications [254] is a great
    resource for

    understanding the core elements needed to design and build complex cyber-physical
    sys-

    tems. It also provides useful application examples. Examples of the industrial
    applications

    of CPS include the development of an automated warehouse system [255], the development

    of an industrial product service system [256], and the development of Cloud-Based
    Dis-

    tributed Process Planning (Cloud-DPP), a CPS-based system that was designed to
    enable

    cloud-based distributed and adaptive process planning in a shared cyber workspace
    [257].

    The system can generate machining process plans adaptively based on real-time
    informa-

    tion from machines. Another CPS-based solution worth further investigating is
    the FESTO

    pre-industrial system MiniProd, a multi-agent system running on EAS modules (modules

    with embedded control) designed for easy reconﬁguration on-the-ﬂy and self-conﬁguration.

    It is part of an effort to study the issues of autonomy and adaptability at operational
    levels

    of the assembly system within the smart manufacturing domain [258–262]

    8.1.2. Industrial Internet of Things (IIoT)

    Generally, a device is considered an object (or “Thing”) if it can use sensors
    and

    application programming interfaces (APIs) to connect, transmit, and exchange data
    over

    the Internet. Other acceptable characteristics of IoT devices include excellent
    power man-

    agement, the ability to self-diagnose, and the capacity for conﬁguration upgrades
    at low

    Internet bandwidths and within domains with poor network connectivity. Hence,
    the Inter-

    net of Things (IoT) is simply a growing network of billions of physical objects
    (or “Things”)

    that are connected to the Internet or to other devices that can be connected to
    the Internet

    themselves for the express purpose of data exchange or transmission. Almost every
    ﬁeld

    of human endeavor can beneﬁt in some way from IoT integration. Fields as diverse
    as

    agriculture, consumer electronics, and home appliance industries have already
    shown

    varying levels of adoption. Though the IoT evolved from the IIoT, the “Industrial
    Internet”,

    also known as “Machine to Machine (M2M)” or Industrial Internet of Things (IIoT),
    is a

    much narrower or limited version of the Internet of Things (IoT).

    It has been successfully applied to manufacturing and other high stakes industries,

    such as aerospace, healthcare, defense, and energy. The “Industrial Internet”
    as a term was

    originally coined by General Electric (GE) in 2012. It refers to a system of connected,
    albeit

    uniquely identiﬁed devices, alongside intelligent analytics, that are able to
    transfer data

    over a network without requiring human-to-human or human-to-computer interaction.

    The connected devices are interrelated objects, including sensors, actuators,
    instruments,

    and other networked assets, such as computing devices and digital and mechanical
    ma-

    chines. While IIoT supports sophisticated devices with advanced analytics and
    automation

    usually with high-risk impact, the high-volume general IoT uses simple applications
    and

    focuses on value creation in the low-risk impact consumer experience space. So
    important

    is the “Industrial Internet” that several organizations, including Bosch, DellEMC,
    General

    Electric (GE), Huawei, Microsoft, and Purdue University (College of Engineering),
    came

    together in 2014 to form the Industrial Internet Consortium to help accelerate
    the growth of

    the Industrial Internet.

    Sensors 2022, 22, 5834

    34 of 76

    8.1.3. Digital Twins

    Digital twin technology is a key enabler for the digital transformation of the
    traditional

    factory. One of the earliest references to “digital twins” as a concept dates
    to 2003, when

    one was first introduced as a virtual, digital equivalent to a physical product
    by Dr. Michael

    Grieves in the University of Michigan Executive Course on Product Lifecycle Management

    (PLM) [263]. Other such early mentions can also be attributed to Främling et al.
    (2003) [264]

    and Shafto et al. (2012) [265]. The digital twin has been variously defined as
    a sensor-enabled

    digital model [266] or a digital replica of a physical entity [267] that “mirrors
    the life of

    its corresponding [flying] twin” (Shafto et al., 2012) [265]; uses the best available
    physical

    models, sensor updates, fleet history, etc.; and can simulate the health condition
    of the

    physical twin, by continuously recording and tracking its condition during the
    utilization

    stage (Lee et al., 2013). The digital twin is also defined by its abilities to
    perform real-time

    optimization [268] and monitor and control its physical twin while being constantly
    updated

    itself, using data received from the physical twin [269]. The synchronous existence
    of a

    physical asset and its digital twin means that the boundaries between the physical
    and

    the virtual worlds are effectively blurred, ensuring that data are transmitted
    seamlessly

    between both entities [267]. Figure 18 is an example of an implementation of the
    digital twin

    of a robot arm. Though a relatively nascent technology, digital twin technology
    represents

    the next step in the development of intelligent products and is a key enabler
    in the digital

    transformation of traditional manufacturing. It makes it possible for physical
    assets to take

    on virtual identities and interact with other machines and people across diminished
    virtual

    and physical boundaries. A digital twin (also known as a “living” simulation)
    mirrors the

    current state of its corresponding physical asset and maintains its characteristics
    as the asset’s

    exact virtual representation by constantly learning, refreshing, and updating
    itself through

    inputs from human experts, machine-to-machine interaction, and continuous exchange

    of data with key elements of the physical asset, including sensors, actuators,
    and the like.

    The value of accurately capturing the current state of the asset is that critical
    outputs from

    the emergent model can be fed back to help optimize the performance of the asset
    and serve

    as a critical input into the simulation and prediction of the future state of
    the physical twin.

    Digital twins can be used to perform system optimization. They can also serve
    as sandboxes

    for testing new ideas or making informed production decisions. In such scenarios,
    they

    can be used as simulators where the possible outcomes of multiple production scenarios

    can be gamed, contemplated, or investigated before implementation to eliminate
    the cost

    of actual production testing or avoid the impact on or disruption of on-going
    production.

    They can also be used to evaluate the impact of modifying manufacturing parameters
    or

    using a combination of system parameters in a manufacturing scenario. Think of
    this as a

    typical of what-if analysis. The best performing options determined by the digital
    twin can

    easily be deployed to the physical twin through embedded PLCs and/or microprocessors

    for immediate implementation, saving time and cost.

    Figure 18. An implementation of a digital twin.

    Sensors 2022, 22, 5834

    35 of 76

    The digital twin is also gradually maturing into a technology that could ultimately

    revolutionize structural health monitoring, anomaly detection, and the remote
    launching

    of maintenance services that allow products to self-heal. On an even broader scale,
    digital

    twins of different factories and those of their suppliers, contractors, etc.,
    can be linked

    to establish virtual supply chain networks. The main beneﬁt of the digital twin
    is its

    ability to integrate previously disparate models into an integrated set of interoperating

    sub-models that are able to communicate and transfer information with each other
    while

    simultaneously drawing on multiple data sources, including historical data, comparable

    data, and current (up-to-the-second data) to accurately mirror the state of the
    physical

    twin, determine failure trends, estimate failure timing, and correctly interpolate
    results

    that help predict its likely future states. The continuous monitoring of the system
    means

    that multiple sensors (including smart sensors) positioned around the physical
    twin can

    constantly feedback data that would contribute to maturing the models and improving

    their accuracy and reliability. One of the challenges of the Factory of the Future
    is that it

    will be comprised of hundreds (and in some cases, thousands) of machines and devices
    at

    the edge. Updating the ﬁrmware, conﬁguration, or software in all these assets
    (machines

    and devices), within multiple platforms, would be very challenging without some
    form

    of automation. The digital twins of these physical assets (machines, devices,
    systems,

    or systems of systems (SoS)) [270] can serve as remote centralized hubs or connection

    boundaries for their wireless updates without physical human intervention. Another

    advantage of digital twins is that they can be used for the remote co-ordination
    and

    operation of machines, devices, and systems. Other possible uses are process monitoring

    and product tracking, not to mention that they can provide reliable alert and
    notiﬁcation

    system functionality both for the manufacturing ﬂoor and for supervisory and managerial

    teams. They can also be used to support the provision of remote technical assistance,

    equipment maintenance, and repair and other technical support activities in combination

    with augmented and virtual reality technologies.

    The digital twin as a concept and technology has a lot of promise in smart manufac-

    turing. The main idea of the DT is the digitization and virtualization of physical
    assets to

    enable the simulation of their real-time states through modeling, simulation,
    and analysis.

    The capturing of the states thus enables a feedback loop that makes the prediction
    and

    control of their future states and behavior possible [269]. Designing subsystems
    within

    a smart manufacturing system can be relatively easy. However, designing a fully
    inte-

    grated smart manufacturing system, complete with all its subsystems, can be very
    complex.

    The complication arises from the difﬁculty in being able to predict the dynamics
    between

    all the complex couplings that together make up the multi-ﬁeld physical system.
    To reduce

    cost and minimize error and cost, designers can ﬂexibly understand system dynamics,

    run what-if analysis, and redesign smart manufacturing systems using digital twins.
    J.

    Leng et al. [271] proposed a framework to demonstrate how digital twin technologies
    are

    integrated into smart manufacturing system (SMS) designs to create digital-twin-based

    smart manufacturing system design (DT-SMSD). The framework referred to as the
    Function–

    Structure–Behavior–Control–Intelligence–Performance (FSBCIP) framework could potentially

    contribute to easing the complications in the process of concurrent SMS designing.
    Further

    research is needed for the development of uniﬁed models that effectively imitate
    every

    interaction and behavior of the all the manufacturing processes within the co-interacting

    subsystems in a smart manufacturing system. Open-source technology and open archi-

    tecture have been recognized as potential solutions to SMS design [271]. Violeta
    D. and

    Wernher B, developed an implementation of the digital twin (DT) for a smart manufac-

    turing application using an open-source approach. The Digital Twin Demonstrator
    (as it

    is called) gave rise to a high-level micro-services architecture and includes
    a few build-

    ing blocks, including data management modules, models, and services. In their
    work,

    they also listed several commercial and open-source digital twin solutions that
    are worth

    mentioning. Some of these include the digital twin (DT) of a jet engine by General
    Elec-

    tric (GE) that enables pre-procurement and pre-construction conﬁguration of their
    wind

    Sensors 2022, 22, 5834

    36 of 76

    turbines. This solution is based on the Predix platform [272]. Other DTL solutions
    in-

    clude the PTC Windchill (smart PLM software), Build to Operate (aerospace and
    defense

    manufacturing management software) [266], and DXC (performance prediction solution

    for hybrid cars) [273]. Kamil Ž. et al. [274] discussed the creation of a digital
    twin for an

    experimental assembly system that was based on a belt conveyor system. The system

    also includes an automated line for quality checking. The paper provides a very
    good

    look at the DT implementation for a smart factory solution. However, the authors
    also

    reported data synchronization challenges (data transfer delays of up to one second)
    due

    to the cloud platform’s lack of support for storage of customized digital twins.
    Liwen

    Hu et al. [275] built a cloud-based digital twin (CBDT) using an information model
    and

    MTConnect protocol. The CBDT provides usage predictions and estimation utilities
    to

    improve efﬁcient resource use for cyber-physical cloud manufacturing systems.
    In 2020,

    the Industrial Internet Consortium (IIC) released a white paper [276] that provided
    practical

    guidance on digital twins, including the deﬁnitions, beneﬁts, architectures, and
    necessary

    building blocks for their implementation. The paper describes the technical aspects
    of

    digital twins, their design, standards and frameworks, and a high-level discussion
    of their

    applications in various domains. It also illustrates how digital twins are used
    to tackle the

    information silo problem within industry. First, the digital twin engine is used
    to centrally

    collect data from the disparate parts of the manufacturing system. That information
    is

    processed and then pushed to different parts of the system through integration
    interfaces,

    such as application programming interfaces (APIs).

    8.2. Peripheral Elements of the Factory of the Future

    Key enabling technologies (KETs) are emerging: high-tech technologies and solutions

    that have been permeating the traditional manufacturing industry, leading to industry-wide

    transformations [277]. Using case studies from Germany, Michael Rüßmann et al.
    [278] were

    able to identify the top nine technologies that constitute the building blocks
    of Industry

    4.0. Several other authors have also identiﬁed similar technologies as major enablers

    driving the technological revolution. In this work, we will be focusing on some
    of these.

    The technologies and solutions that are the basis of our discussion include cyber-physical

    systems, Industrial Internet of Things (IIoT), cybersecurity, digital twins, cloud
    computing,

    artiﬁcial and cognitive intelligence, big data and analytics, blockchain, augmented
    reality,

    3D printing (additive manufacturing), and autonomous robots. These technologies
    are

    weaved into the fabric of the factory and improve the intelligence of the system.
    Figure 19

    shows some of these technologies illustrated as layers.

    Blockchain et. al.

    Artiﬁcial Intelligence (AI)

    Big Data Analytics

    Cloud Computing

    Cyber Security

    Figure 19. Layers of transformative technologies shaping the Future Factory.

    Sensors 2022, 22, 5834

    37 of 76

    The Industrial Internet of Things (IIoT) will emerge as an important feature of
    the

    factory of the future. Currently, many Industrial facilities are increasingly
    reliant on the

    Industrial Internet of Things (IIoT). The connection and exchange of data among
    sensors,

    software, and other technologies that it make this possible help with the streamlining
    of

    operations, performance optimization, predictive maintenance, remote process monitoring,

    and online progress tracking. While the growth of the IIOT within the manufacturing

    industry will enable manufacturers to operate at unmatched performance and revenue

    levels, it will also create unprecedented susceptibility to cyberattacks in industrial
    systems

    and networks, the main reason being that connectedness can create vulnerabilities,
    since

    it opens more doors, exploitable touch points, and attack vectors or surfaces
    for not only

    cybercriminals but other bad actors, including individuals, groups, and nation
    states who

    might have ulterior motives or an axe to grind. The higher the number of devices
    and

    sensors connected through networking and Internet protocol (IP) addressing, the
    more the

    access gateways. Potential security breaches by malicious actors, or even insider
    threats,

    can portend grave technical and business risks if not adequately addressed. These
    vul-

    nerabilities have been exploited in the IoT domain in the past. For example, hundreds
    of

    thousands of unsecured IoT devices were pulled into a botnet (codenamed Mirai)
    which

    aggregated their processing power to carry out large-scale cyberattacks that momentarily

    crippled major websites such as PayPal, Netﬂix, and Spotify. These cybersecurity
    chal-

    lenges are even more complicated in the Industrial Internet of Things (IIoT) because
    both

    information technology (IT) and operational technology (OT) systems are being
    pulled into

    the Industrial Internet of Things (IIoT), even though operational technology (OP)
    systems

    were predominantly closed systems until recently. Furthermore, information technology

    systems have established cybersecurity protocols which do not work well with operational

    technology (OT) systems [279]. Note that information technology systems as deﬁned
    in

    this paper would include computers, computer networks, electronics, semiconductors,

    and telecommunication systems; and operational technology (OT) systems include
    all

    software and hardware systems focused on the physical aspects of industrial production,

    including the monitoring and control of physical devices and machines. Operational
    tech-

    nology (OT) systems are more likely to include outdated hardware components and
    legacy

    applications that have not been updated for years. There is also the challenge
    of very

    vulnerable communication protocols (i.e., Modbus and Proﬁnet) that are used to
    control

    many sensors, controllers, and actuators. A March 2019 report by the Ponemon Institute

    showed that 90% of organizations dependent on operational technology (OT) experienced

    at least one major cyberattack within the previous two years [280]. Since it is
    unlikely that

    companies will immediately upgrade their decades-old equipment that is still functional,

    there is a need for more cybersecurity research and a paradigm shift to address
    most of

    these security challenges.

    8.2.1. Cloud Computing

    The cloud has made it possible for data to be stored and accessed differently
    than was

    previously. The emergence of the cloud is one of the main factors driving the
    development

    of smart technologies. The cloud has forced a shift in the geography of data storage
    and

    computation. When “cloud” is combined with “computing”, it takes on an even more

    consequential meaning. Many scholars have attempted to provide some insight into
    the

    meaning and consequences of cloud computing to technological change. Armbrust
    et al.

    described cloud computing as, “both the applications delivered as services over
    the Internet

    and the hardware and system software in the data centers that provide those services”.

    Cloud computing has also been described as a unique computing paradigm that involves

    the provision of ﬂexible, dynamically scalable, and often virtualized resources
    over the

    Internet [281]. As cloud computing is based on an on-demand service delivery model,

    it was referred to as a utility by a 2009 Berkeley Report, a reference that is
    not entirely

    surprising, given that cloud computing has been previously referred to as utility
    computing.

    Cloud computing is premised on the idea that IT services (computational power,
    storage,

    Sensors 2022, 22, 5834

    38 of 76

    platform, and software) can be provided as utilities or services, much like electricity
    or

    water. It features ubiquitous, on-demand, and scalable access to resources. Under
    this

    arrangement, these resources are provisioned from a shared pool, obligating users
    to

    only pay for resources consumed (pay-per-use model). It eliminates the need for
    users

    to individually build and maintain complex infrastructure. The accessibility (location)
    to

    cloud infrastructure and how it is deployed or controlled (proprietorship) and
    by whom,

    vary from one cloud system to another. The four most common deployment models
    include

    public, private, community, and hybrid. The suitability of each model would depend
    on

    the speciﬁc needs of an organization. The cloud services are packaged in three
    main service

    models, viz., (a) infrastructure as a service (IaaS), (b) platform as a service
    (PaaS), and (c) software

    as a service (SaaS). Quality of service (QoS) requirements between providers and
    users ensure

    that high-quality services are provided at competitive prices. Since the cloud
    is designed

    as a network of virtual services, deliverable over the Internet, organizations
    can access

    and deploy applications easily from any location. End-users (or last-mile consumers)
    can

    also seamlessly access information or personal data remotely. Due to its almost
    unlimited

    digital storage capacity, the cloud will be critical for the monitoring, tracking,
    management,

    and storage of an almost endless stream of data ﬂowing from different nodes within
    the

    Industrial Internet of Things (IIoT). Pairing the cloud and the Industrial Internet
    of Things

    (IIOT) with a Future Factory enables the full integration of all key elements
    of the digital

    manufacturing ecosystem, which can then result in data and information sharing
    that

    should ultimately lead to gaining better understanding of how to improve productivity

    and ramp-up efﬁciency.

    In the context of manufacturing, data acquisition or capture primarily occurs
    at the

    nodal level. It typically involves the autonomous capture of data from production
    equip-

    ment, machines, devices, or systems using embedded or connected sensors and related

    hardware. Large amounts and often expensive network bandwidth are required to
    transfer

    massive amounts of data captured from devices to the central cloud for deep learning

    (DL) model training and inference. Some results of inadequate network capacity
    when

    confronted with massive amount of transferable data are low throughput, delayed
    transmis-

    sion (i.e., high latency), and poor network performance. Latency, which is the
    round-trip

    time required for data to be transferred to and from the cloud, needs to be as
    low as possible

    for systems to function optimally within the manufacturing network.

    The long-established trend of capturing and transferring data from the factory
    ﬂoor to

    the cloud is increasingly becoming untenable due to the high latency and low bandwidth

    issues associated with the massive amounts of data captured daily by the ever-growing

    number of IoT devices now available within manufacturing ecosystems. Furthermore,

    many time-sensitive operations within the factory have strict delay requirements
    (in some

    cases, a few milliseconds) [282] that cannot be met by reliance on the centralized
    cloud.

    Against this backdrop, it is instructive to look at the three levels at which
    storage and

    computing can occur:

    (a)

    “Cloud-Only” Computing: Cloud services make it possible for businesses to increase

    storage and computing capacities on-demand and on the ﬂy without the need to

    invest in new infrastructure, applications, or IT personnel. Eliminating concerns

    about the availability of IT resources enables companies to focus on innovation
    and

    creating business value while simultaneously cutting down on maintenance and

    administrative costs associated with managing their own IT infrastructure.

    (b)

    Fog Computing: Another compute paradigm that has since emerged is fog computing.

    Hierarchically, it stands mid-way between the cloud and the edge and lives on
    the

    LAN. Programmable fog nodes serve as trafﬁc hubs where decisions about the routing

    of data, inter-node peer-to-peer (P2P) communication, and service orchestration
    are

    made. They facilitate the decentralization of control and facilitate increase
    reliability,

    efﬁciency, and ﬂexibility [283]. While fog computing and edge computing have

    been treated in some texts as interchangeable terms or overlapping terminology,
    it is

    important to clarify that they are indeed interrelated but also different in many
    ways.

    Sensors 2022, 22, 5834

    39 of 76

    The OpenFog Consortium Architecture Working Group (now part of the Industrial

    Internet Consortium), an academia–industry group dedicated to the acceleration
    of

    the growth of the industrial Internet, called attention to some of the differences
    in a

    report entitled “OpenFog Reference Architecture for Fog Computing” [284]. While

    both computing paradigms bring processing power and intelligence closer to the
    data

    source, the major difference between them comes down to where data processing
    is

    performed. In the case of edge computing, data is processed directly on the devices

    on which the sensors are embedded or attached, or on some gateway device within

    their proximity. In the case of fog computing, processing is performed by processors

    connected to the LAN (i.e., a micro-data center) or within a LAN hardware. In
    either

    fog conﬁguration, processing occurs further away from the sensors and actuators
    than

    in edge computing. Further to this, most edge devices only process data collected

    at one touch point, whereas fog computing is about processing data aggregated

    from multiple devices. Thus, the fundamental construct of the fog architecture
    is the

    aggregation and high-level processing of data and the almost instantaneous return

    transmission of the acquired intelligence.

    (c)

    Edge Computing: Edge computing has since emerged as a viable alternative to the

    “cloud-only” or central cloud computing standard or architecture [285]. This dis-

    tributed computing paradigm involves the transfer of computer power, networking,

    application services, and data storage capabilities to where they are most needed,

    which is at multiple decision points that are usually as close as possible to
    the data

    sources [286,287]. It also enables dynamic monitoring and control of manufacturing

    processes [288]. By building in ﬂexibility around where computations can be per-

    formed and extending cloud computing standards to the far reaches of the edges
    of

    the network, many of the latency, bandwidth, and data throughput issues that have

    bedeviled cloud computing can be addressed [289]. The proliferation of edge comput-

    ing as a concept has been facilitated by the growing adoption of faster networking

    technologies, such as 5G wireless; the integration of edge devices into manufacturing

    IT and OT networks; and the connecting of all these using IIoT. In this arrangement,
    al-

    gorithms can now run locally on edge servers or gateways, and data can be processed

    at a high level; then, some forms of analytics can be reported so that insights
    are

    provided in real time and human and machine queries are responded to in seconds.

    Some of this intelligence can be used to actuate other connected devices or systems

    where necessary, and actionable results can be instantly made available to workers

    on the factory ﬂoor and executives in ofﬁces. This is reminiscent of the autonomous

    vehicle, whose systems require instant feedback to make travel decisions, even
    while

    the vehicle is in motion, and in some cases even at high speed. Edge devices (nodes)

    enable edge computing by providing entry points into manufacturing core networks.

    They are usually mobile or ﬁxed assets, often embedded or connected to machines

    or equipment. They are typically distributed throughout the factory ﬂoor and other

    remote locations, such as nodes across a wide network or stars strewn across a
    dark

    sky. Large IIoT operations, such as those in manufacturing facilities, typically
    host

    hundreds (or even thousands) of edge devices (nodes), which together form a network

    of edge devices that recognize and communicate with each other. The edge devices

    continuously and autonomously collect, process, and broadcast data, which provides

    signiﬁcant visibility and awareness about events across the network. Some edge

    devices serve a dual purpose as sensing devices for capturing sensory information

    and actuators that can trigger or control other devices or systems. Some common

    examples of sensors and actuators in edge devices within manufacturing facilities

    include: (a) Sensors: pressure and temperature sensors; real time location systems

    (RTLS); cameras; near-ﬁeld communication (NFC) sensors; light, proximity, motion,

    acoustics, and radio-frequency identiﬁcation (RFID) sensors; ultrasonic sensors;
    ﬂow

    meters; and ﬂuid sensors. (b) Actuators: hydraulic and pneumatic ones, switches,

    relays, programmable logic controllers (PLCs), motors, and light and acoustics
    actua-

    Sensors 2022, 22, 5834

    40 of 76

    tors. Under the edge computing arrangement, data are processed, and analysis results

    are distributed by the same device used to acquire it or by a nearby server instead

    of a centralized cloud. The results of implementing edge architecture include
    the

    ability to process and store data faster, improved application performance, low
    latency,

    and signiﬁcant reductions in bandwidth cost. Notwithstanding, it is important
    to note

    that edge computing does not eliminate the need for deeper data analytics, large
    data

    storage facilities, and extended archival capabilities, all functions that the
    cloud is

    better suited for. The main advantage of edge computing is its capacity to reduce
    the

    compute requirements and data volume that must be transferred to data centers
    or

    cloud-based locations within short notice. In the Future Factory, it is expected
    that

    more complex data processing will be performed at the edge, as new system modules

    that incorporate advanced artiﬁcial intelligence functionalities are built into
    them.

    Edge computing has also helped in the management of many security and privacy

    related concerns within industry.

    Pending the development of better technologies and more advanced architectures,

    the cloud computing/data analytics needs of the Future Factory can be met using
    a hybrid

    architecture that relies on or one or more of the computing paradigms discussed
    above.

    Examples of such hybrid architectures include:

    (i)

    “The Cloud-Only” model: In the cloud-only model, no intermediate processing of
    data

    occurs. All data captured by multiple sensors are transmitted to the cloud, where
    100%

    of the processing occurs, before the results are pushed down to all the sources
    that

    require the intelligence.

    (ii)

    The Cloud–Fog Computing model: In this model, data from multiple sensors and devices

    are transmitted to the fog gateways. Depending on the urgency of the request,
    some

    high-level processing of data occurs at the fog layer, and intelligence pushed
    back to the

    various nodes (machines and humans) in real-time. Non-time-sensitive data and
    some

    pre-processed data that require further (deep learning) processing are transmitted
    to

    the cloud.

    (iii) Cloud–Fog–Edge Computing Model: This is a massive, distributed computing
    infrastruc-

    ture that consists of three inter-connected computing tiers (cloud, fog, and edge).

    All data acquisition occurs at the logical extremes of the network using edge
    devices.

    Some instant, high-level processing of data occurs at this tier (the edge) to
    provide time-

    sensitive, real-time responses from entities (man and machine) at different nodes.
    In this

    conﬁguration, the fog layer not only serves as a distribution hub for resources
    and services

    between the edge and the cloud, but also stores and performs high-level data analysis

    of data from multiple sensors at different edge locations while providing a low-latency

    network connection for the transmission of data and responses back and forth between
    the

    edge and the cloud. Unlike the edge, the fog layer is best suited for analytic
    operations that

    require real-time analysis of data from multiple data sources (e.g., several edge
    devices).

    The cloud tier is where the most robust deep learning processing operations occur.
    It is

    the tier where all non-time sensitive and pre-processed data arrive for thorough,
    deep,

    and ﬁnal analysis. The cloud also has massive and scalable data storage and archival
    capa-

    bilities. Figure 20 aptly captures the Cloud-Fog-Edge layer architecture including
    related

    infrastructure and services.

    Sensors 2022, 22, 5834

    41 of 76

    Figure 20. Cloud–fog–edge layer architecture.

    8.2.2. Big Data Analytics

    Data are the fuel that drives digitally transformed factories and are fast becoming

    the most consequential assets in manufacturing as the factory of the future begins
    to take

    shape. As part of this digital transformation process, some manufacturing organizations

    have been able to successfully connect their numerous fully automated manufacturing

    facilities (alongside all their production equipment) located in different global
    sites into

    a central cloud, resulting in manufacturing architectures that are IoT-native,
    fully digital

    capable, and broadly cloud-based. These architectures, which can qualify as benchmarks

    for Industry 4.0, enable seamless data sharing, collection, and exchange across
    enterprise

    resource planning, manufacturing operations management, and production life-cycle
    man-

    agement processes, thereby enabling coherent feedback systems that leverage data
    analysis

    outputs for the optimization of manufacturing operations. These factories will
    plausibly

    grow ever more intelligent due to the exponential amounts of sensed data that
    will ﬂow

    into servers and data reservoirs because of the continued digitization of industrial
    assets.

    However, no actual beneﬁt would accrue from the possession of these vast amounts
    of data

    if they were not properly analyzed and the accruing intelligence distributed to
    all necessary

    end-users and connected systems in formats that make sense to help improve processes,

    productivity, and competitive advantages. Ultimately, deriving critical intelligence
    that

    can help make correct inferences and consequently acquire optimal value from data
    would

    require advanced analytics and the ability to effectively present results in formats
    that are

    easily decipherable by appropriate systems or visualization formats that are meaningful

    and can be effortlessly comprehended by end-users, both executives in the ofﬁces
    and

    technical personnel (engineers, technicians, ﬁtters, etc.) on the shop and manufacturing

    ﬂoor. Terms such as data warehouse, data lake, edge, modeling, and optimization,
    are all

    examples of words associated with data analytics.

    8.2.3. Artiﬁcial and Cognitive Intelligence

    The Future Factory is a highly dynamic system that is comprised of several inter-

    connected and sometimes co-dependent sub-systems that are subject to a wide variety
    of

    nonlinear and stochastic activities [290,291]. These assets also generate huge
    amounts of

    data which potentially contain useful operational and strategic business insights.
    Unfortu-

    nately, only a fraction of these data are currently analyzed by various traditional
    factories,

    due to operational and technical constraints. With the increasing complexity of
    today’s

    factory, many traditional methods often used to address a lot of common production
    issues

    (such as process variability, root cause analysis, early detection of quality
    defects, degra-

    Sensors 2022, 22, 5834

    42 of 76

    dation monitoring, and process control) are becoming increasingly inadequate.
    Due to

    its many successes in a variety of industries, artiﬁcial intelligence is increasingly
    looking

    like a credible alternative for addressing a variety of manufacturing challenges
    because

    of its robust portfolio of solutions and its incredible ability to process vast
    amounts of

    manufacturing data, making it possible for companies to transition from reactive
    to highly

    accurate proactive (and even predictive) decision making. Several research-based
    concepts,

    mock-ups, test-bed prototypes, and even factory-ready artiﬁcial intelligence solutions
    have

    been developed or built in recent years.

    However, what exactly is artiﬁcial intelligence (AI)? Artiﬁcial intelligence (AI)
    is as an

    inter-disciplinary discipline [292], a set of practices and a variety of systems
    or tools

    that model and/or exhibit intelligent behaviors, such as perception, reasoning,
    decision

    making, the ability to predict, and even the ability understand context. The mimicry
    of

    human cognitive functions is at the core of artiﬁcial intelligence (AI). Reason,
    interaction,

    and learning are the three key attributes of a typical artiﬁcial intelligence
    system. Due

    to the implied similarities in intellect, comprehension, and abilities, artiﬁcial
    intelligence

    (AI) is said to possess a certain kind of machine intelligence [293] that could
    equal and

    possibly outmatch human intelligence [294] in certain respects. AI can either
    replace or

    augment human abilities. While there are several sub-ﬁelds within artiﬁcial intelligence

    (AI), (e.g., machine learning, deep learning, natural language processing, computer
    vision,

    expert systems, cognitive computing, etc.) it is not easy to make clear distinctions
    between

    them because of clear overlaps in their relationships. To better understand AI,
    we focus

    on the two main sub-ﬁelds, i.e., machine learning (ML) and deep learning (DL),
    that drive

    performance in all the other sub-ﬁelds.

    ML has been dubbed the workhorse of artiﬁcial intelligence (AI), and its applications

    are ubiquitous across multiple industries. It has been particularly useful as
    an effective tool

    for evidence-based decision making [295]. Traditional ML involves a process of
    training a

    system by exposing it to examples of desired input–output behavior instead of
    explicitly

    programming it. ML is used to build assets or systems that can automatically improve

    through experience. The way it does this is by learning from data. Learning from
    data

    means being able to extract information accurately and quickly from raw data and
    to be

    able to make reasonable inferences. To do this machine learning (ML) relies on
    different

    purposes or task-speciﬁc algorithms. Figure 21 shows different types of traditional
    ML

    algorithms. There are no one-size-ﬁts-all algorithms that can solve all ML problems.
    ML

    algorithms exploit meaningful relationships within datasets to solve complex production

    problems. In his 1959 paper [296], Arthur Lee Samuel, an American pioneer in the
    ﬁelds of

    computer gaming and artiﬁcial intelligence, noted that, “A computer can be programmed

    so that it will learn to play a better game of checkers than can be played by
    the person

    who wrote the program”. This statement underscores the power of machine learning

    (ML), i.e., its ability to learn what to, to do it automatically once the lesson
    is learned,

    and to in fact, improve its performance and accuracy over time. Applied ML solutions
    do

    not only learn from data but become more accurate and useful over time by leveraging

    knowledge acquired from new data in the course of the use of the solution [297].
    Vast

    amounts of data are generated in manufacturing. A great advantage of machine learning

    is that it can analyze large amounts of complex manufacturing data and quickly
    make

    meaning of it. There are numerous reviews of machine learning (ML) and deep learning

    (DL) techniques/applications in manufacturing [298–300]. The emergence of low-cost

    computation, next-generation computing architecture (particularly graphics processing

    units, GPUs), the availability of data, and the development of sophisticated algorithms
    are

    at the root of the rapid advancements in machine learning (ML) [301].

    Sensors 2022, 22, 5834

    43 of 76

    Figure 21. Machine learning (ML) algorithms’ acronyms: support vector machines
    (SVM), K-nearest

    neighbors (KNN), logistic regression (LR), Naïve Bayes multinomial (NBM), principle
    component

    analysis (PCA), singular value decomposition (SVD), frequent pattern-growth (FP-Growth).

    Deep learning is a special type of machine learning (ML) that is based on artiﬁcial
    neu-

    ral networks (ANN) [302]. The adjective “deep” in “deep learning” refers to the
    multiple

    network layers that are common in DL. DL algorithms use neural networks with multiple

    processing layers (often more than three layers) [303] that learn data representations
    at

    multiple abstraction levels [304] by optimizing some unsupervised criteria [305].
    After the

    input layer, every subsequent layer within the network produces a distinct representation

    of the observed patterns based on inputs received from the previous layer. Ultimately,

    the algorithm achieves its results by progressively extracting high-level features
    from one

    representational layer to another. This intuitive stepwise feature extraction
    process results

    in slightly more abstract representation of the input data, the deeper into the
    neural network

    the data ﬂows. Various deep learning (DL) approaches have been reviewed in the
    open

    literature [302,305–308]. Deep learning (DL) is very scalable, and performance
    improves

    markedly as more data become available. Some common deep learning (DL) application
    ar-

    eas include computer vision [309,310], natural language processing (NLP) [311,312],
    speech

    recognition , machine translation, etc. Of these, computer vision is perhaps one
    of the areas

    where DL has had the most impact. Computer vision application areas, such as image
    clas-

    siﬁcation, object detection, action recognition [313,314], motion/visual tracking
    [315,316],

    semantic segmentation [317,318], and human pose estimation [319,320], are now
    common

    on many factory ﬂoors, in the value chain, and in supply chains of many industries.
    The in-

    crease in popularity of DL-based solutions is in part because of the astounding
    human-level

    results they have delivered [304]. One of the major differences between traditional
    machine

    learning (ML) and deep learning (DL) is in how representations are learned from
    the raw

    data. Unlike traditional ML, DL can perform automatic feature extraction (i.e.,
    feature learn-

    ing) intuitively. While important features are manually extracted in traditional
    machine

    learning (ML), deep learning (DL) achieves relatively higher accuracy classiﬁcations
    using

    general-purpose learning procedures that rely on automatic extraction of high-level,
    non-

    linear features from raw data, all with little or no human intervention. This
    is particularly

    helpful considering that 80–90% of available data today are unstructured in nature.

    Applications of Artiﬁcial Intelligence (AI) in Manufacturing: The typical manufactur-

    ing system integrates several elements, including machinery (including machines,
    robots,

    conveyors, tools, ﬁxtures, and related hardware), material handling systems, information

    handling systems (computer systems), and human workers. All these systems, the
    tech-

    nologies that drive them, the processes they support, and the strands that connect
    them can

    all potentially be infused with AI solutions to increase efﬁciency and ensure
    the “optimal

    control” of material ﬂow, efﬁcient use of energy, and ultimately, the cost-effective
    creation

    of value. Amongst many beneﬁts, artiﬁcial intelligence (AI) eliminates or replaces
    time-

    consuming and sometimes risky traditional practices, facilitates access to data,
    and enables

    effective execution of manufacturing tasks.

    Sensors 2022, 22, 5834

    44 of 76

    Artiﬁcial intelligence (AI) has domain-independent characteristics and has perme-

    ated many industries. AI-based solutions have been implemented for all manufacturing

    processes (design, production, maintenance, assembly, etc.) and the associated
    supply

    chain [321,322]. It has the potential for game-changing impacts on manufacturing
    in the

    long term.

    AI technologies provide opportunities to maximize the value locked up in the vast

    troves of data generated daily within factories [323]. It facilitates autonomous
    and in-

    telligent analysis of real-time and historical data, enabling smart and informed
    decision

    making [324]. This allows the factory and its sub-systems to respond in real-time
    to

    changing demands and dynamic conditions streaming through the PLM systems [325,326].

    The two aspects of manufacturing that have experienced the most infusion of artiﬁcial

    intelligence (AI) solutions are machinery maintenance and quality. The most focus
    is di-

    rected towards advancements in overall equipment efﬁciency (OEE), growth in production

    yield, increases in uptime, and improvements in quality and consistency.

    AI-based solutions enable automatic evaluation, monitoring, and real-time insight
    into

    equipment condition to help minimize unplanned equipment downtime and expensive

    maintenance costs. They are also able to forecast when operational equipment is
    likely

    to fail to help guide maintenance scheduling. Artiﬁcial intelligence (AI) also
    provides

    visibility across manufacturing cells, lines, and the supply chain.

    It has been used for inspections [327–329], diagnosis [330], anomaly detection,
    and pre-

    dictive maintenance [331,332]. To improve product quality, artiﬁcial intelligence
    (AI)

    solutions have been used to automate defect detection processes by automatically
    verify-

    ing product quality and providing insight into quality issues, hence reducing
    waste and

    enabling production improvements. Many ML-based fault/defect detection [333–338]
    and

    quality monitoring approaches [336] have been proposed in the literature. Several
    examples

    of fault diagnostics [335,339–349] are also available in the literature. Bayesian
    approaches

    that enable root cause analysis of quality issues [350,351] have also been proposed.
    It has

    also been used for robotics [352,353], robot-inspired path planning [354], and
    managing

    network trafﬁc in computer networks [355]. Different artiﬁcial intelligence (AI)
    strategies

    have also been infused into manufacturing-based technologies, such as cybersecurity
    (Mal-

    ware detection) [356,357] and augmented reality (AR) systems [358,359], to enable
    them to

    operate more autonomously and intelligently.

    Another area where AI has played a useful role in the factory is in the prognostics

    and health management (PHM) of machinery [360]. The ability to detect deviations
    in the

    normal operating conditions of industrial components is helpful for the timely
    prediction,

    detection, and isolation of faults; and the prevention of costly and unplanned
    failures. Real-

    time visibility about the health status of individual machines and the entire
    production

    system provides immediate and long-term value to the production process. While
    the

    combination of data availability and the adoption of traditional ML techniques
    in recent

    years provided a lot of insights into component defects, root cause analysis,
    machine

    degradation, and remaining useful life (RUL), the complexity of the manufacturing
    systems

    has prompted a pivot to deep learning (DL) solutions, which are better able to
    handle the

    complexity of input data, providing hierarchical representations [361].

    AI has also supported intelligent control of manufacturing systems. The growing

    complexity of controlled systems now means that no single control paradigm addresses
    the

    issues prompting the use of hybrid control systems that sometimes include both
    discrete

    event systems and continuous systems. To be effective, these hybrid control systems
    require

    intelligent control methodologies [362–366] to be embedded within them.

    Optimal system conﬁgurations, performance evaluations, material ﬂow modeling,

    throughput, etc., are all within the purview of AI. Most factories contain highly
    integrated

    systems comprising manufacturing cells, workstations, assembly lines, material
    handling

    systems, and a network of multiple machines, robot, and conveyors that support
    the ﬂow

    of materials and their processing/reﬁnement. These arrangements typically have
    ﬁnite

    buffer capacity. These ﬁnite buffers and periodic system failures of unreliable
    machines,

    Sensors 2022, 22, 5834

    45 of 76

    and uncertainties and inter-dependencies that make factory operations nonlinear
    and

    stochastic [290,291], make the determination of optimal system conﬁgurations,
    performance

    evaluations, material ﬂow modeling, etc., very challenging. A lot of work has
    been devoted

    to the analysis of the dynamics and performance of manufacturing systems [31,291,367–369].

    Some of these, such as the queuing theory and Markov chain-based analytical modeling

    methods, have known limitations [367,369–371]. AI-based ML techniques appear to
    be

    compensating for these shortcomings [291,369,372–375].

    AI solutions have also been used in job scheduling. To meet mass customization
    re-

    quirements, ﬂexible manufacturing systems (FMS) are designed to easily adapt to
    changes

    in the type and quantity of products. A particular challenge that then arises
    during im-

    plementation is the job dispatching problem: several product orders could be awaiting

    processing within the same time window. Exact approaches (best for small-scale
    job dis-

    patching problems) and heuristic-based methods (not very adaptive in highly dynamic

    environments) have been traditionally used to address these issues. As for their
    limita-

    tions, ML-based methods have been used to compensate for these deﬁciencies. Artiﬁcial

    intelligence applications will play important roles in the transition to Factories
    of the Future.

    More application examples are discussed below. These include a deep-learning-based

    quality control solution used for defect detection in the assembly line [376]
    and an AI-based

    (machine learning) and context-aware intrusion detection system [377]. Li, Bo-hu,
    et al. [26]

    performed an entire review on applications of artiﬁcial intelligence in intelligent
    manu-

    facturing. Within industry, several manufacturers have also implemented industrial
    AI in

    their manufacturing ecosystems, moving from pilots to integration at scale. Referred
    to

    as the “lighthouse factories”, these organizations have realized signiﬁcant ﬁnancial
    and

    operational beneﬁts in the process [378,379].

    8.2.4. Blockchain

    This is a type of shareable ledger that runs atop a permissioned network [380].
    It can

    also be described as a distributed network of nodes, typically running on multiple
    servers

    that feature a system of perpetually growing lists of trusted or veriﬁed asset
    transactions.

    Depending on the way the system is set up, trust is distributed across nodes within
    the

    network. These nodes are responsible for the veriﬁcation, authentication, and
    integrity of

    block data before the ultimate inclusion of the new block into the growing chain.
    These con-

    tinuously growing chain link of blocks is aptly referred to as a blockchain. Each
    block stores

    data associated with an asset (i.e., person, place, or thing). The relationship
    between the

    blocks is maintained through a mechanism that enables each block in the chain
    to inherit an

    immutable hash of the prior block that it is connected to. A sransaction within
    a blockchain

    is usually processed and stored without consultation with, approval of, or even
    the need for

    a central trust authority [381]. One of the main reasons blockchain is an important
    building

    block for a typical future factory is the fact that the data stored on it (e.g.,
    transaction

    details) are immutable or remain unchanged, unaltered, and indelible, which means
    that

    the full history and data trails of all data, communications, and transactions
    are preserved,

    thereby establishing data provenance. A typical blockchain system includes a network
    of

    nodes that serves as a decentralized and trustless system which ensures data provenance

    and the efﬁcient sharing of manufacturing (products and processes) information.
    It can be

    set up as a decentralized and connected network of manufacturing assets and computing

    nodes. This system will provide transparency, and audit the trail of assets and
    a third-party

    veriﬁcation system of an organization’s manufacturing capacity, creating a mechanism
    for

    operationalizing “smart contracts” between different parties or entities. It will
    be essential

    for product customization and tracking of assets within a supply chain. Various
    factories

    and their value chains might need to be connected in the factory of the future,
    in what

    could be termed networked organizations and machines. In a typical network of
    the sort

    suggested, multiple third-party entities might be involved in various aspects
    of the produc-

    tion of a product, including receiving supplies (materials and spares), service
    provisioning,

    product design, fabrication, and production. Other aspects might include product
    testing

    Sensors 2022, 22, 5834

    46 of 76

    (validation/veriﬁcation), regulatory control, and shipment. Trustworthiness among
    the

    disparate parties (factories, distributors, suppliers, regulators, and other stakeholders)

    within such a network would be critical if all participants are to be at ease.
    Basic imple-

    mentations of blockchain abound in the literature. Examples exist from healthcare
    [382],

    intellectual property protection of a 3D print supply chain [383], and machine-to-machine

    (M2M) interactions in the chemical industry where industrial plants trade electricity
    with

    each other over a blockchain. In a certain instance, a central server which typically
    manages

    information exchange and data authentication in an IoT system was replaced by
    blockchain

    (BC) technology, hence eliminating risks of device spooﬁng, false authentication,
    and sev-

    eral other security and privacy concerns [384]. Atin Angrish et al. [37] provided
    some great

    insight into blockchains with a focus on manufacturing.

    8.2.5. Mixed Reality

    Mixed reality is a class of technologies that attempt to blend the physical and
    digital

    worlds. Mixed reality operates on a spectrum: virtual reality (VR) and augmented
    reality

    (AR) are the most prominent types. In this paper, we focus our attention on augmented

    reality (AR), mainly because it likely has the greatest potential to proliferate
    in the factory of

    the future. Augmented reality (AR) systems project context-sensitive [385] digital
    informa-

    tion in 2D or 3D forms (i.e., texts, stats, maps, videos, images, animations,
    characters, etc.)

    over real-life objects (the physical world) for the express purpose of providing
    additional

    information, context, instructions, or guidance about said objects, or processes
    that the

    objects are undergoing. They enable users to interact with real and synthetic
    elements

    of the real and virtual worlds simultaneously [386]. As a human–computer interaction

    tool, users (technicians, maintenance crew, etc.) can directly interact with the
    “extended”

    information to make informed decisions. Augmented reality (AR) systems complement
    (or

    augment) human abilities, providing users the guidance and support needed to complete

    tasks correctly in a consistent and efﬁcient manner, leading to higher productivity,
    greater

    accuracy, and a marked reduction in expensive reworking by ensuring tasks are
    performed

    accurately, the ﬁrst time. User-friendly and intuitive human interfaces alongside
    rich,

    appropriate, and context-aware content are factors critical for a great AR experience
    [387].

    (a)

    Types of Augmented Reality (AR) Systems: There are several types of augmented

    reality (AR) systems, differentiated by application, functionality, or design.
    Of these,

    four main types stand out: (a) Marker-based AR: AR systems of this class display

    content (video, text, animation, 3D ﬁgures, etc.) on surfaces contingent with
    the

    detection of a predeﬁned marker embedded on a static image (trigger photo) or
    a QR

    code, often using AR devices such as smart phones. (b) Markerless AR: Unlike Marker-

    based AR systems, they do not require physical markers for the overlay information

    to be triggered. They merely scan their environments to get their bearings and
    are

    generally guided by localization or positioning systems, such as GPS, accelerometers,

    and digital compasses. (c) Projection-based AR works just like typical projectors.
    They

    utilize image or video-based projection (with audio prompts, in some cases) to
    guide

    the pace, direction, and “every step” of a process. They help operators or factory

    workers through manual processes, enabling them to complete tasks quickly, efﬁ-

    ciently, and consistently without recourse to hard-copy manuals and instructions.
    (d)

    Superimposition-based AR relies on the object recognition technique to ﬁrst identify

    an object and then replace it or a portion thereof with an equivalent augmented
    image.

    An often-cited application of superimposition-based AR is in the medical ﬁeld,
    where

    doctors sometimes superimpose live feeds (X-ray images) of a patient’s body part

    directly from an X-ray machine unto the patient’s actual body to better understand

    the internal condition of the body part.

    (i)

    Hardware Devices: Hardware devices are a necessary and integral part of aug-

    mented reality (AR) systems. There are several types of AR devices in common

    use. Some of these include handheld devices (HHD) [388–390] holographic

    displays, head-mounted displays (HMD), smart glasses/lenses and virtual reti-

    Sensors 2022, 22, 5834

    47 of 76

    nal displays (VRDs), mobile phones (including smart phones) [390], wearable

    data-gloves [391], haptic devices [392], tablets, iPads, and computers.

    (ii)

    Software Systems: Software (or applications) also forms an important part of

    AR systems. Of particular interest are (a) tracking and registration algorithms

    and (b) development platforms (or content-creation applications). The primary

    function of the tracking and registration algorithms is the alignment of the

    two (real and virtual) environments or object categories. On the other hand,

    development platforms are the applications used for the creation of AR content.

    They include anything from low-level programming libraries to the more complex

    AR applications that integrate features for sensor data acquisition and integration,

    image, and audio rendering, and in some cases, even application engines.

    (b)

    Industrial Applications of Augmented Reality: Over the years, AR technology has

    continued to mature. Since it can simulate processes, augment tasks, provide remote

    assistance, enhance communication between teammates, and provide elaborate guid-

    ance to users, it has demonstrated relevance to manufacturing amidst the on-going

    re-imagination of the sector. There have been proposals [393], proof of concept
    studies,

    and actual applications [394] in a wide array of industries [48,52]. Its successful
    appli-

    cation at various manufacturing stages (planning, design [395,396], assembly [394,397],

    maintenance, etc.) is particularly notable. It has also found applications in
    different

    manufacturing processes and functions. A few of these are discussed below:

    (i)

    Interactions with Process Information: They have been used to digitally access

    and interact with procedural and process information, including IIOT related

    data [398] acquired in real-time, rather than relying on physical manuals and

    paper documents. Some have been used to display augmented 3D images, mak-

    ing it possible to view system components in multiple conﬁgurations, including

    exploded, cross-sectional, and internal views. For example, internal views come

    highly recommended for providing insights into the internal sections of opaque

    structures or systems where accessibility or worker safety is an issue [399].

    (ii)

    Quality Control: AR systems are already playing a huge role in automated real-

    time, in-production quality control. The mobile nature of most AR systems

    supports the relocation of the quality control functions away from static (ﬁxed)

    input locations to mobile terminals, permitting intermediate inspections, and
    fa-

    cilitating the ﬂexible and cost-effective use of software license seats. The online,

    real-time, and decentralized characteristics of the AR systems provide the added

    advantage of instant access to and ﬂexible ﬂow of information to various manufac-

    turing points where they are most needed. It also enables fast variance inspection,

    continuous, real-time error reporting, and documentation. Finally, the instant

    generation of enhanced quality assurance reports [400] immediately after the

    completion of each instance of an inspection routine [401] is not a possibility.

    (iii) Process Support, Training, and Simulation: AR technology has also been used
    to

    assist technicians and operators working on mechanical or technical tasks such

    as welding [402], machinery repair, and assembly operations, and even in con-

    trolling robots [403,404]. Some AR inspection systems incorporate features that

    provide graphic step-by-step instructions that can be used for process training.

    The step-wise design of these routines ensure that processes are performed in
    a

    consistent, accurate, and reliable manner. They can also be used as simulators
    for

    practice runs to help users develop and perfect their skills, ensuring that manu-

    facturing tasks and processes are carried out right the ﬁrst time. In the long-term,

    this helps with limiting errors and eliminating the need for rework. This level
    of

    expertise and dedication is useful for high-stress tasks where precision is critical.

    (iv) Repair and Maintenance: The repair and maintenance of complex machinery will

    be one of most consequential areas of AR application in manufacturing. Next

    generation AR-inspired maintenance systems are becoming important elements

    of the Factory of the Future [405]. They are now more often the products of the

    Sensors 2022, 22, 5834

    48 of 76

    intersection of AI, IIoT, big data, and associated technologies and capabilities.

    Excellent condition monitoring, combined with dynamic predictive modeling,

    make for a successful predictive maintenance program. In the Factory of the

    Future, technicians going about in the normal course of their daily duties can

    be prompted by their wearable IAR devices (such as smart glasses or mobile

    devices) about “just-beginning” maintenance problems, way in advance of actual

    system or component failures. These AR systems not only detect and warn

    operators and technicians about these anomalies, but also offer on-the-spot visual

    analysis of the problem, display the service histories of the machinery, and deliver

    step-wise service instructions to aid in their resolution. For off-site maintenance,

    the AR systems can serve as remote collaboration tools where a technician can

    contact each other, collaborate with colleagues for resolving tough problems,

    or be remotely guided by a more experienced supervisor [406].

    (v)

    Collaborative Product Design and Prototyping: Almost all aspects of product de-

    sign, for early to late stages, can now be collaboratively performed (end-to-end),

    streamlined, sped-up, and optimized using AR. These stages include ideation,

    conceptual design (encompassing generic functionality management [407]), pre-

    liminary design, the interactive generation of models or virtual product pro-

    totyping [397,406,408], design review, and evaluation [409]. Free-form surface

    generation features in some AR applications have been used to support easy

    creation of design alternatives and to enable parameter adjustments [407]. In
    au-

    tomotive design, for example, AR-based design tools have been used to evaluate

    multiple interior design options by simply overlaying different photo-realistic

    3D car interior mock-ups over real cars [408], eliminating the need for physical

    prototypes. AR-based design tools often generate sharable, high quality, 1:1

    scale, photo-realistic 3D visualization of augmented design models that can be

    converted into AR compatible format and transmittable to stakeholder’s devices

    for easy and enhanced viewing. Availability and real-time remote access to these

    models make collaboration easy. They are enabling stakeholders (both designers

    and other collaborators, downstream in the product pipeline) to inspect and inter-

    act with the design models, and provide timely and objective feedback for design

    improvements, in advance of design approval and production [16]. The early

    detection of ﬂaws facilitates design improvements and eliminates expensive

    post-production redesign costs. Several user-friendly, computer-aided AR design

    environments, such as ARCADE, are now available [410].

    (c)

    The Challenge with current AR Systems: Though there is growing interest in the

    use of augmented reality (AR) as a support tool across industry [411,412], one
    draw-

    back of most AR-based maintenance systems is that most applications are currently

    passive and static in nature. They merely push information and provide no feedback

    mechanism capable of ingesting, analyzing, and looping back explicit and implicit

    user and environmental responses. A feedback system of this sort can enable the

    output of targeted information to users, continuous process reﬁnement, and better

    tailored solutions. Examples of responses (data points) that can be routed back
    to

    through the feedback system include such data points as effectiveness of prior
    guid-

    ance, the experience of users, or even the user actions or inactions that could
    help

    preempt user intent. There is a need for more adaptive AR, with creative feedback

    loops that can actively engage users and help them to solve problems more creatively.

    Attempts have been made in the literature to spotlight this challenge and suggest

    creative ways of solving this problem [413].

    There are several applications of mixed reality in manufacturing, as already alluded

    to. One of the earliest machinery maintenance and repair (laser-printer) mixed
    reality (MR)

    applications was developed by Steve Feiner’s team at Columbia University in 1993
    [414].

    Mixed reality (MR) has also been used to develop an application for improving
    performance

    in the execution of assembly tasks [415]. Applications of AR/MR for employee training
    and

    Sensors 2022, 22, 5834

    49 of 76

    work on production lines [416], quality monitoring and inspection, maintenance,
    assembly,

    and safety have been reported [417,418]. Boeing once used mixed reality for cable
    harness

    design and the assembly of furniture, automobile door locks, and cockpit modules.
    This

    resulted in marked improvements in their assembly process [419–421]. This is in
    agreement

    with studies that show that mixed-reality-based techniques help reduce assembly
    process

    errors by as much as 80% [422].

    8.2.6. 3D Printing (Additive Manufacturing:)

    3D printing (also referred to as additive manufacturing (AM)) has been referred
    to as

    one of the major technologies of the 4th Industrial revolution [423] because of
    its potential

    for massive disruption of the status quo across many industrial sectors [424].
    Alongside

    other disruptive technologies, such as IoT, cloud, big data/analytics, and AI,
    it is expected

    that AM will create the necessary conditions for expedited processing, rapid prototyping,

    customized production, and agile manufacturing. Additive manufacturing has various

    deﬁnitions, but one of most descriptive is the one captured in the ISO/ASTM 52900
    stan-

    dard [425], which deﬁnes it as the “process of joining materials to make parts
    from 3D

    model data, usually layer by layer, as opposed to subtractive manufacturing and
    formative

    manufacturing methodologies”. Irrespective of what deﬁnition is accepted, the
    general

    principle upon which this technology rests is the creation of 3D geometries through
    the

    precise addition of basic building blocks, such as grains of powder or polymer
    ﬁlaments,

    laid out as a series of cross sections, often layer by layer. This occurs with
    minimal ma-

    terial waste and a nominal or limited need for post-processing [426]. The creation
    of

    these 3D geometries is driven by digital instructions (geometric information)
    typically sent

    from a computer (CAD model) to a printing head, nozzle, or related printing technology.

    The instructions which are processed as points, lines, or areas help guide the
    direction and

    rate of material deposition [427]. Over time, the technology has continuously
    matured,

    getting to a point where it is now feasible to work with all sorts of materials,
    including

    ABS plastic, photo-polymers, stereo-lithography materials (epoxy resins), metals
    (e.g.,

    steel, titanium), wax, and even biological materials. There are seven categories
    of additive

    manufacturing (AM) [428]. Each category includes several techniques, some of which
    are

    well known within the AM community. The processes involved in the techniques differ

    depending on the materials used and the mechanisms employed. They include (a)
    VAT

    photo-polymerization, (b) material jetting (e.g., continuous on demand (CoD) and
    drop on

    demand (DoD)), (c) binder Jetting, (d) material extrusion (fuse deposition modeling
    (FDM)),

    (e) powder bed fusion (e.g., direct metal laser sintering (DMLS), electron beam
    melting

    (EBM), selective heat sintering (SHS), selective laser melting (SLM), and selective
    laser sin-

    tering (SLS)), (f) sheet lamination (ultrasonic additive manufacturing (UAM) and
    laminated

    object manufacturing (LOM)), and (g) directed energy deposition (e.g., laser engineered
    net

    shaping, directed light fabrication, direct metal deposition, 3D laser cladding).

    Traditional manufacturing is generally expensive due to the high labor cost and

    complicated set-up (machinery and process) requirements. Re-purposing and switching

    product lines can take weeks, or even months. This contrasts with additive manufacturing,

    which lends itself to quicker process adjustments and easier adaptation within
    a larger

    production line. Furthermore, changing production speed or switching between products

    can be easy and quick, and relatively fewer operational staff are often required
    to achieve

    equivalent work outputs. Additive manufacturing (AM) has the potential to democratize

    manufacturing on a global scale. It is cheaper and best suited for high-value,
    low-volume,

    small, and short-run parts production. AM is well positioned to beneﬁt the growing

    demand for product personalization and mass customization. They are also very
    useful

    for creation of parts and structures with complex geometries and require ﬂexible
    designs.

    Examples can be seen in machine parts, dental work (precise crowns and dentures),
    artwork,

    customizable gifts, etc. In the live sciences, layers of living cells have been
    printed over

    one another to create human skin. Some of these can potentially be surgically
    implanted

    into other living materials to ﬁx complications on the bodies of burn victims.
    They are

    Sensors 2022, 22, 5834

    50 of 76

    also being evaluated for skin product testing, to help reduce the controversial
    use of live

    animals for biological tests. There is also an emerging consensus amongst researchers
    that

    at some future time in the future, it will be possible to print human organs and
    increase

    options for people on organ waiting lists.

    In manufacturing, the fabrication of tools necessary for producing parts or components

    is important. Agile tooling, a speciﬁc tooling approach which involves the efﬁcient
    and

    cost-effective design and fabrication of tools such as molds, patterns, dies,
    jigs, and ﬁxtures,

    is an important aspect of manufacturing-related tooling. The most popular agile
    tooling

    techniques include die-casting, die-stamping, hydroforming, and thermoforming.
    Some

    of these tooling has been produced at great turn-around times and at a fraction
    of their

    regular costs, thanks to additive manufacturing (3D printing) processes. For example,

    tools, typically created with the vacuum forming process, can now be produced
    faster,

    more efﬁciently, and at lower costs using fused ﬁlament fabrication (FFM), an
    additive

    manufacturing process. The ability to produce these tools faster would mean quicker

    prototyping and shorter time to market. With the adoption of additive manufacturing

    (AM), a Future Factory (central hub) can potentially ﬁll a demand for a replacement
    part

    initiated by a customer, from a thousand miles away, in record time, without any
    shipping

    requirements. An example of how this can play out is that a virtual 3D model of
    the

    requested part, released by the Future Factory to a cloud location, becomes immediately

    accessible to an authorized, out-sourced third-party 3D print location, closer
    to the customer.

    Following a few clicks, the 3D model is printed and becomes available for immediate

    customer pick-up. This arrangement will reduce wait times, accelerate production
    rates,

    and eliminate shipping costs. It will also reduce time-to-market, making the creation
    of

    products cheaper and more accessible.

    Opportunities to combine evolutionary or genetic algorithms with 3D printing to

    speed up design and determine parts with the best conﬁgurations for speciﬁc industrial

    service are very numerous. Researchers from NYU [429] used genetic algorithms
    alongside

    3D printing to determine the ideal wing shape for a fast-ﬂapping ﬂight. Mitra
    Asadi-

    Eydivand et al. [430] also used 3D and evolutionary algorithms to determine the
    optimal

    design of a scaffold. One of the biggest challenges that pervasive 3D printing
    will face

    within the industrial space are the issues of the ownership and control of intellectual

    property. For example, how will the owner of a design or electronic product speciﬁcations

    be compensated once the ﬁles end up in the hands of a client? How can the distribution
    of

    those ﬁles, once out of the owner’s control, be monitored? Some proponents have
    suggested

    online marketplaces, brokers, or clearing houses that would serve the dual purposes
    of

    regulating access to electronic speciﬁcations and managing compensations and payments

    to intellectual property owners.

    Applications of additive manufacturing (3D printing) are beginning to have real-life

    impacts in a number of industries, including aerospace and defense (A&D), medicine,

    the automotive industry, bio-medicine, etc. It has been used for manufacturing
    tooling (e.g.,

    hand-tools for testing and assembly), light weight or highly complex parts/components,

    spare parts, and functional prototypes. When used for complex parts, it is often
    the case

    that only low volumes of the parts are required, and it is impractical or uneconomic
    to use

    traditional manufacturing methods. Due to its advantages, such as the capacity
    for high

    precision fabrication of complex geometry [431], the potential for signiﬁcant
    reductions in

    material waste (material efﬁciency), and ﬂexibility in design, it has been an
    ideal solution

    for fabricating light-weight parts in the aerospace industry. It is also used
    for ensuring

    availability of spare parts [432] and the maintenance and repair of aerospace
    parts such as

    wings, turbine blades, rocket parts, and other sophisticated components. It was
    used to

    fabricate a complex injector head for the Ariane 6 launcher using selective laser
    melting

    (SLM) technology and a nickel-based alloy. The Ariane 6 launcher was developed
    Ariane

    Group, a joint venture between Safran and Airbus Group [433]. A number of manufacturers

    (e.g., Ford) use 3D printing for fabricating tooling. AUDI (in conjunction with
    SLM Solution

    Group AG) fabricated prototypes and spare parts using 3D printing [434]. Many
    other

    Sensors 2022, 22, 5834

    51 of 76

    examples of the applications of 3D printing to save costs, speed up production,
    or execute

    difﬁcult tasks abound in the open literature and industry

    8.2.7. Autonomous Robotics

    The factory of the future will have two employees: humans and robots. Of the two,

    robots are expected to play a prominent role because of the high likelihood of
    a dispro-

    portionate reliance on machines for industrial tasks as compared to humans. The
    word

    “robot” is a Czech word that is literally interpreted “forced labor”. They are
    very useful for

    tasks that require high levels of accuracy or are dangerous or repetitive. They
    bring to tasks

    such beneﬁts as improved effectiveness, higher efﬁciency, and reliability. They
    can perform

    tasks that humans cannot or should not (e.g., demeaning or dangerous tasks). Aside
    from

    augmenting human efforts, they also create the ﬂexibility for under-utilized labor
    to be

    replaced or re-assigned. Long term, they are relatively more cost effective and
    facilitate

    higher productivity. There are different classes of robots, including commercial
    robots,

    industrial robots, and service robots. The focus of this section is industrial
    robots. Industrial

    Robots: ISO 8373:2012 deﬁnes an industrial robot as “an automatically controlled,
    repro-

    grammable, multipurpose manipulator, programmable in three or more axes, which
    can be

    either ﬁxed or mobile for use in industrial automation application”. The ability
    of Industrial

    robots to perform high-precision work accurately, repeatably, and quickly is helping
    facto-

    ries deliver high quality products and driving plant efﬁciency and proﬁtability.
    Industrial

    robots will become ubiquitous across most manufacturing environments. As these
    already

    highly productive robots are becoming AI enabled (AI robots) and fully integrated
    into the

    data-rich manufacturing ecosystems, both sharing and receiving data/information
    with

    other subsystems, it is easy to see why they will eventually become the workhorses
    of the

    factory of the future. Over time, it is expected that AI will morph into more
    intelligent

    systems with strong cognitive abilities. Robots are used for a variety of tasks
    within the

    manufacturing space. Some of these include mechanical cutting, grinding, deburring,
    pol-

    ishing, welding (i.e., arc welding, spot welding, etc.), and painting. Other common
    robot

    tasks include picking, packing and palletizing, material handling, assembly, ﬁreﬁghting,

    and patrolling of warehouses and storage areas.

    Based on one classiﬁcation, three main types of robots operate within industrial

    environments. These include: (a) traditional robots, (b) collaborative robots
    (cobots) and (c)

    mobile robots.

    (a)

    Traditional Robots: The technologies underpinning traditional robots are generally

    more mature. They generally have high payloads, have longer reaches, and are able

    to achieve very high efﬁciency levels, even at high production speeds.

    (b)

    Collaborative Robots (Cobots): ISO 10218-2 deﬁned cobots as robots designed for
    direct

    interaction with a human within a deﬁned collaborative workspace. Workspace

    refers to the safeguarded space where the robot and a human can perform tasks

    simultaneously during production operation. Generally, they are relatively easier
    to

    program, enable more efﬁcient production adjustments, and can more ﬂexibly adapt
    to

    new requirements than traditional robots. For implementation, they require minimal

    changes to existing production layout and can be easily redeployed for different
    tasks,

    as necessary. A deﬁning characteristic of these robots is that they work collaboratively

    with human workers, without concerns for worker safety. They possess several

    integrated safety features, including collision detection technologies, minimized
    pinch

    points, safety-rated monitored stops, and well controlled force and speed. Human

    workers can focus on tasks that require strong cognitive abilities, whereas the
    robots

    can be assigned repetitive tasks and other activities that require precision or
    heavy

    lifting. Robots that work alongside humans are referred to as cobots.

    (c)

    Mobile Robots: Mobile robots have a general awareness of their environment and
    the

    ability to effectively navigate through it in the process of accomplishing assigned

    tasks. While traditional robots are usually stationed at ﬁxed locations and are
    mostly

    assigned tasks that do not require a lot of ﬂexibility. Mobile robots, on the
    other

    Sensors 2022, 22, 5834

    52 of 76

    hand, are usually ambulatory and they are best suited for constantly changing
    factory

    environments. Using their navigation systems, they transverse entire factory ﬂoors

    autonomously, seamlessly integrating themselves into the manufacturing ecosystem.

    They can stop, move, slow down, or navigate away from obstacles using sensory

    information obtained from a wide array of localization and navigation sensors
    em-

    bedded within their bodies or attached to their surfaces. Two main classes of
    robot

    sensors exist, i.e., exteroceptive and proprioceptive sensors. Exteroceptive sensors

    help the robots discern and understand their environments. Examples of exteroceptive

    sensors include stereo cameras, pan/tilt/zoom cameras, lasers and 3D lidar systems,

    projection-based systems, audio/video feedback systems, touch sensors (whiskers

    or bump sensors), and GPS, proximity, and certiﬁed safety sensors. Then there
    are

    proprioceptive sensors, which are sensors that gather information about the robot

    itself. Examples of proprioceptive sensors include accelerometers, gyroscopes,
    mag-

    netometers, compasses, wheel encoders, and temperature sensors). These sensors,

    alongside accompanying algorithms, enable the mobile robots to both understand

    and safely navigate their environments. For this reason, they are very safe to
    deploy

    alongside human workers, with whom they sometimes work collaboratively, trans-

    forming them from mere machines to fellow workers. The basic idea of the mobile

    robot is essentially moving the robot to the work instead of moving the work to
    the

    robot. Mobile robots would best beneﬁt such tasks as automated assembly, inspection,

    painting, or welding of huge industrial components, such as airplane frames, large

    engines, and giant offshore or space structures. Due to their large sizes, working
    on

    such components with two or three stationary robots can be inadequate because
    of

    the limitations on the reaches of such robots. Alternative courses of action could
    be

    to either add more robots (a costly option) or employ mobile robots which are
    not

    limited by reach due to their ability to move around the entire structure. Compared

    to traditional robots, mobile robots are more ﬂexible and adaptable. Their ability
    to

    maneuver through space and structures helps shorten throughput times, improving

    efﬁciency and cutting down on production time. Mobile robots have a variety of

    locomotion mechanisms [435,436], e.g., ﬂying (drones) [437], rolling, walking
    (legged),

    swimming or water-based movement (underwater vehicle manipulator system) [438],

    crawling, moving on tracks, and using propellers. Automated guided vehicles or
    au-

    tomatic guided vehicles (AGVs) are amongst the most common mobile robots within

    the manufacturing industry today. Additionally, they are poised to become even

    more ubiquitous as adoption continues to grow. They are currently used for moving

    materials, supplies, and products around manufacturing facilities. Unmanned aerial

    vehicles (such as the drone) are the next set of robots that will grow in relevance

    within manufacturing. They would be especially useful for picking up and dropping

    items, and product and quality inspections, especially the inspection of equipment

    or machinery at hard-to-reach locations (e.g., high elevation or dangerous locations)

    using thermal and video cameras.

    9. Discussion: Recommendations and Future Research Directions

    Following our review of the literature, the dominant theme is the general idea
    that the

    Factory of the Future is about data and the value that can be extracted from it
    to improve

    operations and optimally create value. It is about networked or connected assets
    (ma-

    chines, people, devices, networks, etc.), and the different communication technologies
    and

    protocols that enable them talk to each other (communicate seamlessly). As a large
    infor-

    mation network, the Factory of the Future, is about capturing raw data from said
    network

    of connected assets (plus related manufacturing processes) and the transformation
    of the

    acquired data into actionable intelligence [439,440], with a view of facilitating
    decision

    making, optimizing manufacturing processes, sustainably producing goods and services,

    and improving overall performance. Amongst many important qualities, intelligence
    and

    cognition are machine characteristics that make a factory smart. They empower
    the factory

    Sensors 2022, 22, 5834

    53 of 76

    with the ability to know, understand, interpret (correctly), and respond (effectively)
    to

    events happening within and around it. Both characteristics can be developed if
    several

    challenges “slow-walking” progress towards the full realization of the Factory
    of the Future

    are addressed. Given that the Factory of the Future is a huge information network,
    most of

    these problems are somehow related to processes (such as the collection, storage,
    analysis,

    security, or analysis of data) or the protocols, frameworks, or technologies used
    to manage

    the said processes. Some of these will be discussed below.

    9.1. Communication Protocols and Technologies

    The Factory of the Future contains a huge collection of networked assets. One
    of the big

    challenges facing the discipline is how to make each of them “speak the same language”
    and

    seamlessly communicate (back-and-forth) with one other. The emergence of the Industrial

    Internet of Things (IIoT) [441] and open communication standards/platforms and
    advanced

    advanced M2M communication protocols, such as the Open Platform Communication

    Uniﬁed Architecture (OPC UA) [219,442,443] and MQ Telemetry Transport (MQTT),
    has

    advanced data collection and synchronization efforts. A lot of research still
    needs to go into

    developing new and improved communication standards and framework. There is also

    room for developing protocols that are nimbler and easier to conﬁgure.

    9.2. Digital Infrastructure

    To become a completely connected system, the Factory of the Future has to be fully

    integrated into extensively networked manufacturing supply chains. This would
    require

    data-driven architectures capable of linking, at high ﬁdelity and accuracy, all
    data generated

    at every stage of the manufacturing process and product life cycle. Currently,
    there are gaps

    in the virtual infrastructure. A lot of research is required for building out
    systems, architec-

    tures, and technologies that help interconnect different entities within the manufacturing

    network, e.g., Factory-to-Factory communication.

    9.3. Data Collection and Characterization

    Data collection methods that are better linked or aligned with domain knowledge
    need

    to be developed. It is also important to realize that for data to be valuable,
    its context must

    be understood. Further manufacturing domain-based research in data contextualization

    and linking methods, such as graph theory, category theory, and linked data, are
    critical.

    The eventual democratization of these methods will also serve the industry well.
    Determin-

    ing relationships between terms and concepts and extracting value from these relationships

    should be further explored by domesticating research into semantic indexing techniques.

    Frameworks that better connect concepts are required for more productive analytics
    of

    multivariate data, especially at the network or system level. Overall, multi-disciplinary
    re-

    search in natural language processing (NLP) will greatly beneﬁt the manufacturing
    domain

    as we try to make sense of all the data we collect.

    9.4. Virtualization

    A major priority of the Factory of the Future is the seamless exchange of data
    between

    all nodes within the manufacturing network in real time or near real-time. This
    will require

    a level of decentralization that would make the hierarchical automation pyramid
    obsolete.

    Virtualization of assets and the production process using technologies such as
    digital

    twins, the asset administration shell (AAS) and data distribution services (DDS)
    will enable

    bidirectional relations between physical assets and their cyber twins. The communication

    pipeline between these twins will enable optimization, real-time remote monitoring,
    easy

    and early identiﬁcation of failures and inefﬁciencies, optimization of production
    processes,

    continuous improvement through simulations, etc. Notwithstanding the progress
    that

    has already been made with the virtualization of assets, there are still a lot
    of challenges

    yet to be addressed that will require some research work (basic and applied).
    One such

    challenge is that of insufﬁcient synchronization capabilities. In many cases,
    simulation

    Sensors 2022, 22, 5834

    54 of 76

    models are not (fully) accurate due to synchronization issues [444]. Simulation
    models

    should not be distinguishable from their physical counterparts. There are also
    issues

    around the prediction of the state of complex systems and the complexities around
    big data

    collection, storage, and processing [16,445]. These challenges will require further
    research

    work. The development of dedicated conceptual frameworks and reference models
    for

    digital twins would also be helpful [444].

    9.5. Interoperability

    Interoperability and standards are a twin challenge affecting the realization
    of the

    Factory of the Future. The proliferation of technologies, protocols, standards,
    and frameworks

    has increased the need for interoperability at different levels and among different
    aspects

    of the manufacturing ecosystem. Due to the lack of standardization early in the
    emergence

    of Industry 4.0, many manufacturers, trade associations, and even nation states
    developed

    proprietary solutions in the hope of taking advantage of the prime mover advantage
    and

    possibly monopolizing the market. No players have been able to dominate any major

    aspects of the industry. Contrary to this, a measure of controlled chaos has ensured,
    which

    is currently exacting cost and speed penalties on the industry, making it difﬁcult
    for the

    digitization process to proceed at scale. Several standards organizations, trade
    grounds,

    and industry/government-led alliance initiatives have emerged to address some
    of the

    challenges. The various types of interoperability are discussed in the literature
    [160]. There

    is a need for interoperability on various fronts, including physical assets, in
    the transfer

    and exchange of data, in the physical and functional architecture, etc. A lot
    of effort

    is being put into developing standards and promoting interoperability. It would
    take

    some time for some of the handwork to really pay off. Some of the most common
    smart

    manufacturing architectures, reference models, and standards, along with the on-going

    efforts, are widely available in the literature [177,446]. Currently, there appears
    to be a

    haphazard approach to the development of solutions, and since most of the architectures,

    frameworks, and reference models are still in the conceptual stages, their real-world

    implementations (speciﬁc case studies) would be a signiﬁcant way to contribute
    to the

    literature and the discipline.

    9.6. IT/OT Security

    Due to the IT–OT (information technology to operations technology) integration
    and

    the proliferation of connected assets characteristic of the Factory of the Future,
    there are

    major concerns about cybersecurity risks in smart manufacturing. The risks will
    only grow.

    Each additional device introduces some extra level of marginal vulnerability,
    a situation

    that collectively increases the risk of cyber-related compromise due to the growing
    number

    of vulnerable endpoints. Known attacks have not only been directed at passive
    devices—

    sensors, actuators etc.—but have also hit edge devices, PLCs, HMIs, and control
    systems

    used to manage industrial operations. Beyond the known static attack vectors,
    the number

    of stakeholders (employees, contractors, vendors, suppliers, clients, etc.) that
    have access

    to the connected OT systems has also multiplied the potential vulnerabilities
    of the factory.

    Many cyber-attacks have been reported within industrial and manufacturing facilities
    in

    the recent past. In one case, hackers were able to gain control of the main network
    of a

    German steel factory [447], through their corporate endpoints. In a different
    instance, using

    a watering hole attack, the Remote Access Trojan (RAT) was used to compromise
    industrial

    control systems with the energy sector [448]. There have also been cases of the
    modiﬁcation

    of the operation of physical assets. An example is the Stuxnet [449] attack that
    targeted

    physical assets at an Iranian nuclear facility. This computer worm speciﬁcally
    targeted

    programmable logic controllers (PLCs), used to automate electromechanical processes.
    It

    was reported to have even modiﬁed the operation of the connected motors by altering

    their rotational speed. There was also the case of the suspected ‘logic bomb’
    that exploded

    the Trans-Siberian Pipeline [450]. The reports are almost endless. There have
    been several

    research endeavors directed at addressing vulnerabilities in supervisory control
    and data

    Sensors 2022, 22, 5834

    55 of 76

    acquisition (SCADA) networks [451–454]. Several research works have also been
    directed to

    addressing intrusion detection issues in programmable logic controllers (PLCs)
    [455–459].

    While there is a patch work of activities meant to deter these attacks, there
    are several

    research opportunities in the cybersecurity of the Factory of the Future that
    need to be

    explored to address the challenges holistically. For one, there is a need to develop
    secured

    standards of communication that leverage the Internet as a gateway to bridge the
    IT–OT

    divide. There is also potential for research work that promotes default cybersecurity

    protections (i.e., secure by default and cybersecurity by design) in industrial
    architecture,

    frameworks, and software/hardware solutions. As traditional threat detection techniques

    and modalities are inadequate for addressing the threats within the smart manufacturing

    domain, there is also a need to develop more advanced AI-enabled threat detection
    and

    security analysis systems that can help detect vulnerabilities and respond autonomously.

    The need for personnel with the right mix of skills has not been greater. As part
    of

    measured directed at addressing the skills gap, curricula directed at addressing
    the security

    of cyber-physical systems have been implemented [460–462]. More work clearly needs
    to

    be done in this area. Experts with requisite skills in the ﬁelds of information
    security and

    industrial control systems/production processes would be central to the effort
    to mitigating

    the threats.

    The Factory of the Future is a data-rich environment that harnesses intelligence
    from

    multiple information streams, i.e., assets (including people), processes, and
    subsystems,

    to help create value, new forms of production efﬁciency and ﬂexibility. Being
    able to realize

    the goals of next-generation manufacturing will depend on solving a lot of the
    challenges

    with the infrastructure (physical and digital) and processes required to protect
    the integrity

    of data and optimally extract value from it. While the traditional factory relied
    on au-

    tomation, the main goals in the development of next-generation factories are to
    anticipate

    uncertainty and to ensure that the factory and its many sub-systems will be able
    to correctly

    interpret and disruptions and respond appropriately with little or no human intervention.

    The growth of artiﬁcial intelligence, and particularly the progress in the ﬁeld
    of natural

    language processing (NLP), have made it possible to analyze data, extract meaning
    from

    them, and determine appropriate actionable insights, all with no or limited human
    super-

    vision. Though the current advancements in manufacturing technology require massive

    investments, the long term value (cost reduction, speed to market, mass customization,

    product personalization, etc.) will most certainly be worth the time and investment.

    10. Implementations of the Factories of the Future

    While there are still many challenges on the path of the full realization of the
    Factory

    of the Future and the long-anticipated Fourth Industrial Revolution, many organizations

    (academia, industry alliances, and companies) are already making massive strides
    in that

    direction. Academia is very engaged with training and research in smart manufacturing

    solutions. Event test beds for solution development and analysis are in use. Similar
    efforts

    are underway in various research centers all over the world. Industry alliances
    are also

    helping crystallize and achieve the smart manufacturing ideals and aspirations
    of their

    corporate members. Some discussion on these fronts is given below.

    10.1. Industry and Implementation of Smart Manufacturing Solutions

    Within industry, many companies have been making transformative strides through

    the digitization and virtualization of different aspects of their manufacturing
    processes.

    Factories that have morphed into smart manufacturing systems with a full coupling
    of

    all their subsystems are rare but remain the end goal. The most visible discussion
    about

    industrial applications of smart manufacturing that has resulted in the realization
    of real

    value centers was around the World Economic Forum’s Global Lighthouse Network,
    which

    is a a platform to used to promote the development, replication, and scaling of
    smart

    manufacturing solutions. It is comprised of companies (world-over) that have led
    the pack

    in demonstrating the value (growth, productivity, resilience, and environmental
    sustainabil-

    Sensors 2022, 22, 5834

    56 of 76

    ity) in transitioning to smart manufacturing. As at 2022, 103 manufacturing Lighthouses

    have been identiﬁed, across the globe, from different industries. Examples of
    some of

    the companies that have made the list include: Baoshan Iron and Steel (Shanghai,
    China),

    AGCO (Marktoberdorf, Germany), Hitachi (Hitachi, Japan), Johnson and Johnson DePuy

    Synthes (Suzhou, China), Micron (Singapore), Weichai (Weifang, China), Henkel
    (Düssel-

    dorf, Germany), Petkim (Izmir, Turkey), Johnson and Johnson Vision Care (Jacksonville,

    USA), and Groupe Renault (Curitiba, Brazil).

    10.2. Industry Alliances and Research Institutes

    National institutes/laboratories (such as the National Institute of Standards
    and Tech-

    nology (NIST), Platform Industrie, CESMII, the United States’ National Institute
    on Smart

    Manufacturing) and Industry alliances (such as the Industry IoT Consortium and
    Taiwan

    Association of Machinery Industry (TAM)) are all examples of institutions working
    to

    advance smart manufacturing goals. Some of these have test-beds that have contributed

    signiﬁcantly to doing the required pre-work needed, in a solution-agnostic manner,
    be-

    fore industry can scale the solutions. There are several smart manufacturing test-bed
    im-

    plementations reported in the literature for different aspects of the manufacturing
    process

    or operation [463–470]. The Industry IoT Consortium typically has several test-beds
    [471]

    at any one time working on next-generation smart manufacturing solutions. Some
    speciﬁc

    examples of their test beds include: the Smart Factory Machine Learning for Predictive

    Maintenance Test-bed, the Smart Manufacturing Connectivity for Brown-Field Sensors,

    the Smart Printing Factory Testbed, the Time-Sensitive Networks Test-bed, the
    Track and

    Trace Test-bed, etc.

    10.3. Smart Manufacturing in Academia

    There is a lot of research (smart manufacturing-based) currently going on within

    academia globally. The future work force is also being trained and equipped (sometimes

    with real-life learning factories): for pilots, many test beds have been deployed
    for the

    evaluation real-life solutions. Test-beds create platforms for researchers and
    practition-

    ers to develop innovative smart manufacturing solutions in a ﬂexible and effective
    way.

    The System-level Manufacturing and Automation Research Testbed (SMART) at the
    Uni-

    versity of Michigan [472] and the University of Shefﬁeld AMRC, Factory 2050 (UK)
    are

    but two examples. The “neXt Future Factory” laboratory at the University of South
    Car-

    olina is part of the global value chain dedicated to advancing smart manufacturing.
    As a

    research and development concern, the neXt Future Factory Lab located within the
    McNair

    Aerospace Center is the center of gravity for advanced manufacturing at the University

    of South Carolina (UofSC). The laboratory has a two-pronged approach that focuses
    ﬁrst

    on research and development (R&D) and secondly on industry engagement. On the
    R&D

    level, the laboratory is focused on determining the most optimal approaches for
    connecting

    different manufacturing modules and enabling them to exchange information efﬁciently,

    reliably, and quickly (Interoperability). Another issue of interest is to ﬁgure
    out efﬁcient

    ways of connecting these modules securely and reliably to the Internet (connectivity
    and

    cybersecurity). A third issue is how to effectively collect, manage, and analyze
    disparate

    manufacturing datasets so that business intelligence can be gleaned from them
    in real-time.

    This is important because we believe that data hold the necessary intelligence
    to inﬂuence

    technology innovation, competitiveness, and productivity growth in the manufacturing

    business. On the industry engagement vertical, our laboratory provides industry
    a secure

    and advanced platform with which to investigate solutions, and build proof of
    concept

    solutions and MVPs alongside our researchers and students, thereby de-risking
    their digital

    transformation projects and improving product and process efﬁciency.

    10.3.1. The “neXt Future Factory” Test Bed

    Figure 22 shows the Future Factory test bed at University of South Carolina. This
    manu-

    facturing test-bed (or functional mini-factory) is designed to support the study,
    exploration,

    Sensors 2022, 22, 5834

    57 of 76

    maturation, and exploitation of manufacturing control elements, communication
    protocols,

    and a variety of emerging technologies with a view to advancing smart manufacturing
    (and

    related) objectives. The test bed is technology agnostic and relies on open standards
    for all

    its communication and data modeling requirements. It also has a ﬂexible implementation

    architecture that makes it possible for new technology to be easily integrated
    and tested.

    This is to support the testing and maturation of new technologies and data strategies

    through industry use cases. It also supports the rapid creation of different iterations
    of

    product layouts to cater to the needs of diverse industrial products. The test-bed
    consists

    of several Yaskawa robotic arms, conveyor belt systems, and an array of multi-vendor

    and multi-platform equipment and devices, including programmable logic controllers

    (PLCs), edge devices, human–machine interfaces (HMIs), cameras (FLIR, infrared,
    thermal),

    sensors (wired and wireless), variable frequency drives (VFDs), actuators, etc.
    The various

    modules of the test bed are connected to the Internet using the 4LTE and 5G networks.

    Data transfer between automation devices within the test bed, and between the
    test bed

    and some sister sites as part of our Factory-to-Factory project, is made possible
    through

    the IEC 62541 standard OPC UA. The platform also has access to a multi-vendor
    array

    of software applications that enable the real-time collection, ingestion, and
    visualization

    of data, the implementation of advanced process simulations solutions, path planning,

    ofﬂine robot arm programming, the development of visual inspection, AR/VR, digital
    twin

    solutions, etc. In the future, we hope to be able to use the test-bed as a DevOps
    platform

    for streamlining all development and operational processes, including coding,
    analytics,

    modeling, deployment, updates, etc.

    Figure 22. The neXt Future Factory Test Bed at University of South Carolina.

    10.3.2. Collaborations

    The laboratory has multiple academic and governmental agency partners that work
    to-

    gether to advance various educational and policy goals. Besides providing our
    researchers

    a forum to investigate different IT/OT phenomena and affording our students practical

    training opportunities, the facility also showcases the opportunities inherent
    in digitiz-

    ing manufacturing to help drive productivity, reduce defects, cut cost, and accelerate

    time-to-market. We also work closely with some of the most innovative companies
    and

    consultancies in the country, each bringing in their best minds and an interesting
    amalgam

    of advanced technologies offerings (hardware and applications) to help address
    some of the

    most challenging problems in the advanced manufacturing space. The test-bed provides

    these industrial partners the platform to create different technology conﬁgurations,
    deploy

    them in real-time, and explore their efﬁciencies without the possibility of disrupting
    pro-

    duction, which helps them essentially de-risk the development of novel digital
    solutions.

    Besides being a showcase for the technologies of partner companies, the laboratory
    also

    Sensors 2022, 22, 5834

    58 of 76

    performs applied research and development for industry. All of these activities
    have created

    interest within industry and driven different forms of business value, including
    enabling

    strong customer engagement, in addition to interest in our scholarship and our
    students

    (for employment), who are active participants in most of the R&D work.

    11. Summary and Conclusions

    This paper reviewed the meaning, essence, characteristics, and applications of
    the

    Factory of the Future, alongside its key supporting technologies. As an Industry-4.0-enabled

    manufacturing system, the Factory of the Future is ﬂexible, adaptive, and transparent
    and

    is expected to replace the current (traditional) manufacturing system. The wide
    adoption

    of the Factory of the Future and its ideals is expected to transform the traditional
    factory

    from merely housing mechanical operations into an ultra-high-tech system that
    uses in-

    novative smart technologies to improve production processes, reduce cost, encourage

    mass customization, and enable the prediction of potential problems even before
    they

    occur using predictive maintenance/analytics solutions. It will also support the
    efﬁcient

    tracking of assets at each stage of the supply chain to improve asset visibility,
    control,

    and insight, enabling advances in inventory management and supporting improvements
    in

    logistics. The paradigm shift is clearly about making the manufacturing infrastructure
    and

    its supporting ecosystems smarter, quicker, and nimbler, while using data as a
    critical asset

    for self-optimization, self-adaptation, and competitive intelligence. The ability
    to ensure

    that assets are connected and that they “talk to and learn from each other” seamlessly
    is a

    deﬁning feature of the Factory of the Future and is made possible through the
    deployment

    of machinery, components, and technologies in a manner that ensures their interoperabil-

    ity and connectivity. Even though signiﬁcant advances have already occurred in
    recent

    years, the goal of a fully digitized and highly networked manufacturing sector
    remains.

    Many solutions are still in their early stages of development (aspirational, conceptual,
    pilot,

    testbed, etc.). It is, however, noteworthy that a lot of progress is being made
    at the policy,

    research and development (R&D), and implementation levels. As new technologies
    and

    systems become available, it is critical for researchers and practitioners to
    continue to push

    the technological envelopes to ensure the full transformation of signiﬁcant parts
    of the

    manufacturing ecosystem. There is also the urgent need for all stakeholders, including
    the

    governments and the organized private sector, to help with scaling some of the
    proven

    solutions and ensure rapid industrial diffusion beyond the walls of research facilities,

    test-beds, and well-funded factories.

    Author Contributions: Conceptualization, methodology, validation, investigation,
    and writing

    original draft preparation, N.A.; writing, review and editing, C.S.; supervision,
    & funding acquisition,

    R.H. All authors have read and agreed to the published version of the manuscript’.

    Funding: This research received no external funding and the APC was funded by
    University of

    South Carolina.

    Institutional Review Board Statement: Ethical approval was not required for this
    study.

    Informed Consent Statement: Informed consent was not necessary for this study.

    Data Availability Statement: Not applicable.

    Acknowledgments: This material is based upon work supported by the National Science
    Foundation

    under grant number 2119654 and the South Carolina Research Authority. Any opinions,
    ﬁndings,

    and conclusions or recommendations expressed in this material are those of the
    author(s) and do

    not necessarily reﬂect the views of the National Science Foundation or the South
    Carolina Research

    Authority. Some of the images in this paper were designed using resources from
    Flaticon.com.

    Conﬂicts of Interest: The authors declare no conﬂict of interest.

    Sensors 2022, 22, 5834

    59 of 76

    List of Acronyms

    4IR

    Fourth Industrial Revolution

    AAS

    Asset Administration Shell

    AI

    Artiﬁcial Intelligence

    B2MML

    Business to Manufacturing Markup Language

    BatchML Batch Markup Language

    BMBF

    German Federal Ministry of Education and

    Research

    BPMN

    Speciﬁcation-Business Process Model and Notation

    CMS

    Cyber Manufacturing Systems

    CPS

    Cyber-Physical Systems

    CPPS

    Cyber-Physical Production systems

    CRM

    Customer Relationship Management

    DCS

    Distributed Control System

    DMIS

    Dimensional Measuring Interface Standard

    DMN

    Decision Model and Notation

    ERP

    Enterprise Resource Planning

    EtherCAT Ethernet for Control Automation Technology

    F2H

    Factory-to-Human

    F2P

    Factory-to-Product

    F2SC

    Factory-to-Supply Chain

    FDI

    Field Device Integration

    FF

    Future Factory

    FoF

    The Factory of the Future

    FP-Growth Frequent Pattern-Growth

    GPU

    Graphical Processing Units

    H2D

    Human-to-Device

    HART

    Highway Addressable Remote Transducer

    HMI

    Human–Machine Interface

    HTTP

    HyperText Transfer Protocol

    ICT

    Information and communications technology

    IEC

    International Electro-technical Commission

    IoT

    Internet of Things

    IIoT

    Industrial Internet of Things

    IoS

    Internet of Services

    ISO

    International Organization for Standardization

    IT/OT

    Information Technology/Operational Technology

    KNN

    K-Nearest Neighbors

    L2S

    Levels of System Sovereignty

    LR

    Logistical Regression

    M2D

    Machine-to-Device

    M2VT

    Machine-to Virtual Twin

    M2M

    Machine-to-Machine

    MDPI

    Multidisciplinary Digital Publishing Institute

    ME-S

    Manufacturing Ecosystem

    MES

    Manufacturing Execution Systems

    ML/DL

    Machine Learning/Deep Learning

    MOM

    Manufacturing Operation Management

    MQTT

    Message Queuing Telemetry Transport

    NBM

    Naïve Bayes Multinomial

    OAGIS

    Open Applications Group Integration Speciﬁcation

    OPC-UA Open Platform Communications-Uniﬁed

    Architecture

    PAC

    Programmable Automation Controller

    PACKML Packaging Machine Language

    PC

    Personal Computer

    PCA

    Principle Component Analysis

    PLC

    Programmable Logic Controller

    PMML

    Predictive Model Markup Language

    QIF

    Quality Information Framework

    QR

    Quick Response

    REST

    REpresentational State Transfer

    RFID

    Radio Frequency Identiﬁcation

    RL

    Reinforcement Learning

    SCADA

    Supervisory Control and Data Acquisition

    SL

    Supervised Learning

    SVD

    Singular Value Decomposition

    SVM

    Support Vector Machines

    ISA

    International Society of Automation

    UL

    Unsupervised Learning

    References

    1.

    Deane, P.M.; Deane, P.M. The First Industrial Revolution; Cambridge University
    Press: Cambridge, UK, 1979.

    2.

    Crafts, N.F. The ﬁrst industrial revolution: A guided tour for growth economists.
    Am. Econ. Rev. 1996, 86, 197–201.

    3.

    Crafts, N. Explaining the ﬁrst Industrial Revolution: Two views. Eur. Rev. Econ.
    Hist. 2011, 15, 153–168. [CrossRef]

    4.

    Greasley, D.; Oxley, L. Causality and the ﬁrst industrial revolution. Ind. Corp.
    Chang. 1998, 7, 33–47. [CrossRef]

    5.

    Mokyr, J.; Strotz, R.H. The second industrial revolution, 1870–1914. Stor. dell’Econ.
    Mond. 1998, 21945, 1–14.

    6.

    Jevons, H.S. The second industrial revolution. Econ. J. 1931, 41, 1–18. [CrossRef]

    Sensors 2022, 22, 5834

    60 of 76

    7.

    Agarwal, H.; Agarwal, R. First Industrial Revolution and Second Industrial Revolution:
    Technological differences and the

    differences in banking and ﬁnancing of the ﬁrms. Saudi J. Humanit. Soc. Sci. 2017,
    2, 1062–1066.

    8.

    Janicke, M.; Jacob, K. A third industrial revolution. In Long-Term Governance
    for Social-Ecological Change; Routledge: New York,

    NY, USA, 2013; pp. 47–71.

    9.

    Cooper, C.; Kaplinsky, R. Technology and Development in the Third Industrial Revolution;
    Routledge: London, UK, 2005.

    10.

    Heinonen, S.; Karjalainen, J.; Ruotsalainen, J. Towards the third industrial revolution.
    Finl. Findland Future Res. Cent. FFRC EBook

    2015, 6, 2015.

    11.

    Posada, J.; Toro, C.; Barandiaran, I.; Oyarzun, D.; Stricker, D.; de Amicis, R.;
    Pinto, E.B.; Eisert, P.; Döllner, J.; Vallarino, I. Visual

    Computing as a Key Enabling Technology for Industrie 4.0 and Industrial Internet.
    IEEE Comput. Graph. Appl. 2015, 35, 26–40.

    [CrossRef]

    12.

    Kagermann, H.; Wahlster, W.; Helbig, J. Securing the Future of German Manufacturing
    Industry: Recommendations for

    Implementing the Strategic Initiative Industrie 4.0. Final Report of the Industrie.
    2013. Available online: https://www.din.de/

    resource/blob/76902/e8cac883f42bf28536e7e8165993f1fd/recommendations-for-implementing-industry-4-0-data.pdf
    (accessed

    on 5 June 2022).

    13.

    Xu, M.; David, J.M.; Kim, S.H. The fourth industrial revolution: Opportunities
    and challenges. Int. J. Financ. Res. 2018, 9, 90–95.

    [CrossRef]

    14.

    Kritzinger, W.; Karner, M.; Traar, G.; Henjes, J.; Sihn, W. Digital Twin in manufacturing:
    A categorical literature review and

    classiﬁcation. IFAC-PapersOnLine 2018, 51, 1016–1022. [CrossRef]

    15.

    Redelinghuys, A.; Basson, A.H.; Kruger, K. A six-layer architecture for the digital
    twin: A manufacturing case study implementa-

    tion. J. Intell. Manuf. 2020, 31, 1383–1402. [CrossRef]

    16.

    Tao, F.; Zhang, H.; Liu, A.; Nee, A.Y. Digital twin in industry: State-of-the-art.
    IEEE Trans. Ind. Inform. 2018, 15, 2405–2415.

    [CrossRef]

    17.

    Negri, E.; Fumagalli, L.; Macchi, M. A review of the roles of digital twin in
    CPS-based production systems. Procedia Manuf. 2017,

    11, 939–948. [CrossRef]

    18.

    Fuller, A.; Fan, Z.; Day, C.; Barlow, C. Digital twin: Enabling technologies,
    challenges and open research. IEEE Access 2020,

    8, 108952–108971. [CrossRef]

    19.

    Qi, Q.; Tao, F.; Zuo, Y.; Zhao, D. Digital twin service towards smart manufacturing.
    Procedia Cirp 2018, 72, 237–242. [CrossRef]

    20.

    Al Faruque, M.A.; Muthirayan, D.; Yu, S.Y.; Khargonekar, P.P. Cognitive digital
    twin for manufacturing systems. In Proceedings

    of the 2021 Design, Automation & Test in Europe Conference & Exhibition (DATE),
    Grenoble, France, 1–5 February 2021;

    pp. 440–445.

    21.

    Zeba, G.; Dabi´c, M.; ˇCiˇcak, M.; Daim, T.; Yalcin, H. Technology mining: Artiﬁcial
    intelligence in manufacturing. Technol. Forecast.

    Soc. Chang. 2021, 171, 120971. [CrossRef]

    22.

    Chien, C.F.; Dauzère-Pérès, S.; Huh, W.T.; Jang, Y.J.; Morrison, J.R. Artiﬁcial
    intelligence in manufacturing and logistics systems:

    algorithms, applications, and case studies. Int. J. Prod. Res. 2020, 58, 2730–2731.
    [CrossRef]

    23.

    Crandall, D.J. Artiﬁcial Intelligence and Manufacturing. Smart Factories: Issues
    of Information Governance. 2019; pp. 10–16.

    Available online: https://policyinstitute.iu.edu/doc/mpi/smart-factories.pdf#page=12
    (accessed on 5 June 2022).

    24.

    Bullers, W.I.; Nof, S.Y.; Whinston, A.B. Artiﬁcial intelligence in manufacturing
    planning and control. AIIE Trans. 1980, 12, 351–363.

    [CrossRef]

    25.

    Arinez, J.F.; Chang, Q.; Gao, R.X.; Xu, C.; Zhang, J. Artiﬁcial intelligence in
    advanced manufacturing: Current status and future

    outlook. J. Manuf. Sci. Eng. 2020, 142, 110804. [CrossRef]

    26.

    Li, B.H.; Hou, B.C.; Yu, W.T.; Lu, X.B.; Yang, C.W. Applications of artiﬁcial
    intelligence in intelligent manufacturing: A review.

    Front. Inf. Technol. Electron. Eng. 2017, 18, 86–96. [CrossRef]

    27.

    Buchmeister, B.; Palcic, I.; Ojstersek, R. Artiﬁcial Intelligence in Manufacturing
    Companies And Broader: An Overview. DAAAM

    International Scientiﬁc Book. 2019. Available online: https://daaam.info/sc-book-2019
    (accessed on 5 June 2022).

    28.

    Lee, J.; Davari, H.; Singh, J.; Pandhare, V. Industrial Artiﬁcial Intelligence
    for industry 4.0-based manufacturing systems. Manuf.

    Lett. 2018, 18, 20–23. [CrossRef]

    29.

    Mourtzis, D.; Doukas, M.; Bernidaki, D. Simulation in manufacturing: Review and
    challenges. Procedia Cirp 2014, 25, 213–229.

    [CrossRef]

    30.

    Lugaresi, G.; Matta, A. Real-time simulation in manufacturing systems: Challenges
    and research directions. In Proceedings of

    the 2018 Winter Simulation Conference (WSC), Gothenburg, Sweden, 9–12 December
    2018; pp. 3319–3330.

    31.

    Negahban, A.; Smith, J.S. Simulation for manufacturing system design and operation:
    Literature review and analysis. J. Manuf.

    Syst. 2014, 33, 241–261. [CrossRef]

    32.

    Hollocks, B. A well-kept secret? Simulation in manufacturing industry reviewed.
    Insight 1992, 5, 12–17.

    33.

    Hollocks, B.W. The impact of simulation in manufacturing decision making. Control
    Eng. Pract. 1995, 3, 105–112. [CrossRef]

    34.

    Ingemansson, A.; Bolmsjö, G.; Harlin, U. A survey of the use of the discrete-event
    simulation in manufacturing industry. In

    Proceedings of the 10th International Manufacturing Conference, Singapore, 11–14
    March 2002.

    35.

    McGinnis, L.F.; Rose, O. History and perspective of simulation in manufacturing.
    In Proceedings of the 2017 Winter Simulation

    Conference (WSC), Las Vegas, NV, USA, 3–6 December 2017; pp. 385–397.

    Sensors 2022, 22, 5834

    61 of 76

    36.

    Abeyratne, S.A.; Monfared, R.P. Blockchain ready manufacturing supply chain using
    distributed ledger. Int. J. Res. Eng. Technol.

    2016, 5, 1–10.

    37.

    Angrish, A.; Craver, B.; Hasan, M.; Starly, B. A case study for Blockchain in
    manufacturing: “FabRec”: A prototype for peer-to-peer

    network of manufacturing nodes. Procedia Manuf. 2018, 26, 1180–1192. [CrossRef]

    38.

    Li, Z.; Barenji, A.V.; Huang, G.Q. Toward a blockchain cloud manufacturing system
    as a peer to peer distributed network

    platform. Robot. Comput.-Integr. Manuf. 2018, 54, 133–144. [CrossRef]

    39.

    Kasten, J.E. Engineering and manufacturing on the blockchain: A systematic review.
    IEEE Eng. Manag. Rev. 2020, 48, 31–47.

    [CrossRef]

    40.

    Ko, T.; Lee, J.; Ryu, D. Blockchain technology and manufacturing industry: Real-time
    transparency and cost savings. Sustainability

    2018, 10, 4274. [CrossRef]

    41.

    Mohamed, N.; Al-Jaroodi, J. Applying blockchain in industry 4.0 applications.
    In Proceedings of the 2019 IEEE 9th annual

    computing and communication workshop and conference (CCWC), Las Vegas, NV, USA,
    7–9 January 2019; pp. 0852–0858.

    42.

    Belhadi, A.; Zkik, K.; Cherraﬁ, A.; Sha’ri, M.Y. Understanding big data analytics
    for manufacturing processes: insights from

    literature review and multiple case studies. Comput. Ind. Eng. 2019, 137, 106099.
    [CrossRef]

    43.

    Dai, H.N.; Wang, H.; Xu, G.; Wan, J.; Imran, M. Big data analytics for manufacturing
    internet of things: opportunities, challenges

    and enabling technologies. Enterp. Inf. Syst. 2020, 14, 1279–1303. [CrossRef]

    44.

    Sahoo, S. Big data analytics in manufacturing: A bibliometric analysis of research
    in the ﬁeld of business management. Int. J.

    Prod. Res. 2021, 1–29. [CrossRef]

    45.

    Dubey, R.; Gunasekaran, A.; Childe, S.J.; Blome, C.; Papadopoulos, T. Big data
    and predictive analytics and manufacturing

    performance: integrating institutional theory, resource-based view and big data
    culture. Br. J. Manag. 2019, 30, 341–361. [CrossRef]

    46.

    Bashar, A. Intelligent development of big data analytics for manufacturing industry
    in cloud computing. J. Ubiquitous Comput.

    Commun. Technol. (UCCT) 2019, 1, 13–22.

    47.

    Ong, S.K.; Nee, A.Y.C.

    Virtual and Augmented Reality Applications in Manufacturing; Springer Science
    & Business Media:

    Berlin/Heidelberg, Germany, 2013.

    48.

    Ong, S.; Nee, A. A brief introduction of VR and AR applications in manufacturing.
    In Virtual and Augmented Reality Applications in

    Manufacturing; Springer: Berlin/Heidelberg, Germany, 2004; pp. 1–11.

    49.

    Siedler, C.; Glatt, M.; Weber, P.; Ebert, A.; Aurich, J.C. Engineering changes
    in manufacturing systems supported by AR/VR

    collaboration. Procedia CIRP 2021, 96, 307–312. [CrossRef]

    50.

    Fast-Berglund, Å.; Gong, L.; Li, D. Testing and validating Extended Reality (xR)
    technologies in manufacturing. Procedia Manuf.

    2018, 25, 31–38. [CrossRef]

    51.

    Doolani, S.; Wessels, C.; Kanal, V.; Sevastopoulos, C.; Jaiswal, A.; Nambiappan,
    H.; Makedon, F. A review of extended reality (xr)

    technologies for manufacturing training. Technologies 2020, 8, 77. [CrossRef]

    52.

    Ong, S.; Yuan, M.; Nee, A. Augmented reality applications in manufacturing: A
    survey. Int. J. Prod. Res. 2008, 46, 2707–2742.

    [CrossRef]

    53.

    Nee, A.Y.; Ong, S.; Chryssolouris, G.; Mourtzis, D. Augmented reality applications
    in design and manufacturing. CIRP Ann.

    2012, 61, 657–679. [CrossRef]

    54.

    Doil, F.; Schreiber, W.; Alt, T.; Patron, C. Augmented reality for manufacturing
    planning. In Proceedings of the Workshop on

    Virtual Environments, Zurich, Switzerland, 22–23 May 2003, pp. 71–76.

    55.

    Goel, R.; Gupta, P. Robotics and industry 4.0. In A Roadmap to Industry 4.0: Smart
    Production, Sharp Business and Sustainable

    Development; Springer: Berlin/Heidelberg, Germany, 2020; pp. 157–169.

    56.

    Bayram, B.; ˙Ince, G. Advances in Robotics in the Era of Industry 4.0. In Industry
    4.0: Managing The Digital Transformation; Springer:

    Berlin/Heidelberg, Germany, 2018; pp. 187–200.

    57.

    Heyer, C. Human-robot interaction and future industrial robotics applications.
    In Proceedings of the 2010 IEEE/RSJ International

    Conference on Intelligent Robots and Systems, Taipei, Taiwan, 18–22 October 2010;
    pp. 4749–4754.

    58.

    Hägele, M.; Nilsson, K.; Pires, J.N.; Bischoff, R. Industrial robotics. In Springer
    Handbook of Robotics; Springer: Berlin/Heidelberg,

    Germany, 2016; pp. 1385–1422.

    59.

    Parmar, H.; Khan, T.; Tucci, F.; Umer, R.; Carlone, P. Advanced robotics and additive
    manufacturing of composites: Towards a

    new era in Industry 4.0. Mater. Manuf. Process. 2022, 37, 483–517. [CrossRef]

    60.

    Tantawi, K.H.; Sokolov, A.; Tantawi, O. Advances in industrial robotics: From
    industry 3.0 automation to industry 4.0 collaboration.

    In Proceedings of the 2019 4th Technology Innovation Management and Engineering
    Science International Conference (TIMES-

    iCON), Bangkok, Thailand, 11–13 December 2019; pp. 1–4.

    61.

    Li, M.; Milojevi´c, A.; Handroos, H. Robotics in manufacturing—The past and the
    present. In Technical, Economic and Societal Effects

    of Manufacturing 4.0; Palgrave Macmillan: Cham, Switerland, 2020; pp. 85–95.

    62.

    Groover, M.P. Fundamentals of Modern Manufacturing: Materials, Processes, and
    Systems; J. Wiley & Sons: Hoboken, NJ, USA, 2007.

    63.

    Rosen, R.; Von Wichert, G.; Lo, G.; Bettenhausen, K.D. About the importance of
    autonomy and digital twins for the future of

    manufacturing. Ifac-Papersonline 2015, 48, 567–572. [CrossRef]

    64.

    Pustišek, M.; Chen, M.; Kos, A.; Kos, A. Decentralized Machine Autonomy for Manufacturing
    Servitization. Sensors 2022, 22, 338.

    [CrossRef] [PubMed]

    Sensors 2022, 22, 5834

    62 of 76

    65.

    Park, H. From Automation to Autonomy—A new trend for Smart Manufacturing. DAAAM
    International Scientiﬁc Book. 2013.

    Available online: https://daaam.info/sc-book-2013 (accessed on 5 June 2022).

    66.

    Park, H.S.; Tran, N.H. Autonomy for smart manufacturing. J. Korean Soc. Precis.
    Eng. 2014, 31, 287–295. [CrossRef]

    67.

    Horvitz, E.; Selman, B. Interim report from the panel chairs: AAAI Presidential
    Panel on Long-Term AI Futures. In Singularity

    Hypotheses; Springer: Berlin/Heidelberg, Germany, 2012; pp. 301–308.

    68.

    Pohl, J.

    Artiﬁcial Super Intelligence:

    Extinction or Nirvana.

    Intern Symposium.

    2015.

    Available online:

    https:

    //www.researchgate.net/proﬁle/Jens-Pohl/publication/281748315_Artiﬁcial_Superintelligence_Extinction_or_Nirvana/

    links/55f723c908aeafc8abfa21ca/Artiﬁcial-Superintelligence-Extinction-or-Nirvana.pdf
    (accessed on 5 June 2022).

    69.

    Almada-Lobo, F. The Industry 4.0 revolution and the future of Manufacturing Execution
    Systems (MES). J. Innov. Manag. 2015,

    3, 16–21. [CrossRef]

    70.

    Liu, Y.; Xu, X. Industry 4.0 and cloud manufacturing: A comparative analysis.
    J. Manuf. Sci. Eng. 2017, 139, 034701. [CrossRef]

    71.

    Lu, Y. Industry 4.0: A survey on technologies, applications and open research
    issues. J. Ind. Inf. Integr. 2017, 6, 1–10. [CrossRef]

    72.

    Thames, L.; Schaefer, D. Industry 4.0: An overview of key beneﬁts, technologies,
    and challenges. In Cybersecurity for Industry 4.0;

    Springer: Berlin/Heidelberg, Germany, 2017; pp. 1–33.

    73.

    Porter, M.E.; Heppelmann, J.E. How smart, connected products are transforming
    companies. Harv. Bus. Rev. 2015, 93, 96–114.

    74.

    Thoben, K.D.; Wiesner, S.; Wuest, T. “Industrie 4.0” and smart manufacturing—A
    review of research issues and application

    examples. Int. J. Autom. Technol. 2017, 11, 4–16. [CrossRef]

    75.

    Kagermann, H.; Wahlster, W.; Helbig J. Recommendations for Implementing the Strategic
    Initiative INDUSTRIE 4.0: Securing the

    Future of German Manufacturing Industry. Final Report of the Industrie 4.0 Working
    Group; Technical Report, Forschungsunion.

    Available online: https://en.acatech.de/publication/recommendations-for-implementing-the-strategic-initiative-industrie-4-

    0-ﬁnal-report-of-the-industrie-4-0-working-group/ (accessed on 5 June 2022).

    76.

    Henning Kagermann, P.D.W.W.; Helbig, D.J. Recommendations for Implementing the
    Strategic Initiative INDUSTRIE 4.0-Final Report

    of the Industrie 4.0 Working Group; Technical Report; German Federal Ministry
    of Education and Research (BMBF): Bonn, Germany,

    2013.

    77.

    Stock, T.; Seliger, G. Opportunities of sustainable manufacturing in industry
    4.0. Procedia Cirp 2016, 40, 536–541. [CrossRef]

    78.

    Hermann, M.; Pentek, T.; Otto, B. Design Principles for Industrie 4.0 Scenarios:
    A Literature Review; Technische Universität Dortmund:

    Dortmund, Germany, 2015.

    79.

    Kagermann, H. Chancen von Industrie 4.0 nutzen. In Industrie 4.0 in Produktion,
    Automatisierung und Logistik: Anwendung,

    Technologien; ten Hompel, M., Vogel-Heuser, B., Bauernhansl, T., Eds.; Springer:
    Berlin/Heidelberg, Germany, 2014.

    80.

    Bitkom, F.I. Industrie 4.0–Volkswirtschaftliches Potenzial für Deutschland. Berlin/Stuttgart.
    2014. Available online: https:

    //www.produktionsarbeit.de/content/dam/produktionsarbeit/de/documents/Studie-Industrie-4-0-Volkswirtschaftliches-

    Potential-fuer-Deutschland.pdf (accessed on 5 June 2022).

    81.

    2017: State of the IIoT-Key Trends and Predictions for the Industrial Internet
    of Things. Available online: https://www.opto22.

    com/support/resources-tools/documents/2215-white-paper-state-of-the-iiot-2017
    (accessed on 5 June 2022).

    82.

    Bezerra, F.; Favacho, C.H.; Souza, R.; de Souza, C. Towards supporting systematic
    mappings studies: An automatic snowballing

    approach. In Proceedings of the Simpósio Brasileiro de Banco de Dados (SBBD),
    Curitiba, Brazil, 6–9 October 2014.

    83.

    van Haastrecht, M.; Sarhan, I.; Yigit Ozkan, B.; Brinkhuis, M.; Spruit, M. SYMBALS:
    A systematic review methodology blending

    active learning and snowballing. Front. Res. Metrics Anal. 2021, 6, 33. [CrossRef]
    [PubMed]

    84.

    Michael Lyman, R.R.; Wright, O. Accenture Strategy: Cornerstone of Future Growth:
    Ecosystems; Technical Report; Accenture: Dublin,

    Ireland, 2018.

    85.

    Gaub, H. Customization of mass-produced parts by combining injection molding and
    additive manufacturing with Industry 4.0

    technologies. Reinf. Plast. 2016, 60, 401–404. [CrossRef]

    86.

    Prasad, D.; Jayswal, S. Reconﬁgurable manufacturing system–a new class of manufacturing
    system. Manag. Prod. Eng. Rev. 2019,

    10, 37–47.

    87.

    Koren, Y. Reconﬁgurable manufacturing and beyond. In Proceedings of the CIRP 3rd
    International Conference on Reconﬁgurable

    Manufacturing, Ann Arbor, MI, USA, 10 May 2005.

    88.

    Pansare, R.; Yadav, G.; Nagare, M.R. Reconﬁgurable manufacturing system: A systematic
    review, meta-analysis and future

    research directions. J. Eng. Des. Technol. 2021. [CrossRef]

    89.

    Mehrabi, M.G.; Ulsoy, A.G.; Koren, Y. Reconﬁgurable manufacturing systems: Key
    to future manufacturing. J. Intell. Manuf. 2000,

    11, 403–419. [CrossRef]

    90.

    Bi, Z.M.; Lang, S.Y.; Shen, W.; Wang, L. Reconﬁgurable manufacturing systems:
    The state of the art. Int. J. Prod. Res. 2008,

    46, 967–992. [CrossRef]

    91.

    Koren, Y.; Heisel, U.; Jovane, F.; Moriwaki, T.; Pritschow, G.; Ulsoy, G.; Van
    Brussel, H. Reconﬁgurable manufacturing systems.

    CIRP Ann. 1999, 48, 527–540. [CrossRef]

    92.

    ElMaraghy, H.A. Flexible and reconﬁgurable manufacturing systems paradigms. Int.
    J. Flex. Manuf. Syst. 2005, 17, 261–276.

    [CrossRef]

    93.

    Shivanand, H. Flexible Manufacturing System; New Age International: New Delhi,
    India, 2006.

    94.

    Browne, J.; Dubois, D.; Rathmill, K.; Sethi, S.P.; Stecke, K.E. Classiﬁcation
    of ﬂexible manufacturing systems. FMS Mag. 1984,

    2, 114–117.

    Sensors 2022, 22, 5834

    63 of 76

    95.

    Yadav, A.; Jayswal, S. Modelling of ﬂexible manufacturing system: A review. Int.
    J. Prod. Res. 2018, 56, 2464–2487. [CrossRef]

    96.

    MacCarthy, B.; Liu, J. A new classiﬁcation scheme for ﬂexible manufacturing systems.
    Int. J. Prod. Res. 1993, 31, 299–309.

    [CrossRef]

    97.

    Stam, A.; Kuula, M. Selecting a ﬂexible manufacturing system using multiple criteria
    analysis. Int. J. Prod. Res. 1991, 29, 803–820.

    [CrossRef]

    98.

    Florescu, A.; Barabas, S.A. Modeling and simulation of a ﬂexible manufacturing
    system—A basic component of industry 4.0.

    Appl. Sci. 2020, 10, 8300. [CrossRef]

    99.

    Park, S.C. A methodology for creating a virtual model for a ﬂexible manufacturing
    system. Comput. Ind. 2005, 56, 734–746.

    [CrossRef]

    100. Greenwood, N.R. Implementing Flexible Manufacturing Systems; Springer: Berlin/Heidelberg,
    Germany, 1988.

    101. Srai, J.S.; Kumar, M.; Graham, G.; Phillips, W.; Tooze, J.; Ford, S.; Beecher,
    P.; Raj, B.; Gregory, M.; Tiwari, M.K.; et al. Distributed

    manufacturing: Scope, challenges and opportunities. Int. J. Prod. Res. 2016, 54,
    6917–6935. [CrossRef]

    102. Leitão, P. Agent-based distributed manufacturing control: A state-of-the-art
    survey. Eng. Appl. Artif. Intell. 2009, 22, 979–991.

    [CrossRef]

    103. Huang, C.Y. Distributed manufacturing execution systems: A workﬂow perspective.
    J. Intell. Manuf. 2002, 13, 485–497. [CrossRef]

    104. Rauch, E.; Dallasega, P.; Matt, D.T. Distributed manufacturing network models
    of smart and agile mini-factories. Int. J. Agil. Syst.

    Manag. 2017, 10, 185–205. [CrossRef]

    105. Xu, X. From cloud computing to cloud manufacturing. Robot. Comput.-Integr.
    Manuf. 2012, 28, 75–86. [CrossRef]

    106. Ren, L.; Zhang, L.; Wang, L.; Tao, F.; Chai, X. Cloud manufacturing: Key
    characteristics and applications. Int. J. Comput. Integr.

    Manuf. 2017, 30, 501–515. [CrossRef]

    107. Ren, L.; Zhang, L.; Tao, F.; Zhao, C.; Chai, X.; Zhao, X. Cloud manufacturing:
    From concept to practice. Enterp. Inf. Syst. 2015,

    9, 186–209. [CrossRef]

    108. Li, W.; Mehnen, J. (Eds.) Cloud Manufacturing: Distributed Computing Technologies
    for Global and Sustainable Manufacturing; Springer:

    Berlin/Heidelberg, Germany, 2013.

    109. Adamson, G.; Wang, L.; Holm, M.; Moore, P. Cloud manufacturing–a critical
    review of recent development and future trends. Int.

    J. Comput. Integr. Manuf. 2017, 30, 347–380. [CrossRef]

    110. He, W.; Xu, L. A state-of-the-art survey of cloud manufacturing. Int. J.
    Comput. Integr. Manuf. 2015, 28, 239–250. [CrossRef]

    111. Hozdi´c, E. Smart factory for industry 4.0: A review. Int. J. Mod. Manuf.
    Technol. 2015, 7, 28–35.

    112. Osterrieder, P.; Budde, L.; Friedli, T. The smart factory as a key construct
    of industry 4.0: A systematic literature review. Int. J.

    Prod. Econ. 2020, 221, 107476. [CrossRef]

    113. Lucke, D.; Constantinescu, C.; Westkämper, E. Smart factory-a step towards
    the next generation of manufacturing. In Manufactur-

    ing Systems and Technologies for the New Frontier; Springer: Berlin/Heidelberg,
    Germany, 2008; pp. 115–118.

    114. Wang, S.; Wan, J.; Zhang, D.; Li, D.; Zhang, C. Towards smart factory for
    industry 4.0: A self-organized multi-agent system with

    big data based feedback and coordination. Comput. Netw. 2016, 101, 158–168. [CrossRef]

    115. Radziwon, A.; Bilberg, A.; Bogers, M.; Madsen, E.S. The smart factory: Exploring
    adaptive and ﬂexible manufacturing solutions.

    Procedia Eng. 2014, 69, 1184–1190. [CrossRef]

    116. Shi, Z.; Xie, Y.; Xue, W.; Chen, Y.; Fu, L.; Xu, X. Smart factory in Industry
    4.0. Syst. Res. Behav. Sci. 2020, 37, 607–617. [CrossRef]

    117. Shaﬁq, S.I.; Velez, G.; Toro, C.; Sanin, C.; Szczerbicki, E. Designing intelligent
    factory: Conceptual framework and empirical

    validation. Procedia Comput. Sci. 2016, 96, 1801–1808. [CrossRef]

    118. Reimann, J.; Sziebig, G. The intelligent factory space–a concept for observing,
    learning and communicating in the digitalized

    factory. IEEE Access 2019, 7, 70891–70900. [CrossRef]

    119. Lu, B.; Shao, X.; Zhang, J.; Wang, L. Development strategy for intelligent
    factory in discrete manufacturing. Strateg. Study Chin.

    Acad. Eng. 2018, 20, 44–50. [CrossRef]

    120. Larrabee, G.B. The intelligent microelectronics factory of the future.

    In Proceedings of the 1991 Proceedings IEEE/SEMI

    International Semiconductor Manufacturing Science Symposium, Burlingame, CA, USA,
    20–22 May 1991; pp. 30–34.

    121. Erdogan, S.; Wahab, A. A Family of Reconﬁgurable Neurocomputers For The “Intelligent
    Factory”. In Proceedings of the IEEE

    International Workshop on Emerging Technologies and Factory Automation, Melbourne,
    VIC, Australia, 11–14 August 1992;

    pp. 369–374.

    122. Bracht, U.; Masurat, T. The Digital Factory between vision and reality. Comput.
    Ind. 2005, 56, 325–333. [CrossRef]

    123. Kuhn, W. Digital factory-simulation enhancing the product and production
    engineering process. In Proceedings of the 2006

    Winter Simulation Conference, Monterey, CA, USA, 3–6 December 2006; pp. 1899–1906.

    124. Worn, H.; Frey, D.; Keitel, J. Digital factory-planning and running enterprises
    of the future. In Proceedings of the 2000 26th Annual

    Conference of the IEEE Industrial Electronics Society. IECON 2000. 2000 IEEE International
    Conference on Industrial Electronics,

    Control and Instrumentation. 21st Century Technologies, Nagoya, Japan, 22–28 October
    2000; Volume 2, pp. 1286–1291.

    125. Tchoffa, D.; Figay, N.; Ghodous, P.; Expósito, E.; Kermad, L.; Vosgien, T.;
    El Mhamedi, A. Digital factory system for dynamic

    manufacturing network supporting networked collaborative product development.

    Data Knowl. Eng. 2016, 105, 130–154.

    [CrossRef]

    126. Gregor, M.; Medvecky, S. Digital factory–theory and practice. In Engineering
    the Future; IntechOpen: London, UK 2010.

    127. Lee, J. Smart factory systems. Informatik-Spektrum 2015, 38, 230–235. [CrossRef]

    Sensors 2022, 22, 5834

    64 of 76

    128. Mabkhot, M.M.; Al-Ahmari, A.M.; Salah, B.; Alkhalefah, H. Requirements of
    the smart factory system: A survey and perspective.

    Machines 2018, 6, 23. [CrossRef]

    129. Panetto, H.; Iung, B.; Ivanov, D.; Weichhart, G.; Wang, X. Challenges for
    the cyber-physical manufacturing enterprises of the

    future. Annu. Rev. Control 2019, 47, 200–213. [CrossRef]

    130. Gierej, S. The framework of business model in the context of Industrial Internet
    of Things. Procedia Eng. 2017, 182, 206–212.

    [CrossRef]

    131. Dujovne, D.; Watteyne, T.; Vilajosana, X.; Thubert, P. 6TiSCH: Deterministic
    IP-enabled industrial internet (of things). IEEE

    Commun. Mag. 2014, 52, 36–41. [CrossRef]

    132. Lu, Y.; Asghar, M.R. Semantic communications between distributed cyber-physical
    systems towards collaborative automation for

    smart manufacturing. J. Manuf. Syst. 2020, 55, 348–359. [CrossRef]

    133. Wong, G.; Greenhalgh, T.; Westhorp, G.; Buckingham, J.; Pawson, R. RAMESES
    publication standards: Realist syntheses. BMC

    Med. 2013, 11, 21.

    134. Liu, C.; Jiang, P. A cyber-physical system architecture in shop ﬂoor for
    intelligent manufacturing. Procedia Cirp 2016, 56, 372–377.

    [CrossRef]

    135. Kusiak, A. Smart manufacturing. Int. J. Prod. Res. 2018, 56, 508–517. [CrossRef]

    136. Zhang, Y.; Zhang, G.; Wang, J.; Sun, S.; Si, S.; Yang, T. Real-time information
    capturing and integration framework of the internet

    of manufacturing things. Int. J. Comput. Integr. Manuf. 2015, 28, 811–822. [CrossRef]

    137. Liu, X.F.; Shahriar, M.R.; Al Sunny, S.N.; Leu, M.C.; Hu, L. Cyber-physical
    manufacturing cloud: Architecture, virtualization,

    communication, and testbed. J. Manuf. Syst. 2017, 43, 352–364. [CrossRef]

    138. Kühnle, H.; Bitsch, G.

    Smart manufacturing units.

    In Foundations & Principles of Distributed Manufacturing; Springer:

    Berlin/Heidelberg, Germany, 2015; pp. 55–70.

    139. Davis, J. Cyberinfrastructure in Chemical and Biological Process Systems:
    Impact and Directions. Proc. NSF Workshop Rep.

    2006. Available online: https://www.nsf.gov/awardsearch/showAward?AWD_ID=0645024&HistoricalAwards=false
    (accessed

    on 5 June 2022).

    140. Baldwin, C.Y.; Clark, K.B.; Clark, K.B. Design Rules: The Power of Modularity;
    MIT Press: Cambridge, MA, USA, 2000; Volume 1.

    141. Singh, A.; Gupta, S.; Asjad, M.; Gupta, P. Reconﬁgurable manufacturing systems:
    Journey and the road ahead. Int. J. Syst. Assur.

    Eng. Manag. 2017, 8, 1849–1857. [CrossRef]

    142. Renzi, C.; Leali, F.; Cavazzuti, M.; Andrisano, A.O. A review on artiﬁcial
    intelligence applications to the optimal design of

    dedicated and reconﬁgurable manufacturing systems. Int. J. Adv. Manuf. Technol.
    2014, 72, 403–418. [CrossRef]

    143. Wang, Y.; Ma, H.S.; Yang, J.H.; Wang, K.S. Industry 4.0: A way from mass
    customization to mass personalization production.

    Adv. Manuf. 2017, 5, 311–320. [CrossRef]

    144. Pech, M.; Vrchota, J. The Product Customization Process in Relation to Industry
    4.0 and Digitalization. Processes 2022, 10, 539.

    [CrossRef]

    145. Anshari, M.; Almunawar, M.N.; Lim, S.A.; Al-Mudimigh, A. Customer relationship
    management and big data enabled:

    Personalization & customization of services. Appl. Comput. Inform. 2019, 15, 94–101.

    146. Lasi, H.; Fettke, P.; Kemper, H.G.; Feld, T.; Hoffmann, M. Industry 4.0.
    Bus. Inf. Syst. Eng. 2014, 6, 239–242. [CrossRef]

    147. Song, X.; Wang, S.; Xie, P.; Wei, Z. Manufacturing Flexibility, Business
    Model Design, and Firm Performance. In Academy of

    Management Proceedings; Academy of Management: Briarcliff Manor, NY, USA, 2017;
    Volume 2017, p. 13195.

    148. Qin, J.; Liu, Y.; Grosvenor, R. A categorical framework of manufacturing
    for industry 4.0 and beyond.

    Procedia Cirp 2016,

    52, 173–178. [CrossRef]

    149. Wang, L.; Törngren, M.; Onori, M. Current status and advancement of cyber-physical
    systems in manufacturing. J. Manuf. Syst.

    2015, 37, 517–527. [CrossRef]

    150. Azevedo, A.; Almeida, A. Factory templates for digital factories framework.
    Robot. Comput.-Integr. Manuf. 2011, 27, 755–771.

    [CrossRef]

    151. Ferreira, F.; Azevedo, A.; Faria, J.; Rojas, E. Virtual enterprise process
    management: An application to industrial maintenance. In

    Working Conference on Virtual Enterprises; Springer: Berlin/Heidelberg, Germany,
    2014; pp. 71–79.

    152. Wang, S.; Wan, J.; Li, D.; Zhang, C. Implementing smart factory of industrie
    4.0: An outlook. Int. J. Distrib. Sens. Netw. 2016,

    12, 3159805. [CrossRef]

    153. Morris, E.; Levine, L.; Meyers, C.; Place, P.; Plakosh, D. Systems of Systems
    Interoperability. SEI, Carnegie Mellon University, USA.

    2004. Available online: https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=7045
    (accessed on 5 June 2022).

    154. Chituc, C.M.; Toscano, C.; Azevedo, A. Interoperability in Collaborative
    Networks: Independent and industry-speciﬁc initiatives–

    The case of the footwear industry. Comput. Ind. 2008, 59, 741–757. [CrossRef]

    155. Berre, A.J.; Hahn, A.; Akehurst, D.; Bezivin, J.; Tsalgatidou, A.; Vermaut,
    F.; Kutvonen, L.; Linington, P.F. State-of-the Art for

    Interoperability Architecture Approaches. InterOP Network of Excellence-Contract
    no.: IST-508. 2004, Volume 11. Available online:

    https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.106.9713&rep=rep1&type=pdf
    (accessed on 5 June 2022).

    156. Curts, R.J.; Campbell, D.E. Architecture: The road to interoperability. In
    Command & Control Research & Technology Symposium

    (CCRTS); US Naval War College: Newport, RI, USA, 1999.

    157. Heiler, S. Semantic interoperability. ACM Comput. Surv. (CSUR) 1995, 27,
    271–273. [CrossRef]

    Sensors 2022, 22, 5834

    65 of 76

    158. Ford, T.C.; Colombi, J.M.; Graham, S.R.; Jacques, D.R. Survey on Interoperability
    Measurement; Technical Report; Air Force Institute

    of Tech Wright-Patterson AFB OH: Greene County, OH, USA, 2007.

    159. Kasunic, M. Measuring Systems Interoperability: Challenges and Opportunities;
    Technical Report; Carnegie-Mellon Univ Pittsburgh

    Pa Software Engineering Inst: Pittsburgh, PA, USA, 2001.

    160. Zeid, A.; Sundaram, S.; Moghaddam, M.; Kamarthi, S.; Marion, T. Interoperability
    in smart manufacturing: Research challenges.

    Machines 2019, 7, 21. [CrossRef]

    161. Information Technology-Message Queuing Telemetry Transport (MQTT) v3.1.1;
    Technical Report; ISO/IEC: Geneva, Switzerland, 2016.

    162. Brunnermeier, S.; Martin, S. Interoperability Cost Analysis of the US Automotive
    Supply Chain; Center for Economics Research

    (Research Triangle Institute): Research Triangle Park, NC, USA, 1999.

    163. Vogel-Heuser, G.; Kegel, G.; K. Bender, K.; Wucherer, K. Global information
    architecture for industrial automation. Automa-

    tisierungstechnische Praxis (ATP) 2009, 51, 108–115 [CrossRef]

    164. Levis, A.H.; Rouse, W.B. Systems architecture. In Handbook of Systems Engineering
    and Management, 2nd ed.; Sage, A.P., Ed.; John

    Wiley & Sons: Hoboken, NJ, USA, 2011; pp. 479–506.

    165. Christopher, N.; Feng, S.C.; Fowler, J.E.; Frechette, S.P.; Jones, A.; Jurrens,
    K.; Lyons, K.; McLean, C.R.; Pratt, M.; Scott, H.A.; et al.

    SIMA Reference Architecture Part 1: Activity Models; National Institute of Standards
    and Technology: Gaithersburg, MD, USA, 1996.

    166. Han, S. A review of smart manufacturing reference models based on the skeleton
    meta-model. J. Comput. Des. Eng. 2020,

    7, 323–336. [CrossRef]

    167. DIN SPEC. 91345: 2016-04 Reference Architecture Model Industrie 4.0 (RAMI4.
    0). DIN 2016, 4, 2016.

    168. Lin, S.W.; Miller, B.; Durand, J.; Joshi, R.; Didier, P.; Chigani, A.; Torenbeek,
    R.; Duggal, D.; Martin, R.; Bleakley, G.; et al. Industrial

    Internet Reference Architecture; Techonol Report; Industrial Internet Consortium
    (IIC): Boston, MA, USA 2015.

    169. Amdahl, G.M.; Blaauw, G.A.; Brooks, F.P. Architecture of the IBM System/360.
    IBM J. Res. Dev. 1964, 8, 87–101. [CrossRef]

    170. Nakagawa, E.Y.; Antonino, P.O.; Schnicke, F.; Capilla, R.; Kuhn, T.; Liggesmeyer,
    P. Industry 4.0 reference architectures: State of

    the art and future trends. Comput. Ind. Eng. 2021, 156, 107241. [CrossRef]

    171. Helmann, A.; Deschamps, F.; Loures, E. Reference architectures for Industry
    4.0: Literature review. Adv Transdiscip Eng 2020,

    12, 171–180.

    172. Lu, Y.; Morris, K.C.; Frechette, S. Standards landscape and directions for
    smart manufacturing systems. In Proceedings of the

    2015 IEEE International Conference on Automation Science and Engineering (CASE),
    Gothenburg, Sweden, 24–28 August 2015;

    pp. 998–1005.

    173. Wei, S.; Hu, J.; Cheng, Y.; Ma, Y.; Yu, Y. The essential elements of intelligent
    manufacturing system architecture. In Proceedings of

    the 2017 13th IEEE Conference on Automation Science and Engineering (CASE), Xi’an,
    China, 20–23 August 2017; pp. 1006–1011.

    174. Industrial Value Chain Initiative. Strategic Implementation of Smart Manufacturing
    Ecosystem by IVRA-Next Framework); Techonol

    Report; Industrial Value Chain Initiative: Tokyo, Japan 2018.

    175. Wang, Y.; Towara, T.; Anderl, R. Topological approach for mapping technologies
    in reference architectural model Industrie 4.0

    (RAMI 4.0). In Proceedings of the World Congress on Engineering and Computer Science,
    London, UK, 5–7 July 2017; Volume 2,

    pp. 25–27.

    176. IVCI. Industrial Value Chain Reference Architecture. Hannover, Germany. 2017.
    Available online: http://www.iaeng.org/

    publication/WCECS2017/WCECS2017_pp982-990.pdf (accessed on 5 June 2022).

    177. Moghaddam, M.; Cadavid, M.N.; Kenley, C.R.; Deshmukh, A.V. Reference architectures
    for smart manufacturing: A critical

    review. J. Manuf. Syst. 2018, 49, 215–225. [CrossRef]

    178. Lu, Y.; Morris, K.C.; Frechette, S. Current Standards Landscape for Smart
    Manufacturing Systems; National Institute of Standards and

    Technology, NISTIR: Gaithersburg, MD, USA, 2016.

    179. Yli-Ojanperä, M.; Sierla, S.; Papakonstantinou, N.; Vyatkin, V. Adapting
    an agile manufacturing concept to the reference

    architecture model industry 4.0: A survey and case study. J. Ind. Inf. Integr.
    2019, 15, 147–160. [CrossRef]

    180. Lin, S.W.; Murphy, B.; Clauer, E.; Loewen, U.; Neubert, R.; Bachmann, G.;
    Pai, M.; Hankel, M. Architecture Alignment and

    Interoperability: An Industrial Internet Consortium and Plattform Industrie 4.0
    Joint Whitepaper; White Paper; Industrial Internet

    Consortium: Boston, MA, USA, 2017.

    181. Pai, D. Interoperability between IIC Architecture & Industry 4.0 Reference
    Architecture for Industrial Assets. Tech. Rep. 2016, 1,

    1–12.

    182. Adolphs, P. RAMI 4.0. An architectural Model for Industrie 4.0. Plattform
    Industrie 4.0. 2015. Available online: https://ec.europa.

    eu/futurium/en/system/ﬁles/ged/a2-schweichhart-reference_architectural_model_industrie_4.0_rami_4.0.pdf
    (accessed on 5

    June 2022).

    183. Hankel, M.; Rexroth, B. The reference architectural model industrie 4.0 (rami
    4.0). ZVEI 2015, 2, 4–9.

    184. Weber, C.; Königsberger, J.; Kassner, L.; Mitschang, B. M2DDM–a maturity
    model for data-driven manufacturing. Procedia Cirp

    2017, 63, 173–178. [CrossRef]

    185. Gröger, C.; Kassner, L.; Hoos, E.; Königsberger, J.; Kiefer, C.; Silcher,
    S.; Mitschang, B. The data-driven factory. In Proceedings

    of the ICEIS 2016—18th International Conference on Enterprise Information Systems,
    Rome, Italy, 25–28 April 2016; Volume 1,

    pp. 40–41.

    Sensors 2022, 22, 5834

    66 of 76

    186. Adolphs, P.; Bedenbender, H.; Dirzus, D.; Ehlich, M.; Epple, U.; Hankel,
    M.; Heidel, R.; Hoffmeister, M.; Huhle, H.; Kärcher,

    B.; et al.

    Reference Architecture Model Industrie 4.0 (RAMI4. 0).

    ZVEI and VDI, Status Report. 2015. Available on-

    line: https://www.zvei.org/ﬁleadmin/user_upload/Presse_und_Medien/Publikationen/2016/januar/GMA_Status_Report_

    Reference_Archtitecture_Model_Industrie_4.0_RAMI_4.0_/GMA-Status-Report-RAMI-40-July-2015.pdf
    (accessed on 5 June

    2022).

    187. Santos, C.; Mehrsai, A.; Barros, A.; Araújo, M.; Ares, E. Towards Industry
    4.0: An overview of European strategic roadmaps.

    Procedia Manuf. 2017, 13, 972–979. [CrossRef]

    188. de Melo, P.F.S.; Godoy, E.P. Controller Interface for Industry 4.0 based
    on RAMI 4.0 and OPC UA. In Proceedings of the 2019 II

    Workshop on Metrology for Industry 4.0 and IoT (MetroInd4.0 and IoT), Naples,
    Italy, 4–6 June 2019; pp. 229–234. [CrossRef]

    189. Contreras, J.D.; Garcia, J.I.; Pastrana, J.D. Developing of Industry 4.0
    Applications. Int. J. Online Eng. 2017, 13, 30–47. [CrossRef]

    190. Pisching, M.A.; Pessoa, M.A.; Junqueira, F.; dos Santos Filho, D.J.; Miyagi,
    P.E. An architecture based on RAMI 4.0 to discover

    equipment to process operations required by products. Comput. Ind. Eng. 2018,
    125, 574–591. [CrossRef]

    191. Melo, P.F.; Godoy, E.P.; Ferrari, P.; Sisinni, E. Open source control device
    for industry 4.0 based on RAMI 4.0. Electronics 2021,

    10, 869. [CrossRef]

    192. Hernández, E.; Senna, P.; Silva, D.; Rebelo, R.; Barros, A.C.; Toscano, C.
    Implementing RAMI-4.0 in production-a multi-case study.

    In International Conference of Progress in Digital and Physical Manufacturing;
    Springer: Berlin/Heidelberg, Germany, 2019; pp. 49–56.

    193. Schulte, D.; Colombo, A.W. Rami 4.0 based digitalization of an industrial
    plate extruder system: Technical and infrastructural

    challenges. In Proceedings of the IECON 2017-43rd Annual Conference of the IEEE
    Industrial Electronics Society, Beijing, China,

    29 October–1 November 2017; pp. 3506–3511.

    194. González, I.; Calderón, A.J.; Figueiredo, J.; Sousa, J. A literature survey
    on open platform communications (OPC) applied to

    advanced industrial environments. Electronics 2019, 8, 510. [CrossRef]

    195. Luo, Z.; Hong, S.; Lu, R.; Li, Y.; Zhang, X.; Kim, J.; Park, T.; Zheng, M.;
    Liang, W. OPC UA-based smart manufacturing: System

    architecture, implementation, and execution. In Proceedings of the 2017 5th International
    Conference on Enterprise Systems (ES),

    Beijing, China, 22–24 September 2017; pp. 281–286.

    196. Grüner, S.; Pfrommer, J.; Palm, F. RESTful industrial communication with
    OPC UA. IEEE Trans. Ind. Inform. 2016, 12, 1832–1841.

    [CrossRef]

    197. Derhamy, H.; Rönnholm, J.; Delsing, J.; Eliasson, J.; van Deventer, J. Protocol
    interoperability of OPC UA in service oriented

    architectures. In Proceedings of the 2017 IEEE 15th International Conference on
    Industrial Informatics (INDIN), Emden, Germany,

    24–26 July 2017; pp. 44–50.

    198. Schleipen, M.; Gilani, S.S.; Bischoff, T.; Pfrommer, J. OPC UA & Industrie
    4.0-enabling technology with high diversity and

    variability. Procedia Cirp 2016, 57, 315–320.

    199. Ye, X.; Hong, S.H. An AutomationML/OPC UA-based Industry 4.0 solution for
    a manufacturing system. In Proceedings of the

    2018 IEEE 23rd International Conference on Emerging Technologies and Factory Automation
    (ETFA), Turin, Italy, 4–7 September

    2018; Volume 1, pp. 543–550.

    200. Rocha, M.S.; Sestito, G.S.; Dias, A.L.; Turcato, A.C.; Brandão, D.; Ferrari,
    P. On the performance of OPC UA and MQTT for data

    exchange between industrial plants and cloud servers. ACTA IMEKO 2019, 8, 80–87.
    [CrossRef]

    201. Ferrari, P.; Flammini, A.; Rinaldi, S.; Sisinni, E.; Maffei, D.; Malara,
    M. Impact of quality of service on cloud based industrial IoT

    applications with OPC UA. Electronics 2018, 7, 109. [CrossRef]

    202. Lema, M.A.; Laya, A.; Mahmoodi, T.; Cuevas, M.; Sachs, J.; Markendahl, J.;
    Dohler, M. Business case and technology analysis for

    5G low latency applications. IEEE Access 2017, 5, 5917–5935. [CrossRef]

    203. Maier, M.; Chowdhury, M.; Rimal, B.P.; Van, D.P. The tactile internet: Vision,
    recent progress, and open challenges. IEEE Commun.

    Mag. 2016, 54, 138–145. [CrossRef]

    204. Simsek, M.; Aijaz, A.; Dohler, M.; Sachs, J.; Fettweis, G. 5G-enabled tactile
    internet. IEEE J. Sel. Areas Commun. 2016, 34, 460–473.

    [CrossRef]

    205. Bhushan, N.; Li, J.; Malladi, D.; Gilmore, R.; Brenner, D.; Damnjanovic,
    A.; Sukhavasi, R.T.; Patel, C.; Geirhofer, S. Network

    densiﬁcation: The dominant theme for wireless evolution into 5G. IEEE Commun.
    Mag. 2014, 52, 82–89. [CrossRef]

    206. Agiwal, M.; Roy, A.; Saxena, N. Next generation 5G wireless networks: A comprehensive
    survey. IEEE Commun. Surv. Tutor.

    2016, 18, 1617–1655. [CrossRef]

    207. Hossain, E.; Hasan, M. 5G cellular: Key enabling technologies and research
    challenges. IEEE Instrum. Meas. Mag. 2015, 18, 11–21.

    [CrossRef]

    208. Beyranvand, H.; Lévesque, M.; Maier, M.; Salehi, J.A.; Verikoukis, C.; Tipper,
    D. Toward 5G: FiWi enhanced LTE-A HetNets with

    reliable low-latency ﬁber backhaul sharing and WiFi ofﬂoading. IEEE/ACM Trans.
    Netw. 2016, 25, 690–707. [CrossRef]

    209. Mogensen, P.; Pajukoski, K.; Tiirola, E.; Vihriala, J.; Lahetkangas, E.;
    Berardinelli, G.; Tavares, F.M.; Mahmood, N.H.; Lauridsen,

    M.; Catania, D.; et al. Centimeter-wave concept for 5G ultra-dense small cells.
    In Proceedings of the 2014 IEEE 79th Vehicular

    Technology Conference (VTC Spring), Seoul, Korea, 18–21 May 2014; pp. 1–6.

    210. Ploder, O.; Palaoro, N.; Etzlinger, B.; Springer, A. A cross-layer approach
    for ultra-low-latency machine type communication. In

    Proceedings of the 2017 IEEE International Conference on Communications (ICC),
    Paris, France, 21–25 May 2017; pp. 1–6.

    211. Dutta, S.; Mezzavilla, M.; Ford, R.; Zhang, M.; Rangan, S.; Zorzi, M. Frame
    structure design and analysis for millimeter wave

    cellular systems. IEEE Trans. Wirel. Commun. 2017, 16, 1508–1522. [CrossRef]

    Sensors 2022, 22, 5834

    67 of 76

    212. Luvisotto, M.; Pang, Z.; Dzung, D. Ultra high performance wireless control
    for critical applications: Challenges and directions.

    IEEE Trans. Ind. Inform. 2016, 13, 1448–1459. [CrossRef]

    213. Pﬂug, F.; Fingscheidt, T. Robust ultra-low latency soft-decision decoding
    of linear PCM audio. IEEE Trans. Audio Speech Lang.

    Process. 2013, 21, 2324–2336. [CrossRef]

    214. She, C.; Yang, C.; Quek, T.Q. Radio resource management for ultra-reliable
    and low-latency communications. IEEE Commun.

    Mag. 2017, 55, 72–78. [CrossRef]

    215. Durisi, G.; Koch, T.; Östman, J.; Polyanskiy, Y.; Yang, W. Short-packet communications
    over multiple-antenna Rayleigh-fading

    channels. IEEE Trans. Commun. 2015, 64, 618–629. [CrossRef]

    216. Mao, Y.; You, C.; Zhang, J.; Huang, K.; Letaief, K.B. A survey on mobile
    edge computing: The communication perspective. IEEE

    Commun. Surv. Tutor. 2017, 19, 2322–2358. [CrossRef]

    217. O’Connell, E.; Moore, D.; Newe, T. Challenges associated with implementing
    5G in manufacturing. Telecom 2020, 1, 48–67.

    [CrossRef]

    218. Mikusz, M. Towards an understanding of cyber-physical systems as industrial
    software-product-service systems. Procedia Cirp

    2014, 16, 385–389. [CrossRef]

    219. Mahnke, W.; Leitner, S.H.; Damm, M. OPC Uniﬁed Architecture; Springer Science
    & Business Media: Berlin/Heidelberg, Germany,

    2009.

    220. Tovar, E.; Vasques, F. Real-time ﬁeldbus communications using Proﬁbus networks.
    IEEE Trans. Ind. Electron. 1999, 46, 1241–1251.

    [CrossRef]

    221. Petersen, N.; Halilaj, L.; Grangel-González, I.; Lohmann, S.; Lange, C.;
    Auer, S. Realizing an RDF-based information model for a

    manufacturing company—A case study. In International Semantic Web Conference;
    Springer: Berlin/Heidelberg, Germany, 2017;

    pp. 350–366.

    222. Abele, E.; Wörn, A.; Fleischer, J.; Wieser, J.; Martin, P.; Klöpper, R. Mechanical
    module interfaces for reconﬁgurable machine tools.

    Prod. Eng. 2007, 1, 421–428. [CrossRef]

    223. Lang, D.; Friesen, M.; Ehrlich, M.; Wisniewski, L.; Jasperneite, J. Pursuing
    the vision of Industrie 4.0: Secure plug-and-produce by

    means of the asset administration shell and blockchain technology. In Proceedings
    of the 2018 IEEE 16th International Conference

    on Industrial Informatics (INDIN), Porto, Portugal, 18–20 July 2018; pp. 1092–1097.

    224. Ye, X.; Jiang, J.; Lee, C.; Kim, N.; Yu, M.; Hong, S.H. Toward the Plug-and-Produce
    Capability for Industry 4.0: An Asset

    Administration Shell Approach. IEEE Ind. Electron. Mag. 2020, 14, 146–157. [CrossRef]

    225. Huang, Y.; Dhouib, S.; Malenfant, J. An AAS Modeling Tool for Capability-Based
    Engineering of Flexible Production Lines. In

    Proceedings of the IECON 2021–47th Annual Conference of the IEEE Industrial Electronics
    Society, Toronto, ON, Canada, 13–16

    October 2021; pp. 1–6.

    226. Pisari´c, M.; Dimitrieski, V.; Vještica, M.; Krajoski, G.; Kapetina, M. Towards
    a ﬂexible smart factory with a dynamic resource

    orchestration. Appl. Sci. 2021, 11, 7956. [CrossRef]

    227. Cavalieri, S.; Salaﬁa, M.G. A model for predictive maintenance based on asset
    administration shell. Sensors 2020, 20, 6028.

    [CrossRef]

    228. Wagner, C.; Grothoff, J.; Epple, U.; Drath, R.; Malakuti, S.; Grüner, S.;
    Hoffmeister, M.; Zimermann, P. The role of the Industry 4.0

    asset administration shell and the digital twin during the life cycle of a plant.
    In Proceedings of the 2017 22nd IEEE International

    Conference on Emerging Technologies and Factory Automation (ETFA), Limassol, Cyprus,
    12–15 September 2017; pp. 1–8.

    229. Abramowicz, W.; Auer, S.; Heath, T. Linked data in business. Bus. Inf. Syst.
    Eng. 2016, 58, 323–326. [CrossRef]

    230. Tantik, E.; Anderl, R. Integrated data model and structure for the asset
    administration shell in industrie 4.0. Procedia Cirp 2017,

    60, 86–91. [CrossRef]

    231. Watson, K. AutomationML-Industrie 4.0 Candidate Standard for Asset Model
    Engineering and Plug & Work. OMG Event

    “Model Based Engineering, Automation and IoT in Smart Manufacturing. 2017. Available
    online: https://www.omg.org/events/ca-17

    /special-events/mnf-pdf/Watson.pdf (accessed on 5 June 2022).

    232. Arm, J.; Benesl, T.; Marcon, P.; Bradac, Z.; Schröder, T.; Belyaev, A.; Werner,
    T.; Braun, V.; Kamensky, P.; Zezulka, F.; et al.

    Automated Design and Integration of Asset Administration Shells in Components
    of Industry 4.0.

    Sensors 2021, 21, 2004.

    [CrossRef]

    233. Wei, K.; Sun, J.; Liu, R. A Review of Asset Administration Shell. In Proceedings
    of the 2019 IEEE International Conference on

    Industrial Engineering and Engineering Management (IEEM), Macao, China, 15–18
    December 2019; pp. 1460–1465.

    234. Tantik, E.; Anderl, R. Potentials of the asset administration shell of Industrie
    4.0 for service-oriented business models. Procedia

    CIRP 2017, 64, 363–368. [CrossRef]

    235. Bader, S.R.; Maleshkova, M. The semantic asset administration shell. In International
    Conference on Semantic Systems; Springer:

    Berlin/Heidelberg, Germany, 2019; pp. 159–174.

    236. Grangel-González, I.; Halilaj, L.; Coskun, G.; Auer, S.; Collarana, D.; Hoffmeister,
    M. Towards a semantic administrative shell

    for industry 4.0 components. In Proceedings of the 2016 IEEE Tenth International
    Conference on Semantic Computing (ICSC),

    Laguna Hills, CA, USA, 4–6 February 2016; pp. 230–237.

    237. Langegger, A.; Wöß, W.; Blöchl, M. A semantic web middleware for virtual
    data integration on the web. In European Semantic

    Web Conference; Springer: Berlin/Heidelberg, Germany, 2008; pp. 493–507.

    Sensors 2022, 22, 5834

    68 of 76

    238. Bizer, C.; Becker, C.; Mendes, P.N.; Isele, R.; Matteini, A.; Schultz, A.
    Ldif-a Framework for Large-Scale Linked Data Integra-

    tion. 2012. Available online: https://refubium.fu-berlin.de/bitstream/handle/fub188/14693/Schultz-et-al-LDIF-WWW2012-

    DevTrack.pdf;jsessionid=9AAB1144C935C4FA351A789F5E80885A?sequence=1 (accessed
    on 6 June 2022).

    239. Graube, M.; Pfeffer, J.; Ziegler, J.; Urbas, L. Linked Data as integrating
    technology for industrial data. Int. J. Distrib. Syst. Technol.

    (IJDST) 2012, 3, 40–52. [CrossRef]

    240. Främling, K.; Harrison, M.; Brusey, J.; Petrow, J. Requirements on unique
    identiﬁers for managing product lifecycle information:

    Comparison of alternative approaches. Int. J. Comput. Integr. Manuf. 2007, 20,
    715–726. [CrossRef]

    241. IEC. 62264-1: Enterprise-Control System Integration–Part 1: Models and Terminology;
    IEC: Geneva, Switzerland, 2013.

    242. Greer, C.; Burns, M.; Wollman, D.; Griffor, E. Cyber-Physical Systems and
    Internet of Things; National Institute of Standards and

    Technology (NIST): Gaithersburg, MD, USA, 2019.

    243. Cyber-Physical Systems Driving force for Innovation in Mobility, Health,
    Energy and Production, 2011. Acatech Position Paper.

    Available online: https://en.acatech.de/publication/cyber-physical-systems-driving-force-for-innovation-in-mobility-health-

    energy-and-production/ (accessed on 5 June 2022).

    244. Ma, H.D. Internet of things: Objectives and scientiﬁc challenges. J. Comput.
    Sci. Technol. 2011, 26, 919–924. [CrossRef]

    245. Miorandi, D.; Sicari, S.; De Pellegrini, F.; Chlamtac, I. Internet of things:
    Vision, applications and research challenges. Ad Hoc

    Netw. 2012, 10, 1497–1516. [CrossRef]

    246. Gubbi, J.; Buyya, R.; Marusic, S.; Palaniswami, M. Internet of Things (IoT):
    A vision, architectural elements, and future directions.

    Future Gener. Comput. Syst. 2013, 29, 1645–1660. [CrossRef]

    247. Törngren, M.; Bensalem, S.; Cengarle, M.; McDermid, J.; Passerone, R.; Sangiovanni-Vincentelli,
    A. Cyber-physical european

    roadmap & Strategy. Cyber-Physical European Roadmap and Strategy D5. 1, Tech.
    Rep. 2014. Available online: http://cyphers.eu/

    sites/default/ﬁles/d6.1+2-report.pdf (accessed on 5 June 2022).

    248. Stojmenovic, I.; Zhang, F. Inaugural issue of ‘cyber-physical systems’. Cyber-Phys.
    Syst. 2015, 1, 1–4. [CrossRef]

    249. Lee, E.A. Cyber physical systems: Design challenges. In Proceedings of the
    2008 11th IEEE International Symposium on Object

    and Component-Oriented Real-Time Distributed Computing (ISORC), Orlando, FL, USA,
    5–7 May 2008; pp. 363–369.

    250. Lee, E.A.; Seshia, S.A. Introduction to Embedded Systems: A Cyber-Physical
    Systems Approach; MIT Press: Cambridge, MA, USA,

    2016.

    251. Sha, L.; Gopalakrishnan, S.; Liu, X.; Wang, Q. Cyber-physical systems: A
    new frontier.

    In Proceedings of the 2008 IEEE

    International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing
    (sutc 2008), Taichung, Taiwan, 11–13

    June 2008; pp. 1–9.

    252. Khaitan, S.K.; McCalley, J.D. Design techniques and applications of cyberphysical
    systems: A survey. IEEE Syst. J. 2014, 9, 350–365.

    [CrossRef]

    253. Rad, C.R.; Hancu, O.; Takacs, I.A.; Olteanu, G. Smart monitoring of potato
    crop: A cyber-physical system architecture model in

    the ﬁeld of precision agriculture. Agric. Agric. Sci. Procedia 2015, 6, 73–79.
    [CrossRef]

    254. Song, H.; Rawat, D.B.; Jeschke, S.; Brecher, C. Cyber-Physical Systems: Foundations,
    Principles and Applications; Morgan Kaufmann:

    New York, NY, USA 2016.

    255. Basile, F.; Chiacchio, P.; Coppola, J.; Gerbasio, D. Automated warehouse
    systems: A cyber-physical system perspective. In

    Proceedings of the 2015 IEEE 20th Conference on Emerging Technologies & Factory
    Automation (ETFA), Luxembourg, 8–11

    September 2015; pp. 1–4.

    256. Wiesner, S.; Marilungo, E.; Thoben, K.D. Cyber-physical product-service systems–challenges
    for requirements engineering. Int. J.

    Autom. Technol. 2017, 11, 17–28. [CrossRef]

    257. Wang, L. An overview of function block enabled adaptive process planning
    for machining. J. Manuf. Syst. 2015, 35, 10–25.

    [CrossRef]

    258. Onori, M.; Lohse, N.; Barata, J.; Hanisch, C. The IDEAS project: Plug & produce
    at shop-ﬂoor level. Assem. Autom. 2012, 32,

    124–134.

    259. Ribeiro, L.; Barata, J.; Ferreira, J. An agent-based interaction-oriented
    shop ﬂoor to support emergent diagnosis. In Proceedings

    of the 2010 8th IEEE International Conference on Industrial Informatics, Osaka,
    Japan, 13–16 July 2010; pp. 189–194.

    260. Ferreira, P.; Lohse, N.; Ratchev, S. Multi-agent architecture for reconﬁguration
    of precision modular assembly systems. In

    International Precision Assembly Seminar; Springer: Berlin/Heidelberg, Germany,
    2010; pp. 247–254.

    261. Ribeiro, L.; Barata, J.; Onori, M.; Hanisch, C.; Hoos, J.; Rosa, R. Self-organization
    in automation-the IDEAS pre-demonstrator. In

    Proceedings of the IECON 2011-37th Annual Conference of the IEEE Industrial Electronics
    Society, Melbourne, VIC, Australia,

    7–10 November 2011; pp. 2752–2757.

    262. Onori, M.; Maffei, A.; Durand, F. The ideas plug & produce system. In Proceedings
    of the NewTech 2013 Advanced Manufacturing

    Engineering and Technologies, Stockholm, Sweden, 27–30 October 2013; pp. 339–346.

    263. Grieves, M. Virtually Perfect: Driving Innovative and Lean Products through
    Product Lifecycle Management; Space Coast Press: New

    York, NY, USA 2011.

    264. Främling, K.; Holmström, J.; Ala-Risku, T.; Kärkkäinen, M. Product Agents
    for Handling Information about Physical Objects.

    Rep. Lab. Inf. Process. Sci. Ser. B TKO-B 2003, 153. Available online: https://www.academia.edu/download/43082106/B153.pdf

    (accessed on 5 June 2022).

    Sensors 2022, 22, 5834

    69 of 76

    265. Shafto, M.; Conroy, M.; Doyle, R.; Glaessgen, E.; Kemp, C.; LeMoigne, J.;
    Wang, L. Modeling, simulation, information technology

    & processing roadmap. Natl. Aeronaut. Space Adm. 2012, 32, 1–38.

    266. Grieves, M. Digital twin: Manufacturing excellence through virtual factory
    replication. White Pap. 2014, 1, 1–7.

    267. El Saddik, A. Digital twins: The convergence of multimedia technologies.
    IEEE Multimed. 2018, 25, 87–92. [CrossRef]

    268. Söderberg, R.; Wärmefjord, K.; Carlson, J.S.; Lindkvist, L. Toward a Digital
    Twin for real-time geometry assurance in individual-

    ized production. CIRP Ann. 2017, 66, 137–140. [CrossRef]

    269. Schroeder, G.N.; Steinmetz, C.; Pereira, C.E.; Espindola, D.B. Digital twin
    data modeling with automationml and a communication

    methodology for data exchange. IFAC-PapersOnLine 2016, 49, 12–17. [CrossRef]

    270. Guo, N.; Jia, C. Interpretation of cyber-physical systems whitepaper (2017).
    Inf. Technol. Stand. 2017, 4, 36–47.

    271. Leng, J.; Wang, D.; Shen, W.; Li, X.; Liu, Q.; Chen, X. Digital twins-based
    smart manufacturing system design in Industry 4.0: A

    review. J. Manuf. Syst. 2021, 60, 119–137. [CrossRef]

    272. Predix, G. Predix: The Application Platform for Digital Industrial Solutions.

    User Manual 2018. Available online: https:

    //usermanual.wiki/m/c973d726f3ff05399ed19d085fa013709d3ac98f140d4ec8c79939b6401bf4a8.pdf
    (accessed on 5 June 2022).

    273. Overton, J.; Brigham, J.C.

    The Digital Twin: Data Driven Simulations Innovate the Manufacturing Process.

    White Pap.

    2017. Available online: http://www.dxc.technology/analytics/insights/1%38984-the_digital_twin_data_driven_simulations_

    innovate_the_manufacturing_process (accessed on 5 June 2022).

    274. Židek, K.; Pitel’, J.; Adámek, M.; Lazorík, P.; Hošovsk`y, A. Digital twin
    of experimental smart manufacturing assembly system

    for industry 4.0 concept. Sustainability 2020, 12, 3658. [CrossRef]

    275. Hu, L.; Nguyen, N.T.; Tao, W.; Leu, M.C.; Liu, X.F.; Shahriar, M.R.; Al Sunny,
    S.N. Modeling of cloud-based digital twins for

    smart manufacturing with MT connect. Procedia Manuf. 2018, 26, 1193–1203. [CrossRef]

    276. Industrial Internet Consortium. Digital Twins for Industrial Applications:
    Deﬁnition, Buisiness Values, Design Aspects, Standards

    and Use Cases. IIC. 2020. Available online: https://www.researchgate.net/publication/339460951
    (accessed on 5 June 2022).

    277. Rittinghouse, J.W.; Ransome, J.F. Cloud Computing: Implementation, Management,
    and Security; CRC Press: Boca Raton, FL, USA,

    2017.

    278. Rüßmann, M.; Lorenz, M.; Gerbert, P.; Waldner, M.; Justus, J.; Engel, P.;
    Harnisch, M. Industry 4.0: The future of productivity and

    growth in manufacturing industries. Boston Consult. Group 2015, 9, 54–89.

    279. Biron, K.; Bazzaza, W.; Yaqoob, K.; Gawanmeh, A.; Fachkha, C. A big data
    fusion to proﬁle CPS security threats against

    operational technology. In Proceedings of the 2020 IEEE 21st International Symposium
    on “A World of Wireless, Mobile and

    Multimedia Networks” (WoWMoM), Cork, Ireland, 31 August–3 September 2020; pp.
    397–402.

    280. LLC, P.I. Cybersecurity in Operational Technology: 7 Insights You Need to
    Know. Technical Report, Tenable. 2019. Available

    online: https://lookbook.tenable.com/ponemonotreport/ponemon-OT-report (accessed
    on 5 June 2022).

    281. Furht, B.; Escalante, A. Handbook of Cloud Computing; Springer: Berlin/Heidelberg,
    Germany, 2010; Volume 3.

    282. Weiner, M.; Jorgovanovic, M.; Sahai, A.; Nikolié, B. Design of a low-latency,
    high-reliability wireless communication system

    for control applications. In Proceedings of the 2014 IEEE International Conference
    on Communications (ICC), Sydney, NSW,

    Australia, 10–14 June 2014; pp. 3829–3835.

    283. De Brito, M.S.; Hoque, S.; Steinke, R.; Willner, A. Towards programmable
    fog nodes in smart factories. In Proceedings of the

    2016 IEEE 1st International Workshops on Foundations and Applications of Self*
    Systems (FAS* W), Augsburg, Germany, 12–16

    September 2016; pp. 236–241.

    284. OpenFog Consortium Architecture Working Group. OpenFog reference architecture
    for fog computing. OPFRA 2017, 20817, 162.

    285. Bonomi, F.; Milito, R.; Zhu, J.; Addepalli, S. Fog computing and its role
    in the internet of things. In Proceedings of the First

    Edition of the MCC Workshop on Mobile Cloud Computing, Helsinki, Finland, 17 August
    2012; pp. 13–16.

    286. Shi, W.; Cao, J.; Zhang, Q.; Li, Y.; Xu, L. Edge computing: Vision and challenges.

    IEEE Internet Things J. 2016, 3, 637–646.

    [CrossRef]

    287. Dastjerdi, A.V.; Gupta, H.; Calheiros, R.N.; Ghosh, S.K.; Buyya, R. Fog computing:
    Principles, architectures, and applications. In

    Internet of Things; Elsevier: Amsterdam, The Netherlands, 2016; pp. 61–75.

    288. Pizo´n, J.; Lipski, J. Perspectives for fog computing in manufacturing. Appl.
    Comput. Sci. 2016, 12, 37–46.

    289. Seitz, A.; Buchinger, D.; Bruegge, B. The conjunction of fog computing and
    the industrial internet of things-an applied approach.

    In Proceedings of the 2018 IEEE International Conference on Pervasive Computing
    and Communications Workshops (PerCom

    Workshops), Athens, Greece, 19–23 March 2018; pp. 812–817.

    290. Chang, Q.; Ni, J.; Bandyopadhyay, P.; Biller, S.; Xiao, G. Supervisory factory
    control based on real-time production feedback. J.

    Manuf. Sci. Eng. 2007, 129, 653–660. [CrossRef]

    291. Li, J.; Meerkov, S.M. Production Systems Engineering; Springer Science &
    Business Media: Berlin/Heidelberg, Germany, 2008.

    292. Tenenbaum, J.B.; Kemp, C.; Grifﬁths, T.L.; Goodman, N.D. How to grow a mind:
    Statistics, structure, and abstraction. Science

    2011, 331, 1279–1285. [CrossRef]

    293. Poole, D.; Mackworth, A.; Goebel, R. Computational Intelligence: A Logical
    Approach; Oxford University Press: Oxford, UK, 1998.

    294. Stuart, R.; Peter, N. Artiﬁcial Intelligence—A Modern Approach, 3rd ed.;
    Pearson: New York, NY, USA 2016.

    295. Jordan, M.I.; Mitchell, T.M. Machine learning: Trends, perspectives, and
    prospects. Science 2015, 349, 255–260. [CrossRef]

    296. Samuel, A.L. Some studies in machine learning using the game of checkers.
    IBM J. Res. Dev. 2000, 44, 206–226. [CrossRef]

    Sensors 2022, 22, 5834

    70 of 76

    297. Michalski, R.S.; Carbonell, J.G.; Mitchell, T.M. Machine Learning: An Artiﬁcial
    Intelligence Approach; Springer Science & Business

    Media: Berlin/Heidelberg, Germany, 2013.

    298. Sharp, M.; Ak, R.; Hedberg, T., Jr. A survey of the advancing use and development
    of machine learning in smart manufacturing.

    J. Manuf. Syst. 2018, 48, 170–179. [CrossRef] [PubMed]

    299. Nti, I.K.; Adekoya, A.F.; Weyori, B.A.; Nyarko-Boateng, O. Applications of
    artiﬁcial intelligence in engineering and manufacturing:

    A systematic review. J. Intell. Manuf. 2022, 33, 1581–1601. [CrossRef]

    300. Wang, J.; Ma, Y.; Zhang, L.; Gao, R.X.; Wu, D. Deep learning for smart manufacturing:
    Methods and applications. J. Manuf. Syst.

    2018, 48, 144–156. [CrossRef]

    301. Abadi, M.; Agarwal, A.; Barham, P.; Brevdo, E.; Chen, Z.; Citro, C.; Corrado,
    G.S.; Davis, A.; Dean, J.; Devin, M.; et al. Tensorﬂow:

    Large-scale machine learning on heterogeneous distributed systems. arXiv 2016,
    arXiv:1603.04467.

    302. Schmidhuber, J. Deep learning in neural networks: An overview. Neural Netw.
    2015, 61, 85–117. [CrossRef]

    303. Rumelhart, D.E.; Hinton, G.E.; Williams, R.J. Learning representations by
    back-propagating errors. Nature 1986, 323, 533–536.

    [CrossRef]

    304. LeCun, Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444.
    [CrossRef]

    305. Bengio, Y. Learning Deep Architectures for AI; Now Publishers Inc.: Delft,
    The Netherlands 2009.

    306. Bengio, Y. Deep learning of representations: Looking forward. In International
    Conference on Statistical Language and Speech

    Processing; Springer: Berlin/Heidelberg, Germany, 2013; pp. 1–37.

    307. Bengio, Y.; Courville, A.; Vincent, P. Representation learning: A review
    and new perspectives. IEEE Trans. Pattern Anal. Mach.

    Intell. 2013, 35, 1798–1828. [CrossRef]

    308. Deng, L. A tutorial survey of architectures, algorithms, and applications
    for deep learning. APSIPA Trans. Signal Inf. Process.

    2014, 3. [CrossRef]

    309. Krizhevsky, A.; Sutskever, I.; Hinton, G.E. Imagenet classiﬁcation with deep
    convolutional neural networks. Adv. Neural Inf.

    Process. Syst. 2012, 25. [CrossRef]

    310. Szegedy, C.; Liu, W.; Jia, Y.; Sermanet, P.; Reed, S.; Anguelov, D.; Erhan,
    D.; Vanhoucke, V.; Rabinovich, A. Going deeper with

    convolutions. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Boston, MA, USA, 7–12 June

    2015; pp. 1–9.

    311. Collobert, R.; Weston, J.; Bottou, L.; Karlen, M.; Kavukcuoglu, K.; Kuksa,
    P. Natural language processing (almost) from scratch. J.

    Mach. Learn. Res. 2011, 12, 2493–2537.

    312. Sutskever, I.; Vinyals, O.; Le, Q.V. Sequence to sequence learning with neural
    networks. Adv. Neural Inf. Process. Syst. 2014, 27.

    [CrossRef]

    313. Lin, L.; Wang, K.; Zuo, W.; Wang, M.; Luo, J.; Zhang, L. A deep structured
    model with radius–margin bound for 3D human

    activity recognition. Int. J. Comput. Vis. 2016, 118, 256–273. [CrossRef]

    314. Cao, S.; Nevatia, R. Exploring deep learning based solutions in ﬁne grained
    activity recognition in the wild. In Proceedings of the

    2016 23rd International Conference on Pattern Recognition (ICPR), Cancun, Mexico,
    4–8 December 2016; pp. 384–389.

    315. Ouyang, W.; Zeng, X.; Wang, X.; Qiu, S.; Luo, P.; Tian, Y.; Li, H.; Yang,
    S.; Wang, Z.; Li, H.; et al. DeepID-Net: Object detection

    with deformable part based convolutional neural networks. IEEE Trans. Pattern
    Anal. Mach. Intell. 2016, 39, 1320–1334. [CrossRef]

    316. Diba, A.; Sharma, V.; Pazandeh, A.; Pirsiavash, H.; Van Gool, L. Weakly supervised
    cascaded convolutional networks. In Pro-

    ceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Honolulu,
    HI, USA, 21–26 July 2017; pp. 914–922.

    317. Long, J.; Shelhamer, E.; Darrell, T. Fully convolutional networks for semantic
    segmentation.

    In Proceedings of the IEEE

    Conference on Computer Vision and Pattern Recognition, Boston, MA, USA, 7–12 June
    2015; pp. 3431–3440.

    318. Noh, H.; Hong, S.; Han, B. Learning deconvolution network for semantic segmentation.
    In Proceedings of the IEEE International

    Conference on Computer Vision, Santiago, Chile, 3–7 December 2015; pp. 1520–1528.

    319. Chen, X.; Yuille, A.L. Articulated pose estimation by a graphical model with
    image dependent pairwise relations. Adv. Neural Inf.

    Process. Syst. 2014, 27. [CrossRef]

    320. Toshev, A.; Szegedy, C. Deeppose: Human pose estimation via deep neural networks.
    In Proceedings of the IEEE Conference on

    Computer Vision and Pattern Recognition, Columbus, OH, USA, 23–28 June 2014; pp.
    1653–1660.

    321. Baryannis, G.; Validi, S.; Dani, S.; Antoniou, G. Supply chain risk management
    and artiﬁcial intelligence: State of the art and

    future research directions. Int. J. Prod. Res. 2019, 57, 2179–2202. [CrossRef]

    322. Zhang, X.; Ming, X.; Liu, Z.; Yin, D.; Chen, Z.; Chang, Y. A reference framework
    and overall planning of industrial artiﬁcial

    intelligence (I-AI) for new application scenarios. Int. J. Adv. Manuf. Technol.
    2019, 101, 2367–2389. [CrossRef]

    323. Aggour, K.S.; Gupta, V.K.; Ruscitto, D.; Ajdelsztajn, L.; Bian, X.; Brosnan,
    K.H.; Kumar, N.C.; Dheeradhada, V.; Hanlon, T.; Iyer, N.;

    et al. Artiﬁcial intelligence/machine learning in manufacturing and inspection:
    A GE perspective. MRS Bull. 2019, 44, 545–558.

    [CrossRef]

    324. Tao, F.; Qi, Q.; Liu, A.; Kusiak, A. Data-driven smart manufacturing. J.
    Manuf. Syst. 2018, 48, 157–169. [CrossRef]

    325. Zhang, Y.; Kwok, T.H. Design and interaction interface using augmented reality
    for smart manufacturing. Procedia Manuf. 2018,

    26, 1278–1286. [CrossRef]

    326. Yao, X.; Zhou, J.; Zhang, J.; Boër, C.R. From intelligent manufacturing to
    smart manufacturing for industry 4.0 driven by next

    generation artiﬁcial intelligence and further on. In Proceedings of the 2017 5th
    International Conference on Enterprise Systems

    (ES), Beijing, China, 22–24 September 2017; pp. 311–318.

    Sensors 2022, 22, 5834

    71 of 76

    327. Yang, R.; Singh, S.K.; Tavakkoli, M.; Amiri, N.; Yang, Y.; Karami, M.A.;
    Rai, R. CNN-LSTM deep learning architecture for

    computer vision-based modal frequency detection. Mech. Syst. Signal Process. 2020,
    144, 106885. [CrossRef]

    328. Park, J.K.; Kwon, B.K.; Park, J.H.; Kang, D.J. Machine learning-based imaging
    system for surface defect inspection. Int. J. Precis.

    Eng. Manuf.-Green Technol. 2016, 3, 303–310. [CrossRef]

    329. Ravikumar, S.; Ramachandran, K.; Sugumaran, V. Machine learning approach
    for automated visual inspection of machine

    components. Expert Syst. Appl. 2011, 38, 3260–3266. [CrossRef]

    330. Matei, I.; de Kleer, J.; Feldman, A.; Rai, R.; Chowdhury, S. Hybrid modeling:
    Applications in real-time diagnosis. arXiv 2020,

    arXiv:2003.02671.

    331. George, A.; Vidyapeetham, A.

    Anomaly detection based on machine learning dimensionality reduction using PCA
    and

    classiﬁcation using SVM. Int. J. Comput. Appl. 2012, 47, 5–8. [CrossRef]

    332. Kroll, B.; Schaffranek, D.; Schriegel, S.; Niggemann, O. System modeling
    based on machine learning for anomaly detection and

    predictive maintenance in industrial plants. In Proceedings of the 2014 IEEE Emerging
    Technology and Factory Automation

    (ETFA), Barcelona, Spain, 16–19 September 2014; pp. 1–7.

    333. Carbery, C.M.; Woods, R.; Marshall, A.H. A Bayesian network based learning
    system for modelling faults in large-scale

    manufacturing. In Proceedings of the 2018 IEEE International Conference on Industrial
    Technology (ICIT), Lyon, France, 20–22

    February 2018; pp. 1357–1362.

    334. Wang, G.; Ledwoch, A.; Hasani, R.M.; Grosu, R.; Brintrup, A. A generative
    neural network model for the quality prediction of

    work in progress products. Appl. Soft Comput. 2019, 85, 105683. [CrossRef]

    335. Chen, L.; Han, W.; Li, H.T.; Xu, Z.K.; Zhang, J.W.; Cao, X. Long distance
    wireless fault diagnosis for photovoltaic modules based

    on back propagation neural network. Int. J. Electr. Eng. Educ. 2020. [CrossRef]

    336. Wuest, T.; Irgens, C.; Thoben, K.D. An approach to monitoring quality in
    manufacturing using supervised machine learning on

    product state data. J. Intell. Manuf. 2014, 25, 1167–1180. [CrossRef]

    337. Carbery, C.M.; Woods, R.; Marshall, A.H. A new data analytics framework emphasising
    preprocessing of data to generate insights

    into complex manufacturing systems. Proc. Inst. Mech. Eng. Part C J. Mech. Eng.
    Sci. 2019, 233, 6713–6726. [CrossRef]

    338. Peres, R.S.; Barata, J.; Leitao, P.; Garcia, G. Multistage quality control
    using machine learning in the automotive industry. IEEE

    Access 2019, 7, 79908–79916. [CrossRef]

    339. Appiah, A.Y.; Zhang, X.; Ayawli, B.B.K.; Kyeremeh, F. Long short-term memory
    networks based automatic feature extraction for

    photovoltaic array fault diagnosis. IEEE Access 2019, 7, 30089–30101. [CrossRef]

    340. Chen, S.; Leng, Y.; Labi, S. A deep learning algorithm for simulating autonomous
    driving considering prior knowledge and

    temporal information. Comput.-Aided Civ. Infrastruct. Eng. 2020, 35, 305–321.
    [CrossRef]

    341. Cho, K.H.; Jo, H.C.; Kim, E.s.; Park, H.A.; Park, J.H. Failure diagnosis
    method of photovoltaic generator using support vector

    machine. J. Electr. Eng. Technol. 2020, 15, 1669–1680. [CrossRef]

    342. Subrahmanya, N.; Shin, Y.C.; Meckl, P.H. A Bayesian machine learning method
    for sensor selection and fusion with application

    to on-board fault diagnostics. Mech. Syst. Signal Process. 2010, 24, 182–192.
    [CrossRef]

    343. Li, Y.; Zou, L.; Jiang, L.; Zhou, X. Fault diagnosis of rotating machinery
    based on combination of deep belief network and

    one-dimensional convolutional neural network. IEEE Access 2019, 7, 165710–165723.
    [CrossRef]

    344. Kateris, D.; Moshou, D.; Pantazi, X.E.; Gravalos, I.; Sawalhi, N.; Loutridis,
    S. A machine learning approach for the condition

    monitoring of rotating machinery. J. Mech. Sci. Technol. 2014, 28, 61–71. [CrossRef]

    345. Lei, Y.; Jia, F.; Lin, J.; Xing, S.; Ding, S.X. An intelligent fault diagnosis
    method using unsupervised feature learning towards

    mechanical big data. IEEE Trans. Ind. Electron. 2016, 63, 3137–3147. [CrossRef]

    346. Lu, W.; Liang, B.; Cheng, Y.; Meng, D.; Yang, J.; Zhang, T. Deep model based
    domain adaptation for fault diagnosis. IEEE Trans.

    Ind. Electron. 2016, 64, 2296–2305. [CrossRef]

    347. Mwedzi, N.A.; Nwulu, N.I.; Gbadamosi, S.L. Machine learning applications
    for ﬁre detection in a residential building. In

    Proceedings of the 2019 IEEE 6th International Conference on Engineering Technologies
    and Applied Sciences (ICETAS), Kuala

    Lumpur, Malaysia, 20–21 December 2019; pp. 1–4.

    348. Zhang, X.; Chen, W.; Wang, B.; Chen, X. Intelligent fault diagnosis of rotating
    machinery using support vector machine with ant

    colony algorithm for synchronous feature selection and parameter optimization.
    Neurocomputing 2015, 167, 260–279. [CrossRef]

    349. Patel, R.A.; Bhalja, B.R. Condition monitoring and fault diagnosis of induction
    motor using support vector machine. Electr. Power

    Components Syst. 2016, 44, 683–692. [CrossRef]

    350. Liu, Y.; Jin, S. Application of Bayesian networks for diagnostics in the
    assembly process by considering small measurement data

    sets. Int. J. Adv. Manuf. Technol. 2013, 65, 1229–1237. [CrossRef]

    351. Sayed, M.S.; Lohse, N. Distributed Bayesian diagnosis for modular assembly
    systems—A case study. J. Manuf. Syst. 2013,

    32, 480–488. [CrossRef]

    352. Rost, A.; Schädle, S. The sls-generated soft robotic hand-an integrated approach
    using additive manufacturing and reinforcement

    learning. In Proceedings of the 2013 12th International Conference on Machine
    Learning and Applications, Miami, FL, USA, 4–7

    December 2013; Volume 1, pp. 215–220.

    353. Mark, A. Reinforcement Learning: MDP applied to autonomous navigation. Mach.
    Learn. Appl. Int. J. 2017, 4, 1–10.

    354. Eliseeva, O.; Kirk, T.; Samimi, P.; Malak, R.; Arróyave, R.; Elwany, A.;
    Karaman, I. Functionally Graded Materials through

    robotics-inspired path planning. Mater. Des. 2019, 182, 107975. [CrossRef]

    Sensors 2022, 22, 5834

    72 of 76

    355. Fan, Z.; Liu, R. Investigation of machine learning based network trafﬁc classiﬁcation.
    In Proceedings of the 2017 International

    Symposium on Wireless Communication Systems (ISWCS), Bologna, Italy, 28–31 August
    2017; pp. 1–6.

    356. Milosevic, N.; Dehghantanha, A.; Choo, K.K.R. Machine learning aided Android
    malware classiﬁcation. Comput. Electr. Eng.

    2017, 61, 266–274. [CrossRef]

    357. Wei, L.; Luo, W.; Weng, J.; Zhong, Y.; Zhang, X.; Yan, Z. Machine learning-based
    malicious application detection of android. IEEE

    Access 2017, 5, 25591–25601. [CrossRef]

    358. Sahu, C.K.; Young, C.; Rai, R. Artiﬁcial intelligence (AI) in augmented reality
    (AR)-assisted manufacturing applications: A review.

    Int. J. Prod. Res. 2021, 59, 4903–4959. [CrossRef]

    359. Badesa, F.J.; Morales, R.; Garcia-Aracil, N.; Sabater, J.M.; Casals, A.;
    Zollo, L. Auto-adaptive robot-aided therapy using machine

    learning techniques. Comput. Methods Programs Biomed. 2014, 116, 123–130. [CrossRef]

    360. Yang, Q.; Liu, Y.; Chen, T.; Tong, Y. Federated machine learning: Concept
    and applications. ACM Trans. Intell. Syst. Technol.

    (TIST) 2019, 10, 1–19. [CrossRef]

    361. Geva, Amir B Hierarchical unsupervised fuzzy clustering IEEE Trans. Fuzzy
    Syst. 1999, 7, 723–733. [CrossRef]

    362. Colgan, J.; Chin, H.; Danai, K.; Hayashi, S. On-line tool breakage detection
    in turning: A multi-sensor method. J. Eng. Ind. 1994,

    116, 117–123. [CrossRef]

    363. Emel, E.; Kannatey-Asibu, E., Jr. Tool failure monitoring in turning by pattern
    recognition analysis of AE signals. J. Eng. Ind.

    1988, 110, 137–145. [CrossRef]

    364. Du, R.; Yan, D.; Elbestawi, M. Time-frequency distribution of acoustic emission
    signals for tool wear detection in turning.

    In Proceedings of the 4th World Meeting on Acoustic Emission and 1st International
    Conference on Acoustic Emission in

    Manufacturing, Boston, MA, USA, 16–19 September 1991; pp. 269–285.

    365. Dornfeld, D.A.; DeVries, M. Neural network sensor fusion for tool condition
    monitoring. CIRP Ann. 1990, 39, 101–105. [CrossRef]

    366. Dornfeld, A,D. In process recognition of cutting states. JSME Int. J. Ser.
    C Dyn. Control. Robot. Des. Manuf. 1994, 37, 638–650.

    [CrossRef]

    367. Tan, B.; Gershwin, S.B. Analysis of a general Markovian two-stage continuous-ﬂow
    production system with a ﬁnite buffer. Int. J.

    Prod. Econ. 2009, 120, 327–339. [CrossRef]

    368. Wu, K.; McGinnis, L. Performance evaluation for general queueing networks
    in manufacturing systems: Characterizing the

    trade-off between queue time and utilization. Eur. J. Oper. Res. 2012, 221, 328–339.
    [CrossRef]

    369. Gershwin, S.B.; Werner, L.M. An approximate analytical method for evaluating
    the performance of closed-loop ﬂow systems

    with unreliable machines and ﬁnite buffers. Int. J. Prod. Res. 2007, 45, 3085–3111.
    [CrossRef]

    370. Colledani, M.; Gershwin, S.B. A decomposition method for approximate evaluation
    of continuous ﬂow multi-stage lines with

    general Markovian machines. Ann. Oper. Res. 2013, 209, 5–40. [CrossRef]

    371. Liu, Y.; Li, J.; Chiang, S.Y. Re-entrant lines with unreliable asynchronous
    machines and ﬁnite buffers: Performance approximation

    and bottleneck identiﬁcation. Int. J. Prod. Res. 2012, 50, 977–990. [CrossRef]

    372. Zou, J.; Chang, Q.; Lei, Y.; Arinez, J. Production system performance identiﬁcation
    using sensor data. IEEE Trans. Syst. Man

    Cybern. Syst. 2016, 48, 255–264. [CrossRef]

    373. Zou, J.; Chang, Q.; Arinez, J.; Xiao, G. Production performance prognostics
    through model-based analytical method and

    recency-weighted stochastic approximation method. J. Manuf. Syst. 2018, 47, 107–114.
    [CrossRef]

    374. Priore, P.; Ponte, B.; Puente, J.; Gómez, A. Learning-based scheduling of
    ﬂexible manufacturing systems using ensemble methods.

    Comput. Ind. Eng. 2018, 126, 282–291. [CrossRef]

    375. Ji, W.; Wang, L. Big data analytics based fault prediction for shop ﬂoor
    scheduling. J. Manuf. Syst. 2017, 43, 187–194. [CrossRef]

    376. Ozdemir, R.; Koc, M. A Quality Control Application on a Smart Factory Prototype
    Using Deep Learning Methods. In Proceedings

    of the 2019 IEEE 14th International Conference on Computer Sciences and Information
    Technologies (CSIT), Lviv, Ukraine, 17–20

    September 2019; Volume 1, pp. 46–49. [CrossRef]

    377. Park, S.; Li, G.; Hong, J. A study on smart factory-based ambient intelligence
    context-aware intrusion detection system using

    machine learning. J. Ambient Intell. Humaniz. Comput. 2020, 11, 1405–1412. [CrossRef]

    378. De Boer, E.; Leurent, H.; Widmer, A. Lighthouse manufacturers lead the way—Can
    the rest of the world keep up. McKinsey Q.

    2019, 1, 1–8.

    379. Betti, F.; de Boer, E.; Giraud, Y. Industry’s Fast-Mover Advantage: Enterprise
    Value from Digital Factories; World Economic Forum and

    McKinsey & Company: Atlanta, GA, USA, 2020.

    380. Vukoli´c, M. Rethinking permissioned blockchains. In Proceedings of the ACM
    Workshop on Blockchain, Cryptocurrencies and

    Contracts, Abu Dhabi, United Arab Emirates, 2–6 April 2017; pp. 3–7.

    381. Beck, R.; Stenum Czepluch, J.; Lollike, N.; Malone, S. Blockchain–the Gateway
    to Trust-Free Cryptographic Transactions. 2016.

    Available online: https://www.researchgate.net/publication/302589859_BLOCKCHAIN_-_THE_GATEWAY_TO_TRUST-FREE_

    CRYPTOGRAPHIC_TRANSACTIONS/stats (accessed on 5 June 2022).

    382. Yue, X.; Wang, H.; Jin, D.; Li, M.; Jiang, W. Healthcare data gateways: Found
    healthcare intelligence on blockchain with novel

    privacy risk control. J. Med. Syst. 2016, 40, 1–8. [CrossRef]

    383. Holland, M.; Stjepandi´c, J.; Nigischer, C. Intellectual property protection
    of 3D print supply chain with blockchain technology.

    In Proceedings of the 2018 IEEE International conference on engineering, technology
    and innovation (ICE/ITMC), Stuttgart,

    Germany, 17–20 June 2018; pp. 1–8.

    Sensors 2022, 22, 5834

    73 of 76

    384. Kumar, N.M.; Mallick, P.K. Blockchain technology for security issues and
    challenges in IoT. Procedia Comput. Sci. 2018,

    132, 1815–1823. [CrossRef]

    385. Azuma, R.; Baillot, Y.; Behringer, R.; Feiner, S.; Julier, S.; MacIntyre,
    B. Recent advances in augmented reality. IEEE Comput. Graph.

    Appl. 2001, 21, 34–47. [CrossRef]

    386. Haller, M.; Billinghurst, M.; Thomas, B. Emerging Technologies of Augmented
    Reality: Interfaces and Design: Interfaces and Design; IGI

    Global: London, UK, 2006.

    387. Berning, M.; Riedel, T.; Karl, D.; Schandinat, F.; Beigl, M.; Fantana, N.
    Augmented service in the factory of the future. In

    Proceedings of the 2012 Ninth International Conference on Networked Sensing (INSS),
    Antwerp, Belgium, 11–14 June 2012;

    pp. 1–2.

    388. Hakkarainen, M.; Woodward, C.; Billinghurst, M. Augmented assembly using
    a mobile phone. In Proceedings of the 2008 7th

    IEEE/ACM International Symposium on Mixed and Augmented Reality, Cambridge, UK,
    15–18 September 2008; pp. 167–168.

    389. Stutzman, B.; Nilsen, D.; Broderick, T.; Neubert, J. MARTI: Mobile augmented
    reality tool for industry. In Proceedings of the

    2009 WRI World Congress on Computer Science and Information Engineering, Los Angeles,
    CA, USA, 31 March–2 April 2009;

    Volume 5, pp. 425–429.

    390. Xin, M.; Sharlin, E.; Sousa, M.C. Napkin sketch: Handheld mixed reality 3D
    sketching.

    In Proceedings of the 2008 ACM

    Symposium on Virtual Reality Software and Technology, Bordeaux, France, 27–29
    October 2008; pp. 223–226.

    391. Valentini, P.P. Interactive virtual assembling in augmented reality. Int.
    J. Interact. Des. Manuf. (IJIDeM) 2009, 3, 109–119. [CrossRef]

    392. Chen, C.; Ong, S.; Nee, A.; Zhou, Y. Haptic-based interactive path planning
    for a virtual robot arm. Int. J. Interact. Des. Manuf.

    (IJIDeM) 2010, 4, 113–123. [CrossRef]

    393. Navab, N. Developing killer apps for industrial augmented reality. IEEE Comput.
    Graph. Appl. 2004, 24, 16–20. [CrossRef]

    [PubMed]

    394. Novak-Marcincin, J.; Barna, J.; Janak, M.; Novakova-Marcincinova, L.; Torok,
    J. Visualization of intelligent assembling process by

    augmented reality tools application. In Proceedings of the 2012 4th IEEE International
    Symposium on Logistics and Industrial

    Informatics, Smolenice, Slovakia, 5–7 September 2012; pp. 33–36.

    395. Fruend, J.; Matysczok, C.; Radkowski, R. AR-based product design in automobile
    industry. In Proceedings of the First IEEE

    International Workshop Agumented Reality Toolkit, Darmstadt, Germany, 29 September
    2002; p. 2.

    396. Gausenmeier, J.; Matysczok, C.; Radkowski, R. AR-based modular construction
    system for automobile advance development. In

    Proceedings of the 2003 IEEE International Augmented Reality Toolkit Workshop,
    Tokyo, Japan, 7 October 2003; pp. 72–73.

    397. Park, H.S.; Choi, H.W.; Park, J.W. Augmented reality based cockpit module
    assembly system. In Proceedings of the 2008

    International Conference on Smart Manufacturing Application, Goyangi, Korea, 9–11
    April 2008; pp. 130–135.

    398. Fraga-Lamas, P.; Fernandez-Carames, T.M.; Blanco-Novoa, O.; Vilar-Montesinos,
    M.A. A review on industrial augmented reality

    systems for the industry 4.0 shipyard. IEEE Access 2018, 6, 13358–13375. [CrossRef]

    399. Kalkofen, D.; Veas, E.; Zollmann, S.; Steinberger, M.; Schmalstieg, D. Adaptive
    ghosted views for augmented reality.

    In

    Proceedings of the 2013 IEEE International Symposium on Mixed and Augmented Reality
    (ISMAR), Adelaide, SA, Australia, 1–4

    October 2013; pp. 1–9.

    400. Flatt, H.; Koch, N.; Röcker, C.; Günter, A.; Jasperneite, J. A context-aware
    assistance system for maintenance applications in smart

    factories based on augmented reality and indoor localization. In Proceedings of
    the 2015 IEEE 20th Conference on Emerging

    Technologies & Factory Automation (ETFA), Luxembourg, 8–11 September 2015; pp.
    1–4.

    401. Loch, F.; Quint, F.; Brishtel, I. Comparing video and augmented reality assistance
    in manual assembly. In Proceedings of the 2016

    12th International Conference on Intelligent Environments (IE), London, UK, 14–16
    September 2016; pp. 147–150.

    402. Aiteanu, D.; Hillers, B.; Graser, A. A step forward in manual welding: Demonstration
    of augmented reality helmet.

    In

    Proceedings of the Second IEEE and ACM International Symposium on Mixed and Augmented
    Reality, Tokyo, Japan, 10 October

    2003; pp. 309–310.

    403. Andersen, R.S.; Bøgh, S.; Moeslund, T.B.; Madsen, O. Task space HRI for cooperative
    mobile robots in ﬁt-out operations

    inside ship superstructures. In Proceedings of the 2016 25th IEEE International
    Symposium on Robot and Human Interactive

    Communication (RO-MAN), New York, NY, USA, 26–31 August 2016; pp. 880–887.

    404. Fernández-Caramés, T.M.; Fraga-Lamas, P.; Suárez-Albela, M.; Vilar-Montesinos,
    M. A fog computing and cloudlet based

    augmented reality system for the industry 4.0 shipyard. Sensors 2018, 18, 1798.
    [CrossRef] [PubMed]

    405. Havard, V.; Baudry, D.; Louis, A.; Mazari, B. Augmented reality maintenance
    demonstrator and associated modelling. In

    Proceedings of the 2015 IEEE Virtual Reality (VR), Arles, France, 23–27 March
    2015; pp. 329–330.

    406. Smparounis, K.; Mavrikios, D.; Pappas, M.; Xanthakis, V.; Viganò, G.P.; Pentenrieder,
    K. A virtual and augmented reality approach

    to collaborative product design and demonstration. In Proceedings of the 2008
    IEEE International Technology Management

    Conference (ICE), Lisbon, Portugal, 23–28 June 2008; pp. 1–8.

    407. Santos, P.; Graf, H.; Fleisch, T.; Stork, A. 3d interactive augmented reality
    in early stages of product design. In Proceedings of the

    HCI International 2003, 10th Conference on Human-Computer Interaction, Crete,
    Greece, 23–27 June 2003; pp. 1203–1207.

    408. Fründ, J.; Gausemeier, J.; Matysczok, C.; Radkowski, R. Using augmented reality
    technology to support the automobile

    development. In International Conference on Computer Supported Cooperative Work
    in Design; Springer: Berlin/Heidelberg, Germany,

    2004; pp. 289–298.

    Sensors 2022, 22, 5834

    74 of 76

    409. Shen, Y.; Ong, S.K.; Nee, A.Y. Augmented reality for collaborative product
    design and development. Des. Stud. 2010, 31, 118–145.

    [CrossRef]

    410. Ng, L.X.; Ong, S.; Nee, A. Arcade: A Simuple and Fast Augmented Reality Computer-Aided
    Design Environment Using

    Everyday Objects. 2010. Available online: http://www.iadisportal.org/digital-library/arcade-a-simple-and-fast-augmented-

    reality-computer-aided-design-environment-using-everyday-objects (accessed on
    5 June 2022).

    411. Hannola, L.; Richter, A.; Richter, S.; Stocker, A. Empowering production
    workers with digitally facilitated knowledge processes–a

    conceptual framework. Int. J. Prod. Res. 2018, 56, 4729–4743. [CrossRef]

    412. Wang, X.; Ong, S.K.; Nee, A.Y. A comprehensive survey of augmented reality
    assembly research. Adv. Manuf. 2016, 4, 1–22.

    [CrossRef]

    413. Siew, C.Y.; Ong, S.K.; Nee, A.Y. A practical augmented reality-assisted maintenance
    system framework for adaptive user support.

    Robot. Comput.-Integr. Manuf. 2019, 59, 115–129. [CrossRef]

    414. Feiner, S.; MacIntyre, B.; Seligmann, D. Knowledge-based augmented reality.
    Commun. ACM 1993, 36, 53–62. [CrossRef]

    415. Zaldívar-Colado, U.; Garbaya, S.; Tamayo-Serrano, P.; Zaldívar-Colado, X.;
    Blazevic, P. A mixed reality for virtual assembly.

    In Proceedings of the 2017 26th IEEE International Symposium on Robot and Human
    Interactive Communication (RO-MAN),

    Lisbon, Portugal, 28 August–1 September 2017; pp. 739–744. [CrossRef]

    416. Azuma, R.T. A survey of augmented reality. Presence Teleoperators Virtual
    Environ. 1997, 6, 355–385. [CrossRef]

    417. Bottani, E.; Vignali, G. Augmented reality technology in the manufacturing
    industry: A review of the last decade. Iise Trans. 2019,

    51, 284–310. [CrossRef]

    418. Egger, J.; Masood, T. Augmented reality in support of intelligent manufacturing–a
    systematic literature review. Comput. Ind. Eng.

    2020, 140, 106–195. [CrossRef]

    419. Thomas, P.; David, W. Augmented reality: An application of heads-up display
    technology to manual manufacturing processes.

    In Hawaii International Conference on System Sciences; ACM SIGCHI Bulletin: New
    York, NY, USA, 1992; Volume 2.

    420. Grimm, P.; Haller, M.; Paelke, V.; Reinhold, S.; Reimann, C.; Zauner, R.
    AMIRE-authoring mixed reality. In Proceedings of the

    First IEEE International Workshop Agumented Reality Toolkit, Darmstadt, Germany,
    29 September 2002; p. 2.

    421. Klinker, G.; Reiners, D.; Stricker, D.; Müller, S. Augmented Reality for
    Construction Tasks: Doorlock Assembly Applications. In

    Proceedings of the International Workshop on Augmented Reality, San Francisco,
    CA, USA, 1 November 1998.

    422. Tang, A.; Owen, C.; Biocca, F.; Mou, W. Comparative effectiveness of augmented
    reality in object assembly. In Proceedings of the

    SIGCHI Conference on Human Factors in Computing Systems, Lauderdale, FL, USA,
    5–10 April 2003; pp. 73–80.

    423. Schwab, K. The Fourth Industrial Revolution; World Economic Forum: Geneva,
    Switzerland, 2016; Volume 145.

    424. Thompson, M.K.; Moroni, G.; Vaneker, T.; Fadel, G.; Campbell, R.I.; Gibson,
    I.; Bernard, A.; Schulz, J.; Graf, P.; Ahuja, B.; et al.

    Design for Additive Manufacturing: Trends, opportunities, considerations, and
    constraints.

    CIRP Ann. 2016, 65, 737–760.

    [CrossRef]

    425. ISO/ASTM 52900:2015; ASTM52900-15 Standard Terminology for Additive Manufacturing—General
    Principles—Terminology.

    ASTM International: West Conshohocken, PA, USA, 2015.

    426. Bikas, H.; Stavropoulos, P.; Chryssolouris, G. Additive manufacturing methods
    and modelling approaches: A critical review. Int.

    J. Adv. Manuf. Technol. 2016, 83, 389–405. [CrossRef]

    427. Bourell, D.; Kruth, J.P.; Leu, M.; Levy, G.; Rosen, D.; Beese, A.M.; Clare,
    A. Materials for additive manufacturing. CIRP Ann. 2017,

    66, 659–681. [CrossRef]

    428. Redwood, B.; Schöffer, F.; Garret, B. The 3D Printing Handbook: Technologies,
    Design and Applications; 3D Hubs: Amsterdam, The

    Netherlands, 2017.

    429. Asadi-Eydivand, M.; Solati-Hashjin, M.; Fathi, A.; Padashi, M.; Osman, N.A.A.
    Optimal design of a 3D-printed scaffold using

    intelligent evolutionary algorithms. Appl. Soft Comput. 2016, 39, 36–47. [CrossRef]

    430. Ramananarivo, S.; Mitchel, T.; Ristroph, L. Improving the propulsion speed
    of a heaving wing through artiﬁcial evolution of

    shape. Proc. R. Soc. A 2019, 475, 20180375. [CrossRef]

    431. Joshi, S.C.; Sheikh, A.A. 3D printing in aerospace and its long-term sustainability.
    Virtual Phys. Prototyp. 2015, 10, 175–185.

    [CrossRef]

    432. Wang, Y.C.; Chen, T.; Yeh, Y.L. Advanced 3D printing technologies for the
    aircraft industry: A fuzzy systematic approach for

    assessing the critical factors. Int. J. Adv. Manuf. Technol. 2019, 105, 4059–4069.
    [CrossRef]

    433. Soller, S.; Barata, A.; Beyer, S.; Dahlhaus, A.; Guichard, D.; Humbert, E.;
    Kretschmer, J.; Zeiss, W. Selective laser melting (SLM) of

    Inconel 718 and stainless steel injectors for liquid rocket engines. In Proceedings
    of the Space Propulsion 2016 Proceedings, Roma,

    Italy, 2–6 May 2016.

    434. Petch, M. Audi Gives Update on Use of SLM Metal 3D Printing for the Automotive
    Industry. 3D Printing Industry 2018. Available

    online: https://3dprintingindustry.com/news/audi-gives-update-use-slm-metal-3d-printing-automotive-industry-129376/

    (accessed on 5 June 2022).

    435. Chernousko, F. Locomotion Principles for Mobile Robotic Systems. Procedia
    Comput. Sci. 2017, 103, 613–617. [CrossRef]

    436. Siegwart, R.; Nourbakhsh, I.R.; Scaramuzza, D. Introduction to Autonomous
    Mobile Robots; MIT Press: Cambridge, MA, USA, 2011.

    437. Springer, P.J. Military Robots and Drones: A Reference Handbook; ABC-CLIO:
    Santa Barbara, CA, USA, 2013.

    438. Wang, Y.; Jiang, S.; Yan, F.; Gu, L.; Chen, B. A new redundancy resolution
    for underwater vehicle–manipulator system considering

    payload. Int. J. Adv. Robot. Syst. 2017, 14, 1729881417733934. [CrossRef]

    Sensors 2022, 22, 5834

    75 of 76

    439. Kusiak, A. Smart manufacturing must embrace big data. Nature 2017, 544, 23–25.
    [CrossRef] [PubMed]

    440. Wang, L. From intelligence science to intelligent manufacturing. Engineering
    2019, 5, 615–618. [CrossRef]

    441. Boyes, H.; Hallaq, B.; Cunningham, J.; Watson, T. The industrial internet
    of things (IIoT): An analysis framework. Comput. Ind.

    2018, 101, 1–12. [CrossRef]

    442. Enste, U.; Mahnke, W. OPC Uniﬁed Archit. 2011. Available online: https://doi.org/10.1016/j.compind.2018.04.015.
    (accessed on 5

    June 2022).

    443. Lehnhoff, S.; Rohjans, S.; Uslar, M.; Mahnke, W. OPC uniﬁed architecture:
    A service-oriented architecture for smart grids. In

    Proceedings of the 2012 First International Workshop on Software Engineering Challenges
    for the Smart Grid (SE-SmartGrids),

    Zurich, Switzerland, 3 June 2012; pp. 1–7.

    444. Zipper, H. Real-Time-Capable Synchronization of Digital Twins. IFAC-PapersOnLine
    2021, 54, 147–152. [CrossRef]

    445. Altintas, Y.; Kersting, P.; Biermann, D.; Budak, E.; Denkena, B.; Lazoglu,
    I. Virtual process systems for part machining operations.

    CIRP Ann. 2014, 63, 585–605. [CrossRef]

    446. Li, Q.; Tang, Q.; Chan, I.; Wei, H.; Pu, Y.; Jiang, H.; Li, J.; Zhou, J.
    Smart manufacturing standardization: Architectures, reference

    models and standards framework. Comput. Ind. 2018, 101, 91–106. [CrossRef]

    447. Maiziere, T. Die Lage der It-Sicherheit in Deutschland 2014. Bundesamt für
    Sicherheit in der Informationstechnik. 2014. Available

    online: https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/Lageberichte/Lagebericht2014.pdf?__

    blob=publicationFile&v=1#:~:text=F (accessed on 5 June 2022).

    448. Hentunen, D.; Tikkanen, A. Havex Hunts for ICS/SCADA Systems; F-Secure: Helsinki,
    Finland, 2014.

    449. Falliere, N.; Murchu, L.O.; Chien, E. W32. Stuxnet Dossier Version 1.4. Symantec
    Security Response.

    2011. Available online:

    https://www.wired.com/images_blogs/threatlevel/2011/02/Symantec-Stuxnet-Update-Feb-2011.pdf
    (accessed on 5 June 2022).

    450. Rost, J.; Glass, R.L. The Dark Side of Software Engineering: Evil on Computing
    Projects; John Wiley & Sons: Hoboken, NJ, USA, 2011.

    451. Igure, V.M.; Laughter, S.A.; Williams, R.D. Security issues in SCADA networks.
    Comput. Secur. 2006, 25, 498–506. [CrossRef]

    452. Cárdenas, A.A.; Amin, S.; Lin, Z.S.; Huang, Y.L.; Huang, C.Y.; Sastry, S.
    Attacks against process control systems: Risk assessment,

    detection, and response. In Proceedings of the 6th ACM Symposium on Information,
    Computer and Communications Security,

    Hong Kong, China, 22–24 March 2011; pp. 355–366.

    453. Ericsson, G.N. Cyber security and power system communication—essential parts
    of a smart grid infrastructure. IEEE Trans.

    Power Deliv. 2010, 25, 1501–1507. [CrossRef]

    454. Ten, C.W.; Liu, C.C.; Manimaran, G. Vulnerability assessment of cybersecurity
    for SCADA systems. IEEE Trans. Power Syst. 2008,

    23, 1836–1846. [CrossRef]

    455. Malchow, J.O.; Marzin, D.; Klick, J.; Kovacs, R.; Roth, V. PLC Guard: A practical
    defense against attacks on cyber-physical systems.

    In Proceedings of the 2015 IEEE Conference on Communications and Network Security
    (CNS), Florence, Italy, 28–30 September

    2015; pp. 326–334.

    456. Jin, C.; Valizadeh, S.; van Dijk, M. Snapshotter: Lightweight intrusion detection
    and prevention system for industrial control

    systems. In Proceedings of the 2018 IEEE Industrial Cyber-Physical Systems (ICPS),
    St. Petersburg, Russia, 15–18 May 2018;

    pp. 824–829.

    457. Garcia, L.; Zonouz, S.; Wei, D.; De Aguiar, L.P. Detecting PLC control corruption
    via on-device runtime veriﬁcation.

    In

    Proceedings of the 2016 Resilience Week (RWS), Chicago, IL, USA, 16–18 August
    2016; pp. 67–72.

    458. Lei, C.; Donghong, L.; Liang, M. The Spear to Break the Security Wall of
    S7CommPlus; Blackhat USA: London, UK, 2017.

    459. Ylmaz, E.N.; Ciylan, B.; Gönen, S.; Sindiren, E.; Karacayılmaz, G. Cyber
    security in industrial control systems: Analysis of DoS

    attacks against PLCs and the insider effect. In Proceedings of the 2018 6th International
    Istanbul Smart Grids and Cities Congress

    and Fair (ICSG), Istanbul, Turkey, 25–26 April 2018; pp. 81–85.

    460. Morris, T.; Vaughn, R.; Dandass, Y.S. A testbed for SCADA control system
    cybersecurity research and pedagogy. In Proceedings

    of the Seventh Annual Workshop on Cyber Security and Information Intelligence
    Research, Oak Ridge, TN, USA, 12–14 October

    2011; p. 1.

    461. Hahn, A.; Kregel, B.; Govindarasu, M.; Fitzpatrick, J.; Adnan, R.; Sridhar,
    S.; Higdon, M. Development of the PowerCyber SCADA

    security testbed. In Proceedings of the Sixth Annual Workshop on Cyber Security
    and Information Intelligence Research, Oak

    Ridge, TN, USA, 21–23 April 2010; pp. 1–4.

    462. Luallen, M.E.; Labruyere, J.P. Developing a critical infrastructure and control
    systems cybersecurity curriculum. In Proceedings

    of the 2013 46th Hawaii International Conference on System Sciences, Wailea, HI,
    USA, 7–10 January 2013; pp. 1782–1791.

    463. Feng, Y.; Zhang, W.; Luo, X.; Zhang, B. A consortium blockchain-based access
    control framework with dynamic orderer node

    selection for 5G-enabled industrial IoT. IEEE Trans. Ind. Inform. 2021, 18, 2840–2848.
    [CrossRef]

    464. Falkenberg, R.; Masoudinejad, M.; Buschhoff, M.; Venkatapathy, A.K.R.; Friesel,
    D.; ten Hompel, M.; Spinczyk, O.; Wietfeld,

    C. PhyNetLab: An IoT-based warehouse testbed. In Proceedings of the 2017 Federated
    Conference on Computer Science and

    Information Systems (FedCSIS), Prague, Czech Republic, 3–6 September 2017; pp.
    1051–1055.

    465. Heymann, S.; Stojanovci, L.; Watson, K.; Nam, S.; Song, B.; Gschossmann,
    H.; Schriegel, S.; Jasperneite, J. Cloud-based plug

    and work architecture of the IIC testbed smart factory Web. In Proceedings of
    the 2018 IEEE 23rd International Conference on

    Emerging Technologies and Factory Automation (ETFA), Turin, Italy, 4–7 September
    2018; Volume 1, pp. 187–194.

    466. Al-Hawawreh, M.; Sitnikova, E. Developing a security testbed for industrial
    internet of things. IEEE Internet Things J. 2020,

    8, 5558–5573. [CrossRef]

    Sensors 2022, 22, 5834

    76 of 76

    467. Koroniotis, N.; Moustafa, N.; Schiliro, F.; Gauravaram, P.; Janicke, H. The
    SAir-IIoT Cyber Testbed as a Service: A Novel

    Cybertwins Architecture in IIoT-Based Smart Airports. IEEE Trans. Intell. Transp.
    Syst. 2021, 1–14. [CrossRef]

    468. AbdelHafeez, M.; Ahmed, A.H.; AbdelRaheem, M. Design and operation of a lightweight
    educational testbed for Internet-of-

    Things applications. IEEE Internet Things J. 2020, 7, 11446–11459. [CrossRef]

    469. Munoz, J.; Rincon, F.; Chang, T.; Vilajosana, X.; Vermeulen, B.; Walcarius,
    T.; Van de Meerssche, W.; Watteyne, T. OpenTestBed:

    Poor man’s IoT testbed. In Proceedings of the IEEE INFOCOM 2019-IEEE Conference
    on Computer Communications Workshops

    (INFOCOM WKSHPS), Paris, France, 29 April–2 May 2019; pp. 467–471.

    470. Jayavel, K.; Venusamy, K.; Lavanya, G. Design and Implementation of IoT Testbed
    with Improved Reliability using Conditional

    Probability Techniques. In Proceedings of the 2020 Fourth International Conference
    on I-SMAC (IoT in Social, Mobile, Analytics

    and Cloud) (I-SMAC), Palladam, India, 7–9 October 2020; pp. 116–121.

    471. Industry IoT Consortium (IIC) Testbeds. 2022. Available online: https://www.iiconsortium.org/test-beds/#:~:text=A%20

    Testbed%20is%20a%20controlled,%2C%20services%2C%20or%20business%20development
    (accessed on 5 June 2022).

    472. Kovalenko, I.; Saez, M.; Barton, K.; Tilbury, D. SMART: A system-level manufacturing
    and automation research testbed. Smart

    Sustain. Manuf. Syst. 2017, 1, 1. [CrossRef]

    '
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/15/5834/pdf?version=1660029300
  publication_year: 2022
  relevance_evaluation: '0.9'
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: A Primer on the Factories of the Future
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2021.3059858
  analysis: '>'
  authors:
  - Hemantha Krishna Bharadwaj
  - Aayush Agarwal
  - Vinay Chamola
  - Naga Rajiv Lakkaniga
  - Vikas Hassija
  - Mohsen Guizani
  - Biplab Sikdar
  citation_count: 89
  explanation: This paper gives an in-depth review of the current state-of-the-art
    and future prospects of real-time, automated systems for monitoring physiological
    and medical parameters using IoT and ML technologies as well as examines the automation
    of tasks across the entire data pipeline from collection and transmission to processing
    and analysis. It explores the application of advanced sensing technologies such
    as hyperspectral imaging and thermal sensing for non-invasive plant stress detection.
    It also considers automation in data collection and transmission, data processing,
    analysis, and decision-making, and examines the deployment of real-time, automated
    irrigation systems.
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 9 A Review
    on the Role of Machine Learning in Enabling IoT Based Healthcare Applications
    Publisher: IEEE Cite This PDF Hemantha Krishna Bharadwaj; Aayush Agarwal; Vinay
    Chamola; Naga Rajiv Lakkaniga; Vikas Hassija; Mohsen Guizani; Biplab Sikdar All
    Authors 87 Cites in Papers 9353 Full Text Views Open Access Comment(s) Under a
    Creative Commons License Abstract Document Sections I. Introduction II. General
    Architecture of H-IoT III. Overview of Algorithms IV. Diagnosis V. Prognosis and
    Spread Control Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: The Internet of Things (IoT) is playing a vital role in the
    rapid automation of the healthcare sector. The branch of IoT dedicated towards
    medical science is at times termed as Healthcare Internet of Things (H-IoT). The
    key elements of all H-IoT applications are data gathering and processing. Due
    to the large amount of data involved in healthcare, and the enormous value that
    accurate predictions hold, the integration of machine learning (ML) algorithms
    into H-IoT is imperative. This paper aims to serve both as a compilation as well
    as a review of the various state of the art applications of ML algorithms currently
    being integrated with H-IoT. Some of the most widely used ML algorithms have been
    briefly introduced and their use in various H-IoT applications has been analyzed
    in terms of their advantages, scope, and possible improvements. Applications have
    been divided into the domains of diagnosis, prognosis and spread control, assistive
    systems, monitoring, and logistics. In healthcare, practical use of a model requires
    it to be highly accurate and to have ample measures against security attacks.
    The applications of ML algorithms in H-IoT discussed in this paper have shown
    experimental evidence of accuracy and practical usability. The constraints and
    drawbacks of each of these applications have also been described. Topic: AI and
    IoT Convergence for Smart Health Review on the Role of Machine Learning in Enabling
    IoT Based Healthcare Applications. Published in: IEEE Access ( Volume: 9) Page(s):
    38859 - 38890 Date of Publication: 16 February 2021 Electronic ISSN: 2169-3536
    DOI: 10.1109/ACCESS.2021.3059858 Publisher: IEEE Funding Agency: CCBY - IEEE is
    not the copyright holder of this material. Please follow the instructions via
    https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles and
    stipulations in the API documentation. SECTION I. Introduction The Internet of
    Things (IoT) has been the subject of great enthusiasm in the healthcare technology
    community over the last few years. The healthcare domain is of great practical
    importance and IoT opens up a wide spectrum of opportunities to make it better.
    Numerous contemporary medical devices and sensors can connect over various networks,
    which provides access to important information about patients’ conditions. This
    information can then be used for multiple purposes such as monitoring patients
    remotely, predicting illness and recovery through the greater insight into symptoms,
    and generally improving the diagnosis and treatment process via increased automation
    and portability. Due to the vast multitude of data generated in real-time by these
    devices and their complex nature, analysis using ML algorithms has proven to be
    of vital importance to H-IoT. These algorithms allow us to extract valuable information
    from the acquired data and draw useful inferences. Though ML models can provide
    great levels of accuracy when trained in the right environment, this is generally
    easier said than done. Various contemporary research efforts are aimed at finding
    out new areas of applications of ML algorithms to H-IoT systems, evaluating their
    suitability for these systems, and increasing the accuracy achieved by prediction
    and analysis models. Using ML based systems has numerous advantages. They can
    be trained using large volumes of data, termed as training data, and then, through
    inductive inference, they can assist clinical practice in assessing risk and designing
    treatment. These systems can reduce error by eliminating human elements from the
    system, and can perform repetitive jobs, thus improving efficiency compared to
    manual efforts. Physicians can be assisted by artificial intelligence (AI) that
    can learn information related to medical science from textbooks, journals, and
    clinical practices to consult and provide adequate patient care, which, for humans,
    is tedious. However, the inferences that a human mind can make are still missing
    in existing AI techniques. Monitoring, managing, and analysing medical reports
    become easier with integration of ML with IoT devices. Moreover, ML algorithms
    can process large sets of biological data and detect specific patterns and mutations
    involved in various diseases, which can accelerate the discovery of novel therapeutics.
    Health monitoring services and consulting can also be provided digitally by AI
    to a certain limit — being entitled as “health bots”. There are a few other studies
    surveying the role of ML in healthcare-IoT. A very important premise for modern
    systems is the use of fog and edge computing to reduce server load and low latency
    responses [1]. Greco et al. [2] discussed the gradual shift in the implementation
    of ML models from cloud towards the fog and edge for healthcare IoT. They discussed
    this change in architecture across applications such as analysis of physiological
    parameters and rehabilitation systems. Mutlag et al. [3] also discussed the scenario
    of growth in fog computing in the healthcare IoT domain. Deploying models closer
    to the end devices allows low latency and independence from network failures.
    Fog based applications have been thoroughly scrutinized and a spectrum of security
    implementations have been proposed for it [4]. Farahani et al. [5] surveyed various
    systems for applications such as population monitoring and assisted living. Rong
    et al. [6] reviewed some of the applications of AI in healthcare systems with
    case studies of epileptic seizures and filling of a dysfunctional urinary bladder.
    ML has also been used to predict the insurance medical costs as well [7], [8].
    Lastly, the recent adoption of ML and blockchain in healthcare, its applications,
    followed by challenges and privacy concerns have also been surveyed [9], [10].
    Although there are works in this direction, they are either too specifically focused
    on the architecture without consideration of the diversity in algorithms or focus
    on the model without discussing how the data is coming from the IoT system. Hence,
    it is necessary to review the various architectures for both the IoT systems and
    ML models to have a grasp over the recent developments. Through this paper, we
    have tried to cover this existing gap. The main contributions of this work are
    enumerated below: An overview of various prominent ML algorithms with particular
    focus on their applications and use cases in the healthcare-IoT industry has been
    provided. Detailed reviews of important applications of these algorithms in diagnosing
    patients with common ailments like cardiovascular and neurological disorders,
    diabetes, etc. and in automating the diagnosis process have been presented. The
    role of ML algorithms with IoT architecture in forecasting future stages of diseases
    and controlling the spread of epidemics has been surveyed. Assistive systems for
    the aid of the physically challenged, the mentally disabled and the elderly, that
    have the potential to greatly improve their quality of life, have been identified
    and reviewed. Futuristic ML-IoT based technologies that promise vast strides in
    making health monitoring systems more accessible and efficient, as well as technology
    that improves the overall process of obtaining healthcare has been studied. The
    rest of this paper is organized in the following manner, as shown in Figure 1.
    Section II provides the definition as well as general architecture of standard
    Healthcare-IoT frameworks. Section III provides a brief overview of the various
    AI algorithms currently being researched for use in the healthcare industry. Sections
    IV through VIII extensively cover reviews of the state of the art applications
    of these algorithms to H-IoT in the areas of diagnosis, prognosis and spread control,
    assistive systems, patient monitoring, and healthcare logistics, respectively.
    Finally, section IX provides the conclusion to the paper. FIGURE 1. Organization
    of this work. Show All SECTION II. General Architecture of H-IoT The implementation
    of IoT in healthcare originated from efforts to develop remote patient monitoring
    systems. The research on various applications of H-IoT has since been growing
    consistently, and contemporary research aims at incorporating IoT into various
    facets of healthcare, including disease spread control, effective automated diagnosis,
    and improved treatment. In this section, we define what a H-IoT system is, and
    briefly describe the various components of its architecture. Figure 2 shows the
    various classifications for different H-IoT applications described in literature.
    FIGURE 2. Applications of H-IoT. Show All A. Definition of H-IoT A healthcare
    IoT system can be defined as a network of all available health resources connected
    to each other for rapid transfer of data between them over the Internet [11].
    This means that all healthcare resources like doctors, hospitals, rehabilitation
    centres and all medical devices and sensors along with the patients become interconnected
    with each other for continuous real-time data transfer. The various sensors coupled
    with applications that interpret their readings can detect anomalies and send
    patient data to medical practitioners/hospitals for diagnosis and analysis, after
    which corrective action can be prescribed and undertaken. For such a framework
    to exist and work smoothly, three primary requirements need to be met [12]: Interoperability:
    The wide range of devices being used in the framework should be able to cooperate
    among each other to enable the desired functionality. Bounded latency and reliability:
    For effective handling of emergencies and synchronised analysis of the huge amount
    of data, the transmission between the entities in the network must be fast and
    accurate. Privacy and security: Personal data being transmitted in an H-IoT framework
    is sensitive and should securely reach only the concerned entities, which necessitates
    having authentication and security measures in place. Various mechanisms for authorization
    and authentication of IoT devices are available using technologies such as encryption
    and physical unclonable functions [13]–[15]. B. Architecture of H-IoT An H-IoT
    system comprises of an end-to-end network typically consisting of three major
    layers of operation [16]: Data collection layer: This layer is responsible for
    the collection of medical data from various sensor devices attached to the patient/test
    subject that needs to be monitored/examined. Data storage layer: This layer is
    responsible for storage of big data collected from various sensors and transmitted
    through the Internet. Data processing layer: This layer analyzes the data stored
    in servers to generate the required response through application of computing
    algorithms. Also, the compilation and visualization of the results are done here.
    The implementation of these layers is enabled using the following technologies
    [11] as shown in Figure 3: Identification technology: For the nodes in the network
    of an H-IoT framework to access information and communicate with each other securely,
    each node must be identified uniquely through technologies such as a unique identifier
    (UID) [11]. Communication technology: Both short and long distance communications
    between the nodes in the H-IoT network require pathways. Long distance communication
    is undertaken through conventional means such as the Internet, while short distance
    communication separately requires specific technologies, preferably those that
    enable fast wireless communication like Bluetooth, Zigbee, RFID etc. Location
    technology: Global positioning system (GPS) enables the various nodes to accurately
    track each other’s geographical locations which is extremely important for certain
    use cases of H-IoT. Various other location tracking systems may also be required
    to compensate for instances of poor GPS connectivity [11]. Sensing technology:
    The data analyzed to draw inferences in an H-IoT system is generated by sensors.
    Therefore, sensing mechanisms that monitor real-time physiological changes in
    a patient’s body are imperative. A large variety of sensors are available for
    acquisition of such data, for instance, accelerometers for sensing linear acceleration,
    gyroscopes for measuring angular velocity, and electrocardiogram (ECG) sensors
    to measure electrical activity in the heart [16]. Evolution in sensor technology
    is directly related with evolution of H-IoT frameworks leading to more accurate
    predictions and lower costs. Application level architecture: Application level
    architectures such as service oriented architecture (SOA) [17] or representational
    state transfer (REST) allow the various devices in the system to perform independently
    of each other. Each device’s operations are properly defined and can be altered
    as and when required without compromising the interoperability of the system.
    FIGURE 3. H-IoT Technologies. Show All SECTION III. Overview of Algorithms This
    section provides a brief overview of prominent algorithms used in H-IoT, and a
    few examples of their H-IoT applications. In general, these algorithms can be
    divided into supervised and unsupervised learning algorithms, depending on whether
    the desired classification labels are provided in the input dataset (supervised)
    or not (unsupervised). Machine learning algorithms generally prefer labeled data,
    while deep learning algorithms are more adept at exploiting unlabeled data. A.
    Dimensionality Reduction Algorithms (DRA) DRA are a set of algorithms such as
    linear discriminant analysis (LDA) and principal component analysis (PCA) which
    take in large data sets as input, identify the correlations and patterns in them,
    and provide a much smaller data set (in terms of the number of dimensions) as
    output without losing any critical information previously provided. This removes
    inconsistencies, redundant data, and highly correlated features of the data. Dimensionality
    reduction is performed through the following steps: Standardization: each data
    point is scaled as: New variable = (original variable - mean of all variables
    of the feature)/(standard deviation of all variables of the feature). Computing
    the covariance matrix: [feature][feature ] T . Calculating the eigenvectors and
    eigenvalues. Computing the principal components. Significant promises have been
    made for diagnosis of Parkinson’s disease and breast cancer by combining IoT and
    DRA such as LDA [18]. The significance of a combination of IoT and DRA to boost
    diagnostic capabilities is well discussed in available literatures [19], [20].
    B. Discriminant Analysis Discriminant analysis, which is an important type of
    DRA, projects data points to a space of lower dimensions such that the classes
    get separated appropriately into non-overlapping groups. Such classification is
    similar to multiple regression when only two groups are involved, but proves to
    get more complicated as the number of groups increases. In healthcare, discriminant
    analysis finds applications mainly in measuring disease prognosis and severity
    in a patient. LDA classifies by finding a linear combination of features, while
    a more general multiple discriminant analysis extends the same to a non-linear
    space. C. Linear Regression Linear regression is a modeling technique which uses
    linear approach for finding a relationship between a dependent variable and one
    or more independent variables. It is preferred in cases where only continuous
    independent variables exist. Many techniques for preparing a linear regression
    model exist, of which ordinary least squares and gradient descent method are most
    commonly used. The former tries to directly minimize the sum of squared error
    values to find out the coefficients, while the latter uses an iterative approach
    to minimizing the sum of squared residuals. D. Logistic Regression Logistic regression
    is a probability-based algorithm in which its sigmoid function acts as the cost
    function and assumes a value between zero and one. The sigmoid function is given
    by: f(x)= 1 1+ e −x . (1) View Source Logistic regression can be of two types.
    When the observations are to be classified into two classes, binary logistic regression
    is used, while more than two class classifications require the use of multinomial
    logistic regression. Using logistic regression is especially advantageous when
    the regression problem has a dichotomous dependent variable. E. Support Vector
    Machine This algorithm uses the concept of a classifying hyper-plane. The aim
    is to identify a plane that divides the dataset into two groups such that the
    gap between the data points in the two groups is maximized. This hyper-plane is
    said to have the maximum range. Data points falling on different sides of the
    hyper-plane are assigned to different groups. The dimension of the hyper-plane
    depends on the number of features. For features less than or equal to 2 in number,
    the hyper-plane is simply a line. It turns to a 2-D plane for 3 features, while
    picturing it for more than 3 features becomes difficult. SVMs are advantageous
    in that they are extremely resilient to overfitting problems. SVMs can not only
    work as linear classifiers, they can also use non-linear kernels to classify datasets
    using non-linear functions. Ginantra et al. [21] proposed a model that demonstrated
    an SVM classifier which outperformed other classifiers for identifying whether
    a person suffers from influenza-like illnesses (ILI) (i.e., acute respiratory
    infections). SVM is found to be the most accurate in location verification [22]
    without the requirement of channel characteristics data to operate. SVMs were
    also used to develop methods for solving the classification task of medical implant
    materials [23]. F. K Nearest Neighbors (KNN) KNN is a supervised learning method
    where objects are classified based on their similarity to certain features of
    other objects whose category is predetermined. Distances, mostly Euclidean, are
    calculated for the object whose category is determined to its k closest neighbors.
    That is the difference between the features of the neighbors is taken and summed
    to find the distance. The Euclidean distance is given by Eq. 2. Then, voting is
    done to determine the category in which the majority of the k nearest objects
    belong to. The value of k is determined through the process of parameter tuning.
    It is usually chosen to be around the square root of the total number of objects,
    and is generally an odd number to avoid the possibility of multiple categories
    getting equal votes. Distanc e 2 = (featur e 1,object −featur e 1,neighbor ) 2
    +(featur e 2,object −featur e 2,neighbor ) 2 … +(featur e n,object −featur e n,neighbor
    ) 2 (2) View Source KNN is helpful for the classification of labeled data even
    when the training set is very small and is widely used in various applications.
    Ahmed [24] used KNN on data collected from IoT devices to predict heart attacks.
    It was used on data collected from 20 Kinect sensors to measure the positions
    of different joints in the body [25]. These were then passed through KNN classifiers
    used with both Euclidian and Minkowski distances to predict the user’s current
    activity. This has great potential for use in fitness measurement once classification
    is developed for a variety of activities. Azimi et al. [26] proposed to use multiple
    KNN imputations to estimate lost or missing data points collected to monitor pregnant
    women. This application can be reliably used, both as a medical B2C service or
    as a tool for research on maternal health. Hossain et al. [27] showcased another
    activity measurement application using long range wide area network (LoRaWAN)
    sensors and accelerometer for detection using KNN with an accuracy of 80%. G.
    K-Means K-means classifies objects based on whether or not they fall within the
    parameters of a certain class. Hence, the categories of classification are limited
    to “similar” and “dissimilar”. Euclidean distances are used to determine the centroid
    of the cluster for each category, and a new object is simply classified based
    on the distance from each cluster. This method finds its applications in numerous
    web engines and wireless sensor network (WSN) systems. K-means classification
    is also used in other diverse fields, ranging from using wearable sensor networks
    to detect injury among soldiers away from their posts during a war [28], to monitoring
    the ECG of patients using data collected through wearable IoT nodes [29]. Sood
    and Mahajan [30] proposed using similar technology to provide remote diagnostics
    for a chikungunya epidemic through fog computing and using fuzzy k-means to track
    the possibility of disease transmission. This is a tested method that may be expanded
    for COVID-19 tracking as well. Further, Kim et al. [31] demonstrated the use of
    k-means clustering on MRI images for information deduction to speed up the detection
    of brain tumors. H. Decision Tree A decision tree consists of three components:
    internal nodes, branches, and leaf nodes which represent features, decision rules,
    and outcomes, respectively. Gini index and entropy are two of the most widely
    used methods to classify data. Cho [32] used decision trees to track the location
    of persons during a pandemic. Xie et al. [33] used decision trees to develop a
    heartbeat classification algorithm that identifies premature ventricular contraction
    (PVC) to diagnose arrhythmia using amplitudes and intervals of heartbeat as features.
    I. Random Forest(RF) Decision trees adapt according to the particular data used
    for training them. The results obtained using a decision tree vary drastically
    if the training data is altered. This algorithm is computationally expensive.
    A local optima is generally calculated because going back is not possible once
    splitting occurs. Random forest method addresses these limitations. In this model,
    several decision trees are trained simultaneously to produce a single output.
    Such decision tree merging is called bagging. As an example, Al Hossain et al.
    [34] demonstrated the application of a random forest model that outperformed other
    models with 95% accuracy in predicting the number of people infected by influenza
    in public places. It shows a high accuracy due to its ability to combine the outputs
    of all decision trees. Gupta et al. [35] presented a random forest classifier
    that outperformed KNN, SVM, and decision tree with 77.8% accuracy in detection
    of abnormal crowd motion. J. Naive Bayes (NB) NB classification is conceptually
    based on the Bayes theorem. ‘Naive’ refers to the fact that all features are assumed
    to be independent of each other. The data is split into a feature matrix and a
    response vector. The rows of the feature matrix provide the whole data collection
    in terms of vectors, each of which represents the relative variable type. On the
    other hand, each row of the response vector represents an outcome class. Sadhukhan
    et al. [36] and Assery et al. [37] mentioned situations where NB outperformed
    all other classifiers to classify tweets that can help in managing the social
    networking issues in disaster or pandemic periods. K. Gradient Boosting & Adaboost
    In the general case of weak learners, the accuracy is just about as good as a
    random outcome generator. Thus, a good way to utilize them is to combine them
    through more than one ML algorithm to create a strong learner. This methodology
    of using multiple learners to train a model is also known as ensemble learning.
    Boosting is an ensemble learning method that creates decision boundaries for each
    weak learner and assigns each of the weights based on how accurately the boundaries
    classified or estimated the data. This is repeated till a satisfactory model is
    created. Adaboost gives each observation (for the first boundary) equal weight
    in the beginning and then keeps increasing the weights for the incorrectly classified
    objects and altering the boundaries accordingly until all observations are correctly
    classified. In gradient boosting, multiple boundaries (learners) are created one
    after the other such that each consecutive learner accounts for some errors of
    the previous one. Extreme gradient boosting can be used to predict heart patients’
    irregular cycles with 92.1% accuracy [38]. Similarly, voice signals collected
    from wearables can be used to detect early signs of Parkinson’s disease [39],
    whereas predictive analytics can be used to diagnose diabetes in clients [40].
    Constrained IoT devices can also be used to efficiently detect seizures [41].
    L. Convolutional Neural Networks(CNN) CNN is a feed-forward network used in classification
    problems [42]. It breaks the input down into constituents and then passes them
    on to a convolution layer, which puts these parts into different combinations
    until some patterns emerge from them (convolution). A rectified linear unit (ReLU)
    layer then maps the input images against these patterns to form a rectified feature
    layer and passes them on to a pooling layer. The pooling layer reduces the map
    to give a pooled feature map, which is then flattened to form a linear vector
    and fed into a fully connected network to categorize the input. CNNs are used
    extensively in areas that require visual interpretation of images with a grid-like
    topology. Alhussein et al. [43] converted brain wave values received as a 2D time
    series to predict epileptic seizures and inform health authorities with immediacy.
    Ke et al. [44] proposed the use of raw electroencephalogram (EEG) to evaluate
    depression using lightweight CNN. Ciocca et al. [45] used images to recognize
    food and in turn, calories, which has applications in nutrition and fitness. Alhussein
    and Muhammad [46] used mobile healthcare frameworks to detect voice pathologies
    using deep learning on pitch tones. Bansal et al. [47] proposed a resnet based
    framework for lung cancer classification and 3D segmentation, achieving an accuracy
    of 92.7% for segmentation and 88.3% for detection using the LUNA16 dataset. M.
    Artificial Neural Networks An artificial neural network (ANN) is a ML model that
    mimics the learning process of the human brain: there exists an input layer that
    receives the data to be processed, several layers that process the data, and an
    output layer that gives the output. In ANNs, the hidden layers receive intermediate
    inputs, assign a random weight and bias to each of the inputs and calculate several
    weighted sums, which are then passed through layers with weights and sums, until
    they reach the last layer, which uses an activation function to determine the
    output. When the outputs are incorrect, they are fed back to the previous layers
    (back propagation) in accordance with a cost-function to alter the weights until
    answers are received with sufficient accuracy. ANNs are extremely dynamic and
    find applications in domains related to pattern recognition. Kim et al. [48] used
    an inconspicuous method of IR sensors placed throughout the house to monitor movement,
    bathroom time, sleep, and excursions to detect signs of depression among elderly
    people through processing information received over telecom data using ANN. Bhatia
    and Sood [49] proposed using back propagation ANN to predict probabilistic health
    state vulnerabilities during exercising. Sood and Mahajan [50] and Humayun [51]
    used a fog-layer framework to identify and control hypertension (BP) attacks,
    and to manage data pertaining to heart attacks in patients, respectively. Hassija
    et al. [52] worked on a neural network-based smart contract that was used in conjunction
    with a blockchain network to form a traffic estimation system. N. Reinforcement
    Machine Learning Reinforcement learning is based on the methodology by which infants
    learn to interpret the world around them. This comprises an agent, or the learner,
    who starts from a specific state in the environment, say S0. The agent then takes
    an action, A0, and the state updates to S1. If the action was in the correct direction,
    the environment rewards the agent with R1. This is repeated until the reward is
    maximized. It comprises of a set of algorithms such as Monte Carlo and Q Learning.
    Park et al. [53] discussed automated diagnostics of high volumes of patients through
    IoT wearables using Q learning. Zhao et al. [54] provided a novel method to route
    crowds in a smart city using reinforcement learning, a technology that may prove
    pivotal to lifting lockdowns during COVID-19 while keeping up with social distancing
    norms. Dourado et al. [55] used topographic images of the skull to detect strokes
    using a deep learning IoT model. Liu et al. [56] used similar models to detect
    lung cancer. O. Natural Language Processing(NLP) NLP refers to the application
    of ML algorithms for computers to understand and interpret natural human language,
    speech, and text. Its linguistic extraction features make it extremely easy to
    process and quantify unstructured information. The algorithm uses the following
    approach: Stemming and tokenization: breaking down words into root words and categorizing
    them. Semantic analysis and disambiguation: extracting the literal meaning of
    words used and breaking them down into context and intent. Topic modeling: understanding
    the domain of which the conversation is a part of. The most common libraries for
    NLP available today include Scikit-learn, NLTK, spaCY, and TextBlob. NLP applications
    go beyond their dependence on textual or image data to extract information and
    are hence used in widely varied applications, like food intake and nutrition tracking
    [57] and to evaluate the emotional response of the patient on medicine intake
    [58]. Amin et al. [59] proposed using NLP to evaluate speech, facial expressions,
    movement etc. in real-time through smart city networks to assess the patients
    and provide them with required emergency help. This technology also finds varied
    use in mental health applications [60], where NLP was used on data from both social
    media and IoT device data. P. Cognitive Automation Cognitive automation is a sub-element
    of AI. It uses advanced technologies like data mining, emotion recognition, NLP
    and cognitive reasoning with the objective of imitating human intelligence. Cognitive
    automation tries to imitate human intelligence using technology to solve problems.
    It acts as a catalyst mechanism behind efficient and improved responses generated
    by an AI device. Cognitive automation, by offering a more collective approach
    to H-IoT, helps in applications where a synchronised use of physiological and
    psychological systems is required for dealing with medical emergencies. Muhammad
    et al. [61] developed a 5G cognitive healthcare monitoring system that can revolutionise
    healthcare systems, especially in smart cities by running a data and a resource
    cognitive engine simultaneously. Alhussein et al. [43] studied cognitive IoT frameworks
    developed for the monitoring and diagnosis of epilepsy. SECTION IV. Diagnosis
    In this section, we present an overview of various use cases for diagnosis where
    AI and IoT based systems have been used or proposed. Diagnosis is generally carried
    out by the identification of the nature of an illness which the patient is currently
    facing by examination of the symptoms which are measured by sensors. Table 2 at
    the end of this section gives a brief summary of the reviewed publications that
    pertain to use cases of ML algorithms for diagnosis. TABLE 1 Results for MDCNN
    [65] TABLE 2 Use Cases of ML Algorithms for Diagnosis A. Cardiovascular Disorders
    Heart diseases are one of the major causes of mortality around the world. Predicting
    a heart disease is a complex task. However, the integration of IoT into healthcare
    systems has shown a remarkable way to monitor patients’ health and diagnose anomalies.
    The most commonly used sensors are for ECG, blood pressure, heart pulse and body
    temperature. ECG signals represent the electrical activity of the heart at rest.
    It can be used to draw inferences about the heart rate and rhythm, and can be
    useful for diagnosing the enlargement of the heart due to high blood pressure,
    elevated heart rate, and dysrhythmia or heart attacks. Figure 4 shows some of
    the most commonly used sensors related to cardiovascular diagnosis. FIGURE 4.
    Common sensors for cardiovascular diagnosis. Show All Gupta et al. [62] proposed
    using a ML based model to diagnose heart diseases by monitoring several parameters
    in real time, using wearable IoT technology. The aim of the study was to use real-time
    ECG, pulse and temperature monitoring as inputs to a trained prediction model
    to predict if the user is at risk for any heart disease or arrhythmia. The project
    was carried out in three phases: data pre-processing, model training phase, and
    prototyping for live prediction. In the first phase the electronic health records
    (EHR) dataset was consolidated, and the parameters considered relevant to the
    predictor were isolated. The values that were missing in the dataset were replaced
    with the most frequently occurring value (i.e., the mode) for each feature. A
    correlation assessment was done to determine the different parameters following
    very similar trends. Such trends which did not contribute in the learning of the
    model, and would simply add to the program complexity were removed (dimensionality
    reduction). In the second phase, the pre-processed dataset was split into training
    and testing sets followed by model training on the training dataset. Different
    classification algorithms namely KNN, SVM, NB, decision tree and random forest
    were evaluated for accuracy, hit rate, etc. The third phase included the hardware
    prototype development for collection of data and cloud connectivity, and most
    importantly, real time prediction. Using the ESP8266 WiFi supported development
    board, the AD8232 ECG sensor, HW01 pulse sensor and the MAX30205 temperature sensor,
    the node was connected to a laptop feeding continuous data into the trained model,
    along with other static data such as age, sex and sugar levels. After this, a
    laptop ran the model giving an 88.9% accurate judgement using KNN to identify
    if the patient was at risk for heart problems. Although this was a fairly simple
    method, more research needs to be done for improving the accuracy. Hence, this
    technology needs to be further developed with better training over time and better
    instrumentation for a broader real-time dataset. Taştan [63] reported similar
    studies by using only a real-time monitoring approach while Davis et al. [64]
    also accounted for the past health record of the patient. Khan [65] proposed an
    IoT healthcare system for evaluating heart diseases using the modified deep CNN
    (MDCNN). The data used for training and testing was collected from Framingham,
    the UCI ML Repository and public health dataset. A smartwatch and heart monitoring
    device were used to collect information about the blood pressure and ECG which
    were then transmitted to the server using LoRa. Based on this transmitted information,
    the MDCNN model classified the patient as having a normal or an abnormal heart
    condition, and alerted the doctor in case of an abnormality. This was also carried
    out in three stages: pre-processing, feature selection and classification. The
    first stage comprised of adding the missing attributes based on the patient’s
    age, blood pressure and cholesterol, removing redundancies, and separation of
    patients based on the type of chest pain they had: typical angina, atypical angina,
    non-anginal pain, and asymptomatic. The most important features for evaluating
    heart diseases were selected by using the mapping-based cuttlefish optimization
    algorithm (MCFA) [66]. Finally, for the classification stage, the weight values
    to be used in the model were optimized using the adaptive elephant herd optimization
    algorithm. For the actual prototype, an Omron HeartGuid-bp8000m was used to measure
    the resting blood pressure. However due to unavailability of wearable devices
    for the serum cholesterol and glucose levels, pseudo numbers were generated in
    a fixed range. Lastly, an AD8232 sensor was used for measuring the ECG data. A
    Raspberry Pi was used for interfacing which sent the data to the cloud using a
    SX1272 900MHz LoRa transmitter. The results from this study are given below in
    Table 1. Azariadi et al. [67] proposed heart diagnosis using ECG analysis and
    classification on an embedded IoT system. The model developed could be used with
    wearable sensors for ECG diagnosis, which allowed continuous monitoring around
    the clock. The proposed system had 4 steps: detection of the heartbeat, segmentation,
    feature extraction and classification. The MIT-BIH arrhythmia database was used
    for developing the classifier. Discrete wavelet transform was used for feature
    extraction while classification was done using SVM. The algorithm was later coded
    and implemented for Intel’s Galileo IoT board. The ECG signal was read and digitized
    at a sampling rate of 360 samples per second while analysis was done for every
    3000 samples. The average accuracy was 97%. Wang et al. [68] proposed a model
    combining logistic regression and ANN for prediction of chronic diseases or risks
    by covering a case study of hypertension based on health risk assessment (HRA).
    The integrated model utilized data available to all from behavioral risk factor
    surveillance system (BRFSS) of centers of disease control and prevention (CDC).
    First the binary logistic regression was used to select risk elements having consequential
    p-values. While selecting the important risk elements, multi-factor logistic regression
    model integrated with partial maximum likelihood (PML) estimation and forward-step
    regression analysis was used on the experimentation data. As a result, eleven
    factors such as age, exercise, marriage, diabetes, income, body mass index, gender,
    smoking and drinking habits were chosen as the significant risk-factors. Then,
    multi layer perceptron (MLP) neural network was constructed and trained with back
    propagation (BP) algorithm for the specific factors to diagnose if an individual
    was enduring hypertension or not. Increasing the number of hidden layers in this
    MLP-NN model can escalate the precision of predictions. However, the number of
    hidden layers must be more than two-thirds of input factors [69]. The dataset
    was divided into training and testing sets with a ratio of 7:3. The accuracy varied
    from 71.91% to 72.12% when the number of hidden layers was increased from 8 to
    11. Initially, the default threshold was assumed to be 0.5, which was changed
    with every training iteration. Experimental results have shown that the integrated
    model of ANN and logistic regression is better than any of the two acting individually.
    The future goals of this study are to involve more risk factors and training the
    data over more iterations for better prediction results. Acute coronary syndrome
    (ACS) is a serious medical condition due to the imbalance created among the metabolic
    needs in the body. This condition is characterized by chest pain that radiates
    to the neck and left arm. Medical professionals prescribe different laboratory
    tests and ECG based on patient conditions. Berikol et al. [70] studied building
    models for diagnosing ACS using the ML method for SVM with several patient attributes
    such as age, risk factors, sex, and cardiac enzymes’ presence. Berikol et al.
    [70] used the data of 228 patients with their medical history, clinical, laboratory,
    and imaging information to build a ML model. In this study, four methods were
    tested starting with SVM, NB, ANN, and logistic regression. The result showed
    that SVM had the highest precision in the patient group ranging from 19 years
    to 91 years. It was found that out of 228 patients, 99 were listed as with ACS
    and 129 as without ACS. SVM model gave 99.13% accurate predictions in diagnosing
    ACS. Diagnostics is a wide field and modern scientific methods are always evolving.
    This study showed the system can be integrated with medical departments for decision
    making in the future. However, the study was conducted on the patient history
    and ECG findings. Risk factors of patients were not included in the study which
    is a major limitation. Measuring pain may need a more practical approach than
    theoretical analysis. Finally, more real-time data is required for model training
    and real-time decision making. IoT systems are still developing and are bound
    to bring more technological changes. More data, research methods and advanced
    techniques will help improve the estimates for better accuracy in the future.
    In addition to ECG analysis which is being actively researched in, another challenge
    is development of wearable devices which can be used constantly and are financially
    viable. Modern wearable solutions can help to further enhance the process and
    bring a more sophisticated healthcare IoT system for improved decision making.
    B. Lung Cancer Lung cancer is the most common cancer with 1.76 million deaths
    in the year 2018 [71]. Valluru and Jeya [72] presented a model based on optimal
    SVM for classifying computerized tomography (CT) lung images with optimized SVM
    parameters to diagnose lung cancer. To improve the results of SVM, feature selection
    and parameter optimisation were done effectively. In this SVM, feature selection
    was done by modifying grey wolf optimization (GWO) algorithm integrated with genetic
    algorithm (GA). This experiment took place in 3 phases: testing for parameter
    optimization, feature selection, and optimal SVM. A set of experiments were carried
    out to explore the results in terms of feature selection and performance of classifier.
    The simulation follow-up distinctly defined the enhanced performance of the optimal
    SVM among the collated methods. GWO algorithm is classified into 4 types: alpha,
    beta, delta, and omega. GWO algorithm has 2 phases: exploration and exploitation.
    The exploration stage selects optimal solutions in the local database. Upon finding
    the optimal results, the search agents change their location based on the best
    solution procured. GWO-GA algorithm makes use of binary encoding which makes cooperation
    between attributes simpler. The solution of GA is taken in as the initial population
    of GWO algorithm. When a particular individual’s fitness level computes to be
    superior to that of GA, the GA gets replaced by said individual and then reinitializes.
    Therefore, GWO-GA algorithm gets executed until the terminating criteria is satisfied.
    Originally, the attributes are calculated using the optimal SVM, followed by categorization
    of images using an SVM classifier. To look for a hyperplane, classifier training
    is availed which distinguishes the negative samples from the positive samples.
    This complete process is a straightforward linearly separable problem in high
    dimensions, and the transformation is based on SVM’s kernel function. The presented
    procedure shows its better outcomes on every applied test image following multiple
    aspects. Above all, it achieves an average accuracy for classification of 93.54%
    which is clearly more than the compared methods, those being GA, BPSO and BDE.
    The detailed analysis experiments on the test images proved that the proposed
    procedure can be successfully applied in real time data analysis in hospitals
    and other healthcare institutions. This proposed algorithm can be further improved
    by the incorporation of deep learning models. C. Neurological Disorders For neurological
    disorders such as epilepsy and Alzheimer’s, EEG based monitoring is one of the
    most important ways in which smart healthcare systems can contribute to monitoring
    patients. EEG is a diagnostic method used to detect electrical signals in the
    brain using electrodes attached to the scalp. Another type of brain signal diagram
    that has not been extensively used for neurological diagnosis is magnetoencephalography
    (MEG). MEG signals are less attenuated as compared to EEG signals and is therefore
    a promising diagnostic tool. A cognitive IoT framework for EEG-based pathology
    detection was proposed by Amin et al. [59]. In this framework, the multimodal
    data from EEG electrodes was processed and sent to a cognitive system in the cloud
    which analyzed the patient’s state and transmitted this data to a deep learning
    system for detection of disease. The deep learning system used CNN and sent the
    results of classification back to the cognitive system which finally decided on
    the emergency response and sent it back to the medical professionals for further
    analysis. The model proposed by Amin et al. [59] used two popular CNN models separately
    to conduct two sets of experiments- the VGG-16 and the AlexNet models. The system
    with the VGG-16 model achieved an accuracy of 86.59% while the one with AlexNet
    achieved 87.32%, which are higher than those obtained by the state-of-the-art
    models. This shows future prospects of implementing smart IoT-cloud integrated
    deep learning frameworks in smart cities with the use of cognitive engines to
    overlook the decision making. Another study by Khalid et al. [73] aimed to provide
    a method for automating spike detection in MEG signal data. To differentiate between
    spike and non-spike signals, features are extracted using the common spatial patterns
    algorithm. These features were found to follow normal distribution. Thus, LDA
    was chosen as classification method. Since the LDA is being performed for two
    classes, namely spike and non-spike signals, the Fisher criterion [74] was maximized
    to provide predictors that separate the said classes. This method of classification
    was evaluated using leave-one-out cross-validation (LOOCV). The evaluation metrics
    used were sensitivity and specificity, which averaged for seven trials at 91.03%
    and 94.21% respectively. These results indicated that identification of MEG spikes
    using LDA is a promising approach to diagnose epilepsy. Apart from using classifier
    algorithm models for the classification of EEG data, computer aided diagnostics
    (CAD) can also rely on convoluted neural network (CNN) based models to classify
    EEG signals and classify them as normal, preictal, and seizure classes. As the
    EEG signals are non stationary and highly complex in nature, visual interpretation
    is rather difficult. Application of convoluted neural network models in the EEG
    data results in an automated detection of various classes of epilepsy. Acharya
    et al. [75] employed CNN to automatically classify EEG datasets into 3 classes.
    Acharya et al. [75] discussed models that used traditional CNN architecture consisting
    of convolutional layer, pooling layer and fully connected layer. The model also
    used two types of activation functions: rectified linear activation unit and Softmax.
    The model was evaluated on metrics including accuracy, specificity, and sensitivity.
    The CNN based model reported an accuracy of 88.67%, specificity of 90%, and sensitivity
    of 95%. Use of CNN models for EEG based classification shows promise; however,
    application of CNN to physiological signals is still a relatively unexplored area
    with scope for more research. D. Diabetes and Pancreatic Cancer Type 2 diabetes,
    which results in high amounts of blood sugar is one of the most widely affecting
    chronic diseases that can prove fatal if not kept in check. The incidence of diabetes
    is constantly increasing, with most individuals suffering from Type 2 diabetes
    mellitus often going undiagnosed. Efficient identification of undiagnosed diabetic
    individuals will lead to better and informed treatment of the disease and an overall
    reduced mortality rate. Han et al. [76] provided an identification model for undiagnosed
    patients of type 2 diabetes mellitus using SVMs. Due to the less comprehensible
    nature of SVMs, instead of directly using an SVM model, the tuned SVM model is
    used to extract support vectors that are in turn used to generate artificial data.
    Using this artificial data in a random forest model, rules were finally extracted
    to diagnose diabetes. This proposed model was tested based on three different
    scores: precision, F score and recall. The model was found to have a precision
    of 89.6%, outperforming the four other models that comparisons were drawn with,
    namely random forest, C4.5, NB tree, and back propagation neural network. The
    rule extraction ensemble approach using SVM with random forest improves the accuracy
    of the original SVM model. Han et al. [76] also used this ensemble approach since
    a black box model provided by an SVM will have less transparency in terms of the
    rules used to arrive at the prediction, which is especially unfavourable in medical
    diagnosis. CAD systems use computed tomography scans for automatic segmentation
    of various abdominal organs. Automatic segmentation of the pancreas is particularly
    challenging due to the organ location in the body and large variations in its
    shape and size. Statistical shape models that are used for other organs do not
    lead to accurate results for pancreas segmentation. A high accuracy pancreas segmentation
    method will lead to great improvements in analysing CT scans of diabetes and pancreatic
    cancer patients. Farag et al. [77] employed random forest classification for labeling
    of image-patches generated using over-segmentation. CT scan images are decomposed
    into meaningful regions called superpixels, which are then used to extract 46
    patch-level image features for training a random forest classifier. The classification
    was conducted with 50 trees, such that minimum leaf size is 150. In an extension
    of the method, a cascade of two random forest classification frameworks were also
    formed. This method was evaluated using six-fold cross-validation. The evaluation
    metrics used were Dice similarity coefficient, Jaccard index, volumetric precision
    and volumetric recall. It was found that the response maps plotted corresponding
    to the classification and dense labelling show success in pancreas segmentation,
    with a 70.7% Dice coefficient and 57.9% Jaccard index. The major contribution
    of the proposed method is a computation time of 6–8 minutes per testing case compared
    to >10 hours for other methods. However, the superpixel generation process can
    lead to loss of boundaries that are of lower contrast and cause segmentation leakage.
    E. Chronic Kidney Disease Chronic kidney disease (CKD) is a global public health
    problem, affecting approximately 9.1% of the population worldwide resulting in
    1.2 million deaths and was the 12th leading cause of death worldwide in 2017 [78].
    Subasi et al. [79] did a comparative study of the diagnosis of CKDs using ML algorithms
    such as ANN, SVM, KNN, decision tree and random forest. Their models were trained
    using real datasets from the UCI ML Repository. Their dataset had 400 samples
    collected over a period of 2 months, with 250 positive and 150 negative for CKD.
    They used the 10-fold cross validation method, in which the dataset is divided
    into 10 mutually exclusive sets and used 9 of them for training and the last one
    for testing. This experiment was repeated 10 times. Random forest achieved 100%
    accuracy followed by decision tree with 99%. The F scores and precision of all
    the algorithms were compared, with random forest showing the best results. This
    report suggests that ML algorithms can indeed achieve accuracy levels sufficient
    for autonomous deployment without the need of human intervention. The paper did
    lack in considering aspects such as security and implementation in real world
    along with data collection methods. F. Miscellaneous 1) Chatbot Automated medical
    chatbots can be used to reduce healthcare charges as well as improve accessibility
    to medical knowledge and services. Srivastava and Singh [80] proposed a chatbot
    for providing diagnosis to patients based on their past diagnosis and information
    obtained over the conversation. While this may be considered immoral and susceptible
    to inaccuracy as the patient might incorrectly report symptoms, the chatbot is
    designed to ask the patient for clarification in case of ambiguity. Through the
    conversational cues about the symptoms, the correct symptoms were identified with
    a 71% precision and 65% recall. The conversational cues served as a preliminary
    step to collect information about the symptoms. Then the bot asked subsequent
    questions and led the conversation in a simple language without the use of medical
    jargon. It tried to diagnose the possible diseases by converting the provided
    information to queries and collect the possible solutions for the patient’s condition.
    Once the disease was identified, the bot estimated the seriousness of the disease
    and took action accordingly. It either suggested remedies and over-the-counter
    medication, or connected the patient to a doctor if the measure reached a pre-determined
    threshold. The bot could not be authorised to give prescriptions at that stage.
    The algorithm used pattern detection to guide itself through the conversation.
    For instance, if the patient entered “I am not feeling well” the bot recognised
    that the user had little or no idea what’s wrong, hence it started with standard
    responses asking if they were experiencing any pain etc. In the other scenario,
    if the patient was pregnant, for instance, then they already knew certain facts
    about their condition, and this is now added to the fact that they may be experiencing
    pains in their abdomen, which could mean different things, such as a complication,
    labour, or maybe just an upset stomach. Hence, the algorithm could give a more
    accurate response in shorter time. Using a permanent user profile, this technology
    was especially useful in geriatric care. If the elderly were living alone and
    they were not comfortable with modern technology, a Google Home or Amazon Alexa
    module acting like a simple conversational partner could remind them the schedule
    of their medications. It could even help them understand their body while simultaneously
    updating their medical profile and even alerting their healthcare provider in
    case of emergencies. This could be a more affordable solution to many households,
    than a registered live-in nurse. Owing to the critical nature of this application,
    for the initial testing stages, it is better for the technology to be trained
    by hospitalised patients, teaching it how to interpret conversational cues and
    correlate with their hospital records to assess the bot’s prediction accuracy.
    Out of all algorithms tests for classification, SVM is suitable for complex classification
    tasks [81], while KNN is faster but unable to handle highly complex tasks. 2)
    Automation Software Bohra et al. [82] proposed a system for automating health
    monitoring and prescription to a high extent. Here, software applications were
    generated for a user to interact with. In the backend, NB classifier was used
    to analyse the data given by the patient and respond with the respective medical
    diagnosis and prescription. It includes a Java Swing application which provides
    graphical user interface for the application to execute and interact with the
    user. For a healthy patient, the application provided the answer to the queries
    based on the keywords fed by the user. In case of an unhealthy patient, the patient
    inputs the symptoms, and the algorithm was implemented to figure out what diseases
    have the maximum probability of occurring (event A) based on the existing symptoms
    (event B). The most suitable algorithm for such analysis is Naive Bayes. In case
    the fitting probabilities were less than average, the case is presented to physicians,
    who then discussed and consulted the patient and that case was again stored in
    the database as reference. The application introduced through this facilitates
    consultation without physically being attended by the doctors. Some biometric
    techniques could also be integrated with the system in future, like heart beat
    and blood pressure measurement. Also, the system could be included with video
    calling feature for interaction between doctors and patients. This system would
    help patients in getting minor health issues resolved easily. Hence, a software
    which was initially used for classifying the effect of a medication on an individual,
    can be used to create a database of its effectiveness. This data could help in
    future to red flag any such product which may have a negative effect on majority
    of users. This methodology can be implemented on future recuperative devices that
    can be used as an channel that consumers can use, to express their feedback. Organizations
    profit by this regular criticism as this helps them to analyse and address the
    issue effective immediately. 3) 28 Day Mortality As the medical technology further
    develops, the number of parameters that provide information about the human physiological
    condition keep increasing, forming datasets of higher dimensions. This data is
    then used to develop ML models that diagnose abnormalities by classification.
    The high dimensional clinical datasets increase the complexity of classification
    and thereby lead to poor efficiency and performance. Keeping up with technology
    trends and the advent of edge and fog computing, it is worthwhile to invest in
    reducing computing load for basic broad classification and decision making. GAs
    have been used frequently for feature selection and reducing parameters to only
    the most significant ones. However, over time GAs have been falling short when
    there is a need to find and maintain multiple local optima. This led to the development
    of niche GAs (NGA). This algorithm can easily locate local peaks and hence present
    multiple optimisation solutions, or in this case multiple parameter reduction
    scenarios. However this method lacks adaptability to unknown datasets, which led
    to the improved NGAs (INGA) [83]. There are broadly two steps to take when extremely
    wide datasets need to be interpreted- feature extraction and feature selection.
    Feature extraction is used to reduce the dimension of data by transforming the
    original feature space into a new one of lower dimension. DRA such as independent
    component analysis (ICA), PCA and multidimensional scaling (MDS) are some commonly
    used algorithms. They work by methods functionally similar to finding a “best
    fit dimension” that is a 1-D line for a 2-dimensional dataset, and a plane for
    a 3-dimensional dataset. However, after dimension reduction, ICA, PCA and MDS
    generate new parameters whose significance is not always interpretive. The second
    step is feature selection, in which the optimal features are shortlisted such
    that they retain sufficient information for deriving useful decision models and
    conclusions. The principle behind NGA is application of the biological concept
    of a niche to the GA’s evolutionary computation. A distance parameter L is specified
    before the survival environment is shown. The L of NGA is set in advance, allowing
    only a single excellent individual solution in this distance from centre which
    is known as the niche radius. Setting the value of L requires some knowledge of
    the expected results. In many cases, it would be useful to pursue every trend/probable
    solution that can solve the problem differently, as medical expertise may not
    agree with the algorithm’s optimal solution. Hence an adaptive niching method
    was developed in conjunction to dynamically adjust an NGA algorithm’s radius to
    fit better with the dataset. The twin-space crowding genetic algorithm (TCGA)
    and game-theoretic genetic algorithm (GTGA) are often used for feature selection
    but they are incapable of obtaining the niche distance following evolution. Hence,
    there is a chance of eliminating the potentially excellent individuals [84], [85].
    The INGA algorithm was benchmarked for accuracy on a dataset of sepsis patients
    to predict the “28-day mortality” where it outperformed any known DRA by yielding
    an accuracy of 92%. Such a system can yield a weighted solution for associating
    varying importance to the wide range of medical parameters that can greatly reduce
    diagnosis time and reduce the compute load on the cloud. SECTION V. Prognosis
    and Spread Control IoT has been a topic of great interest in the healthcare community
    over the last few years. Healthcare is an important domain and IoT opens up a
    wide spectrum of opportunities to make it better. In this section, we discuss
    how IoT has been used by researchers over the world to develop systems for monitoring,
    detecting, preventing and controlling the spread of various diseases. IoT is essentially
    a technology where various sensors are used to gather relevant information which
    are then analyzed over the Internet. This can be done using a single node or a
    network of nodes. This concept of gathering real time information makes IoT very
    relevant to today’s healthcare. Human body is one marvelous system and so are
    the ailments that arise in it. However as it may seem in any natural system, our
    body sends out information through innumerable signals which can provide us a
    host of information regarding it’s status. Thus, this information is of importance
    to any healthcare provider, as it decides the course of action to be taken to
    help a patient. IoT helps gather this information. Technologies such as ML helps
    us extract valuable information from it. The most common way to read health data
    of a person is through wearable devices and sensors. This could range from a smartwatch
    to read pulses to implants in specific regions of the body. These devices have
    access to first-hand information which can then be relayed to the endpoints or
    databases through the Internet. Indirect methods include the user inputting data
    using a smartphone [86]. In this section, we look at certain applications of IoT
    and ML techniques to control the spread of certain diseases, both infectious and
    non-infectious. Table 3 at the end of this section gives a brief summary of the
    reviewed publications that pertain to use cases of ML algorithms for prognosis
    and spread control. TABLE 3 Use Cases of ML Algorithms for Prognosis and Spread
    Control A. Cardiovascular Disorders Heart disease mortality rate is still increasing
    even though the technologies in the area have vastly improved in the last few
    decades. Therefore it is one of the most prevalent causes of death, especially
    in the elderly. Major factors that have been identified that lead to heart disease
    include high blood pressure, high cholesterol, smoking, diabetes, etc. An early
    and accurate prediction of the likelihood of a person developing heart disease
    can help not only decrease the mortality rate, but also prevents a vast majority
    of such cases by targeting the right subgroups of the population to bring in lifestyle
    changes in order to decrease their already higher chances of risk. Yadav et al.
    [87] developed a system to predict the onset of heart disease in patients in their
    early stages using the NB algorithm. The system’s easy to use graphical user interface
    and the requirement of a low number of records for the training of the NB classifier
    made this system especially useful. The data was obtained from the Cleveland hospital
    and consisted of 303 patients with their particulars of age, sex, ECG reports,
    blood pressure, etc. Input data was used in two forms, first to train the model
    and then test the remaining data to find the system efficacy. Results were obtained
    in binary form with 1 predicting the presence of heart disease and 2 predicting
    the absence of heart disease. Though the models showed high efficiency of 85%,
    further training on larger datasets is required before adopting in real life scenarios.
    Choi et al. [88] used NLP to obtain patient sentences (ordered sequences of various
    medical codes) as distributed vectors by using skip-gram method and classification
    methods such as logistic regression, neural network, SVM and KNN. Using skip-gram
    embedding, concept and encounter representations are generated from which patient
    vectors are then derived. These represented the patient’s medical history and
    are used to predict heart failure. Significant improvement in heart failure prediction
    was observed by the authors. Not only was the model using ML methods more accurate,
    but also the time taken to train this model was less as compared to other models.
    Out of SVM, logistic regression, MLP and KNN, KNN was found to benefit the most
    from the use of these medical concept vectors. B. Pulmonary Disorders The prevention
    of a pandemic outbreak requires early diagnosis. Pulmonary infections like the
    influenza virus have a long history of quickly turning into pandemics, with the
    most recent worldwide pandemic also being one that affects the respiratory system-
    the COVID-19 pandemic. Therefore, it is required that there is a system in place
    to identify and predict the occurrence of such diseases that might cause outbreaks
    before they actually take effect, since it is easier to control these diseases
    at an early stage than when they start spreading rapidly. Yin et al. [89] established
    a stacking model to make predictions on antigenic variants of the H1N1 influenza
    virus. They approached this by first classifying past cases as pandemic-based
    and epidemic-based. Entropy was calculated to find out the variation in strain
    mutation in different periods. Three different feature engineering methods, viz.
    residue-based method, ten regional band-based method, and five epitope region-based
    method were used to validate if the model was universally adhering. The stacking
    model used is conceptually similar to k-fold cross-validation and provides out-of-sample
    predictions for small and medium data-sets. Using neural networks, level 2 models
    were designed to get better results than a single level model. Rapid antigenic
    shifts can cause variants to occur, which make it tough to understand the effects
    of specific mutations on antigenicity. This model could be improved upon by taking
    into account more of crucial factors like climate and the human immune system.
    Prediction of cases of Acute Upper Respiratory Tract Infections (URTI) during
    its early stages is crucial to minimizing its adverse effects on infants and preventing
    fatality. In order to predict URTI cases, Ginantra et al. [21] collected URTI
    data from community health clinics in Indonesia and used KNN classifiers for prediction.
    The features used to classify comprise of various symptoms of the disease such
    as fever, headache and flu. Results obtained using a confusion matrix showed 97.4%
    sensitivity, 90% specificity, and 94.7% accuracy for the KNN classifier. López
    Pineda et al. [90] showed a promising application of NLP for the detection of
    influenza. Collection of data was done through free-text emergency department
    (ED) medical reports from 4 hospitals. The data comprised of: 468 reports on polymerise
    chain reaction (PCR) positive influenza patients in the period from January, 2010
    to August, 2010; and 29,004 reports of patients NOT associated with a positive
    PCR test in the period July 1, 2010, to August 31, 2010. Topaz was used as the
    NLP parser to classify the data between non-acute, acute, and missing. The authors
    drew a comparison between the prediction capabilities of 7 different ML classifiers
    and an expert-built Bayesian classifier. Performance was evaluated using three
    different configurations with the aim to correctly deal with missing data. The
    performance of the NLP-finding-extraction system was measured using accuracy,
    recall, and precision scores. NB, logistic regression, SVM, and ANN algorithms
    all showed almost equally competent performance. The NB classifier was superior
    (BSS: 0.35, Area Under Curve (AUC): 0.93) due to having a lesser training time
    and not requiring pre-processing to treat missing values. It was concluded by
    the authors that ML classifiers showed performance superior to expert Bayesian
    classifiers for the given use case. C. Neurological Disorders Epilepsy is a fairly
    common neurological disorder that affects people of all ages across the globe.
    EEG is one of the most simplistic tools used to diagnose the disorder. EEG helps
    the doctors analyze the electrical activity of the brain, and any disruptions
    in this activity could be due to epilepsy. EEG reports are visually inspected
    by a diagnostician. However, visual inspection has certain limitations and can
    have a huge error margin, subjective to the competence of the doctor. Deployment
    of ML algorithms for classifying the risk levels of epilepsy from EEG data is
    a promising way out from the limitations of visual inspection. Performance of
    KNN classifiers in classifying the epilepsy risk levels were analyzed in detail
    by Manjusha and Harikumar [91]. Here, KNN stores all the sample datasets and new
    cases can be classified by measuring their similarity with the old cases. Authors
    of this work applied this algorithm to the power spectral density values with
    reduced dimensions for better outputs. Manjusha and Harikumar [91] used different
    parameters to calculate the efficiency of the KNN algorithm. KNN was evaluated
    on parameters such as classification perfection (83%), performance index (78%),
    sensitivity (90%), and specificity (93%). As researched by Birjandtalab et al.
    [92], KNN is very helpful in studying the nonlinear data, giving it an advantage
    over several other classification algorithms. However, KNN fails to solve the
    false alarm situation, KNN reports false alarms approximately 10% of the times.
    Thus, this statistics will have to be taken into account while deploying this
    algorithm. The high number of false alarm cases encountered in the use of KNN
    classifiers are undesirable, which is why an alternative to KNN for this application
    is necessary. Manjusha and Harikumar [91] discussed the use of k-means clustering
    algorithm as a classifier. k-means is a commonly used partitional clustering technique.
    Using this algorithm, different clusters of datasets can be created based on certain
    parameters, such that a given cluster has datasets with maximum similarity and
    different clusters will have minimum similarity. Authors analyzed the performance
    of k-means clustering algorithm on the same parameters as KNN [91]. k-means performed
    really well on the false alarm parameter, generating 0% false alarms, and 100%
    sensitivity. It’s correct classification percentage was close to 94. This shows
    k-means is a better algorithm than KNN for epilepsy risk level classification
    from EEG data. However, k-means fails to provide similar outputs when dimensions
    of input increase. It must be applied on dimensionally reduced data, which can
    be achieved by different dimension reducing methods. Another AI based framework
    used for classification based on EEG data is given by Amin et al. [59]. They proposed
    a cognitive healthcare framework that classifies a patient’s EEG signals as pathologic
    or normal and outlines the next steps to be taken. In the proposed model, various
    sensors are embedded in a patient’s vicinity to read body temperature, heartbeat,
    blood pressure, voice, facial expressions, body movement, and EEG. This data is
    sent to the cloud system through a WAN. Now, in the cloud, a cognitive engine
    is said to be working. It is to be noted that this engine was not implemented
    by the authors, nor its specifications given. It is said to have a backbone of
    AI and deep learning algorithms. Looking at the data, the engine decides whether
    to send the data for more analysis. If so, the data is sent to a classifier model
    (in the cloud system). CNN models VGG 16 and AlexNet are used for detection and
    classification. The results are sent back to the cognitive engine which then takes
    further steps if the patient’s signals are pathological. The patient as well as
    concerned healthcare professionals get an alert and also suggestions. As is seen
    in the work by Devi et al. [93], the use case of a cognitive system or engine
    was proposed, but it has not been implemented. This is because much has to be
    done to bring such a fool-proof system into existence. This remains one of the
    greatest challenges for implementing cognitive healthcare frameworks. The use
    of pre-ictal EEG data for the prediction and suppression of seizures in patients
    was demonstrated in [95]. A brain computer interface (BCI) developed in a cloud
    computing framework predicts seizure onset using CNN and then the required neurostimulatory
    signal is given to suppress the seizure. The combined use of cloud computing,
    proper preprocessing of data, and CNN results in the model outperforming other
    EEG prediction systems, displaying an accuracy of 96% and precision and sensitivity
    of 97% each. This system, although very accurate, is constrained by the requirement
    of large data storage and high computing capabilities. Another important and upcoming
    area of neurological application of AI is for Parkinson’s disease which is a progressive
    and chronic movement disorder. It can result in poor movement, balance, stiffness
    in arms and legs, trembling and speech disorder. Sixty thousand Parkinson’s cases
    are diagnosed in the US every year, while the number touches a million in India.
    No known cure is available, but early identification can help in patient management.
    Parkinson’s is a topic of active research with firms and researchers involved
    in drug development as well as monitoring systems [96]. Recently IBM along with
    Pfizer Inc. developed a new way to measure intensity of Parkinson’s by IoT based
    remote patient monitoring solutions [97]. Panda and Panda [98] addressed the issue
    of better classification of Parkinson’s using nodes. The data used is voice recordings
    from digital home virtual assistant devices. It is accumulated in a dataset called
    Lee Silverman Voice Therapy (LSVT) voice data. Feature extraction of the raw data
    was done using PCA. Post that, recorded features were fed to the three classifiers:
    NB, random forest and decision tree. In terms of speed of execution, NB was the
    fastest while in terms of performance, random forest gave best results. D. Physical
    Injuries Over 10% of the world’s deaths result from trauma caused by physical
    injuries [99]. When a physical injury causes too much blood loss, the oxygen supply
    to the body’s organs is not able to satisfy its demand. The body is said to be
    in hemorrhagic shock (HS) in such a situation. The severity of a hemorrhagic shock
    determines how urgently its treatment needs to be performed. In such a scenario,
    accurate prediction of hemorrhagic shock severity and the patient’s recovery from
    it is imperative to prioritize severe cases, so as to minimize the mortality rate.
    Lucas et al. [100] used logistic regression to model a prediction system that
    can predict whether a patient will recover from hemorrhagic shock after resuscitation,
    using rats as test subjects. The rats were classified into two groups based on
    whether they recovered from the HS or not. After extracting all features and discarding
    the irrelevant ones, a total of 69 features were used to form a feature vector
    using which three different classifiers were trained and tested. The scikit-learn
    python library was used for applying logistic regression. The performance of this
    logistic regression model was measured in [100] using three different metrics:
    mean cross-validation accuracy (using 10-fold validation), Younden’s J statistic,
    and Cohen’s kappa coefficient. The classifier with the reduced feature set, namely
    the final classifier, showed an accuracy of 0.833+−0.114 , with a Cohen’s kappa
    value of 0.617. The J value for the final classifier was 0.76. This classifier’s
    results outperformed a baseline classifier that represented currently used methodologies
    of using heart rate and mean arterial pressure, even when multiple experimental
    protocols were used. Although the proposed method in [100] shows promise, the
    size of the test dataset was small due to which it is difficult to say that it
    will show good results for all scenarios and cases. Among the various physical
    injuries people are vulnerable to, a deadly but preventable class that particularly
    stands out is injury caused by falls. Falls are much more frequent in the elderly
    and are especially dangerous to their relatively fragile anatomies. Fall risk
    is normally assessed through testaments of the subject or physical examinations.
    These are unreliable and incomplete. Non-linear SVM (NLSVM) along with some other
    algorithms were used for patient-specific fall prediction [43] and detection system
    [94]. Continuous observation and documentation, with prompt decision making set
    up is critical for fall prone patients as similar systems have been introduced
    for heart patients [101]. Saadeh et al. [94] proposed a system that senses the
    movements through a triaxial accelerometer sampling at 256 samples/s attached
    to the thigh. The acquired acceleration along three orthogonal axes is then sent
    via low energy Bluetooth interface to an FPGA. The acceleration is used to extract
    features. The offline NLSVM learner uses fall information of a patient to give
    personalized parameters that are uploaded to the processor. Figure 5 shows a visual
    representation of the architecture of the proposed system. The NLSVM classifier
    then processes the feature vector during runtime to decide whether it is a pre-fall
    case or not. To prevent false positives, three consecutive decisions are needed
    before the alarm is set off. The study was conducted with 20 subjects aged over
    65, with over 100 instances of activities of daily living and falls. When validated
    using the Mobifall dataset, the model achieved a 97.8% sensitivity and 99.1% specificity,
    outperforming models using linear SVM, decision tree and KNN classifiers. FIGURE
    5. Fall Detection System [94]. Show All E. Spread Control The current scenario
    of the world facing the uncontrollable spread of the coronavirus pandemic and
    its drastic repercussions has led to people realising the scale of the impact
    that such contagious diseases can have. Therefore a lot of research attention
    has been directed toward controlling the spread of such contagious diseases. Such
    pandemics cause not only a surge in patient numbers worldwide, but also lead to
    disruption of economies on a huge scale and drastically affect the quality of
    life due to their isolation requirements. State-of-the-art ML based models can
    prove extremely effective in predicting the consequent spread of a contagion and
    can thereby lead to accurate and early decision-making in response to it [102].
    Lopez-Rincon et al. [103] proposed identification of SARS-CoV-2 using state of
    the art deep CNNs by automatic creation of features from genome sequencing. Genome
    sequence data from the 2019 repository novel coronavirus resource and NCBI repository
    was divided into two groups of 9:1 for training and testing. A 10-fold cross-validation
    scheme was used on this sample data. The experiments showed that the above approach
    successfully classifies SARS-CoV-2 and distinguishes it from other viruses of
    the coronavirus family. The identification itself proved to be 98% accurate while
    classification into different coronaviruses shows an accuracy of 98.75%, although
    the training of the model was conducted on a limited data-set and limited genome
    sequences were considered. Ebola is another extremely contagious disease that
    spreads rapidly. Since 2014, various parts of the world have experienced deadly
    outbreaks of this infection. Dominican Republic is still battling with the virus.
    Since it is infectious and can be spread from human to human, early detection
    and monitoring of infected patients is an important step in controlling the spread.
    Sareen et al. [104] proposed an IoT based cloud framework to control the spread
    of the virus. A system based on RFID (Radio Frequency Identification Device),
    wearable sensors, and cloud computing was given. Under the model, each patient
    is first registered using a mobile phone and thus gets a unique identification
    for future references. Data from body sensors is collected using the mobile phone
    through bluetooth. This data is sent to the cloud environment for analysis. It
    is classified using a decision tree approach, which classifies the user among
    six categories (determined using the state of the symptoms). Next, the user is
    classified using RFID and wireless body area network (WBAN). RFID detects close
    proximity interactions (CPI) between the patient and other people. If an uninfected
    person comes under CPI, an alert message is sent to him/her through mobile phone.
    In this identification, a proposed temporal network analysis was done using parameters
    such as clustering coefficient, centrality, and temporal path length. Based on
    the experiments conducted, the authors got a classification accuracy of 94% for
    synthetic data of 2 million patients. Further, other models of classification
    were tested. Random tree and NB gave accuracy of 50% and 53%, respectively. In
    an interesting work, Sato et al. [105] built an epidemic spread model using IoT
    technologies to monitor human mobility and contact data. They introduced the agent-based
    infections diffusion simulation using real human mobility data as a metapopulation
    network. Such simulations were found to be very important in controlling the spread
    of outbreaks such as Ebola. Adding to these methods, Chen et al. [106] sought
    out to develop a model to track dynamic changes in a network. This network could
    be an epidemic spread network. They proposed using mobile phone data to build
    their model. Synthetic data was used for classification. This is because deploying
    WBANs in areas affected is a big challenge. Also, for this to work, people should
    have RFID reader enabled mobile phones. Adding to that, patients are often not
    ready to carry a RFID tag. These are some challenges to be looked at. Righetto
    et al. [107] used rainfall as a variable to develop a prediction model for the
    spread of cholera in Haiti. The rainfall pattern acts as a marked Poisson process
    and the continuous rainfall events are processed as discrete events such that
    the mark represents the depth of the rainfall. The prediction of the spread of
    the disease is then done using k-means clustering. This model was limited in its
    accuracy to predict the evolution of new cases. The real-time improvements in
    the present situation were also not taken into account. Malaria is one of the
    challenging diseases in several parts of China, especially in Henan province.
    Wang et al. [108] conducted a study to evaluate the relationship between the diagnosis
    and complications emerging in patients with malaria disease. ML model based on
    decision tree was integrated for defining factors, frequencies, and nodes in the
    correlation among the healthcare institutions and malaria cases. The decision
    tree methodology was highly successful in building tree models with accuracy of
    82.2% and 74.1% for the purpose of initial diagnosis and complications. This study
    will help to bridge the gap for decreasing future cases. The study further proposed
    a more simplified online system in combination with WeChat for evaluating malaria
    to keep a strict awareness about the different factors. Data were obtained from
    CDC, Zhengzhou City, the capital of Henan province, for conducting a study on
    malaria patients, starting from the year 2012 to 2017. All the decision tree methods
    were evaluated for studying the relation with classification and regression tree
    (CRT), chi-squared automatic interaction detection (CHAID), and statistical package
    for social sciences (SPSS) so as to increase model precision. Wang et al. [108]
    found that the malaria patient population studied was predominantly male (366
    patients out of 371 total patients were male). The average age of patient came
    out to be 37 years, ranging from 17 to 67 years. There was no life lost in the
    study. P. falciaprum, with 319 cases, was the highest while fewer cases for Plasmodium
    malariae, Plasmodium ovale, and P. Vivax at 5, 13, and 34, respectively, were
    observed. However, this study was conducted on a very small dataset and requires
    more repeated trails, improvement, and assessment from the professional experts.
    Major factors that emerged from complications of imported malaria cases include
    less number of patients seeking medical advice and insufficient capacity in diagnosing
    malaria from the health institutions, mainly by the lower medical professionals.
    In another work by Kassé et al. [109], SVM classification was used for better
    prediction and control of a parasitic disease called Schistosomiasis or Bilharzia.
    It is said to affect more than 200 million people spread over 7 countries. A data
    collection module Wapsmote was used to collect data from various sensors (pH,
    temperature, radiation), which was then sent to a cloud database using GSM/3G/GP
    RS mobile network and an Ethernet network. Based on these inputs, an event detection
    algorithm using SVM was designed to assess transmission contamination risk. ILI
    or acute respiratory infections are among the main factors for mortality around
    the world. Common symptoms include fever above 38 °C, pharyngitis or cough, and
    these tend to get amplified during winters. As per the World Health Organization
    (WHO) estimate, there is a 5 to 10% increase in adult influenza-based cases and
    20 to 30% increase in influenza-based cases globally in children every year. Studying
    the pattern of these outbreaks can help governments to minimize the impact of
    these diseases and implement preventive measures against them. Miller et al. [110]
    proposed methods to generate accurate forecast data for influenza outbreaks using
    smart thermometers. These were connected to a mobile application which can aggregate
    and store this data onto a cloud based platform for analysis. The data also included
    location of users using the GPS of their mobile phones. The authors tried to see
    the correlation between thermometer collected data and readings reported by the
    CDC. They developed a model for forecasting ILI activity up to three weeks in
    advance. Also, they analyzed the data to track fever duration and identify biphasic
    patterns. Further, they researched transmission of febrile illness in family members
    of users. To get the forecasts, they used a 52 week sliding training period and
    then evaluated predictions for next week. This was done iteratively to generate
    68 such forecasts. The predictions were made using an autoregressive moving average
    of 52 weeks. This was done for two cases: the CDC data and the CDC data along
    with thermometer measurements. Then, these were compared to the lagged CDC data
    to get correlation of forecasted data with real data, forecast error, and forecast
    correlation using different time periods (1 week, 2 week lags). To analyze forecasting
    performance, a generalized linear model was used along with autoregressive components.
    It was found that thermometer readings were highly correlated with national ILI
    activity. Also, using thermometer readings, forecasts were improved in real time
    and upto 3 weeks in advance. Tapak et al. [111] investigated different ML methods
    of ANNs, SVM, and random forest series using root mean square errors (RMSE), intra-class
    correlation coefficient (ICC), and mean absolute errors (MAE) techniques for building
    models for influenza based outbreaks. Data for this study was taken from the FluNet
    tool developed by the World Health Organization for all the cases of influenza-related
    illness in Iran from the duration of January 2010 onward to February 2018. The
    study used 73483 influenza cases who had a fever of more than 38 ∘ C accompanied
    by cough. Models were built using multiple ML algorithms of ANN, SVM, and random
    forest time series to find values, insights, frequencies, and residuals. Tapak
    et al. [111] performed evaluation using RMSE, ICC, and MAE techniques on illness
    frequencies. Random forest test obtained the best result from all other techniques
    with RMSE = 22.78, MAE = 14.99 and ICC = 0.88 for the tests set. Positive results
    show that random forest technique of ML can be used for building models for predicting
    outbreaks and illness frequencies from influenza. However, the study is limited
    for not including factors of climatic parameters and weather conditions. Sentinel
    data from ILI is another limitation of this study. Thus, this information must
    be carefully evaluated before implementing this algorithm for predicting the outbreaks
    of ILI. SECTION VI. Assistive Systems Assistive systems are systems that act as
    rehabilitative frameworks or provide support in daily life for people with disabilities.
    These form an important class of applications for ML based IoT frameworks since
    a lot of these systems rely on accurate judgement of whether and to what extent
    the disabled person is able to perform a task. This could be anything from limb
    movement [112] (for which assistive systems may provide physical rehabilitation)
    to being able to hear properly (like cochlear implants). This section aims to
    discuss a few of the important applications in EEG and surface electromyography
    (sEMG) signal based assistive systems that require ML for the processing of these
    signals. Table 4 at the end of this section gives a brief summary of the reviewed
    publications that pertain to use cases of ML algorithms for assistive systems.
    TABLE 4 Use Cases of ML Algorithms for Assistive Systems A. EEG Based One of the
    most important applications of BCI devices is to help physically disabled patients
    transcend the limits of their disabilities and live a normal life [114]. This
    is achieved by providing them with BCI devices that they can control with their
    natural impulse so that no physical movement of their body parts is required to
    perform an action. Such implementation is made possible by using EEG signals from
    brain neurons as control for the systems. The recent advances being made in BCI
    technology form the foundation stone for next generation prosthetic implants.
    Such prosthetic implants and other BCI assistive systems can prove life-changing
    for persons with disabilities. Poorna et al. [115] looked into an application
    of analysis of EEG signals where it was used to gather ocular information (eye
    blinking) and classify it in such a way that it can be used for a control application.
    Control applications could be anything ranging from home automation to navigation.
    Such applications help people to overcome the barriers due to physical shortcomings
    to interact with the environment. In the said work, the emotive EPOC headset was
    used to obtain EEG signals corresponding to the closure of the eyes. The data
    gathered from EEG electrodes was in the form of small voltage (micro) signals.
    Thus, it was embedded with a lot of noise. To remove the same, pre-processing
    was done using PCA. For feature extraction, the spectral and cepstral features
    of the blinks were considered, giving a total of six parameters. For classification,
    three methods were used: quadratic discriminant analysis, ANN, and multi class
    SVM. Results stated that for combined feature classification, quadratic discriminant
    analysis gave the best accuracy of 81%. Zhang et al. [116] proposed the use of
    BCI integrated with a unified deep learning framework for various applications
    like making typing systems from EEG signal patterns and controlling robots for
    domestic assistance. Such systems are of paramount importance to speech and/or
    visually impaired people. The authors used RML for the classification of various
    EEG signal patterns. Using selective attention mechanism and long short-term memory,
    they aimed to make the system adaptive to the person using it. The framework was
    compared with state-of-the-art BCI frameworks and was seen to outperform them
    with an accuracy of 93.63%. ANNs such as multi-layer perception are one of the
    most popular classes of classifiers used in BCI. Poorna et al. [113] presented
    a comparison of various classifiers used in BCI. It has been concluded that ANN
    classifiers give superior classification accuracy as compared to other classifiers
    like KNN. While the KNN classified studies gave 96.06% accuracy [113], ANN gave
    98.58% accuracy and also surpassed KNN in terms of sensitivity and specificity
    (94% and 98.89%, respectively, as compared to 87.42% and 97.61%, respectively,
    for KNN). Figure 6 shows the headset and electrode positions that were used in
    the literature. While the results presented [113] show ANN’s superiority, it must
    be noted that the different classifier performances were not studied under the
    same context. Therefore, the comparisons drawn are not objective and cannot be
    completely relied upon. FIGURE 6. (a) Emotiv Epoc headset used by Poorna et al.
    [113] (b) Electrode positions of Emotiv Epoc. Show All Classifying signals based
    on various EEG sensors is being actively researched. However using them for aiding
    patients with physical limitations is an open challenge in the field. B. SEMG
    Based An alternate to BCI by EEG sensors are surface sEMG signals, which are composed
    of electromyography and neural electrical signal on the skin surface of a shallow
    muscle. It can be detected from the sensors and can be linked to actuators to
    complete the action the patient is intending to carry out. Peng et al. [117] discussed
    gait phase detection to achieve normal movement of lower limb auxiliary robots
    using a kernel LDA based nonlinear fusion model. The complex stance and swing
    motion of lower limbs with realistic variations is a challenging model. After
    feature extraction and selection is done, LDA is used in gait phase recognition
    as it is efficient and robust against over-fitting. Similar to Novak et al. [119]
    who used a linear ensemble learning model, Peng et al. [117] also used a combination
    of learning techniques for optimal performance. In recent years, usage of softmax
    regression in neural networks with nonlinear fusion is preferred for multi-classification
    problems. Here, simple voting fusion and weighted fusion were compared with the
    non-linear fusion method of their novel approach which gave the best and final
    results. An accuracy of 92.5% in walking while performing cognitive tasks was
    achieved. As a real time application, an important performance metric is computational
    complexity. Their algorithms takes 90 ms which is fit for the application. Chen
    et al. [120] also discussed development of bionic legs and walking assist boots.
    Yang et al. [118] designed a smart wearable armband which uses sensors to record
    sEMG signals for hand gesture identification, and to transmit the information
    to a robotic arm for it to mimic these movements and help in stroke rehabilitation.
    The processing and classification of the data collected by these sensors is done
    using PCA. Six different sEMG features were employed for the classification process.
    This system achieves an accuracy of 96% in identifying the correct hand gesture
    made by the user. SECTION VII. Monitoring Continuous monitoring of a person’s
    health is gaining a lot of recognition since it can not only drastically reduce
    the mortality resulting from sudden emergencies, but also promote awareness about
    one’s own health and hence lead to a healthier lifestyle. This section aims to
    cover some major advances that are being researched about in this domain and that
    use ML as their backbone. Table 5 at the end of this section gives a brief summary
    of the reviewed publications that pertain to use cases of ML algorithms for monitoring
    applications. TABLE 5 Use Cases of ML Algorithms for Monitoring A. Cardiovascular
    Disorders A person’s blood pressure (BP) is a direct indicator of how healthy
    their heart is, and high BP (also known as hypertension) can lead to various heart
    diseases, as well as stroke, dementia, and a number of other serious complications.
    Hypertension patients are required to regularly monitor their blood pressure so
    that these complications can be minimized. Most blood pressure measurement devices
    today are not portable and use cuffs which can be inconvenient to use. Therefore,
    an accurate and portable continuous blood pressure monitoring system can prove
    to be extremely useful. Tabei et al. [121] presented a cuff-less approach to continuous
    BP measurement by using smartphone cameras to record photoplethysmogram (PPG)
    signals from a person’s fingertips and converting them to BP values using a simplified
    linear relationship. The parameters in this relationship are specific to the person
    whose BP is being calculated and are found using linear regression. The linear
    regression model is trained using LOOCV method. The trained model is tested, and
    the evaluated BP is compared to BP measured with an oscillometric blood pressure
    monitor. Tabei et al. [121] measured both the diastolic blood pressure (DBP) and
    the systolic blood pressure (SBP), the scatter plots, and correlations. Regression
    lines were drawn between the estimated and actual values for both of them which
    showed that there is a positive linear relationship between them. The MAE and
    standard deviation (SD) found for DBP were 2.98 and 2.49 mm of Hg, respectively,
    while those for SBP were 3.28 and 2.46 mm of Hg, respectively. These values lie
    below the universal standard [122] of MAE of 5 mm of Hg and SD of 8 mm of Hg,
    making the proposed method a practically usable approach. Ganesan and Sivakumar
    [123] proposed to gather real time information about patients using wearable IoT
    devices. This includes blood pressure, blood sugar, and ECG. To train the model,
    UCI database was used which includes the past logs of the medical data gathered
    from medical institutions. Post training, the model is tested for incoming data
    of patients. Classifiers used were J48, logistic regression, MLP and SVM. J48
    gave better accuracy than logistic regression, though logistic regression performed
    better than MLP. An open issue in the area is building a model to train on various
    kinds of data. This is because patient status is obtained in various forms such
    as images, test records, graphs, etc. For the system to work properly, the model
    needs to identify the type of input, classify it, and normalize it with all available
    formats of input. Kakria et al. [124] developed a monitoring system, such as the
    one used in the above case. The data was collected using wearable sensors and
    smartphones. It was then made available to medical personnel through a dedicated
    interface. B. Neurological Disorders A stroke occurs when blood flow to a part
    of the brain stops. This deprives the brain of oxygen and essential nutrients
    leading to the death of brain cells. It may lead to paralysis, weakness, trouble
    in speaking or seeing, and even death. It’s no surprise that stroke comes in the
    top five causes of death worldwide. However, stroke is preventable if the risk
    factors are noted and acted upon in due time. Also, the monitoring of stroke patients
    can reduce the chances of it happening again. In an effort to provide a diagnostic
    prediction for stroke by patient monitoring, Ani et al. [125] used IoT and ML
    techniques. Wearable devices were used to check blood pressure and pulse rate
    of the patient. Additionally, a sugar sensor (to be operated by the patient) was
    used to take input of sugar level. The collected data was sent to a cloud storage
    to be stored and analyzed. The collected data was made available to caretakers
    and doctors through a web interface. Classification algorithms were used to generate
    prediction of risk factor of the patient. NB and random forest classifiers were
    used which had records of 191 patients with both positives and negatives along
    with attributes such as gender, age, blood pressure, sugar levels and heart rate.
    Random forest used multiple decision trees for the prediction. It divided the
    dataset into multiple subsets and each of them leads to a particular decision
    tree (classifier). Then, these were combined to give a single outcome. For the
    used dataset, random forest gave an accuracy of 93% while Bayes gave 90%. The
    challenges that lie ahead are designing better IoT based systems to gather critical
    parameters of a patient without the need for the patient to input the data himself/herself.
    Combining cognitive technology and IoT can significantly improve the healthcare
    system for remote monitoring. Al-hussein et al. [43] conducted a study for monitoring
    and diagnosing epileptic seizures using deep learning methods under the cognitive
    IoT healthcare framework. Cognitive healthcare-IoT (CHIoT) is the latest technology
    that offers a more collective approach for use in the healthcare industry. CHIoT
    empowers system for combining physiological and psychological applications for
    dealing with medical emergencies and quick response. A healthcare framework was
    proposed which uses wearable sensors to obtain signals, (primarily scalp EEG)
    and a cognitive engine based on deep CNN for extracting features followed by stacked
    autoencoder. The system does preliminary monitoring at the edge itself by monitoring
    the patient’s gestures, movements, facial expressions and EEG signals to determine
    the state and in case of possible seizures, sends the data to the cloud. In the
    cloud, the data is first converted into a 2D matrix with time as the horizontal
    parameter and electrode as vertical. Next, this 2D representation is passed to
    the deep CNN to simplify it, that is, represent it in lower dimensions. Traditional
    dimension reduction algorithms might not have proved effective as the EEG signals
    for seizure vary for different people. This model had 7 layers with convolution
    and max pooling blocks with a softmax output. The activation function was a combination
    of exponential linear units. This was followed by stacked autoencoder with 2 autoencoder
    layers and a softmax output. It had 1000 neurons in the input layer, 500 in next
    autoencoder layer, 200 in the next and finally a fully connected softmax with
    2 classes. Training was done on CHB-MIT dataset which was collected at Children’s
    Hospital Boston having 686 multiple channel scalp EEG recordings collected from
    23 patients. It had 198 positives with the seizure lasting about 25s in most of
    them. This model gave 99.5% overall accuracy and 93% average sensitivity which
    is better than most of the other models based on the same dataset. This inference
    was finally passed to professionals to decide what service to provide. Hadi et
    al. [126] proposed an interdisciplinary approach to achieve remote patient monitoring.
    In severe cases of seizures and strokes, timely action is crucial. Not all patients
    are fall-risk patients and need the convenience of travelling. The paper proposed
    use of both big data analytics for predicting strokes and ML algorithms for making
    the network robust and optimised. The network also served the dual purpose of
    locating patients in emergency situations too. The predictive algorithm utilised
    an ensemble of classifiers that take input from real time readings of vitals from
    body attached or nearby IoT sensors, as most implementations do, for better performance.
    It used decision tree, logistic regression, NB classifier in an ensemble system
    where a soft voting (SV) classifier resides. The ensemble system yielded up to
    93% accuracy, a false positive rate of 2.8%, and a false negative rate of 11%.
    NB has been commonly used in disease risk prediction [127]. It incurs low computational
    complexity and does not require large datasets. Ballon [128] proposed a solution
    for patients with Parkinson’s disease. 3D sensors were used to measure movement
    and analyse reduced flexibility as the disease progressed. Mia et al. [129] used
    a NB classifier to predict coronary problems. The same classifier was utilized
    by many in Miranda et al. [127]. Its accuracy was validated to be more than 80%.
    C. Diabetes Apart from being able to analyze the raw clinical data, IoT can help
    doctors in monitoring the physical activities of patients using methods such as
    RML systems. For example, diabetes patients are required to live a lifestyle that
    promotes engagement in physical activities on a daily basis. With the help of
    patient monitoring systems, doctors can help patients increase the level of their
    physical activities. Importance of physical activities is often stressed upon
    by the doctors to their diabetic patients, but patients often fail to reform their
    lifestyle. RML systems hand doctors a method to promote healthy lifestyles to
    their patients. RML algorithms are able to observe the results of their actions
    and enhance their learning. Thus, these algorithms yield excellent results where
    data varies a lot. A mobile app that can run in the background of a patient’s
    phone was designed based on these algorithms [130]. RL algorithms were able to
    observe the daily physical activity of a patient and send them a SMS that would
    help increase the physical activity of the patient in the coming day [130]. Results
    of the RL algorithm based mobile app were studied [130] using a test group of
    patients and comparing the developments with a control group. Patients reported
    an increase in their physical activity after installing the mobile application.
    Moreover, variance analysis between initial performance and later performance
    of the app was statistically significant (Analysis of variance, P = 0.04), indicating
    that the app was continuously learning. Average HbA1c level of the patients was
    also improved by 0.28%. However, it should be noted that these methods lacks the
    level of accuracy that more dedicated systems have. Real time information of glucose
    levels in the blood is also of great importance to patients suffering from diabetes.
    Insulin therapy requires dynamic data of glucose levels. Traditional glucose level
    monitors require blood samples frequently in a day, which reduces patient comfort
    and compliance. ANN based models can help achieve the goal of predicting the future
    glucose levels of a patient. ANNs are particularly useful when working on data
    that is not linear and does not follow a set pattern. A predictor based on ANNs
    takes input from a continuous glucose monitor (CGM) and predicts the future glucose
    levels in the body. Pérez-Gandía et al. [131] discussed a predictor that takes
    the input from a CGM for the preceding 20 min and returns a predicted glucose
    level at a selected time in future. Pérez-Gandía et al. [131] evaluated the accuracy
    of the ANN model for calculating the RMSE and delay in prediction. Average RMSE
    was of around 14 min for different prediction horizon time, while the average
    prediction delay was close to 9 min. Since these models use the past CGM data,
    inaccuracies were observed whenever there is a sudden data change. D. Physical
    Injuries A smart healthcare-IoT architecture involves the development of mechanisms
    that can identify a user’s daily activities for a more personalized treatment.
    ML algorithms can lead to great advancements in recognizing user activity [133].
    Negra et al. [134] proposed one such activity recognition system. This system
    works by calculating the quality of links between different nodes deployed around
    the user. The channel link quality is estimated by calculating the path loss between
    nodes to form the dataset, which is operated on by ML classifiers. The transmitting
    and receiving nodes may be on or off the person. The analysis concludes that the
    random forest classifier performs best for this application, proving to be the
    most accurate. As mentioned before, falls are a major area of concern among senior
    citizens. It has been found that over a third of people who are aged 65 and above
    fall, and most of these are recurrent cases [135]. This takes a huge toll on the
    elderly’s quality of life, and increases morbidity and mortality. Castaldo et
    al. [135] aimed to target a specific subgroup of patients, viz. hypertensive old
    citizens, to develop a fall prediction model based on heart rate variability (HRV)
    data using five different ML models, among which the NB algorithm is seen to work
    best. To avoid over-fitting, HRV features used in the models were shortlisted
    such that only relevant non-redundant features were included. A different dataset
    than the one used for minimizing features was used to train the models using 3-fold
    cross validation repeated 10 times and averaging the 10 estimates. A third dataset
    was used to test the trained models on the parameters of accuracy, specificity,
    sensitivity, and area under ROC curve (AUC-ROC). The model with the highest AUC-ROC
    has been selected as the best model. Out of the five models tested, multinomial
    NB outperformed all the other models with AUC value 70± 7.8, while NB stood second
    with AUC equal to 68± 7.5. While the other models showed acceptable specificity
    and accuracy, their sensitivity was low and therefore multinomial NB was concluded
    to be the best model for assessing the risk of first-time fallers in elderly hypertensive
    patients. Although the study resulted in showcasing that NB outperforms other
    algorithms when it comes to predicting first time fallers, the focus of the said
    study was only on hypertensive patients which may reduce its applicability in
    practical scenarios where not all old citizens are hypertensive. E. Miscellaneous
    1) Emotion Recognition Emotions are a valid indicator of possible discomforts
    and state of the body and mind. Sentiment analysis through twitter and reddit
    posts is a common application of NLP. Some other methods for detection are to
    monitor facial expressions or speech for stress points. Tariq et al. [132] proposed
    a system for emotion recognition through speech analysis for old people in nursing
    homes using IoT and deep learning. The chosen emotions were: calm, happy, sad,
    angry, fearful, surprised and disgust. Figure 8 shows the architecture of the
    proposed system. The designed system consisted of a Raspberry pi 3 as edge device
    and MAX9814 electret microphone for audio capture. This specific model of microphone
    was chosen as it does not need additional components for amplification. The audio
    is sampled and stored on the Raspberry Pi from where it is transmitted to the
    server for classification. New audio recording are overwritten over older recordings
    due to memory constrains and at the server level the clip is trimmed into 3-second
    clips with data overlapping. Then data processing is done. The audio is first
    normalised, i.e., the volume is set to an optimal value by multiplying the sampled
    data points with an amplification factor. For the training set, the data was augmented
    by adding the same dataset with different amounts of time stretching or pitch
    shifting, or even dynamic range compression. Artificially creating a bigger training
    set for the classification model helps in boosting the accuracy of the model.
    The 80-20% rule was followed for splitting between training and testing data.
    A 2D CNN model was designed for the final classification that is speech emotion
    detection (SED). The first layer of the CNN starts off with 24 filters with a
    5×5 shape, analysing the spectrogram data (in a 128×128 shape) output by a librosa
    library function. The size of the image is slowly waned down to a smaller size
    using pooling and strides. After a 65 node hidden layer, the final layer yields
    10 results, that are the ten different emotions present in the database training
    and test set. After augmentation, an accuracy of 95% for females and 93% for men
    was reported. FIGURE 7. sEMG sensor. Show All FIGURE 8. Speech emotion detection
    system [132]. Show All 2) Cognitive Monitoring Systems The multimodal nature of
    smart patient-centric healthcare frameworks demands complex decision-making which
    has led many researchers to introduce cognitive behavior in the development of
    IoT frameworks [43]. The smart healthcare concept becomes even more relevant with
    the development of smart cities. The resources of a smart city can never be fully
    exploited without intelligent, i.e., cognitive machinery [137]. Therefore, notable
    research efforts are now being made in this direction [61]. Medical resources
    concentrated in big hospitals and medical institutions in urban areas can be utilized
    effectively if shared remotely with rural areas. Existing tele-medicine services,
    even the most efficient ones, fall short on this goal. While physiological diseases
    can be addressed by them to a good extent, psychological diseases lie way out
    of their scope. Implementing this distribution of medical resources across space
    and time to maximize their salvage value, is a challenge. Muhammad et al. [61]
    proposed the model for a 5G cognitive healthcare system which consists of two
    parts: a resource cognitive engine and a data cognitive engine with the network
    architecture tailored to enhance transfer speed on different communication modes.
    This opens new possibilities both in the physiological and psychological domains.
    The ability to recognize haptic movements (5G tactile internet) makes efficient
    transfer of a human’s actions over 5G wireless networks possible, in turn enabling
    remote surgery (physiological). Another application is the emotional state evaluation
    of patients with insomnia, depression, autism, etc. through data collected and
    metrics evaluated in real time (psychological). Muhammad et al. [61] used a test-bed
    which was a speech emotion recognition system with behavior feedback from EPIC-robot.
    Amin et al. [59] presented a similar cognitive engine that has been used in conjunction
    with a CNN to make binary classifications on pathology through processing of EEG
    signals. The cognitive engine was used to make intelligent decisions on the patient’s
    state before passing the EEG input to more involved processing on the CNN and
    after that, again to assess the patient’s state and notify the appropriate stakeholders.
    3) Infant Health Monitoring Monitoring systems facilitating sensor fusion through
    IoT technologies and data processing algorithms are some of the most critical
    applications for healthcare and new use cases are constantly being proposed. One
    such case is for monitoring the condition of infants which is otherwise a challenge
    since their bodies are sensitive and developing. Mahmud et al. [136] proposed
    a framework for monitoring of preterm infants for prediction of bradycardia which
    refers to an abnormally slow heart rate that may lead to the heart not pumping
    sufficient oxygen-rich blood to the body. Monitoring and detection of instances
    of bradycardia in the newborn intensive care unit (NICU) is a good use case for
    well-being of these infants. Before this system, nurses had to maintain the progress
    reports themselves which is prone to errors and constrains. The proposed solution
    uses a multi GPU gradient extreme boosting algorithm on ECG signals. Infants that
    are born within a duration of 37 weeks are considered premature and they occur
    at a 10% rate worldwide [138]. For the proposed solution, a positive case of bradycardia
    was considered when the heart rate was less than 100 bps for more than 1.5 s.
    The used dataset had 633 bradycardia events which were divided in a 70:30 ratio
    for training and testing. The ECG signals in infants is characterized by the ventricular
    activity. Since the R wave usually has the highest amplitude, RR-intervals were
    used for measuring the inter-beat intervals (IBI). For the HRV, non linear components
    were also accounted for. To classify the event of an erratic/abnormal interval
    pattern, a customized extreme gradient boosting, XGBoost was utilized. For feeding
    the model, only the features which were significant to the label were taken [139],
    [140]. This produced a faster output as the dimensionality of the data decreased
    [141]. With an advanced model trained and reliably yielding good results, the
    model generated can be used to develop solutions for premature infant monitoring
    with data capture happening locally. Moreover, processing of data may be done
    at a local hospital level node or on a cloud framework depending on the latency
    requirements and patient privacy and ethical rules. Results showed the rate of
    detection of a true positive to be 87%. SECTION VIII. Logistics This section describes
    a few of the applications of ML that aim for the overall betterment of H-IoT systems
    by strengthening them in terms of logistics and security. Such advancements are
    particularly important since no healthcare system can be implemented without the
    security concerns accounted for and an upgrade in logistics leads a to better
    H-IoT system, no matter what the application [142], [143]. Table 6 at the end
    of this section gives a brief summary of the reviewed publications that pertain
    to use cases of ML algorithms for logistics. TABLE 6 Use Cases of ML Algorithms
    for Logistics A. Patient Prioritization EDs in hospitals often face a situation
    of overcrowding. Patients have to wait for several hours till a bed becomes available
    which has a negative impact on the patients’ health and overall mortality rate,
    while also affecting the hospital staff’s morale and efficiency. If the number
    of patients that are to be admitted in the hospital from the ED could be predicted
    using hospital records, such overcrowding could be foreseen and the hospitals
    would be able to prevent it and improve patient handling. Also, in situations
    of crisis which need a strong medical response such as the case of COVID-19, it
    is important to understand the need to be able to prioritize patients on the basis
    of their urgency, along with managing the response time, and making the work more
    efficient. Bagula et al. [144] proposed a solution for prioritizing the patients
    through a cloud based service as a public health service. It was based on the
    triage system which is a concept with terms and parameters determined by the World
    Health Organization. It aimed to ensure that patients at higher risk were treated
    first while keeping the optimum usage of medical resources as the top priority.
    The idea proposed was to use wearable tech and “health kiosks” to amass an almost
    real-time metric of who is more vulnerable and would require immediate medical
    assistance. As it is a cloud service, the medical data can be stored easily and
    accessed remotely at all times. This helps in providing a descriptive review of
    the history of the patient to the healthcare practitioners. This solution also
    facilitates participatory consultation, improving communication between various
    specialists for better diagnosis and treatment. For data collection, medical biosensors
    embedded in e-health kits provide a way of replacing the error-prone manual patient
    vital signs capture processes by more accurate automated procedures. For example,
    in the current COVID-19 pandemic [148], a contact-less IR temperature scanner
    can detect trends of community spread quickly, and possibly prevent fatalities.
    Such kiosks when paired with the government’s COVID tracking applications can
    track the location of high-risk people, and guide the authorities to provide better
    treatment and implement quarantine procedures. The system employed k-means clustering
    to assess the vital signs of the populace and group them in sets based on similarity
    of vital sign anomalies. For example, people with erratic pulse heartbeats will
    be in one cluster, people with low blood oxygen levels will be in another, etc.
    These clusters will have an assigned risk factor, which is effectively a weighted
    mean of the severity of the recorded vital sign anomalies as determined by the
    WHO. It was also proposed to deploy solar powered motes with a high capacity lithium
    ion battery UPS system. To make sure that the sensor reading fell withing acceptable
    ranges, the field readiness of the e-health sensors was tested. The ZigBee protocol
    was preferred over traditional Wi-Fi in terms of cost, while Wi-Fi does yield
    better range and spread. Graham et al. [149] provided an ED crowd prediction model
    using ML techniques, particularly by applying a decision tree model as well as
    a model that is an ensemble of multiple decision trees, namely gradient boosted
    machine. Various model parameters were tuned by performing five rounds of ten-fold
    cross validation over a custom tuning grid. Using the CARET package, which is
    a library with tuning and training frameworks, both the decision tree and the
    gradient boosted machine models were trained and tuned using dataset from hospitals
    in Ireland. Manikandan et al. [150] proposed a scheduling method, called the hash
    polynomial two-factor decision tree (HP-TDT) to classify patients as normal or
    critical, and thus increase scheduling efficiency and minimize response time.
    The HP-TDT model is carried out in three stages: registration phase, data collection
    phase, and scheduling phase. Compared to previously designed smart health monitors
    (SHM), the proposed system was more mathematically inclined, and was more efficient,
    taking more factors into consideration. Open address hashing (OAH) model is used
    to carry out the registration stage, which reduces the response time of key generation.
    Using OAH models, unique private and public keys are generated for each user and
    hospital, and these keys are passed through hash functions to generate unique
    registration codes. The next part of the design is data collection, from users
    and hospitals, which is maintained on clouds. To perform this, polynomial data
    collection (PDC) algorithm is used. Using PDC, two perfect shortest paths are
    computed along with a maximal disjoint path. An exponential calculation using
    polynomial distribution is performed over these attributes to identify the critical
    state. The final step is the two-factor decision tree scheduling. Creation of
    a decision tree model involves two steps: tree construction (splitting the tree
    based on attributes) and tree pruning (removing the extra unwanted branches which
    might lead to outliers). Hence, the corresponding decision tree is created based
    on the attribute values calculated in the previous method. The schedule is created
    on three basic conditions and their corresponding threshold values. If any of
    the threshold values are surpassed, the patient is termed as a critical case,
    otherwise a normal case. Manikandan et al. [150] presented an implementation using
    decision trees to reduce their response time while ensuring privacy. The sensor
    data for a patient is recorded and used to identify state of distress. Data from
    various sensors for a patient are attributes of the decision tree. Since fewer
    decisions are needed to classify a critical state, the number of operations is
    reduced for data collection when using the trained decision tree. Computational
    overhead is a significant factor for large scale systems. The experiment used
    a JAVA platform using Cloud Sim on healthcare data set 2019. It gives an improved
    scheduling efficiency of 14% and 33% as compared to other implementations [151],
    [152]. B. Security Due to limited resources, body sensor network devices are often
    susceptible to security flaws in protecting the sensitive personal health data.
    This has led to proposals of many methods for implementing security for WBANs
    that have been developed recently [153], [154]. Out of these, the biometric cryptosystem
    approach exploits physiological, behavioural and bio-metric traits, such a face
    recognition, iris scanning, fingerprint scanning, ECG, and PPG patterns. Sun and
    Lo [145] proposed a biometric cryptosystem (BCS) based on gait (walking pattern)
    signal energy variations for implantable and wearable devices using an ANN framework.
    The IEEE standard 802.15.6 operating mainly in the industrial, scientific, and
    medical (ISM) bands defined the WBAN. These channels are available for anyone
    with matched radio interface configurations, and can be easily intercepted through
    software defined radio. Thus, attackers can eavesdrop or even participate within
    the wireless communication networks amongst WBAN sensor nodes and disrupt the
    regular operations of the network with DDoS attacks or authentication attacks.
    Many prior attempts have been made to use solutions like voice and facial recognition
    to unlock smartphones. Gait detection is done by using inertial measurement units
    (IMU) which are embedded in many wearable devices. The signals from this device
    are notoriously inconsistent and hence this paper attempted to use ANNs to estimate
    the signal received at the chest to achieve better correlation between data gathered
    from other body positions like the wrist, thigh, head, etc. The neural network
    is trained by placing sensors on the chest and instructing the fitting algorithm
    to process the signals from the limbs or head to match the signal from the chest.
    The ANN architecture consists of an input layer, a hidden layer with 10 hidden
    nodes, and an output layer. To generate the actual key, a moving average (effectively
    a low pass filter) of the projected chest gait signal from the sensor in the watch
    is calculated, and by comparing the actual signal value with that moving average,
    the binary sequence is received. If the actual signal is larger than averaged
    signal, then the bit associated with that sample is 1 and vice versa for 0. This
    bit sequence was then re-sequenced, in the descending order of reliability, i.e.
    the amount of difference in the actual and averaged signal. This ANN yielded an
    authentication accuracy of 95% within 4 attempts and the number of the gait cycles
    required for generating one 128-bit key is sufficiently reduced compared with
    their previous work [155]. It provides immunity against many modern hacking attempts
    at extracting the security key such as a dictionary attack [145], [156], providing
    a highly secure channel as unique as a fingerprint and using very low computational
    power. Lin et al. [157] proposed a differential privacy protection model for body
    area networks, that ensured data availability whilst reducing the risk of privacy
    exposure. A case of ECG big data is taken and dynamic thresholds are used. Lastly,
    the EHR that are stored in cloud databases also needs to be securely stored. It
    is vital information such as allergies and past surgeries that may be misused
    by malicious agents. Hence, to safegaurd them, several blockchain based methods
    in conjunction with ML have also been proposed [154], [158]. C. Miscellaneous
    1) Wireless Coexistence Devices equipped with wireless capability are widespread.
    An increased use of unlicensed wireless spectrum bands like 2.4 GHz ISM band makes
    medical devices operating on it susceptible to interference and malfunction. A
    lack of standardization for determining wireless coexistence prompted ANSI Accredited
    Standards Committee C63 to publish C63.27 Standard for Evaluation of Wireless
    Coexistence (2017) and Association for the Advancement of Medical Instrumentation
    to publish TIR69 (2017): a guidance for risk assessment of wireless coexistence
    for medical devices. Together, they give the testing methodology and risk assessment
    of using wireless technology to perform a medical function. Wireless coexistence
    testing is an iterative process to identify limits of parameters like time, frequency
    and distance within which medical equipment is safe to use while sharing radio
    spectrum resources with other systems. No detailed method of aggregation of experimental
    evaluation exists. Al Kalaa et al. [147] proposed determining likelihood of wireless
    coexistence by logistic regression. To mitigate overfitting, ‘least absolute shrinkage
    and selection operator’ feature selection was employed. The experiment was set
    up in a noise free environment. The system under test (Zigbee) and interfering
    system (IEEE 802.11n) maintained a line of sight. Performance of estimated logistic
    regression model was 92.72%. However, the hypothetical system model is applicable
    only to some protocols. Other medical applications include sensing ECG signals
    for tracking status of heart failure [159]. 2) Database Structuring Classifiers
    and clustering algorithms can be used to increase the efficiency of healthcare
    systems, but electronic clinical data is a must to help these algorithms operate.
    NLP addresses this problem. Several clinical practices rely on difficult-to-store-and-process
    manual data. If this data can be stored electronically, the efficiency can significantly
    increase. Any healthcare system has a lot of data in narrative form. Unless this
    database is structured, it cannot be used for any kind of analysis. NLP is a very
    effective algorithm for providing a structure to the databases of clinical practices.
    It converts a machine-readable narrative in structured form. Hripcsak et al. [146]
    had discussed the implementation of these algorithms to raw clinical data. Data
    from a total of 889,921 chest cardiographic reports were sorted using NLP algorithms
    and results were compared on the basis of manual coding of 150 reports. Accuracy
    of the algorithm was satisfactory in the research paper. NLP reported a sensitivity
    of 0.81 and a specificity of 0.99, making it at par with expert coders. SECTION
    IX. Conclusion In this review, we have covered the major applications and systems
    where AI and IoT are proposed for a safer, accurate, and predictive healthcare
    system. A general trend of shifting the information processing towards the edge
    has been observed in the discussed architectures. This is perhaps due to the growing
    availability of resources for edge and fog devices. Although the primary inferencing
    is still done mainly on the cloud, it is expected that this will also shift towards
    the edge with upcoming libraries such as TinyML and specialized hardware like
    Tensor processing units. Although many novel methods are being proposed, since
    the healthcare sector cannot afford false negatives and needs high accuracy, some
    systems cannot be feasibly implemented. Furthermore, security concerns of the
    patients about their privacy affect their trust and willingness to participate
    or use such applications. However, with proposals and implementation of applications
    that assure high data privacy and security, the trust and awareness of patients
    for these applications is expected to enhance in the near future. ACKNOWLEDGMENT
    (Hemantha Krishna Bharadwaj and Aayush Agarwal contributed equally to this work.)
    The statements made herein are solely the responsibility of the authors. Authors
    Figures References Citations Keywords Metrics More Like This A Survey of Voice
    Pathology Surveillance Systems Based on Internet of Things and Machine Learning
    Algorithms IEEE Access Published: 2020 The Internet of Things for healthcare monitoring:
    Security review and proposed solution 2014 Third IEEE International Colloquium
    in Information Science and Technology (CIST) Published: 2014 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/9312710/09355143.pdf
  publication_year: 2021
  relevance_evaluation: Highly relevant - The paper focuses on the use of machine
    learning algorithms in IoT based healthcare applications and provides a comprehensive
    review of the current state-of-the-art, use cases, and future prospects. It covers
    a wide range of applications, from monitoring physiological parameters to automating
    tasks across the entire data pipeline, using advanced sensing technologies such
    as hyperspectral imaging and thermal sensing for non-invasive plant stress detection.
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: A Review on the Role of Machine Learning in Enabling IoT Based Healthcare
    Applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s19071565
  analysis: '>'
  apa_citation: Kim, B.-S., Kim, K.-I., Shah, B., Chow, F., & Kim, K. H. (2019). Wireless
    Sensor Networks for Big Data Systems. Sensors, 19(7), 1565. https://doi.org/10.3390/s19071565
  authors:
  - Beom Su Kim
  - Ki‐Il Kim
  - Babar Shah
  - Francis Chow
  - Kyong Hoon Kim
  citation_count: 47
  data_sources: Sensor data, Big data
  explanation: 'The research article by Kim et al. (2019) examines the integration
    of wireless sensor networks (WSNs) as a significant data source for big data systems.
    They categorize current research into two main areas: network systems and data
    systems. Network systems focus on delivering sensor data to big data systems,
    while data systems concentrate on data processing. The authors highlight the importance
    of in-network data processing techniques for both WSNs and big data systems. They
    argue that these techniques can save limited resources on WSNs and reduce excessive
    data volume and communication energy on big data systems. The authors conclude
    by identifying open issues and future directions for research in this area, including
    the need for extensive and flexible frameworks and improved modeling and simulation.'
  extract_1: null
  extract_2: null
  full_citation: '>'
  full_text: ">\nReview\nWireless Sensor Networks for Big Data Systems\nBeom-Su Kim\
    \ 1, Ki-Il Kim 1,* ID , Babar Shah 2, Francis Chow 3 and Kyong Hoon Kim 4\n1\n\
    Department of Computer Science and Engineering, Chungnam National University,\
    \ Daejeon 34134, Korea;\nbumsou10@naver.com or bumsou10@cnu.ac.kr\n2\nCollege\
    \ of Technological Innovation, Zayed University, Abu Dhabi 144534, UAE; babar.shah@zu.ac.ae\n\
    3\nUniversity College, Zayed University, Abu Dhabi 144534, UAE; Francis.Chow@zu.ac.ae\n\
    4\nDepartment of Informatics, Gyeongsang National University, Jinju 52828, Korea;\
    \ khkim@gnu.ac.kr\n*\nCorrespondence: kikim@cnu.ac.kr; Tel.: +82-42-821-6856\n\
    Received: 14 January 2019; Accepted: 21 March 2019; Published: 1 April 2019\n\x01\
    \x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: Before\
    \ discovering meaningful knowledge from big data systems, it is ﬁrst necessary\
    \ to build a\ndata-gathering infrastructure. Among many feasible data sources,\
    \ wireless sensor networks (WSNs) are\nrich big data sources: a large amount of\
    \ data is generated by various sensor nodes in large-scale networks.\nHowever,\
    \ unlike typical wireless networks, WSNs have serious deﬁciencies in terms of\
    \ data reliability\nand communication owing to the limited capabilities of the\
    \ nodes. Moreover, a considerable amount\nof sensed data are of no interest, meaningless,\
    \ and redundant when a large number of sensor nodes is\ndensely deployed. Many\
    \ studies address the existing problems and propose methods to overcome the\n\
    limitations when constructing big data systems with WSN. However, a published\
    \ paper that provides\ndeep insight into this research area remains lacking. To\
    \ address this gap in the literature, we present a\ncomprehensive survey that\
    \ investigates state-of-the-art research work on introducing WSN in big data\n\
    systems. Potential applications and technical challenges of networks and infrastructure\
    \ are presented\nand explained in accordance with the research areas and objectives.\
    \ Finally, open issues are presented to\ndiscuss promising directions for further\
    \ research.\nKeywords: wireless sensor networks; big data; infrastructure; data\
    \ processing\n1. Introduction\nWhen constructing a big data system, data collection,\
    \ storage, processing, analysis, and visualization\nare steps that need to be\
    \ followed in the said order. In ongoing research on big data systems, the research\n\
    communities focus on fundamental aspects of dealing with big data: speciﬁc platforms,\
    \ technology,\nbeneﬁcial applications, standards, and best practices (for applications\
    \ in social web, ﬁnancial issues, and\nso on). Moreover, there are many platforms\
    \ and tools that can implement these functions in the real\nworld. Thus, data-intensive\
    \ applications are now being developed to beneﬁt from them. Chen et al. [1]\n\
    present state-of-the-art technologies to deal with the problems of big data systems\
    \ (speciﬁcally, computing\ninfrastructure for data deluge that includes granular\
    \ computing, cloud computing, bio-inspired computing,\nand quantum computing).\
    \ Moreover, seven principles to be applied in big data systems are deﬁned and\n\
    explained. In addition, Chen et al. [2] provided a general overview of big data\
    \ systems, focusing on\nthe four phases of value chain of big data. In their survey,\
    \ they discuss the technical challenges in data\ngeneration, acquisition, storage,\
    \ and analysis as separate phases. Moreover, a new survey of big data was\nrecently\
    \ published by Oussous et al. [3], which addresses new data techniques and platforms,\
    \ with the\nSensors 2019, 19, 1565; doi:10.3390/s19071565\nwww.mdpi.com/journal/sensors\n\
    Sensors 2019, 19, 1565\n2 of 18\naim to select a right combination of technologies\
    \ according to the technological needs and the speciﬁc\napplications requirements.\n\
    As reported in the aforementioned studies, data collection is the ﬁrst step of\
    \ building a big data\nsystem. Among the many available data-generating sources,\
    \ wireless sensor networks (WSNs) are\nreceiving considerable research attention\
    \ with regard to environmental monitoring. A WSN consists of a\nlarge number of\
    \ sensor nodes that monitor and record the physical conditions of an environment,\
    \ and the\nsensor data are collected at a so-called sink node. WSNs are used to\
    \ measure environmental conditions:\ntemperature, sound, pollution levels, humidity,\
    \ wind, and so on. However, the limited capacity of a single\nnode and a narrow\
    \ wireless link (compared to typical networks) cause problems with delivering\
    \ the sensor\ndata to the sink node. Nevertheless, an effective data aggregation\
    \ and in-network processing are beneﬁcial\nto big data systems. Therefore, there\
    \ is a need of analyzing research studies that link WSN and big data\nsystems\
    \ while overcoming the deﬁciencies of WSN and improving system performance.\n\
    Figure 1 illustrates a basic structure of a big data system based on a WSN as\
    \ an example of a\nfundamental system architecture. As shown in Figure 1, a sink\
    \ node collects the data from sensor nodes\nand then delivers the data to a temporary\
    \ storage for consequent data aggregation. After this step,\nthe aggregated data\
    \ can be manipulated by a big data framework using the main storage. The transformed\n\
    data are handled by big data platforms and applications. Special issues of journals\
    \ and many other papers\nhave been published mechanisms to integrate a WSN as\
    \ the main source in a big data system using the\nabovementioned architecture.\
    \ An example of the special issue is “Big Data in Ubiquitous Wireless Sensor\n\
    Networks” edited by Xiao et al. [4]; in this issue, 18 papers are presented to\
    \ show advances of big data\nsystems with ubiquitous WSNs in terms of computation\
    \ and storage over cloud computing. Moreover,\ntechnical issues for big data in\
    \ three-dimensional underwater sensor networks, wireless video sensor\nnetworks,\
    \ wireless multimedia sensor networks, and typical WSNs are explained and described.\
    \ In a\ncomprehensive survey, Halde et al. [5] presented the issues and challenges\
    \ of data collection through\nWSNs. The authors focused on energy consumption\
    \ and heterogeneity of WSNs, which are observed\nduring the analysis of big data\
    \ in WSN. Harb et al. [6] addressed data management issues in WSNs by\nintroducing\
    \ different algorithms designed for data collection, aggregation, correlation,\
    \ compression, and\nprediction; in addition, they showed potential and feasible\
    \ application scenarios.\nFigure 1. Big data system based on a WSN.\nSensors 2019,\
    \ 19, 1565\n3 of 18\nConvergence problems between WSNs/internet-of-things (IoT)\
    \ and big data are reviewed and\nanalyzed in [7], wherein the following open issues\
    \ are mentioned: convergence process, security,\nmanagement of data, interoperability,\
    \ and hardware/architecture challenges. From the point of view\nof data usage,\
    \ data collected from IoT contribute to context-aware computing, such as ubiquitous\
    \ and\npervasive computing. Thus, big data issues in ambient intelligence and\
    \ WSNs need to be explored\nwell. To achieve this goal, Sezer et al. [8] present\
    \ open issues and provide an insight on IoT for big\ndata. Furthermore, a wireless\
    \ big data system that deals with massive data in wireless networks is\ndescribed\
    \ in [9]. Instead of describing the entire system, the authors focused on wireless\
    \ infrastructure\nsuch as data-aided transmission, data-driven network optimization,\
    \ and novel applications under layered\narchitecture (as shown in application,\
    \ network, transmission, and data layers in Figure 2). Further, they\ndiscussed\
    \ three potential application areas: smart grids, internet-of-things (IoT), and\
    \ drones/unmanned\naerial vehicles (UAV), as illustrated in Figure 2.\nFigure\
    \ 2. Protocol layering of wireless big data systems.\nDespite the aforementioned\
    \ research efforts, a comprehensive survey that provides deep insight into\nmost\
    \ research areas for WSNs as a source for big data remains lacking. To address\
    \ this gap in the literature,\nin this paper, we present a comprehensive survey\
    \ of research that introduces WSNs as a source of big\ndata. In order to analyze\
    \ the state-of-the-art for this research area, only the most recent papers (published\n\
    in 2014 or later) addressing WSNs and big data simultaneously have been selected.\
    \ Even though many\nexisting research studies are applicable to big data systems,\
    \ not all of them are included here because we\nfocus on only integrated systems.\
    \ Based on this selection strategy, we describe the potential applications\nof\
    \ big data systems based on WSNs in Section 2. Then, we categorize the current\
    \ research work according\nto the research areas in Section 3. Open issues in\
    \ these research areas are introduced and discussed in\nSection 4. Finally, we\
    \ conclude the paper in Section 5.\n2. Applications of WSN-Based Big Data Systems\n\
    Before starting a detailed analysis of related work, it is highly desirable to\
    \ understand which big\ndata applications can be implemented and deployed through\
    \ WSNs. Since a WSN is usually built to meet\napplication-speciﬁc requirements,\
    \ it is reasonable to review big data applications prior to addressing their\n\
    technical issues.\nThe following monitoring applications can beneﬁt from using\
    \ WSNs: smart grids, monitoring human\nbody, and monitoring the environment.\n\
    Sensors 2019, 19, 1565\n4 of 18\nIn case of smart grids [10], smart sensor networks\
    \ are introduced in big data systems for energy\nmanagement. These systems run\
    \ smart grid applications that include power monitoring, demand-side\nenergy management,\
    \ coordination of distributed storage, and integration of renewable energy generators.\n\
    Additionally, techniques used to manage big data generated by sensors and meters\
    \ are proposed. Moreover,\nfeasible recommendations and practices for smart grid\
    \ are discussed. The authors in [11] focus on\nmanaging data efﬁciently and extracting\
    \ required information from the big data system. Because reliability\nand low\
    \ latency are two objectives in a smart grid, streaming processing on fog computing\
    \ architecture is\nstudied for real-time applications over a well-designed platform.\n\
    The next example is monitoring the human body: wireless body area networks (WBAN).\
    \ Collection\nof a vast amount of health and medical data via body sensor networks\
    \ is presented for big data systems\nin [12]. To implement body sensor networks,\
    \ an activity recognition application is required to implement\nthe following\
    \ functionality: feature extraction and selection, classiﬁcation, supporting software\
    \ platforms,\nand sensor and user authentication. This typical activity recognition\
    \ procedure is classiﬁed and illustrated\nin Figure 3, which describes the general\
    \ steps in [12]. Du et al. [13] present a feasible WBAN big data\nframework, which\
    \ uses MapReduce for processing big data in real time, and Hadoop/HBase for storing\n\
    and analyzing WBAN’s big data. Another interesting application of monitoring abnormal\
    \ conditions\nof heart rate is proposed by Yuan et al. [14], with ZigBee and big\
    \ data analysis based pulse monitoring\nsystem. To avoid missing the pulse signal,\
    \ two following methods were proposed: (1) the photo-electricity\nbased dynamic\
    \ continuous heart rate monitoring methods, and (2) comprehensive anti-jamming\
    \ methods.\nUsing these two methods, a training model based on big data is proposed\
    \ to improve the physical training\nlevel and to create training plans. With regard\
    \ to data classiﬁcation and detecting atypical events (anomaly\ndetection), Wu\
    \ et al. [15] proposed a new feature-based learning system for IoT applications\
    \ that is based\non the theory of distributed compression as well as the sparsity\
    \ and relativity of data.\nFigure 3. Typical activity recognition process for\
    \ inferring activities from WBAN sensors.\nNext, we consider examples of environmental\
    \ monitoring, such as big data systems that monitor\nair quality in industrial\
    \ workplace buildings. A case study of a big data system that monitors air quality\n\
    collected by WSN is presented in [16]. Locations include two workshops that are\
    \ part of a large on-shore\nlogistics base of a regional shipping industry in\
    \ Norway. The study is conducted to prove the efﬁciency of\nSensors 2019, 19,\
    \ 1565\n5 of 18\ndata analytics and visualization. Substantially, the case study\
    \ reveals the possibility to monitor worker\nsafety in other high-risk industries,\
    \ as well as the quality of goods in supply chain management by\nintegrating WSNs\
    \ and big data systems. Moreover, as a possible monitoring application, cooperative\
    \ ﬁre\nsecurity system using human agent robot machine sensor (CFS2H) message\
    \ protocol [17] for a ﬁreﬁght\nsystem is presented to provide fast communication\
    \ and stable collaboration. The stationary WSN node\nis responsible of generating\
    \ the data, while a big data center controls the whole system’s work in the\n\
    suggested architecture.\nAt last, big data systems for smart cities are proposed\
    \ in [18] to ﬁnd feasible solutions for public\nadministration, environment, and\
    \ urban services. In this analysis, the data is converged into a shape similar\n\
    to a map (that could be paper maps or digital ones) of e-government services.\
    \ Usually, e-government\nservices are known to improve efﬁciency and citizen satisfaction\
    \ due to their implementation of spatial\ndata infrastructure (SDI). Therefore,\
    \ it is proven that e-government based on big data and WSN improves\nthe access\
    \ to e-services. Moreover, it could be used to overcome challenges of managing\
    \ limited resources.\nThis concludes our analysis of applications. In the next\
    \ section, we present the technical approaches.\n3. Technical Approaches to WSN-Based\
    \ Big Data Systems\n3.1. Big Data Through WSN\nData generated by the sensors grow\
    \ exponentially. Conventional information technologies for data\nprocessing, storage,\
    \ and reporting (such as servers and relational databases) are too expensive to\
    \ deal\nwith these data. Moreover, they cannot cope with the processing needs\
    \ that can be required for real-time\nprocesses. In addition, most of the events\
    \ monitored at regular intervals are largely redundant or are\nminor variations\
    \ leading to a large waste of data storage resources and communication energy\
    \ at relay\nand sensor nodes. This implies that much of these data are of no interest,\
    \ meaningless, and redundant.\nThus, unlike the case of typical WSNs, it is essential\
    \ to gather and transmit a large amount of data while\nminimizing data latency\
    \ in WSN-based big data systems. Moreover, it is required to efﬁciently eliminate\n\
    data redundancy and improve energy efﬁciency. The overlap between big data systems\
    \ and WSNs lies\nin the use of in-network data processing techniques, as indicated\
    \ in [19]. For the WSNs side, it would\nsave their limited resources. At the same\
    \ time, receiving a clean, non-redundant, and relevant data would\nreduce the\
    \ excessive data volume at the side of the big data system. Thus, it would reduce\
    \ overload by\ndiscovering values from these data rapidly.\nThe research challenges\
    \ for WSN-based big data systems are addressed in [20,21]. Boubiche et al. [20]\n\
    classiﬁed big data challenges in wireless sensor networks into clustering, securing,\
    \ processing, and\nenergy saving. The proposed strategies of dealing with these\
    \ challenges are based on the correlation\nbetween the data aggregation, clustering,\
    \ and energy consumption challenges of big sensor data.\nDjedouboum et al. [21]\
    \ described big data collection in a large-scale WSN, presented data transferring\n\
    scheme in the context of large-scale WSN, and discussed the challenges of big\
    \ data collection. An example\narchitecture for gathering, storage, and analysis\
    \ of data generated by WSN for monitoring air pollution\nlevels in a city was\
    \ proposed as a prototype in [22]. The prototype was developed with open source\n\
    technologies such as Storm for stream processing, Hadoop for distributed computing\
    \ with MapReduce,\nand a small WSN on the Arduino platform.\n3.2. Categorization\n\
    Research on big data systems based on WSNs is largely categorized into two main\
    \ areas (Figure 4):\nnetwork systems and data systems. The former is focused on\
    \ network systems that deliver the sensor data\nto the big data system, while\
    \ the latter is focused on data processing. Each research area has multiple\n\
    Sensors 2019, 19, 1565\n6 of 18\nsubcategories according to the research objective.\
    \ This paper introduces two research objectives for\nnetwork systems and a large\
    \ number of research objectives for data systems.\nThe inclusion criteria were\
    \ as follows:\nwe consider only studies published in English that\nsimultaneously\
    \ describe the application and network protocol of WSNs and the data processing\n\
    technologies for big data systems. Only peer-reviewed journal and conference papers\
    \ were included in\nthe study, to ensure quality and reliability of information.\
    \ Studies published before 2014 were excluded.\nThe search identiﬁed 70 papers\
    \ based on these inclusion and exclusion criteria.\nFigure 4. Classiﬁcation of\
    \ related work.\n3.3. Network System\n3.3.1. Infrastructure\nIn this research\
    \ area, most work is conducted by proposing either network architectures or\n\
    communication protocols. First, the authors propose structural construction of\
    \ the WSN based on big data\nprocessing called service-oriented architecture and\
    \ virtualization cloud for WSN (SVC4WSN) [23] and\nsimulates it numerically through\
    \ comparison with multi-hop direct forwarding for local wireless sensor\nnetwork\
    \ (MDF4LWSN) architecture. The SVC4WSN consists of four layers: a large-scale\
    \ WSN, gateway,\ncloud center, and users (as shown in Figure 5). In this architecture,\
    \ there are two critical issues: congestion\ncaused by the big data, and communication\
    \ latency. To deal with these issues, ﬂexible and multi-layer\ndata processing\
    \ and storage models based on cloud computing are proposed.\nAnother challenging\
    \ task for gathering big data in a densely distributed sensor network with high\n\
    energy efﬁciency is addressed in [24]. The method can be used to determine the\
    \ sink node’s trajectory and\ndata-gathering through clustering. Unlike the typical\
    \ clustering scheme, K-medoid clustering in six steps\nis proposed to keep energy\
    \ consumption balanced in continuous iterations. Kalnoor et al. [25] proposed\
    \ a\nsimilar approach based on clustering. In their work, the mobility of a sink\
    \ node was selected as an effective\nsolution to manage big data collection. Moreover,\
    \ a framework to leverage the correlation between sets\nof active sensor nodes\
    \ was presented. Another approach to utilize a mobile data collector is presented\n\
    in [26], where two different approaches are suggested: data collection using data\
    \ mule (MULE) and sensor\nnetwork with mobile access point (SENMA). These approaches\
    \ are characterized by the number of hops\nthat are required to handle unexpected\
    \ network partition during mobile data collection. Xu [27] conducted\na study\
    \ that deals with the routing protocol over cluster architecture to deliver multimedia\
    \ data in WSN.\nSensors 2019, 19, 1565\n7 of 18\nIt aims to reduce network congestion,\
    \ in order to improve the reliability of data transmission, as well as\nreduce\
    \ packet loss rate. To achieve these goals simultaneously, an efﬁcient trafﬁc\
    \ load balancing algorithm\nis proposed to ensure balanced energy consumption\
    \ within the network.\nFigure 5. Architecture of SVC4WSN.\nIn addition to data\
    \ collection, the data aggregation scheme for big data is discussed in [28] through\n\
    the information-centric networking (ICN) approach, where data are retrieved by\
    \ names and in-network\ncaching. The proposed framework operates according to\
    \ the following steps: (1) the network is initialized\nand the communication nodes\
    \ are clustered using low-energy adoptive clustering hierarchy (LEACH)\nprotocol;\
    \ (2) collected data is aggregated to the cluster head memory; (3) an aggregatable\
    \ name-based\nrouting (ANBR) method retrieves the data and forwards it to the\
    \ data center. From another point of\nview, another architecture for WSN is proposed\
    \ to prevent excessive energy consumption on a sensor\nnode in case of the high\
    \ redundancy of sensed data. A framework called structure ﬁdelity data collection\n\
    (SFDC) [29] leverages the spatial correlations between the nodes by reducing the\
    \ number of active sensor\nnodes while maintaining a low structural distortion\
    \ of the collected data. A node’s duty cycle is controlled\nby a structural distortion\
    \ depending on the image quality assessment approach. Thus, the data ﬁdelity in\n\
    terms of structural similarity in the continuous sensing applications for WSNs\
    \ can be accomplished by\nSFDC. In addition, Harb et al. [30] proposed a method\
    \ of compressing collected data at the ﬁrst level as\nwell as eliminating redundant\
    \ data generated by the neighboring node at the second level. The proposed\nscheme\
    \ adapts clustering methods (EKmeans and TopK) to decrease the communication costs\
    \ and enhance\ndata mining in WSN.\nAs an example of speciﬁc-purpose routing protocol,\
    \ a new routing protocol is proposed to assign\na dynamic priority according to\
    \ the requirements of quality-of-service (QoS) as well as achieve load\ndistribution\
    \ by involving a larger number of sensor nodes in the path.\nIn particular, high\
    \ energy\nefﬁciency [31] is achieved by selecting a next hop according to the\
    \ available resources and the required\nenergy cost.\nSensors 2019, 19, 1565\n\
    8 of 18\nConsequently, the advantages and disadvantages of each method in the\
    \ research area are compared\nin Table 1, where energy efﬁciency and management/maintenance\
    \ cost are the major metrics.\nTable 1. Comparison of advantages and disadvantages\
    \ for infrastructure.\nMethod\nKey Feature\nAdvantage\nDisadvantage\nSWV4WSN [17]\n\
    Multi-layer model\nGood lifecycle\nHigh management cost\n[18]\nK-medoid clustering\n\
    High energy efﬁciency\nHigh maintenance cost\n[20]\nMobile sinks\nGood for network\
    \ partition\nHigh energy consumption\nin few clusters\n[21]\nQoS provisioning\n\
    Balanced energy\nconsumption\nHigh complexity\n[22]\nName and in-network\ncaching\n\
    High energy efﬁciency\nLow energy consumption\nin many clusters\n[23]\nSpatial\
    \ correlation\nHigh energy efﬁciency\nNo consideration for\ntemporal correlation\n\
    3.3.2. Security\nDuring data-gathering, WSN performs both data capture and transport,\
    \ and it is important to\naccomplish these two tasks in a secure manner. To address\
    \ this problem, Zhou et al. [32] discuss and\nanalyze several implementations\
    \ of architecture that aim to provide efﬁciency and robustness for the\ninternal\
    \ compromise and external attack. Then, they propose a new architecture: trusted\
    \ big data capture\nand transportation. In addition, misleading or forged data-gathering\
    \ may occur in WSNs. Therefore,\nsensitive and critical data transmission through\
    \ secure communication is required. While considering\nconstraints on nodes, symmetric\
    \ cryptography is very applicable to WSN due to its efﬁciency. However,\nsymmetric\
    \ cryptography should work with key management for distribution. To reduce the\
    \ overhead for\ndistribution, Kandah et al. [33] propose a centralized stateful\
    \ connection (CSC) that provides efﬁcient key\nmanagement for dynamic sensor networks.\
    \ It can maintain a good balance between efﬁciency and security\nthat is achieved\
    \ by using public key encryption at the beginning of the node’s life in the WSN.\
    \ Moreover,\nsecurity issues for big data in heterogeneous WSN are reviewed and\
    \ discussed in [34].\n3.4. Data System\nWhile the network system focuses on delivery\
    \ of sensed data in WSN, the data system focuses on\nefﬁcient processing of the\
    \ data that are transmitted via WSN. The research objectives in data systems are\n\
    more diverse than in network systems: they include infrastructure, data collection,\
    \ processing, analysis,\nmanagement, and security.\n3.4.1. Infrastructure\nBecause\
    \ of application-speciﬁc requirements and usage, manipulation, and exploitation\
    \ of the data\ngenerated by WSN in the relevant data system for big data are in\
    \ high demand. Thus, multiple research\npapers address the research challenges\
    \ related with data systems.\nFirst, an infrastructure may include big data tools\
    \ for gathering, storage, and analysis of data generated\nby a WSN that monitors\
    \ air pollution levels in a city [21]. The proposed framework combines Hadoop\n\
    and Storm for data processing, storage, and analysis, and Arduino-based kits for\
    \ constructing unique\nsensor prototypes. In terms of components, the proposed\
    \ system is composed of three main modules:\nSensors 2019, 19, 1565\n9 of 18\n\
    data acquisition module (DAM), data processing module (DPM), and a messaging tool\
    \ between DAM\nand DPM.\nIn addition to models of complete systems, there are\
    \ models of speciﬁc components. For example,\nas for distributed data-centric\
    \ storage in WSN, Xu et al. [35] propose a big data storage and retrieval\nalgorithm\
    \ for WSN under nonuniform node distribution. It aims at estimating the additional\
    \ overhead for\nthe real distribution of sensor nodes. As a technical enhancement,\
    \ data redundancy among neighbor nodes\nand a simple routing protocol are proposed\
    \ and evaluated in the experiments. The main contribution\nof their work is to\
    \ reduce the energy consumption and improve the retrieval efﬁciency with the aid\
    \ of\nproximity and routing algorithms, without the aid of GPS. Furthermore, three-tier\
    \ data mining paradigm\nfor big data in WSN is presented by Yoon [36]. The micro-controller,\
    \ smartphone, and host server tier\nare responsible for streamlining the sensor\
    \ data transmission, forming the patterns in sensor data sets,\nand providing\
    \ human expertise associated with the patterns. The proposed architecture leads\
    \ to low-lost\ndata transmission, early time-critical data mining, and urgent\
    \ response for medical as well as healthcare\napplications. Additionally, it is\
    \ interesting to introduce a smartphone device in the tier. Furthermore,\na detailed\
    \ algorithm and approach for data mining are proposed to achieve the goal.\nNew\
    \ requirements for integrating a WSN system and its associated services into a\
    \ big data system\nare deﬁned in [37]. To implement this system, a holistic architecture\
    \ is proposed to consider the ﬂows\nof the data from sensors. Speciﬁcally, a constrained\
    \ application protocol (CoAP) and a Linux service to\nintegrate Hadoop with HBase\
    \ datastore are employed over the core architecture on Linux. In the proposed\n\
    architecture, multiple layers for node possess different capabilities depending\
    \ on their roles.\nIn summary, major approaches in this research category are\
    \ compared in Table 2 in terms of advantages\nand disadvantages. Because most\
    \ of these schemes are evaluated only for prototypes, further validation\nis required.\n\
    Table 2. Comparison of advantages and disadvantages of data systems.\nMethod\n\
    Key Feature\nAdvantage\nDisadvantage\n[28]\nFramework based on\nHadoop and Storm\n\
    Open-source based\nimplementation\nLow reliability\n[29]\nDistributed data-centric\n\
    storage\nHigh energy efﬁciency\nDeployment issues in\nreal-world scenarios\n[30]\n\
    Three-tier data mining\nUrgent response\nExperiments in few\nscenarios\n3.4.2.\
    \ Data Collection\nAlthough several approaches to data collection were already\
    \ introduced in the terms of network\nsystem infrastructure, different algorithms\
    \ will be presented in this section. This implies that data collection\nthrough\
    \ static and mobile sink are not changed in the data system. However, new models\
    \ and procedures\nare deﬁned according to the requirements of the system.\nFirst,\
    \ context-aware data mules (CADAMULE) are proposed as a solution for smart data\
    \ collection\nin WSN [38]. In this work, Jayaraman et al. extend the context spaces\
    \ modeling theory to discover new\ncontext attributes, by considering previous\
    \ scenarios and events. This information is used to capture the\ncontext information.\
    \ Moreover, the proposed context-aware data mule aims at delivering the data to\
    \ the\nsink. Consequently, another approach to introduce a mobile collector is\
    \ explained in [39]. This research\ndetermines the mobile sink node’s trajectory\
    \ by introducing an M-mobile collector based on a clustering\nalgorithm. In the\
    \ proposed scheme, mobile collectors traverse a ﬁxed path to collect data from\
    \ cluster\nSensors 2019, 19, 1565\n10 of 18\ncentroids and sensors in the clusters\
    \ by multi-hop routing. Zhu et al. [40] proposed a four-phase mobile\ndata collecting\
    \ protocol, called mobility-assisted big data collecting protocol (MDCP). MCDP\
    \ operation is\nlargely divided into network clustering, route planning, route\
    \ combination, and data collecting. During\nthese procedures, mobile sinks need\
    \ to visit all the source nodes along the constrained routes while\nminimizing\
    \ energy consumption. However, because this problem is NP-hard, two heuristic\
    \ algorithms\nare proposed, accordingly. The former algorithm builds routes by\
    \ adding a link to the partially formed\nroutes between two end nodes based on\
    \ a measure of cost savings, while the latter algorithm follows the\nsequential\
    \ route building algorithm. To demonstrate suitability of the proposed scheme,\
    \ the performance\nof a mobile collector is evaluated and compared in [41]; their\
    \ main objective is to evaluate expectation\nmaximization (EM) based clustering\
    \ scheme as a function of the number of mobile nodes.\nIn addition to a mobile\
    \ collector, another main issue of data collection for big data systems is\nenergy\
    \ efﬁciency. First, Takaishi et al. [42] adapt sink node’s mobility. A new mobile\
    \ sink routing and\ndata-gathering method through the network clustering based\
    \ on a modiﬁed expectation-maximization\ntechnique is suggested. Additionally,\
    \ an optimal number of clusters to minimize the energy consumption\nthrough connectivity\
    \ and data request ﬂooding model are derived. Apart from energy efﬁciency, the\n\
    problem of a long latency caused by the mobile collector is addressed in [43].\
    \ For this problem, Sujithra et al.\npropose two novel approaches: energy-efﬁcient\
    \ big data-gathering using local data collector (EEBDG-LC)\nand energy-efﬁcient\
    \ big data-gathering using local data collector with threshold (EEBDG-LCWT), to\
    \ defeat\nan increased data-gathering latency of the previous algorithm named\
    \ “toward energy-efﬁcient big\ndata-gathering” (TEEBD). The main issue is in placing\
    \ a local data collector in every centroid of the\nregion. Further, the amount\
    \ of trafﬁc is adjusted to prevent overwhelming by the predetermined threshold\n\
    value. In the aspects of communications protocol, energy-efﬁcient routing protocols\
    \ to gather real-time\ndata are proposed in [44]. Rani et al. present an energy-efﬁcient\
    \ big data algorithm called “big data\nefﬁcient gathering” (BDEG). Cluster header\
    \ in BDEG is determined depending on the level of both the\nreceived signal strength\
    \ indicator and the residual energy of the sensor nodes. Each cluster header (CH)\n\
    within a cluster and relay node (RN) is connected to the cluster coordinator (CCO)\
    \ nodes for inter-cluster\ncommunication. The proposed algorithm builds an energy-efﬁcient\
    \ route by balancing the load on the\ncluster headers, cluster coordinators, and\
    \ relay nodes for gathering big data in an effective manner. Finally,\nadaptive\
    \ distributed data-gathering (ADiDaG) technique to save energy in periodic WSN\
    \ applications\nis proposed in [45]. Depending on operations in every round, ADiDaG\
    \ takes data-gathering, sampling\ndecision, and transmission phases. The main\
    \ decision algorithm for each phase depends on the longest\ncommon subsequence\
    \ similarity and grouping approach, as well as adaptive sensor sampling rate.\
    \ Finally,\na special case for data collection in indoor WSN is explained in [46].\
    \ Ding et al. propose a real-time\nbig data-gathering (RTBDG) algorithm for the\
    \ risk analysis of the industrial operations. The proposed\nalgorithm is performed\
    \ according to the requirements of the risk analysis under the clustering architecture,\n\
    which is built by using received signal strength indicator and residual energy\
    \ information. Simulation\nresults are given to demonstrate the suitability of\
    \ RTBDG for industrial environments.\nIn summary, Table 3 lists a comparison of\
    \ data collection schemes in terms of advantages and\ndisadvantages. Even though\
    \ most of the schemes are well-designed to achieve their objectives, there are\n\
    still research challenges in the aspects of deployment or optimization.\nSensors\
    \ 2019, 19, 1565\n11 of 18\nTable 3. Comparison of advantages and disadvantage\
    \ for data collection.\nMethod\nKey Feature\nAdvantage\nDisadvantage\nCADAMULE\
    \ [32]\nSituation and event\nawareness\nCost-efﬁcient data\ncollection\nSimple\
    \ weight based\ncomputation\n[33]\nM-mobile collector\nHigh energy efﬁciency\n\
    Few scenarios for\nsimulation\n[34]\nMDCP\nHigh energy efﬁciency\nAssumption of\
    \ inﬁnite\nstorage memory\n[36]\nMobile collector\nHigh energy efﬁciency\nFlooding\
    \ based operation\n[37]\nLocal data collector\nReduced data-gathering\nlatency\n\
    Too much dependency\non threshold value\n3.4.3. Data Processing\nIn this section,\
    \ we describe in-network processing in WSN: data aggregation and fusion technologies.\n\
    Fouad et al.\n[19] provided an overview and discussion of state-of-the-art data\
    \ mining and data\nfusion techniques designed for WSNs.\nThey emphasized that\
    \ processing sensor data inside the\nnetwork (in-network) before any further processing\
    \ helps save limited resources and prevent excessive\ndata duplication.\nIn addition\
    \ to a comprehensive survey, a speciﬁc algorithm called high-dimensional data\
    \ aggregation\ncontrol algorithm for big data (HDAC) is proposed in [47]. In this\
    \ study, information to eliminate the\ndimension not matching with the speciﬁed\
    \ requirements is the main source. While handling this, the\nprincipal components\
    \ method to analyze the remaining dimension is employed. In the process of data\n\
    aggregation, the self-adaptive data aggregation mechanism is used to reduce the\
    \ phenomenon of network\ndelay. The simulation results evaluate node energy consumption\
    \ and data delay through the HDAC.\nRecently, a comprehensive survey of data aggregation\
    \ for big data in WSN was presented in [19]. It covers\nresearch challenges in\
    \ the big data area and proposes a new classiﬁcation of these challenges, accordingly\n\
    to the necessities of WSN. The detailed data aggregation strategies in WSNs are\
    \ also discussed. They\ninclude: (1) distributed compressive data aggregation\
    \ in large-scale WSN; (2) sensor data aggregation\nin a multi-layer big data framework;\
    \ (3) lifting wavelet compression based data aggregation in big data\nWSN; (4)\
    \ scalable privacy-preserving big data aggregation mechanism; and (5) a cluster-based\
    \ data fusion\ntechnique to analyze big data in wireless multi-sensor systems.\n\
    3.4.4. Data Management\nThere is a book chapter on big data management in WSN\
    \ edited by Hung and Hsieh [48], where an\noverview of big data management on\
    \ WSN is presented. Moreover, big data tools and frameworks are\nintroduced to\
    \ evaluate performance of query processing and data collection. As the major challenge\
    \ in\ndata management in WSNs, the authors focus on energy preservation. In the\
    \ aspects of energy efﬁciency,\nthe authors emphasize decentralization, which\
    \ is one of the promising ways to achieve energy preservation\nby distributing\
    \ the computation tasks among sensor nodes.\nMoreover, Medlej [49] proposes novel\
    \ big data management techniques for periodic sensor networks\nto overcome the\
    \ limitations imposed by WSN as well as adapt key features of sensor data. The\
    \ main\ncontribution of this thesis is to propose an adaptive sampling approach\
    \ for periodic data collection by\nallowing each sensor node to adjust its sampling\
    \ rates in parallel with the physical changing dynamics.\nAdditionally, periodic\
    \ data aggregation on sensor node data is proposed as a preprocessing phase for\
    \ an\nSensors 2019, 19, 1565\n12 of 18\nefﬁcient and scalable data mining. Speciﬁcally,\
    \ a new data mining method based on the existing K-means\nclustering is proposed.\n\
    3.4.5. Data Analysis\nPrior to analyzing big data, it is necessary to deﬁne system\
    \ architecture. To meet this requirement,\nFarrah et al. [20] propose a new framework\
    \ that consists of Hadoop over MapReduce and Hive data\nwarehouse. To perform\
    \ MapReduce jobs, an SQL-like language, HiveQL, is used to execute queries. Based\n\
    on these techniques, a data warehouse model for WSN is proposed to analyze all\
    \ gathered data and detect\nabnormal behavior.\nAs a result of data analysis,\
    \ fast detection and identiﬁcation of the location of errors in sensor datasets\n\
    should be provided. To achieve this goal, Yang et al. [50] developed a novel data\
    \ error detection approach\nthat exploits the full computational potential of\
    \ the cloud platform and the network features of WSN.\nIn the proposed scheme,\
    \ a set of sensor data error types are classiﬁed and deﬁned over cluster based\n\
    WSN. In particular, the error detection over a scale-free network topology and\
    \ most of the detection\noperations can be conducted in limited temporal or spatial\
    \ data blocks instead of the complete big data set.\nAnother error detection,\
    \ as well as cleaning big data sensor error issues, are addressed in [51]. In\
    \ this study,\nthe performance is improved by employing a scale-free network topology\
    \ and classiﬁcation of the error\ntypes at the same time. Moreover, extensible\
    \ sensor stream processing (ESP) can be used for pervasive\napplications to build\
    \ sensor data cleaning infrastructures.\nAs one of the important applications\
    \ for WSN, intruder detection becomes pervasive with an accurate\nmeasurement\
    \ of the image in terms of width and resolution. To operate it practically, a\
    \ three-layered big\ndata analytic architecture [52] is designed to analyze the\
    \ data generated during the construction of the\nbarrier and the detection of\
    \ the intruder using the camera sensors. In addition, a cloud layer is implemented\n\
    to study the behavior of the intruder with a minimum number of camera sensors.\
    \ As indicated in the\nprevious case, data analysis becomes more beneﬁcial in\
    \ wireless multimedia sensor networks, compared\nwith typical WSN. Thus, a big\
    \ data model based on a graph database model that deals with data generated\n\
    by wireless multimedia sensor networks is proposed in [53]. With the help of a\
    \ simulator to generate\nsynthetic data, and store and query big data in the proposed\
    \ model, the authors present the evaluation\nresults for well-known graph-based\
    \ NoSQL databases.\n3.4.6. Security\nTo detect intrusion efﬁciently and correctly,\
    \ a WSN is usually a good solution: it can defend against\nthe insider attacks\
    \ using a relevant trust-based mechanism. However, due to excessive data, effectiveness\n\
    of trust computation can be degraded signiﬁcantly. To prevent this degradation,\
    \ Meng et al. [54] proposed\nBayesian-based trust management with trafﬁc sampling\
    \ under a hierarchical structure. Their experimental\nresults prove that the proposed\
    \ approach improved trust management in a high-trafﬁc case by detecting\nmalicious\
    \ nodes quickly.\nSecurity in multimedia big data applications for smart city\
    \ in trust-assist sensor cloud (TASC) is\naddressed in [55]. Two types of TASC:\
    \ TASC-S (TASC with a single trust value threshold), and TASC-M\n(TASC with multiple\
    \ trust value thresholds), are proposed and evaluated through extensive simulation\n\
    results in the aspect of throughput. Further, Wu et al. [56] proposed a dynamic\
    \ trust relationships aware\ndata privacy protection (DTRPP) mechanism by combining\
    \ key distribution with trust management.\nThe major contribution of this work\
    \ is to evaluate the trust value of a public key according to both the\nnumber\
    \ of supporters and the trust degree of the public key.\nSensors 2019, 19, 1565\n\
    13 of 18\n4. Open Issues\n4.1. Evolution to Internet-of-Things (IoT)\nAs described\
    \ in [57], IoT systems will be employed with typical WSNs and new communication\n\
    systems. Rather than typical WSN, IoT system [58] exhibit better performance in\
    \ terms of latency and\nenergy efﬁciency in real implementations. IoT collects\
    \ and uses data in real time to optimize operations,\ndetect security breaches,\
    \ correct malfunctions, and more. Therefore, an IoT system must include managing\n\
    real-time streaming data, real-time analytics, and real-time decision making.\
    \ It implies that IoT should\nhave the ability to ingest, aggregate, and compress\
    \ real-time data from sensor devices at the edge. In this\nsituation, big data\
    \ systems play a great role in analyzing real-time sensor data and rendering real-time\n\
    decisions that optimize operational performance or detect unusual performance\
    \ or behaviors for an\nimmediate investigation. Based on the above perspective,\
    \ IoT will replace WSN for big data systems.\nAs a good reference model, Marjani\
    \ et al. [59] propose a new architecture for big IoT data analytics with\npractical\
    \ use cases. Furthermore, privacy, big data mining, visualization, and integration\
    \ are presented\nas future research directions. However, as indicated in [60],\
    \ there are emerging issues to be addressed.\nAs a solution to these problems,\
    \ adaptive real-time response and intelligent control technologies will\nbe required.\n\
    4.2. Application-Speciﬁc Requirements\nUsually, WSN is deployed and implemented\
    \ to accomplish application-speciﬁc missions, as well\nas meet their speciﬁc requirements.\
    \ For example, some applications require scalar values, while others\nrequire\
    \ vector ones. According to the required type of values in the application, the\
    \ data generated by the\nsensor node possesses naturally different properties\
    \ and characteristics. This implies that the network and\ndata system for big\
    \ data should be designed in accordance with the application requirements. Moreover,\n\
    because multimedia data need more considerations for resource consumption than\
    \ typical data in terms\nof storage, processing, and management, a feasible framework\
    \ and architecture should be developed to\nemploy speciﬁc algorithms regardless\
    \ of the volume, velocity, and variety of the generated data.\n4.3. Network Architecture\n\
    In terms of WSN for big data systems, mobile sink [61] and clustering [62] are\
    \ important research\nchallenges in collecting and aggregating the data. However,\
    \ these schemes need to be extended to\nsigniﬁcantly reduce energy consumption\
    \ and provide real-time communications due to a large amount of\ndata. Examples\
    \ include [63,64] that propose a data aggregation algorithm based on principal\
    \ component\nanalysis (PCA) to achieve minimal energy consumption and delay, which\
    \ can be executed in the cluster\nhead (CH).\nIn addition, as new applications\
    \ emerge, typical WSN is evolved to support new types of sensor\nnetworks: urban\
    \ sensor networks, ﬂying sensor networks, wireless underground sensor networks,\
    \ and\nwireless underwater sensor networks, etc. To handle big data in these new\
    \ networks, the current network\narchitecture that usually employs either mobile\
    \ sink or clustering need to be extended or modiﬁed to\ncollect the sensed data\
    \ efﬁciently in several areas. For example, mobility patterns in these networks\n\
    are completely different from typical WSN: connectivity between source and destination\
    \ is not always\nguaranteed. Thus, feasible mobility prediction and clustering\
    \ algorithms should be developed according\nto the additional constraints of each\
    \ network. Additionally, clustering algorithms need to be revised\nin the network\
    \ environment, while considering connectivity and mobility. Moreover, regardless\
    \ of the\ntype of the network, energy efﬁciency is the most critical issue to\
    \ be addressed. Therefore, network\narchitecture and communication protocols need\
    \ to meet the above requirements. Finally, deployment\nSensors 2019, 19, 1565\n\
    14 of 18\nissues of controlling the topology in new types of WSN should be mentioned.\
    \ In addition, overall data\ngenerated across numerous sensors in the densely\
    \ distributed WSNs can produce a signiﬁcant portion\nof the big data. Thus, a\
    \ data fusion algorithm needs to be supported, as studied in [65]. The authors\n\
    introduce data fusion model based on an improved radial basis function (RBF) network.\
    \ Additionally,\ndifferent data packets set different transmission intervals and\
    \ properties according to the dynamics of\ntopology under the clustering architecture.\n\
    4.4. Real-Time Communications on Fog Computing\nBecause of the delay-sensitive\
    \ property of sensed data in WSN, real-time communication and\nprocessing are\
    \ highly preferred for big data systems.\nHowever, severe constraints on nodes\
    \ in\nWSNs make it difﬁcult to support real-time communications. Moreover, a big\
    \ data system on cloud\ncomputing architecture is not suitable to perform real-time\
    \ tasks. In order to support real-time tasks,\nfog computing [66] was recently\
    \ proposed to extend the cloud services to the edge of the network by\ncomputation,\
    \ communication and storage closer to the edge devices and end users, which aims\
    \ to enhance\nlow latency, mobility, network bandwidth, security and privacy.\
    \ Therefore, a big data system on fog\ncomputing can be a feasible solution to\
    \ support real-time processing. However, there is no outstanding\nsolution for\
    \ real-time communications [67] in WSN yet. Figure 6 shows the conceptual architecture\n\
    for fog computing, which works as an intermediate layer between the cloud and\
    \ the users to provide\nreal-time communications.\nFigure 6. Overview of fog computing.\n\
    4.5. Extensive and Flexible Framework\nEven though WSN is regarded as one of the\
    \ major sources for big data, there are many other types of\nsources for big data.\
    \ They are used in applications that are built over radio frequency identiﬁcation\
    \ (RFID),\nmachine-to-machine (M2M) communications, peer-to-peer (P2P) communications,\
    \ internet-of-things, and\nsmartphones. If the data from WSN can be combined with\
    \ data from other applications, it is possible to\nbuild a more useful big data\
    \ system. This analysis implies that the data from these devices need to be\n\
    integrated and handled in a homogenous way. In other words, there is a demand\
    \ in deﬁning an integrated,\nextensive, and ﬂexible framework to accommodate various\
    \ types of data. Further, data fusion may be\nan alternative approach. As for\
    \ the similar tasks, the research work for middleware has been conducted\nactively.\
    \ Therefore, it is recommended to analyze the state-of-the-art of middleware for\
    \ WSN [68] and\ndevelop a feasible framework to perform integration of several\
    \ data types.\nSensors 2019, 19, 1565\n15 of 18\n4.6. Modeling and Simulation\n\
    Performance evaluation and comparison are essential in research work. Even though\
    \ some platforms\nare proposed for big data and WSN, respectively, there is no\
    \ integrated and combined simulator or testbed.\nAs a short-term solution, it\
    \ seems reasonable to include a WSN simulation into a big data simulator or\n\
    platform for extensive experiments. On the other hand, for a long-term solution,\
    \ it is required to develop\nan interface between two platforms to exchange data\
    \ in a way of eliminating dependency. Moreover, as\nmentioned before, there is\
    \ also demand in building a ﬂexible and extensible evaluation platform to include\n\
    diverse types of WSNs. Additionally, because evaluation is mostly dependent on\
    \ the modeling, more\nrealistic trafﬁc and error modeling is critical to improve\
    \ the reliability of the simulation.\nIn summary, Table 4 shows the current research\
    \ challenges and further directions for big data systems\nbased on WSN.\nTable\
    \ 4. Summary of open issues.\nResearch Area\nCurrent Research Challenges\nFurther\
    \ Trends\nNetworks Architecture\nStatic/mobile sink, aggregation\nEnergy efﬁciency,\
    \ Speciﬁc protocols\nfor applications, 5G\nCommunications\nFramework\nSingle platform\
    \ for WSN\nIntegrated platform for M2M, P2P,\nand IoT\nReal-time\nQoS protocol\n\
    Fog/Edge computing, Middleware\n5. Conclusions\nIn this paper, we presented technical\
    \ research challenges for big data systems based on WSN in cases\nwhen WSN was\
    \ regarded as one of the major data sources. Prior to looking into major contributions\
    \ of\neach work, we presented the opportunities of big data systems in WSN. Subsequently,\
    \ previous research\nwas categorized according to the research area and objective.\
    \ Speciﬁcally, we focus on data collection and\nin-network processing while considering\
    \ the unique characteristics of network properties. Finally, open\nissues in this\
    \ research area are discussed.\nAuthor Contributions: B.-S.K., K.-I.K., B.S.,\
    \ F.C. and K.H.K. contributed to collecting related literature and discussing\n\
    advantages and disadvantages.\nFunding: This research was supported by Basic Science\
    \ Research Program through the National Research Foundation\nof Korea (NRF) funded\
    \ by the Ministry of Education (Grant no. NRF-2018R1D1A1B07043731). Also, it was\
    \ supported\nby the Research Incentive Fund (R18086) by Zayed University, Abu\
    \ Dhabi, UAE.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nChen, C.L.P.; Zhang, C. Data-intensive Applications, Challenges,\
    \ Techniques and Technologies: A Survey on Big\nData. Inf. Sci. 2014, 275, 314–347.\
    \ [CrossRef]\n2.\nChen, M.; Mao, S.; Liu, Y. Big Data: A Survey. Mob. Netw. Appl.\
    \ 2014, 19, 171–209. [CrossRef]\n3.\nOussous, A.; Benjelloun, F.; Lahcen, A.;\
    \ Belfkiha, S. Big Data Technologies: A Survey. J. King Saud Univ. Comput.\nInf.\
    \ Sci. 2018, 30, 431–448. [CrossRef]\n4.\nXiao, F.; Zhang, C.; Han, Z. Editorial:\
    \ Big Data in Ubiquitous Wireless Sensor Networks. Int. J. Distrib. Sens. Netw.\n\
    2014. [CrossRef]\n5.\nHalde, S.; Khot, S. Big Data in Wireless Sensor Network:\
    \ Issues & Challenges. Int. J. Adv. Eng. Manag. Sci. 2016,\n2, 1618–1621.\nSensors\
    \ 2019, 19, 1565\n16 of 18\n6.\nHarb, H.; Idrees, A.; Jaber, A.; Makhoul, A.;\
    \ Zahwe, O.; Taam, M. Wireless Sensor Networks: A Big Data Source\nin Internet\
    \ of Things. Int. J. Sens. Wirel. Commun. Control 2017, 7, 141–149. [CrossRef]\n\
    7.\nKomalavalli, C. Convergence of Wireless Sensor Networks, Internet of Things,\
    \ Big Data: Challenges. Int. J. Sci.\nRes. Eng. Technol. 2017, 6, 649–652.\n8.\n\
    Sezer, O.; Dogdu, E.; Ozbayoglu, A. Context-Aware Computing, Learning, and Big\
    \ Data in Internet of Things:\nA Survey. IEEE Internet Things J. 2018, 5, 1–27.\
    \ [CrossRef]\n9.\nQian, L.; Zhu, J.; Zhang, S. Survey of Wireless Big Data. J.\
    \ Commun. Inf. Netw. 2017, 2, 1–18. [CrossRef]\n10.\nJaradat, M.; Jarrah, M.;\
    \ Bousselham, A.; Jararweh, Y.; Al-Ayyouba, M. The Internet of Energy: Smart Sensor\n\
    Networks and Big Data Management for Smart Grid. Procedia Comput. Sci. 2015, 56,\
    \ 592–597. [CrossRef]\n11.\nJangili, S.; Bikshalu, K. Smart Grid Administration\
    \ using Big Data and Wireless Sensor Networks. Int. J. Adv.\nRes. Sci. Eng. 2017,\
    \ 6, 629–636.\n12.\nPoon, C.; Lo, B.; Yuce, M.; Alomainy, A.; Hao, Y. Body Sensor\
    \ Networks: in the Era of Big Data and Beyond.\nIEEE Rev. Biomed. Eng. 2015, 8,\
    \ 4–16. [CrossRef]\n13.\nDu, Y.; Hu, F.; Wang, L.; Wang, F. Framework and Challenges\
    \ for Wireless Body Area Networks Based on Big Data.\nIn Proceedings of the IEEE\
    \ International Conference on Digital Signal Processing, Singapore, 21–24 July\
    \ 2015.\n14.\nYuan, H.; Wang, J.; An, Q.; Li, S. Research of WSN and Big Data\
    \ Analysis Based Continuous Pulse Monitoring\nSystem for Efﬁcient Physical Training.\
    \ In Proceedings of the Future Technologies Conference, San Francisco, CA,\nUSA,\
    \ 6–7 December 2016.\n15.\nWu, D.; Shi, H.; Wang, H.; Wang, R.; Fang, H. A Feature-based\
    \ Learning System for Internet of Things\nApplications. IEEE Internet Things J.\
    \ 2018. [CrossRef]\n16.\nMolka-Danielsen, J.; Engelseth, P.; Olesnanikova, V.;\
    \ Saraﬁn, P.; Zalman, R. Big Data Analytics for Air Quality\nMonitoring at a Logistics\
    \ Shipping Base via Autonomous Wireless Sensor Network Technologies. In Proceedings\n\
    of the International Conference on Enterprise Systems, Beijing, China, 22–24 September\
    \ 2017.\n17.\nKhaday, B.; Matson, E.; Springer, J.; Kwon, Y.; Kim, H.; Kim, S.;\
    \ Kenzhebalin, D.; Cho, S.; Yoon, J.; Hong, S.\nWireless Sensor Network and Big\
    \ Data in Cooperative Fire Security system using HARMS. In Proceedings\nof the\
    \ International Conference on Automation, Robotics and Applications, Queenstown,\
    \ New Zealand,\n17–19 February 2015.\n18.\nGonzalez-Jaramillo, V. Tutorial: Internet\
    \ of Things and The Upcoming Wireless Sensor Networks Related with\nThe Use of\
    \ Big Data in Mapping Services; Issues of Smart Cities. In Proceedings of the\
    \ International Conference\non eDemocracy & eGovernment, Sangolqui, Ecuador, 30\
    \ March–1 April 2016.\n19.\nFouad, M.; Oweis, N.; Gaber, T.; Ahmed, M.; Snasel,\
    \ V. Data Mining and Fusion Techniques for WSNs as a\nSource of the Big Data.\
    \ Procedia Comput. Sci. 2015, 65, 778–786. [CrossRef]\n20.\nBoubiche, S.; Boubiche,\
    \ D.; Bilami, A.; Toral-Cruz, H. Big Data Challenges and Data Aggregation Strategies\
    \ in\nWireless Sensor Networks. IEEE Access 2018, 6, 20558–20571. [CrossRef]\n\
    21.\nDjedouboum, A.; Ari, A.; Gueroui, A.; Mohamadou, A.; Aliouat, Z. Big Data\
    \ Collection in Large-Scale Wireless\nSensor Networks. Sensors 2018, 18, 4474.\
    \ [CrossRef]\n22.\nRios, L.; Diguez, J.\nBig Data Infrastructure for Analyzing\
    \ Data Generated by Wireless Sensor Networks.\nIn Proceedings of the IEEE International\
    \ Congress on Big Data, Anchorage, AK, USA, 27 June–2 July 2014;\npp. 816–823.\n\
    23.\nSong, C. A Novel Wireless Sensor Network Architecture Based on Cloud Computing\
    \ and Big Data. Int. J.\nOnline Eng. 2017, 13, 18–25. [CrossRef]\n24.\nVijayalaxmi.\
    \ An Efﬁcient Way to Gather Big Data in WSN Using Mobile Sink Routing. In. J.\
    \ Adv. Res. Comput.\nCommun. Eng. 2015, 4, 43–45.\n25.\nKalnoor, G.; Agarkhed,\
    \ J. Management of Big Data for Improving Performance of Wireless Sensor Network\n\
    Using a Structured Clustering Approach. Int. J. Softw. Eng. Soft Comput. 2016,\
    \ 6. [CrossRef]\n26.\nAng, K.; Seng, J.; Zungeru, A. Optimizing Energy Consumption\
    \ for Big Data Collection in Large-Scale Wireless\nSensor Networks With Mobile\
    \ Collectors. IEEE Syst. J. 2018, 12, 616–626. [CrossRef]\n27.\nXu, Z. The Analytics\
    \ and Applications on Supporting Big Data Framework in Wireless Surveillance Networks.\n\
    Int. J. Soc. Humanist. Comput. 2017, 2, 141–149. [CrossRef]\nSensors 2019, 19,\
    \ 1565\n17 of 18\n28.\nAkshatha, T.; Praveena, T. Data Aggregation in Wireless\
    \ Sensor Network for Big Data. Int. J. Innov. Res. Comput.\nCommun. Eng. 2016,\
    \ 4, 15292–15301.\n29.\nWu, M.; Tan, L.; Xiong, N. A Structure Fidelity Approach\
    \ for Big Data Collection in Wireless Sensor Networks.\nSensors 2015, 15, 248–273.\
    \ [CrossRef] [PubMed]\n30.\nHarb, H.; Makoul, A.; Jaoude, C. A Real-Time Massive\
    \ Data Processing Technique for Densely Distributed\nSensor Networks. IEEE Access\
    \ 2018, 6, 56551–56561. [CrossRef]\n31.\nReshma, J.; Kumar, T.; Vani, B.; Sakthivel,\
    \ S. Big Data Oriented Energy Aware Routing for Wireless Sensor\nNetworks. Mob.\
    \ Netw. Appl. 2018, 1–9. [CrossRef]\n32.\nZhou, Q.; Xiao, D.; Tang, Y.; Rong,\
    \ C. Trusted Big Data Capture and Transport Architecture for Wireless Sensor\n\
    Network. J. Internet Technol. 2014, 15, 1033–1041.\n33.\nKandah, F.; Nichols,\
    \ O.; Yang, L. Efﬁcient Key Management for Big Data Gathering in Dynamic Sensor\
    \ Networks.\nIn Proceedings of the International Conference on Computing, Networking\
    \ and Communications, Santa Clara,\nCA, USA, 26–29 January 2017.\n34.\nBoubiche,\
    \ D. Secure and Efﬁcient Big Data Gathering in Heterogeneous Wireless Sensor Networks.\
    \ In Proceedings\nof the International Conference on Internet of Things And Cloud\
    \ Computing, Cambridge, UK, 22–23 March 2016.\n35.\nZhou, Q.; Xiao, D.; Tang,\
    \ Y.; Rong, C. Energy-efﬁcient Big Data Storage and Retrieval for Wireless Sensor\n\
    Networks with Nonuniform Node Distribution. Concurr. Comput. Pract. Exp. 2015,\
    \ 27, 5765–5779.\n36.\nYoon, J. Three-Tiered Data Mining for Big Data Patterns\
    \ of Wireless Sensor Networks in Medical and Healthcare\nDomains. In Proceedings\
    \ of the 2013 International Conference on Internet and Web Applications and Services,\n\
    Rome, Italy, 23–28 June 2013.\n37.\nTracey, D.; Sreenan, C. A Holistic Architecture\
    \ for the Internet of Things, Sensing Services and Big Data.\nIn Proceedings of\
    \ the IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing,\
    \ Delft,\nThe Netherlands, 13–16 May 2013.\n38.\nJayaraman, P.; Zaslavsky, A.;\
    \ Delsing, J. Cost Efﬁcient Data Collection of Sensory Originated Data Using\n\
    Context-Aware Mobile Devices. In Proceedings of the International Conference on\
    \ Mobile Data Management\nWorkshops, Beijing, China, 27–30 April 2008.\n39.\n\
    Pattanshetti, A.; Kale, N. Big-data Gathering Using Mobile Collector in Densely\
    \ Deployed Wireless Sensor\nNetwork. Int. J. Emerg. Trends Sci. Technol. 2015,\
    \ 2, 5765–5779.\n40.\nZhu, J.; Yin, X.; Bai, J.; Wang, Y. Mobility-assisted Big\
    \ Data Collecting in Wireless Sensor Networks. Int. J. Distrib.\nSens. Netw. 2016.\
    \ [CrossRef]\n41.\nSuja, G.J.; Jose, S.; Raman, R.; Samuel, P. Performance Analysis\
    \ of Big Data Gathering in Wireless Sensor\nNetwork Using an EM Based Clustering\
    \ Scheme. In Proceedings of the International Conference on Advances in\nComputing\
    \ and Communications, Kochi, India, 2–4 September 2015.\n42.\nTakaishi, D.; Nishiyama,\
    \ H.; Kato, N.; Miura, R. Toward Energy Efﬁcient Big Data Gathering in Densely\n\
    Distributed Sensor Networks. IEEE Trans. Emerg. Top. Comput. 2014, 2, 388–397.\
    \ [CrossRef]\n43.\nSujithra, T.; Venkatesan, R. Swift and Energy Efﬁcient Big\
    \ Data Gathering Approaches in Wireless Sensor\nNetworks. Int. J. Comput. App.\
    \ 2016, 138, 14–19. [CrossRef]\n44.\nRani, S.; Ahmed, S.; Talwar, R.; Malhotra,\
    \ J. Can Sensors Collect Big Data? An Energy-Efﬁcient Big Data\nGathering Algorithm\
    \ for a WSN. IEEE Trans. Ind. Inform. 2017, 13, 1961–1968. [CrossRef]\n45.\nIdrees,\
    \ A.; Harb, H.; Jaber, A.; Zahwe, O.; Taam, M. Adaptive Distributed Energy-saving\
    \ Data Gathering\nTechnique for Wireless Sensor Networks. In Proceedings of the\
    \ International Conference on Wireless and Mobile\nComputing, Networking and Communications,\
    \ Rome, Italy, 9–11 October 2017.\n46.\nDing, X.; Tian, Y.; Yu, Y. A Real-Time\
    \ Big Data Gathering Algorithm Based on Indoor Wireless Sensor Networks\nfor Risk\
    \ Analysis of Industrial Operations. IEEE Trans. Ind. Inform. 2016, 12, 1232–1242.\
    \ [CrossRef]\n47.\nSun, Z.; Ji, X. HDAC High-Dimensional Data Aggregation Control\
    \ Algorithm for Big Data in Wireless Sensor\nNetworks. Int. J. Inf. Technol. Web\
    \ Eng. 2017, 12, 72–86. [CrossRef]\n48.\nHung, C.; Hsieh, C. Chapter 5: Big Data\
    \ Management on Wireless Sensor Networks. In Big Data Analytics for\nSensor-Network\
    \ Collected Intelligence; Morgan Kaufmann: Burlington, MA, USA, 2017.\nSensors\
    \ 2019, 19, 1565\n18 of 18\n49.\nMedlej, M.\nBig Data Management for Periodic\
    \ Wireless Sensor Networks.\nPh.D. Thesis, Universite de\nFranche-Comte, Besançon,\
    \ France, 2014.\n50.\nYang, C.; Liu, C.; Zhang, X.; Nepal, S.; Chen, J. A Time\
    \ Efﬁcient Approach for Detecting Errors in Big Sensor\nData on Cloud. IEEE Trans.\
    \ Parallel Distrib. Syst. 2015, 26, 329–339. [CrossRef]\n51.\nKumar, A.; Ashok,\
    \ M.; Sam, R. Error Detection and Cleaning for Big Data Sets from Sensor Network\
    \ Systems on\nCloud. Int. J. Comput. Sci. Trends Technol. 2016, 4, 261–265.\n\
    52.\nMohapatra, S.; Sahoo, P.; Wu, S. Big Data Analytic Architecture for Intruder\
    \ Detection in Heterogeneous Wireless\nSensor Networks. J. Netw. Comput. Appl.\
    \ 2016, 66, 236–249. [CrossRef]\n53.\nKucukkecesi, C.; Yazici, A. Big Data Model\
    \ Simulation on a Graph Database for Surveillance in Wireless\nMultimedia Sensor\
    \ Networks. Big Data Res. 2018, 11, 33–43. [CrossRef]\n54.\nMeng, W.; Li, W.;\
    \ Su, C.; Zhou, J.; Lu, R. Enhancing Trust Management for Wireless Intrusion Detection\
    \ via\nTrafﬁc Sampling in the Era of Big Data. IEEE Access 2018, 6, 7234–7243.\
    \ [CrossRef]\n55.\nZhu, C.; Shu, L.; Leung, V.; Guo, S.; Zhang, Y.; Yang, L.\n\
    Secure Multimedia Big Data in Trust-Assisted\nSensor-Cloud for Smart City. IEEE\
    \ Commun. Mag. 2017, 55, 24–30. [CrossRef]\n56.\nWu, D.; Si, S.; Wu, S.; Wang,\
    \ R.\nDynamic Trust Relationships Aware Data Privacy Protection in Mobile\nCrowd-Sensing.\
    \ IEEE Internet Things J. 2017, 5, 2958–2970. [CrossRef]\n57.\nKuo, Y.; Li, C.;\
    \ Jhang, J.; Lin, S. Design of a Wireless Sensor Network-Based IoT Platform for\
    \ Wide Area and\nHeterogeneous Applications. IEEE Sens. J. 2018, 18, 5187–5197.\
    \ [CrossRef]\n58.\nMorillo, P.; Orduña, J.; Fernández, M.; García-Pereira, I.\
    \ Comparison of WSN and IoT Approaches for A Real-time\nMonitoring System of Meal\
    \ Distribution Trolleys: A Case Study. Future Gener. Comput. Syst. 2018, 87, 242–250.\n\
    [CrossRef]\n59.\nMarjani, M.; Nasaruddin, F.; Gani, A.; Karim, A.; Hashem, I.;\
    \ Siddiqa, A.; Yaqoob, I. Big IoT Data Analytics:\nArchitecture, Opportunities,\
    \ and Open Research Challenges. IEEE Access 2017, 5, 5247–5261.\n60.\nMorillo,\
    \ P.; M.Orduña, J.; Fernández, M.; García-Pereira, I. Big-Sensing-Data Curation\
    \ for the Cloud Is Coming:\nA Promise of Scalable Cloud-Data-Center Mitigation\
    \ for Next-Generation IoT and Wireless Sensor Networks.\nIEEE Consum. Electron.\
    \ Mag. 2017, 6, 48–56.\n61.\nGupta, N.; Gupta, V. A Review on Sink Mobility Aware\
    \ Fast and Efﬁcient Data Gathering in Wireless Sensor\nNetworks.\nIn Proceedings\
    \ of the International Conference on Advances in Computing, Communication\n& Automation,\
    \ Dehradun, India, 8–9 April 2016.\n62.\nMazumdar, N.; Roy, S.; Nayak, S.\nA Survey\
    \ on Clustering Approaches for Wireless Sensor Networks.\nIn Proceedings of the\
    \ International Conference on Data Science and Business Analytics, Porto, Portugal,\
    \ 26–28 July\n2018; pp. 236–240.\n63.\nLi, J.; Guo, S.; Y, Y.; He, J. Data Aggregation\
    \ with Principal Component Analysis in Big Data Wireless Sensor\nNetworks. In\
    \ Proceedings of the International Conference on Mobile Ad-Hoc and Sensor Networks,\
    \ Hefei,\nChina, 16–18 December 2016; pp. 45–51.\n64.\nYu, T.; Wang, X.; Shami,\
    \ A. Recursive Principal Component Analysis-based Data Outlier Detection and Sensor\n\
    Data Aggregation in IoT Systems. IEEE Internet Things J. 2017, 4, 2207–2216. [CrossRef]\n\
    65.\nYue, Y.; Fan, H.; Li, J.; Qin, Q. Large-scale Mobile Wireless Sensor Network\
    \ Data Fusion Algorithm. In Proceedings\nof the IEEE International Conference\
    \ on Big Data Analysis, Hangzhou, China, 12–14 March 2016.\n66.\nHu, P.; Dhelim,\
    \ S.; Ning, H.; Qiud, T. Survey on Fog Computing: Architecture, Key Technologies,\
    \ Applications\nand Open Issues. J. Netw. Comput. Appl. 2017, 98, 27–42. [CrossRef]\n\
    67.\nKim, B.; Park, H.; Kim, K.; Godfrey, D.; Kim, K. A Survey on Real-Time Communications\
    \ in Wireless Sensor\nNetworks. Wirel. Commun. Mob. Comput. 2017, 2017, 1864847.\
    \ [CrossRef]\n68.\nKhalid, Z.; Fisal, N.; Rozaini, M. A Survey of Middleware for\
    \ Sensor and Network Virtualization. Sensors 2014,\n14, 24046–24097. [CrossRef]\n\
    c⃝ 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article is an\
    \ open access\narticle distributed under the terms and conditions of the Creative\
    \ Commons Attribution (CC\nBY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: (Kim et al., 2019)
  journal: Sensors (Basel)
  key_findings: 'WSNs can be a valuable data source for big data systems.

    In-network data processing techniques can improve the efficiency of both WSNs
    and big data systems.

    There are several challenges and opportunities in integrating WSNs and big data
    systems.'
  limitations: The paper does not directly address the specific issue of using hyperspectral
    imaging and thermal sensing for non-invasive plant stress detection within the
    context of automated, real-time irrigation management systems.
  main_objective: To investigate the current state and future potential of real-time,
    end-to-end automated irrigation management systems.
  pdf_link: https://www.mdpi.com/1424-8220/19/7/1565/pdf?version=1554089761
  publication_year: 2019
  relevance_evaluation: The relevance of this paper to my literature review is moderate.
    While it does not directly address the specific issue of using hyperspectral imaging
    and thermal sensing for non-invasive plant stress detection within the context
    of automated, real-time irrigation management systems, it provides a comprehensive
    survey of the current state and future potential of real-time, end-to-end automated
    irrigation management systems. The paper highlights the importance of data collection,
    data transmission, and data processing in automated irrigation management systems,
    which are all relevant to my research topic. Additionally, the paper discusses
    the challenges and opportunities of integrating WSNs and big data systems, which
    is a key aspect of my research.
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Wireless Sensor Networks (WSNs), Big Data, In-network processing
  title: Wireless Sensor Networks for Big Data Systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/bdcc6040127
  analysis: '>'
  apa_citation: Majeed, A., & Hwang, S. O. (2022). Applications and Challenges of
    Federated Learning in the Big Data Era with Special Emphasis on COVID-19. Big
    Data and Cognitive Computing, 6(4), 127. https://doi.org/10.3390/bdcc6040127
  authors:
  - Abdul Majeed
  - Xiaohan Zhang
  - Seong Oun Hwang
  citation_count: 3
  explanation: "Sure, I can help you with that. Here is a concise summary (3-5 sentences)\
    \ of the key points of the paper as they relate to the outline point and review\
    \ intention, as well as a succinct yet detailed explanation (3-5 sentences) of\
    \ how the details of the paper contribute to addressing each key point within\
    \ the larger context and intent of the literature review:\n\n**Key Points:**\n\
    \n1. Federated Learning (FL) has many benefits for COVID-19 uses cases, including\
    \ preserving privacy, reducing data sharing, and enabling local model training.\
    \ \n2. The FL paradigm can be applied to various COVID-19 related tasks, including\
    \ medical imaging analysis, outbreak prediction, and vaccine efficacy assessment.\
    \ \n\n**Detailed Explanation:**\n\n1. The paper provides a comprehensive overview\
    \ of FL applications, challenges, and future directions in the context of COVID-19.\
    \ It discusses how FL can be used to address various challenges in the healthcare\
    \ domain, such as data privacy and security. \n2. It highlights the role of FL\
    \ in enabling secure and privacy-preserving collaboration among multiple healthcare\
    \ institutions, allowing them to share and utilize data for training models without\
    \ compromising patient confidentiality. \n3. The paper also discusses the technical\
    \ challenges associated with implementing FL in real-world healthcare settings\
    \ and proposes promising research directions to overcome these challenges."
  extract_1: "Federated Learning (FL) has shown great promise in addressing the challenges\
    \ of data privacy and security in the healthcare domain, particularly in the context\
    \ of COVID-19. FL enables multiple healthcare institutions to train machine learning\
    \ models collaboratively without sharing their raw data. This is achieved by training\
    \ local models on each institution's data and then aggregating these local models\
    \ to create a global model. The global model can then be used to make predictions\
    \ on new data, while preserving the privacy of the individual data points. \n\n\
    FL has been used to develop a variety of applications for COVID-19, including:\n\
    \n- Medical imaging analysis: FL has been used to train models for the detection\
    \ and diagnosis of COVID-19 from medical images, such as chest X-rays and CT scans.\
    \ These models can be used to assist healthcare professionals in making more accurate\
    \ and timely diagnoses.\n- Outbreak prediction: FL has been used to develop models\
    \ for predicting the spread of COVID-19. These models can be used to inform public\
    \ health policy and decision-making.\n- Vaccine efficacy assessment: FL has been\
    \ used to develop models for assessing the efficacy of COVID-19 vaccines. These\
    \ models can be used to make decisions about the allocation and distribution of\
    \ vaccines."
  extract_2: "FL has several advantages over traditional machine learning approaches\
    \ for COVID-19 applications. First, FL preserves the privacy of individual data\
    \ points. This is important because COVID-19 data often contains sensitive information,\
    \ such as patient demographics and medical history. Second, FL reduces the need\
    \ for data sharing. This can be a significant advantage in settings where data\
    \ sharing is difficult or impossible due to regulatory or technical constraints.\
    \ Third, FL enables local model training. This can be important in settings where\
    \ there is limited compute resources or where it is necessary to train models\
    \ on data that cannot be moved to a central location. \n\nDespite its advantages,\
    \ FL also has some challenges. One challenge is the heterogeneity of data across\
    \ different institutions. This can make it difficult to train a global model that\
    \ performs well on all data. Another challenge is the communication overhead associated\
    \ with FL. This can be a significant issue in settings where bandwidth is limited.\
    \ \n\nDespite these challenges, FL is a promising technology for addressing the\
    \ challenges of data privacy and security in the healthcare domain, particularly\
    \ in the context of COVID-19. FL has the potential to improve the accuracy and\
    \ timeliness of COVID-19 diagnosis, prediction, and vaccine efficacy assessment.\
    \ As FL continues to develop, it is likely to play an increasingly important role\
    \ in the fight against COVID-19."
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Majeed, A.; Zhang, X.;\nHwang, S.O. Applications and\nChallenges of\
    \ Federated Learning\nParadigm in the Big Data Era with\nSpecial Emphasis on COVID-19.\
    \ Big\nData Cogn. Comput. 2022, 6, 127.\nhttps://doi.org/10.3390/\nbdcc6040127\n\
    Academic Editor: Fabrizio Baiardi\nReceived: 1 September 2022\nAccepted: 20 October\
    \ 2022\nPublished: 26 October 2022\nPublisher’s Note: MDPI stays neutral\nwith\
    \ regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nbig data and \ncognitive computing\nReview\nApplications and Challenges\
    \ of Federated Learning Paradigm\nin the Big Data Era with Special Emphasis on\
    \ COVID-19\nAbdul Majeed 1,*\n, Xiaohan Zhang 2\nand Seong Oun Hwang 1,*\n1\n\
    Department of Computer Engineering, Gachon University, Seongnam 13120, Korea\n\
    2\nSchool of Law, Zhejiang University City College, Hangzhou 310015, China\n*\n\
    Correspondence: ab09@gachon.ac.kr (A.M.); sohwang@gachon.ac.kr (S.O.H.); Tel.:\
    \ +82-31-750-5327 (S.O.H.)\nAbstract: Federated learning (FL) is one of the leading\
    \ paradigms of modern times with higher\nprivacy guarantees than any other digital\
    \ solution. Since its inception in 2016, FL has been rigorously\ninvestigated\
    \ from multiple perspectives. Some of these perspectives are extensions of FL’s\
    \ applications\nin different sectors, communication overheads, statistical heterogeneity\
    \ problems, client dropout\nissues, the legitimacy of FL system results, privacy\
    \ preservation, etc. Recently, FL is being increasingly\nused in the medical domain\
    \ for multiple purposes, and many successful applications exist that are\nserving\
    \ mankind in various ways. In this work, we describe the novel applications and\
    \ challenges\nof the FL paradigm with special emphasis on the COVID-19 pandemic.\
    \ We describe the synergies\nof FL with other emerging technologies to accomplish\
    \ multiple services to ﬁght the COVID-19\npandemic. We analyze the recent open-source\
    \ development of FL which can help in designing\nscalable and reliable FL models.\
    \ Lastly, we suggest valuable recommendations to enhance the\ntechnical persuasiveness\
    \ of the FL paradigm. To the best of the authors’ knowledge, this is the ﬁrst\n\
    work that highlights the efﬁcacy of FL in the era of COVID-19. The analysis enclosed\
    \ in this article can\npave the way for understanding the technical efﬁcacy of\
    \ FL in medical ﬁeld, speciﬁcally COVID-19.\nKeywords: federated learning; COVID-19;\
    \ medical; privacy preservation; statistical heterogeneity\n1. Introduction\n\
    In recent years, artiﬁcial intelligence (AI) techniques have been highly successful\
    \ in\nassisting mankind in various ways, such as improved healthcare, ambient\
    \ assisted living,\nsmart services, awareness/forecasting of future events, etc.\
    \ Three major elements have\nsigniﬁcantly contributed to the success of AI developments\
    \ in real-life scenario(s): (i) the\navailability of big data stemming from diverse\
    \ sources, (ii) advancements in newer learning\nmodels as well as computational\
    \ power, and (iii) the evolution of deep learning (DL) models\nand high-performance\
    \ computing infrastructures [1]. FL has various market use cases and\ncommercial\
    \ applications focusing on data science, healthcare, industry, and education [2].\n\
    Despite their many beneﬁts, AI techniques face multiple challenges due to poor\
    \ quality\nand unstructured data, the non-availability of data for certain tasks,\
    \ and/or the inability to\nhandle and process data originating from the real-time\
    \ domain. Though AI has shown a\nvery huge success rate and many remarkable developments\
    \ exist worldwide, most domains\n(e.g., real-time, personal data-driven applications,\
    \ etc.) are still not in a position to leverage\nAI techniques commercially due\
    \ to the following major concerns:\n•\nUsers are highly concerned about their\
    \ data privacy, and therefore, acquiring and\nusing personal data is very challenging.\n\
    •\nThe conﬁdentiality of personal data (also known as users’ data) can be compromised\n\
    because the data are mostly collected in some central place (e.g., server) for\
    \ central\nlearning (CL).\n•\nMost processing in CL-based environments is performed\
    \ in a black-box manner.\nHence, privacy violations cannot be restricted.\nBig\
    \ Data Cogn. Comput. 2022, 6, 127. https://doi.org/10.3390/bdcc6040127\nhttps://www.mdpi.com/journal/bdcc\n\
    Big Data Cogn. Comput. 2022, 6, 127\n2 of 23\n•\nThe data concerning an individual\
    \ can be of multiple types such as spatial-temporal\nactivities, demographics,\
    \ medical data, and physiological readings, to name a few.\nDepending on the diversity\
    \ and size of data, the chances of privacy breaches can be\nvery much higher in\
    \ CL environments.\nAs cited above, privacy has been a major concern in the adoption\
    \ of AI techniques in\ncommercial environments. Recently, most digital applications\
    \ such as contact tracing apps\ndeveloped for containing the spread of the novel\
    \ coronavirus disease 2019 (COVID-19)\nwere not welcomed by many people across\
    \ the globe due to privacy concerns [3]. Thanks\nto the emergence of the federated\
    \ learning (FL) paradigm, many privacy issues can be\naddressed proactively [4].\
    \ FL is considered a privacy-aware ML model in which privacy is\nensured by not\
    \ centralizing personal data at some central place (e.g., servers). Speciﬁcally,\n\
    FL is a special case of distributed machine or deep learning (ML or DL), which\
    \ enables\nN clients to jointly build an ML/DL model across decentralized data\
    \ sources without\nexplicitly aggregating the data at some central place [5].\
    \ The key difference between FL\nand centralized learning (CL) is given in Equation\
    \ (1):\nCase(CL || FL) =\n(\ndata → algorithms,\nCL\nalgorithms → data,\nFL\n\
    (1)\nBy bringing algorithms close to data, FL is regarded as one of the mainstream\
    \ solutions\nfor privacy preservation. Due to its core abilities such as breaking\
    \ data island and data silo\nproblems, FL has received considerable attention\
    \ from the research community, and FL ap-\nplications are expanding to many ﬁelds,\
    \ including healthcare, ﬁnance, supply chains, smart\ncities, robotics, and education.\
    \ Furthermore, FL can work with many advanced techniques\nsuch as blockchain,\
    \ the Internet of Things (IoT), the industrial IoT (IIoT), and edge/fog\ncomputing\
    \ infrastructures. In the coming years, FL will likely replace central ML/DL-based\n\
    systems and be widely used in many commercial sectors. Recently, FL has emerged\
    \ as a\nviable solution for securing critical infrastructures such as the IoT\
    \ from a privacy preser-\nvation point of view [6]. FL has helped preserve the\
    \ privacy of healthcare data [7], cloud\ncomputing environments [8], vehicular\
    \ environments [9], edge computing [10], big indus-\ntrial data [11], and medical\
    \ systems [12] and has helped in intrusion detection and privacy\npreservation\
    \ in IoT systems [13]. Furthermore, FL has been extensively used to preserve\n\
    privacy in AI applications, collectively called privacy-preserving AI [14]. Unfortunately,\n\
    the FL paradigm has various issues due to its decentralized architecture. For\
    \ example, the\ninvisibility of training data, centralized aggregation, and the\
    \ training process on the client’s\nside can result in some security and privacy\
    \ issues [15]. Furthermore, due to decentralized\nprocesses, convergence and client\
    \ retention/selection is also very challenging. Recently,\nmany studies have been\
    \ designed to advocate the uses of FL in many sectors, and to lower\nthe security\
    \ and privacy attacks. However, the extended taxonomy of FL’s applications\nwith\
    \ special emphasis on COVID-19 remained unexplored. In this paper, we investigate\
    \ the\nrecent advancements in the FL paradigm to highlight the signiﬁcance of\
    \ FL in the modern\nera and the challenges impacting FL’s broad adoption in commercial\
    \ settings.\nAlthough FL has been widely used in many sectors, the future of healthcare\
    \ is deeply\nconnected with the success of FL because the privacy preservation\
    \ of medical data is\nimperative [16]. The recent COVID-19 pandemic has also tested\
    \ the technical strength\nof FL, and it was widely used to handle many parts of\
    \ this pandemic [17]. Some of the\nnoticeable applications of FL in the COVID-19\
    \ era are: COVID-19 detection from x-ray\nimages [18,19], clinical outcome prediction\
    \ [20], mortality prediction [21], pre-processing of\nCOVID-19 data [22], COVID-19\
    \ vulnerability map construction [23], privacy-preserving\ndata collection [24,25],\
    \ Ct-image-based COVID-19 detection [26,27], infected regions seg-\nmentation\
    \ [28], and face mask detection in dense crowds [29]. Considering these innovative\n\
    applications, the concrete and complete overview of FL in the context of COVID-19\
    \ is\nmeaningful and important, which is the main motivation behind this research.\
    \ We afﬁrm,\nwith the contributions of previous generic surveys [30–34], that\
    \ our focus is on COVID-19-\nBig Data Cogn. Comput. 2022, 6, 127\n3 of 23\nrelated\
    \ FL developments, which remained unexplored in the current literature. In addition,\n\
    none of the previous surveys have highlighted the synergies of FL with other emerging\n\
    technologies to fulﬁll its promises in the context of COVID-19. The major contributions\
    \ of\nthis paper are given as follows:\n•\nA review of the applications of FL\
    \ to COVID-19: This article discusses the technical\napplications of FL along\
    \ with model and data details focusing on COVID-19, which\ncan help understand\
    \ recent state-of-the-art (SOTA) developments of the FL paradigm.\n•\nSynergies\
    \ of FL with other technologies: This work highlights the synergies of FL with\n\
    other technologies that are imperative for privacy preservation, broadening application\n\
    horizons, and/or enhancing service scenarios. This extended knowledge assists\
    \ in\nunderstanding the technology stack of the FL paradigm.\n•\nReview of open-source\
    \ FL frameworks: This work analyzes the recent open-source devel-\nopment of FL\
    \ paradigms which can help in designing scalable and reliable FL models\nin the\
    \ medical ﬁeld by addressing their limitations.\n•\nPotential challenges and future\
    \ research directions: This work suggests valuable technical\nrecommendations\
    \ to address the key challenges of this SOTA decentralized paradigm.\n•\nTo the\
    \ best of the authors’ knowledge, this is the ﬁrst work centering FL with regard\n\
    to COVID-19, and we believe this could pave the way to understanding FL’s role\
    \ in\nthe COVID-19 era.\nThe rest of this paper is structured as follows: Section\
    \ 2 discusses the background of\nthe FL paradigm including working methodology\
    \ (e.g., clients and server responsibilities),\nmain types, and emerging research\
    \ areas concerning the FL paradigm. Section 3 presents\ntechnical applications\
    \ of the Fl in the context of COVID-19. Section 4 presents the latest\nsynergies\
    \ of FL with the other emerging technologies to enhance the privacy level as\n\
    well as the application horizon of FL technology. Section 5 discusses the open-source\n\
    implementations of FL with a special focus on medical-related developments. Section\
    \ 6\nhighlights the challenges of FL in modern times and suggests valuable recommendations\n\
    to address those challenges. Section 7 compares this work with the existing works.\
    \ We\nconclude this paper in Section 8.\n2. Background of Federated Learning\n\
    In this section, we describe the background of the FL for the clarity of the readers.\n\
    Speciﬁcally, we demonstrate the working mechanism of FL, its types, and hot research\n\
    areas centering on the FL paradigm.\n2.1. Federated Learning: A State-of-the-Art\
    \ (SOTA) Development for Privacy-Preservation\nA typical FL paradigm includes\
    \ one central server denoted with S, N clients/participants,\nand a training protocol/algorithm\
    \ that works in multiple rounds. The FL paradigm does not\ncentralize data, and\
    \ therefore, it is a privacy-preserved solution. The rigorous application of pri-\n\
    vacy regulations is not needed because the FL paradigm is legally compliant. The\
    \ FL paradigm\nis the solution for data islands/silos and the data winter problem\
    \ (https://redasci.org/, ac-\ncessed on 10 August 2022). Figure 1a presents a\
    \ high-level overview of the Fl paradigm. There\nare M rounds in the FL paradigm.\
    \ The conceptual overview of one round is given in Figure 1b.\nAs shown in Figure\
    \ 1a, in each round’s global model, ∆W, performance is checked, updated,\nand\
    \ shared among participating entities (e.g., clients and S) involved in the paradigm.\
    \ The\nFL process is repeated several times until some defined criterion/condition\
    \ is met. Figure 1b\nillustrates a detailed procedure of one round in the FL paradigm.\n\
    In Figure 1b (a), clients obtain a global model update (e.g., ∆W) from the central\
    \ server.\nAfterward, each client computes a local model weight independently\
    \ based on the local\ndata in Figure 1b (b). Subsequently, in Figure 1b (c), all\
    \ local updates of each client are sent\nBig Data Cogn. Comput. 2022, 6, 127\n\
    4 of 23\nback to the central server for joint analysis (i.e., aggregation). The\
    \ aggregator function, F,\nemployed at the server side for federated averaging\
    \ at epoch/time t is given in Equation (2):\ng(t) = 1\nN\nN\n∑\ni=1\n∆Wt\ni\n\
    (2)\nwhere N denotes the total number of clients, F(t) is a global weight at time/epoch\
    \ t, and\n∆Wt\ni represents the gradient update for the client i at epoch t.\n\
    (a)\n(b)\nFigure 1. Technical overview of the FL paradigm. (a) Overview of FL\
    \ paradigm; (b) Practical\nillustration of one round of FL (reformulated from\
    \ [35]).\nIn the FL paradigm, clients and servers carry out a variety of functions\
    \ to accomplish\ncollaborative learning tasks. The generic overview of tasks performed\
    \ by each participating\nBig Data Cogn. Comput. 2022, 6, 127\n5 of 23\nentity\
    \ is given in Table 1. In some cases, the number of tasks can vary depending upon\
    \ the\ntarget domain/scenario.\nTable 1. Functions/activities performed by clients\
    \ and server in the FL paradigm.\nEntity\nKey Functions\nClients\nObtaining parameters\
    \ from the central server.\nTraining the AI model with parameters obtained from\
    \ a central server and local data.\nUploading local gradients to the server for\
    \ aggregation.\nServer\nSharing parameters with all participants/clients.\nAcquiring\
    \ local gradients from all participants.\nComputing aggregated global model (F)\
    \ utilizing local gradients.\nUpdating model parameters with new in each t.\n\
    Filtering malicious gradients/updates using anomaly detection or any other method.\n\
    The data on which AI models are trained on the client side can be independent\
    \ and\nidentically distributed (i.i.d.) or non-i.i.d., depending upon the scenario.\
    \ The latter case is\nmore challenging as it can slow the convergence model and\
    \ result in poor accuracy.\n2.2. Classiﬁcation/Types of the Federated Learning\
    \ Paradigm\nAs shown in Figure 2, FL approaches can be classiﬁed into three main\
    \ categories,\nnamely, horizontal FL, vertical FL, and federated transfer learning\
    \ (FTL) [36]. Horizontal\nFL is the ML/DL in cases where multiple datasets from\
    \ different clients are not identical in\nthe sample space but identical in the\
    \ feature space. For instance, the datasets originating\nfrom different hospitals\
    \ can denote the same feature space, i.e., the patients’ information,\nbut not\
    \ identical in the sample space, i.e., the data from diverse/different patients.\
    \ In\nvertical FL, the clients can have the data with identical sample space but\
    \ with non-identical\nfeature space. An example of vertical FL can be the bank\
    \ statement and information on the\nonline shopping history of the same group\
    \ of users. FTL applies to multiple datasets that\nare non-identical with regard\
    \ to both the sample space and the feature space.\nFigure 2. Overview of the classiﬁcation\
    \ in the FL paradigm.\n2.3. Focus of Recent Studies on FL Paradigm\nResearch on\
    \ the FL paradigm is underway from multiple perspectives. Figure 3\ndescribes\
    \ the hot research areas that are under investigation to enhance the efﬁcacy of\
    \ the\nFL paradigm.\nIn addition to the key research areas mentioned in Figure\
    \ 3, FL has been extensively\ninvestigated from multiple perspectives (e.g., hyper-parameters\
    \ optimization, personalized\nFL, attacks on FL systems) [37]. The compact overview\
    \ of key areas can enable researchers\nto choose a niche area for further research.\
    \ The rest of this paper highlights FL’s signiﬁ-\ncance/use in the COVID-19 context.\n\
    Big Data Cogn. Comput. 2022, 6, 127\n6 of 23\nFigure 3. Overview of the recent\
    \ research area(s) of federated learning.\n3. Technical Applications of Federated\
    \ Learning in the Context of COVID-19\nFL has demonstrated its effectiveness in\
    \ many sectors, including supply chains, robotics,\nfinance, smart cities, smart\
    \ healthcare, natural language processing and modeling, the insurance\nsector,\
    \ social networks, and the IoT, to name a few. In this paper, our focus is on\
    \ healthcare and\nespecially COVID-19, and therefore, we summarize the achievements\
    \ of FL in the healthcare\nsector only. Before presenting the detailed applications\
    \ of FL in the COVID-19 era, we present\nthe overall applications of FL in the\
    \ healthcare domain in Figure 4.\nFigure 4. Overview of the FL applications in\
    \ healthcare (Adopted from [38]).\nAs shown in Figure 4, FL has been contributing\
    \ signiﬁcantly to the healthcare sector\nwith diverse applications. The input\
    \ to these applications are data of patients in the form\nof electronic health\
    \ records (EHR), data from wearables, sensor readings, demographics,\nvital signs,\
    \ images, X-rays, medical histories, and visuals, audio, and videos of various\n\
    body organs. FL trains high-quality models for neurological (and other) disease\
    \ diagnoses.\nRecently, FL and other AI-based developments have been used to assist\
    \ doctors in perform-\ning various activities in hospitals. In the coming years,\
    \ FL will be one of the mainstream\nBig Data Cogn. Comput. 2022, 6, 127\n7 of\
    \ 23\ntechnologies in performing various operations/services. Some studies explored\
    \ the use\nof FL in tumor identiﬁcation using ultrasound images and compared FL\
    \ architecture and\ntraditional AI architectures [39]. In this analysis, FL was\
    \ proven more effective than the\ntraditional ML/DL-based training architectures.\
    \ Some studies have explored the usage of\nFL in hearing aids, survival prediction\
    \ in patients with lung cancer, and conﬁdentiality-\naware data processing [40–42].\
    \ Ngo et al. [43] developed a SOTA approach by combining\nDL and FL for diagnosing\
    \ cerebellar ataxia (CA) using image data. The proposed approach\nyields higher\
    \ diagnosis accuracy without feature engineering and ensures data privacy in\n\
    real-life deployable scenarios. Islam et al. [44] proposed an FL-based secure\
    \ data-collection\nmethod from IoT devices using drones and blockchain. The proposed\
    \ approach yields\nbetter results in proof of concept experiments, highlighting\
    \ multiple beneﬁts such as data\ncollection, storage, privacy preservation, security,\
    \ and execution time. Similarly, FL has also\ncontributed to lowering the effects\
    \ of this pandemic on the general public when vaccines\nwere unavailable. At present,\
    \ there are various commercial deployments of FL to control\nCOVID-19 using a\
    \ variety of data sources. FL can work with many digital technologies,\nand therefore,\
    \ the application/use of FL is more dominant than traditional AI techniques.\n\
    Through a detailed analysis of the SOTA published in the past three years, we\
    \ summarize\npractical examples of FL in Table 2.\nTable 2. Recently developed/proposed\
    \ practical applications of FL in the context of COVID-19.\nPractical FL Application\n\
    AI Methods Used\nData Used\nRepresentative Ref.\nDetection of COVID-19 infection\n\
    Capsule Network\nCT images\nKumar et al. [45]\nOutcome prediction\nPre-trained\
    \ ResNet-34\nX-ray (CXR), vital signs,\ndemographic, and lab values\nFlores et\
    \ al. [46]\nLung abnormalities detection\nCNN-based model\nMedical images\nDou\
    \ et al. [47]\nCOVID-19 region segmentation\nSemi-supervised learning\nChest Computed\
    \ Tomography\nYang et al. [48]\nDetection of COVID-19\nGenerative adversarial\n\
    networks\nCOVID-19 images\nNguyen et al. [49]\nSegmentation of lungs contaminated\n\
    area\n3D UNet\nCT Image of Lung\nAswathy et al. [50]\nEpidemic model using mobility\n\
    Multi-task learning\nReal-time mobility data sets\nKumaresan et al. [51]\nAutomated\
    \ infection detection\nChest X-ray images\nConvolutional neural\nnetworks\nOhata\
    \ et al. [52]\nClassiﬁcation of COVID-19 &\npneumonia\nDenseNet-201\nX-ray images\n\
    Alhudhaif et al. [53]\nIdentiﬁcation of contaminated places\nResNet50\nThermal\
    \ images\nDas et al. [54]\nPrediction of COVID-19 at early stage\nMultiple ML\
    \ algorithms\nPatient community features\nSingh et al. [55]\nDetecting COVID-19’s\
    \ presence\nResNet-18\nX-ray and CT scan\nKochgaven et al. [56]\nDiscovery of\
    \ COVID-19\nAlex net\nCT images\nChen et al. [57]\nClassiﬁcation of +ve and -ve\
    \ cases\nDeep CNN\nCXR images\nLaouarem et al. [58]\nPrediction of COVID-19 disease\n\
    CNN model\nChest X-rays\nMalhotra et al. [59]\nMedical resources’ demand\nprediction\n\
    CETL method\nHeterogeneous data\nSong et al. [60]\nSeverity assessment of COVID-19\n\
    Variants of neural networks\nchest X-ray\nLe et al. [61]\nPrediction of COVID-19\
    \ disease\nCNN models\nElectronic Medical Records\nSenthilkumar et al. [62]\n\
    Risk assessment system\nMK-DNN model\nLocation maps\nWang et al. [63]\nCommunity-level\
    \ vulnerability\nestimations map\nSIR models\nLocation data\nChen et al. [64]\n\
    Big Data Cogn. Comput. 2022, 6, 127\n8 of 23\nTable 2. Cont.\nPractical FL Application\n\
    AI Methods Used\nData Used\nRepresentative Ref.\nPrivacy of patient data\n2D CNN\
    \ model\nX-ray images and symptoms\nHo et al. [65]\nAccurate prediction of COVID-19\n\
    cases\nHybrid capsule network\nLung CT images\nDurga et al. [66]\nCOVID-related\
    \ symptoms detection\nCNN model\nSensors data\nRahman et al. [67]\nCOVID-19 detection\n\
    KNN classiﬁer\nDemographics data\nMukherjee et al. [68]\nMonitoring of COVID-19\n\
    KNN + CNN + LSTM\nSymptom data\nAljumah et al. [69]\nCOVID-19 suspects prediction\n\
    ML 1 techniques\nsensors and IoT data\nMir et al. [70]\nEpidemic trend analysis\n\
    T-SIRGAN model\nSurveillance data\nWang et al. [71]\nControlling outbreak\nJ48\
    \ decision tree\nwearable sensors\nBhatia et al. [72]\nBreathing pattern analysis\n\
    Clustering methods\nSensors data\nHidayat et al. [73]\nInfected patients monitoring\n\
    ANN model\nSymptomatic results\nRathee et al. [74]\nTracking health status of\
    \ infected\npatients\nFPGA prototype\nSensory data\nAlOmani et al. [75]\nMedical\
    \ information sharing\nCNN model\nEHR data\nSalim et al. [76]\nAnalysis of vaccine-related\
    \ tweets in\nsocial networks\nRNN model\nTweets data\nSingh et al. [77]\nDiagnosis\
    \ of COVID-19\nVision transformer\nCXR images\nPark et al. [78]\nPrivacy protection\
    \ of healthcare data\nNB + RF\nGenomic data\nIslam et al. [79]\nTackling data\
    \ diversity\nVision transformers\nMasked images\nYan et al. [80]\n1 SVM, decision\
    \ tree, naïve Bayes, logistic regression, and neural network.\nAs shown in Table\
    \ 2, FL has many practical applications in the context of COVID-19.\nThese applications\
    \ have helped many entities in lowering the severe effects of COVID-19.\nFurther\
    \ information about the applications of FL in medical ﬁelds can be learned from\
    \ previ-\nous survey [81–84]. Based on the extensive analysis, we found that most\
    \ FL applications in\nthe COVID-19 context are detection, prediction, diagnosis,\
    \ and forecasting. In addition, the\nmost commonly used data types are X-rays,\
    \ images, and data from wearables. From the AI\nmodel’s point of view, CNN and\
    \ common ML models were frequently used in experiments.\nThis knowledge can assist\
    \ researchers in customizing existing developments as well as\nproposing new models\
    \ for enhancing accuracy, precision, recall, F1 score, etc. Apart from\nthe data\
    \ sources mentioned in Table 2, some FL applications have used signals data as\n\
    well in improving medical services focusing on COVID-19 [85–87]. The implementation\n\
    of FL with these heterogenous data sources helped in constraining the spread of\
    \ the virus\nin a privacy-preserving way. In addition to FL, many other digital\
    \ technologies have also\ncontributed to lowering the effects of the pandemic\
    \ on the general public. In Figure 5, we\nsummarize the key technologies that\
    \ have helped mankind mostly in the pre-vaccine era.\nAs shown in Figure 5, many\
    \ technical developments have been made across the globe\nto combat the virus.\
    \ In addition, the developments of contactless services have also boosted\nAI-related\
    \ developments across the globe. In the post-COVID-19 era, more disruptive\ntechnologies\
    \ will further reshape the industry.\nBig Data Cogn. Comput. 2022, 6, 127\n9 of\
    \ 23\nFigure 5. Overview of key technologies other than FL that have contributed\
    \ to handling the pandemic\n(Adopted and enhanced from [88]).\n4. Recent Synergies\
    \ of Federated Learning with Other Emerging Technologies in the\nContext of COVID-19\n\
    Due to the distributed nature, the invisibility of training data, and untrustworthy\n\
    clients’ behavior, FL could not unleash much of its potential [89]. For example,\
    \ FL failed\nto fully protect training data from adversaries because sometimes\
    \ gradients/parameter\nsharing can weaken the privacy of participants. Similarly,\
    \ due to the open nature of training,\nany party (including malicious entities)\
    \ can join the system, and corrupt the training process\nwith either wrong data\
    \ or wrong models. Furthermore, FL cannot guarantee that the\nnumber of participants\
    \ in the initial rounds will remain until the end of the training process.\nTo\
    \ overcome these challenges, FL has been extensively integrated with other emerging\n\
    technologies. For example, to protect the privacy of training data, FL has been\
    \ integrated\nwith the differential privacy [90]. To further protect personal\
    \ data in industrial settings,\nFL has established synergy with the blockchain\
    \ [91,92]. In Table 3, we highlight the main\nsynergies of FL with other emerging\
    \ technologies in the context of COVID-19.\nBig Data Cogn. Comput. 2022, 6, 127\n\
    10 of 23\nTable 3. Synergy of FL with other emerging technologies.\nSynergy\n\
    Objective Achieved\nRelevant Literature\nFL + Homomorphic\nencryption\nPrivacy\
    \ preservation of\ndata/parameters\nFang et al. [93]\nFL + Edge computing\nRobust\
    \ data analytics\nHakak et al. [94]\nFL + Internet of Things (IoT)\nQuick detection\
    \ of COVID-19\nLaxmi et al. [95]\nFL + Industrial IoT\nIIoT data caching and ofﬂoading\
    \ for\nmedical services\nNguyen et al. [96],\nHazra et al. [97]\nFL + Cloud computing\n\
    Analyzing infection trends and\nresponse plans\nPang et al. [98]\nFL + 5G architecture\n\
    Sharing of general diagnosis\nmodels between hospitals\nWang et al. [99]\nFL +\
    \ Reinforcement learning\nPrediction of side-effects of\nCOVID-19\nJaladanki et\
    \ al. [100]\nFL + Local differential privacy\nPrivacy preservation of sensitive\n\
    data\nYang et al. [101]\nFL + Global differential\nprivacy\nPrivacy preservation\
    \ of imaging\ndata\nUlhaq et al. [102]\nFL + Functional encryption\nPrivacy preservation\
    \ of gradients\nand communication\nRahman et al. [103]\nFL + AI+ IoT\nPrevention\
    \ and control of\nCOVID-19 pandemic\nChen et al. [104]\nFL + Robotics\nSeamless\
    \ data collection and\nprocessing\nWu et al. [105]\nFL + IoMT\nFederated healthcare\
    \ system with\nprivacy controls\nAouedi et al. [106]\nFL + FLOP\nPrivacy protection\
    \ via a partial\nmodel sharing strategy\nYang et al. [107]\nFL + GAN\nIdentiﬁcation\
    \ of missing\ninformation and generation\nPeng et al. [108]\nFL + DNN\nPrioritization\
    \ of data in the training\nprocess of DL models\nLi et al. [109]\nFL + B5G + UAVs\n\
    Data collection in a\nprivacy-preserving manner\nNasser et al. [110]\nFL + Computational\n\
    intelligence (CI)\nEnhancement of data quality and\nequality in CI\nPeyvandi et\
    \ al. [111]\nFL + Case-based reasoning\nSolving concept drift issues in\nhealthcare\n\
    Jaiswal et al. [112]\nFL + CFmMIMO\nImprove convergence speed\nVu et al. [113]\n\
    FL + SMC (secure multi-party\ncomputation)\nPrevent leakage of sensitive\ninformation\
    \ in local models\nLi et al. [114]\nApart from the analysis presented in Table\
    \ 3, some recent surveys have highlighted the\nsynergies in one or more aspects\
    \ of the FL paradigm [115,116]. Furthermore, the synergies\nof FL are increasing\
    \ data day by day to improve various technical aspects of this tech-\nnology [117,118].\
    \ These synergies have also extended the applicability of this technology\nto\
    \ many commercial and industrial sectors. Furthermore, some of these integrations\
    \ are\nmade to lower the communication and computation overheads of this technology\
    \ [119]. In\naddition, some integrations are improving the privacy aspects of\
    \ this technology [120]. In\nBig Data Cogn. Comput. 2022, 6, 127\n11 of 23\nthe\
    \ coming years, the synergies of this paradigm with emerging technologies are\
    \ likely to\nexpand to advance its capabilities.\n5. Open Source Implementation\
    \ Frameworks of Federated Learning\nIn this section, we discuss the open-source\
    \ implementations of the FL paradigm that\nhave been experimentally tested on\
    \ some real-world datasets. Although many open-source\nframeworks have been developed\
    \ in the recent past, we present only the main frameworks\nthat are accessible\
    \ for rapid validation and experimentation in Figure 6. Most frameworks\nlisted\
    \ in Figure 6 can work with any dataset, but only a few provide robust support\
    \ against\nattacks (i.e., Privacy FL). The tutorials and documentation about most\
    \ frameworks are\nincomplete/partial except for OpenFL and PySft. Only a few frameworks\
    \ provide support\nfor other libraries and data partitioning. Most frameworks\
    \ run on traditional CPUs, and\nonly a few can run on large-scale hardware such\
    \ as graphical processing units (GPUs).\nIn addition to these open source developments,\
    \ some propriety frameworks such as IBM\nFL [121], Substra [122], and NVIDIA CLARA\
    \ [123], etc., have also been developed, which\nare not yet publicly available\
    \ for rapid testing and validation. Moreover, there exists\nan open-source implementation\
    \ of FL for some other emerging technologies (e.g., the\nIoT) [124]. Interestingly,\
    \ only two frameworks (e.g., OpenFL and Fed-BioMed) provide\nsupport for medical\
    \ applications. By using the FL frameworks listed in Figure 6, possible\nrisks\
    \ of exposing patients’ sensitive health-related information can be resolved.\
    \ In addition,\nthe FL strategy enhances the training performance on medical data\
    \ by exploiting big and\nlarge-scale datasets and ofﬂoading most processing to\
    \ the local devices in a network, which\nwould not be possible with the centralized\
    \ AI technique.\nFigure 6. Open-source implementations of the FL paradigm (i.e.,\
    \ open source FL frameworks).\nTo provide technical information concerning two\
    \ medical-related frameworks, we\ncompare both frameworks on technical grounds\
    \ in Table 4. The analysis presented in\nTable 4 can help to understand and further\
    \ improve the implantation of these frameworks.\nBig Data Cogn. Comput. 2022,\
    \ 6, 127\n12 of 23\nLastly, these implementations have been used as the baseline\
    \ in most studies and have\nbeen rigorously enhanced.\nTable 4. Detailed comparison\
    \ of medical implementation of Fl frameworks.\nFeatures\nOpenFL\nFed-BioMed\n\
    Implementation language\nPython\nPython\nWorking mechanism\nDistributed\nDistributed\n\
    Development tools/libraries\nPyTorch and TensorFlow\nScikit-Learn and PyTorch\n\
    Development status\nFully Developed\nUnder development\nAbility to work with diverse\n\
    datasets\nYes\nYes\nAdditional support for\nprivacy-preservation\nNo\nNo\nExecuting\
    \ malicious activities\nEasy\nEasy\nCustomization (working with\nmany libraries)\n\
    Full support\nPartial support\nWork packages information\nAvailable\nPartially\
    \ available\nCommunication and computation\noverheads\nVery high\nHigh\nFavorable\
    \ hardware architecture\nCPU, GPU\nCPU, GPU\nData sources\nHeterogeneous\nImage\
    \ and text\nScalability\nHigh\nYet to be tested\nData partitioning services\n\
    Full support\nPartial support\nVulnerability to model and data\npoisoning attacks\n\
    Medium\nHigh\nPotentials of commercialization\nHigh\nAverage\nPractical applications\n\
    Exist\nYet to be tested for\nDocumentation and use cases\nAvailable\nPartial availability\n\
    6. Challenges and Recommendations\nWhen it comes to the actual deployment of FL\
    \ in real-life healthcare settings, there\nexist multiple challenges. Although\
    \ some challenges have been described in the previous\nresearch, a clear picture\
    \ from all perspectives is still missing. In this work, we highlight\nmost challenges\
    \ of the FL paradigm and suggest valuable recommendations to address\nthose challenges.\
    \ As shown in Figure 7, we have categorized these FL challenges into nine\nmain\
    \ categories, which remained unexplored in the current literature.\nApart from\
    \ the challenges cited in Figure 7, explainability, transparency, and fairness\n\
    are also the main challenges of FL in the context of healthcare [125,126]. We\
    \ will present\neach of these challenges in detail in the following paragraphs.\n\
    Client-related challenges: In the FL paradigm, clients are regarded as independent,\
    \ which\nmeans they can perform most activities autonomously. Hence, they can\
    \ leave the system\nat any time, which can lead to longer convergence and disturbs\
    \ the training process [127].\nThe prevention of the client’s dropout is a longstanding\
    \ challenge in FL. In addition, the\nselection of clients who can contribute good\
    \ models/data is also a non-trivial task. In some\ncases, clients make bots with\
    \ each other to carry out any sort of malicious activities, which\nmakes FL results\
    \ unreliable or corrupts the training process. In addition, some clients hold\n\
    up the data/model and delay the convergence speed. All these client-related challenges\n\
    can degrade the performance of the FL paradigm.\nBig Data Cogn. Comput. 2022,\
    \ 6, 127\n13 of 23\nFigure 7. Technical challenges of the FL paradigm from the\
    \ perspective of COVID-19.\nServers-related challenges: In the FL paradigm, the\
    \ server is responsible for the orchestration\nof the local models, aggregating\
    \ models, and sharing the global model. However, in some\ncases, multiple attacks\
    \ can be executed on the server by adversaries, which makes the FL\nsystem untrustworthy.\
    \ Since the server is only concerned with the model weights without\ndeep inspection,\
    \ it cannot filter malicious clients, which degrades the performance of the FL\n\
    paradigm. In some cases, gradients/parameters are exposed to adversaries during\
    \ aggregation.\nAll these server-related challenges can degrade the performance\
    \ of the FL paradigm.\nTraining-data-related challenges: In the FL paradigm, training\
    \ data are the most important\nelement because the quality of FL models depends\
    \ on the training data. There exist multiple\nchallenges with regard to the quality\
    \ of data. In addition, the privacy of the training data is one\nof the hot challenges\
    \ in the FL paradigm [128]. Recently, the non-i.i.d. nature of the training\n\
    data poses various technical challenges in the FL paradigm, and their solution\
    \ has become\nmore urgent than ever. In addition, guaranteeing the quality of\
    \ data and preventing it from\npoisoning the paradigm is also one of the main\
    \ challenges [129]. To truly benefit from the\npotential of FL, training-data-related\
    \ challenges need robust solutions.\nPoisoning-attacks-related challenges: In\
    \ the FL paradigm, two main challenges that make\nthe FL system unreliable in\
    \ terms of results are: data poisoning and model poisoning. In the\nformer attack,\
    \ wrong data are used in training the local mode. In the latter attack, wrong\n\
    local models are being sent to the central server [130,131]. Both these attacks\
    \ have been\ninvestigated to enhance the trustworthiness of FL results. Furthermore,\
    \ many strategies,\nBig Data Cogn. Comput. 2022, 6, 127\n14 of 23\neven such as\
    \ compromising privacy, have been suggested to eliminate these attacks [132].\n\
    To truly beneﬁt from the potential of FL, both these challenges need a robust\
    \ solution from\nthe research community.\nCOVID-19-related challenges: In the\
    \ COVID-19 era, due to the rapid rise in the amount\nof data, processing large\
    \ and high-dimensional datasets has become challenging [133].\nFurthermore, due\
    \ to privacy concerns, good-quality data cannot be obtained easily. In these\n\
    circumstances, FL can contribute toward resolving the data winter problem. However,\
    \ the\nlack of a well-deﬁned method for deploying FL methods in real life hinders\
    \ the progress\nof AI-related methods. In addition, privacy issues such as data\
    \ reconstruction make the\ndeployment of FL very hard. Furthermore, identifying\
    \ clients that can contribute good data\nin the FL paradigm remains challenging.\
    \ Lastly, processing heterogeneous sources of data\nand deriving knowledge if\
    \ it is very challenging. Furthermore, studying all dynamics of\nCOVID-19 is still\
    \ challenging because good-quality data for some aspects of this pandemic\nare\
    \ not available for research purposes.\nApart from the challenges discussed above,\
    \ handling inference and training time\nvulnerabilities in the FL paradigm is\
    \ also very challenging. Luo et al. [134] discussed the\npossibility of inference\
    \ attacks on FL systems through which potential privacy leakages\ncan occur in\
    \ real-life scenarios. Through this approach, the authors highlighted the need\
    \ to\npreserve the privacy of prediction outputs in the vertical FL. Qiu et al.\
    \ [135] highlighted the\npossibility of relation leakage and node leakage, leading\
    \ to severe privacy breaches from\ngraph data in vertical FL. Ha et al. [136]\
    \ highlighted the possibility of inference attacks\non the client side in FL systems\
    \ using the generative adversarial networks (GANs) model.\nThe authors have shown\
    \ that some DL models can learn “unintended” features that can\nexpose personal\
    \ information to adversarial participants/clients. Rassouli et al. [137] have\n\
    shown that in FL systems, an adversary can perfectly reconstruct a substantial\
    \ number of\nfeatures when the number of predictions is large enough. These kinds\
    \ of data reconstruc-\ntion attacks enable full training data disclosure in most\
    \ cases. Zhang et al. [138] proposed a\nGAN-enhanced method for launching a membership\
    \ inference attack in FL systems. The\nauthors achieved a 98% attack accuracy\
    \ and identiﬁed two main reasons (i.e., diversity in\ntraining data and overﬁtted\
    \ FL models) for the success of such attacks. To address these\ninference attacks,\
    \ many defense strategies have also been developed [139–141]. Further\ninformation\
    \ about inference attacks and their corresponding defense can be learned from\
    \ a\nrecent study [142]. Recently, security and privacy issues have been rigorously\
    \ investigated\nby many researchers [143]. In the future, more defense mechanisms\
    \ will be needed to\nprovide a solid defense against many emerging inference attacks\
    \ (e.g., feature detection,\nextraction, feature disclosure, label disclosure,\
    \ data reconstruction, membership inference,\nunintended features, feature information,\
    \ etc.). Recently, addressing statistical heterogene-\nity in training data across\
    \ clients/devices has also become one of the hot challenges in\nthe FL paradigm\
    \ [144]. Concept drift makes the FL learning process more complicated\nbecause\
    \ of the higher inconsistency between existing and upcoming data. Traditional\n\
    concept drifts handling techniques (e.g., chunk-based and ensemble-learning-based)\
    \ are\nunsuitable in the FL frameworks due to the heterogeneity of local devices\
    \ [145]. Similarly,\nhandling some data types such as genome data in the FL environments\
    \ poses various\nchallenges [146]. Considering these challenges, robust solutions\
    \ are needed to address all\nof the above-mentioned challenges. In Table 5, we\
    \ propose technical recommendations to\naddress these challenges by analyzing\
    \ the existing open-source developments, as well as\nthe detailed synthesis of\
    \ published literature. The detailed guidelines presented in Table 5\ncan contribute\
    \ to enhancing the technical effectiveness of this recent paradigm.\nBig Data\
    \ Cogn. Comput. 2022, 6, 127\n15 of 23\nTable 5. Valuable recommendations to address\
    \ technical challenges in the FL paradigm.\nFL Aspect(s)\nRecommendation(s)\n\
    Clients\nDevelopment of multi-criteria (i.e., activeness, data quality,\ncomputing\
    \ resources, etc.) incentive mechanisms to retain\npotential clients.\nServer\n\
    Implementation of anomaly detection algorithms for ﬁltering\nmalicious clients/local-models/updates.\n\
    Training data\n(i) Analyzing the distributions of data concerning balance and\n\
    adding synthetic samples for minority classes.\n(ii) Implementation of privacy\
    \ solutions such as differential\nprivacy or encryption for securing it. (iii)\
    \ Implementation of\nsecure data sharing strategies to remove poisoned samples.\n\
    Network Architecture\n(i) Implementation of subspace clustering concepts to lower\n\
    communication overheads. (ii) Implementation of\nlight-weight encryption techniques\
    \ for securing\nparameters/gradients in transit. (iii) Implementation of\nveriﬁable\
    \ computing protocol at the server side for\nveriﬁcation of local models.\nTraining\
    \ time vulnerabilities\n(i) Implementation of diversity-aware training methods\
    \ to\nprevent biased decisions. (ii) Implementation of lightweight\nalgorithms\
    \ to handle evasion attacks. (iii) Implementation of\nsecure algorithms for the\
    \ security of local models.\nPerformance issues\n(i) Implementation of parallel\
    \ computing algorithms for\nenhancing scalability. (ii) Implementation of algorithms\
    \ that\ndo not share local models frequently (i.e., partial information\nsharing\
    \ methods). (iii) Implementation of edge/fog\ncomputing models to donate some\
    \ computing to nearby\ndevices. (iv) Implementation of computing ofﬂoading\nmethods\
    \ to prevent cold start problems. (v) Implementation\nof low-cost convergence\
    \ criteria.\nModels and parameters\n(i) Implementation of secure methods for communication\n\
    between clients and server. (ii) Implementation of clustering\nmethods to share\
    \ information in the clustered form.\n(iii) Implementation of methods for ﬁltering\
    \ wrong models.\nInference issues\n(i) Implementation of secure methods for preventing\
    \ data\nreconstruction attacks. (ii) Implementation of methods for\nhiding details\
    \ of training data. (iii) Restricting access to\ndata/results by analyzing the\
    \ sensitivity-based analysis of\nthe queries.\nDeployment issues\n(i) Forming\
    \ multidisciplinary teams to analyze the risks of\ndeployment. (ii) Implementation\
    \ of explainability, fairness,\nand trustworthy functionalities for results understanding.\n\
    (iii) Proposing GPU-based implementations to address\nscalability, communication,\
    \ and computing issues.\n7. Comparisons and Discussion\nIn this section, we compare\
    \ our work with the existing state-of-the-art (SOTA) studies\nin multiple aspects.\
    \ Although many studies have highlighted the potential of the FL\nparadigm in\
    \ the medical ﬁeld, only a few studies have focused on the applications of the\n\
    FL paradigm in the COVID-19 era. To compare our work, we selected seven SOTA and\n\
    recently published studies centering on the FL paradigm in the medical ﬁeld. We\
    \ have\nchosen various parameters for fair comparisons to prove the signiﬁcance\
    \ of our work in\nthe body of knowledge. Table 6 presents the in-depth analysis\
    \ and comparison of our work\nwith the existing SOTA studies.\nBig Data Cogn.\
    \ Comput. 2022, 6, 127\n16 of 23\nTable 6. Multi-criteria-based detailed comparison\
    \ of the proposed work with existing SOTA studies.\nCriteria\n[17]\n[30]\n[38]\n\
    [81]\n[84]\n[106]\n[126]\nOurs\nStudy Focus\nCOVID-19\nDetection\nFL System\n\
    Design\nGeneric\nHealthcare Apps\nGeneral\nHealthcare Apps\nGeneral\nHealthcare\n\
    Data Handling\nSmart Healthcare\nFL Apps in\nCOVID-19 Era\nNumber of app with\n\
    regard to the virus\n1\n0\n4\n9\n7\n12\n4\n36\nFL challenges\n×\n×\n◦\n◦\n◦\n\
    ◦\n◦\n✓\nData types\n×\n×\n◦\n◦\n◦\n◦\n◦\n✓\nOS frameworks\n×\n×\n×\n×\n×\n×\n\
    ×\n✓\nMedical libraries\n×\n×\n×\n×\n×\n×\n×\n✓\nTR\n×\n×\n×\n×\n×\n×\n×\n✓\n\
    FL synergies\n×\n×\n×\n×\n×\n×\n×\n✓\nDeployment issues\n×\n×\n×\n×\n×\n×\n◦\n\
    ✓\nOther technologies’\nroles\n×\n×\n×\n×\n×\n×\n◦\n✓\nFL research area(s)\n×\n\
    ×\n×\n×\n×\n×\n×\n✓\nAbbreviations: apps (applications), OS (Open source), TR\
    \ (technical recommendations. Key: ✓⇒ available/reported and ×⇒ not available/not\
    \ reported, ◦ → partially covered\n(or discussed).\nBig Data Cogn. Comput. 2022,\
    \ 6, 127\n17 of 23\nAs shown in Table 6, our work has covered many more aspects\
    \ of FL with regard\nto COVID-19 than the previous SOTA studies. In addition,\
    \ this is the ﬁrst work that\nhas comprehensively covered FL’s role in the recent\
    \ pandemic. The contents enclosed\nin this article can pave the way for understanding\
    \ this leading technological role in the\nmedical ﬁeld, especially related to\
    \ COVID-19. In addition, our work is the ﬁrst that\nhighlights the open-source\
    \ developments of FL, which can assist in understanding the\ndevelopment status\
    \ of this paradigm. In recent years, FL has been fused with multiple\ntechnologies\
    \ (i.e., the industrial internet of things (IIoT), blockchain, edge computing,\
    \ etc.)\nto address the privacy and security issues in real-life domains [147].\
    \ Although FL can\nsolve many cybersecurity-related issues, the FL paradigm is\
    \ prone to multiple attacks\ndue to its decentralized architecture. Therefore,\
    \ more approaches are needed to address\ncybersecurity-related issues in FL-based\
    \ systems.\nThe major contributions of this work compared to previous studies\
    \ are: (i) higher\ncoverage of FL applications in terms of numbers (i.e., 36)\
    \ in the era of COVID-19; (ii) through\ndiscussion of challenges faced by FL paradigm\
    \ which are either ignored or barely discussed\nby previous studies; (iii) systematic\
    \ discussion of data types which were used to lower\nthe spread of COVID-19; (iv)\
    \ highlighted the open-source frameworks that have recently\nbeen developed along\
    \ with their in-depth details; (v) a discussion and analysis of open\nsource frameworks\
    \ that were being developed speciﬁcally for the medical domain; (vi) it is\nthe\
    \ ﬁrst study to provide recommendations to address the technical deﬁciencies of\
    \ the FL\nparadigm; (vii) it is the ﬁrst study that pinpoints and discusses the\
    \ synergies of FL with\nother emerging technologies; (viii) the systematic coverage\
    \ of issues that can emerge in FL\ndeployment; (ix) a discussion about other COVID-19-ﬁghting\
    \ digital technologies; and (x) a\ndetailed discussion of hot research area(s)\
    \ targeting the FL paradigm. Furthermore, our\nstudy has covered many FL applications\
    \ in the COVID-19 era that remained unexplored in\nprevious works. Furthermore,\
    \ this is the ﬁrst study that discussed FL applications along\nwith AI models\
    \ and data details. This work can pave the way to providing the recent status\n\
    of FL developments in the COVID-19 era.\n8. Conclusions and Future Work\nIn the\
    \ big data era, there is a growing demand for the responsible use of data to draw\n\
    fair, unbiased, and impartial decisions with the help of data science tools to\
    \ improve the\nquality of many real-world services (e.g., healthcare, recommendation,\
    \ navigation, smart\ncities, mobile doctors, etc.). Since data have a huge impact\
    \ on the advancements of real-life\nservices/decisions, data must therefore be\
    \ shared on a large scale with analysts/researchers.\nUnfortunately, data distribution\
    \ at a wider scale is not possible due to privacy concerns,\nand many companies\
    \ are reluctant to share aggregated personal data. Thanks to the rapid\ndevelopment\
    \ in the FL paradigm, personal data orchestration at a central place is no longer\n\
    required while the AI model can still be trained on them locally. In this paper,\
    \ we present a\ntechnical overview including applications and challenges of the\
    \ FL paradigm with a special\nemphasis on COVID-19 in the big data era. Although\
    \ there are some review papers on\nFL applications in the medical domain, they\
    \ paid less attention to FL applications in the\ncontext of the COVID-19 pandemic.\
    \ To ﬁll this gap, we presented an in-depth review of the\nFL applications and\
    \ challenges in the context of COVID-19. In the future, we intend to cover\nthe\
    \ taxonomy of FL applications involving both independent and identically distributed\n\
    (IID) and non-IID data in the medical ﬁeld [148–150]. Finally, we intend to discuss\
    \ the\nhardware and software challenges in the deployment of FL models in real-life\
    \ scenarios.\nAuthor Contributions: Conceptualization, A.M., X.Z. and S.O.H.;\
    \ methodology, A.M. and X.Z.;\nsoftware, A.M. and S.O.H.; validation, A.M., X.Z.\
    \ and S.O.H.; investigation, A.M., X.Z. and S.O.H.;\nresources, A.M. and S.O.H.;\
    \ data curation, A.M., X.Z. and S.O.H.; writing—original draft preparation,\n\
    A.M. and X.Z.; writing—review and editing, A.M., X.Z. and S.O.H.; visualization,\
    \ A.M.; supervision,\nS.O.H.; project administration, S.O.H.; funding acquisition,\
    \ A.M. and S.O.H. All authors have read\nand agreed to the published version of\
    \ the manuscript.\nBig Data Cogn. Comput. 2022, 6, 127\n18 of 23\nFunding: This\
    \ research received no external funding.\nInstitutional Review Board Statement:\
    \ Not applicable.\nInformed Consent Statement: Not applicable.\nData Availability\
    \ Statement: Data and studies that were used to support the ﬁndings of this study\n\
    are included within this article.\nAcknowledgments: The authors would like to\
    \ thank the editor and reviewers for their insightful\ncomments and valuable suggestions,\
    \ which helped improve the quality of the paper signiﬁcantly.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nReferences\n1.\nAlazab, M.; RM,\
    \ S.P.; Parimala, M.; Maddikunta, P.K.; Gadekallu, T.R.; Pham, Q.V. Federated\
    \ Learning for Cybersecurity:\nConcepts, Challenges, and Future Directions. IEEE\
    \ Trans. Ind. Inform. 2021, 18, 3501–3509. [CrossRef]\n2.\nBanabilah, S.; Aloqaily,\
    \ M.; Alsayed, E.; Malik, N.; Jararweh, Y. Federated learning review: Fundamentals,\
    \ enabling technologies,\nand future applications. Inf. Process. Manag. 2022,\
    \ 59, 103061. [CrossRef]\n3.\nChan, E.Y.; Saqib, N.U. Privacy concerns can explain\
    \ unwillingness to download and use contact tracing apps when COVID-19\nconcerns\
    \ are high. Comput. Hum. Behav. 2021, 119, 106718. [CrossRef] [PubMed]\n4.\nWainakh,\
    \ A.; Guinea, A.S.; Grube, T.; Mühlhäuser, M. Enhancing privacy via hierarchical\
    \ federated learning. In Proceedings of\nthe 2020 IEEE European Symposium on Security\
    \ and Privacy Workshops (EuroS&PW), Genoa, Italy, 7–11 September 2020.\n5.\nYang,\
    \ Q.; Liu, Y.; Cheng, Y.; Kang, Y.; Chen, T.; Yu, H. Federated learning. Synth.\
    \ Lect. Artif. Intell. Mach. Learn. 2019, 13, 1–207.\n6.\nGhimire, B.; Rawat,\
    \ D.B. Recent advances on federated learning for cybersecurity and cybersecurity\
    \ for federated learning for\ninternet of things. IEEE Internet Things J. 2022,\
    \ 9, 8229–8249. [CrossRef]\n7.\nSingh, S.; Rathore, S.; Alfarraj, O.; Tolba, A.;\
    \ Yoon, B. A framework for privacy-preservation of IoT healthcare data using Federated\n\
    Learning and blockchain technology. Future Gener. Comput. Syst. 2022, 129, 380–388.\
    \ [CrossRef]\n8.\nFang, C.; Guo, Y.; Wang, N.; Ju, A. Highly efﬁcient federated\
    \ learning with strong privacy preservation in cloud computing.\nComput. Secur.\
    \ 2020, 96, 101889. [CrossRef]\n9.\nLu, Y.; Huang, X.; Dai, Y.; Maharjan, S.;\
    \ Zhang, Y. Federated learning for data privacy preservation in vehicular cyber-physical\n\
    systems. IEEE Netw. 2020, 34, 50–56. [CrossRef]\n10.\nLiu, G.; Wang, C.; Ma, X.;\
    \ Yang, Y. Keep your data locally: Federated-learning-based data privacy preservation\
    \ in edge computing.\nIEEE Netw. 2021, 35, 60–66. [CrossRef]\n11.\nZhao, B.; Fan,\
    \ K.; Yang, K.; Wang, Z.; Li, H.; Yang, Y. Anonymous and privacy-preserving federated\
    \ learning with industrial big\ndata. IEEE Trans. Ind. Inform. 2021, 17, 6314–6323.\
    \ [CrossRef]\n12.\nPołap, D. Fuzzy Consensus with Federated Learning Method in\
    \ Medical Systems. IEEE Access 2021, 9, 150383–150392. [CrossRef]\n13.\nRuzafa-Alcazar,\
    \ P.; Fernandez-Saura, P.; Marmol-Campos, E.; Gonzalez-Vidal, A.; Ramos, J.L.;\
    \ Bernal, J.; Skarmeta, A.F. Intrusion\nDetection based on Privacy-preserving\
    \ Federated Learning for the Industrial IoT. IEEE Trans. Ind. Inform. 2021. [CrossRef]\n\
    14.\nCheng, Y.; Liu, Y.; Chen, T.; Yang, Q. Federated learning for privacy-preserving\
    \ AI. Commun. Acm 2020, 63, 33–36. [CrossRef]\n15.\nDing, J.; Tramel, E.; Sahu,\
    \ A.K.; Wu, S.; Avestimehr, S.; Zhang, T. Federated learning challenges and opportunities:\
    \ An outlook.\nIn Proceedings of the ICASSP 2022–2022 IEEE International Conference\
    \ on Acoustics, Speech and Signal Processing (ICASSP),\nSingapore, 23–27 May 2022.\n\
    16.\nRieke, N.; Hancox, J.; Li, W.; Milletari, F.; Roth, H.R.; Albarqouni, S.;\
    \ Bakas, S.; Galtier, M.N.; Landman, B.A.; Maier-Hein, K.; et al.\nThe future\
    \ of digital health with federated learning. NPJ Digit. Med. 2020, 3, 119. [CrossRef]\n\
    17.\nNaz, S.; Phan, K.T.; Chen, Y.P. A comprehensive review of federated learning\
    \ for COVID-19 detection. Int. J. Intell. Syst. 2022, 37,\n2371–2392. [CrossRef]\n\
    18.\nZhang, W.; Zhou, T.; Lu, Q.; Wang, X.; Zhu, C.; Sun, H.; Wang, Z.; Lo, S.K.;\
    \ Wang, F.Y. Dynamic-fusion-based federated learning\nfor COVID-19 detection.\
    \ IEEE Internet Things J. 2021, 8, 15884–15891. [CrossRef]\n19.\nAbdul Salam,\
    \ M.; Taha, S.; Ramadan, M. COVID-19 detection using federated machine learning.\
    \ PLoS ONE 2021, 16, e0252573.\n[CrossRef]\n20.\nDayan, I.; Roth, H.R.; Zhong,\
    \ A.; Harouni, A.; Gentili, A.; Abidin, A.Z.; Liu, A.; Costa, A.B.; Wood, B.J.;\
    \ Tsai, C.S.; et al. Federated\nlearning for predicting clinical outcomes in patients\
    \ with COVID-19. Nat. Med. 2021, 27, 1735–1743. [CrossRef]\n21.\nVaid, A.; Jaladanki,\
    \ S.K.; Xu, J.; Teng, S.; Kumar, A.; Lee, S.; Somani, S.; Paranjpe, I.; De Freitas,\
    \ J.K.; Wanyan, T.; et al. Federated\nlearning of electronic health records to\
    \ improve mortality prediction in hospitalized patients with COVID-19: Machine\
    \ learning\napproach. JMIR Med. Inform. 2021, 9, e24207. [CrossRef]\n22.\nFourati,\
    \ L.C.; Samiha, A.Y. Federated learning toward data preprocessing: COVID-19 context.\
    \ In Proceedings of the 2021 IEEE\nInternational Conference on Communications\
    \ Workshops (ICC Workshops), Montreal, QC, Canada, 14–23 June 2021.\n23.\nChen,\
    \ J.J.; Chen, R.; Zhang, X.; Pan, M. A privacy preserving federated learning framework\
    \ for COVID-19 vulnerability map\nconstruction. In Proceedings of the ICC 2021-IEEE\
    \ International Conference on Communications, Montreal, QC, Canada,\n14–23 June\
    \ 2021.\nBig Data Cogn. Comput. 2022, 6, 127\n19 of 23\n24.\nAhmed, J.; Nguyen,\
    \ T.N.; Ali, B.; Javed, A.; Mirza, J. On the Physical Layer Security of Federated\
    \ Learning based IoMT Networks.\nIEEE J. Biomed. Health Inform. 2022. [CrossRef]\n\
    25.\nSamuel, O.; Omojo, A.B.; Onuja, A.M.; Sunday, Y.; Tiwari, P.; Gupta, D.;\
    \ Hafeez, G.; Yahaya, A.S.; Fatoba, O.J.; Shamshirb, S. IoMT:\nA COVID-19 Healthcare\
    \ System driven by Federated Learning and Blockchain. IEEE J. Biomed. Health Inform.\
    \ 2022. [CrossRef]\n[PubMed]\n26.\nFlorescu, L.M.; Streba, C.T.; ¸Serb˘anescu,\
    \ M.S.; M˘amuleanu, M.; Florescu, D.N.; Teic˘a, R.V.; Nica, R.E.; Gheonea, I.A.\
    \ Federated\nLearning Approach with Pre-Trained Deep Learning Models for COVID-19\
    \ Detection from Unsegmented CT images. Life 2022,\n12, 958. [CrossRef] [PubMed]\n\
    27.\nBhattacharya, A.; Gawali, M.; Seth, J.; Kulkarni, V. Application of Federated\
    \ Learning in building a robust COVID-19 Chest X-ray\nclassiﬁcation Model. arXiv\
    \ 2022, arXiv:2204.10505.\n28.\nZhang, Q.; Ren, X.; Wei, B. Segmentation of infected\
    \ region in CT images of COVID-19 patients based on QC-HC U-net. Sci. Rep.\n2021,\
    \ 11, 22854 .\n29.\nZhu, R.; Yin, K.; Xiong, H.; Tang, H.; Yin, G. Masked face\
    \ detection algorithm in the dense crowd based on federated learning.\nWirel.\
    \ Commun. Mob. Comput. 2021, 2021, 8586016. [CrossRef]\n30.\nLi, Q.; Wen, Z.;\
    \ Wu, Z.; Hu, S.; Wang, N.; Li, Y.; Liu, X.; He, B. A survey on federated learning\
    \ systems: Vision, hype and reality\nfor data privacy and protection. IEEE Trans.\
    \ Knowl. Data Eng. 2021. [CrossRef]\n31.\nLiu, J.; Huang, J.; Zhou, Y.; Li, X.;\
    \ Ji, S.; Xiong, H.; Dou, D. From distributed machine learning to federated learning:\
    \ A survey.\nKnowl. Inf. Syst. 2022, 64, 885–917. [CrossRef]\n32.\nMothukuri,\
    \ V.; Parizi, R.M.; Pouriyeh, S.; Huang, Y.; Dehghantanha, A.; Srivastava, G.\
    \ A survey on security and privacy of\nfederated learning. Future Gener. Comput.\
    \ Syst. 2021, 115, 619–640. [CrossRef]\n33.\nAledhari, M.; Razzak, R.; Parizi,\
    \ R.M.; Saeed, F. Federated learning: A survey on enabling technologies, protocols,\
    \ and applications.\nIEEE Access 2020, 8, 140699–140725. [CrossRef]\n34.\nKumar,\
    \ Y.; Singla, R. Federated learning systems for healthcare: Perspective and recent\
    \ progress. In Federated Learning Systems.\nStudies in Computational Intelligence;\
    \ Springer: Berlin/Heidelberg, Germany, 2021; pp. 141–156.\n35.\nAsad, M.; Moustafa,\
    \ A.; Ito, T. FedOpt: Towards communication efﬁciency and privacy preservation\
    \ in federated learning. Appl.\nSci. 2020, 10, 2864. [CrossRef]\n36.\nDu, Z.;\
    \ Wu, C.; Yoshinaga, T.; Yau, K.L.; Ji, Y.; Li, J. Federated learning for vehicular\
    \ internet of things: Recent advances and open\nissues. IEEE Open J. Comput. Soc.\
    \ 2020, 1, 45–61. [CrossRef]\n37.\nLi, Y.; Ding, B.; Zhou, J. A Practical Introduction\
    \ to Federated Learning. In Proceedings of the 28th ACM SIGKDD Conference on\n\
    Knowledge Discovery and Data Mining (KDD’22), Washington, DC, USA, 14–18 August\
    \ 2022; pp. 4802–4803. [CrossRef]\n38.\nAntunes, R.S.; André da Costa, C.; Küderle,\
    \ A.; Yari, I.A.; Eskoﬁer, B. Federated Learning for Healthcare: Systematic Review\
    \ and\nArchitecture Proposal. ACM Trans. Intell. Syst. Technol. TIST 2022, 13,\
    \ 1–23. [CrossRef]\n39.\nLee, H.; Chai, Y.J.; Joo, H.; Lee, K.; Hwang, J.Y.; Kim,\
    \ S.M.; Kim, K.; Nam, I.C.; Choi, J.Y.; Yu, H.W.; et al. Federated learning for\n\
    thyroid ultrasound image analysis to protect personal information: Validation\
    \ study in a real health care environment. JMIR Med.\nInform. 2021, 9, e25869.\
    \ [CrossRef]\n40.\nSzatmari, T.I.; Petersen, M.K.; Korzepa, M.J.; Giannetsos,\
    \ T. Modelling audiological preferences using federated learning. In\nProceedings\
    \ of the Adjunct Publication of the 28th ACM Conference on User Modeling, Adaptation\
    \ and Personalization, Genoa,\nItaly, 12–18 July 2020; pp. 187–190.\n41.\nZerka,\
    \ F.; Urovi, V.; Vaidyanathan, A.; Jaiman, V.; Leijenaar, R.T.; Walsh, S.; Gabrani-Juma,\
    \ H.; Woodruff, H.C.; Dumontier, M.;\nLambin, P. A blockchain based approach for\
    \ Privacy Preserving distributed learning-Grade Group Prediction for Prostate\
    \ Cancer\nPatients. Distrib. Learn. Optim. Radiomics Knowl. 2022, 135. [CrossRef]\n\
    42.\nRibero, M.; Henderson, J.; Williamson, S.; Vikalo, H. Federating recommendations\
    \ using differentially private prototypes. Pattern\nRecognit. 2022, 129, 108746.\
    \ [CrossRef]\n43.\nNgo, T.; Nguyen, D.C.; Pathirana, P.N.; Corben, L.A.; Delatycki,\
    \ M.B.; Horne, M.; Szmulewicz, D.J.; Roberts, M. Federated Deep\nLearning for\
    \ the Diagnosis of Cerebellar Ataxia: Privacy Preservation and Auto-Crafted Feature\
    \ Extractor. IEEE Trans. Neural\nSyst. Rehabil. Eng. 2022, 30, 803–811. [CrossRef]\n\
    44.\nIslam, A.; Al Amin, A.; Shin, S.Y. FBI: A federated learning-based blockchain-embedded\
    \ data accumulation scheme using drones\nfor Internet of Things. IEEE Wirel. Commun.\
    \ Lett. 2022, 11, 972–976. [CrossRef]\n45.\nKumar, R.; Khan, A.A.; Kumar, J.;\
    \ Golilarz, N.A.; Zhang, S.; Ting, Y.; Zheng, C.; Wang, W. Blockchain-federated-learning\
    \ and deep\nlearning models for COVID-19 detection using CT imaging. IEEE Sens.\
    \ J. 2021, 21, 16301–16314. [CrossRef]\n46.\nFlores, M.; Dayan, I.; Roth, H.;\
    \ Zhong, A.; Harouni, A.; Gentili, A.; Abidin, A.; Liu, A.; Costa, A.; Wood, B.;\
    \ et al. Federated\nLearning used for predicting outcomes in SARS-COV-2 patients.\
    \ Res. Sq. 2021. [CrossRef]\n47.\nDou, Q.; So, T.Y.; Jiang, M.; Liu, Q.; Vardhanabhuti,\
    \ V.; Kaissis, G.; Li, Z.; Si, W.; Lee, H.H.; Yu, K.; et al. Federated deep learning\n\
    for detecting COVID-19 lung abnormalities in CT: A privacy-preserving multinational\
    \ validation study. NPJ Digit. Med. 2021,\n4, 60. [CrossRef]\n48.\nYang, D.; Xu,\
    \ Z.; Li, W.; Myronenko, A.; Roth, H.R.; Harmon, S.; Xu, S.; Turkbey, B.; Turkbey,\
    \ E.; Wang, X.; et al. Federated\nsemi-supervised learning for COVID region segmentation\
    \ in chest CT using multi-national data from China, Italy, Japan. Med.\nImage\
    \ Anal. 2021, 70, 101992. [CrossRef] [PubMed]\nBig Data Cogn. Comput. 2022, 6,\
    \ 127\n20 of 23\n49.\nNguyen, D.C.; Ding, M.; Pathirana, P.N.; Seneviratne, A.;\
    \ Zomaya, A.Y. Federated learning for COVID-19 detection with\ngenerative adversarial\
    \ networks in edge cloud computing. IEEE Internet Things J. 2021, 9, 10257–10271.\
    \ [CrossRef]\n50.\nAswathy, A.L.; Vinod Chandra, S.S. Cascaded 3D UNet architecture\
    \ for segmenting the COVID-19 infection from lung CT volume.\nSci. Rep. 2022,\
    \ 12, 3090.\n51.\nKumaresan, M.; Kumar, M.S.; Muthukumar, N. Analysis of mobility\
    \ based COVID-19 epidemic model using Federated Multitask\nLearning. Math. Biosci.\
    \ Eng. 2022, 19, 9983–10005. [CrossRef] [PubMed]\n52.\nOhata, E.F.; Bezerra, G.M.;\
    \ das Chagas, J.V.; Neto, A.V.; Albuquerque, A.B.; de Albuquerque, V.H.; Reboucas\
    \ Filho, P.P. Automatic\ndetection of COVID-19 infection using chest X-ray images\
    \ through transfer learning. IEEE/CAA J. Autom. Sin. 2020, 8, 239–248.\n[CrossRef]\n\
    53.\nAlhudhaif, A.; Polat, K.; Karaman, O. Determination of COVID-19 pneumonia\
    \ based on generalized convolutional neural network\nmodel from chest X-ray images.\
    \ Expert Syst. Appl. 2021, 180, 115141. [CrossRef]\n54.\nDas, A.K.; Dey, D.; Chatterjee,\
    \ B.; Dalai, S. A transfer learning approach to sense the degree of surface pollution\
    \ for metal oxide\nsurge arrester employing infrared thermal imaging. IEEE Sens.\
    \ J. 2021, 21, 16961–16968. [CrossRef]\n55.\nSingh, P.; Kaur, R. Implementation\
    \ of the QoS framework using fog computing to predict COVID-19 disease at early\
    \ stage. World\nJ. Eng. 2021, 19, 80–89. [CrossRef]\n56.\nKochgaven, C.; Mishra,\
    \ P.; Shitole, S. Detecting Presence of COVID-19 with ResNet-18 using PyTorch.\
    \ In Proceedings of the 2021\nInternational Conference on Communication Information\
    \ and Computing Technology (ICCICT), Mumbai, India, 25–27 June 2021.\n57.\nChen,\
    \ X.; Shao, Y.; Xue, Z.; Yu, Z. Multi-Modal COVID-19 Discovery with Collaborative\
    \ Federated Learning. In Proceedings of the\n2021 IEEE 7th International Conference\
    \ on Cloud Computing and Intelligent Systems (CCIS), Xi’an, China, 7–8 November\
    \ 2021.\n58.\nLaouarem, A.; Kara-Mohamed, C.; Bourenane, E.B.; Hamdi-Cherif, A.\
    \ A deep learning model for CXR-based COVID-19 detection.\nIn Proceedings of the\
    \ 2021 International Conference on Engineering and Emerging Technologies (ICEET),\
    \ Istanbul, Turkey,\n27–28 October 2021.\n59.\nMalhotra, R.; Patel, H.; Fataniya,\
    \ B.D. Prediction of COVID-19 Disease with Chest X-rays Using Convolutional Neural\
    \ Network. In\nProceedings of the 2021 Third International Conference on Inventive\
    \ Research in Computing Applications (ICIRCA), Coimbatore,\nIndia, 2–4 September\
    \ 2021; pp. 545–550.\n60.\nSong, Q.; Zheng, Y.J.; Yang, J.; Huang, Y.J.; Sheng,\
    \ W.G.; Chen, S.Y. Predicting Demands of COVID-19 Prevention and Control\nMaterials\
    \ via Co-Evolutionary Transfer Learning. IEEE Trans. Cybern. 2022. [CrossRef]\n\
    61.\nLe Dinh, T.; Lee, S.H.; Kwon, S.G.; Kwon, K.R. COVID-19 Chest X-ray Classiﬁcation\
    \ and Severity Assessment Using Convolutional\nand Transformer Neural Networks.\
    \ Appl. Sci. 2022, 12, 4861. [CrossRef]\n62.\nSenthilkumar, G.; Sasidhar, V.J.;\
    \ Saravana Kumar, S.; Vignesh, E. Disease Prediction Systems for COVID with Electronic\
    \ Medical\nRecords. Int. J. Innov. Sci. Res. Technol. 2021, 6, 8–10.\n63.\nWang,\
    \ Q.; Guo, Y.; Ji, T.; Wang, X.; Hu, B.; Li, P. Toward Combatting COVID-19: A\
    \ Risk Assessment System. IEEE Internet Things J.\n2021, 8, 15953–15964. [CrossRef]\n\
    64.\nChen, R.; Li, L.; Ma, Y.; Gong, Y.; Guo, Y.; Ohtsuki, T.; Pan, M. Constructing\
    \ Mobile Crowdsourced COVID-19 Vulnerability Map\nwith Geo-Indistinguishability.\
    \ IEEE Internet Things J. 2022, 9, 17403–17416. [CrossRef]\n65.\nHo, T.T.; Tran,\
    \ K.D.; Huang, Y. FedSGDCOVID: Federated SGD COVID-19 Detection under Local Differential\
    \ Privacy Using\nChest X-ray Images and Symptom Information. Sensors 2022, 22,\
    \ 3728. [CrossRef]\n66.\nDurga, R.; Poovammal, E. FLED-Block: Federated Learning\
    \ Ensembled Deep Learning Blockchain Model for COVID-19 Prediction.\nFront. Public\
    \ Health 2022, 10, 892499. [CrossRef]\n67.\nRahman, M.A.; Hossain, M.S. An internet-of-medical-things-enabled\
    \ edge computing framework for tackling COVID-19. IEEE\nInternet Things J. 2021,\
    \ 8, 15847–15854. [CrossRef]\n68.\nMukherjee, R.; Kundu, A.; Mukherjee, I.; Gupta,\
    \ D.; Tiwari, P.; Khanna, A.; Shorfuzzaman, M. IoT-cloud based healthcare model\n\
    for COVID-19 detection: An enhanced k-Nearest Neighbour classiﬁer based approach.\
    \ Computing 2021. [CrossRef]\n69.\nAljumah, A. Assessment of machine learning\
    \ techniques in IoT-based architecture for the monitoring and prediction of COVID-19.\n\
    Electronics 2021, 10, 1834. [CrossRef]\n70.\nMir, M.H.; Jamwal, S.; Mehbodniya,\
    \ A.; Garg, T.; Iqbal, U.; Samori, I.A. IoT-Enabled Framework for Early Detection\
    \ and Prediction\nof COVID-19 Suspects by Leveraging Machine Learning in Cloud.\
    \ J. Healthc. Eng. 2022, 2022, 7713939. [CrossRef]\n71.\nWang, H.; Tao, G.; Ma,\
    \ J.; Jia, S.; Chi, L.; Yang, H.; Zhao, Z.; Tao, J. Predicting the Epidemics Trend\
    \ of COVID-19 Using\nEpidemiological-Based Generative Adversarial Networks. IEEE\
    \ J. Sel. Top. Signal Process. 2022, 16, 276–288. [CrossRef]\n72.\nBhatia, M.;\
    \ Manocha, A.; Ahanger, T.A.; Alqahtani, A. Artiﬁcial intelligence-inspired comprehensive\
    \ framework for COVID-19\noutbreak control. Artif. Intell. Med. 2022, 127, 102288.\
    \ [CrossRef] [PubMed]\n73.\nHidayat, S.N.; Julian, T.; Dharmawan, A.B.; Puspita,\
    \ M.; Chandra, L.; Rohman, A.; Julia, M.; Rianjanu, A.; Nurputra, D.K.; Triyana,\n\
    K.; et al. Hybrid learning method based on feature clustering and scoring for\
    \ enhanced COVID-19 breath analysis by an electronic\nnose. Artif. Intell. Med.\
    \ 2022, 129, 102323. [CrossRef] [PubMed]\n74.\nRathee, G.; Garg, S.; Kaddoum,\
    \ G.; Wu, Y.; Jayakody, D.N.; Alamri, A. ANN assisted-IoT enabled COVID-19 patient\
    \ monitoring.\nIEEE Access 2021, 9, 42483–42492. [CrossRef] [PubMed]\n75.\nAlOmani,\
    \ G.Y.; Darwesh, A.D.; AlSennei, S.A.; Buabbas, H.A.; AlGhareeb, A.F.; Ahmed,\
    \ H.O. COVID-19 Symptoms Monitoring\nSensor Network for Isolation Rooms at Hospitals.\
    \ In Proceedings of the 2022 IEEE 21st Mediterranean Electrotechnical Conference\n\
    (MELECON), Palermo, Italy, 14–16 June 2022; pp. 741–745.\nBig Data Cogn. Comput.\
    \ 2022, 6, 127\n21 of 23\n76.\nSalim, M.M.; Park, J.H. Federated Learning-based\
    \ secure Electronic Health Record sharing scheme in Medical Informatics. IEEE\
    \ J.\nBiomed. Health Inform. 2022. [CrossRef] [PubMed]\n77.\nSingh, M.; Bansal,\
    \ S. A Proposed Federated Learning Model for Vaccination Tweets. In Proceedings\
    \ of the International Conference\non Computational Intelligence in Pattern Recognition,\
    \ Howrah, India, 23–24 April 2022; pp. 383–392.\n78.\nPark, S.; Kim, G.; Kim,\
    \ J.; Kim, B.; Ye, J.C. Federated split task-agnostic vision transformer for COVID-19\
    \ CXR diagnosis. Adv.\nNeural Inf. Process. Syst. 2021, 34, 24617–24630.\n79.\n\
    Islam, T.U.; Ghasemi, R.; Mohammed, N. Privacy-Preserving Federated Learning Model\
    \ for Healthcare Data. In Proceedings\nof the 2022 IEEE 12th Annual Computing\
    \ and Communication Workshop and Conference (CCWC), Las Vegas, NV, USA,\n26–29\
    \ January 2022; pp. 0281–0287.\n80.\nYan, R.; Qu, L.; Wei, Q.; Huang, S.C.; Shen,\
    \ L.; Rubin, D.; Xing, L.; Zhou, Y. Label-Efﬁcient Self-Supervised Federated Learning\
    \ for\nTackling Data Heterogeneity in Medical Imaging. arXiv 2022, arXiv:2205.08576.\n\
    81.\nShyu, C.R.; Putra, K.T.; Chen, H.C.; Tsai, Y.Y.; Hossain, K.T.; Jiang, W.;\
    \ Shae, Z.Y. A systematic review of federated learning in the\nhealthcare area:\
    \ From the perspective of data properties and applications. Appl. Sci. 2021, 11,\
    \ 11191.\n82.\nNguyen, D.C.; Pham, Q.-V.; Pathirana, P.N.; Ding, M.; Seneviratne,\
    \ A.; Lin, Z.; Dobre, O.; Hwang, W.-J. Federated learning for\nsmart healthcare:\
    \ A survey. ACM Comput. Surv. CSUR 2022, 55, 1–37. [CrossRef]\n83.\nXia, Q.; Ye,\
    \ W.; Tao, Z.; Wu, J.; Li, Q. A survey of federated learning for edge computing:\
    \ Research problems and solutions.\nHigh-Conﬁd. Comput. 2021, 1, 100008. [CrossRef]\n\
    84.\nJoshi, M.; Pal, A.; Sankarasubbu, M. Federated Learning for Healthcare Domain-Pipeline,\
    \ Applications and Challenges. ACM\nTrans. Comput. Healthc. 2022. [CrossRef]\n\
    85.\nAgbley, B.L.; Li, J.; Haq, A.U.; Bankas, E.K.; Ahmad, S.; Agyemang, I.O.;\
    \ Kulevome, D.; Ndiaye, W.D.; Cobbinah, B.; Latipova, S.\nMultimodal melanoma\
    \ detection with federated learning. In Proceedings of the 2021 18th International\
    \ Computer Conference\non Wavelet Active Media Technology and Information Processing\
    \ (ICCWAMTIP), Chengdu, China, 17–19 December 2021;\npp. 238–244.\n86.\nFan, J.;\
    \ Wang, X.; Guo, Y.; Hu, X.; Hu, B. Federated Learning Driven Secure Internet\
    \ of Medical Things. IEEE Wirel. Commun.\n2022, 29, 68–75. [CrossRef]\n87.\nSun,\
    \ L.; Wu, J. A Scalable and Transferable Federated Learning System for Classifying\
    \ Healthcare Sensor Data. IEEE J. Biomed.\nHealth Inform. 2022. [CrossRef]\n88.\n\
    Budd, J.; Miller, B.S.; Manning, E.M.; Lampos, V.; Zhuang, M.; Edelstein, M.;\
    \ Rees, G.; Emery, V.C.; Stevens, M.M.; Keegan, N.;\net al. Digital technologies\
    \ in the public-health response to COVID-19. Nat. Med. 2020, 26, 1183–1192. [CrossRef]\n\
    89.\nBouacida, N.; Mohapatra, P. Vulnerabilities in federated learning. IEEE Access\
    \ 2021, 9, 63229–63249. [CrossRef]\n90.\nWei, K.; Li, J.; Ding, M.; Ma, C.; Yang,\
    \ H.H.; Farokhi, F.; Jin, S.; Quek, T.Q.; Poor, H.V. Federated learning with differential\
    \ privacy:\nAlgorithms and performance analysis. IEEE Trans. Inf. Forensics Secur.\
    \ 2020, 15, 3454–3469. [CrossRef]\n91.\nLu, Y.; Huang, X.; Dai, Y.; Maharjan,\
    \ S.; Zhang, Y. Blockchain and federated learning for privacy-preserved data sharing\
    \ in\nindustrial IoT. IEEE Trans. Ind. Inform. 2019, 16, 4177–4186. [CrossRef]\n\
    92.\nLi, Z.; Liu, J.; Hao, J.; Wang, H.; Xian, M. CrowdSFL: A secure crowd computing\
    \ framework based on blockchain and federated\nlearning. Electronics 2020, 9,\
    \ 773. [CrossRef]\n93.\nFang, H.; Qian, Q. Privacy preserving machine learning\
    \ with homomorphic encryption and federated learning. Future Internet\n2021, 13,\
    \ 94. [CrossRef]\n94.\nHakak, S.; Ray, S.; Khan, W.Z.; Scheme, E. A framework\
    \ for edge-assisted healthcare data analytics using federated learning.\nIn Proceedings\
    \ of the 2020 IEEE International Conference on Big Data (Big Data), Atlanta, GA,\
    \ USA, 10–13 December 2020;\npp. 3423–3427.\n95.\nLaxmi Lydia, E.; Anupama, C.S.;\
    \ Beno, A.; Elhoseny, M.; Alshehri, M.D.; Selim, M.M. Cognitive computing-based\
    \ COVID-19\ndetection on Internet of things-enabled edge computing environment.\
    \ Soft Comput. 2021. [CrossRef]\n96.\nNguyen, D.C.; Ding, M.; Pathirana, P.N.;\
    \ Seneviratne, A.; Li, J.; Niyato, D.; Poor, H.V. Federated learning for industrial\
    \ internet of\nthings in future industries. IEEE Wirel. Commun. 2021, 28, 192–199.\
    \ [CrossRef]\n97.\nHazra, A.; Adhikari, M.; Nandy, S.; Doulani, K.; Menon, V.G.\
    \ Federated-Learning-Aided Next-Generation Edge Networks for\nIntelligent Services.\
    \ IEEE Netw. 2022, 36, 56–64. [CrossRef]\n98.\nPang, J.; Huang, Y.; Xie, Z.; Li,\
    \ J.; Cai, Z. Collaborative city digital twin for the COVID-19 pandemic: A federated\
    \ learning solution.\nTsinghua Sci. Technol. 2021, 26, 759–771. [CrossRef]\n99.\n\
    Wang, R.; Xu, J.; Ma, Y.; Talha, M.; Al-Rakhami, M.S.; Ghoneim, A. Auxiliary diagnosis\
    \ of COVID-19 based on 5G-enabled\nfederated learning. IEEE Netw. 2021, 35, 14–20.\
    \ [CrossRef]\n100. Jaladanki, S.K.; Vaid, A.; Sawant, A.S.; Xu, J.; Shah, K.;\
    \ Dellepiane, S.; Paranjpe, I.; Chan, L.; Kovatch, P.; Charney, A.W.; et al.\n\
    Development of a federated learning approach to predict acute kidney injury in\
    \ adult hospitalized patients with COVID-19 in\nNew York City. medRxiv 2021. [CrossRef]\n\
    101. Yang, G.; Wang, S.; Wang, H. Federated learning with personalized local differential\
    \ privacy. In Proceedings of the 2021 IEEE 6th\nInternational Conference on Computer\
    \ and Communication Systems (ICCCS), Chengdu, China, 23–26 April 2021; pp. 484–489.\n\
    102. Ulhaq, A.; Burmeister, O. COVID-19 imaging data privacy by federated learning\
    \ design: A theoretical framework. arXiv 2020,\narXiv:2010.06177.\nBig Data Cogn.\
    \ Comput. 2022, 6, 127\n22 of 23\n103. Rahman, M.A.; Hossain, M.S.; Islam, M.S.;\
    \ Alrajeh, N.A.; Muhammad, G. Secure and provenance enhanced internet of health\n\
    things framework: A blockchain managed federated learning approach. IEEE Access\
    \ 2020, 8, 205071–205087. [CrossRef]\n104. Chen, S.W.; Gu, X.W.; Wang, J.J.; Zhu,\
    \ H.S. AIoT used for COVID-19 pandemic prevention and control. Contrast Media\
    \ Mol.\nImaging 2021, 2021, 3257035. [CrossRef]\n105. Wu, C.; Peng, C.; Du, Z.;\
    \ Gao, L.; Yoshinaga, T.; Ji, Y. Toward Agile Information and Communication Framework\
    \ for the\nPost-COVID-19 Era. IEEE Open J. Comput. Soc. 2021, 2, 290–299. [CrossRef]\n\
    106. Aouedi, O.; Sacco, A.; Piamrat, K.; Marchetto, G. Handling Privacy-Sensitive\
    \ Medical Data with Federated Learning: Challenges\nand Future Directions. IEEE\
    \ J. Biomed. Health Inform. 2022. [CrossRef]\n107. Yang, Q.; Zhang, J.; Hao, W.;\
    \ Spell, G.P.; Carin, L. Flop: Federated learning on medical datasets using partial\
    \ networks. In\nProceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery\
    \ & Data Mining, Singapore, 14–18 August 2021;\npp. 3845–3853.\n108. Peng, L.;\
    \ Wang, N.; Dvornek, N.; Zhu, X.; Li, X. Fedni: Federated graph learning with\
    \ network inpainting for population-based\ndisease prediction. IEEE Trans. Med.\
    \ Imaging 2022. [CrossRef]\n109. Li, X.C.; Gan, L.; Zhan, D.C.; Shao, Y.; Li,\
    \ B.; Song, S. Aggregate or Not? Exploring Where to Privatize in DNN Based Federated\n\
    Learning under Different Non-IID Scenes. arXiv 2021, arXiv:2107.11954.\n110. Nasser,\
    \ N.; Fadlullah, Z.M.; Fouda, M.M.; Ali, A.; Imran, M. A lightweight federated\
    \ learning based privacy preserving B5G\npandemic response network using unmanned\
    \ aerial vehicles: A proof-of-concept. Comput. Netw. 2022, 205, 108672. [CrossRef]\n\
    111. Peyvandi, A.; Majidi, B.; Peyvandi, S.; Patra, J.C. Privacy-preserving federated\
    \ learning for scalable and high data quality\ncomputational-intelligence-as-a-service\
    \ in Society 5.0. Multimed. Tools Appl. 2022, 81, 25029–25050. [CrossRef]\n112.\
    \ Jaiswal, A.; Yigzaw, K.Y.; Öztürk, P. F-CBR: An Architecture for Federated Case-Based\
    \ Reasoning. IEEE Access. 2022. [CrossRef]\n113. Vu, T.T.; Ngo, D.T.; Ngo, H.Q.;\
    \ Dao, M.N.; Tran, N.H.; Middleton, R.H. Joint Resource Allocation to Minimize\
    \ Execution Time of\nFederated Learning in Cell-Free Massive MIMO. IEEE Internet\
    \ Things J. 2022. [CrossRef]\n114. Li, Y.; Zhou, Y.; Jolfaei, A.; Yu, D.; Xu,\
    \ G.; Zheng, X. Privacy-preserving federated learning framework based on chained\
    \ secure\nmultiparty computing. IEEE Internet Things J. 2020, 8, 6178–6186. [CrossRef]\n\
    115. Duan, M.; Liu, D.; Ji, X.; Wu, Y.; Liang, L.; Chen, X.; Tan, Y.; Ren, A.\
    \ Flexible clustered federated learning for client-level data\ndistribution shift.\
    \ IEEE Trans. Parallel Distrib. Syst. 2021, 33, 2661–2674. [CrossRef]\n116. Xu,\
    \ J.; Glicksberg, B.S.; Su, C.; Walker, P.; Bian, J.; Wang, F. Federated learning\
    \ for healthcare informatics. J. Healthc. Inform. Res.\n2021, 5, 1–9. [CrossRef]\n\
    117. Wibawa, F.; Catak, F.O.; Kuzlu, M.; Sarp, S.; Cali, U. Homomorphic Encryption\
    \ and Federated Learning based Privacy-Preserving\nCNN Training: COVID-19 Detection\
    \ Use-Case. In Proceedings of the EICC 2022: European Interdisciplinary Cybersecurity\n\
    Conference, Barcelona, Spain, 15–16 June 2022; pp. 85–90.\n118. Aich, S.; Sinai,\
    \ N.K.; Kumar, S.; Ali, M.; Choi, Y.R.; Joo, M.-I.; Kim, H.-C. Protecting personal\
    \ healthcare record using blockchain\n& federated learning technologies. In Proceedings\
    \ of the 2022 24th International Conference on Advanced Communication\nTechnology\
    \ (ICACT), Pyeongchang, Korea, 13–16 February 2022.\n119. Cui, L.; Su, X.; Zhou,\
    \ Y. A Fast Blockchain-based Federated Learning Framework with Compressed Communications.\
    \ arXiv 2022,\narXiv:2208.06095.\n120. Liu, Z.; Chen, S.; Ye, J.; Fan, J.; Li,\
    \ H.; Li, X. DHSA: Efﬁcient Doubly Homomorphic Secure Aggregation for Cross-silo\
    \ Federated\nLearning. arXiv 2022, arXiv:2208.07189.\n121. Ludwig, H.; Baracaldo,\
    \ N.; Thomas, G.; Zhou, Y.; Anwar, A.; Rajamoni, S.; Ong, Y.; Radhakrishnan, J.;\
    \ Verma, A.; Sinn, M.; et al.\nIbm federated learning: An enterprise framework\
    \ white paper v0.1. arXiv 2020, arXiv:2007.10987.\n122. Galtier, M.N.; Marini,\
    \ C. Substra: A framework for privacy-preserving, traceable and collaborative\
    \ machine learning. arXiv 2019,\narXiv:1910.11567.\n123. Nvidia, C. An Application\
    \ Framework Optimized for Healthcare and Life Sciences Developers. Virtual Workshop\
    \ under\nDSxConference. 2020. Available online: https://www.perdanauniversity.edu.my/dsx/product/nvidia-clara-an-application-\n\
    framework-optimized-for-healthcare-and-life-sciences-developers/ (accessed on\
    \ 10 August 2022).\n124. Kholod, I.; Yanaki, E.; Fomichev, D.; Shalugin, E.; Novikova,\
    \ E.; Filippov, E.; Nordlund, M. Open-source federated learning\nframeworks for\
    \ IoT: A comparative review and analysis. Sensors 2020, 21, 167. [CrossRef] [PubMed]\n\
    125. Strobel, M.; Shokri, R. Data Privacy and Trustworthy Machine Learning. IEEE\
    \ Secur. Priv. 2022, 20, 44–49. [CrossRef]\n126. Rahman, A.; Hossain, M.; Muhammad,\
    \ G.; Kundu, D.; Debnath, T.; Rahman, M.; Khan, M.; Islam, S.; Tiwari, P.; Band,\
    \ S. Federated\nlearning-based AI approaches in smart healthcare: Concepts, taxonomies,\
    \ challenges and open issues. Clust. Comput. 2022, 1–41.\n[CrossRef]\n127. Wu,\
    \ W.; He, L.; Lin, W.; Mao, R. Accelerating federated learning over reliability-agnostic\
    \ clients in mobile edge computing\nsystems. IEEE Trans. Parallel Distrib. Syst.\
    \ 2020, 32, 1539–1551. [CrossRef]\n128. Hao, M.; Li, H.; Luo, X.; Xu, G.; Yang,\
    \ H.; Liu, S. Efﬁcient and privacy-enhanced federated learning for industrial\
    \ artiﬁcial\nintelligence. IEEE Trans. Ind. Inform. 2019, 16, 6532–6542. [CrossRef]\n\
    129. Tolpegin, V.; Truex, S.; Gursoy, M.E.; Liu, L. Data poisoning attacks against\
    \ federated learning systems. In Proceedings of the\nEuropean Symposium on Research\
    \ in Computer Security, Guildford, UK, 14–18 September 2020; pp. 480–501.\n130.\
    \ Zhou, X.; Xu, M.; Wu, Y.; Zheng, N. Deep model poisoning attack on federated\
    \ learning. Future Internet 2021, 13, 73. [CrossRef]\nBig Data Cogn. Comput. 2022,\
    \ 6, 127\n23 of 23\n131. Fang, M.; Cao, X.; Jia, J.; Gong, N. Local model poisoning\
    \ attacks to Byzantine-Robust federated learning. In Proceedings of the\n29th\
    \ USENIX Security Symposium (USENIX Security 20), Boston, MA, USA, 12–14 August\
    \ 2020; pp. 1605–1622.\n132. Shejwalkar, V.; Houmansadr, A.; Kairouz, P.; Ramage,\
    \ D. Back to the drawing board: A critical evaluation of poisoning attacks on\n\
    production federated learning. In Proceedings of the 2022 IEEE Symposium on Security\
    \ and Privacy (SP), San Francisco, CA,\nUSA, 22–26 May 2022; pp. 1354–1371.\n\
    133. Majeed, A.; Hwang, S.O. A Privacy-Assured Data Lifecycle for Epidemic-Handling\
    \ Systems. Computer 2022, 55, 57–69. [CrossRef]\n134. Luo, X.; Wu, Y.; Xiao, X.;\
    \ Ooi, B.C. Feature inference attack on model predictions in vertical federated\
    \ learning. In Proceedings of\nthe 2021 IEEE 37th International Conference on\
    \ Data Engineering (ICDE), Chania, Greece, 19–22 April 2021.\n135. Qiu, P.; Zhang,\
    \ X.; Ji, S.; Du, T.; Pu, Y.; Zhou, J.; Wang, T. Your Labels Are Selling You Out:\
    \ Relation Leaks in Vertical Federated\nLearning. IEEE Trans. Dependable Secur.\
    \ Comput. 2022. [CrossRef]\n136. Ha, T.; Dang, T.K. Inference attacks based on\
    \ GAN in federated learning. Int. J. Web Inf. Syst. 2022. [CrossRef]\n137. Rassouli,\
    \ B.; Varasteh, M.; Gunduz, D. Privacy Against Inference Attacks in Vertical Federated\
    \ Learning.\narXiv 2022,\narXiv:2207.11788.\n138. Zhang, J.; Zhang, J.; Chen,\
    \ J.; Yu, S. Gan enhanced membership inference: A passive local attack in federated\
    \ learning. In\nProceedings of the ICC 2020-2020 IEEE International Conference\
    \ on Communications (ICC), Dublin, Ireland, 7–11 June 2020.\n139. Xie, Y.; Chen,\
    \ B.; Zhang, J.; Wu, D. Defending against Membership Inference Attacks in Federated\
    \ learning via Adversarial\nExample. In Proceedings of the 2021 17th International\
    \ Conference on Mobility, Sensing and Networking (MSN), Exeter, UK,\n13–15 December\
    \ 2021.\n140. Zhang, Y.; Zhou, H.; Wang, P.; Yang, G. Black-box based limited\
    \ query membership inference attack. IEEE Access 2022. [CrossRef]\n141. Lee, H.;\
    \ Kim, J.; Ahn, S.; Hussain, R.; Cho, S.; Son, J. Digestive neural networks: A\
    \ novel defense strategy against inference attacks\nin federated learning. Comput.\
    \ Secur. 2021, 109, 102378. [CrossRef]\n142. Rodríguez-Barroso, N.; Jiménez-López,\
    \ D.; Luzón, M.V.; Herrera, F.; Martínez-Cámara, E. Survey on federated learning\
    \ threats:\nConcepts, taxonomy on attacks and defences, experimental study and\
    \ challenges. Inf. Fusion 2022, 90, 148–173. [CrossRef]\n143. Gosselin, R.; Vieu,\
    \ L.; Loukil, F.; Benoit, A. Privacy and Security in Federated Learning: A Survey.\
    \ Appl. Sci. 2022, 12, 9901.\n[CrossRef]\n144. Zhang, C.; Xie, Y.; Bai, H.; Yu,\
    \ B.; Li, W.; Gao, Y. A survey on federated learning. Knowl. Based Syst. 2021,\
    \ 216, 106775. [CrossRef]\n145. Chen, Y.; Chai, Z.; Cheng, Y.; Rangwala, H. Asynchronous\
    \ federated learning for sensor data with concept drift. In Proceedings of\nthe\
    \ 2021 IEEE International Conference on Big Data (Big Data), Orlando, FL, USA,\
    \ 15–18 December 2021; pp. 4822–4831.\n146. Nawaz, M.S.; Fournier-Viger, P.; Shojaee,\
    \ A.; Fujita, H. Using artiﬁcial intelligence techniques for COVID-19 genome analysis.\n\
    Appl. Intell. 2021, 51, 3086–3103. [CrossRef]\n147. Boopalan, P.; Ramu, S.P.;\
    \ Pham, Q.V.; Dev, K.; Maddikunta, P.K.; Gadekallu, T.R.; Huynh-The, T. Fusion\
    \ of Federated Learning\nand Industrial Internet of Things: A survey. Comput.\
    \ Netw. 2022, 212, 109048. [CrossRef]\n148. Ma, X.; Zhu, J.; Lin, Z.; Chen, S.;\
    \ Qin, Y. A state-of-the-art survey on solving non-IID data in Federated Learning.\
    \ Future Gener.\nComput. Syst. 2022, 135, 244–258. [CrossRef]\n149. Duan, S.;\
    \ Liu, C.; Cao, Z.; Jin, X.; Han, P. Fed-DR-Filter: Using global data representation\
    \ to reduce the impact of noisy labels on\nthe performance of federated learning.\
    \ Future Gener. Comput. Syst. 2022, 137, 336–348. [CrossRef]\n150. Yoo, J.H.;\
    \ Son, H.M.; Jeong, H.; Jang, E.H.; Kim, A.Y.; Yu, H.Y.; Jeon, H.J.; Chung, T.M.\
    \ Personalized federated learning with\nclustering: Non-IID heart rate variability\
    \ data application. In Proceedings of the 2021 International Conference on Information\n\
    and Communication Technology Convergence (ICTC), Jeju Island, Korea, 20–22 October\
    \ 2021.\n"
  inline_citation: (Majeed et al., 2022)
  journal: Big data and cognitive computing
  limitations:
  - The paper does not provide a detailed analysis of the security and privacy risks
    associated with FL. This is an important consideration, as FL can potentially
    be used to compromise patient privacy.
  - The paper does not discuss the regulatory landscape for FL. This is an important
    consideration, as FL may be subject to different regulations in different jurisdictions.
  pdf_link: https://www.mdpi.com/2504-2289/6/4/127/pdf?version=1667527631
  publication_year: 2022
  relevance_evaluation:
    '0.0-0.19: Not relevant - Fails to address the point or provide any useful information.': null
    ? '0.2-0.39: Minimally relevant - Only briefly touches on the point with information
      that is of questionable value, reliability, or timeliness.'
    : null
    ? '0.4-0.49: Marginally relevant - Mostly tangential to the main issues of the
      point, with information of limited insight, credibility, or meaningfulness.'
    : null
    ? '0.5-0.59: Somewhat relevant - Addresses aspects of the point, but has significant
      limitations in scope, depth, reliability, or value of information.'
    : null
    ? '0.6-0.69: Moderately relevant - Provides useful information for the point,
      but has some notable gaps in addressing key issues or limitations in insight,
      credibility, or timeliness.'
    : null
    ? '0.7-0.79: Very relevant - Directly informs the point with reliable and valuable
      information, but may have minor limitations in scope, depth, or recency.'
    : null
    ? '0.8-0.89: Highly relevant - Addresses key issues of the point with novel, credible,
      and meaningful information. Adds substantial value to the review.'
    : '0.9'
    ? '0.9-1.0: Exceptionally relevant - Comprehensively addresses all key aspects
      of the point with highly insightful, reliable, and up-to-date information. A
      must-include for the review.'
    : null
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  title: Applications and Challenges of Federated Learning Paradigm in the Big Data
    Era with Special Emphasis on COVID-19
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1186/s13677-020-00202-w
  analysis: '>'
  apa_citation: Wang, T., Wang, P., Cai, S., Ma, Y., Liu, A., & Xie, M. (2020). A
    unified trustworthy environment based on edge computing in industrial IoT. IEEE
    Transactions on Industrial Informatics, 16(9), 6083-6091.
  authors:
  - Wen Hui Mo
  - Tian Wang
  - Shaobo Zhang
  - Jinhuan Zhang
  citation_count: 28
  explanation: 'The paper explores the use of advanced sensing technologies, such
    as hyperspectral imaging and thermal sensing, for non-invasive plant stress detection.


    *Hyperspectral imaging:* This technology captures images of plants in hundreds
    of narrow spectral bands, providing detailed information about the plant''s reflectance
    and absorption characteristics. By analyzing these images, researchers can identify
    subtle changes in the plant''s spectral signature that may indicate stress.


    *Thermal sensing:* This technology measures the temperature of plant leaves. Plants
    that are under stress often exhibit changes in their temperature, which can be
    detected using thermal imaging cameras. By monitoring changes in temperature,
    researchers can identify plants that may be experiencing stress.


    These advanced sensing technologies provide valuable tools for non-invasive plant
    stress detection. They can help researchers to identify plants that are under
    stress early on, before visible symptoms appear. This information can then be
    used to develop management strategies to mitigate the effects of stress and improve
    plant health and productivity.'
  extract_1: 'Although active trust acquisition has some advantages, there is still
    room for further research. In this paper, an Active and Verifiable Trust Evaluation
    (AVTE) approach is proposed to identify the credibility of IoT devices, so to
    ensure reliable data collection for Edge Computing with low cost. The main innovations
    of the AVTE approach compared with the existing work are as follows:


    (1) The AVTE method proposes an active trust detection strategy with active detection
    and feedback. The existing active trust detection strategy only initiates active
    detection without feedback. Thus, most of the trust acquisition occurs between
    neighboring nodes, which seriously affects the effectiveness of the strategy.
    The AVTE approach proposed in this paper requires the receiving node to return
    the information of the transmitted packet to confirm whether the packet received
    or not. Therefore, the trust acquisition of the AVTE approach is a verifiable
    method with higher reliability of trust acquisition ensured. It is different from
    the previous trust acquisition method which are not verifiable.


    (2) The AVTE method proposes a method to return verification information of multiple
    data packets at one time to reduce the node energy cost of returning feedback.
    Previous methods do not return a verification message or the cost of returning
    verification is high. In the method proposed in this paper, the node returns the
    encoding of the verification. We can know which packets successfully received
    by explaining the encoding. At the same time, the length of the encoding is the
    same as the information length of a packet, so the feedback information can obtain
    the verification message at a very low cost. In addition, the strategy of this
    article also uses initiation and verification of adaptive active trust detection
    according to the different energy consumption of IoT devices, so as to reliably
    obtain the trust of devices under the premise of ensuring network lifetime.'
  extract_2: To address the challenges of real-time and automated data collection,
    this paper proposes an Active and Verifiable Trust Evaluation (AVTE) approach
    for edge computing. The AVTE approach utilizes advanced sensing technologies,
    such as hyperspectral imaging and thermal sensing, for non-invasive plant stress
    detection. These technologies provide detailed information about the plant's reflectance
    and absorption characteristics, as well as its temperature. By analyzing changes
    in these parameters, the AVTE approach can identify plants that are under stress
    early on, before visible symptoms appear. This information can then be used to
    develop management strategies to mitigate the effects of stress and improve plant
    health and productivity.
  full_citation: '>'
  full_text: ">\nRESEARCH\nOpen Access\nAn active and verifiable trust evaluation\n\
    approach for edge computing\nWen Mo1, Tian Wang2, Shaobo Zhang3 and Jinhuan Zhang1*\n\
    Abstract\nBillions of Internet of Thing (IoT) devices are deployed in edge network.\
    \ They are used to monitor specific event,\nprocess and to collect huge data to\
    \ control center with smart decision based on the collected data. However,\nsome\
    \ malicious IoT devices may interrupt and interfere with normal nodes in data\
    \ collection, causing damage to\nedge network. Due to the open character of the\
    \ edge network, how to identify the credibility of these nodes,\nthereby identifying\
    \ malicious IoT devices, and ensure reliable data collection in the edge network\
    \ is a great\nchallenge. In this paper, an Active and Verifiable Trust Evaluation\
    \ (AVTE) approach is proposed to identify the\ncredibility of IoT devices, so\
    \ to ensure reliable data collection for Edge Computing with low cost. The main\n\
    innovations of the AVTE approach compared with the existing work are as follows:\
    \ (1) In AVTE approach, the trust\nof the device is obtained by an actively initiated\
    \ trusted detection routing method. It is fast, accurate and targeted.\n(2) The\
    \ acquisition of trust in the AVTE approach is based on a verifiable method and\
    \ it ensures that the trust\ndegree has higher reliability. (3) The trust acquisition\
    \ method proposed in this paper is low-cost. An encoding\nreturned verification\
    \ method is applied to obtain verification messages at a very low cost. This paper\
    \ proposes an\nencoding returned verification method, which can obtain verification\
    \ messages at a very low cost. In addition, the\nstrategy of this paper adopts\
    \ initiation and verification of adaptive active trust detection according to\
    \ the different\nenergy consumption of IoT devices, so as to reliably obtain the\
    \ trust of device under the premise of ensuring\nnetwork lifetime. Theoretical\
    \ analysis shows that AVTE approach can improve the data collection rate by 0.5\
    \ ~\n23.16% while ensuring long network lifetime compared with the existing scheme.\n\
    Keywords: Edge computing, Data collection, Active trust, Verifiable trust, Trust\
    \ evolution\nIntroduction\nWith the development of Internet of Things (IoT),\n\
    there will be more than 20 billion IoT devices by\n2020 [1–3]. Most of these IoT\
    \ devices are deployed\nat the edge of the network [4–6]. Due to the huge\nnumber\
    \ of these IoT devices and the development of\nmicro-processing technology, their\
    \ computing and\nstorage capabilities have greatly improved. For ex-\nample, the\
    \ computing and storage capacity of mobile\nphones\nnow\nexceeds\nthat\nof\npersonal\n\
    computers\nmore than 10 years ago [7–9]. These huge changes\nhave led to extremely\
    \ huge computing and storage\ncapacity of the edge network, so the current network\n\
    computing center is transferred from the network\ncenter to the edge of the network,\
    \ forming an emer-\nging computing model such as Edge Computing (EC)\nor Fog Computing\
    \ [1, 10–12]. Because most applica-\ntions are based on the data sensed and acquired\
    \ by\nIoT devices [13, 14], many emerging applications\nsensitive to latency and\
    \ bandwidth, such as virtual\nreality,\naugmented\nreality\nand\ninfrastructure\n\
    for\nsmart cities, benefit from edge computing. In the\npast, data needs to be\
    \ sent to the cloud over a long\ndistance, and the results of the cloud center\
    \ are\nreturned to the user through a long path. The edge\ncomputing is closer\
    \ to the data source, which can\nreduce long delay, packet loss and large energy\
    \ con-\nsumption [15–18].\n© The Author(s). 2020 Open Access This article is licensed\
    \ under a Creative Commons Attribution 4.0 International License,\nwhich permits\
    \ use, sharing, adaptation, distribution and reproduction in any medium or format,\
    \ as long as you give\nappropriate credit to the original author(s) and the source,\
    \ provide a link to the Creative Commons licence, and indicate if\nchanges were\
    \ made. The images or other third party material in this article are included\
    \ in the article's Creative Commons\nlicence, unless indicated otherwise in a\
    \ credit line to the material. If material is not included in the article's Creative\
    \ Commons\nlicence and your intended use is not permitted by statutory regulation\
    \ or exceeds the permitted use, you will need to obtain\npermission directly from\
    \ the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.\n\
    * Correspondence: jinhuan_zhang@csu.edu.cn\n1School of Computer Science and Engineering,\
    \ Central South University,\nChangsha 410083, China\nFull list of author information\
    \ is available at the end of the article\nJournal of Cloud Computing:\nAdvances,\
    \ Systems and Applications\nMo et al. Journal of Cloud Computing: Advances, Systems\
    \ and Applications\n           (2020) 9:51 \nhttps://doi.org/10.1186/s13677-020-00202-w\n\
    However, the Edge network is an open network with\nvarious IoT devices in various\
    \ forms connected [19–21].\nFor example, Luo et al. [4] gave a typical application\
    \ of\nsmart city as shown in Fig. 1. In smart city, a large num-\nber of IoT devices,\
    \ most of which are wireless sensing\ndevices, are deployed in various applications\
    \ in the city\nto realize the perception of the surrounding environ-\nment [4,\
    \ 9, 22, 23]. These sensing devices are relatively\nsimple and do not have the\
    \ ability to communicate dir-\nectly with the Internet [4, 9, 24]. They are often\
    \ self-\norganized into networks [25–27]. Sensing devices on the\nroadside act\
    \ as gateway to collect the data of the entire\nnetwork [4], and then send the\
    \ collected data to the\npassing mobile vehicles [28–30]. Due to the advanced\n\
    hardware of mobile vehicles, they can communicate dir-\nectly with the Internet.\
    \ Thus, the low-cost opportunistic\nrouting method can establish data communication\
    \ with\nthe edge network [4, 9, 31, 32]. Such a data collection\nmethod has been\
    \ widely applied in the current edge net-\nwork due to its low cost [4, 9].\n\
    In such a network, many IoT devices are generally self-\norganized into a network\
    \ [4, 33]. One or more nodes are\nselected as data collection nodes. The data\
    \ collection\nnodes have different names in different networks [4]. In\nwireless\
    \ sensor networks (WSNs), the data collection node\nis called sink [34, 35], and\
    \ the data collection node is gate-\nway in the application shown in Fig. 1 [4].\
    \ A common fea-\nture of these networks is that the data collection node is\n\
    the center. All other nodes transmit their data to the data\ncollection node through\
    \ multi-hop routing [36, 37]. How-\never, an important issue is the security of\
    \ data collection\n[36–39]. Because of the network openness, many IoT de-\nvices\
    \ can be added to the network autonomously [40, 41].\nThus, the malicious IoT\
    \ devices will maliciously prevent\nthe normal data collection. The most common\
    \ is an attack\ncalled black hole [36, 42]. In such an attack, malicious\nnodes\
    \ drop all packets forwarded by themselves to destroy\nthe data collection [42].\
    \ The other is called selective for-\nwarding attack (SFA), which is a smart attack\
    \ [43]. In SFA\nattacks, malicious nodes are not as simple as black hole\ndropping\
    \ data packets, but selectively dropping packets of\nsome nodes [43]. Therefore,\
    \ there is a certain packet loss\nrate in the wireless network. The malicious\
    \ nodes can se-\nlectively drop some packets to effectively protect them-\nselves\
    \ from being discovered, so that they can initiate\nattacks at a critical time\
    \ to cause longer-term and worse\ndamage [43]. The data-based applications rely\
    \ heavily on\nobtaining data consistency. The insecure behaviors such\nas the\
    \ interception of data by malicious nodes can cause\nthe loss of packets, which\
    \ can cause the control center to\nmake wrong decision in case of lack of data\
    \ [43], further\ncausing serious losses. Therefore, it is an important issue\n\
    in the edge network to identify malicious nodes so as to\nclear them from the\
    \ network or do not forward the data\nthrough them to avoid packet loss.\nThere\
    \ are currently some related studies on protecting\ndata collection. The studies\
    \ are divided into two categor-\nies. The first type is targeted strategies to\
    \ resist attacks.\nThe main idea of the strategy is to take corresponding\nactions\
    \ against attacks based on the characteristics of\nmalicious nodes attacks, thereby\
    \ invalidating the attack.\nFor example, Liu et al. [42] proposed a Security and\n\
    Energy-efficient Disjoint route (SEDR) strategy against\nblack attack. In the\
    \ SEDR scheme, data packets are di-\nvided into T shares through (T, M) -threshold\
    \ secret-\nsharing algorithm, which use the same hop routing\nmethod to route\
    \ to as far apart as possible, and then to\nthe sink. As long as the M shares\
    \ in the T shares can\nFig. 1 The IoT devices in edge network for smart city\n\
    Mo et al. Journal of Cloud Computing: Advances, Systems and Applications     \
    \       (2020) 9:51 \nPage 2 of 19\nreach the sink safely, the packet can be successfully\
    \ re-\ncovered. In this way, SEDR uses multiple separate routes\nto reduce the\
    \ probability of being attacked by malicious\nnodes and to increase the probability\
    \ of data successfully\ntransmitted to the sink. The method is designed for a\n\
    specific attack, so it is highly targeted and effective.\nHowever, the disadvantage\
    \ is that the adaptability is nar-\nrow and it is generally ineffective for other\
    \ attacks. An-\nother shortcoming is the high cost of the strategy. There\nare\
    \ two reasons for the high cost. First, the implementa-\ntion cost of the strategy\
    \ is high with the packet divided\ninto T shares. Due to the redundancy among\
    \ the T\nshares, the sink only needs to receive the M shares to re-\ncover the\
    \ entire data packet. Obviously, there is at least\nT-M shares of redundancy.\
    \ Because the main energy\nconsumption of wireless nodes is caused by the data\n\
    transmission. The strategy pays for additional energy\nconsumption, which affects\
    \ its lifetime. The other is that\nthe data will be lost after the network attacked.\
    \ Then, t\nthe network will pay a huge price for wrong decisions.\nThe other type\
    \ is a generally applicable method of\ndefending against attacks. The most important\
    \ method\nof defending against attacks is a strategy based on trust\n[5, 6, 11,\
    \ 14, 30, 34, 36]. This type of strategy is not de-\nsigned for a specific attack\
    \ behavior, but adopts the cor-\nresponding data routing strategy to obtain the\
    \ trust\nstatus of the node. If the behavior of the node conforms\nto the expected\
    \ behavior, the node is considered to be\ntrustworthy, and its trust is increased.\
    \ Otherwise, its\ntrust is reduced [36]. After obtaining the node’s trust\nstatus,\
    \ a node with high trust is selected as relay node to\navoid the selection of\
    \ malicious nodes when nodes\ntransmit data, which can increase the probability\
    \ of suc-\ncessfully data transmission to the sink [36]. Obviously,\nthe behavior\
    \ of trusted nodes is in line with expecta-\ntions, and the behavior of dropping\
    \ packets is not in line\nwith expectations, thus the trust level is reduced.\
    \ The\nstrategy of using trust-based defense against attacks is\nnot aimed at\
    \ a specific attack, and it is effective for most\nnetwork attacks. Therefore,\
    \ it is a generally applicable\nmethod to resist attacks [36]. Relatively speaking,\
    \ the\ncost of the method of obtaining trust is low.\nThe premise of trust-based\
    \ attack defense methods\nis to obtain the trust of the node. However, how to\n\
    effectively obtain the trust of the node is a challenge\nissue [36]. The main\
    \ difficulties are as follows: (1)\nObserving the behavior of nodes is actually\
    \ very diffi-\ncult in the edge network. Because IoT devices have\nlimited energy\
    \ and hardware, their communication ra-\ndius is small. Besides, they are deployed\
    \ in some spe-\ncific areas. It is difficult to observe the behavior of\nnodes\
    \ forwarding data. Obviously, it is difficult to\njudge the trust degree of a\
    \ node without observing\nthe behavior of the node; (2) The node energy is very\n\
    limited and the low lost trust system is needed to be\ndesigned.\nSome strategies\
    \ based on trust to resist attacks have\nbeen proposed. These studies are divided\
    \ into two cat-\negories according to the way they gain trust: (1) Strat-\negies\
    \ for passive trust acquisition methods [6, 11, 30]. In\nthis trust-based strategy,\
    \ the system only observes the\ninteraction behavior of nodes, but the system\
    \ itself does\nnot take action. These studies obtain the trust degree of\nnodes\
    \ by observing the behavior of nodes, trust reason-\ning and evolution methods,\
    \ and then take appropriate\ndata collection strategies to avoid attacks according\
    \ to\nthe trust degree of nodes; (2) The other is the strategy of\nactive trust\
    \ acquisition [5, 34, 36]. Liu et al. first pro-\nposed an active trust acquisition\
    \ method called Active-\nTrust for WSN [36]. In the proposed method, the node\n\
    actively initiates a detection route and the data packet of\nthe detection route\
    \ is empty. However, the attacker does\nnot know that it is a detection route.\
    \ When the attacker\ninitiates an attack, it will be exposed, thereby reducing\n\
    trust degree. Obviously, this method can be initiated ac-\ntively according to\
    \ the needs of the application, which\naccelerates the speed and accuracy of trust\
    \ acquisition,\nand thus has higher efficiency [36].\nAlthough active trust acquisition\
    \ has some advantages,\nthere is still room for further research. In this paper,\
    \ an\nActive and Verifiable Trust Evaluation (AVTE) approach\nis proposed to identify\
    \ the credibility of IoT devices, so\nto ensure reliable data collection for edge\
    \ computing\nwith low cost. The main innovations of the AVTE ap-\nproach compared\
    \ with the existing work are as follows:\n(1) The AVTE method proposes an active\
    \ trust\ndetection strategy with active detection and\nfeedback. The existing\
    \ active trust detection\nstrategy only initiates active detection without\nfeedback.\
    \ Thus, most of the trust acquisition occurs\nbetween neighboring nodes, which\
    \ seriously affects\nthe effectiveness of the strategy. The AVTE\napproach proposed\
    \ in this paper requires the\nreceiving node to return the information of the\n\
    transmitted packet to confirm whether the packet\nreceived or not. Therefore,\
    \ the trust acquisition of\nthe AVTE approach is a verifiable method with\nhigher\
    \ reliability of trust acquisition ensured. It is\ndifferent from the previous\
    \ trust acquisition method\nwhich are not verifiable.\n(2) The AVTE method proposes\
    \ a method to return\nverification information of multiple data packets at\none\
    \ time to reduce the node energy cost of\nreturning feedback. Previous methods\
    \ do not return\na verification message or the cost of returning\nverification\
    \ is high. In the method proposed in this\npaper, the node returns the encoding\
    \ of the\nMo et al. Journal of Cloud Computing: Advances, Systems and Applications\
    \            (2020) 9:51 \nPage 3 of 19\nverification. We can know which packets\n\
    successfully received by explaining the encoding. At\nthe same time, the length\
    \ of the encoding is the\nsame as the information length of a packet, so the\n\
    feedback information can obtain the verification\nmessage at a very low cost.\
    \ In addition, the strategy\nof this article also uses initiation and verification\
    \ of\nadaptive active trust detection according to the\ndifferent energy consumption\
    \ of IoT devices, so as\nto reliably obtain the trust of devices under the\npremise\
    \ of ensuring network lifetime.\nThe rest of the paper is organized as follows.\
    \ Related\nworks are reviewed in Section 2. In Section 3, we de-\nscribe the system\
    \ model and formulate the problem of\nAVTE scheme. Sections 4 presents the detailed\
    \ design of\nAVTE scheme. The proposed AVTE scheme is evaluated\nin Section 5.\
    \ We conclude in Section 6.\nRelated works\nDue to the rapid improvement of the\
    \ computing,\nstorage, and perception capabilities of IoT devices,\nIoT devices\
    \ are widely deployed in various applica-\ntions [44–46]. Although the storage\
    \ and computing\npower of a single IoT device is relatively small [47],\nthe massive\
    \ amount of IoT devices deployed to the\nedge of the network have huge computing\
    \ and stor-\nage capabilities. With more and more services are de-\nployed\nto\n\
    the\nnetwork\nedge,\ncurrent\nnetwork\nis\ntransferred from the cloud of the network\
    \ to the edge\nof the network. Many applications are calculated on\nthe edge of\
    \ the network. Because the edge of the net-\nwork is close to the data source,\
    \ and the calculated\nresult is also close to the user, so the data and results\n\
    returned to the user do not need to go through a\nlong transmission path like\
    \ cloud computing, which\nbrings users a higher Quality of Experiment (QoE)\n\
    [48, 49]. Due to the current development of artificial\nintelligence technology\
    \ [12, 31, 38, 39], the develop-\nment of edge networks and edge computing is\
    \ in the\nascendant [48, 50]. Secure data collection is an im-\nportant guarantee\
    \ for the applications development\n[27, 34, 37, 51, 52]. Therefore, how to ensure\
    \ the\nsafety of data collection is an important research issue\nand there have\
    \ been quite a lot of researchers focus-\ning on it [53–55]. Some related research\
    \ results are\ngiven below in this section.\nThis article divides the studies\
    \ into two categories ac-\ncording to the targets of defending security attacks\
    \ in\ndata collection. One is the security strategies for specific\nattack behaviors\
    \ [36, 37, 41, 43]. The other is the trust-\nbased security data collection strategies\
    \ [5, 6, 11, 14, 30,\n34, 36]. Trust-based strategies are divided into active\n\
    trust acquisition strategies and passive trust acquisition\nstrategies.\nDefense\
    \ strategies for specific attacks\nThis type of data collection strategy for specific\
    \ attack\nbehavior based on the characteristics of the attack\nadopts corresponding\
    \ defense strategies. The following\ngives several important types of security\
    \ strategies pro-\nposed for specific security attacks.\n(1) Strategies to resist\
    \ dropping packet attacks\nBlack hole attack and SFA are the most widespread of\n\
    these types of attacks [36, 42, 43]. Black hole attack is such\nan attack that\
    \ malicious nodes drop all received data\npackets, which is similar to all data\
    \ packets sent to mali-\ncious nodes as if entering black hole, so it is called\
    \ black\nhole attack [36, 42]. SFA is a more difficult attack to resist.\nIf all\
    \ data packets are dropped, it is easy to find, so the\nsurvival time of malicious\
    \ nodes is not long. In SFA, mali-\ncious nodes only drop a part of the packets\
    \ selectively,\neven are the same as the normal node for a long period of\ntime,\
    \ but they drop important data in critical periods. In\nthis way, malicious nodes\
    \ not only protect themselves, but\nalso bring harm to the network. It is also\
    \ known as gray\nhole attack [43]. For the black hole attack, the SEDR strat-\n\
    egy proposed by Liu et al. [42] is mentioned earlier. In\nfact, the strategy is\
    \ to send packets to the sink through\nmulti-hop routing at the same time. Even\
    \ if some routes\nare attacked, as long as a route successfully reaches the\n\
    sink, it can guarantee the packets collection. In short, the\nbasic principle\
    \ of this type of method is to send redundant\npackets. Whether it is the method\
    \ of sending multiple\nslices or the method of multi-routes, the key idea is\n\
    exploiting multiple routes. Even if one or more routes are\nblocked, it is still\
    \ possible to guarantee the security collec-\ntion of packets. Relatively speaking,\
    \ SFA is more difficult\nto resist. Xiao et al. [43] proposed a more classic strategy\n\
    named CHEMAS (checkpoint-based multi-hop acknow-\nledgement scheme) to resist\
    \ selective forwarding attacks.\nThe method of the CHEMAS mechanism is to select\
    \ a\ncertain number of nodes as checkpoint nodes in the rout-\ning path from the\
    \ source node to the sink. Once the\ncheckpoint node receives the data packet,\
    \ it returns an\nACK packet to the upstream of the data source. The ACK\npacket\
    \ contains a time to live (TTL) that the ACK can\nsurvive. Each time the ACK packet\
    \ passes a detection\nnode, its TTL number is reduced by 1. If the TTL is 0,\n\
    ACK packet is discarded. After the node forwards the\ndata, it waits for the arrival\
    \ of ACK packets. If the node\ndoes not receive the expected number of ACK packets,\
    \ it\nsends a warning message to the source node [43].\n(2) Defend against Sinkhole\
    \ attack [37]\nMo et al. Journal of Cloud Computing: Advances, Systems and Applications\
    \            (2020) 9:51 \nPage 4 of 19\nSinkhole attack is such an attack behavior.\
    \ In WSNs,\nmost data routing strategies rely on hop-based routing.\nEach node\
    \ selects a node with a smaller hop count as\nthe next hop node for data routing.\
    \ In response to this,\nmalicious nodes claim that they have a smaller number\n\
    of hops to the sink, and broadcast their own hops to the\nsink. Therefore, neighbor\
    \ nodes will choose malicious\nnodes as the next hop. Neighbor nodes then spread\n\
    routing messages outward, so that the data of nodes\nwithin the scope of Sinkhole\
    \ will be routed to malicious\nnodes, then malicious nodes drop the data collected\
    \ by\nthese nodes [37]. This causes the data of nodes within a\ncertain range\
    \ cannot be collected by sink. Liu et al. [37]\nproposed a better strategy for\
    \ detecting and avoiding\nsinkholes. The main idea is to send a detection packet\
    \ to\nsink every other detection cycle with a certain probabil-\nity while the\
    \ node normally sends data, and ask sink to\nreturn a confirmation packet. The\
    \ confirmation packet\nmust contain the sink’s digital signature, confirming that\n\
    its identity is true. If the node does not receive the re-\nturn message of the\
    \ true sink, it indicates that there is a\nsinkhole. Then take the far-sink routing\
    \ method to avoid\nthe influence of the sinkhole and to find the true sink.\n\
    Then, notify the true sink to take measures to clear the\nsinkhole.\nThere are\
    \ many security strategies for specific attack\nbehaviors, such as how to resist\
    \ clone attacks [48], and\ninjection attacks [49], etc. Due to space limitations,\
    \ they\nare not discussed one by one.\nTrust-based security strategy\nThe main\
    \ idea of this type of research is to evaluate the\ntrust of nodes. The nodes\
    \ that faithfully fulfill their com-\nmitments have a higher trust, while the\
    \ nodes that be-\nhave badly are given a low trust evaluation, thereby\navoiding\
    \ the participation of low-trust nodes in the data\ncollection process.\nThe total\
    \ trust degree of a node is based on the inte-\ngration of trust degree in the\
    \ recent period. The simplest\nmethod used for the synthesis of trust degree is\
    \ the aver-\nage value of trust degree evaluation [36]. In practice,\nmost studies\
    \ use the principle of prioritization of recent\ninformation. The trust value\
    \ closest to the current time\nis more important, and the further away from the\n\
    current time the trust value becomes less important.\nTherefore, the trust value\
    \ closer to the current time is\ngiven greater weight, and the trust value further\
    \ away\nfrom the current time is given less weight. Integrating\nthe trust degree\
    \ weighting for a period of time forms a\ncomprehensive trust degree evaluation\
    \ [36].\nExpanding the trust relationship is a method to enrich\nthe trust relationship.\
    \ The most commonly used mechan-\nism is the reasoning and evolution of trust\
    \ [5, 11, 14, 30].\nInfer the unknown trust relationship through the existing\n\
    direct trust relationship, which can enrich the trust rela-\ntionship and make\
    \ the trust evaluation scope wider. The\nmain idea of this type of research is\
    \ that trust is divided\ninto two types. One type is direct trust [36], that is,\
    \ there\nis direct interaction between nodes, and the trust evalu-\nation of the\
    \ other party is obtained according to the result\nof direct interaction. The\
    \ other type is indirect trust [36].\nAlthough there is no direct interaction\
    \ between the two\nnodes, there are indirectly interacted nodes, so an indirect\n\
    trust relationship can be established. The calculation of in-\ndirect trust generally\
    \ adopts the principle of trust multipli-\ncation. The product of the trust of\
    \ the nodes on the\ntransfer path is the indirect trust. In this way, indirect\
    \ trust\nis actually a way of decay. Nodes can evaluate the trust of\nmany nodes\
    \ in the network according to the reasoning\nand evolution mechanism of trust.\
    \ Finally, select the col-\nlaborators based on the nodes of the trust evaluation.\
    \ But\nthe biggest disadvantage of this kind of method is that the\naccuracy of\
    \ indirect trust is difficult to verify. In addition,\nin such a trust inference\
    \ mechanism, the number of nodes\nthat a node directly interacts with is small,\
    \ and the reliabil-\nity of trust reasoning decreases sharply as the level of\
    \ rea-\nsoning increases, making the results unreliable. Therefore,\nnodes often\
    \ only get few the trust status of some nodes,\nwhile the trust status of most\
    \ nodes may not be obtained.\nIn traditional research, the acquisition of trust\
    \ is a pas-\nsive acquisition method [6, 11, 30]. This is because the\ntrusted\
    \ evaluator does not take any special actions to\ngain trust, but only observe\
    \ the interaction behavior of\nthe evaluated object [6, 11, 30]. Then, the trust\
    \ evalu-\nation value is given based on the interaction behavior of\nthe evaluated\
    \ object. The disadvantage of this passive\ntrust evaluation method is that the\
    \ obtained trust rela-\ntionship is relatively small, it takes a long time to\
    \ obtain\nthe trust value, and it cannot be applied to the network\nwith strong\
    \ dynamic change. Moreover, if the acquisi-\ntion speed of the trust value is\
    \ less than the speed of the\ndynamic change of the network, the acquisition of\
    \ the\ntrust value becomes very limited. At the same time, this\nmethod cannot\
    \ perform on-demand and timely trust\nevaluation of key evaluated objects.\nAt\
    \ present, there are not many studies on active\ntrust acquisition. Liu et al.\
    \ [36] are the first re-\nsearchers to propose active trust. The main idea of\n\
    the proposed strategy is that the node actively initi-\nates some probe routes\
    \ with no data content, and if a\nnode launches an attack on it, its trust is\
    \ reduced, so\nthat it can obtain the trust status of more nodes in a\nshorter\
    \ time. However, in the strategy proposed by\nLiu et al. [36], data routing does\
    \ not return informa-\ntion. Therefore, non-neighbor nodes do not know\nwhich\
    \ node the data route has reached and the for-\nwarding situation of other nodes,\
    \ which leads to cer-\ntain\ndifficulties\nin\nits\naccurate\nand\nrapid\nMo et\
    \ al. Journal of Cloud Computing: Advances, Systems and Applications         \
    \   (2020) 9:51 \nPage 5 of 19\ndetermination of the trust value. Based on the\
    \ above\nanalysis, this paper proposes an active trust acquisi-\ntion strategy\
    \ based on encoded return data routing\ninformation, which has better meaning.\n\
    System model and problem statement\nThe network model\nThe network model used\
    \ in this article is similar to the\nnetwork model of Ref. [36]. A certain number\
    \ of wireless\nsensor nodes are deployed in a certain area, and there is a\nspecial\
    \ node called sink to collect data of the entire net-\nwork. The data of other\
    \ nodes is transmitted to sink\nthrough multi-hop routing. But the network model\
    \ in this\npaper is not only applicable to the typical planar wireless\nsensor\
    \ network of active trust scheme, but also applicable\nto the network sites in\
    \ many edge networks such as the\nlinear network formed by many wireless sensor\
    \ nodes de-\nployed along oil pipelines in industrial applications, and\nthe strip\
    \ network deployed along river channels. At the\nsame time, it is also suitable\
    \ for the network formed by\nmany IoT devices. For example, in the smart city\
    \ proposed\nby Luo et al. [4], many IoT devices are deployed in various\ncommunities,\
    \ and these IoT devices are self-organized\ninto a network. As shown in Fig. 2,\
    \ the nodes located on\nthe side of the road act as gateways or sinks and are\
    \ re-\nsponsible for data collection for the entire network. Other\nIoT devices\
    \ route their perceived data to the gateway node\nthrough multi-hop routing. When\
    \ the mobile vehicles\npass through the gateway communication range, the gate-\n\
    way node sends the collected data to the mobile vehicles,\nand the mobile vehicles\
    \ send the received data to the edge\nnetwork server to complete the data collection\
    \ (Fig. 2).\nThe energy consumption model and related definitions\nuse\na\ntypical\n\
    energy\nconsumption\nmodel.\nEq.\n(1)\nrepresents the transmission energy consumption,\
    \ Eq. (2)\nrepresents the reception energy consumption. Eelec rep-\nresents the\
    \ transmission circuit loss. The model uses\nfree space and multipath fading (d4\
    \ power loss) accord-\ning to the distance between the transmitter and the re-\n\
    ceiver (d2 power loss). εf s and εamp are respectively the\nenergy required for\
    \ power amplification in the two\nmodels. The energy consumption for receiving\
    \ l-bit\npackets is shown in Eq. (2). The above parameters are\nshown in Table\
    \ 1.\nEmember ¼ lEelec þ lεf sd2 if d≤d0\nEmember ¼ lEelec þ lεampd4 if d > d0\n\
    \x01\nð1Þ\nEr lð Þ ¼ lEelec\nð2Þ\nThe problem statements\nThe main objective of\
    \ this paper is to design a feedback\nstrategy based on data routing to improve\
    \ the data col-\nlection rate. The purpose of returning the data routing\ninformation\
    \ is to verify the correctness of the received\ndata, thereby identifying malicious\
    \ nodes, ensuring the\nsafety of data collection. There are three main problems\n\
    to be solved:\n(1) Maximize the data collection rate\nThe data collection rate\
    \ refers to the ratio of the num-\nber of data packets received to the total number\
    \ of data\npackets sent. Malicious nodes in the network will drop\nthe data packets,\
    \ thus affecting the data collection. Con-\nsidering that the number of data packets\
    \ sent is M, and\nFig. 2 The network model\nMo et al. Journal of Cloud Computing:\
    \ Advances, Systems and Applications            (2020) 9:51 \nPage 6 of 19\nthe\
    \ number of data packets that successfully reach the\nsink is N, the formula for\
    \ maximizing the data collection\nrate μ can be expressed as:\nmax μ\nð Þ ¼ max\
    \ N\nM\nð3Þ\n(2) Trust acquisition\nThe AVTE strategy can accurately and quickly\
    \ obtain\nthe trust value of a node. The given trust value depends\non the behavior\
    \ of the node. For the trusted node, the\ntrust value is high, while for the untrusted\
    \ node, the\ntrust value is low. When the trusted nodes generally\nshow high trust,\
    \ it means that the AVTE strategy can ef-\nfectively identify the trust of the\
    \ nodes. The average\ntrust degree of trusted nodes is defined as ξ, which is\n\
    used to reflect the ability of AVTE method to identify\nthe trust degree of nodes.\
    \ The average trust value is\nhigher, the ability to obtain the trust value is\
    \ stronger.\n(3) Network lifetime is maximized\nNetwork lifetime is related to\
    \ energy. Reducing the en-\nergy consumption of nodes can extend the lifetime\
    \ of the\nnetwork. We define the death time of the first node in the\nnetwork\
    \ as the network lifetime. If the energy consump-\ntion of node i is Ei, the longest\
    \ lifetime is expressed as\nmax T\nð Þ ¼ min max Ei\nð\nÞ\nð4Þ\nIn summary, the\
    \ research goal of this paper is as\nfollows:\nmax μ\nð Þ ¼ max N\nM\nmax ξ\n\
    ð Þ\nmax T\nð Þ ¼ min max Ei\nð\nÞ\n8\n>\n<\n>\n:\nð5Þ\nThe design of AVTE scheme\n\
    Research motivation\nActiveTrust scheme is one of the methods to effect-\nively\
    \ detect black hole attacks and obtain node trust.\nNodes actively initiate detection\
    \ routes and the data\npackets in the routes are empty. Empty packets rout-\n\
    ing will cause black hole attacks to expose the loca-\ntion\nof\ndamaged\nnodes\n\
    without\ncausing\nloss\nor\ndamage to data packets. However, there is room for\n\
    improvement in this active trust scheme. This paper\nhas\nimprovements\nmainly\n\
    in\nthe\nfollowing\nthree\naspects:\n(1) Add a feedback mechanism between the\
    \ source\nnode and the routing nodes to detect the\nreliability of the data received\
    \ by the node. By\nverifying whether the two packets are consistent,\ndetermine\
    \ whether there are data packets loss, so\nas to evaluate whether the trust value\
    \ is\nincreased or decreased.\n(2) The source node broadcasts an inquiry signal\
    \ and\nsends it to all routing nodes, requiring the\nrouting node to return feedback\
    \ information after\nreceiving all the data, instead of feeding back\nevery time\
    \ a packet received. Thus, the system\npays a low price.\n(3) Using the k data\
    \ packets as feedback signals\nconsumes more energy, we consider encoding k\n\
    data packets to a packet as a feedback signal\nafter k data encoding and XOR,\
    \ thereby reducing\nenergy consumption.\nAVTE design\nFigure 3 shows an overview\
    \ of the AVTE scheme that\nincludes detection routing, data routing, and feedback\n\
    signals.\nThe source node sends m packets at time t, and\nthe data is sent in\
    \ binary encoding. Assuming that\nm data are respectively encoded as n-bit binary\
    \ data,\nthe node in the network receives the data. At time\nt + a, the source\
    \ node broadcasts an inquiry signal,\nrequiring all routing nodes to return a\
    \ feedback sig-\nnal to the source node to confirm whether the node\nhas received\
    \ the packet sent by the source node.\nNodes\nencode\nand\nXOR\nthe\nreceived\n\
    k\n(k ≤ m)\npackets, and the obtained result is fed back to the\nsource node.\
    \ The source node compares the feed-\nback data routing information with the source\
    \ data\nto determine whether they are consistent. If they are\nconsistent, it\
    \ means that the behavior of transmitting\ndata is credible, which improves the\
    \ trust of nodes,\nand vice versa. Through feedback routing, the trust\nof the\
    \ nodes can be further improved. Select nodes\nwith high trust for data transmission,\
    \ thus ensuring\nthe security of data collection and at the same time\nfeeding\
    \ back the results of k data XOR, which can\nreduce energy cost.\nTable 1 Network\
    \ parameters\nParameter\nValue\nThreshold distance(d0)(m)\n87\nSensing range rs\
    \ (m)\n15\nEelec(nJ/bit)\n50\nef s(pJ/bit/m2)\n10\neamp(pJ/bit/m4)\n0.0013\nInitial\
    \ energy(J)\n0.5\nMo et al. Journal of Cloud Computing: Advances, Systems and\
    \ Applications            (2020) 9:51 \nPage 7 of 19\na.\nEncoding rules for source\
    \ data: After receiving the\nXOR result, we must determine the unique\ncomposition\
    \ of the target data and ensure that the\nresult of the XOR is unique after taking\
    \ any k of the\nm data.\nb. The composition form of the feedback signal: the\n\
    feedback signal includes not only k data encoding\nand XOR results, but also binary\
    \ encoding of the\nreceived data by the routing node, which is then fed\nback\
    \ to the source node as the prefix of XOR\nresults This can increase the uniqueness\
    \ of the\ntarget data determination.\nEncoding method of feedback signal\nAssuming\
    \ that ε data is uniformly encoded as a ζ bit\nbinary number b1b2b3…bζ, bζ takes\
    \ the value 0 or 1.\nEach data is uniquely determined after encoding, and\nthe\
    \ data sent is b1b2b3…bζ, b3b1bζ…b4,..., b2b3bζ…b4,\nbζb1b3…b2. Node receives\
    \ k data. After the operation\nof XOR, we get anan − 1a0bζb1b3…b2, where an =\
    \ 0 or\n1. anan − 1a0 is the binary encoding of the amount of\ndata received.\
    \ Assuming that b1b2b3…bζ ⊕ b3b1bζ…b4\n⊕ ... ⊕ b2b3bζ…b4 = bζb1b3…b2, it means\
    \ that the\nnode is reliable. If it does not exist, the following two\nreasons\
    \ are discussed.\nCase 1: If an2n + an − 12n − 1 + …a020 < k, it shows that\n\
    the received data is less than k, there is data lost during\nthe data transmission,\
    \ and the trust value needs to be\nreduced.\nCase 2: If an2n + an − 12n − 1 +\
    \ …a020 = k, the node\nmay indeed receive k data or may not. If a node re-\nceives\
    \ k data, but the feedback signal or the code bit\nof the received data is lost\
    \ when it is returned to the\nsource node, this will cause the source node to\
    \ make\nan error in the judgment of the amount of data re-\nceived. Therefore,\
    \ it cannot be verified successfully\nand the trust value also is reduced. If\
    \ not, it is similar\nto case 1.\nTheorem 1: Assuming that ε source data is repre-\n\
    sented by a binary digit of ζ, there is the most suitable\nvalue for ζ\nζ ¼\n\
    log2 ε þ 1\nð\nÞ − 1\n\x03\n\x04\nð6Þ\nProof: ζ bits are needed to be able to\
    \ represent ε data\ncompletely. And ζ bits can represent 20 + 21 + 22 + … +\n\
    2ζ = 2ζ + 1 − 1 numbers, so 2ζ + 1 − 1 ≥ ε. Considering en-\nergy consumption,\
    \ the length of ζ is not as long as pos-\nsible, because the more digits the more\
    \ energy is\nconsumed. Therefore, ζ is rounded up and ζ = ⌈log2(ε +\n1) − 1⌉.\n\
    It should be noted that if the result is not unique when\nx data of ζ-bit XOR,\
    \ the length of the code needs to be\nincreased.\nTheorem 2: Assuming that m data\
    \ is sent, n bits\nrepresent the amount of data received. The amount\nof data\
    \ received by each node is different, and the\nvalue of n is also different. The\
    \ range of n is:\nFig. 3 Illustration of AVTE scheme\nMo et al. Journal of Cloud\
    \ Computing: Advances, Systems and Applications            (2020) 9:51 \nPage\
    \ 8 of 19\n0≤n≤\nlog2 m þ 1\nð\nÞ − 1\n\x03\n\x04\nð7Þ\nProof: n bits can represent\
    \ 20 + 21 + 22 + … + 2n =\n2n + 1 − 1 data, and a node can receive up to m data.\n\
    2n + 1 − 1 ≤ m, that is n ≤ log2(m + 1) − 1, and n is an inte-\nger, so the maximum\
    \ value of n is:\nmax n\nð Þ ¼\nlog2 m þ 1\nð\nÞ − 1\n\x03\n\x04\nð8Þ\nTherefore,\
    \ the feedback signal is n +ζ bit. Once ζ is\ndetermined, each source data is\
    \ ζ bits and ζ-bit data\nXOR is still ζ bits. Thus, the feedback signal of each\n\
    node is fixed with ζ bits. By observing the previous n\nbits, we can know the\
    \ amount of data received by the\nnode. If all the sent data are lost, there is\
    \ no XOR re-\nsult, then n = 0.\nWe assume that the source node sends such a set\
    \ of\ndata: 001001,010111,011100,101011,111000, any k from\nthe 5 data to form\
    \ a group for XOR, the results are listed\nin Table 2.\nConsidering a situation\
    \ in Fig. 4, we assume that\nthe source node sends 2, 2, 3, 4, and 4 data to the\n\
    nodes n1- n5, respectively, and the nodes n1, n2, n3,\nn4,\nand\nn5\nsend\n10010101,\n\
    10111100,\n11001011,\n11001111, 100001101 as feedback signals to source\nnode.\n\
    Taking the verification node n1 as an example, the\nsignal 10010101 indicates\
    \ that n1 receives two data,\nand the result of the XOR of the two data is 010101.\n\
    As\nshown\nin\nTable\n3,\nwe\ncan\nknow\nthat\n001001⊕011100 = 010101, from which\
    \ we can know\nthat node n1 does not lose data, improving its trust.\nThe verification\
    \ status of the remaining 3 nodes is\nalso shown in Table 3.\nFor node n3, we\
    \ can see that the feedback signal is\nabnormal, which shows that node receives\
    \ 3 data,\nbut there is no set of data that matches it. This is\ncontradictory.\
    \ Since 010111⊕011100=001011, we can\nconclude that node n3 is likely to lose\
    \ a data. Here\nwe will not discuss the exact reason, but we can\nconclude that\
    \ the n3 node drops the data and the\ntrust value will be reduced. Algorithm 1\
    \ is the de-\ntailed description of AVTE strategy.\nCalculation of trust value\n\
    When\nreceiving\na\nfeedback\nsignal,\nwe\ncan\nknow\nwhether the data received\
    \ by the node is consistent\nwith the data sent, so as to obtain the trust of\
    \ the\nnode. If the trust value is lower than the threshold, it\nis regarded as\
    \ a malicious node, and this node will\nnot be selected in the future routing.\
    \ The neighbor\nnode with high reliability will be selected to partici-\npate\
    \ in the data routing to improve the security of\ndata collection for the entire\
    \ route. Algorithm 2 gives\nthe data routing scheme.\nTheorem 3 (change of trust\
    \ value of a single node):\nthe initial trust value of the node is Φ, and the\
    \ change\ndegree of the trust value is φ, then the trust value after\ntransmitting\
    \ data is:\nΓ ¼ Φ \x02 1 − Φ\nð\nÞ \x03 φ\nð9Þ\nProof: 1-Φ represents the gap\
    \ with full reliability, and\nmultiplied by φ indicates the change of this gap.\
    \ “+”\nmeans that the gap is reduced and the trust value is\nTable 2 Results of\
    \ XOR of k Data\nk\nResults of XOR of k Data\n1\n001001, 010111, 011100, 101011,\
    \ 111000\n2\n011110,010101,100010,110001,001011,111100,101111,110111,100100,\n\
    010011\n3\n000010,110101,100110,100000,110011,001111,111110,101101,011010,\n000100\n\
    4\n101001,111010,001101,000110,011000\n5\n010001\nMo et al. Journal of Cloud Computing:\
    \ Advances, Systems and Applications            (2020) 9:51 \nPage 9 of 19\nincreased;\
    \ “-” means that the gap is enlarged and the\ntrust value is reduced. Therefore,\
    \ “+” is taken when the\nverification is successful, and “-” is taken when the\
    \ verifi-\ncation fails. We can know whether the verification is\nsuccessful based\
    \ on the feedback data, and then use Eq.\n(9) to calculate the change of node\
    \ trust.\nAlgorithm2 : Data Routing Algorithms\n1烉For node A that generates or\
    \ receives data packets \nDo\n2烉    Select node B as the next hop\n//node B has\
    \ not been selected during the routing \nprocess, and has the highest trust value,\
    \ the \nclosest to the sink\n3烉 If  node A finds  node B that meets the \nrequirements\
    \ as the next hop   then\n4烉\nsend the packet to node B\n5烉\nIf   node B is the\
    \ sink   then\n6烉\nthis data route is complete\n7：\n：          End if\n8:    \
    \   Else\n9:          send a failed feedback signal to the upper node \nC\n10:\
    \  End for\n11烉For node C receiving the failed feedback signal     \nDo\n12烉 \
    \  repeat operations 2-7 until finding a node that \nmeets the requirements\n\
    13烉End for\nAlgorithm 3:  Algorithms for Calculating Trust\n1烉For   node A   \
    \ Do\n2烉\nAssign an initial value to the initial trust value Φ\nof node A and\
    \ the degree of change φ of the trust \nvalue\n3:         If  node A is trusted\
    \   then\n4:                \n=\n+ (1 ―\n) ×\n5:         Else\n6烉\n=\n― (1 ―\n\
    ) ×\n7:               If  <Θ then\n8: \n node A is no longer selected as a routing\
    \ \nnode\n9烉            End if\n10:          End if\n11烉End for\nTheorem 4 (trust\
    \ value of sink): Assuming that there\nare l nodes on routing path, the trust\
    \ value of the first\nnode can be calculated by Eq. (9) and use the trust value\n\
    of the first node as the initial value of the next node. So,\nthe trust value\
    \ of the second node can be calculated. By\nanalogy, the trust value of the third,\
    \ the l-1th, and the\nlth nodes, that is, the trust value of sink can be\ncalculated.\n\
    Γ1 ¼ Φ1 \x02 1 − Φ1\nð\nÞ \x03 φ1\nð10Þ\nΓ2 ¼ Γ1 \x02 1 − Γ1\nð\nÞ \x03 φ2\nð11Þ\n\
    Γn ¼ Γn − 1 \x02 1 − Γn − 1\nð\nÞ \x03 φn\nð12Þ\nΓn refers to the trust value\
    \ of the node, Φ1 is the initial\ntrust value of the first node, and φ is the\
    \ degree of\nchange of the trust value of each node. Algorithm 3\nshows calculation\
    \ of the trust value.\nThe following is a specific example. Considering a\nrouting\
    \ path, the model is simplified as shown in Fig. 5.\nFig. 4 The feedback signal\
    \ verifies the consistency between the received data and the transmitted data\n\
    Mo et al. Journal of Cloud Computing: Advances, Systems and Applications     \
    \       (2020) 9:51 \nPage 10 of 19\nWe discuss the calculation of trust in three\
    \ situations:\nsuccessful data verification, failed data verification and\nrandom\
    \ data verification. Finally, the trust value of the\nnode to the sink is discussed.\n\
    Case 1 (data verification is successful): Assuming that\nthe initial trust value\
    \ of node 1 is Φ1 = 0.5, the degree of\nchange of trust value is φ = 10%. First\
    \ feedback signal\nshows that the data received by the node and the data\nsent\
    \ by the source node are normal, then the trust value\nof node 1 becomes 0.5+\
    \ (1–0.5) × 10% = 0.55, and the\ntrust value increases by 0.05. If the data verification\
    \ is\nsuccessful in the second time, the trust value of node 1\nbecomes 0.55+\
    \ (1–0.55) × 10% = 0.595, and the trust\nvalue increases by 0.045 on the original\
    \ basis.\nIf each feedback signal indicates that the data received\nby node 1\
    \ is consistent with that of the source node, its\ntrust value will continue to\
    \ increase, and the trust value\nis close to 80% after 10 verifications. After\
    \ multiple veri-\nfications, the trust value will be close to 1, and the reli-\n\
    ability of the node is very high. When φ is changed, the\ntrust value changes\
    \ accordingly. When φ = 15% or φ =\n20%, the change of node 1 trust value is shown\
    \ in\nTable 4. Figure 6 demonstrates the results of change of\nnode trust value\
    \ when the initial value is the same and\nthe φ is variable.\nCase 2 (data verification\
    \ is failed): Assuming that\nthe initial trust value of node 2 is 0.5 and φ =\
    \ 10%.\nThe first feedback signal shows that the data received\nby the node and\
    \ the data sent by the source node are\ninconsistent, then the trust value of\
    \ node 1 becomes\n0.5- (1–0.5) × 10% = 0.45, the trust value is reduced by\n0.05.\
    \ If the second feedback signal still cannot find\nthe source data corresponding\
    \ to the received data,\nthe trust value will be reduced again to (1–0.45) ×\n\
    10% = 0.055, the trust value will drop to 0.0256 after\n7 times, which is very\
    \ close to 0. At this point, the\nnode is already very unreliable. If we set the\
    \ threshold\nΘ = 0.2, the trust value has fallen below 0.2 after 5\nrounds of\
    \ data transmission, and node will not be se-\nlected in the future routing process.\
    \ Considering its\nneighbor node, calculate the trust value of node 2 to\ndecide\
    \ whether it can be selected as the next hop\nnode.\nIt can be seen from Table\
    \ 5 and Fig. 7 that changing\nthe initial value and φ, trust value is different.\
    \ When φ =\n15%, the trust value of node 2 is reduced from 0.8 to\n0.1909(< 0.2).\
    \ If the 11th data verification fails, the trust\nvalue will be reduced to 0.0695,\
    \ so we can get the trust\nvalue of the node through 10 rounds of data transmis-\n\
    sion, providing a basis for the selection of routing nodes.\nBy comparing with\
    \ the threshold, we can also know that\nthe node can participate in several rounds\
    \ of data trans-\nmission at most. For example, when φ = 15%, the trust\nvalue\
    \ of the first four rounds of data transmission is\ngreater than 0.7, so node\
    \ 2 can still participate in data\ntransmission with high reliability.\nCase 3\
    \ (data verification is random): Assuming the ini-\ntial trust value of node 3\
    \ is Φ1 = 0.2, φ = 10%. The first\nFig. 5 Data transmission on the routing Path\n\
    Table 4 Change of node 1 trust value in Case 1\nn\nφ = 10%\nφ = 15%\nφ = 20%\n\
    0\n0.5\n0.5\n0.5\n1\n0.55\n0.575\n0.6\n2\n0.595\n0.6388\n0.68\n3\n0.6355\n0.6929\n\
    0.744\n4\n0.6720\n0.7390\n0.7952\n5\n0.7047\n0.7781\n0.8362\n6\n0.7343\n0.8114\n\
    0.8689\n7\n0.7608\n0.8397\n0.8951\n8\n0.7847\n0.8638\n0.9161\n9\n0.8063\n0.8842\n\
    0.9329\n10\n0.8256\n0.9016\n0.9463\nTable 3 Data verification of n1- n5 nodes\n\
    node\nn1\nn2\nn3\nn4\nn5\nfeedback signal\n10010101\n10111100\n11110100\n11001111\n\
    100001101\nk\n2\n2\n3\n3\n4\nsource data\n001001\n011100\n010111\n101011\n--\n\
    --\n--\n011100\n101011\n111000\n001001\n010111\n101011\n111000\nMo et al. Journal\
    \ of Cloud Computing: Advances, Systems and Applications            (2020) 9:51\
    \ \nPage 11 of 19\nfeedback signal shows that the data received by the node\n\
    and the data sent by the source node are normal, then\nthe trust value of node\
    \ 1 becomes 0.5+ (1–0.5) × 10% =\n0.55, and the trust value increases by 0.05.\
    \ When the\nsecond data transmission fails verification, the trust\nvalue of node\
    \ 3 becomes 0.55- (1–0.55) × 10% = 0.505,\nthe probability of successful verification\
    \ each time is\nrandom, and the trust value after 10 rounds of data\ntransmission\
    \ is shown in Table 6. Figure 8 presents the\nchange in node trust value after\
    \ different rounds of data\ntransmission and if verification is random.\nCase\
    \ 4 (consider all the nodes on the routing path in\nFig. 5 and calculate the trust\
    \ value of the sink after a\nround of data transmission): Assuming that the initial\n\
    value of node 1 is 0.5 and φ = 90%. The probability of\neach data verification\
    \ success is random, we assume that\nthe data received by node 1 during the first\
    \ data trans-\nmission is correct and passes to the neighbor node, the\ninitial\
    \ trust value of node 2 becomes 0.5+ (1–0.5) ×\n90% = 0.95. If node 2 data verification\
    \ fails and the data\ncontinues to be passed to node 3, it will affect the trust\n\
    value of node 3, and so on. We can get the reliability of\nthe data when it reaches\
    \ the sink. The trust value of sink\nis shown in Table 7.\nTherefore, the trust\
    \ value of the data transmitted\nthrough this routing path to the sink becomes\
    \ 0.9123.\nThis is the result of a round of data transmission. After\neach round\
    \ of data transmission is completed, the trust\nof the data that reaches the sink\
    \ will change. We calcu-\nlate the results after ten rounds of data transmission\
    \ as\nshown in Table 8, and the trust of the data arriving at\nthe sink is shown\
    \ in Fig. 9.\nPerformance analysis of AVTE scheme\nTrust acquisition\nThe AVTE\
    \ method can not only identify malicious\nnodes, but also accurately obtain the\
    \ node trust degree.\nIn the active trust scheme, the node that does not attack\n\
    the detection route is evaluated as a good node, and the\ntrust state of the node\
    \ is qualitatively obtained. However,\nFig. 6 Change of trust value if verification\
    \ is successful\nTable 5 Change of node 2 trust value in Case 2\nn\nφ = 10%\n\
    φ = 10%\nφ = 15%\n0\n0.5\n0.8\n0.8\n1\n0.45\n0.78\n0.77\n2\n0.395\n0.758\n0.7355\n\
    3\n0.3345\n0.7338\n0.6958\n4\n0.2680\n0.7072\n0.6502\n5\n0.1947\n0.6778\n0.5977\n\
    6\n0.1142\n0.6457\n0.5374\n7\n0.0256\n0.6103\n0.4680\n8\n–\n0.5713\n0.3882\n9\n\
    –\n0.5284\n0.2964\n10\n–\n0.4813\n0.1909\nFig. 7 Change of trust value if verification\
    \ failed\nTable 6 Change of node 3 trust value in Case 3\nn\nΦ = 0.5φ = 10%\n\
    Φ = 0.8 φ = 8%\nΦ = 0.4 φ = 12%\n0\n0.5\n0.8\n0.4\n1\n0.55\n0.784\n0.472\n2\n\
    0.505\n0.76672\n0.5354\n3\n0.5545\n0.7854\n0.4796\n4\n0.50995\n0.8026\n0.5385\n\
    5\n0.4609\n0.7868\n0.4831\n6\n0.4070\n0.8038\n0.4211\n7\n0.4663\n0.7881\n0.4905\n\
    8\n0.5197\n0.7712\n0.5517\n9\n0.4717\n0.7895\n0.4979\n10\n0.5245\n0.8063\n0.5581\n\
    Mo et al. Journal of Cloud Computing: Advances, Systems and Applications     \
    \       (2020) 9:51 \nPage 12 of 19\nthe AVTE method gives the trust degree of\
    \ the node\nquantitatively, which provides a more accurate standard\nfor selecting\
    \ the next hop.\nAccording to the criterion of high trust given by\ntrusted nodes\
    \ and low trust given by untrusted nodes,\nthe average trust degree of trusted\
    \ nodes is used to\nevaluate the ability of AVTE scheme to identify trusted\n\
    nodes. The trust degree of these trusted nodes is gener-\nally high, so the average\
    \ trust degree is also high. Based\non the calculation of the trust degree in\
    \ Section 4.5, we\nconsider that there are n1, n2, …, nm nodes in total,\namong\
    \ which h nodes of n2, n5, …, nd, nq are not mali-\ncious nodes. The given trust\
    \ degrees are T2, T5, …, Td,\nTq, then the average trust degree is:\nξ ¼ T 2 þ\
    \ T 5 þ … þ T d þ T q\n\x05\n\x06\nh\nð13Þ\nIf the average trust level is below\
    \ 0.5, it means that the\nAVTE strategy has an error in identifying the trusted\n\
    node. The higher the average trust degree, the higher\nthe security of trusted\
    \ nodes, and the stronger the ability\nof AVTE to identify the credibility of\
    \ nodes.\nWith the number of detections increases, the trust\nvalue of good nodes\
    \ will continue to increase, the aver-\nage trust value will also increase, and\
    \ the trust value of\nbad nodes will decline. Figure 10 shows that after 11\n\
    data verifications, the average trust degree of trusted\nnodes is continuously\
    \ rising and higher than 0.5, indicat-\ning that the trust value obtained by the\
    \ AVTE method is\neffective.\nData collection rate\nThere are detection routes,\
    \ data routes, and feedback\nroutes in the edge network at the same time. The\
    \ detec-\ntion routes are responsible for identifying malicious IoT\ndevices,\
    \ the data routes are responsible for sending data\nto the sink, and the feedback\
    \ routes are responsible for\nreturning data routing information to the source\
    \ node.\nWhen the data route transfers the data of node ni to\nnode nj, the detection\
    \ route detects two nodes are not\nblack nodes. The trust of node ni to node nj\
    \ is called dir-\nection trust. Direction trust refers to the trust relation-\n\
    ship established by two nodes directly transmitting data.\nAt the same time, there\
    \ is also indirect communication\nbetween nodes in the network. Data is transmitted\
    \ to\nanother node through an intermediate node. The trust\nrelationship established\
    \ at this time is called indirect\ntrust. In the edge network, nodes mostly establish\
    \ direct\nFig. 8 Change of trust value if verification is random\nTable 7 Trust\
    \ values of sink\nnode\nn1\nn2\nn3\nn4\nn5\nresults\nS\nF\nS\nF\nS\nΦ\n0.5\n0.95\n\
    0.91\n0.9045\n0.9026\nφ\n90%\n80%\n50%\n20%\n10%\nΓ\n0.95\n0.91\n0.9045\n0.9026\n\
    0.9123\nTable 8 Trust value of sink after 10 rounds of data transmission\nrounds\n\
    n1\nn2\nn3\nn4\nn5\n1\n0.95\n0.91\n0.9045\n0.9026\n0.9123\n2\n0.905\n0.981\n0.9715\n\
    0.9772\n0.9749\n3\n0.8195\n0.9639\n0.9820\n0.9729\n0.9702\n4\n0.9820\n0.9675\n\
    0.9513\n0.9415\n0.9473\n5\n0.9657\n0.9383\n0.9691\n0.9753\n0.9728\n6\n0.9348\n\
    0.8827\n0.9414\n0.9296\n0.9367\n7\n0.9935\n0.9987\n0.9980\n0.9977\n0.9974\n8\n\
    0.9876\n0.9777\n0.9666\n0.9733\n0.9759\n9\n0.9765\n0.9953\n0.9976\n0.9972\n0.9969\n\
    10\n0.9976\n0.9958\n0.9936\n0.9924\n0.9916\nFig. 9 Trust value of sink after 10\
    \ rounds of data transmission\nMo et al. Journal of Cloud Computing: Advances,\
    \ Systems and Applications            (2020) 9:51 \nPage 13 of 19\ntrust through\
    \ direct interaction, and the direct trust ob-\ntained is more accurate and reliable.\
    \ Therefore, the net-\nwork relationship is simplified in our manuscript, and\n\
    Fig. 3 only shows the relationship between nodes directly\ntransmitting data to\
    \ nodes. Therefore, Theorem 5 and\nTheorem 6 in our manuscript only consider direction\n\
    trust, which has no effect on the result of data collection\nrate.\nAfter receiving\
    \ the data, the node will choose the\nneighbor node closer to the sink as the\
    \ next-hop node.\nTherefore, detection routes need to detect whether the\nneighbor\
    \ node is a black node. When all its neighbor\nnodes are black nodes, it means\
    \ that the transmission\nfails.\nTheorem 5: Considering the number of hops from\
    \ the\nsource node ni to sink is ω, the number of nodes is α,\nand the ratio of\
    \ malicious nodes is λ. If only direction\ntrust is considered, the number of\
    \ nodes with direction\ntrust is β, then the data collection rate of the sink\
    \ is\nΨ i ¼\n1 − λα=3\n\a\n\bω − 1\nβ≥α\nΨ i ¼\n1 − λβ=3þ1\n\a\n\bω − 1\nβ < α\n\
    8\n>\n<\n>\n:\nð14Þ\nProof: First, calculate the success rate of single hop\n\
    transmission of any node A. The failed transmission\nmeans that node A finds that\
    \ all of the detected nodes\nwhose hop number smaller than its own are black holes.\n\
    The detected nodes cannot be selected, and A must se-\nlect from the undetected\
    \ nodes. If the selected un-\ndetected node is a black hole, the transmission\
    \ fails.\nTherefore, the failure probability is as follows. There\nare three states\
    \ for node A, that is, more than, less than,\nand equal to the hop count of node\
    \ A. For the number\nof nodes α, the number of nodes whose hops are smaller\n\
    than A’s is α/3. If the number of nodes with direction\ntrust is β, there are\
    \ β detections in total. For nodes with\nhop count less than node A, the total\
    \ detections is β/3.\nIf β ≥ α, all neighbors of node A can be detected. The\n\
    proportion of malicious nodes is λ, and the probability\nthat all detected nodes\
    \ are malicious nodes is λα/3, so\nthe probability of transmission failure is\
    \ λα/3.\nIf β<α, all neighbor nodes cannot be detected. The\nprobability that\
    \ the detected nodes are malicious nodes\nis λβ/3. The probability of being a\
    \ malicious node at the\nnext hop node is λ, so the failure probability is λλβ/3\
    \ =\nλβ/3 + 1.\nThe source node ni has ω hops to sink. Considering\nthat the last\
    \ hop is not a malicious node, the probability\nthat the sink successfully collects\
    \ data is\nΨ i ¼\n1 − λα=3\n\a\n\bω − 1\nβ≥α\nΨ i ¼\n1 − λβ=3þ1\n\a\n\bω − 1\n\
    β < α\n8\n>\n<\n>\n:\nTheorem 6: The number of hops from source node ni\nto sink\
    \ is ω, the number of nodes is α, and the ratio of\nmalicious nodes is λ. Only\
    \ the direction trust is consid-\nered, the number of nodes with direction trust\
    \ is β, and\nthe ratio of malicious nodes changes to γ, then the prob-\nability\
    \ that the sink successfully collects the data packet\nis\nPi ¼\n1 − λ 1 − γ\n\
    ð\nÞα=3\n\a\n\bω − 1\nβ≥α\nΡi ¼\n1 − λ 1 − γ\nð\nÞβ=3þ1\n\a\n\bω − 1\nβ < α\n\
    8\n>\n<\n>\n:\nð15Þ\nProof: The feedback mechanism verifies the data re-\nceived\
    \ and the data sent. If the packets are inconsistent,\nthe trust value is reduced.\
    \ If the trust value drops below\nthe threshold, the node is a malicious node.\
    \ The active\ntrust scheme can detect whether neighbor node is a ma-\nlicious\
    \ node, our scheme can further detect malicious\nnodes on the data route, so our\
    \ scheme makes the ratio\nof malicious nodes change from the previous λ to λ (1-\n\
    γ). The rest of the proofs are as in Theorem 5.\nTheorem 7: The source node sends\
    \ the data to the\nsink through ω hops. When using the shortest path\nprotocol,\
    \ the data collection rate is\nη ¼ 1 − λ\nð\nÞω − 1\nð16Þ\nProof: When using the\
    \ shortest path protocol, the\nnodes are randomly selected, and the probability\
    \ that\nthese selected nodes are black nodes is λ. The last hop is\nnot a black\
    \ node, so the probability of choosing a non-\nblack node after ω hop η = (1 −\
    \ λ)ω − 1.\nFigure 11 shows the data collection rate when the ratio\nof malicious\
    \ nodes is different in the AVTE scheme and\nthe ActiveTrust scheme, where α =6,\
    \ β =8, ω =15. Fig-\nure 12 is the data collection rate comparison of the\nFig.\
    \ 10 Average trust value of trusted nodes\nMo et al. Journal of Cloud Computing:\
    \ Advances, Systems and Applications            (2020) 9:51 \nPage 14 of 19\n\
    AVTE\nscheme\nand the\nActiveTrust scheme\nunder\ndifferent hop counts, where\
    \ γ = 0.2, α =6, β =8, λ =0.2.\nFigure 13 presents the data collection rate of\
    \ the two\nschemes when the number of nodes with direction trust\nis less than\
    \ the number of nodes, where γ = 0.2, α =9, β\n=6, ω =10. From the above three\
    \ figures, we can see that\nthe data collection rate of the AVTE scheme is higher\n\
    than that of the ActiveTrust scheme. The performance\nof the AVTE scheme is improved\
    \ comparing with the\nactive trust scheme.\nFigure 14 shows the probability of\
    \ successful data col-\nlection of ActiveTrust scheme, AVTE scheme and the\nshortest\
    \ path. The shortest path has the lowest data col-\nlection rate. When ω =15,\
    \ λ =0.2, the total data collec-\ntion rate drops below 0.1. The ActiveTrust scheme\
    \ and\nthe AVTE scheme have maintained a high success rate\n(> 60%). And the AVTE\
    \ scheme is superior to the Acti-\nveTrust scheme, because the active trust can\
    \ identify all\nblack nodes. The next hop only needs to select a good\nnon-black\
    \ node for routing, but the reliability of all non-\nblack nodes is different.\
    \ Adding a feedback mechanism\ncan compare the reliability of neighbor nodes that\
    \ are\nnot black nodes, so as to provide non-black next-hop\nrouting nodes with\
    \ higher trust for data routing. There-\nfore, the AVTE scheme has higher data\
    \ collection rate\nthan the ActiveTrust scheme.\nFigure 15 shows the ratio of\
    \ the data collection rate of\nAVTE, the ActiveTrust scheme and the shortest route\n\
    scheme when the number of malicious nodes is differ-\nent. It can be seen that\
    \ the AVTE scheme and the Acti-\nveTrust scheme have a significant improvement\
    \ over the\nshortest route. With the increase of malicious nodes, the\nAVTE scheme\
    \ has improved the performance by more\nthan 8 times and the ActiveTrust scheme\
    \ has improved\nby more than 6 times.\nCompared with the ActiveTrust scheme, the\
    \ ratio of\ndata collection rate of AVTE scheme remains above 1\nand increases\
    \ slightly. This is because the greater the ra-\ntio of malicious nodes, the ActiveTrust\
    \ scheme can ef-\nfectively detect the location of malicious nodes and\navoid\
    \ their application in data routing, so that the suc-\ncess rate of data packets\
    \ to sink is greatly increased. On\nthe basis of ActiveTrust scheme, the AVTE\
    \ scheme de-\ntects black nodes that have been used as routing nodes\nin data\
    \ routing and selects nodes with higher trust as\nnext hop routing nodes, once\
    \ again increasing the data\ncollection rate.\nEnergy consumption and network\
    \ lifetime\nThe energy of nodes is mainly consumed in sending and\nreceiving,\
    \ detecting and confirming packets. The net-\nwork lifetime is defined as the\
    \ death time of the first\nnode. When each node needs to send confirmation\nFig.\
    \ 11 Data collection rate (different γ)\nFig. 12 Data collection rate (different\
    \ ω)\nFig. 13 Data collection rate (α > β)\nMo et al. Journal of Cloud Computing:\
    \ Advances, Systems and Applications            (2020) 9:51 \nPage 15 of 19\n\
    packet to the source node in the presence of data rout-\ning and detection routing,\
    \ it will consume part of the en-\nergy. We need to calculate the energy consumption\
    \ in\nthe network and analyze the impact of the feedback\nmechanism on the network\
    \ lifetime. The composition of\nthe confirmation packet is the same as the data\
    \ packet,\nso the energy consumed is equivalent to the energy con-\nsumption of\
    \ the unit data packet.\nThe data packet contains the m-bit binary code of k\n\
    data. The feedback data packet is a binary code after k\ndata XOR. Because the\
    \ amount of data has fewer coded\nbits, and the energy consumption of the encoded\
    \ feed-\nback signal itself is low, the energy consumption of the\ncoded bits\
    \ of the number of received data can be ig-\nnored, which is equivalent to m-bit\
    \ encoding. Therefore,\nthe composition of the feedback data packet is the same\n\
    as that of the data packet. The energy consumption per\nunit data packet is ep.\
    \ The feedback data packet contains\none piece of data so the energy consumed\
    \ by the feed-\nback signal is also ep.\nWe analyze whether the remaining energy\
    \ in the net-\nwork can establish detection routes after the data\npackets and\
    \ confirmation packets consume some energy.\nThe energy consumption is related\
    \ to the number of\npackets carried by the node. Consider the network ra-\ndius\
    \ is R, the transmission radius of the node is r, the\nevent occurrence rate is\
    \ υ, and the distance from the\nnode to the sink is l [36]. According to the Ref.\
    \ [36], we\ncan get the number of data packets loaded by the node\nis\ndl ¼\n\
    ðz þ 1\nÞ þ\nz z þ 1\nð\nÞr\n2l\n\t\n\n\t\n\nυ\nð17Þ\nz is an integer and satisfies\
    \ l + zr < R.\nEq. (17) shows that the energy consumption depends\non the amount\
    \ of data and the lifetime of the network\ndepends on the node with the highest\
    \ energy consump-\ntion. We consider that the maximum data load of the\nnode is\
    \ dmax and the energy consumption is dmaxeu. The\nnode with the data loads less\
    \ than dmax has residual en-\nergy. The remaining energy can be used to send feed-\n\
    back packets to the source node and construct detection\nroutes. For a node with\
    \ a distance l to the sink, the\nremaining energy is (dmax − dl)eu. If the distance\
    \ of the\nactive probe route is measured by the hops and after\nsending a confirmation\
    \ packet, the available hops of the\nactive probe route are as follows.\nTheorem\
    \ 8: If the distance from the node to the sink\nis l, the maximum number of detection\
    \ hops that the\nremaining energy can reach is\nχ ¼ dmax − dl − 1\nð\nÞ 1 þ k2\n\
    ð\nÞ\n1 þ k2=k1\nð18Þ\nWhere k1 is the ratio of the length of the data packet\n\
    to the detection packet, and k2 is the ratio of the body\nlength of the data packet\
    \ to the packet header of the de-\ntection packet.\nProof: According to Eq. (17),\
    \ for the node with dis-\ntance l from the sink, the data load is dl = ((z + 1)\
    \ +\n(z(z + 1)r/2l))υ. Therefore, the node closest to the sink\nhas\nthe\nlargest\n\
    data\nload\ndmax = ((z + 1) + (z(z + 1)r/\n2lmin))υ. ep represents the energy\
    \ consumption for send-\ning and receiving a unit data packet. Each node sends\
    \ a\nconfirmation packet to the source node, so the energy\nconsumption of the\
    \ node for the feedback signal is also\nep. The remaining energy of the node is\
    \ (dmax − dl)ep −\nep = (dmax − dl − 1)ep.\nConsidering that the energy consumed\
    \ by sending and\nreceiving one bit data is eu, ep = xeu , x = x1 + x2, where\
    \ x\nFig. 14 The data collection rate of the three schemes\nFig. 15 Ratio of data\
    \ collection rate with different schemes under\ndifferent ratio of malicious nodes\n\
    Mo et al. Journal of Cloud Computing: Advances, Systems and Applications     \
    \       (2020) 9:51 \nPage 16 of 19\nis the unit packet length, x1 is the packet\
    \ header length,\nand\nx2\nis\nthe\npacket\nbody\nlength.\nThe\navailable\nremaining\n\
    energy\nis\n(dmax − dl − 1)xeu = (dmax − dl −\n1)eu(x1 + x2). The energy consumption\
    \ of sending and\nreceiving\na\ndetection\npacket\nis\neq = yeu = eu(y1 + y2),\n\
    where y is the packet length of the detection packet, y1\nis the packet header\
    \ length, and y2 is the packet body\nlength. Considering x1 = y1, x2 = k1y2, x2\
    \ = k2y1, the hop\ncounts of the active detection routes that can be\nachieved\
    \ by the remaining energy of the node are\nχ ¼ dmax − dl − 1\nð\nÞeu x1 þ x2\n\
    ð\nÞ\neu y1 þ y2\nð\nÞ\nð19Þ\n⇒χ ¼ dmax − dl − 1\nð\nÞ 1 þ k2\nð\nÞ\n1 þ k2=k1\n\
    :\nAssuming R = 500, r = 50, υ = 0.8, lmin = 10, Fig. 16\nshows the maximum detection\
    \ hops that can be pro-\nvided by the remaining energy of nodes at different dis-\n\
    tances to the sink. When k1 and k2 are different, the\nnumber of detection hops\
    \ can reach hundreds. The\ncloser the node is to sink, the greater the data load\
    \ of\nthe node, the less energy left, and the fewer hops avail-\nable for detecting\
    \ the path. The amount of data of nodes\nfar away from the sink is small. Thus,\
    \ there is more re-\nsidual energy, and the number of hops available for the\n\
    detection path is up to 500. In addition to the energy\nconsumed by the node sending\
    \ and receiving packets\nand confirming packets, the node has enough energy to\n\
    build the detection route for monitoring. Figure 17\nshows that the number of\
    \ hops of the detection route\ndecreases when the network radius and the transmission\n\
    radius are increased, but it can still reach 200 hops.\nConsider R = 500, υ =\
    \ 0.8, lmin =50, k1 =5, k2 =5, Fig. 18\nshows the number of hops of the detection\
    \ path at\ndifferent distances from sink under different transmis-\nsion radius.\
    \ It can be seen that the number of hops of\nthe detection path gradually increases.\
    \ The initial growth\nis relatively large and detection hops grow slowly near\n\
    the sink. The maximum data load is smaller with the lar-\nger transmission radius.\
    \ The detection hops afforded by\nremaining energy of nodes decreases, but the\
    \ maximum\nhops remain above 200. The maximum detection hops\ncan be up to 500,\
    \ which shows that the remaining en-\nergy in the network is sufficient to support\
    \ the establish-\nment of the detection path. The ActiveTrust mechanism\nverifies\
    \ that the lifetime of the network is the same as\nother solutions without any\
    \ security strategy. Compared\nwith the ActiveTrust scheme, our scheme can establish\n\
    up to hundreds of hops for the active detection path.\nTherefore, we can conclude\
    \ that the network lifetime of\nour scheme is the same as that of the ActiveTrust\n\
    scheme and the scheme without any security strategy.\nConclusion\nIn this paper,\
    \ an Active and Verifiable Trust Evaluation\n(AVTE) approach is proposed to identify\
    \ the credibility\nof IoT devices, so to ensure reliable data collection for\n\
    Edge Computing with low cost. The main innovation of\nthe AVTE approach is the\
    \ use of an encoding-based\nfeedback mechanism for data routing. This method can\n\
    more accurately and directly obtain the trust status of\nmore nodes, so that a\
    \ richer trust relationship can be\nobtained more quickly, making evolution and\
    \ reasoning\nof trust is more credible and richer. Our theoretical ana-\nlysis\
    \ proves its effectiveness. The conclusion of this art-\nicle is: (1) Compared\
    \ with the traditional passive trust\nmechanism, the AVTE approach is an active\
    \ trust mech-\nanism and it has a great advantage in obtaining trust,\nwhich can\
    \ improve the data collection rate very well.\nFig. 16 Number of detection hops\
    \ created by the remaining\nenergy (different k1, k2)\nFig. 17 Number of detection\
    \ hops that created by the\nremaining energy(r = 50)\nMo et al. Journal of Cloud\
    \ Computing: Advances, Systems and Applications            (2020) 9:51 \nPage\
    \ 17 of 19\nAnd it is effective for all kinds of attacks known and un-\nknown\
    \ in the network. (2) It has a feedback mechanism\nfor data routing, which can\
    \ greatly increase the available\ntrust relationships and make trust evaluation\
    \ more rapid\nand accurate. The encoding-based feedback mechanism\nmakes the cost\
    \ of feedback information is less, which\nhelps to improve network performance.\
    \ There are some\nproblems need our further research. First, this paper\nstudies\
    \ a network scenario of a self-organizing network.\nThe next step is to expand\
    \ it to a more complex and\nheterogeneous edge network. Second, we accurately\n\
    combine the current emerging data acquisition and per-\nception technologies and\
    \ tools to further proactively and\nquickly obtain the trust relationship of IoT\
    \ devices to\npromote the further development of IoT.\nAbbreviations\nIoT: Internet\
    \ of Things; WSNs: Wireless sensor networks; EC: Edge Computing;\nSFA: Selective\
    \ forwarding attack; SEDR: Security and Energy-efficient Disjoint\nRoute; AVTE:\
    \ Active and Verifiable Trust Evaluation; QoE: Quality of\nExperiment; CHEMAS:\
    \ Check-point-based multi-hop acknowledgement\nscheme; TTL: Time to live\nAcknowledgements\n\
    This work was supported in part by the National Natural Science Foundation\nof\
    \ China (61772554, 61902432).\nAuthors’ contributions\nWen Mo is the main author\
    \ of the current paper. Tian Wang, Shaobo Zhang\ncommented the work. Jinhuan Zhang\
    \ contributed to the conception. All\nauthors read and approved the final manuscript.\n\
    Funding\nThis work was supported in part by the National Natural Science Foundation\n\
    of China (61772554, 61902432).\nAvailability of data and materials\nNot applicable.\n\
    Competing interests\nThe authors declare that there are no competing interests\
    \ regarding the\npublication of this paper.\nAuthor details\n1School of Computer\
    \ Science and Engineering, Central South University,\nChangsha 410083, China.\
    \ 2College of Computer Science and Technology,\nHuaqiao University, Xiamen 361021,\
    \ China. 3School of Computer Science and\nEngineering, Hunan University of Science\
    \ and Technology, Xiangtan 411201,\nChina.\nReceived: 18 May 2020 Accepted: 10\
    \ September 2020\nReferences\n1.\nSarkar S, Chatterjee S, Misra S (2015) Assessment\
    \ of the suitability of fog\ncomputing in the context of internet of things. IEEE\
    \ Trans Cloud Comput\n6(1):46–59\n2.\nHuang M, Liu A, Xiong NN, Wang T, Vasilakos\
    \ AV (2020) An effective service-\noriented networking management architecture\
    \ for 5G-enabled internet of\nthings. Comput Netw 173:107208. https://doi.org/10.1016/j.comnet.2020.\n\
    107208\n3.\nQi L, Yu J, Zhou Z (2017) An invocation cost optimization method for\
    \ web\nservices in cloud environment. Sci Program https://doi.org/10.1155/2017/\n\
    4358536\n4.\nLuo Y, Zhu X, Long J (2019) Data collection through Mobile vehicles\
    \ in\nedge network of Smart City. IEEE Access 7:168467–168483\n5.\nJiang B, Huang\
    \ G, Wang T, Gui J, Zhu X (2020) Trust based energy efficient\ndata collection\
    \ with unmanned aerial vehicle in edge network. Trans Emerg\nTelecommunications\
    \ Technol https://doi.org/10.1002/ett.3942\n6.\nWang T, Wang P, Cai S, Ma Y, Liu\
    \ A, Xie M (2020) A unified trustworthy\nenvironment based on edge computing in\
    \ industrial IoT. IEEE Trans Ind\nInform 16(9):6083–6091\n7.\nWang T, Qiu L, Sangaiah\
    \ AK, Liu A, Md B, Ma Y (2020) Edge computing\nbased trustworthy data collection\
    \ model in the internet of things. IEEE\nInternet Things J 7(5):4218–4227\n8.\n\
    Qi L, Zhang X, Dou W, Hu C, Yang C, Chen J (2018) A two-stage locality-\nsensitive\
    \ hashing based approach for privacy-preserving mobile service\nrecommendation\
    \ in cross-platform edge environment. Futur Gener Comput\nSyst 88:636–643\n9.\n\
    Bonola M, Bracciale L, Loreti P, Amici R, Rabuffi A, Bianchi G (2016)\nOpportunistic\
    \ communication in smart city: experimental insight with small-\nscale taxi fleets\
    \ as data carriers. J Ad Hoc Netw 43:43–55\n10.\nTan J, Liu W, Wang T, Zhao M,\
    \ Liu A, Zhang S (2020) A high-accurate\ncontent popularity prediction computational\
    \ Modelling for Mobile edge\ncomputing by using matrix completion technology.\
    \ Trans Emerg\nTelecommun Technol. https://doi.org/10.1002/ett.3871\n11.\nQi L,\
    \ Zhang X, Dou W, Ni Q (2017) A distributed locality-sensitive hashing-\nbased\
    \ approach for cloud service recommendation from multi-source data.\nIEEE J Selected\
    \ Areas Commun 35(11):2616–2624\n12.\nZeng D, Gu L, Pan S, Cai J, Guo S (2019)\
    \ Resource Management at the\nNetwork Edge: A deep reinforcement learning approach.\
    \ IEEE Netw 33(3):\n26–33\n13.\nSánchez-Casado L, Maciá-Fernández G, García-Teodoro\
    \ P, Magán-Carrión R\n(2015) A model of data forwarding in MANETs for lightweight\
    \ detection of\nmalicious packet dropping. Comput Netw 87:44–58\n14.\nRen Y, Zeng\
    \ Z, Wang T, Zhang S, Zhi G (2020) A trust-based minimum cost\nand quality aware\
    \ data collection scheme in P2P network. Peer-to-Peer\nNetw Appl https://doi.org/10.1007/s12083-020-00898-2\n\
    15.\nQi L, Chen Y, Yuan Y, Fu S, Zhang X, Xu X (2020) A QoS-aware virtual\nmachine\
    \ scheduling method for energy conservation in cloud-based cyber-\nphysical systems.\
    \ World Wide Web 23:1275–1297\n16.\nXie K, Li X, Wang X, Cao J, Xie G, Wen J,\
    \ Qin Z (2018) On-line anomaly\ndetection with high accuracy. IEEE/ACM Trans Networking\
    \ 26(3):1222–1235\n17.\nHuang M, Zhang K, Zeng Z, Wang T, Liu Y (2020) An AUV-assisted\
    \ data\ngathering scheme based on clustering and matrix completion for Smart\n\
    Ocean. IEEE Internet Things J. https://doi.org/10.1109/JIOT.2020.2988035\n18.\n\
    Liu X, Qiu T, Dai B, Yang L, Liu A, Wang J (2020) Swarm intelligence-based\nrendezvous\
    \ selection via edge computing for mobile sensor networks. IEEE\nInternet Things\
    \ J. https://doi.org/10.1109/JIOT.2020.2966870\nFig. 18 Number of detection hops\
    \ created by remaining energy\n(different r)\nMo et al. Journal of Cloud Computing:\
    \ Advances, Systems and Applications            (2020) 9:51 \nPage 18 of 19\n\
    19.\nChen Y, Liu W, Wang T, Deng Q, Liu A, Song H (2019) An adaptive\nretransmit\
    \ mechanism for delay differentiated services in industrial WSNs.\nEURASIP J Wireless\
    \ Communications and Networking https://doi.org/10.\n1186/s13638-019-1566-2\n\
    20.\nDeng X, Jiang Y, Yang LT, Lin M, Yi L, Wang M (2019) Data fusion based\n\
    coverage optimization in heterogeneous sensor networks: A survey. Inform\nFusion\
    \ 52:90–105\n21.\nTeng H, Ota K, Liu A, Wang T, Zhang S (2020) Vehicles joint\
    \ UAVs to acquire\nand analyze data for topology discovery in large-scale IoT\
    \ systems. J Peer-\nto-Peer Netw Appl https://doi.org/10.1007/s12083-020-00879-5\n\
    22.\nLiu Q, Hou P, Wang G, Peng T, Zhang S (2019) IntelligentRoute planning on\n\
    large road networks with efficiency and privacy. J Parallel Distributed\nComput\
    \ 133:93–106\n23.\nHafeez KA, Zhao L, Ma B, Mark J (2013) Performance analysis\
    \ and\nenhancement of the DSRC for VANET's safety application. IEEE Tran\nVehicular\
    \ Technol 62(7):3069–3083\n24.\nZhao Y, Wang T, Zhang S, Wang Y (2020) Towards\
    \ mini-mum code\ndissemination delay through UAV joint vehicles for smart city.\
    \ IET Commun.\nhttps://doi.org/10.1049/iet-com.2019.1205\n25.\nAbdelhamid S, Hassanein\
    \ HS, Takahara G (2017) Reputation-aware,\ntrajectory-based recruitment of smart\
    \ vehicles for public sensing. IEEE Trans\nIntell Transportation Syst 19(5):1387–1400\n\
    26.\nJiang J, Han G, Wang F, Shu L, Guizani M (2014) An efficient distributed\n\
    trust model for wireless sensor networks. IEEE Trans Parallel Distributed Syst\n\
    26(5):1228–1237\n27.\nHan G, Shen W, Duong TQ, Guizani M, Hara T (2014) A proposed\
    \ security\nscheme against denial of service attacks in cluster-based wireless\
    \ sensor\nnetworks. J Secur Commun Netw 7(12):2542–2554\n28.\nLi T, Zhao M, Won\
    \ K (2020) Machine learning based code dissemination by\nselection of reliability\
    \ Mobile vehicles in 5G networks. Comput Commun\n152:109–118\n29.\nChen M, Wang\
    \ T, Ota K, Dong M, Zhao M, Liu A (2020) Intelligent resource\nallocation Management\
    \ for Vehicles Network: an A3C learning approach.\nComput Commun 151:485–494\n\
    30.\nMorra L, Lamberti F, Pratticó FG, La Rosa S, Montuschi P (2019) Building\n\
    Trust in Autonomous Vehicles: role of virtual reality driving simulators in\n\
    HMI design. IEEE Trans Vehicular Technol 68(10):9438–9450\n31.\nWang T, Liang\
    \ Y, Yang Y, Xu G, Peng H, Liu A, Jia W (2020) An intelligent\nedge-computing-based\
    \ method to counter coupling problems in cyber-\nphysical systems. IEEE Netw 34(3):16–22\n\
    32.\nZhang N, Yang P, Ren J, Chen D, Li Y, Shen X (2018) Synergy of big data\n\
    and 5G wireless networks: opportunities, approaches, and challenges. IEEE\nWirel\
    \ Commun 25(1):12–18\n33.\nDeng X, Yang LT, Yi L, Wang M, Zhu Z (2018) Detecting\
    \ confident\ninformation coverage hole in industrial internet of things: an energy-\n\
    efficient perspective. IEEE Commun Mag 56(9):68–73\n34.\nLiu Y, Liu X, Liu A,\
    \ Xiong N, Liu F (2019) A trust computing based security routing\nscheme for cyber\
    \ physical systems. ACM Trans Intell Syst Technol 10(6):1–27\n35.\nPeng M, Liu\
    \ W, Wang T, Zeng Z (2020) Relay selection joint consecutive\npacket routing scheme\
    \ to improve performance for wake-up radio-enabled\nWSNs. Wirel Commun Mob Comput\
    \ 2020:7230565\n36.\nLiu Y, Dong M, Ota K, Liu A (2016) ActiveTrust: secure and\
    \ trustable routing in\nwireless sensor networks. IEEE Trans Inform Forensics\
    \ Secur 11(9):2013–2027\n37.\nWang T, Luo H, Zeng X, Yu Z, Liu A. Sangaiah A.\
    \ (2020) Mobility based trust\nevaluation for heterogeneous electric vehicles\
    \ network in smart cities, IEEE\nTrans Intell Transp Syst, DoI: https://doi.org/10.1109/TITS.2020.2997377\n\
    38.\nWang T, Cao Z, Wang S, Wang J, Qi l, Liu A, Xie M, Li X. (2020) Privacy-\n\
    enhanced data collection based on deep learning for internet of vehicles.\nIEEE\
    \ Trans Ind Inform 16(10):6663–6672\n39.\nWang H, Ma S, Dai H. N, Imran M, Wang\
    \ T. (2020). Blockchain-based data\nprivacy management with nudge theory in open\
    \ banking. Futur Gener\nComput Syst, 110, 812–823\n40.\nLi T, Liu W, Wang T, Zhao\
    \ M, Li X, Ma M (2020) Trust data collections via\nvehicles joint with unmanned\
    \ aerial vehicles in the smart internet of things.\nTrans Emerg Telecommun Technol.\
    \ https://doi.org/10.1002/ett.3956\n41.\nZhuo C, Luo S, Gan H, Hu J, Shi Z (2019)\
    \ Noise-Aware DVFS for Efficient\nTransitions on Battery-Powered IoT Devices.\
    \ IEEE Trans Comput Aided Des\nIntegr Circuits Syst 2019. https://doi.org/10.1109/TCAD.2019.2917844\n\
    42.\nLiu A, Zheng Z, Zhang C, Chen Z, Shen X (2012) Secure and energy-\nefficient\
    \ disjoint multi-path routing for WSNs. IEEE Trans Veh Technol\n61(7):3255–3265\n\
    43.\nXiao B, Yu B, Gao C (2007) CHEMAS: identify suspect nodes in selective\n\
    forwarding attacks. J Parallel Distributed Comput 67(11):1218–1230\n44.\nWang\
    \ J, Wang F, Wang Y, Wang L, Qiu Z, Zhang D et al (2019) HyTasker:\nhybrid task\
    \ allocation in Mobile crowd sensing. IEEE Trans Mob Comput.\nhttps://doi.org/10.1109/TMC.2019.2898950\n\
    45.\nXie K, Ning X, Wang X, Xie D, Cao J, Xie G, Wen J (2017) Recover corrupted\n\
    data in sensor networks: A matrix completion solution. IEEE Trans Mob\nComput\
    \ 16(5):1434–1448\n46.\nLiu Q, Tian Y, Wu J, Peng T, Wang G (2019) Enabling verifiable\
    \ and dynamic\nranked search over outsourced data. Trans Serv Comput. https://doi.org/10.\n\
    1109/TSC.2019.2922177\n47.\nZhao W (2016) Performance optimization for state machine\
    \ replication\nbased on application semantics: a review. J Syst Softw 112:96–109\n\
    48.\nZheng Z, Liu A, Cai L. X, Chen Z, Shen X. (2016) Energy and memory\nefficient\
    \ clone detection in wireless sensor networks. IEEE Trans Mob\nComput 15(5):1130–1143\n\
    49.\nKuang Z, Li G, Zhang L, Zhou H, Li C, Liu A (2020) Energy efficient mode\n\
    selection, Base Station selection and resource allocation algorithm in D2D\nheterogeneous\
    \ networks. Peer-to-Peer Netw Appl. https://doi.org/10.1007/\ns12083-020-00915-4\n\
    50.\nLu R, Lin X, Zhu H, Liang X, Shen X (2012) BECAN: A Bandwidth-Efficient\n\
    Cooperative Authentication Scheme for Filtering Injected False Data in\nWireless\
    \ Sensor Networks. IEEE Trans Parall Distr 23(1):32–43\n51.\nLiu X, Lin P, Liu\
    \ T, Wang T, Liu A, Xu W (2020) Objective-variable tour\nplanning for Mobile data\
    \ collection in partitioned sensor networks. IEEE\nTrans Mob Comput. https://doi.org/10.1109/TMC.2020.3003004\n\
    52.\nWang T, Zhao D, Cai S, Jia W, Liu A (2020) Bidirectional prediction based\n\
    underwater data collection protocol for end-edge-cloud orchestrated\nsystem. IEEE\
    \ Trans Ind Inform 16(7):4791–4799\n53.\nHuang M, Liu W, Wang T, Liu A, Zhang\
    \ S (2020) A cloud-MEC collaborative\ntask offloading scheme with service orchestration.\
    \ IEEE Internet Things J\n7(7):5792–5805\n54.\nAazam M, Harras KA, Zeadally S\
    \ (2019) Fog computing for 5G tactile\nindustrial internet of things: QoE-aware\
    \ resource allocation model. IEEE\nTrans Ind Inform 15(5):3085–3092\n55.\nDong\
    \ M, Liu X, Qian Z, Liu A, Wang T (2015) QoE ensured Price competition\nmodel\
    \ for emerging Mobile networks. IEEE Wirel Commun 22(4):50–57\nPublisher’s Note\n\
    Springer Nature remains neutral with regard to jurisdictional claims in\npublished\
    \ maps and institutional affiliations.\nMo et al. Journal of Cloud Computing:\
    \ Advances, Systems and Applications            (2020) 9:51 \nPage 19 of 19\n"
  inline_citation: (Wang et al., 2020)
  journal: Journal of Cloud Computing
  limitations: No limitations were detected.
  pdf_link: https://journalofcloudcomputing.springeropen.com/track/pdf/10.1186/s13677-020-00202-w
  publication_year: 2020
  relevance_evaluation: 3 out of 3 - The explanation directly addresses the point
    of focus by providing specific examples of advanced sensing technologies used
    for non-invasive plant stress detection and explaining how they are used to identify
    and monitor stress in plants.
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: An active and verifiable trust evaluation approach for edge computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.21203/rs.3.rs-560368/v1
  analysis: '>'
  apa_citation: Subaja Christo, M., Bommi, R. M., Anandaraj, S. P., Udhaya Sankar,
    S. M., Anbarasu, V., & Ramkumar, G. (2021). Enhancement of Reputation Aggregation
    based Dynamic Trust Protocols for Edge Computing based E-Health Care System. Research
    Article, 1-24.
  authors:
  - Mary Subaja Christo
  - R M Bommi
  - S P Anandaraj
  - S. M. Udhaya Sankar
  - Anbarasu
  - GS Ramkumar
  citation_count: 2
  data_sources: Not explicitly mentioned
  explanation: 'This article provides a reputation aggregation based dynamic trust
    model for edge computing based e-health care systems. The primary goal of this
    study was to secure wireless network communications for e-services like e-health
    care applications. The authors propose a system involving three steps: forming
    clusters with fuzzy logic, selecting a cluster head with a reputation aggregation
    algorithm, and authenticating users through a dynamic trust model for edge computing.
    The research team conducted simulations to evaluate the proposed model and found
    it to be more efficient than existing AODV protocols.'
  extract_1: In this research work, a reputation aggregation based dynamic trust model
    for edge computing which helps to secure the wireless network for e-services has
    been suggested.
  extract_2: Finally, the authentication of valid user by dynamic trust model for
    edge computing was made with the aid of cluster head.
  full_citation: '>'
  full_text: ">\nPage 1/24\nEnhancement of Reputation Aggregation based\nDynamic Trust\
    \ Protocols for Edge Computing based\nE-Health Care System\nMary Subaja Christo \
    \ (  marysubaja@gmail.com )\nSRM Institute of Science and Technology\nBommi R\
    \ M \nChennai Institute of Technology\nAnandaraj S P \nPresidency University\n\
    Udhaya Sankar S M \nVelammal Institute of Technology\nAnbarasu V \nSRM Institute\
    \ of Science and Technology\nRamkumar G \nSaveetha Institute of Medical and Technical\
    \ Sciences: Saveetha University\nResearch Article\nKeywords: Reputation Aggregation,\
    \ Edge Computing, e-healthcare, Secured Communication, Reliable\nDecision\nPosted\
    \ Date: May 28th, 2021\nDOI: https://doi.org/10.21203/rs.3.rs-560368/v1\nLicense:\
    \   This work is licensed under a Creative Commons Attribution 4.0 International\
    \ License.  \nRead Full License\nPage 2/24\nAbstract\nIn recent years, E-services\
    \ such as e-healthcare, e-learning, e-ticketing, depend on computer networks\n\
    where the attackers have started introducing new types of attacks. Therefore,\
    \ it is necessary to enhance\nsecurity for communication which is needed for the\
    \ transfer of con¦dential information relating to\npatients through the network.\
    \ In our research we have developed a reputation aggregation based dynamic\ntrust\
    \ model for edge computing based E-health care systems. In this model, the edge\
    \ node evaluates the\ntrust value of a user and allows the user to access the\
    \ E-health care system only when the trust value is\nsatis¦ed. In order to do\
    \ this, initially the user information is collected with the help of user agents\
    \ and\nthen this information is processed and the relevant data alone is sent\
    \ to the edge nodes for evaluating\nthe trust. Finally, the trusted users can\
    \ be identi¦ed through edge nodes and they are only given the\npermission to access\
    \ the e-health care system. Attacks generated in the simulations are detected\
    \ using\nthe prevailing algorithms and also the suggested techniques. The simulation\
    \ results of this work prove\nthe ability of the proposed techniques which are\
    \ used to detect the attacks accurately and to prevent\nthem effectively.\nI.\
    \ Introduction\nIn recent years, Internet technologies have been ubiquitous in\
    \ day today life for communication, with\ncontinuous changes in the lifestyles\
    \ of the modern Internet users and improvements arising there from.\nThese advancements\
    \ in lifestyles are the results of invention and usage of wireless networks (WN),\n\
    mobile computing and web services. Most of the emerging application areas use\
    \ these networking\ntechnologies for Internet usage for providing highly useful\
    \ facilities and services to people. Among all\nthese services, medical services\
    \ are the most important in the context of pollution seen in water and\nproblems\
    \ with air quality which lead to health problems in conditions with diseases of\
    \ various types\nspreading and attacking human beings continuously. In such a\
    \ scenario, it is necessary to introduce new\nhealthcare applications which would\
    \ have the ability to diagnose diseases through the user interaction\nwith the\
    \ patients as users to the systems for collecting details relating to the past\
    \ history of patients and\ncurrent symptoms for the diseases which are responsible\
    \ for the health problems.\nA healthcare model should behave intelligently by\
    \ applying rules relating to past data aimed at expecting\nthe upcoming results\
    \ with previous and current statistics and should handle uncertainty effectively\n\
    (Sethukkarasi, 2014). A prediction model developed for building a healthcare application\
    \ meant for\nmonitoring through online discussions can be e-healthcare application.\
    \ Moreover, such applications are\nmore useful for the patients for getting authentic\
    \ knowledge relating to their disease in advance. It is also\npossible to know\
    \ the details of the treatment provided to them for particular disease on the\
    \ basis of the\nanalysis of the existing symptoms and also the expert opinions\
    \ obtained from senior doctors for\nproviding quick and effective remedy. Such\
    \ e-healthcare applications will be useful also for the\nphysicians as well as\
    \ helping the performance of the analysis regarding the treatment plan and also\
    \ to\nprovide more effective treatments leading to fast recovery.\nPage 3/24\n\
    In recent years, different types of computer networks are used for developing\
    \ e-healthcare applications\nwith effective communication using wired and wireless\
    \ networks, ad-hoc networks and the Internet.\nAdvancements in the development\
    \ of new e-healthcare services are seen based on the new paradigm\ncalled Peer-to-Peer\
    \ networks in which the patients are allowed to record their symptoms/medical\
    \ details\nto enable obtaining adequate and reliable coordination with other type\
    \ of networks is rather different in\nthe absence of a centralized administrator\
    \ for authorizing the users (Nemat, 2011). \nThe coordination in P2P networks\
    \ is ensured by the peers themselves. The rapid advancement of this\nP2P network\
    \ for developing new healthcare applications is a highly useful paradigm considering\
    \ the\npossible cost reduction. Moreover, physicians will be able to post their\
    \ medical tips relating to the\nsymptoms and analysis pertaining to a particular\
    \ disease to enable taking appropriate remedial action.\nDoctors with experience\
    \ share their knowledge with others and provide advice free of cost. However,\n\
    security is an important issue in this scenario considering the need to protect\
    \ the information relating\npatients, diseases and the doctors who treat patients.\
    \ Based on the above intention, the reputation\nmodel developed which helps the\
    \ peers to access the system directly with high trust levels. Finally\nthis implementation becomes\
    \ the key component of the e-health care system portal. In our research we\nhave\
    \ suggested, a Secure Routing Techniques using Reputation and Packet-Hiding for\
    \ Wireless Networks\nhas been proposed.\nIn this model, two techniques, namely,\
    \ reputation aggregation and cryptographic message hiding have\nbeen introduced\
    \ for enhancing the security of communication in edge computing based E-health\
    \ care\nsystem. Attacks generated in the simulations are detected using the previous\
    \ techniques and also the\nsuggested techniques. The research has shown in this\
    \ work prove the ability of the proposed techniques\nto detect the attacks accurately\
    \ and to prevent them effectively. Here, peers are also considered as\nneighbour\
    \ nodes and the neighbour trust values are used for making reliable decisions\
    \ on attack\ndetection and prevention. \n1.1 Security Based Wireless Network\n\
    Network communication using WN is subjected to several kinds of hackers (Baptiste\
    \ Pretre, 2005)\nactively participated in Internet era. Even though many types\
    \ of new types of attacks are introduced by\nattackers most frequently, some of\
    \ the known attacks such as worm propagation, relational attack, ¦le\npoisoning,\
    \ Sybil attack, DOS attack and Man in Middle attack (Yu et al 2008) and eclipse\
    \ attack are also\nmore serious. Therefore, it is necessary to apply more e¨cient\
    \ techniques to detect these attacks and to\nprevent them. However, the existing\
    \ WN networks provide some potential security services (Shane Balfe et\nal 2005)\
    \ including integrity, control of access, authentication, con¦dentiality and non-repudiation\
    \ by\napplying known security algorithms based on cryptography, key management\
    \ techniques and soft\ncomputing techniques.\nDisregarding the presence of numerous\
    \ techniques and procedures for maintaining the security in\nnetworks, Client\
    \ Server model and Internet have implemented by the Conventional algorithms. In\
    \ present\nform trust and safeguarding are more challenges in Wireless Networks.\
    \ Therefore, new protocols which\nPage 4/24\nconsider the features of WN networks\
    \ must be designed and implemented to protect the resources and\ndata from attackers.\
    \ One of the major issues with the design of the solution using a centralized\n\
    networking system is that the node failure in the network is fault tolerant but\
    \ the centralized coordinator\nfailure will lead to the failure of the entire\
    \ system. In WN, each node is enhanced the security with help of\ncerti¦cation\
    \ authority (CA). Therefore, the transaction carried by attacker node so, the\
    \ certi¦cate produced\nby the malicious node to perform the transaction in the\
    \ particular site of the computer network. In such a\nscenario, a transaction\
    \ may need more number of certi¦cates involving multiple certi¦cation authorities\n\
    to perform authentication.\nIn most of the WN, All nodes are segregated into different\
    \ clusters if the number of nodes is higher and\nthe group size is bigger. This\
    \ partitioning is performed on the basis of certain parameters namely\ndistance,\
    \ trust value and past history. Each node should belong with a member of one group\
    \ or more than\none group through logical membership. This helps to identify the\
    \ users perfectly and avoid the\ninvolvement of attackers from the malicious peers.\
    \ The certi¦cation authority method is used for\nproviding the certi¦cate to the\
    \ group of nodes and the individual nodes which nodes are attached to the\nCA.\
    \ Moreover, all the nodes which are involved in the group or outside of the group\
    \ members can able to\naccesses the certi¦cate from the corresponding authority\
    \ nodes by group head node or individual node.\nHere, Digital Signature method\
    \ has provided the group authority to all the nodes which are stored in a\ndatabase\
    \ which is located at the node which acts as the group authority. All the credentials\
    \ provided by\nthe peers are authenticated by the group authority and issued to\
    \ the group members. The group authority\ndoesn’t record the information pertaining\
    \ to other group members and hence it is not possible to verify the\ncerti¦cates\
    \ without the support of the corresponding certi¦cate authority as discussed by\
    \ Arulkumar et al\n(2012).\n1.2. Trust Management System\nTrust management is\
    \ a most signi¦cant factor at the same time it’s become a di¨cult perception in\n\
    security systems. In the real world, faith supports the individuals to create\
    \ suitable judgements by using\nthe trust values so that even in unpredictable\
    \ circumstances, it is possible to make decisions with\ncon¦dence by reducing\
    \ the uncertainty (Qin et al 2009). Many distributed systems are suffering from\n\
    attacks by malicious nodes which are irregular in addition to unde¦ned objects\
    \ which attempt to\ncooperate with all other in order to attack the genuine users.\
    \ Trust is important to move with people in\ncommon life. In a social environment,\
    \ trust management helps to make collaborative decisions by trusted\nmembers.\
    \ Similar to this, a number of nodes are present in a network and identifying\
    \ the trusted nodes\namong all the peers is a toughest job. Moreover, due to the\
    \ presence of a large number of possible threats\nin the varying networking applications\
    \ always depends on the Distributed System (DS) and the trust\nvalue of those\
    \ system is complex one due to the varying nature of participating nodes (Xiong\
    \ and Liu\n2004).\nResearch on trust management schemes is undertaken by many\
    \ researchers who work on security\nsystems and social network analysis for edge\
    \ Computing. In such systems, the essential components\nPage 5/24\ninclude trust\
    \ modelling framework, trust management policies design and implementation and\
    \ the\napplication of the trust model to security systems (Hayam Mousa et al 2015).\
    \ Most of the authentication\ntechniques goal is to progress collaboration through\
    \ the participants either in the form of nodes or\napplications in a distributed\
    \ system. They work by predicting the future behaviours of peers based on\ntheir\
    \ past and present behaviours. Therefore, a trust management scheme must perform\
    \ the following\ntasks in this way the system can provide effective facilities\
    \ to the application domain. First, each node in\nthe network must observe and\
    \ store the behaviour of its peer nodes also called neighbouring nodes.\nSecond,\
    \ each node must collect the behavioural characteristics of peer nodes and such\
    \ data must be\nstored in their databases including the details regarding notices,\
    \ intelligences received from reaming\npeers regarding their neighbouring nodes\
    \ information. Next, all the peer’s must calculate their historical\ncon¦dence\
    \ values regarding their behaviour and maintain information based on the collected\
    \ reports and\nthey must be stored for all neighbouring nodes. Finally, the current\
    \ trust score must be computed with\nhelp of the historical faith, current rules\
    \ and their rules usage the faith values, and then by assigning\nsuitable weights\
    \ for information received from other nodes. Therefore, it is possible for each\
    \ node to\ndecide the ¦nest peer or cluster of peers to join the wireless network\
    \ system.\n2. Literature Review\nHui Li has proposed a Con¦gurable Online Reputation\
    \ Aggregation System. This protocol helped to\ndiscuss the global issues with\
    \ help of rating information, which is collected from the different peers. This\n\
    rating information is used to validate the node e¨ciently than reputation values.\
    \ The rating data collected\nfrom several systems are aggregated to develop a\
    \ local reputation. The entire aggregated local reputation\nis then converted\
    \ into global reputation. This aggregation is performed on the basis of options\
    \ as well as\nweights that are chosen by the querying agent based on the system\
    \ requirements (Li and Hui,2008).\nGupta et al have proposed the Differential\
    \ Gossip technique to the Reputation Aggregation method in\nP2P network. In the\
    \ power law network, the trust values from various nodes are aggregated without\n\
    identifying the power nodes and by using the aggregation mechanism. Since node\
    \ identi¦cation is not\nrequired, it is possible to have quick implementation\
    \ of the approach as node identi¦cation is a hard task\nto avoid. The reputation\
    \ aggregation is performed in a differential method by taking into account the\n\
    feedback from nodes that have increased weight. This makes the approach more robust\
    \ towards\ncollision and avoids the free riding issue (Gupta R et al, 2015).\n\
    Zhao et al have suggested effective routing in Wireless Networks by Self-Organized\
    \ Tree-Based Energy-\nBalance routing protocol. In the above model, they have\
    \ implemented a tree model which is used to keep\nup the hierarchy of the data.\
    \ They have chosen a particular node as a Root node from the tree which has\n\
    low mobility and high energy, each node has been connected with their neighbour's\
    \ node so the root node\ncan easily broadcast the data’s to every other nodes.\
    \ All the nodes have been mutually connected to every\nother node in the network\
    \ with help of root nodes. The simulation results have shown this model has high\n\
    energy and enhances the network lifetime through the network (Han et al 2014).\n\
    Page 6/24\nSelvi et al have proposed an e¨cient data collection method with new\
    \ group based energy e¨cient\nrouting methods established with help of covering\
    \ the LEACH algorithm. Here, they have added\nthe extension of fuzzy rules which is\
    \ used to give the new techniques for data collection and take the\ndecision in routing.\
    \ This algorithm helps to form effective cluster based routing with help of fuzzy\n\
    temporal logic rules, here they have introduced new cluster head one is primary\
    \ cluster and another one is\nsecondary cluster these clusters are used for gathering\
    \ the records then forward these data to their\nneighbour's nodes. They have proved\
    \ the group based forwarding techniques\nprovides e¨cient performance with simulation\
    \ tools (Selvi et al, 2017).\nTrong-Thua Huynh et al have proposed a new and distributed\
    \ clustering model to accomplish group\nbased forwarding for reducing the energy\
    \ consumption and delay in Wireless Sensor Networks (WSN). In\nthis protocol,\
    \ the author has found the cluster head from the regular nodes and this cluster\
    \ head used\nto perform the multi-hop routing here the cost of each path is estimated\
    \ by the parameters such as\ndistance from the neighbor node, energy consumption,\
    \ distance from the cluster heads, reliability in\nthroughput and packet delivery.\
    \ This protocol is mainly used to ¦nd the cost from one node to another\nnode.\
    \ The authors have carried out the experiments using the existing work on cluster\
    \ based routing and\nalso their proposed model with their proposed cost function.\
    \ Using the experiments conducted by the\nauthors, this model has provided more\
    \ e¨cient in terms of energy e¨ciency and reduction in delay. The\nperfection\
    \ of this work has shown the usage of cost is very low in their proposed work\
    \ (Trong at al, 2016).\nRen et al have suggested a new energy balanced protocol\
    \ for routing in WSNs. The goal of this model is\nto ¦nd the distance from the\
    \ particular node to the base node with a low level of energy by automatically,\n\
    so the key gain of this algorithm is used to ¦nd the distance at a very low level of\
    \ energy\nconsumption. Moreover, the authors have addressed the routing loop problem\
    \ present in the basic\nalgorithm by providing enhancements used for detection\
    \ and elimination of the loops. They carried out\nexperiments using the basic\
    \ algorithm and the extended algorithm through simulation. Their experiments\n\
    proved that their model which eliminates the loop increased the network lifetime\
    \ and balanced the energy.\nFinally, their model enhanced the coverage ratio and\
    \ throughput as well (Ren et al, 2012).\nXiumin Wang et al have developed a new\
    \ geographic routing protocol called K-any_cast routing protocol\nfor effective\
    \ routing in WSNs. In their model, they have performed a guaranteed delivery of\
    \ packets at\nleast in K-different destinations. The main advantage of their model\
    \ was its performance of both local\noptimization and global optimization. With\
    \ help of optimization, we can select the next hop. The\nprocess was repeated at\
    \ all nodes to make a global optimization algorithm. The node's information share\n\
    to all other nodes by §ooding method and the author has proved the e¨ciency with\
    \ simulation results\n(Wang et al, 2012).\nZeynab Molay Zahedi et al have proposed\
    \ a new routing algorithm which uses swarm intelligence and\nfuzzy rules for performing\
    \ effective routing in WSNs. Their model is considered as the residual energy,\
    \ the\ndistance of the node to the sink, and the distance of the node from the\
    \ respective cluster centroids. In this\nmodel, cluster centroids have been used\
    \ for making decisions on clustering while fuzzy logic was used\nPage 7/24\nfor\
    \ handling the uncertainty present in the WSN environment. The authors have made\
    \ e¨cient use of\nfuzzy input and output variables e¨ciently and handled the uncertainties\
    \ effectively. This algorithm\nprovides e¨cient routing from one node to another\
    \ node and it has very less complexity to implement the\nprotocol and provide\
    \ high network security to the network. However, the presence of attackers will\
    \ also\nlead to a high packet drop ratio. Hence, it is necessary to measure the\
    \ trust of nodes and to perform\nrouting only through the trusted nodes (Zeynab\
    \ et al,2016).\nFarahani et al have proposed IoT based e-Health care system with\
    \ fog-driven methodology. The use of\nIoT and Fog computing can be useful for\
    \ e-health and medical services and quality. This system used for\nmonitoring\
    \ the patient remotely through IoT devices the device sensed the data and store\
    \ in Fog\ncomputing methods which is provided the high computing storage medium\
    \ for sensed data (Farahani et\nal,2018). Yang et al have proposed Self adaptive\
    \ access control system for health care application with\nIoT devices, here Privacy\
    \ and security for health systems can be enhanced with advanced encryption\nalgorithms.\
    \ Fusion between IoT, big data and security for health systems is essential (Yang\
    \ at al, 2019).\nKaur et all have enhanced secured privacy health care system\
    \ with block chain based cloud storage\napplication, here Block chain can be used\
    \ to enhance security and privacy for health care systems and\nservices to higher\
    \ levels application (Kaur et al ,2018). Shi et al have enhanced the study about\
    \ Smart\nMedical Application with RFID security system. This study helps to understand\
    \ the advantages of Ethical\nconcerns together with threats and ways for protections\
    \ should be reinforced for security in smart\nmedical areas (Shi et al, 2019).\n\
    In some networking systems, the trust management schemes used for security maintenance\
    \ allow trust\nredemption in order to allow a participating node to regain the\
    \ trust of its neighbours if it is lost in the\nprevious communications. For example,\
    \ in a WSN (Idris Abubakar Umar et al 2017) which is composed of\na set of sensor\
    \ devices which are constrained by available resources is an area of research\
    \ where trust\nbased routing is essential due to the presence of unreliable radio\
    \ as the medium for wireless\ncommunication. In such a scenario, there exists\
    \ a great possibility that unintentional temporary\ncommunication errors might\
    \ occur leading to delay and increased packet dropping. The behaviour of a\nnode\
    \ is measured based on the success probability in sending the packets to other\
    \ nodes which are\nrouted through this node.\nWhen a node performs routing with\
    \ high delay and increased packet dropping ratio due to network\ncongestion or\
    \ non-availability of bandwidth will also be treated as a bad node. Therefore,\
    \ it is necessary\nto distinguish between malicious nodes which drop the packets\
    \ intentionally and the genuine nodes\nwhich drop the packets unintentionally.\
    \ A good trust management system which identi¦es the genuine\nnodes and malicious\
    \ nodes perfectly is the necessity of the routing protocols which are used in\
    \ WSN for\nperforming secure routing. Therefore, increase in false positive rate\
    \ by the detection algorithm will reduce\nthe trust of genuine node and take alternate\
    \ and longer routes leading to increase in energy consumption,\ndelay and bandwidth\
    \ utilization. Such a system must have separate security policies based on rules,\n\
    Page 8/24\naccess control, authentication techniques (Chuang et al 2014) and key\
    \ management schemes helps to\nenhance the security level and the performance\
    \ of the system.\nThe Next type of schemes includes fault detection and management\
    \ schemes. Such systems allow a\nredemption scheme in which the security system\
    \ may avoid a faulty detection of misbehaving nodes as\ngenuine or an erroneous\
    \ identi¦cation of a genuine node as malicious node. Such a redemption scheme\n\
    in the security algorithm using trust modelling will provide further opportunities\
    \ to the genuine nodes\nwhich are affected due to failure by non-availability\
    \ of energy. This will help to recover the trusted nodes\nand make them to participate\
    \ in the routing activities by highlighting the node failure as a cause for delay\n\
    and hence such nodes will be allowed to continue in the group of trusted nodes\
    \ and their behaviours will\nbe tested by excluding the delay occurred during\
    \ the failure of the node. Therefore, fault tolerant routing\nschemes are proposed\
    \ by many researchers who are working on providing optimal and secure routing\n\
    protocols for WSNs.\nIn spite of the presence of many existing redemption schemes\
    \ for WSNs, the existing schemes are more\nsuitable for only WSN in which all\
    \ routing activities are carried out to send the nodes information to the\nroot\
    \ station through the sensor peers. In such applications, cluster based routing\
    \ protocols played a\nmajor role in performance improvement. However, the cluster\
    \ based routing protocols are more suitable\nfor WSNs in which the nodes and the\
    \ base station are static or the nodes and the base station or mobile.\nMobility\
    \ based networks will lead to change of groups by members. In such a scenario,\
    \ group of the head\nnode will be designated dynamically by selecting a node with\
    \ high values of energy, low mobility and\nhigh trust as the cluster head. Such\
    \ a trust based model which considers node distance, energy level, and\nmobility\
    \ speed and trust values is more suitable for providing a secure routing protocol\
    \ to the WSNs.\nOn the other hand in a P2P network, to create the effective results\
    \ we don’t bather about the distance\nfrom the source node to the base system\
    \ and the energy level between these systems. Moreover, the cost\nof removing\
    \ a node from the group is different in WSN when it is compared with P2P networks.\
    \ Hence, it\nis essential to progress a original and well-organized trust management\
    \ scheme which is more suitable\nfor providing secure routing in P2P network is\
    \ highly important and it must be a secured routing protocol.\nTrust evaluation\
    \ techniques can be developed in different methods. Among all the methods, most\
    \ of the\nexisting techniques follow the different types of the trust they are\
    \ direct trust and indirect trust. In this\ndirect trust the behaviour of the\
    \ nodes information and the period of time have computed. This is more\nreliable\
    \ since it is computed directly and is not based on the opinion from other nodes.\
    \ On the other hand,\nindirect trust is computed by consolidating the opinions\
    \ obtained from the neighbour nodes. This\nmeasure will be more useful when the\
    \ neighbour nodes are genuine and impartial. If one of the neighbour\nnodes is\
    \ a malicious node, then the opinion given by that node will be different from\
    \ the opinions given\nby all other nodes. This can be neglected either by taking\
    \ the average value or by considering only the\nmajority opinions. If more than\
    \ one malicious node is present in the network, a group will be formed by\nmalicious\
    \ nodes and they will be collectively destroying the reputation of genuine nodes.\
    \ In such a\nscenario, more intelligent algorithms must be developed and careful\
    \ analysis must be carried out.\nPage 9/24\nIf one node tries to in§uence other\
    \ node in collaborative decision making, such nodes should be\nmonitored and eliminated\
    \ so that it is possible to increase the true positive rate. This research work\n\
    attempts to increase the true positive rates by proposing a rumour riding protocol\
    \ which will coordinate\nwith the trust model in this direction this proposed\
    \ model has given authenticated communication\nbetween the networks.\n2. Proposed\
    \ Work\nIn this research paper, we have suggested a reputation aggregation based\
    \ dynamic trust model for edge\ncomputing which helps to secure the wireless network\
    \ for e-services. In wireless networks, all the\nnodes are connected to one node\
    \ to another node with radio waves and the access points. Initially, we\nformed\
    \ the clusters of nodes with Fuzzy logic through the mobility, energy level, and\
    \ the base system\ndistance like we could form the clusters from the wireless\
    \ network. Then, we used the Reputation\nalgorithm to ¦nd the nodes' trust value\
    \ with the help of the Reputation table. We had collected all the\nnode information\
    \ from one node to another node through their neighbor’s and the values were stored\
    \ in\nthe reputation table based on the trust value we had chosen from the cluster\
    \ head. The trust values were\ncalculated in relation to the number of messages\
    \ that node had sent to other nodes and also based on\nthe time span that the\
    \ node had been active in the network based on the parameters found in the trust\n\
    value of all the nodes. Further, one node was chosen as cluster head whose trust\
    \ value had become high.\nFinally, the authentication of valid user by dynamic\
    \ trust model for edge computing was made with the\naid of cluster head. The cluster\
    \ received the noti¦cation from the reputation table so the head of the\ncluster\
    \ had gathered the nodes data through reputation table and veri¦ed the trust level\
    \ of that requested\nnode whether it had trusted. Moreover this algorithm was\
    \ used for providing enhanced security to\ninformation sharing and communication\
    \ activities related to e-healthcare applications in the Wireless\nSensor networks.\
    \ So, our proposed system had followed these three steps:\n1. Forming the clusters\
    \ with Fuzzy logic\n2. Finding the Cluster head with Reputation Aggregation algorithm\n\
    3. Authenticating the user by cluster head with dynamic trust model for edge\n\
    Computing.\nFrom Fig 1, we can easily recognize the stream of our proposed method.\
    \ We had chosen a highly secured\nrouting protocol so that the cluster node then\
    \ selected the cluster head and ¦nally the cluster head gave\nthe access control\
    \ to the requested node that had been using the e- health care application. Here all\
    \ the e-\nservices applications had been depending on the wireless network in\
    \ this network. One of the nodes was\nsending the request to use the health care\
    \ application so that requested node trust level had to be veri¦ed\nby dynamic\
    \ agents. To verify the requested node ¦rst the details of that node such as user\
    \ name,\npassword, and trust level of the node had been collected and all these\
    \ information were stored in the\nreputation table. Later, the user agents sent\
    \ the noti¦cation to the head of the cluster node. Then, this\nnode had also checked\
    \ the user name, password and trust value of that requested node.\nPage 10/24\n\
    Finally, comparison was made between this information and reputation table information\
    \ in order to\ndetermine whether both the information had the same cluster head\
    \ and give the access permission to the\nrequested node. In this way, we carried\
    \ out a secured routing protocol for e-services such as e-health care\napplications.\n\
    3.1. Form the clusters with Fuzzy logic:\nThere had been an assumption of the\
    \ network consisting of individual nodes which were grouped into a\nsingle cluster\
    \ with all the nodes having the same energy level. These nodes were positioned\
    \ randomly\nand grouped into clusters on the basis of the distances and energy\
    \ levels that had been varied as a result\nof increase in communication. The distance\
    \ was calculated from the current node to the root node with\nhelp of time and\
    \ distance factors. Moreover, one among the nodes in their cluster which had high\
    \ energy\nand least distance with other nodes had been elected by each of those\
    \ clusters and the selected\nnode was considered as the cluster head which was\
    \ used for communicating with other clusters as well\nas with the own group. The\
    \ head node collects the node’s information and forwarded to other nodes in\n\
    the tree. This algorithm also used fuzzy rules for performing clustering and re-clustering\
    \ of the nodes.\nThe new group formation and cluster head established routing\
    \ model developed in this work had used a\nprobabilistic threshold value that\
    \ was found having application in taking decisions on clustering instead\nof using\
    \ a normal prede¦ned threshold value to make decisions with respect to the categorization\
    \ of the\nnodes. Here, the cluster head election was carried out periodically,\
    \ starting from the ¦rst communication\nin which initial clusters had been formed\
    \ and was repeated on the basis of the available energy and\ndistance for performing\
    \ further communication. Fuzzy information was used in this work for effective\n\
    choice of the cluster heads in the network by handling uncertainty more effectively.\
    \ Moreover, the non-\ncluster head nodes called member nodes were found to have\
    \ performed the task of joining the existing\ncluster head nodes.\nThe threshold\
    \ value for making decisions was computed by using equation 1\nNth = CC / (1-CC*(r\
    \ mod 1/CC)) (1)\nWhere r was number of iterations, CC was probability selection\
    \ of cluster head\nFuzzy Logic based Cluster Formation Algorithm\nStep 1: The\
    \ threshold Value for each group was determined.\nStep 2: Initial Threshold value\
    \ was considered as a Cluster head.\nStep 3: Each and every random node for ¦nding\
    \ the threshold was considered randomly.\nStep 4: It was ensured whether the threshold\
    \ of random nodes had been lesser than the threshold, in the\ncontext where had\
    \ been was lesser, then cluster head was assigned temporarily after checking the\
    \ radius\nusing if—then rules.\nPage 11/24\nStep 5: The radius value was calculated\
    \ with degree of the node and remote of the node\nStep 6: The speci¦c peer (S)\
    \ as a head of the group (cluster) and sent the message to their neighbour\nconnected\
    \ nodes.\nStep 7: Other node K on the network received the message from node S\n\
    Step 8: If T_Score (K) > T_Score (S) then\nStep 9: Considered the node K as cluster\
    \ head\nStep 10: K node is one of the member of cluster list CM\nStep 11: Applied\
    \ fuzzy rules which are framed on the basis of the distance for ¦nalizing the\
    \ cluster head\nfrom CM.\nStep 12: All the nodes were shown cluster wise.\nIn\
    \ this system, the temporary head node had been formed through the fuzzy rules.\
    \ The responsibility of\nfuzzy rules are ¦nd the temporary cluster head and create\
    \ the connection between one temporary cluster\nwith other cluster head with help\
    \ of the radius values and the distance of these cluster head values.\nMoreover,\
    \ the proposed system used three linguistic variables for ¦nding the ratio of\
    \ the nodes which\nalso consisted of close, medium and far with extension to include\
    \ more variables for forming the fuzzy\nrules. This model also considered the\
    \ trust scores called the current credit scores of the node for enabling\ntaking\
    \ the ¦nal decision. We computed the ranges from one node to another node with\
    \ help of valuable\ninput and linguistic variables. Another contribution of this\
    \ work was that a third variable called degree of\nthe node which had been introduced\
    \ in the decision making process to con¦rm the improvement of the\naccuracy of\
    \ the decisions. The fuzzy variables are used to ¦nd the distance from degree\
    \ of the node to\nthe base station is as follows:\n1. Distance_BS – (Very_close,\
    \ medium_close, close, medium, far, very_far)\n2. Degree of the Node – (very low,\
    \ very high, medium, low, high)\nThe fuzzy output variable was used to form the\
    \ cluster with respect to the temporary cluster head. We\nhad used nine different\
    \ linguistic parameters to ¦nd the temporary cluster they were low, very-low,\
    \ far, very\n-far, medium, close, medium-close, high and very high been used for\
    \ ¦nding the nodes degree and used to\n¦nd the distances between one node to other\
    \ nodes.\n3.2 Select the Cluster head with Reputation Aggregation algorithm:\n\
    The reputation value of the node was adjusted in a reputation table when had received\
    \ fresh information\nrelated to the trust value of its neighbour nodes. The trust\
    \ value of the inviting node was checked with its\nreputation table, when a node\
    \ had requested its neighbouring node for resources. The resource was\nallocated\
    \ on the basis of the trust value of the requesting node. Based on the requests,\
    \ the received nodes\nPage 12/24\nchecked the trust value of the requested peer.\
    \ The trust value of that requested node had been easily\ntracked whenever the\
    \ requested node was the neighbour of received node. In addition to that, the\
    \ trust\nvalue of the requested node had to be checked in the reputation table\
    \ with help of the overall information\nwhenever that requested node was not a\
    \ neighbour node. Finally, we could ¦nd the trusted requesting\nnode with help\
    \ of estimated trust values.\nIn this research work, a reputation aggregation\
    \ algorithm was performed with edge computing based\nalgorithms. In this proposed\
    \ technique, each node of the network had shared the information with a set of\n\
    its neighbour nodes. The received information was shared with its remaining neighbour\
    \ nodes. Thus,\neach node had received different trust values for a speci¦c trusted\
    \ user through edge computing network.\nThen, the aggregated value of a node was\
    \ tested for convergence. The node was declared trustworthy\nand no more aggregation\
    \ was required when the convergence condition had been satis¦ed. In Fig 2\nshows\
    \ how the cluster head was formed from the clusters..\nThe reputation aggregation\
    \ mechanism has been described in algorithm 1.\nNotations:\ni:Node\nj: Node\n\
    q: Degree of the node\nfbij: Feedback of jth node estimated by the node i\ngwij:\
    \ Gossip weight of jth node estimated by the node i\nConvergencevalue : Converging\
    \ value\nAlgorithm 1:\nStep 1: During gossiping, each node had randomly chosen\
    \ a node from its neighbourhood and shared\nsome basic information with it.\n\
    Step 2: The received information was stored by the receiving node.\nStep 3: The\
    \ ith node is estimate the neighbour degree by the data’s received from all the\
    \ neighbouring\nnodes\nStep 4: Each node had randomly chosen q nodes from its\
    \ neighbourhood, and then pushed some\ninformation into those neighbours.\nPage\
    \ 13/24\nStep 5: Based on the feedback of other nodes, the ith peer saved the\
    \ values on the table and forwarded its\nresponse with the enduring nodes.\nStep\
    \ 6: The overall reputation value of every node was evaluated by the receiving\
    \ responses of other\nsurrounding nodes.\nStep7: Whenever i node received feedback\
    \ from j, then\nStep 8: When i did not have any feedback about j, then and \n\
    Step 9: The cost of \n had been documented by every node in the status of Aggregation\n\
    chart and was measured as a conversation pair.\nStep 10: During every gossiping\
    \ step, the ratio of the gossip pair depicted by equation\n(3.2.1) had been estimated\
    \ to determine the convergence value and was recorded.\nStep 11: The value of\
    \ q was rounded off to the nearest integer value and had sent\nas the gossip pairs\
    \ to all the q nodes.\nStep 12: Determine the gossip pair values.\nThe convergence\
    \ cost as predictable from equation 3.2.1 and had been tested with respect to\
    \ prede¦ned\nfault endless. Whenever the convergence condition had been satis¦ed,\
    \ then the gossiping process was\nstopped or else it was continued. When the node\
    \ i had stopped gossiping, it announced among its\nneighbours that it had achieved\
    \ convergence. Thus, the valid nodes were detected and recorded as\ntrustworthy\
    \ based on the reputation aggregated through gossiping.\n3.3. Dynamic trust:\n\
    Trust scores were computed for each node participating in the edge computing network.\
    \ All the\nparticipating nodes in each cluster send the ‘Hello’ message to all\
    \ the neighbour nodes. These nodes had\nincreased their destination score on the\
    \ basis of the acknowledgements received by the nodes. All the\nparticipating\
    \ nodes calculate not only their trust scores but also their neighbour node’s\
    \ trust values\ndynamically. Here, a node had been capable of measuring the trustworthiness\
    \ of other nodes during any\nPage 14/24\nparticular interval of time for taking\
    \ decisions on communication to that node dynamically. Likewise, the\nsuggested\
    \ model was used to check the trust administration of the developing secured e-services\
    \ such as\ne-health care, e-learning, etc. in which the system used to check the\
    \ user whether the user is an\nauthenticated user or not.\nFig 3 shows the steps\
    \ to ¦nd the authenticated node in health care system. This System describe the\n\
    characteristics of the trusted node ¦nally the cluster header has given the access\
    \ to the user node if that\nnode has high accurate level otherwise the access\
    \ has been blocked by the cluster head node. The\nfollowing algorithm 2 describes\
    \ the steps to validate the user nodes. The user agent collects the\ninformation\
    \ from the requested node then this information is stored in edge nodes for computing\
    \ the\ntrust values. With the help of this dynamic trust, the user can be authenticated.\
    \ After validation, the\nauthenticated user can use e-health care system and ¦nally\
    \ check these data with reputation trusted table\nfor veri¦cation process these\
    \ steps are repeatedly performed to check the trust value of the requested\nnode.\n\
    Algorithm 2:\nStep1: The user (Patient/Doctor) gave the request to access the\
    \ e-health care system in wireless network\nStep 2: The user agent had collected\
    \ the user name and password then stored it to the private cloud\ndatabase and\
    \ forwarded to the cluster head to validate that requested node.\nStep 3: The\
    \ head node (cluster) had accepted the documents from the database and veri¦es\
    \ the trust\nvalue of the requested node with help of reputation aggregation algorithm.\n\
    Step 4: If the node had a high trust value it was identi¦ed as the authenticated\
    \ node and permission was\ngiven to access the e-health care system.\nStep 5:\
    \ If the node had low con¦dence rate it was identi¦ed by the attacker and couldn't\
    \ access the e-\nhealth care system, it was inferred that cluster head had blocked\
    \ those nodes from access the e- health\ncare system.\nThis proposed Reputation\
    \ Aggregation Algorithm based Edge Computing Dynamic Trust Method (RAA-\nDT) had\
    \ been implemented by providing extension to the existing AODV protocol for performing\
    \ the\nrouting process in the network.\nFigure 4 has shown the architecture of\
    \ the proposed system. This RAA model was used to identify the\nattacker nodes\
    \ in the current network. Finally, fuzzy rules had been used in this work for\
    \ taking effective\ndecisions over the presence and identi¦cation of malicious\
    \ nodes. In this work, a new e-healthcare\napplication was used to validate the\
    \ algorithms proposed for performing secured communication.\nFinally, we developed\
    \ secured emerging applications including medical and healthcare systems with\
    \ help\nof a secured protocol Here, fuzzy rules and rule based decision making\
    \ with respect to routing decisions\nPage 15/24\nhad been incorporated in this\
    \ work for effective routing. Moreover, rules had been used in this work for\n\
    network monitoring and the system was tested using a healthcare application. From\
    \ the experiments\nconducted in this work using §at routing and cluster based\
    \ routing, routing through all nodes and routing\nthrough trusted nodes, it was\
    \ proved that the new suggested algorithm delivered increased network\npresentation\
    \ in terms of increase in reliability, packet delivery ratio and throughput with\
    \ reduction in delay.\n4. Results And Discussion\nNS2 Simulator is used to implement\
    \ the proposed routing algorithm. We have implemented the basic\nrouting protocols\
    \ of AODV and AOTDV and the existing protocols compared the proposed protocol.\
    \ We\nhave taken the parameter such as packet drop ratio, malicious detection\
    \ accuracy, Delay analysis and\nThroughput analysis. Our network topology is depends\
    \ on the time and mobility of the nodes speed. Here,\nthe speed of the mobility\
    \ will high when the time is set as small. The mobility of the speed will decrease\n\
    when the time is set as high. The performance of the proposed protocol is compared\
    \ with the base\nprotocol in the presence of attacker nodes and ¦nally the simulation\
    \ results have shown that the\nproposed protocol ¦nds the malicious nodes in high\
    \ accurate rate and it is possible to block those types\nof malicious nodes with\
    \ help of dynamic reputation trust algorithm for edge computing network.\nTherefore,\
    \ with the help of proposed model we can implement e¨cient wireless network for\
    \ e-services\nsuch as e-health care system. Table 1 displays the trust score values\
    \ of proposed protocol (RAA-DT) and\nthe existing protocols, Ad-hoc Distance Vector\
    \ and AOTDV protocol.\nTable 1: Trust Scores for clusters\nTotal Nodes\nCluster\
    \ Nodes\nScore of Trust Score\nAODV\nAO-TDV\nRAA-DT\n150\n10\n71.2\n78.4\n87.5\n\
    250\n15\n67.3\n79.3\n88.3\n350\n20\n56.5\n80.7\n82.6\n450\n25\n52.5\n79.8\n89.5\n\
    550\n30\n63.2\n74.5\n79.6\n650\n35\n62.8\n84.6\n90.6\n750\n40\n64.5\n73.7\n89.7\n\
    850\n45\n61.3\n80.3\n90.5\n950\n50\n68.8\n81.2\n89.8\n1050\n55\n63.7\n86.8\n91.5\n\
    Page 16/24\nTable 1 shows the proposed method of RAA-DT trust scores are gradually\
    \ increased and it has high\nscored trust values when compared with existing models\
    \ such as AODV and AO-TDV protocols. This\nincrease in performance is based on\
    \ the fuzzy rules used by the proposed system for clustering\nreputation aggregation\
    \ model for trust computation and rules for making effective decisions. From Table\n\
    2 we can understand the time delay between proposed protocols and the base protocols\
    \ such as RAADT-\nAODV and AODV, AOTDV techniques. Here the proposed model shows\
    \ the less delay time in milli seconds\n(ms) responses and the base protocols\
    \ such as AODV and AOTDV protocol takes more delay time to\nreach the destination\
    \ nodes. \nTable 2: Delay Analysis\nAlgorithms\nNumber. Of Packets Sent\nDelay-AODV(ms)\n\
    5000\n8000\n11000\n14000\n17000\n20000\nDelay-AOTDV(ms)\n0.795\n2.89\n3.98\n4.21\n\
    4.72\n4.54\nDelay - RAADT-AODV (ms)\n0.54\n1.55\n2.34\n2.87\n3.11\n3.79\nFig 4\
    \ displays the drop ratio of the packets. The proposed algorithm has high security\
    \ access so it has\nless drop ratio when compared with the base protocols with\
    \ minimum and maximum malicious contents\nof the nodes with different times.\n\
    From Fig 5 we can understand the proposed algorithm has less number of packet\
    \ drop ratio when\ncompared with other existing protocols. Here in X axis represents\
    \ the number of Packets sent with the\nscale of m/s and Y axis represents the\
    \ packet drop ratio. Here, the simulation results shows if the\nproposed algorithm\
    \ RAADT-AODV sent 20000 packets the packet drop ratio has detected only 3.9\n\
    percentage only but the existing algorithm has detected 7 and 4.9 percentage respectively\
    \ and the it has\ngradually increase when the packet size will be increased.\n\
    Figure 6 displays the detection accuracy analysis with malicious nodes; the proposed\
    \ protocol RAADT\nShows the detection accuracy is very high when compared with\
    \ the existing protocol as AODV and\nAODTV protocol.\nFigure 6 indicates the Detection\
    \ Accuracy Analysis of the existing and proposed algorithms with different\nnumber\
    \ of Malicious Nodes. The X axis represents the number of malicious nodes and\
    \ the Y axis\nrepresents the scale of Detection Accuracy in percentage. The proposed\
    \ protocol RAAD has high\ndetection accuracy rate with different kinds of the\
    \ malicious nodes but the existing protocols such as\nAODV and AOTDV shows very\
    \ low detection accuracy rate when the existing algorithms compared with\nthe\
    \ proposed protocol of RAADT-AODV with different number of malicious nodes. This\
    \ owes to the\nroutine of smart rules, fuzzy rules, reputation with dynamic trust\
    \ based proposed methods. We can easily\ndetect the malicious nodes with help\
    \ of fuzzy temporal logic rules.\nPage 17/24\nFigure 7 indicates the delay time\
    \ for the existing and proposed algorithms with different number of the\nmobility\
    \ nodes; In X axis represents the number of mobility nodes the speed of the node\
    \ is represented by\n(m/s) and the Y axis represents the scale of delay time represented\
    \ in the scale of. The proposed protocol\nRAAD has less delay time in all possible\
    \ mobility nodes but the existing protocols such as AODV and\nAOTDV shows high\
    \ delay time when it compared with the proposed protocol of RAADT-AODV with\n\
    different mobility speeds. This owes to the routine of smart rules, fuzzy rules,\
    \ reputation with dynamic\ntrust based proposed methods. We can easily detect\
    \ the malicious nodes with help of fuzzy temporal\nlogic rules.\nFigure 8 leads\
    \ the throughput analysis performance for the existing and proposed algorithms\
    \ with\ndifferent speed of the mobility nodes; In X axis represents the number\
    \ of mobility nodes and the Y axis\nrepresents the scale of throughput values.\
    \ The proposed protocol RAAD has high throughput value in all\npossible mobility\
    \ nodes but the existing protocols such as AODV and AOTDV shows very low throughput\n\
    values when it compared with the proposed protocol of RAADT-AODV with different\
    \ speed of the mobility\nnodes. This owes to the routine of smart rules, fuzzy\
    \ rules, reputation with dynamic trust based proposed\nmethods. We can easily\
    \ detect the malicious nodes with help of fuzzy temporal logic rules. In this\
    \ work,\nwe have successfully implanted high secure based e-health care services\
    \ for users without any\ninvolvement of attackers.\n5. Conclusion And Future Works\n\
    In this research work, a reputation aggregation based dynamic trust model with\
    \ edge computing has been\nrecommended to secure the wireless network for e-services\
    \ based applications. In addition, Reputation\nAggregation based Dynamic Trust\
    \ model has the ability to perform effective authorization for the users\nwith\
    \ trust value of that requested node and helps to form the clusters among all\
    \ the nodes in Wireless\nNetwork. This algorithm is used for providing enhanced\
    \ security to information sharing and\ncommunication activities related to   e-healthcare\
    \ applications in the Wireless networks. The proposed\nsystem has been designed\
    \ and formulated in three steps, ¦rstly the clusters had been formed among all\n\
    the nodes utilizing Fuzzy logic, secondly the cluster head with reputation aggregation\
    \ algorithm was\nformed and ¦nally the user had been authenticated by cluster\
    \ head with edge computing model. The\nsimulation result effectively proves the\
    \ ability of the proposed techniques to detect the attacks accurately\nand to\
    \ prevent them e¨ciently than the existing counterparts. The experiments conducted\
    \ validate the\nproposed reputation aggregation based dynamic trust model with\
    \ edge computing to be more e¨cient\nthan the conventional model of ADOV protocol.\
    \ On the whole, the proposed model provides secured\ncommunication that caters\
    \ to the need of futuristic emerging applications such as e-health care, e-\n\
    learning, e –ticketing services.\nDeclarations\nWe hereby declare that we are\
    \ the sole author’s of this article. To the best of my knowledge this article\n\
    contains no material previously published by any other person except where due\
    \ acknowledgement has\nPage 18/24\nbeen made.\nReferences\nLi, Hui. \"A con¦gurable\
    \ online reputation aggregation system.\" PhD diss., University of Ottawa 2008.\
    \ 1910-\n2010, http://hdl.handle.net/10393/27998,http://dx.doi.org/10.20381/ruor\
    \ - 12344\nGupta R, Singh YN. Reputation aggregation in peer-to-peer network using\
    \ differential gossip algorithm.\nIEEE Transactions on Knowledge and Data Engineering.\
    \ 2015 Apr 29;27(10):2812-23.\nDOI: 10.1109/TKDE.2015.2427793\nHan, Z., Wu, J.,\
    \ Zhang, J., Liu, L. and Tian, K., 2014. A general self-organized tree-based energy-balance\n\
    routing protocol for wireless sensor network. IEEE Transactions on Nuclear Science, 61(2),\
    \ pp.732-740.\nDOI: 10.1109/TNS.2014.2309351\nSelvi, M., Nandhini, C., Thangaramya,\
    \ K., Kulothungan, K. and Kannan, A., 2017, January. HBO based\nclustering and\
    \ energy optimized routing algorithm for WSN. In 2016 Eighth International Conference\
    \ on\nAdvanced Computing (ICoAC) (pp. 89-92). IEEE. DOI: 10.1109/ICoAC.2017.7951751\n\
    Huynh, T.T., Dinh-Duc, A.V. and Tran, C.H., 2016. Delay-constrained energy-e¨cient\
    \ cluster-based multi-\nhop routing in wireless sensor networks. Journal of Communications\
    \ and Networks, 18(4), pp.580-588.\nDOI: 10.1109/JCN.2016.000081.\nLiu, A., Ren,\
    \ J., Li, X., Chen, Z. and Shen, X.S., 2012. Design principles and improvement\
    \ of cost function\nbased energy aware routing algorithms for wireless sensor\
    \ networks. Computer Networks, 56(7), pp.1951-\n1967. https://doi.org/10.1016/j.comnet.2012.01.023\n\
    Wang, X., Wang, J., Lu, K. and Xu, Y., 2012. GKAR: A novel geographic K-anycast\
    \ routing for wireless\nsensor networks. IEEE Transactions on Parallel and Distributed\
    \ Systems, 24(5), pp.916-925.\nDOI: 10.1109/TPDS.2012.143\nZahedi, Z.M., Akbari,\
    \ R., Shokouhifar, M., Safaei, F. and Jalali, A., 2016. Swarm intelligence based\
    \ fuzzy\nrouting protocol for clustered wireless sensor networks. Expert Systems\
    \ with Applications, 55, pp.313-\n328. https://doi.org/10.1016/j.eswa.2016.02.016\n\
    Farahani, B., Firouzi, F., Chang, V., Badaroglu, M., Constant, N., & Mankodiya,\
    \ K. (2018). Towards fog-\ndriven IoT eHealth: Promises and challenges of IoT\
    \ in medicine and healthcare. Future Generation\nComputer Systems, 78, 659-676.\
    \ https://doi.org/10.1016/j.future.2017.04.036.\nYang, Y., Zheng, X., Guo, W.,\
    \ Liu, X., & Chang, V. (2019). Privacy-preserving smart IoT-based healthcare big\n\
    data storage and self-adaptive access control system. Information Sciences, 479,\
    \ 567-592.\nhttps://doi.org/10.1016/j.ins.2018.02.005\nPage 19/24\nKaur, H., Alam,\
    \ M. A., Jameel, R., Mourya, A. K., & Chang, V. (2018). A proposed solution and\
    \ future\ndirection for blockchain-based heterogeneous medicare data in cloud\
    \ environment. Journal of medical\nsystems, 42(8), 156. https://link.springer.com/article/10.1007/s10916-018-1007-5.\n\
    G. Ramkumar & Logashanmugam, E.. (2018). Hybrid framework for detection of human\
    \ face based on\nhaar-like feature. International Journal of Engineering and Technology(UAE).\
    \ 7. 1786-1790.\n10.14419/ijet.v7i3.16227\nShi, X., Cao, J., Lu, T., & Chang,\
    \ V. (2019, May). A Survey on RFID Security and Privacy in Smart Medical:\nThreats\
    \ and Protections. In IoTBDS (pp. 278-285).\nhttps://www.scitepress.org/Papers/2019/77134/77134.pdf\n\
    Ganapathy, S., Sethukkarasi, R., Yogesh, P., Vijayakumar, P. and Kannan, A., 2014.\
    \ An intelligent temporal\npattern classi¦cation system using fuzzy temporal rules\
    \ and particle swarm\noptimization. Sadhana, 39(2), pp.283-302. https://link.springer.com/article/10.1007%2Fs12046-014-\n\
    0236-7.\nBanerjee, A., Neogy, S. and Chowdhury, C., 2012, November. Reputation\
    \ based trust management system\nfor MANET. In 2012 Third International Conference\
    \ on Emerging Applications of Information\nTechnology (pp. 376-381). IEEE. DOI: 10.1109/EAIT.2012.6407975\n\
    Chuang, M.C. and Chen, M.C., 2014. An anonymous multi-server authenticated key\
    \ agreement scheme\nbased on trust computing using smart cards and biometrics. Expert\
    \ Systems with Applications, 41(4),\npp.1411-1418. https://doi.org/10.1016/j.eswa.2013.08.040\n\
    Govindaraj, Dr & E, Logashanmugam. (2018). Study on impulsive assessment of chronic\
    \ pain correlated\nexpressions in facial images. Biomedical Research. 29. 10.4066/biomedicalresearch.29-18-886\n\
    Geetha G, Jayakumar C, \"Implementation Of Trust And Reputation Management For\
    \ Free-Roaming Mobile\nAgent Security\", IEEE Systems Journal, Vol. 9, No. 2,\
    \ pp. 556-566, June 2015.\nDOI: 10.1109/JSYST.2013.2292192\nHai Lin, Lusheng Wang,\
    \ and Ruoshan Kong, \"Energy E¨cient Clustering Protocol for Large-Scale Sensor\n\
    Networks\", IEEE Sensors Journal, Vol. 15, No. 12, pp. 7150-7160, December 2015.\n\
    DOI: 10.1109/JSEN.2015.2471843\nZhu, H., Du, S., Gao, Z., Dong, M. and Cao, Z.,\
    \ 2013. A probabilistic misbehavior detection scheme toward\ne¨cient trust establishment\
    \ in delay-tolerant networks. IEEE Transactions on Parallel and Distributed\n\
    Systems, 25(1), pp.22-32. DOI: 10.1109/TPDS.2013.36\nGovindaraj, Dr & Logashanmugam,\
    \ E.. (2019). Multimodal verge for scale and pose variant real time face\ntracking\
    \ and recognition. Indonesian Journal of Electrical Engineering and Computer Science.\
    \ 13. 665.\n10.11591/ijeecs.v13.i2.pp665-670\nPage 20/24\nMousa, Hayam, Sonia\
    \ Ben Mokhtar, Omar Hasan, Osama Younes, Mohiy Hadhoud, and Lionel Brunie.\n\"\
    Trust management and reputation systems in mobile participatory sensing applications:\
    \ A\nsurvey.\" Computer Networks 90 (2015): 49-73. https://doi.org/10.1016/j.comnet.2015.07.011\n\
    Deebak, Bakkiam David, Fadi Al-Turjman, Moayad Aloqaily, and Omar Alfandi. \"\
    An authentic-based\nprivacy preservation protocol for smart e-healthcare systems\
    \ in IoT.\" IEEE Access 7 (2019): 135632-\n135649., https://ieeexplore.ieee.org/abstract/document/8839043\n\
    Vijayakumar P, Pandiaraja P, Karuppiah M, Deborah LJ. An e¨cient secure communication\
    \ for healthcare\nsystem using wearable devices. Computers & Electrical Engineering.\
    \ 2017 Oct 1;63:232-45.\nhttps://doi.org/10.1016/j.compeleceng.2017.04.014\nFigures\n\
    Figure 1\nSystematic View of Reputation with Dynamic Mode\nPage 21/24\nFigure\
    \ 2\nCluster head Formation\nFigure 3\nFunctionality of Identify the Trust User\
    \ by Dynamic Trust\nPage 22/24\nFigure 4\nArchitecture of Reputation Based Dynamic\
    \ Trust System\nPage 23/24\nFigure 5\nPacket Drop Ratio for RAADT-AODV with malicious\
    \ node\nFigure 6\nDetection Accuracy Analysis\nFigure 7\nPage 24/24\nThroughput\
    \ Analysis\nSupplementary Files\nThis is a list of supplementary ¦les associated\
    \ with this preprint. Click to download.\nAuthorsPictureandBiography.doc\n"
  inline_citation: (Subaja Christo et al., 2021)
  journal: Research Square (Research Square)
  key_findings: The proposed system outperforms existing AODV protocols in terms of
    efficiency, security, and accuracy in detecting malicious nodes.
  limitations: null
  main_objective: Developing a secure and efficient system for e-health care applications
    using a reputation aggregation based dynamic trust model for edge computing.
  pdf_link: https://www.researchsquare.com/article/rs-560368/latest.pdf
  publication_year: 2021
  relevance_evaluation: The article is relevant to the point of exploring the use
    of advanced sensing technologies for non-invasive plant stress detection because
    it discusses the development of a secure and efficient system for e-health care
    applications, which could potentially be applied to remote patient monitoring
    or other similar applications that require secure data transmission and real-time
    analysis.
  relevance_score: '0.7'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Fuzzy logic, Reputation aggregation algorithm, Dynamic trust
    model
  title: Enhancement of Reputation Aggregation based Dynamic Trust Protocols for Edge
    Computing based E-Health Care System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/su151511713
  analysis: '>'
  authors:
  - Mohamed S. Abdalzaher
  - Moez Krichen
  - Derya Yiltas-Kaplan
  - Imed Ben Dhaou
  - Wilfried Yves Hamilton Adoni
  citation_count: 6
  explanation: From your close reading of the paper, provide a concise explanation
    of the study's purpose and main objectives, using a maximum of 3 sentences.
  full_citation: '>'
  full_text: ">\nCitation: Abdalzaher, M.S.; Krichen,\nM.; Yiltas-Kaplan, D.; Ben\
    \ Dhaou, I.;\nAdoni, W.Y.H. Early Detection of\nEarthquakes Using IoT and Cloud\n\
    Infrastructure: A Survey.\nSustainability 2023, 15, 11713.\nhttps://doi.org/10.3390/\n\
    su151511713\nAcademic Editor: Claudia Casapulla\nReceived: 10 June 2023\nRevised:\
    \ 11 July 2023\nAccepted: 26 July 2023\nPublished: 28 July 2023\nCopyright:\n\
    © 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an\
    \ open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the\
    \ Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsustainability\nReview\nEarly Detection of Earthquakes Using IoT and Cloud\n\
    Infrastructure: A Survey\nMohamed S. Abdalzaher 1,*\n, Moez Krichen 2,3\n, Derya\
    \ Yiltas-Kaplan 4\n, Imed Ben Dhaou 5,6,7\nand Wilfried Yves Hamilton Adoni 8,9\n\
    1\nDepartment of Seismology, National Research Institute of Astronomy and Geophysics,\
    \ Cairo 11421, Egypt\n2\nFaculty of Computer Science and Information Technology,\
    \ Al-Baha University, Al-Baha 65528, Saudi Arabia;\nmoez.krichen@redcad.org\n\
    3\nReDCAD Laboratory, National School of Engineers of Sfax, University of Sfax,\
    \ Sfax 3029, Tunisia\n4\nDepartment of Computer Engineering, Faculty of Engineering,\
    \ Istanbul University-Cerrahpa¸sa,\nIstanbul 34320, Türkiye\n5\nDepartment of\
    \ Computer Science, Hekma School of Engineering, Computing and Informatics,\n\
    Dar Al-Hekma University, Jeddah 22246, Saudi Arabia\n6\nDepartment of Computing,\
    \ University of Turku, 20500 Turku, Finland\n7\nHigher Institute of Computer Sciences\
    \ and Mathematics, Department of Technology, University of Monastir,\nMonastir\
    \ 5000, Tunisia\n8\nHelmholtz-Zentrum Dresden-Rossendorf, Center for Advanced\
    \ Systems Understanding, Untermarkt 20,\n02826 Görlitz, Germany\n9\nHelmholtz-Zentrum\
    \ Dresden-Rossendorf, Helmholtz Institute Freiberg for Resource Technology,\n\
    Chemnitzer Str. 40, 09599 Freiberg, Germany\n*\nCorrespondence: msabdalzaher@nriag.sci.eg\n\
    Abstract: Earthquake early warning systems (EEWS) are crucial for saving lives\
    \ in earthquake-prone\nareas. In this study, we explore the potential of IoT and\
    \ cloud infrastructure in realizing a sustainable\nEEWS that is capable of providing\
    \ early warning to people and coordinating disaster response\nefforts. To achieve\
    \ this goal, we provide an overview of the fundamental concepts of seismic waves\n\
    and associated signal processing. We then present a detailed discussion of the\
    \ IoT-enabled EEWS,\nincluding the use of IoT networks to track the actions taken\
    \ by various EEWS organizations and the\ncloud infrastructure to gather data,\
    \ analyze it, and send alarms when necessary. Furthermore, we\npresent a taxonomy\
    \ of emerging EEWS approaches using IoT and cloud facilities, which includes\n\
    the integration of advanced technologies such as machine learning (ML) algorithms,\
    \ distributed\ncomputing, and edge computing. We also elaborate on a generic EEWS\
    \ architecture that is sustainable\nand efﬁcient and highlight the importance\
    \ of considering sustainability in the design of such systems.\nAdditionally,\
    \ we discuss the role of drones in disaster management and their potential to\
    \ enhance\nthe effectiveness of EEWS. Furthermore, we provide a summary of the\
    \ primary veriﬁcation and\nvalidation methods required for the systems under consideration.\
    \ In addition to the contributions\nmentioned above, this study also highlights\
    \ the implications of using IoT and cloud infrastructure in\nearly earthquake\
    \ detection and disaster management. Our research design involved a comprehensive\n\
    survey of the existing literature on early earthquake warning systems and the\
    \ use of IoT and cloud\ninfrastructure. We also conducted a thorough analysis\
    \ of the taxonomy of emerging EEWS approaches\nusing IoT and cloud facilities\
    \ and the veriﬁcation and validation methods required for such systems.\nOur ﬁndings\
    \ suggest that the use of IoT and cloud infrastructure in early earthquake detection\
    \ can\nsigniﬁcantly improve the speed and effectiveness of disaster response efforts,\
    \ thereby saving lives\nand reducing the economic impact of earthquakes. Finally,\
    \ we identify research gaps in this domain\nand suggest future directions toward\
    \ achieving a sustainable EEWS. Overall, this study provides\nvaluable insights\
    \ into the use of IoT and cloud infrastructure in earthquake disaster early detection\n\
    and emphasizes the importance of sustainability in designing such systems.\nSustainability\
    \ 2023, 15, 11713. https://doi.org/10.3390/su151511713\nhttps://www.mdpi.com/journal/sustainability\n\
    Sustainability 2023, 15, 11713\n2 of 38\nKeywords: earthquake early warning system\
    \ (EEWS); disaster; management; internet of things;\ncloud systems; drones; validation;\
    \ veriﬁcation; survey\n1. Introduction\nOn 6 February 2023, a Mw 7.8 earthquake\
    \ destroyed southern and central Turkey\nas well as northern and western Syria.\
    \ 37 km (23 miles) west-northwest of Gaziantep is\nwhere the epicenter was. The\
    \ earthquake near Antakya, Hatay Province, peaked with a\nMercalli rating of XII\
    \ (Extreme) as mentioned in [1]. The epicenter of the strong earthquake,\nfollowed\
    \ by the one that occurred on February 6 by nine hours, was 95 km (59 miles) to\n\
    the north-northeast of the most recent one. There was signiﬁcant destruction and\
    \ tens of\nthousands of deaths. At least 57,300 fatalities had been reported as\
    \ of 20 March 2023, with\nmore than 50,000 of those occurring in Turkey and more\
    \ than 7200 in Syria [2].\nIt was the deadliest natural disaster in the history\
    \ of Turkey and the largest natural\ndisaster to hit Turkey in modern times since\
    \ the earthquake in Antioch in 526 [3]. Aside\nfrom being the deadliest earthquake\
    \ since the 1822 Aleppo earthquake in modern-day\nSyria, it was also the worst\
    \ earthquake worldwide since the 2010 Haiti earthquake and the\nsixth deadliest\
    \ of the twenty-ﬁrst century [4]. The fourth-costliest earthquakes on record,\n\
    damages in Turkey were expected to total USD 104 billion, and in Syria, USD 5.1\
    \ billion [5].\nThere are strong correlations between earthquakes, climate changes,\
    \ and mining activi-\nties [6–8]. Many scientists have predicted that the frequency\
    \ of earthquakes will keep increas-\ning [9]. Figure 1 illustrates the location\
    \ of earthquakes that occurred in the last 12 months\nwith intensity larger than\
    \ 7 Moment W-phase (Mww). In [10], the first paper on the idea of\nearthquake\
    \ early warning systems (EEWS) in 1985 was presented. These systems are networks\n\
    of ground-based sensors that alert users when the earth starts to tremble.\nFigure\
    \ 1. Major earthquakes that occurred in the last 12 months as reported in [11].\n\
    EEWS operates under the assumption that, despite the slow speed at which seismic\n\
    waves move, electronic alerts from the epicenter region may be delivered almost\
    \ instantly.\nThe process is as follows:\n1.\nSeveral types of seismic waves radiate\
    \ from an earthquake’s epicenter. Sensors are\nactivated by P-waves, which are\
    \ weaker but move more quickly. Thereafter, sensors\nsend signals to cloud servers\
    \ for processing.\nSustainability 2023, 15, 11713\n3 of 38\n2.\nAlgorithms in\
    \ the cloud server instantly determine the location, magnitude, and\nseverity\
    \ of an earthquake. How big is it? Who will suffer from this?\n3.\nThe technology\
    \ sends out an alert before slower but more destructive S-waves and\nsurface waves\
    \ arrive.\nThose who are close to the epicenter will not receive much, if any,\
    \ warning beforehand,\nwhile those who are farther away could only have a few\
    \ seconds to brace themselves. EWS\nmay help reduce some of the injuries and damage\
    \ caused by large earthquakes when used\nin conjunction with automated countermeasures\
    \ such as stopping trains or turning off\ngas lines.\nRecent years have seen a\
    \ signiﬁcant increase in the number of traditional as well as\ncontemporary technology\
    \ utilized in EEWSs [12–14]. As a consequence of this, effective\nintegration\
    \ of the numerous scientiﬁc ﬁelds is sought after in order to serve such crucial\n\
    systems. In general, actions taken to reduce risks, conduct seismic hazard assessments,\n\
    determine site speciﬁcations, and the like can be of assistance in this regard\
    \ [15–19]. De-\nveloping a reliable EEWS necessitates solving a number of issues\
    \ that are impacted by\nthe ongoing difﬁculties associated with earthquake catastrophes.\
    \ These issues include the\nobservation of earthquake characteristics, and the\
    \ environment type [20–25].\nRadio-frequency identiﬁcation, satellite systems,\
    \ the Internet of Things (IoT), network\nfunctions virtualization (NFV), 5G, software-deﬁned\
    \ networks (SDN), data networks, and a\nvariety of other technologies have all\
    \ been the focus of signiﬁcant research in recent years in\nan effort to lessen\
    \ the damage that earthquakes cause [26–34]. For instance, satellite systems\n\
    have been used to track earthquake movements, and IoT sensors have been used to\
    \ detect\nearthquakes and provide early warnings. Furthermore, 5G and SDN technologies\
    \ have\nbeen deployed for real-time communication and data transmission in emergency\
    \ situations.\nThese technologies have greatly enhanced the accuracy and speed\
    \ of earthquake detection\nand warning systems and have improved the response\
    \ time of emergency services.\nMoreover, the integration of robots and the internet\
    \ has the potential to be a signiﬁcant\nbreakthrough in this ﬁeld. According to\
    \ [35], a new integrated system named “robot-\nevent” has been proposed, which\
    \ is able to execute autonomous inspections and emergency\nresponses to a severe\
    \ event. The robot uses real-time image tracking to inspect the indoor\nenvironment\
    \ and help any human victims found on the ground. It operates in structurally\n\
    sound houses with moderate damage, focusing on situations where people are at\
    \ risk from\nfalling furniture. The system was tested indoors to assess its functionality\
    \ and operation\nalongside a smart EEWS. This new technology has the potential\
    \ to signiﬁcantly reduce\nthe risk of human casualties during an earthquake by\
    \ providing timely and accurate\ninformation to emergency responders. Future research\
    \ in this area could explore further\nthe use of robotics, artiﬁcial intelligence,\
    \ and the internet to develop more advanced and\nefﬁcient EEWSs.\nThe research\
    \ conducted in the literature regarding remote sensing applications facili-\n\
    tated by satellite communication systems did not cease with the studies by [36,37].\
    \ It also\nencompassed NFV and SDN, which involved gateways via IoT as well as\
    \ Micro-Electro-\nMechanical systems (MEMS), as noted in [38–41]. The primary\
    \ objective of this endeavor\nwas to provide relief to areas that had suffered\
    \ damage or destruction on a large scale.\nVirtualization played a critical role\
    \ in this, as it could help mitigate the risks posed by\nnatural disasters. As\
    \ highlighted in [42], such networks must be designed to optimize\nnode lifetimes.\
    \ In addition, ref. [43] presented a tragic scenario that showcased an EEWS\n\
    designed to facilitate a safe evacuation plan against disaster risks by combining\
    \ cloud-\nbased IoT with heterogeneous networks. Similarly, the combination of\
    \ IoT and current\ncommunication technologies and techniques could prove to be\
    \ crucial in ensuring the\nsmooth and secure transfer of data, as stated in [44–49].\n\
    The studies mentioned here are accompanied by conventional approaches to earth-\n\
    quake detection and analysis, as well as methods for distinguishing between different\n\
    types of fault ruptures, which have been extensively investigated in the relevant\
    \ academic\nliterature [50]. In [51], a local similarity earthquake detection\
    \ approach based on the near-\nSustainability 2023, 15, 11713\n4 of 38\nest neighbor\
    \ method was proposed to determine whether an earthquake had occurred\nby examining\
    \ the consistency of received signals from the nearest neighbors of targeted\n\
    stations and their closest neighbors. On the other hand, refs. [52,53] focused\
    \ more on\ndetermining the earthquake’s amplitude in the ﬁrst few seconds of its\
    \ occurrence rather\nthan the complete rupture. However, conventional methods\
    \ take a signiﬁcant amount of\ntime to calculate earthquake parameters [54], highlighting\
    \ the need for additional efforts\nand studies. Early research suggests that it\
    \ is possible to accurately predict the magnitude\nand depth of an earthquake\
    \ using a graph CNN model that employs batch normalization\nand attention mechanism\
    \ techniques. This model can be used in any location with any\nseismic nodes.\
    \ The variability of seismic waves and the complexity of the Earth’s structure\n\
    suggest that there is ample room for innovative and adaptable solutions. With\
    \ the help\nof modern technologies, the impact of earthquakes on the studied region\
    \ in [54] can be\nsigniﬁcantly reduced.\nAn increasingly useful technology for\
    \ disaster management is drones. They can\nbe used to gather real-time data and\
    \ give emergency responders situational awareness,\nwhich can aid in improved\
    \ decision-making and more efﬁcient responses. Drones with\ncameras and sensors\
    \ can survey disaster regions swiftly and safely, collecting precise\nimagery\
    \ and data that can be used to assess damage, spot areas that require immediate\n\
    attention, and organize rescue and recovery efforts [55]. Drones can also be used\
    \ to transport\npeople in hazardous or hard-to-reach locations necessary goods\
    \ such as food and medical\nsupplies [56]. Drones are an important tool in emergency\
    \ management because they have\nthe potential to greatly speed up and enhance\
    \ the efﬁciency of disaster response efforts.\n5G and B5G networks offer several\
    \ advantages for emergency communication, includ-\ning faster data transmission\
    \ speeds, lower latency, and improved reliability [57–59]. These\nnetworks can\
    \ enable real-time communication between emergency responders and affected\nindividuals,\
    \ as well as the seamless transfer of data and video feeds from IoT devices, such\n\
    as sensors and drones [60–62].\nIn particular, D2D communication can play a crucial\
    \ role in emergency situations, as it\nallows devices to communicate directly\
    \ with each other without relying on a centralized\nnetwork [63,64]. This can\
    \ be especially useful in scenarios where network infrastructure\nmay be damaged\
    \ or overloaded, as D2D communication can operate on a peer-to-peer\nbasis and\
    \ bypass the need for a central network [65,66]. In an earthquake early warning\n\
    system, D2D communication could allow sensors to share data with each other and\
    \ trigger\nalerts in real-time without relying on a centralized system [67,68].\n\
    Edge computing can also be leveraged to enhance the performance of earthquake\n\
    early warning systems [69,70]. By processing data closer to the source, edge computing\
    \ can\nreduce the amount of data that needs to be transmitted to centralized servers\
    \ and enable\nfaster response times [71,72]. For example, in an earthquake early\
    \ warning system that\nuses drones to collect data, edge computing could be used\
    \ to process the data on the drones\nthemselves, rather than transmitting it back\
    \ to a central server for processing [73,74]. This\nwould not only reduce the\
    \ amount of data that needs to be transmitted but also enable\nfaster response\
    \ times in the event of an earthquake [75].\nCloud computing helps manage disasters.\
    \ Disaster management ﬁrms can swiftly\ndeploy vital apps and services to assist\
    \ emergency response activities using cloud platforms’\nscalability, ﬂexibility,\
    \ and accessibility. Cloud-based technologies can monitor and analyze\ndisaster\
    \ data in real time, helping emergency responders manage resources. Cloud systems\n\
    can store and handle enormous volumes of data, such as maps, satellite imaging,\
    \ and social\nmedia feeds, to help businesses better analyze disasters. Cloud-based\
    \ communication and\ncollaboration solutions can also help rescuers communicate,\
    \ coordinate, and stay linked\nduring the pandemonium. Cloud computing may make\
    \ disaster management businesses\nmore agile, responsive, and effective in saving\
    \ lives and minimizing damage. Fog and edge\ncomputing are distributed computing\
    \ methods that provide computing resources near data\nsources. Fog computing is\
    \ a dispersed computing infrastructure that processes data near\nits source. Edge\
    \ computing brings computing resources to the end-user or device. Fog and\nSustainability\
    \ 2023, 15, 11713\n5 of 38\nedge computing are important in natural disaster detection\
    \ and control. Natural disasters\ndamage communication networks, making data collection\
    \ and transmission difﬁcult. Fog\nand edge computing provide local data processing\
    \ and analysis without data centers\nor clouds. In the aftermath of a disaster,\
    \ time is of the essence because communication\ninfrastructure may be compromised\
    \ [76–79].\nFor example, sensors deployed in an area prone to ﬂooding can collect\
    \ data on water\nlevels, ﬂow rates, and other factors that can help predict and\
    \ manage the impact of a ﬂood.\nBy using edge and fog computing, this data can\
    \ be analyzed in real-time, allowing for EWS\nto be put in place and emergency\
    \ responders to be deployed more quickly [80]. Similarly,\nsensors can be used\
    \ to detect seismic activity and predict earthquakes, with data processed\nlocally\
    \ to provide early warning and minimize damage.\nOverall, fog and edge computing\
    \ play an important role in natural disaster detection\nand management by enabling\
    \ real-time data processing and analysis at the edge of the\nnetwork [81]. This\
    \ approach can help improve the speed and accuracy of disaster response,\nultimately\
    \ leading to better outcomes for affected communities.\nVeriﬁcation and validation\
    \ (V&V) techniques are crucial for ensuring the quality, relia-\nbility, and security\
    \ of software systems in the context of IoT and cloud computing [82,83].\nThese\
    \ systems involve a complex network of devices, sensors, and services that must\
    \ work\ntogether seamlessly and securely [84]. V&V techniques provide a framework\
    \ for testing and\nvalidating these systems, ensuring that they meet the speciﬁed\
    \ requirements and perform\nas intended. By implementing V&V techniques, developers\
    \ can identify and correct defects\nand errors before they cause signiﬁcant problems,\
    \ ultimately leading to higher quality and\nmore reliable IoT and cloud systems\
    \ [85].\nIn [86], the authors reviewed geospatial and remote sensing technologies\
    \ in earthquake\nresearch and disaster management, analyzing their historical\
    \ and future applications, limi-\ntations, and methodologies. It provides a framework\
    \ for earthquake hazard, vulnerability,\nand risk analysis using geospatial technologies.\
    \ In [87], the study examined remote sensing\napplications, including Landsat\
    \ satellite imaging, LiDAR, optical satellite photography,\nInSAR, and DEMETER\
    \ in earthquake research. Many other studies [88–90] explore the\nrole of IoT\
    \ in disaster management and compares IoT-based options for various calamities.\n\
    It highlights IoT EWS for ﬁres and earthquakes and advises stakeholders on leveraging\n\
    IoT technology to secure smart cities’ infrastructure and minimize risks. The\
    \ studies also\nevaluate Caribbean DRM (Disaster and Risk Management) systems,\
    \ emphasizing the need\nfor technology and new methods in monitoring disaster\
    \ risks in small island states. It\nassesses technology in the ﬁve DRM pillars\
    \ and proposes improvements for technology\nadoption in the Caribbean subregion.\
    \ The research contributes to the global discussion on\ntechnology and innovation\
    \ in DRM and addresses sustainable development concerns in\nCaribbean SIDS (Small\
    \ Islands Developing States).\nThe review paper [91] explores building damage\
    \ mapping techniques in post-earthquake\nscenarios, emphasizing machine learning\
    \ (ML) and deep learning frameworks. It addresses\nthe drawbacks of manual interpretation\
    \ of remote sensing imagery and identifies research\ngaps. The study of [92] reviews\
    \ remote sensing methods for earthquake risk assessment,\nhighlighting the importance\
    \ of vulnerability assessment and the need for a comprehensive\napproach. In [93],\
    \ satellite remote sensing technology for EEWS is suggested to achieve more\n\
    improvements for EWS. The research of [94] examines post-earthquake damage investiga-\n\
    tion using optical remote sensing data and change detection algorithms, discussing\
    \ their\nchallenges and potential. The authors in [95] analyze how emerging technologies\
    \ improve\ndisaster management processes and call for further investigation. Lastly,\
    \ the work done in [96]\npresents a procedure for managing pre- and post-earthquake\
    \ stages of structure management\nusing digital tools and emphasizes the role\
    \ of BIM models and IDM standards.\nCompared to previous works, our paper presents\
    \ a comprehensive overview of the role\nof EEWS in disaster assessment and relief,\
    \ speciﬁcally focusing on the use of IoT networks\nand cloud infrastructure. The\
    \ paper provides fundamental concepts about seismic waves\nand associated signal\
    \ processing, details on the EEWS IoT system, and a taxonomy of EEWS\nSustainability\
    \ 2023, 15, 11713\n6 of 38\napproaches using emerging IoT and cloud facilities.\
    \ Additionally, our paper elaborates on a\ngeneric IoT-enabled EEWS architecture,\
    \ discusses drones’ role in disaster management, and\nprovides a summary of the\
    \ primary veriﬁcation and validation (V&V) methods required\nfor the systems under\
    \ consideration. Finally, the paper describes research gaps in this\nresearch\
    \ domain and provides future directions. While previous papers have discussed\n\
    geospatial technologies, remote sensing, and social media platforms’ use in earthquake\n\
    research, disaster management, and catastrophe response, our paper focuses on\
    \ the role\nof IoT and cloud infrastructure in EEWS and provides a comprehensive\
    \ overview of the\nmany elements needed to realize an EEWS.\nTable 1 is intended\
    \ to provide a comparison of our work with previous works in the\nﬁeld of earthquake\
    \ research and disaster management. It summarizes the main focus,\nmethodology,\
    \ and contributions of each paper, highlighting the unique contributions of\n\
    our work in relation to other research in this domain.\nTable 1. Comparison of\
    \ our work with previous works.\nRef.\nUtilized Technology\nMain Focus\nMethodology\n\
    Contributions\n[86]\nGeophysical technology\nEarthquake and catastro-\nphe management\n\
    Literature review\nEarthquake hazard,\nvulnerability,\nrisk analysis\n[87]\nRemote\
    \ sensing\nEarthquake management\nReview of remote sensing\napplications\nRemote\
    \ sensing pros and cons in\nearthquake research\n[88]\nUAV hardware\nDisaster\
    \ relief\nField trials and case stud-\nies\nImplementable framework for drone\n\
    data collection and analysis for dis-\naster preparedness, response, and re-\n\
    covery\n[89]\nIoT technology\nDisaster management\nComparative analysis of\nIoT-based\
    \ disaster man-\nagement options\nPractical applications of IoT technol-\nogy\
    \ for disaster management\n[90]\nModern technology\nDisaster and risk manage-\n\
    ment\nEvaluation of available\nand applied technology\nSuggestions for improving\
    \ technol-\nogy adoption across all DRM pillars\n[91]\nMapping techniques\nMapping\n\
    in\npost-\nearthquake settings\nEvaluation of ML and\ndeep\nlearning\nframe-\n\
    works\nIdentiﬁcation of research gaps and\npossibilities for real-world scenarios\n\
    [92]\nRemote sensing\nRemote sensing data and\nmethods for earthquake\nrisk assessment\n\
    Review of remote sensing\napplications\nNecessity for a complete, interdisci-\n\
    plinary approach to earthquake risk\nassessment\n[93]\nSatellite images\nEEWS\n\
    Literature review\nEvaluation of current and potential\napplications of remote\
    \ sensing for\nseismic disaster early warning\n[94]\nRemote sensing\nPost-earthquake\
    \ damage\nassessment\nCase studies and litera-\nture review\nIdentiﬁcation of\
    \ challenges and op-\nportunities in remote sensing for\npost-earthquake damage\
    \ assessment\n[95]\nEmerging technologies\nDisaster management\nLiterature\nreview\n\
    and\ntext mining\nAnalysis of the effects of emerg-\ning technologies on disaster\
    \ manage-\nment\n[96]\nDigital tools\nManaging existing struc-\ntures in earthquake\
    \ set-\ntings\nCase study\nProcedure for managing pre- and\npost-earthquake stages\
    \ of existing\nstructure management using digital\ntools\nOur\nWork\nIoT nodes\
    \ and cloud in-\nfrastructure\nEEWS, environment type,\ndata type, and source,\n\
    measurement\nparame-\nters, cloud infrastructure\nLiterature\nreview\nand\nanalysis\n\
    Comprehensive overview of the role\nof IoT and cloud infrastructure in\nEEWS,\
    \ including a generic architec-\nture and veriﬁcation and validation\nmethods\n\
    Sustainability 2023, 15, 11713\n7 of 38\nThe following is a list of the key contributions\
    \ that the paper makes, highlighting the\nvarious points of innovation:\n•\nWe\
    \ clarify why the EEWS is advantageous for smart cities.\n•\nWe emphasize the\
    \ growth of IoT usage, as well as the IoT system framework in general\nand its\
    \ constituent parts.\n•\nWe have developed a thorough taxonomy of IoT devices\
    \ that includes various topics\nsuch as the source of data, environment, measured\
    \ parameters, and factors of validation.\n•\nWe present a standard design for\
    \ the IoT that takes into account potential emer-\ngency management.\n•\nWe discuss\
    \ the veriﬁcation and validation concerns related to using IoT-based EEWS.\nThe\
    \ rest of the paper is organized as follows. Section 2 illustrates some generic\
    \ notions\nabout seismic waves and signals. Section 3 provides an overview of\
    \ IoT-Cloud systems.\nSection 4 depicts the IoT and cloud techniques integration\
    \ in terms of EEWS. Section 5\npresents an overview of the veriﬁcation and validation\
    \ issues associated with the use of\nIoT-Cloud-based EEWS. Section 6 lists the\
    \ main open challenges, concludes the work, and\nidentiﬁes some potential future\
    \ work directions.\n2. Seismic Waves and Seismic Signal Processing Techniques\n\
    Seismic activity is a key subject of investigation. Understanding how different\
    \ types\nof structures respond to earthquake loads and ﬁnding out how to safeguard\
    \ occupants of a\nstructure in an earthquake are both aided by this knowledge.\n\
    The study of seismicity can help us better understand the many seismic wave types\n\
    that are generated, allowing us to map both the regions that are earthquake-prone\
    \ and\nthose that are not. Studying a region’s seismic activity aids in establishing\
    \ minimum safety\nrequirements for that area, making it simpler for life to go\
    \ on after an earthquake [97,98].\nAcoustic energy, known as a seismic wave, can\
    \ move through the Earth or another\nplanetary body. It could be caused by a quake\
    \ (or an earthquake more generally), a volcanic\neruption, the movement of magma,\
    \ a big landslide, or a sizable explosion brought on by\nhuman activity, such\
    \ as mining, which releases low-frequency acoustic energy. Seismolo-\ngists are\
    \ responsible for investigating seismic waves. To record the waves, seismologists\n\
    use accelerometers, hydrophones, or seismometers that are submerged in water [99].\
    \ It\nis important to differentiate seismic waves from seismic noise, also known\
    \ as ambient\nvibration, which is characterized by a continuous low-amplitude\
    \ vibration and can be\ncaused by a wide variety of natural and artiﬁcial sources.\
    \ Arrays of sensors are typically\nused in seismic signal processing, which is\
    \ followed by signal conditioning and data fusion.\nAn ADC converter is then used\
    \ to digitize the gathered data, and a microcontroller is used\nto process it.\
    \ This is referred to as an IoT node in the context of the IoT, and it is shown\
    \ in\nFigure 2.\nFigure 2. IoT sensor node for EEWS.\nIt is possible to differentiate\
    \ between the two types of seismic waves known as body\nwaves, which move through\
    \ the inside of the planet, and surface waves, which move along\nthe surface of\
    \ the planet. Body waves ﬂow through the interior of the Earth in a manner\nSustainability\
    \ 2023, 15, 11713\n8 of 38\nthat is determined by the paths that are created by\
    \ material properties such as density and\nmodulus (stiffness). Temperature, chemical\
    \ composition, and the state of the material all\nhave an effect on the material’s\
    \ modulus and density. This phenomenon can be compared\nto the refraction of light\
    \ waves. On the basis of how particles move, body waves can be\ndivided into two\
    \ distinct categories: primary and secondary waves. Around the year 1830,\nthe\
    \ French mathematician Siméon Denis Poisson identiﬁed this distinction as follows\
    \ [100]:\n•\nPrimary waves, also referred to as P-waves, are longitudinal compressional\
    \ waves that\nmove through the earth in a straight line. These waves are known\
    \ as “primary” waves\nbecause they arrive ﬁrst at seismograph stations, traveling\
    \ faster through the earth\nthan other types of waves. P-waves are pressure waves\
    \ that can travel through any\nmaterial, including ﬂuids, and move at a speed\
    \ that is around 1.7 times faster than that\nof S-waves. In contrast to S-waves,\
    \ which are transverse waves that move side-to-side,\nP-waves are compression\
    \ waves that cause particles in the material they are traveling\nthrough to move\
    \ back and forth in the direction of the wave’s propagation. They take\nthe form\
    \ of sound waves in the air and move at the same velocity as sound waves,\nwhich\
    \ is around 330 m per second on average. The ability of P-waves to travel through\n\
    any material allows them to be used to study the interior of the earth. By measuring\n\
    the time taken for P-waves to travel through the earth from an earthquake’s epicenter\n\
    to a seismograph station, scientists can calculate information about the earth’s\
    \ internal\nstructure. For example, the average speed of P-waves in granite is\
    \ roughly 5000 m per\nsecond, while in water, it is around 1450 m per second.\
    \ This information can be used\nto create a detailed model of the Earth’s interior.\n\
    •\nS-waves, also known as secondary shear waves, are transverse waves that cause\
    \ the\nground to shift in a direction perpendicular to their propagation during\
    \ an earthquake.\nThese waves arrive at seismograph stations after P-waves, which\
    \ are faster. S-waves\nhave a horizontal polarization and move in a horizontal\
    \ direction, causing the ground\nto shift from side to side. However, S-waves\
    \ can only travel through solids since\nliquids and gases do not support shear\
    \ forces. They move through any solid medium\nat a speed that is approximately\
    \ 60% slower than P-waves. The absence of S-waves in\nthe outer core of the Earth\
    \ is consistent with the presence of liquid. This is because\nS-waves cannot propagate\
    \ through liquids, and their absence indicates that the outer\ncore is predominantly\
    \ liquid. However, P-waves can propagate through liquids,\nwhich is why they can\
    \ travel through the entire Earth. The study of seismic waves\nand their behavior\
    \ has provided scientists with valuable insights into the structure\nand composition\
    \ of the Earth’s interior.\nThe path that seismic surface waves take along the\
    \ surface of the Earth [101]. These\nare an example of a type of surface wave\
    \ known as mechanical surface waves. They are\nreferred to as surface waves because\
    \ their strength decreases as they go away from the\nocean’s surface. They move\
    \ at a much slower pace compared to seismic body waves (P\nand S). The amplitude\
    \ of surface waves can reach several millimeters during particularly\npowerful\
    \ earthquakes.\nSeismographs that are situated at a greater distance from the\
    \ epicenter of an earthquake\nare unable to detect the high frequencies of the\
    \ ﬁrst P wave. In contrast, seismographs\nthat are situated closer to the epicenter\
    \ are able to record both the P and S waves that are\ngenerated when an earthquake\
    \ takes place [102].\nThe problems that are associated with seismic data are probably\
    \ unmatched by any\nothers. During the course of the past few decades, the amounts\
    \ of such data have nearly\nmultiplied exponentially [103]. In recent acquisition\
    \ studies, petabits of data are being pro-\ncessed on a daily basis. This requires\
    \ massive processing capabilities. It should, therefore,\nnot come as a surprise\
    \ that data formats have evolved signiﬁcantly over the years and\nthat they have\
    \ been altered to meet particular workﬂows or software solutions, which has\n\
    added to the complexity of managing data [104].\nIn recent years, the industry\
    \ of exploration and production has been dealing with “big\ndata” in the form\
    \ of seismic data [105]. This data is collected during seismic surveys. As\nSustainability\
    \ 2023, 15, 11713\n9 of 38\nmore and more varieties of data are gathered and reprocessed\
    \ for a variety of purposes, the\namount and volume of data continue to grow at\
    \ an alarming rate. It is necessary to locate\nand manage both ﬁeld and prestack\
    \ data because new insights can be derived from old data\nby applying updated\
    \ seismic processing methods. Because of this, it is important to keep\ntrack\
    \ of both sets of data. Several companies made the decision to store this information\
    \ on\ntapes because of the massive size of seismic data ﬁles and the prohibitively\
    \ expensive cost\nof disk space. However, tapes were difﬁcult to handle and regularly\
    \ went missing, so this\nwas not an ideal solution. Web-based viewers and administration\
    \ tools make it easier to\ndiscover and handle data from anywhere in the world.\
    \ At the same time, tiered storage\nand cloud storage offer new and more cost-effective\
    \ means of keeping enormous seismic\ndatasets [106]. Figure 3 shows the enhancements\
    \ of the utilized earthquake measurement.\nFigure 3. Earthquake measurement evolution.\n\
    Seismic wave analysis is a key component of earthquake early warning systems,\
    \ as\nit enables the detection and characterization of seismic waves in real-time\
    \ [107,108]. One\nof the most widely used signal processing techniques in seismic\
    \ wave analysis is the\nFourier transform, which is used to transform time-domain\
    \ signals into frequency-domain\nsignals [109,110]. In earthquake early warning\
    \ systems, the Fourier transform is often used\nto analyze the spectral content\
    \ of seismic waves, which can provide important information\nabout the location,\
    \ magnitude, and duration of an earthquake [111]. The Fourier transform\nis also\
    \ used to ﬁlter out noise and unwanted signals from seismic data, improving the\n\
    accuracy of earthquake detection and analysis [112].\nAnother advanced signal\
    \ processing technique used in seismic wave analysis is\nwavelet analysis, which\
    \ is used to analyze signals that are both time-varying and non-\nstationary [113–115].\
    \ In earthquake early warning systems, wavelet analysis is often used\nto detect\
    \ and analyze seismic waves that have complex frequency components, such as\n\
    those generated by slow earthquakes or volcanic activity [116,117]. By decomposing\
    \ a\nseismic waveform into its constituent frequency components, wavelet analysis\
    \ can provide\nmore detailed information on the characteristics of seismic waves,\
    \ such as their frequency\ncontent, duration, and amplitude [118,119].\nIn addition\
    \ to these advanced signal processing techniques, earthquake early warning\nsystems\
    \ also rely on a variety of speciﬁc parameters to optimize their performance [120,121].\n\
    These parameters include sampling rates, window sizes, and ﬁlter cutoff frequencies,\n\
    among others. Sampling rates determine how often seismic data is collected and\
    \ stored,\nwhile window sizes determine the length of time over which seismic\
    \ data is analyzed.\nFilter cutoff frequencies determine which frequency components\
    \ of a seismic waveform are\nanalyzed and are often used to remove noise and unwanted\
    \ signals from seismic data.\nIn conclusion, earthquake early warning systems\
    \ rely on a variety of advanced signal\nprocessing techniques and speciﬁc parameters\
    \ to detect and analyze seismic waves in\nreal time. By providing more detailed\
    \ information on these techniques and parameters,\nwe aim to enhance the technical\
    \ rigor of our paper and improve the understanding of\nthe underlying technology.\
    \ By optimizing the performance of earthquake early warning\nSustainability 2023,\
    \ 15, 11713\n10 of 38\nsystems through advanced signal processing techniques and\
    \ speciﬁc parameters, we can\nimprove the accuracy and effectiveness of these\
    \ systems, ultimately helping to save lives\nand reduce the impact of earthquakes\
    \ on communities.\n3. IoT-Cloud Systems\n3.1. IoT Systems\nThe IoT is gaining\
    \ increasing support as a viable new technology throughout the\nworld [122,123].\
    \ An IoT is a system that relies on connected embedded items or gadgets\nthat\
    \ have identiﬁers and are able to interact with one another without the assistance\n\
    of humans using a common communication protocol. It has been reported that there\n\
    are more internet-connected devices on the earth than there are humans, where\
    \ these\ndevices support the smart cities establishment [124–126]. Some smart\
    \ cities are already in\nexistence [127]. The growth of intelligent technology\
    \ is outlined on Statista’s website [128]\nunder Figure 4. As has been suggested,\
    \ an enormous increase in smart homes as well\nas commercial buildings, and important\
    \ requirements for these buildings will include\nintelligent electricity and water\
    \ management [129]. Statista projects that the number of IoT\ndevices will nearly\
    \ triple between 2020 and 2030, going from 9.7 billion in 2020 to more\nthan 29\
    \ billion in 2030. Over 5 billion consumer IoT devices are expected to exist in\
    \ China\nby 2030. Accordingly, it is the nation with the majority of these devices.\
    \ Consumer markets\nmake use of IoT devices; nevertheless, it is anticipated that\
    \ the consumer market will\naccount for more than 60 percent of all IoT-connected\
    \ devices by the year 2020 [128]. For\nthe next decade, it is anticipated that\
    \ this proportion will not change from its current value.\nϬ\nϱ\nϭϬ\nϭϱ\nϮϬ\n\
    Ϯϱ\nϯϬ\nϯϱ\nϬ\nϱ\nϭϬ\nϭϱ\nϮϬ\nϮϱ\nϯϬ\nϯϱ\nϮϬϭϵ ϮϬϮϬ ϮϬϮϭ ϮϬϮϮ ϮϬϮϯ ϮϬϮϰ ϮϬϮϱ ϮϬϮϲ\
    \ ϮϬϮϳ ϮϬϮϴ ϮϬϮϵ ϮϬϯϬ\nEƵŵďĞƌ\x03ŽĨ\x03ŶŽĚĞƐ\x03;\x11ŝůůŝŽŶƐͿ\nzĞĂƌ\nsĂůƵĞƐ\n\
    dƌĞŶĚ\nFigure 4. Estimated growth of IoT nodes.\nAccording to [130–134], several\
    \ industry verticals now have more than 100 million\nconnected IoT devices, including\
    \ government, retail and wholesale, transportation and\nstorage, electricity,\
    \ steam, gas, air conditioning, waste management, water supply, and\nretail and\
    \ wholesale. It is predicted that by 2030, over 8,000,000 IoT nodes will be employed\n\
    in all industries [128]. In addition, cell phones can represent the best contributor\
    \ to IoT\nnodes. Interestingly, it is expected to reach nearly 17 billion by 2030,\
    \ and more than one\nbillion would be used to connected (autonomous) vehicles\
    \ [128], information technology\ninfrastructure, asset tracking and monitoring,\
    \ and smart grids [135–137].\nWhile conﬁguring an IoT system, the following steps\
    \ should be carried out in accor-\ndance with established industry standards [138–143]:\n\
    •\nProviding the node with an interface that can collect data from the environment.\n\
    •\nProviding a tool for acquiring and analyzing data in order to derive knowledge\
    \ from it.\n•\nTaking action and communicating choices and information to the\
    \ appropriate hubs.\nTo gain a comprehensive understanding of an IoT solution’s\
    \ architecture, it is neces-\nsary to examine multiple IoT systems. As shown in\
    \ Figure 5, an IoT system’s framework\ntypically consists of a sensor network\
    \ that monitors changes in the surrounding environ-\nment. Depending on the required\
    \ transmission speed and distance, the collected stream\nshould be transmitted\
    \ to a centralized or decentralized administration using, e.g., Zig-\nbee, Bluetooth,\
    \ Tmote Sky, 4G, etc. It is important to note that the sensor system needs\nSustainability\
    \ 2023, 15, 11713\n11 of 38\na continuous source of electricity, and the choice\
    \ of connectivity is inﬂuenced by power\nconsumption, with mobile service requiring\
    \ more power than WiFi, 474.67 to 576.64 mW\nand 1254.3 to 1540.6 mW, respectively\
    \ [144]. Safety considerations for both hardware and\nconnectivity are also crucial.\
    \ An IoT system’s data is reviewed or saved in the cloud system\nto identify patterns\
    \ and extrapolate information, a critical requirement for any IoT system.\nThe\
    \ data can be simpliﬁed using data visualization, and alert systems can be implemented\n\
    to provide appropriate levels of caution to users. It is essential that IoT system\
    \ design is\nnot limited to industry professionals only.\nFigure 5. A general\
    \ IoT system paradigm.\nThe IoT has the potential to revolutionize methods of\
    \ detecting and managing disasters.\nWith the help of IoT devices, we can collect\
    \ real-time data on various environmental factors\nsuch as temperature, humidity,\
    \ air pressure, and wind speed, which can help us detect\nnatural disasters such\
    \ as hurricanes, ﬂoods, and earthquakes. These devices can also\nmonitor infrastructure\
    \ such as bridges, dams, and buildings for any signs of damage or\nweakness and\
    \ alert authorities before they collapse or fail, preventing further damage and\n\
    loss of life.\nMoreover, IoT can aid disaster management by providing real-time\
    \ updates on the\naffected areas, helping authorities plan and allocate resources\
    \ effectively. Smart sensors and\ncameras can be deployed to assess the extent\
    \ of the damage in disaster-stricken areas, and\ndrones can be used to reach inaccessible\
    \ areas and gather more information. This data can\nbe analyzed using ML algorithms\
    \ to identify patterns and predict future disasters [145,146],\nimproving the\
    \ accuracy of EWS and minimizing the impact of disasters.\nAnother signiﬁcant\
    \ advantage of IoT in disaster management is its ability to facilitate\ncommunication\
    \ between emergency responders and victims. Wearable devices and mobile\napps\
    \ can help victims send alerts and SOS messages, and responders can use IoT devices\n\
    to locate and rescue survivors in real time. IoT can also help in tracking the\
    \ movements of\nrescue teams and ensuring their safety.\nThe use of IoT for disaster\
    \ detection and management has the potential to save\ncountless lives and minimize\
    \ the impact of disasters. By leveraging IoT devices to collect\nreal-time data,\
    \ authorities can detect disasters early, manage resources effectively, and\n\
    respond quickly to save lives. However, it is crucial to address concerns about\
    \ data privacy\nand security to ensure the safe and ethical use of IoT in disaster\
    \ management.\nDrones, also known as unmanned aerial vehicles (UAVs), have come\
    \ a long way\nsince their inception in the early 20th century [147]. Initially\
    \ used for military purposes,\ndrones have evolved and diversiﬁed over time, and\
    \ today they have a wide range of\napplications in various ﬁelds, including photography,\
    \ agriculture, search and rescue, and\ndisaster management [148]. In addition,\
    \ it can be equipped with thermal imaging sensors\nthat can also be used to detect\
    \ the presence of survivors in collapsed buildings or other\nhard-to-reach areas\
    \ [149].\nThere are several types of drones (Figure 6), each with unique characteristics\
    \ and\ncapabilities. The most common types of drones are ﬁxed-wing, rotary-wing,\
    \ and hybrid\ndrones. Fixed-wing drones are similar to airplanes and can ﬂy for\
    \ longer distances, while\nrotary-wing drones, also known as quadcopters, are\
    \ more agile and can hover in place.\nHybrid drones combine features of both ﬁxed-wing\
    \ and rotary-wing drones, providing a\nbalance between endurance and agility.\n\
    Sustainability 2023, 15, 11713\n12 of 38\nFigure 6. Different types of UAVs.\n\
    Drones can be involved in various types of communications (Figure 7), including\n\
    visual, auditory, and data communication. Visual communication involves transmitting\n\
    images and videos captured by the drone’s camera to a remote operator or a ground\
    \ station.\nAuditory communication can include transmitting audio messages, such\
    \ as warnings or\ninstructions, to individuals or groups on the ground via a speaker\
    \ on the drone. Data\ncommunication involves transmitting data, such as telemetry\
    \ and sensor readings, between\nthe drone and a ground station or another device.\
    \ Additionally, drones can be equipped\nwith communication technologies such as\
    \ satellite communication, Wi-Fi, and cellular\nnetworks to enable long-range\
    \ communication and control. In [150], the authors exploited\nthe UAVs to collect\
    \ data for disaster management relying on 5G (ﬁfth generation) and B5G\n(beyond\
    \ 5G) systems with their huge capacity in terms of different data types. The authors\n\
    investigated various literature solutions to some UAV issues, such as energy harvesting\n\
    and security. For example, they mentioned a sample method that used UAVs to ﬁnd\
    \ the\nmost suitable localization of the sensor nodes for optimizing Quality of\
    \ Service.\nFigure 7. Possible types of communications between UAVs and end-users.\n\
    In recent years, advances in technology have enabled the integration of new sensing\n\
    and data collection methods into EEWS systems, including the use of drones [151,152].\n\
    Drone-based sensing can provide high-resolution data on earthquake characteristics,\
    \ such\nas ground motion and deformation, which can improve the accuracy and effectiveness\n\
    of EEWS systems [153,154]. The main advantages and limitations of the use of drones\
    \ is\nsummarized in Table 2.\nSustainability 2023, 15, 11713\n13 of 38\nTable\
    \ 2. Main Advantages and Limitations of Drones.\nAdvantages\nLimitations\nGood\
    \ performance in autonomous processes\nRequirement of continuous connectivity\
    \ with the\ncontrollers, network coordination\nLong-distance ﬂights, despite the\
    \ need for\nline-of-sight, thus large coverage area\nRange limitation proportional\
    \ to the physical ca-\npabilities such as radio controller’s range, line-of-\n\
    sight, and positioning\nTransmission of big data to the cloud\nLimited ability\
    \ for intelligent data processing\nFast-deployed, ﬂexible, and on-demand oper-\n\
    ative structure\nModeling complexity\nLow-cost values\nThe necessity of Quality\
    \ of Service optimization\nUsage in dangerous areas\nSecurity challenges such\
    \ as hijacking\nReal-time communication is also essential for the timely dissemination\
    \ of earthquake\nalerts, and various communication technologies, including satellite\
    \ and wireless networks,\nare used to transmit sensor data and alerts to processing\
    \ centers and end-users [155]. In\naddition, the integration of EEWS systems with\
    \ IoT and cloud infrastructure can provide\nscalability, fault-tolerance, and\
    \ data processing capabilities [156]. IoT devices, such as\naccelerometers and\
    \ GPS sensors, can provide additional data sources for earthquake moni-\ntoring\
    \ and analysis. In contrast, cloud infrastructure can provide storage and processing\n\
    capabilities for large-scale data analysis and modeling [157]. Coordination between\
    \ these\nvarious technical aspects is essential for the successful deployment\
    \ and operation of EEWS\nsystems, and careful consideration of their capabilities,\
    \ limitations, and interdependencies\nis necessary to ensure their effectiveness\
    \ in mitigating the impact of earthquakes [158].\n3.2. Cloud and Fog Systems\n\
    Cloud computing is a model of delivering computing resources, such as servers,\n\
    storage, databases, and software, over the internet on an on-demand basis [159].\
    \ It provides\nusers with easy access to a wide range of computing resources that\
    \ can be scaled up or\ndown based on demand without requiring users to invest\
    \ in and maintain their own\nphysical infrastructure. Fog computing, on the other\
    \ hand, is a distributed computing\nmodel that brings computing resources closer\
    \ to the edge of the network, closer to where\ndata is generated and consumed,\
    \ and provides real-time processing and decision-making\ncapabilities [160].\n\
    The importance of cloud and fog computing in natural disaster detection and man-\n\
    agement cannot be overstated. Natural disasters such as hurricanes, earthquakes,\
    \ ﬂoods,\nand wildﬁres can cause widespread devastation and loss of life. The\
    \ use of cloud and fog\ncomputing in disaster management can help to mitigate\
    \ the effects of these disasters by\nproviding real-time data analysis, decision-making,\
    \ and communication capabilities [161].\nCloud computing can be used to store\
    \ and process large amounts of data generated\nby sensors and other devices used\
    \ in disaster management. This data can be analyzed in\nreal-time, providing EWS\
    \ to alert authorities and the public of impending disasters. Cloud\ncomputing\
    \ can also be used to store and share critical data such as emergency response\n\
    plans, evacuation routes, and contact information for emergency services.\nFog\
    \ computing can be used to process and analyze data at the edge of the network,\n\
    near the source of the data. This can provide real-time information about the\
    \ status of\ninfrastructure such as roads, bridges, and buildings, allowing authorities\
    \ to make informed\ndecisions about evacuation and emergency response efforts.\
    \ Fog computing can also be\nused to provide real-time communication capabilities,\
    \ allowing emergency services to\ncoordinate their efforts and communicate with\
    \ each other and the public in real time.\nIn summary, cloud and fog computing\
    \ play a critical role in natural disaster detection\nand management. They provide\
    \ real-time data analysis, decision-making, and commu-\nSustainability 2023, 15,\
    \ 11713\n14 of 38\nnication capabilities, allowing authorities to respond quickly\
    \ and effectively to disasters,\npotentially saving countless lives and minimizing\
    \ the damage caused by these events.\n4. IoT-Cloud-Based EEWS\nThis section will\
    \ highlight the signiﬁcant signiﬁcance that the IoT-Cloud technology\nplays in\
    \ EEWS. In point of fact, the application of IoT-Cloud strategies has been of\
    \ assistance\nto EEWS before and after disasters.\nThe IoT has revolutionized\
    \ the way we interact with the physical world, and one of its\nmost promising\
    \ applications is in the detection and prediction of natural disasters such\n\
    as earthquakes. The basic idea behind using IoT for earthquake detection is to\
    \ deploy a\nnetwork of sensors that can detect seismic activity and transmit the\
    \ data to a central server\nfor analysis. These sensors can be embedded in buildings,\
    \ bridges, and other structures, as\nwell as in the ground itself. By analyzing\
    \ the data from these sensors, it is possible to detect\nthe onset of an earthquake\
    \ and predict its magnitude and location.\nOne of the key advantages of using\
    \ IoT for earthquake detection is that it allows for\nreal-time monitoring of\
    \ seismic activity. Traditional methods of earthquake detection rely\non seismometers,\
    \ which are expensive and require a lot of maintenance. They also typically\n\
    only provide data after an earthquake has already occurred. In contrast, IoT sensors\
    \ can\nprovide continuous data in real-time, allowing for EWS to be put in place\
    \ [162–164]. This\ncan be particularly useful in areas prone to earthquakes, where\
    \ early warning can save\nlives and reduce damage.\nAnother advantage of using\
    \ IoT for earthquake detection is that it can provide more\ndenser data network\
    \ than traditional methods. IoT sensors can be placed in a wider variety\nof locations,\
    \ such as inside buildings or underground, allowing for a more comprehensive\n\
    picture of seismic activity. They can also provide data on other factors that\
    \ can affect the\nimpact of an earthquake, such as soil conditions and building\
    \ materials. This information\ncan be used to develop better models for earthquake\
    \ prediction and to design buildings\nand infrastructure that are more resistant\
    \ to seismic activity.\nThe use of IoT for earthquake detection has the potential\
    \ to revolutionize the way\nwe prepare for and respond to earthquakes. By providing\
    \ real-time data and more com-\nprehensive information on seismic activity, IoT\
    \ sensors can improve our ability to predict\nearthquakes and minimize their impact.\
    \ As the technology continues to develop, we can\nexpect to see more widespread\
    \ deployment of IoT sensors and more sophisticated analysis\ntechniques, leading\
    \ to even better earthquake detection and prediction capabilities.\nA generic\
    \ EEWS architecture typically consists of three main components: the seismic\n\
    network, the processing center, and the alert distribution system [165]. The seismic\
    \ network\ncomprises a set of sensors deployed across a region of interest, which\
    \ detect and record\nseismic waves generated by earthquakes. The sensor data is\
    \ transmitted to the processing\ncenter, where it is analyzed in real-time using\
    \ algorithms and models to estimate the loca-\ntion, magnitude, and other characteristics\
    \ of the earthquake [166]. The alert distribution\nsystem then disseminates the\
    \ earthquake alert to end-users through various channels, such\nas mobile devices,\
    \ sirens, and public announcements [167]. The underlying infrastructure\nof the\
    \ EEWS includes a variety of hardware and software components, including seismome-\n\
    ters, communication networks, computing systems, and databases [168]. The seismometers\n\
    are typically deployed in a dense network to ensure high spatial resolution and\
    \ coverage,\nand they are connected to a communication network that transmits\
    \ the sensor data to the\nprocessing center [169]. The processing center comprises\
    \ a set of computing systems that\nperform real-time data analysis, using a variety\
    \ of algorithms and models to estimate the\nearthquake parameters [170]. The alert\
    \ distribution system includes a set of communica-\ntion channels and protocols\
    \ that disseminate the alert to end-users, as well as a database\nthat stores\
    \ historical and real-time earthquake data [171]. The interactions between these\n\
    components are tightly coordinated to ensure timely and accurate earthquake alerts,\
    \ which\ncan help to mitigate the impact of earthquakes and save lives [172].\n\
    Sustainability 2023, 15, 11713\n15 of 38\nIn [173], the authors developed CrowdQuake,\
    \ a DL-based seismic detection system.\nUtilizing a dense IoT network composed\
    \ of MEMS nodes, the system employs a multi-\nhead convolution neural network\
    \ to analyze a large quantity of observed acceleration\ndata. During the model\
    \ validation procedure, the scientists got data from the National\nResearch Institute\
    \ for Earth Science and Disaster Prevention (NIED) and measured the\nprecision-recall,\
    \ accuracy, and noise level. The developed system could process data from\nup\
    \ to 8000 IoT sensors, and identifying an earthquake required only a few seconds\
    \ of\nprocessing time, according to the researchers. In [174], an advanced EEWS\
    \ supported by an\nIoT network that operates on the basis of real-time alerts\
    \ has been established. The network\nutilized MEMS accelerometers and an Arduino\
    \ Cortex M4 CPU for measuring acceleration.\nThis technique employs ML to improve\
    \ the accuracy and latency in earthquake detection.\nThe model was constructed\
    \ using data gathered locally by the MEMS accelerometer nodes\nthat were installed.\n\
    In [175], IoT acceleration nodes were designed explicitly for earthquake detection.\n\
    Two methods are used to utilize these nodes: a technique of standalone and a technique\
    \ of\nclient-server. The ﬁrst technique is more commonly used, while the client-server\
    \ technique\nis more precise but requires high-performance servers and network\
    \ infrastructure to man-\nage data acceleration from multiple client machines.\
    \ Basic earthquake detection methods\ncan be independently explored on less capable\
    \ mobile nodes. However, this may result in\nfalse alarms. To overcome this limitation,\
    \ a cooperative method that uses a large number of\nmobile phones located in close\
    \ proximity to one another is employed. This creates a seismic\nnetwork that can\
    \ detect earthquakes and monitors any shaking caused by human activity,\nmechanical\
    \ vibrations, earthquakes, etc. By relying on a primary neural network, a motion\n\
    similar to an earthquake detected by a smartphone is transmitted to other cellphones\
    \ in\nthe immediate area using a multi-hop mode. Furthermore, every mobile phone\
    \ in the\nnetwork determines and notiﬁes the network of an earthquake, then triggers\
    \ an alarm after\nobtaining detection data from other smartphones in its immediate\
    \ vicinity. This technique\nimproves the earthquake detection capabilities of\
    \ a standalone method that does not use\nany system or network infrastructures.\n\
    In [176], a predictive model that combines IoT devices and ML techniques was used\
    \ to\ndetect geological landslide occurrences. The predictive model was trained\
    \ with geotechnical\nparameters such as soil shear strength, soil moisture, rain\
    \ intensity, terrain slope, and more.\nThe actual hardware used for this purpose\
    \ consisted of a collection of sensors that gathered\nreal-time information on\
    \ the topography and soil. In [177], the authors proposed a compute\nofﬂoading\
    \ system architecture that can be implemented on Internet-connected drones. They\n\
    conducted an in-depth experimental study to compare the efﬁciency of cloud computing\n\
    ofﬂoading strategy with that of the edge computing strategy for DL solutions in\
    \ the context\nof unmanned aerial vehicles (UAVs). The authors investigated the\
    \ balance between the\ncomputational cost of the two alternative options communications\
    \ in an experiment.\nIn [53], a DL paradigm based on integrating autoencoder (AE)\
    \ and CNN was devel-\noped to immediately determine earthquake magnitude and position\
    \ three seconds after\nthe P-wave begins. The authors referred to it as CNN and\
    \ 3s AE (3S-AE-CNN). The\ndata set used in the study was monitored by three stations\
    \ of the Hi-net seismic network\nin Japan, and the approach was evaluated using\
    \ data from 12,200 separate occurrences\n(109.80 thousand 3 s three-component\
    \ seismic windows). The model simpliﬁes the ex-\ntraction of essential waveform\
    \ properties, resulting in a higher degree of credibility in\nearthquake parameter\
    \ assessment. The suggested model predicts magnitude, latitude,\nand longitude\
    \ with an accuracy of within 28 × 10−6, 3.3 × 10−6, and 100 × 10−6 degrees,\n\
    respectively. That model immediately communicates event features to a sink IoT\
    \ node. It\nprovides guidance to the relevant administration on how to proceed.\
    \ It is noted that AE\nhas proved beneﬁcial in feature extraction regardless of\
    \ the application [178].\nThe framework for earthquake prediction proposed in\
    \ [179] is a novel approach based\non federated learning (FL). This FL framework\
    \ outperformed the previously developed\nML model for earthquake estimation through\
    \ an IoT gateway in terms of reliability and\nSustainability 2023, 15, 11713\n\
    16 of 38\naccuracy. The model achieved an accuracy of 88% by analyzing multidimensional\
    \ data over\na 100 km radial area, excluding the Western Himalayas, and studying\
    \ the data. In [180], an\nEEW based on an IoT and an ML model was suggested to\
    \ predict tsunamis using tsunami\ndata dating back to 2100 BC and was trained\
    \ on earthquake parameters in the dataset. It\nachieved an accuracy of 95% in\
    \ predicting earthquake location, depth, and magnitude.\nIn [181], a DL approach\
    \ that can identify P-waves despite background noise was\ndeveloped using MEMS\
    \ for observing events. The model can detect the probability of\noccurring preceding\
    \ signiﬁcant shocks and accurately predict P-waves between 1.5 and\n2.5 s before\
    \ their arrival. In [182], the authors used detector nodes to detect earthquakes\n\
    locally by probing the environment and assessing data from probes in the surrounding\n\
    area. The method stores all data locally, making it resistant to node failures\
    \ and partial\nnetwork outages, thus increasing privacy. The test network consisted\
    \ of twenty node codes\njoined with ten neighbor nodes chosen at random. The total\
    \ number of detectors was\nsampled every ten seconds. In [183], a Multilayer Perceptron-classiﬁer\
    \ was developed\nto provide a severity-based warning by predicting the possibility\
    \ of an onsite intensity\nexceeding a pre-trained PGA threshold associated with\
    \ damaging intensities on the MMI\nscale—seismic properties observed by the strong-motion\
    \ signal starting from the P-wave in\nthe developed model. The authors of [184]\
    \ proposed an independent model of earthquake\ndetection via low-cost acceleration\
    \ nodes. The model utilized four different sensor types\nfor establishing an EEWS\
    \ with different types of data, e.g., noise from buildings, vibrations,\nand earthquake\
    \ records. To test the sensors, two actual earthquakes were replicated on a\n\
    shake table. The study found that low-cost acceleration sensors can detect earthquakes\
    \ by\nmonitoring differences in acceleration induced by a range between 0.02 g\
    \ to 0.8 g, which\ncan be detected by the sensors. Therefore, the authors used\
    \ scaled data within that range.\nAn ML methodology with earthquake characteristics\
    \ was utilized, as opposed to the\nmore conventional seismic methodologies that\
    \ are typically used [185–187]. The authors\nbroke the detection problem down\
    \ into two distinct groups, namely, static settings and\ndynamic settings. They\
    \ provide the most effective ML approach and input data for the static\nenvironment\
    \ based on an experimental evaluation of numerous features for circumventing\n\
    the issue of discriminating earthquake and noise components to reduce the number\
    \ of false\nalarms. This model was validated with the help of 385 earthquakes\
    \ ranging in magnitude\nfrom 4.0 to 8.0.\nThe authors of the paper [188] introduced\
    \ the Distributed Multi-Sensor Earthquake\nEarly Warning (DMSEEW) system as a\
    \ cutting-edge ML-based technique that includes\ndata from GPS stations and earthquake\
    \ sensors in order to recognize large and medium\nearthquakes. The model relies\
    \ on an innovative stacking ensemble technique that has\nbeen validated by geoscientists\
    \ using a real-world dataset. This approach was used to\nbuild DMSEEW. The architecture\
    \ of the system was designed to be regionally spread,\nwhich allows for both brisk\
    \ processing and resistance to disruptions in some aspects of\nthe underlying\
    \ infrastructure. To be more speciﬁc, these systems combined GPS and\nseismic\
    \ data in order to enhance earthquake detection, which led to the creation of\
    \ an\nefﬁcient EEWS.\nKaracı [189] used vibration sensors for earthquake detection\
    \ according to some thresh-\nold values. If an earthquake has been detected via\
    \ the vibration sensors, a warning system\ntakes place. In this warning system,\
    \ there is a Wi-Fi module for Internet connection to send\na tweet by means of\
    \ the ThingSpeak IoT analytics platform service. There is also a sound\nalarm\
    \ via a buzzer for the people staying around the earthquake area. Thus, the electronic\n\
    part of this study covers an Arduino card, Wi-Fi module, Inertial Measurement\
    \ Unit sensor,\nvibration sensor card, and buzzer. The software part involves\
    \ the codes of Processing with\nArduino to obtain the sensor data normalization\
    \ and the difference between sequential\nsensor values for monitoring the threshold\
    \ level.\nBabu and Rajan [190] have studied an IoT solution that alerts for a\
    \ ﬂood or earthquake\ndetection before they happen and living beings being searched\
    \ for during the disasters.\nSensors are connected to a microcontroller, RF transmitter,\
    \ and receiver. Their values are\nSustainability 2023, 15, 11713\n17 of 38\nanalyzed\
    \ in real-time via ThingSpeak IoT analytics platform service [190]. The authorities\n\
    are notiﬁed by GSM messages during a ﬂood or earthquake disaster using the IP\
    \ protocol.\nA water level sensor has been used for ﬂood detection, and four color\
    \ bulbs represent the\ndanger levels. A rain sensor has worked to determine whether\
    \ there is rain. Additionally, a\nvibration sensor has been used for an earthquake.\
    \ The system and the mobile phones are\ncharged with solar energy as a secure\
    \ option for ﬂood environments. ESP Wi-Fi module\nis the gateway as the fundamental\
    \ processing and storage part between the RF receiver-\ntransmitter-bulb system\
    \ and ThingSpeak cloud server for sensor data transmission. This\ndata can be\
    \ followed using a ThingSpeak API that is used for mobile phones, laptops, or\n\
    any other internet-connected device. Wireless communication, especially GPS, is\
    \ used for\nliving being searches.\nWon et al. [191] proposed a high-ﬁdelity vibration\
    \ sensor consisting of a MEMS\naccelerometer with high sampling frequency and\
    \ digital ﬁltering. During the sensing\nprocess, Short-Term Average/Long-Term\
    \ Average trigger is compared with a threshold\nvalue. Over the threshold, data\
    \ acquisition, low-pass ﬁltering, and downsampling to\na frequency are performed.\
    \ After this procedure, if an earthquake is detected with the\nproposed algorithm,\
    \ the system notiﬁes it through a Bluetooth Beacon. The authors\nmentioned that\
    \ the hardware platform was Adafruit nRF52840 Feather Express developed\nbased\
    \ on nRF52840 (Nordic, 2019) board having fast computing and high storage attributes\n\
    provided by CPU, RAM, and ﬂash parts. Additionally, the nRF52840 module has Bluetooth\n\
    5 and Arduino IDE support.\nDuggal et al. [192] mentioned that the literature\
    \ studies could not separate any other\nvibrational noise properly from that of\
    \ earthquakes. They proposed a new method by using\nIoT to eliminate this drawback.\
    \ A Micro Electro-mechanical system sensor is set inside a\nbuilding after ﬁnding\
    \ the most suitable place via structural analysis with the information\non seismic\
    \ shear walls. Inside this sensor, there is an accelerometer and a gyroscope.\
    \ The\ngyroscope saves the ground’s shaking pattern, representing a distinctive\
    \ nature during an\nearthquake. IoT I2C Communication Protocol is used between\
    \ the devices in the network.\nArduino Uno microcontroller board and NodeMCU Dev\
    \ Kit ﬁrmware have interfaces with\nthe sensor node. The sensor data is sent by\
    \ Arduino inbuilt WiFi to the ML side. In this\npart, Logistic Regression, Support\
    \ Vector Machine, and Convolutional Neural Networks\nhave been used for modeling.\n\
    Sharma et al. [89] gave a table for ten different IoT disaster management systems\n\
    based on several properties, such as IoT architecture ownership, cloud-enabled,\
    \ computer\ntechnology area, main focus, and disaster type. They also classiﬁed\
    \ IoT-based disaster\nrecovery systems into four groups: Service-oriented, natural,\
    \ artiﬁcial, and post-disaster.\nThey compared IoT-enabled disaster management\
    \ methods according to their wireless\ncommunication technologies, sensor types,\
    \ and some additional features. They also put a\ncomparison diagram exhibiting\
    \ that Bluetooth and Wi-Fi were the best cost, and Bluetooth\nand ZigBee had the\
    \ best power usage among the IoT communication technologies. The au-\nthors proposed\
    \ case studies for forest ﬁre detection and EEWS based on IoT devices. For the\n\
    earthquake warning part, they mentioned the usage of Vibration Sensors (Accelerometer),\n\
    PIC (Peripheral Device Controllers), ZigBee communication procedures, LCD monitors,\n\
    and RS232 cables. An IoT alarm message was sent to smartphones, and an alarm message\n\
    via GSM standard was sent to other cell phones.\nMishra et al. [193] have optimized\
    \ a schedule for distributing relief items using\nIoT technologies, such as smart\
    \ cities. There are some dynamic features dependent on\nthe disaster conditions,\
    \ such as changing relief demand and resource availability. IoT\nis suitable for\
    \ such issues related to continuously ﬂowing and dynamically changing\ndata [194].\
    \ The authors symbolized different time periods with sliding time windows in\n\
    which the data update occurs. For the ﬁrst window, relief distribution is decided\
    \ according\nto the availability of vehicles, relief resources, priority of the\
    \ disaster area, and delivery\nroutes. The distribution schedule has been optimized\
    \ repeatedly in the next time slots.\nSustainability 2023, 15, 11713\n18 of 38\n\
    The fragility of the problem that is being targeted, as well as its direct effect\
    \ on human\nlife, makes it imperative that a solution be found that is intelligent,\
    \ trustworthy, and ﬂexible\ndespite the considerable efforts that have been put\
    \ into developing the state-of-the-art. In\nthis section, we throw light on the\
    \ primary research explorations that have been done in\nthis area. The primary\
    \ efforts in developing IoT for the EEWS are outlined in detail in\nTable 3.\n\
    Table 3. IoT-based EEWS main efforts.\nRef.\nSensor Node\nEmployed\nEnvironment\n\
    Used Data Type\nUsed Measurement\nParameter\nSource\n[184]\nAcceleration\nsensors\n\
    (MMA8452,\nLIS3DHH,\nADXL355, and MPU9250)\nUG\nAcceleration data\nPGA\nNIED and\
    \ USGS\n[180]\nMobile node\nCoastal areas\nTsunamic data\nHypo-center\nand magnitude\n\
    NOAA\n[177]\nUAV nodes\nODLOS\nAerial images data\nReceived frames/sec\nLocal\
    \ drones\n[185]\nSmartphones\nS-D environment\nAcceleration data\nEarthquake data\n\
    NIED and USGS\n[188]\nSeismometer\nUG\nGPS\nand\nweak\nmotion data\nEarthquake\
    \ data\nIRIS and NIED\n[173]\nMEMS\nUG\nAcceleration data\nAcceleration, SNR\n\
    NIED\n[174]\nArduino Cortex M4\nUG\nAcceleration data\nEarthquake detection\n\
    accuracy and detec-\ntion latency\nLocal\ndata\nob-\nserved by MEMS\naccelerometers\n\
    [175]\nAcceleration nodes\nIDNLOS\nAcceleration data\nPGA and human ac-\ntivity\n\
    Local distributed\nsmartphones\n[176]\nSoil and terrain nodes\nUG\nSoil moisture,\
    \ shear\nstrength of the soil,\nseverity of the rain\nSoil moisture,\nSoil\nshear\
    \ strength, rain\nseverity\nGSI\n[53]\nTmote Sky\nID and OD\nSeismic velocity\
    \ data\nLocation\nand\nmagnitude\nJMA and Hi-net\n[179,195]\nIoT gateway\nUG\n\
    Seismic waveform\nEarthquake\npredictions\nLocal datasets and\nregional data\n\
    [183]\nAcceleration nodes\nUG\nAcceleration data\nPGA\nNIED\n[185]\nMEMS\nNoisy\
    \ environments\nSeismic waveform\nP-wave arrival\nSTEAD\n[182]\nRaspberry Pi\n\
    Mesh network\nSeismic waveform\nLocal earthquake\nLocally observed\n[196]\nSSN/SOSA\
    \ ontology\nUW\nVolcanic data\nVolcano-tectonic,\nlong-period\nearth-\nquakes,\n\
    under-\nwater\nexplosions,\nand quarry blasts\nLocal data\nIn order to prevent\
    \ the loss of human life, the implementation of an EEWS is an\nabsolute necessity.\
    \ In order to effectively manage disasters and reduce the danger of earth-\nquakes,\
    \ it is essential to have the ability to promptly detect the features of an earthquake.\n\
    With technologies already in place, such as the IoT network, social media, global\
    \ position-\ning system (GPS), and mobile nodes, these attributes can be sent\
    \ to help mitigate the effects\nof a catastrophic earthquake.\nFigure 8 depicts\
    \ a comprehensive EEWS with many administrations assisting in reliev-\ning the\
    \ earthquake tragedy. The EEWS will include complete statistics regarding hospitals,\n\
    railways, ﬁre services, ambulances, airports, and so on based on these administrations.\n\
    This proposed system does integrate social media, IoT technologies, cloud systems,\
    \ and\nSustainability 2023, 15, 11713\n19 of 38\nmobile systems. It operates in\
    \ two stages. The ﬁrst stage is pre-disaster, as ML models\nare used to detect\
    \ the commencement of the principal wave. This procedure is extremely\nadvantageous\
    \ for risk minimization, such as rapid shutting down of nuclear power plants,\n\
    electrical producers, and so on. The second phase begins after the disaster has\
    \ occurred,\nwith the goal of mitigating/reducing the disaster’s impacts. Using\
    \ an integrated system,\nfor example, allows for more accurate statistics regarding\
    \ the affected people, buildings,\nutilities, and areas. As a result, an effective\
    \ evacuation strategy can be implemented.\nA solution that is both ﬂexible and\
    \ intelligent and that is able to deal with complex\nproblems in a relatively\
    \ short amount of time is required for such a system. ML has the\npotential to\
    \ play a signiﬁcant and critical part in the administrations that are interconnected\n\
    and working on achieving successful EWS among the variety of existing current\
    \ techniques.\nML is a promising method that works regardless of the data type,\
    \ format, length, and other\nfactors such as these.\nFigure 8. A general architecture\
    \ of EWS.\nIndeed, real-time monitoring takes place across all of the dispersed\
    \ organizations\nshown in Figure 8, which serves as the foundation for a reliable\
    \ EEWS. As a consequence of\nthis, the transfer of data between various entities\
    \ needs to be thoroughly investigated and\nestimated. After that, ML models are\
    \ utilized to zero in on the current status of each object\nand even provide an\
    \ estimate for a certain word. As a consequence of this, those institutions\n\
    are capable of making useful contributions prior to, during, and after earthquake\
    \ disasters.\nTo put it another way, a technique such as this can assist with\
    \ the management of earthquake\ncatastrophes, the reduction of earthquake risks,\
    \ and evacuation tactics. As a consequence\nof this, the performance of the EEWS\
    \ improves in direct proportion to the quality of the\nML model. Figure 9 provides\
    \ a visual representation of the interaction between trains as\na speciﬁc administration\
    \ used in the process of full EEWS, the data processing, and the\nresearch done.\
    \ To be more precise, earthquake data is monitored to be sent for processing\n\
    using the IoT network in order to carry out the desired check and determine the\
    \ correct\ndecision to send to the railway system for suitable action using an\
    \ ML model and the\nSustainability 2023, 15, 11713\n20 of 38\nrailway information\
    \ of the disaster location. This process is repeated until the appropriate\ndecision\
    \ is made.\nFigure 9. A pattern of Iot-based EEWS.\nThe authors of [197] mentioned\
    \ the same approach of beneﬁting from UAVs as Aerial\nBase Stations (ABSs) to\
    \ provide connectivity instead of traditional base stations. They\nproposed two\
    \ trajectory planning algorithms using a k-value selection method and K-\nmeans\
    \ centroids for UAVs. These UAVs served to the clusters of user equipment. By\n\
    enhancing the study, the authors also gave two methods for cluster head selection\
    \ to\nsupport continuous connectivity via UAVs and cluster heads.\nThe authors\
    \ of [198] suggested a system to ﬁnd the damage degrees of various earth-\nquake\
    \ region parts such as roads and riverways. They used single-rotor and six-rotor\
    \ UAVs\nand took visible light images of the region parts. Once the image quality\
    \ evaluation was\ndone according to the image contrast, the image blur, and the\
    \ image noise formulas, the\naerial images were analyzed with Gray Level Cooccurrence\
    \ Matrix, the Tamura, and the\nGabor wavelet features. Lastly, the SVM classiﬁer\
    \ was used to obtain the damage levels.\nThe authors of [199] proposed to use\
    \ UAVs for monitoring earthquake impacts after\nthe disaster occurrence. The damage\
    \ to the buildings was derived with the help of one ﬁxed-\nwing UAV and two multirotor\
    \ UAVs. The aerial mapping gathered from the UAVs was\ncompared with a physical\
    \ ﬁeld survey. The buildings’ structural properties were extracted\nfrom the damages\
    \ on different parts of the surfaces, such as walls, roofs, and perimeter\ncolumns.\
    \ Additionally, the liquefaction situation was seen from the area investigation\
    \ that\nalso presented the damage levels of the settlements.\nOverall, the use\
    \ of drones in earthquake disaster detection and management has the\npotential\
    \ to save lives, speed up response times, and improve the efﬁciency of emergency\n\
    services. As technology continues to advance, it is likely that drones will become\
    \ an even\nmore important tool in disaster management, helping to mitigate the\
    \ effects of earthquakes\nand other natural disasters. Figure 10 shows the role\
    \ of UAVs for three scenarios of pre,\nduring, and post-disaster situations.\n\
    Sustainability 2023, 15, 11713\n21 of 38\nEvaluating the performance and reliability\
    \ of IoT-enabled earthquake early warning\nsystems (EEWS) is crucial for ensuring\
    \ their effectiveness in real-world scenarios. There\nare several techniques that\
    \ can be used to provide a comprehensive evaluation of the\nperformance and reliability\
    \ of these systems, including simulation testing, ﬁeld testing, and\ndata-driven\
    \ analysis:\n•\nSimulation testing involves creating a virtual environment that\
    \ simulates real-world\nconditions, including seismic activity and sensor data\
    \ [200,201]. Simulation testing\nallows researchers to test the performance of\
    \ an EEWS system under different scenar-\nios, such as different magnitudes and\
    \ distances of earthquakes and different types of\nseismic waves [202]. This technique\
    \ can also be used to evaluate the effectiveness of\ndifferent algorithms and\
    \ parameters used in the system [203].\n•\nField testing involves deploying an\
    \ EEWS system in real-world conditions and col-\nlecting data on its performance\
    \ and reliability [204,205]. Field testing can provide\nvaluable insights into\
    \ the system’s performance under actual operating conditions,\nwhich may differ\
    \ from those in a simulated environment. Field testing can also help to\nidentify\
    \ potential issues with the system, such as sensor malfunction or communica-\n\
    tion failures [206]. This technique can be time-consuming and resource-intensive,\
    \ but\nit provides valuable data on the system’s performance and reliability in\
    \ real-world\nscenarios [207].\n•\nData-driven analysis involves analyzing large\
    \ datasets generated by an EEWS system\nto identify patterns and trends, which\
    \ can provide insights into its performance and\nreliability [208]. Data-driven\
    \ analysis can be used to identify correlations between\nsensor data and earthquake\
    \ characteristics, such as magnitude, duration, and inten-\nsity [209]. This technique\
    \ can also be used to identify anomalies in sensor data, which\nmay indicate issues\
    \ with the system’s performance or reliability [210]. Data-driven\nanalysis can\
    \ provide valuable insights into the performance and reliability of an EEWS\n\
    system over long periods of time [211].\nBy using a combination of these techniques,\
    \ researchers can gain a more comprehen-\nsive understanding of the performance\
    \ and reliability of IoT-enabled EEWS systems. This\ncan help to identify areas\
    \ for improvement and ultimately improve the effectiveness of\nthese systems in\
    \ mitigating the impact of earthquakes.\nIntegrating advanced technologies such\
    \ as ML algorithms, distributed computing, and\nedge computing into EEWS systems\
    \ can improve their accuracy and effectiveness. How-\never, there are several\
    \ challenges and considerations associated with these technologies. For\nexample,\
    \ ML algorithms require large amounts of data and computational resources to train\n\
    and optimize, which may be difﬁcult to obtain in the context of EEWS systems [212,213].\n\
    Distributed computing can improve the scalability and fault tolerance of EEWS\
    \ systems,\nbut it also introduces additional complexity and overhead in terms\
    \ of communication and\ncoordination [214–217]. Edge computing can improve the\
    \ responsiveness and efﬁciency\nof EEWS systems by processing data closer to the\
    \ source. Still, it also requires careful\nmanagement of resources and trade-offs\
    \ between processing power and energy consump-\ntion [218,219]. In addition, the\
    \ implementation of these advanced technologies can be\ncomplex and may require\
    \ signiﬁcant expertise and resources. Furthermore, there may be\nlimitations associated\
    \ with the hardware and software infrastructure of EEWS systems,\nsuch as sensor\
    \ networks and communication protocols, which may need to be upgraded or\nmodiﬁed\
    \ to support these technologies. Therefore, while integrating advanced technologies\n\
    into EEWS systems has the potential to improve their accuracy and effectiveness,\
    \ careful\nconsideration of the trade-offs and implementation complexities is\
    \ necessary to ensure\ntheir successful deployment and operation.\nSustainability\
    \ 2023, 15, 11713\n22 of 38\nCity road \nstatus\nCity road \nstatus\nBase Station\n\
    UAV\nUAV\nUAV\nAn area prone to \ndisaster\nAn area after \ndisaster\nAn area\
    \ during \ndisaster\nFigure 10. Three scenarios of disaster and the role of UAV.\n\
    5. Validation and Veriﬁcation Aspects\nValidation and veriﬁcation (V&V) are essential\
    \ for ensuring the quality, reliability,\noptimization, and safety of systems\
    \ and products [220–222]. They involve rigorous evalu-\nation against requirements\
    \ and standards, identifying and correcting defects, improving\nperformance, and\
    \ ensuring compliance. In the context of IoT systems, V&V is crucial\nfor addressing\
    \ complex behaviors, identifying vulnerabilities, and complying with regu-\nlations\
    \ [223,224]. For cloud systems, V&V ensures dependability, security, performance\n\
    optimization, and adherence to standards [225–227]. Overall, V&V is vital for\
    \ constructing\ntrustworthy, resilient, compliant systems that meet user and societal\
    \ expectations [228].\n5.1. Different Categories of V&V Techniques\nThere are\
    \ several types of validation and veriﬁcation techniques that can be applied to\n\
    these systems [229,230] (Figure 11). One common technique is functional testing,\
    \ which\ninvolves testing the system’s functions to ensure that they perform as\
    \ expected [231]. This\ntesting can be done manually or through automated testing\
    \ tools. Another technique is\nperformance testing, which involves testing the\
    \ system’s ability to handle a certain level\nof workload or trafﬁc [232]. This\
    \ can include stress testing, load testing, and capacity\ntesting [233,234].\n\
    Security testing is another important technique for IoT and cloud systems [235–237].\n\
    This involves testing the system’s security features and protocols to identify\
    \ vulnerabilities\nand ensure that sensitive information is protected [238–240].\
    \ Penetration testing is a type\nof security testing that involves attempting\
    \ to hack into the system to identify weaknesses\nand potential security breaches\
    \ [241–243].\nUsability testing is also important for these systems, as they must\
    \ be user-friendly and\neasy to navigate [244]. This testing involves gathering\
    \ feedback from users to identify areas\nof the system that can be improved to\
    \ enhance the user experience [245].\nRegression testing is another important\
    \ technique for IoT and cloud systems [246,247].\nIt involves retesting the system\
    \ after making changes or updates to ensure that the changes\nhave not introduced\
    \ new defects or issues in previously tested areas [248]. Regression\ntesting\
    \ can be done manually or through automated testing tools, and it is important\
    \ to\nperform regularly to ensure that the system remains stable and reliable\
    \ throughout its\nSustainability 2023, 15, 11713\n23 of 38\nlifecycle [249,250].\
    \ By conducting thorough regression testing, developers can identify and\nﬁx issues\
    \ early on, ultimately leading to a more robust and reliable system for users\
    \ [251].\n\x18ŝĨĨĞƌĞŶƚ\x03\n\x12ĂƚĞŐŽƌŝĞƐ\x03\nŽĨ\x03sΘs\x03\x03\ndĞĐŚŶŝƋƵĞƐ\n\
    &ƵŶĐƚŝŽŶĂů\x03\ndĞƐƚŝŶŐ\nWĞƌĨŽƌŵĂŶĐĞ\ndĞƐƚŝŶŐ\n^ƚƌĞƐƐ\x03\ndĞƐƚŝŶŐ\n>ŽĂĚ\x03\n\
    dĞƐƚŝŶŐ\n\x12ĂƉĂĐŝƚǇ\x03\ndĞƐƚŝŶŐ\n^ĞĐƵƌŝƚǇ\x03\ndĞƐƚŝŶŐ\nWĞŶĞƚƌĂƚŝŽŶ\x03\ndĞƐƚŝŶŐ\n\
    hƐĂďŝůŝƚǇ\x03\ndĞƐƚŝŶŐ\nZĞŐƌĞƐƐŝŽŶ\x03\ndĞƐƚŝŶŐ\n\x12ŽŵƉůŝĂŶĐĞ\ndĞƐƚŝŶŐ\n&ŽƌŵĂů\x03\
    \nDĞƚŚŽĚƐ\nFigure 11. Different Categories of V&V Techniques.\nFormal methods\
    \ (Figure 12) are another important set of techniques that can be used\nfor validation\
    \ and veriﬁcation of IoT and cloud systems [252,253]. Formal methods involve\n\
    the use of mathematical models and logic to verify the correctness and reliability\
    \ of a\nsystem [254]. This technique can be used to check the consistency of the\
    \ system design and\nits speciﬁcations, as well as to identify potential errors\
    \ and defects in the system [255,256].\nFormal methods can also be used to ensure\
    \ that the system meets certain performance and\nsafety requirements [257–259].\
    \ While formal methods can be more time-consuming and\ncomplex than other validation\
    \ and veriﬁcation techniques, they can provide a high level\nof conﬁdence in the\
    \ correctness and reliability of the system [260–262]. Therefore, formal\nmethods\
    \ are an important tool for developers to consider when designing and testing\
    \ IoT\nand cloud systems.\n&ŽƌŵĂů\x03\nDĞƚŚŽĚƐ\nDĂƚŚĞŵĂƚŝĐĂů\x03\nWƌŽƉĞƌƚŝĞƐ\n\
    DĂƚŚĞŵĂƚŝĐĂů\x03\n\x18ĞƐĐƌŝƉƚŝŽŶ\nZĞƋƵŝƌĞŵĞŶƚƐ\n^ǇƐƚĞŵ\nsĞƌĚŝĐƚ͗\x03\x12ŽƌƌĞĐƚ\x03\
    Žƌ\x03EŽƚ\nFigure 12. A simpliﬁed illustration of how Formals Methods work [263].\n\
    Sustainability 2023, 15, 11713\n24 of 38\nIn addition to these techniques, there\
    \ are also validation and verification techniques\nspecific to cloud systems.\
    \ For example, validation techniques for cloud systems may\ninclude compliance\
    \ testing to ensure that the system complies with industry standards\nand regulations\
    \ and testing the system’s ability to handle real-time data processing\nand communication.\n\
    Overall, validation and veriﬁcation techniques are critical for ensuring the reliability,\n\
    security, and efﬁciency of IoT and cloud systems. By applying these techniques,\
    \ developers\ncan identify and address issues early in the development process,\
    \ ultimately leading to\nbetter-performing and more secure systems for users.\n\
    5.2. Adaptation of V&V Techniques for EEWS\nVeriﬁcation and validation (V&V) techniques\
    \ are crucial for ensuring the reliability\nand effectiveness of earthquake detection\
    \ and warning systems in the context of IoT.\nThese systems use a combination\
    \ of sensors, data analysis algorithms, and communication\ntechnologies to detect\
    \ and respond to earthquakes in real time. However, the adaptation of\nV&V techniques\
    \ for these systems presents unique challenges and opportunities.\nOne challenge\
    \ is the need for a robust and reliable sensor network. EEWS relies on a\nsensor\
    \ network to detect and measure seismic activity. These sensors must be calibrated\n\
    and tested regularly to ensure that they are functioning correctly. V&V techniques\
    \ can\nhelp to ensure that the sensor network is reliable and accurate by providing\
    \ a framework\nfor testing and calibration. More precisely, to ensure the reliability\
    \ and accuracy of the\nentire sensor network, a statistical calibration and testing\
    \ approach can be employed. This\ninvolves validating a representative sample\
    \ of sensors rather than individually testing\neach sensor, given the large number\
    \ of sensors typically used. Statistically, the majority of\nsensors will be sufﬁciently\
    \ calibrated and functioning properly at the time of an earthquake.\nAnother challenge\
    \ is the desirability of real-time data analysis and action plans. In\nearthquake\
    \ detection systems, timely and accurate decision-making is critical for minimiz-\n\
    ing damage and saving lives. V&V techniques can help to ensure that the data analysis\n\
    algorithms used in these systems are accurate and reliable. This can involve testing\
    \ the\nalgorithms under a variety of conditions and scenarios, as well as ensuring\
    \ that they are\nable to operate in real time.\nIn addition to challenges, there\
    \ are also opportunities for the adaptation of V&V\ntechniques for IoT earthquake\
    \ systems. One opportunity is the use of simulation and\nmodeling. V&V techniques\
    \ can be used to create simulations and models of earthquake\nscenarios to test\
    \ and validate the performance of the detection and warning systems. This\ncan\
    \ help to identify potential weaknesses in the system and inform improvements.\n\
    Another opportunity is the use of crowdsourcing and citizen science. V&V techniques\n\
    can be used to validate and integrate data from citizen scientists and volunteers\
    \ who\ncontribute to earthquake detection and warning systems. This can help to\
    \ improve the\naccuracy and reliability of the system while also engaging the\
    \ public in the process.\nIn conclusion, the adaptation of V&V techniques for\
    \ IoT earthquake systems presents\nboth challenges and opportunities. By leveraging\
    \ V&V techniques, developers can ensure\nthat these systems are reliable, accurate,\
    \ and effective in detecting and responding to seismic\nactivity. This can help\
    \ to minimize damage and save lives in the event of an earthquake.\n5.3. Cost\
    \ and Limitations of V&V Techniques\nVeriﬁcation and validation (V&V) techniques\
    \ are crucial in ensuring the quality and\nreliability of software systems for\
    \ IoT and cloud computing systems. However, these\nsystems come with unique challenges\
    \ and limitations that must be considered when\nimplementing V&V techniques.\n\
    One cost of V&V techniques for IoT and cloud systems is the sheer scale of these\n\
    systems. These systems can involve thousands or even millions of interconnected\
    \ devices,\nmaking it difﬁcult to perform comprehensive testing and validation.\
    \ Additionally, the het-\nSustainability 2023, 15, 11713\n25 of 38\nerogeneity\
    \ of these systems, with devices from different manufacturers and with different\n\
    capabilities, can complicate the veriﬁcation and validation process.\nAnother\
    \ cost of V&V techniques for IoT and cloud systems is the need for specialized\n\
    testing environments and tools. These systems require highly specialized tools\
    \ and environ-\nments for testing and validation, such as simulators, emulators,\
    \ and testbeds. These tools\ncan be expensive to implement and maintain and may\
    \ require highly skilled personnel to\noperate effectively.\nFurthermore, there\
    \ are limitations to the effectiveness of V&V techniques for IoT\nand cloud systems.\
    \ One limitation is the difﬁculty of testing for security and privacy\nvulnerabilities.\
    \ These systems often involve sensitive data and critical infrastructure,\nmaking\
    \ security and privacy a top priority. However, it is challenging to test for\
    \ all possible\nsecurity and privacy vulnerabilities, especially as new threats\
    \ emerge constantly.\nAnother limitation is the challenge of testing for real-time\
    \ and low-latency require-\nments. IoT and cloud systems often require real-time\
    \ performance and low-latency commu-\nnication, which can be difﬁcult to test\
    \ and validate. These systems may involve complex\ninteractions between devices\
    \ and services, making it challenging to ensure that they meet\nthese requirements.\n\
    In conclusion, V&V techniques are crucial for ensuring the quality and reliability\
    \ of\nsoftware systems for IoT and cloud computing systems. However, these systems\
    \ have\nunique challenges and limitations that must be considered when implementing\
    \ V&V\ntechniques. By understanding these costs and limitations, software developers\
    \ can imple-\nment V&V techniques more effectively and efﬁciently, ultimately\
    \ leading to higher-quality\nsoftware systems.\n6. Open Challenges, Conclusions\
    \ and Future Directions\nThe use of IoT and cloud facilities for EEWS presents\
    \ signiﬁcant opportunities for\nimproving the speed and accuracy of earthquake\
    \ detection and response. However, there\nare also several challenges that must\
    \ be addressed to ensure the reliability and effectiveness\nof these systems (Figure\
    \ 13).\n•\nSensor network reliability and accuracy: One of the primary challenges\
    \ in implement-\ning IoT and cloud-based EEWS is ensuring the reliability and\
    \ accuracy of the sensor\nnetwork. These systems rely on a network of sensors\
    \ to detect and measure seismic\nactivity, making it essential to ensure that\
    \ the sensors are functioning correctly.\n•\nReal-time data processing and decision-making:\
    \ EEWS require fast and accurate\ndata processing and decision-making capabilities\
    \ to provide timely alerts to people\nand organizations in affected areas. This\
    \ requires sophisticated algorithms and real-\ntime data processing capabilities,\
    \ which can be challenging to implement in IoT and\ncloud-based systems.\n•\n\
    Secure communication channels: The transmission of data between sensors, cloud\n\
    facilities, and other components in an EEWS must be secure to prevent unauthorized\n\
    access and tampering. Ensuring the security of communication channels is a signiﬁcant\n\
    challenge in designing and implementing these systems.\n•\nHeterogeneity and scalability:\
    \ IoT and cloud-based systems are inherently heteroge-\nneous, with devices and\
    \ services from different manufacturers and with different capa-\nbilities. Ensuring\
    \ seamless integration and scalability of these systems is a signiﬁcant\nchallenge,\
    \ particularly as the number of devices and sensors in the network increases.\n\
    •\nCost-effectiveness and sustainability: Implementing an EEWS using IoT and cloud\n\
    facilities can be costly, requiring signiﬁcant investment in hardware, software,\
    \ and\npersonnel. Ensuring the cost-effectiveness and sustainability of these\
    \ systems is a\nsigniﬁcant challenge, particularly in regions with limited resources.\n\
    •\nUsability and accessibility: EEWS must be usable and accessible to people and\
    \ orga-\nnizations in affected areas, including those with limited literacy or\
    \ technical skills.\nEnsuring the usability and accessibility of these systems\
    \ is a signiﬁcant challenge,\nrequiring careful consideration of user needs and\
    \ preferences.\nSustainability 2023, 15, 11713\n26 of 38\n•\nPrivacy and ethical\
    \ concerns: The collection and processing of data in EEWS raise\nprivacy and ethical\
    \ concerns, particularly as these systems become more sophisticated\nand widespread.\
    \ Ensuring that these systems comply with relevant regulations and\nethical principles\
    \ is a signiﬁcant challenge.\n•\nInterference from environmental factors: EEWS\
    \ can be affected by environmental\nfactors such as electromagnetic noise and\
    \ weather conditions, which can interfere\nwith the accuracy and reliability of\
    \ the sensor network. Ensuring the robustness and\nresilience of these systems\
    \ is a signiﬁcant challenge, requiring careful consideration of\nenvironmental\
    \ factors.\n•\nContinuous monitoring and maintenance: IoT and cloud-based EEWS\
    \ require con-\ntinuous monitoring and maintenance to ensure system performance\
    \ and reliability.\nEnsuring the continuous monitoring and maintenance of these\
    \ systems is a signiﬁcant\nchallenge, requiring robust and scalable infrastructure\
    \ and skilled personnel.\n^ĞŶƐŽƌ\x03EĞƚǁŽƌŬ\x03\nZĞůŝĂďŝůŝƚǇ\x03ĂŶĚ\x03\n\x04\
    ĐĐƵƌĂĐǇ\nZĞĂůͲdŝŵĞ\x03\x18ĂƚĂ\x03\nWƌŽĐĞƐƐŝŶŐ\x03ĂŶĚ\x03\n\x18ĞĐŝƐŝŽŶͲDĂŬŝŶŐ\n\
    ^ĞĐƵƌĞ\x03\n\x12ŽŵŵƵŶŝĐĂƚŝŽŶ\x03\n\x12ŚĂŶŶĞůƐ\n,ĞƚĞƌŽŐĞŶĞŝƚǇ\x03ĂŶĚ\x03\n^ĐĂůĂďůŝƚǇ\n\
    \x12ŽƐƚͲ\x1CĨĨĞĐƚŝǀĞŶĞƐƐ\x03\nĂŶĚ\x03^ƵƐƚĂŝŶĂďŝůŝƚǇ\nhƐĂďŝůŝƚǇ\x03ĂŶĚ\x03\n\x04\
    ĐĐĞƐƐŝďŝůŝƚǇ\nWƌŝǀĂĐǇ\x03ĂŶĚ\x03\x1CƚŚŝĐĂů\x03\n\x12ŽŶĐĞƌŶƐ\n/ŶƚĞƌĨĞƌĞŶĐĞ\x03\
    ĨƌŽŵ\x03\n\x1CŶǀŝƌŽŶŵĞŶƚĂů\x03\n&ĂĐƚŽƌƐ\n\x12ŽŶƚŝŶƵŽƵƐ\x03\nDŽŶŝƚŽƌŝŶŐ\x03ĂŶĚ\x03\
    \nDĂŝŶƚĞŶĂŶĐĞ\nKƉĞŶ\x03\x12ŚĂůůĞŶŐĞƐ\nFigure 13. Open Challenges.\nThe use of\
    \ IoT and cloud facilities for EEWS presents a signiﬁcant opportunity for\nimproving\
    \ the speed and accuracy of earthquake detection and response. However, ad-\n\
    dressing the challenges outlined above is essential to ensure the reliability\
    \ and sustainability\nof these systems in the long term. This survey has highlighted\
    \ the potential beneﬁts of\nusing IoT and cloud technologies in EEWS, including\
    \ real-time data analysis, improved\nsensor networks, and faster decision-making.\
    \ However, the survey has also identiﬁed\nseveral challenges that must be addressed,\
    \ such as the need for reliable and accurate sensor\nnetworks, real-time data\
    \ processing, and secure communication channels. Overall, the\nsurvey underscores\
    \ the importance of continued research and development in this area, as\nwell\
    \ as the need for rigorous veriﬁcation and validation techniques to ensure the\
    \ reliability\nand effectiveness of these systems. Below, we propose some interesting\
    \ future directions:\n1.\nDevelopment of more efﬁcient and accurate sensors: Research\
    \ and development\nshould focus on developing more efﬁcient and accurate sensors\
    \ that can accurately\ndetect and measure seismic activity while also being cost-effective\
    \ and scalable.\n2.\nIntegration of artiﬁcial intelligence (AI) and ML: The integration\
    \ of AI and ML can\nhelp to improve the accuracy and reliability of data analysis\
    \ algorithms used in EEWS.\nSustainability 2023, 15, 11713\n27 of 38\nThis can\
    \ lead to faster and more accurate decision-making, improving the effectiveness\n\
    of these systems [264,265].\n3.\nStandardization of communication protocols: The\
    \ standardization of communication\nprotocols can help to ensure the interoperability\
    \ and scalability of IoT and cloud-based\nEEWS. This can simplify the integration\
    \ of different devices and services, reducing\nthe complexity of these systems.\n\
    4.\nAdoption of free, open-source software: The adoption of free, open-source\
    \ software\ncan help to reduce the cost and complexity of developing EEWS while\
    \ also encourag-\ning collaboration and innovation in this area.\n5.\nEngagement\
    \ with local communities: Engagement with local communities can help\nto ensure\
    \ that EEWS are developed in a form that meets the needs and preferences\nof people\
    \ and organizations in affected areas. This can improve the usability and\neffectiveness\
    \ of these systems in real-world scenarios.\n6.\nDevelopment of new funding models:\
    \ The development of new funding models, such\nas public–private partnerships,\
    \ can help to ensure the sustainability and scalability\nof EEWS. This can provide\
    \ the necessary resources and expertise to develop and\nmaintain these systems\
    \ over the long term.\n7.\nThe “last kilometer” problem: This problem is the difﬁculty\
    \ of assuring prompt and\nefﬁcient warning, communication, and reaction systems\
    \ to people and communities in\nthe ﬁnal seconds before the occurrence of powerful\
    \ and devastating S-wave shaking\nduring an earthquake. In particular, it requires\
    \ addressing densely populated areas\nwhere the window for preparation and evacuation\
    \ is constrained, where there is a\ngap between earthquake EEWS and the capacity\
    \ to reach and notify individuals in the\nimpacted area. In order to protect people’s\
    \ safety and well-being in the ﬁnal crucial\nseconds before the arrival of the\
    \ destructive seismic waves, this topic focuses on the\nnecessity for the effective\
    \ broadcast of alerts and emergency instructions.\nIn conclusion, continued research\
    \ and development, as well as collaboration and inno-\nvation, will be essential\
    \ in addressing the challenges and realizing the potential beneﬁts of\nusing IoT\
    \ and cloud facilities for EEWS. By addressing these challenges and implementing\n\
    future directions, it is possible to develop more reliable, accurate, and effective\
    \ EEWS that\ncan save lives and minimize damage in the event of seismic activity.\n\
    Author Contributions: Conceptualization, M.S.A. and M.K.; methodology, M.S.A.,\
    \ M.K. and D.Y.-K.;\ninvestigation, M.S.A., M.K. and I.B.D.; writing—original\
    \ draft preparation, M.S.A., M.K. and D.Y.-K.;\nwriting—review and editing, M.S.A.,\
    \ M.K., I.B.D. and W.Y.H.A.; supervision, M.S.A. and M.K.;\nresources, M.S.A.,\
    \ M.K. and I.B.D.; data curation, M.S.A. and M.K.; visualization, M.S.A. and M.K.\n\
    All authors have read and agreed to the published version of the manuscript.\n\
    Funding: This research received no external funding.\nInstitutional Review Board\
    \ Statement: Not applicable.\nInformed Consent Statement: Not applicable.\nData\
    \ Availability Statement: Not applicable.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nAbbreviations\nEEWS\nEarthquake Early Warning Systems\n\
    SDN\nSoftware Deﬁned Network\nAI\nArtiﬁcial Intelligence\nNFV\nNetwork Functions\
    \ Virtualization\nDMSEEW\nDistributed Multi-Sensor Earthquake Early Warning\n\
    Micro-MEMS\nMicro-Electro-Mechanical systems\nML\nMachine Learning\nIoT\nInternet\
    \ of Things\nSustainability 2023, 15, 11713\n28 of 38\nUG\nUnderground\nODLOS\n\
    Outdoor Line-of-sight\nUAV\nUnmanned Arial Vehicle\nIDLOS\nIndoor Line-of-sight\n\
    UW\nUnder Water\nOD\nOutdoor\nID\nIndoor\nDT\nDecision Tree\nRF\nRandom Forest\n\
    SVM\nSupport Vector Machine\nNB\nNaïve Bayes\nKNN\nK-Nearest Neighbor\nFD\nFederated\
    \ Learning\nGPS\nGlobal Positioning System\n5G\nFifth Generation\nB5G\nBeyond\
    \ Fifth Generation\nAE\nAutoencoder\nCNN\nConvolutional Neural Network\nBody waves\n\
    P/S-wave\nNIED\nNational Research Institute of Earth Science and Disaster\nV&V\n\
    Veriﬁcation and Veriﬁcation\nReferences\n1.\nBiswas, S.; Kumar, D.; Bera, U.K.\
    \ Prediction of earthquake magnitude and seismic vulnerability mapping using artiﬁcial\n\
    intelligence techniques: A case study of Turkey. Eur. PMC 2023, preprint. [CrossRef]\n\
    2.\nApple. Apple Podcasts. 2023. Available online: https://podcasts.apple.com/gb/podcast/pre-hospital-care/id1441215901?i=10\n\
    00607541735 (accessed on 1 April 2023).\n3.\nErdik, M. Earthquake risk in Turkey.\
    \ Science 2013, 341, 724–725. [CrossRef]\n4.\nCorbane, C.; Saito, K.; Dell’Oro,\
    \ L.; Bjorgo, E.; Gill, S.P.; Emmanuel Piard, B.; Huyck, C.K.; Kemper, T.; Lemoine,\
    \ G.; Spence,\nR.J.; et al. A comprehensive analysis of building damage in the\
    \ 12 January 2010 MW7 Haiti earthquake using high-resolution\nsatelliteand aerial\
    \ imagery. Photogramm. Eng. Remote Sens. 2011, 77, 997–1009. [CrossRef]\n5.\n\
    Köksal, A.; Schick, T.; Korhonen, A.; Schütze, H. Longform: Optimizing instruction\
    \ tuning for long text generation with corpus\nextraction. arXiv 2023, arXiv:2304.08460.\n\
    6.\nSadhukhan, B.; Chakraborty, S.; Mukherjee, S. Investigating the relationship\
    \ between earthquake occurrences and climate change\nusing RNN-based deep learning\
    \ approach. Arab. J. Geosci. 2022, 15, 31. [CrossRef]\n7.\nDang, P.; Cui, J.;\
    \ Liu, Q.; Li, Y. Inﬂuence of source uncertainty on stochastic ground motion simulation:\
    \ A case study of the 2022\nMw 6.6 Luding, China, earthquake. Stoch. Environ.\
    \ Res. Risk Assess. 2023, 37, 2943–2960. [CrossRef]\n8.\nChen, J.; Wen, L.; Bi,\
    \ C.; Liu, Z.; Liu, X.; Yin, L.; Zheng, W. Multifractal analysis of temporal and\
    \ spatial characteristics of\nearthquakes in Eurasian seismic belt. Open Geosci.\
    \ 2023, 15, 20220482. [CrossRef]\n9.\nScholz, C.H.; Sykes, L.R.; Aggarwal, Y.P.\
    \ Earthquake Prediction: A Physical Basis: Rock dilatancy and water diffusion\
    \ may\nexplain a large class of phenomena precursory to earthquakes. Science 1973,\
    \ 181, 803–810. [CrossRef]\n10.\nHeaton, T.H. A model for a seismic computerized\
    \ alert network. Science 1985, 228, 987–990. [CrossRef] [PubMed]\n11.\nIRIS. Seismological\
    \ Facility for the Advancement of Geoscience. 1984. Available online: https://www.iris.edu/hq/\
    \ (accessed on\n18 April 2023).\n12.\nAbdalzaher, M.S.; Elsayed, H.A.; Fouda,\
    \ M.M.; Salim, M.M. Employing Machine Learning and IoT for Earthquake Early Warning\n\
    System in Smart Cities. Energies 2023, 16, 495. [CrossRef]\n13.\nAbdalzaher, M.S.;\
    \ Moustafa, S.S.; Haﬁez, H.A.; Ahmed, W.F. An optimized learning model augment\
    \ analyst decisions for seismic\nsource discrimination. IEEE Trans. Geosci. Remote\
    \ Sens. 2022, 60, 1–12. [CrossRef]\n14.\nMoustafa, S.S.; Abdalzaher, M.S.; Khan,\
    \ F.; Metwaly, M.; Elawadi, E.A.; Al-Ariﬁ, N.S. A Quantitative Site-Speciﬁc Classiﬁcation\n\
    Approach Based on Afﬁnity Propagation Clustering. IEEE Access 2021, 9, 155297–155313.\
    \ [CrossRef]\n15.\nMoustafa, S.S.; Abdalzaher, M.S.; Abdelhaﬁez, H. Seismo-Lineaments\
    \ in Egypt: Analysis and Implications for Active Tectonic\nStructures and Earthquake\
    \ Magnitudes. Remote Sens. 2022, 14, 6151. [CrossRef]\n16.\nCremen, G.; Galasso,\
    \ C.; Zuccolo, E. Investigating the potential effectiveness of earthquake early\
    \ warning across Europe. Nature\nCommun. 2022, 13, 639. [CrossRef] [PubMed]\n\
    17.\nElhadidy, M.; Abdalzaher, M.S.; Gaber, H. Up-to-date PSHA along the Gulf\
    \ of Aqaba-Dead Sea transform fault. Soil Dyn. Earthq.\nEng. 2021, 148, 106835.\
    \ [CrossRef]\n18.\nDong, Y.; Gao, C.; Long, F.; Yan, Y. Suspected Seismo-Ionospheric\
    \ Anomalies before Three Major Earthquakes Detected by GIMs\nand GPS TEC of Permanent\
    \ Stations. Remote Sens. 2021, 14, 20. [CrossRef]\nSustainability 2023, 15, 11713\n\
    29 of 38\n19.\nAbdalzaher, M.S.; El-Hadidy, M.; Gaber, H.; Badawy, A. Seismic\
    \ hazard maps of Egypt based on spatially smoothed seismicity\nmodel and recent\
    \ seismotectonic models. J. Afr. Earth Sci. 2020, 170, 103894. [CrossRef]\n20.\n\
    Allen, R.M.; Melgar, D. Earthquake early warning: Advances, scientiﬁc challenges,\
    \ and societal needs. Annu. Rev. Earth Planet.\nSci. 2019, 47, 361–388. [CrossRef]\n\
    21.\nKumar, R.; Mittal, H.; Sharma, B. Earthquake Genesis and Earthquake Early\
    \ Warning Systems: Challenges and a Way Forward.\nSurv. Geophys. 2022, 43, 1143–1168.\
    \ [CrossRef]\n22.\nKodera, Y.; Hayashimoto, N.; Tamaribuchi, K.; Noguchi, K.;\
    \ Moriwaki, K.; Takahashi, R.; Morimoto, M.; Okamoto, K.; Hoshiba,\nM. Developments\
    \ of the nationwide earthquake early warning system in Japan after the 2011 M\
    \ w 9.0 Tohoku-Oki earthquake.\nFront. Earth Sci. 2021, 9, 726045. [CrossRef]\n\
    23.\nKodera, Y.; Saitou, J.; Hayashimoto, N.; Adachi, S.; Morimoto, M.; Nishimae,\
    \ Y.; Hoshiba, M. Earthquake early warning for\nthe 2016 Kumamoto earthquake:\
    \ Performance evaluation of the current system and the next-generation methods\
    \ of the Japan\nMeteorological Agency. Earth Planets Space 2016, 68, 202. [CrossRef]\n\
    24.\nMcGuire, J.J.; Smith, D.E.; Frankel, A.D.; Wirth, E.A.; McBride, S.K.; de\
    \ Groot, R.M. Expected Warning Times from the ShakeAlert\nEarthquake Early Warning\
    \ System for Earthquakes in the Paciﬁc Northwest; Technical Report; US Geological\
    \ Survey: Reston, VA,\nUSA, 2021.\n25.\nChung, A.I.; Meier, M.A.; Andrews, J.;\
    \ Böse, M.; Crowell, B.W.; McGuire, J.J.; Smith, D.E. ShakeAlert earthquake early\
    \ warning\nsystem performance during the 2019 Ridgecrest earthquake sequence.\
    \ Bull. Seismol. Soc. Am. 2020, 110, 1904–1923. [CrossRef]\n26.\nZhu, M.; Chen,\
    \ F.; Zhou, W.; Lin, H.; Parcharidis, I.; Luo, J. Two-Dimensional InSAR Monitoring\
    \ of the Co- and Post-Seismic\nGround Deformation of the 2021 Mw 5.9 Arkalochori\
    \ (Greece) Earthquake and Its Impact on the Deformations of the Heraklion\nCity\
    \ Wall Relic. Remote Sens. 2022, 14, 5212. [CrossRef]\n27.\nMei, G.; Xu, N.; Qin,\
    \ J.; Wang, B.; Qi, P. A survey of Internet of Things (IoT) for geohazard prevention:\
    \ Applications, technologies,\nand challenges. IEEE Internet Things J. 2019, 7,\
    \ 4371–4386. [CrossRef]\n28.\nLi, X.; Lu, R.; Liang, X.; Shen, X.; Chen, J.; Lin,\
    \ X. Smart community: An internet of things application. IEEE Commun. Mag. 2011,\n\
    49, 68–75. [CrossRef]\n29.\nGhamry, E.; Mohamed, E.K.; Abdalzaher, M.S.; Elwekeil,\
    \ M.; Marchetti, D.; De Santis, A.; Hegy, M.; Yoshikawa, A.; Fathy, A.\nIntegrating\
    \ pre-earthquake signatures from different precursor tools. IEEE Access 2021,\
    \ 9, 33268–33283. [CrossRef]\n30.\nYue, Y.; Chen, F.; Chen, G. Pre-Seismic Anomaly\
    \ Detection from Multichannel Infrared Images of FY-4A Satellite. Remote Sens.\n\
    2023, 15, 259. [CrossRef]\n31.\nFranchi, F.; Marotta, A.; Rinaldi, C.; Graziosi,\
    \ F.; Fratocchi, L.; Parisse, M. What can 5G do for public safety? Structural\
    \ health\nmonitoring and earthquake early warning scenarios. Sensors 2022, 22,\
    \ 3020. [CrossRef]\n32.\nAbdalzaher, M.S.; Elsayed, H.A. Employing data communication\
    \ networks for managing safer evacuation during earthquake\ndisaster. Simul. Model.\
    \ Pract. Theory 2019, 94, 379–394. [CrossRef]\n33.\nPeleli, S.; Kouli, M.; Vallianatos,\
    \ F. Satellite-Observed Thermal Anomalies and Deformation Patterns Associated\
    \ to the 2021,\nCentral Crete Seismic Sequence. Remote Sens. 2022, 14, 3413. [CrossRef]\n\
    34.\nAbd Alzaher, M.S.; Elsayed, H.A.; Kayed, S.I.; Anis, W.R. Road Trafﬁc Modeling\
    \ using Data Communication Networks. Int. J.\nComput. Appl. 2011, 975, 8887. [CrossRef]\n\
    35.\nLin, T.H.; Huang, J.T.; Putranto, A. Integrated smart robot with earthquake\
    \ early warning system for automated inspection and\nemergency response. Nat.\
    \ Hazards 2022, 110, 765–786. [CrossRef]\n36.\nDe Sanctis, M.; Cianca, E.; Araniti,\
    \ G.; Bisio, I.; Prasad, R. Satellite communications supporting internet of remote\
    \ things. IEEE\nInternet Things J. 2015, 3, 113–123. [CrossRef]\n37.\nAbdalzaher,\
    \ M.S.; Elsayed, H.A.; Fouda, M.M. Employing Remote Sensing, Data Communication\
    \ Networks, AI, and Optimization\nMethodologies in Seismology. IEEE J. Sel. Top.\
    \ Appl. Earth Obs. Remote Sens. 2022, 15, 9417–9438. [CrossRef]\n38.\nMouradian,\
    \ C.; Jahromi, N.T.; Glitho, R.H. NFV and SDN-based distributed IoT gateway for\
    \ large-scale disaster management.\nIEEE Internet Things J. 2018, 5, 4119–4131.\
    \ [CrossRef]\n39.\nPrasanna, R.; Chandrakumar, C.; Nandana, R.; Holden, C.; Punchihewa,\
    \ A.; Becker, J.S.; Jeong, S.; Liyanage, N.; Ravishan, D.;\nSampath, R.; et al.\
    \ “Saving Precious Seconds”—A Novel Approach to Implementing a Low-Cost Earthquake\
    \ Early Warning\nSystem with Node-Level Detection and Alert Generation. Informatics\
    \ 2022, 9, 25. [CrossRef]\n40.\nEsposito, M.; Palma, L.; Belli, A.; Sabbatini,\
    \ L.; Pierleoni, P. Recent Advances in Internet of Things Solutions for Early\
    \ Warning\nSystems: A Review. Sensors 2022, 22, 2124. [CrossRef]\n41.\nDimililer,\
    \ K.; Dindar, H.; Al-Turjman, F. Deep learning, machine learning and internet\
    \ of things in geophysical engineering\napplications: An overview. Microprocess.\
    \ Microsyst. 2021, 80, 103613. [CrossRef]\n42.\nElwekeil, M.; Abdalzaher, M.S.;\
    \ Seddik, K. Prolonging smart grid network lifetime through optimising number\
    \ of sensor nodes\nand packet length. IET Commun. 2019, 13, 2478–2484. [CrossRef]\n\
    43.\nBao, N.H.; Kuang, M.; Sahoo, S.; Li, G.P.; Zhang, Z.Z. Early-warning-time-based\
    \ virtual network live evacuation against disaster\nthreats. IEEE Internet Things\
    \ J. 2019, 7, 2869–2876. [CrossRef]\n44.\nAbdalzaher, M.S.; Muta, O. A game-theoretic\
    \ approach for enhancing security and data trustworthiness in IoT applications.\
    \ IEEE\nInternet Things J. 2020, 7, 11250–11261. [CrossRef]\n45.\nAbdalzaher,\
    \ M.S.; Samy, L.; Muta, O. Non-zero-sum game-based trust model to enhance wireless\
    \ sensor networks security for\nIoT applications. IET Wirel. Sens. Syst. 2019,\
    \ 9, 218–226. [CrossRef]\nSustainability 2023, 15, 11713\n30 of 38\n46.\nAbdalzaher,\
    \ M.S.; Seddik, K.; Elsabrouty, M.; Muta, O.; Furukawa, H.; Abdel-Rahman, A. Game\
    \ theory meets wireless sensor\nnetworks security requirements and threats mitigation:\
    \ A survey. Sensors 2016, 16, 1003. [CrossRef] [PubMed]\n47.\nAbdalzaher, M.S.;\
    \ Muta, O.; Seddik, K.; Abdel-Rahman, A.; Furukawa, H. B-18-40 A Simpliﬁed Stackelberg\
    \ Game Approach for\nSecuring Data Trustworthiness in Wireless Sensor Networks.\
    \ In Proceedings of the 2016 IEICE General Conference, Niigata,\nJapan, 3–7 July\
    \ 2016; p. 538.\n48.\nAbdalzaher, M.S.; Seddik, K.; Muta, O.; Abdelrahman, A.\
    \ Using Stackelberg game to enhance node protection in WSNs. In\nProceedings of\
    \ the 2016 13th IEEE Annual Consumer Communications & Networking Conference (CCNC),\
    \ Las Vegas, NV, USA,\n9–12 January 2016; pp. 853–856. [CrossRef]\n49.\nKamruzzaman,\
    \ M.; Alanazi, S.; Alruwaili, M.; Alshammari, N.; Elaiwat, S.; Abu-Zanona, M.;\
    \ Innab, N.; Mohammad Elzaghmouri,\nB.; Ahmed Alanazi, B. AI-and IoT-Assisted\
    \ Sustainable Education Systems during Pandemics, such as COVID-19, for Smart\n\
    Cities. Sustainability 2023, 15, 8354. [CrossRef]\n50.\nFukao, Y.; Furumoto, M.\
    \ Hierarchy in earthquake size distribution. Phys. Earth Planet. Inter. 1985,\
    \ 37, 149–168. [CrossRef]\n51.\nLi, Z.; Peng, Z.; Hollis, D.; Zhu, L.; McClellan,\
    \ J. High-resolution seismic event detection using local similarity for Large-N\
    \ arrays.\nSci. Rep. 2018, 8, 1646. [CrossRef]\n52.\nOlson, E.L.; Allen, R.M.\
    \ The deterministic nature of earthquake rupture. Nature 2005, 438, 212–215. [CrossRef]\n\
    53.\nAbdalzaher, M.S.; Soliman, M.S.; El-Hady, S.M.; Benslimane, A.; Elwekeil,\
    \ M. A deep learning model for earthquake parameters\nobservation in IoT system-based\
    \ earthquake early warning. IEEE Internet Things J. 2021, 9, 8412–8424. [CrossRef]\n\
    54.\nMoustafa, S.S.; Abdalzaher, M.S.; Naeem, M.; Fouda, M.M. Seismic Hazard and\
    \ Site Suitability Evaluation Based on Multicriteria\nDecision Analysis. IEEE\
    \ Access 2022, 10, 69511–69530. [CrossRef]\n55.\nDaud, S.M.S.M.; Yusof, M.Y.P.M.;\
    \ Heo, C.C.; Khoo, L.S.; Singh, M.K.C.; Mahmood, M.S.; Nawawi, H. Applications\
    \ of drone in\ndisaster management: A scoping review. Sci. Justice 2022, 62, 30–42.\
    \ [CrossRef]\n56.\nEuchi, J. Do drones have a realistic place in a pandemic ﬁght\
    \ for delivering medical supplies in healthcare systems problems?\nChin. J. Aeronaut.\
    \ 2021, 34, 182–190. [CrossRef]\n57.\nJayakumar, S. A review on resource allocation\
    \ techniques in D2D communication for 5G and B5G technology. Peer-to-Peer Netw.\n\
    Appl. 2021, 14, 243–269. [CrossRef]\n58.\nDixit, S.; Bhatia, V.; Khanganba, S.P.;\
    \ Agrawal, A. Key considerations to achieve 5G and B5G connectivity in rural areas.\
    \ In\n6G: Sustainable Development for Rural and Remote Communities; Springer:\
    \ Singapore, 2022; pp. 17–23.\n59.\nMishra, D.; Natalizio, E. A survey on cellular-connected\
    \ UAVs: Design challenges, enabling 5G/B5G innovations, and experi-\nmental advancements.\
    \ Comput. Netw. 2020, 182, 107451. [CrossRef]\n60.\nAgiwal, A.; Agiwal, M. Enhanced\
    \ paging monitoring for 5g and beyond 5g networks. IEEE Access 2022, 10, 27197–27210.\n\
    [CrossRef]\n61.\nShahzadi, R.; Ali, M.; Naeem, M. Combinatorial Resource Allocation\
    \ in UAV-Assisted 5G/B5G Heterogeneous networks. IEEE\nAccess 2023, 11, 65336–65346.\
    \ [CrossRef]\n62.\nHashima, S.; ElHalawany, B.M.; Hatano, K.; Wu, K.; Mohamed,\
    \ E.M. Leveraging machine-learning for D2D communications in\n5G/beyond 5G networks.\
    \ Electronics 2021, 10, 169. [CrossRef]\n63.\nAli, K.; Nguyen, H.X.; Vien, Q.T.;\
    \ Shah, P.; Chu, Z. Disaster management using D2D communication with power transfer\
    \ and\nclustering techniques. IEEE Access 2018, 6, 14643–14654. [CrossRef]\n64.\n\
    Ever, E.; Gemikonakli, E.; Nguyen, H.X.; Al-Turjman, F.; Yazici, A. Performance\
    \ evaluation of hybrid disaster recovery framework\nwith D2D communications. Comput.\
    \ Commun. 2020, 152, 81–92. [CrossRef]\n65.\nAhmed, S.; Rashid, M.; Alam, F.;\
    \ Fakhruddin, B. A disaster response framework based on IoT and D2D communication\
    \ under 5G\nnetwork technology. In Proceedings of the 2019 29th International\
    \ Telecommunication Networks and Applications Conference\n(ITNAC), Auckland, New\
    \ Zealand, 27–29 November 2019; pp. 1–6.\n66.\nRawat, P.; Haddad, M.; Altman,\
    \ E. Towards efﬁcient disaster management: 5G and Device to Device communication.\n\
    In\nProceedings of the 2015 2nd International Conference on Information and Communication\
    \ Technologies for Disaster Management\n(ICT-DM), Rennes, France, 30 November–2\
    \ December 2015; pp. 79–87.\n67.\nTanha, M.; Sajjadi, D.; Tong, F.; Pan, J. Disaster\
    \ management and response for modern cellular networks using ﬂow-based\nmulti-hop\
    \ device-to-device communications. In Proceedings of the 2016 IEEE 84th Vehicular\
    \ Technology Conference (VTC-Fall),\nMontreal, QC, Canada, 18–21 September 2016;\
    \ pp. 1–7.\n68.\nGhosh, S.; Mondal, S.; Roy, S.D.; Kundu, S. D2D communication\
    \ with energy harvesting relays for disaster management. Int. J.\nElectron. 2020,\
    \ 107, 1272–1290. [CrossRef]\n69.\nTran, M.N.; Kim, Y. Named data networking based\
    \ disaster response support system over edge computing infrastructure.\nElectronics\
    \ 2021, 10, 335. [CrossRef]\n70.\nSapienza, M.; Guardo, E.; Cavallo, M.; La Torre,\
    \ G.; Leombruno, G.; Tomarchio, O. Solving critical events through mobile edge\n\
    computing: An approach for smart cities. In Proceedings of the 2016 IEEE International\
    \ Conference on Smart Computing\n(SMARTCOMP), St. Louis, MO, USA, 18–20 May 2016;\
    \ pp. 1–5.\n71.\nXu, J.; Ota, K.; Dong, M. Big data on the ﬂy: UAV-mounted mobile\
    \ edge computing for disaster management. IEEE Trans. Netw.\nSci. Eng. 2020, 7,\
    \ 2620–2630. [CrossRef]\nSustainability 2023, 15, 11713\n31 of 38\n72.\nHussain,\
    \ R.F.; Salehi, M.A.; Kovalenko, A.; Feng, Y.; Semiari, O. Federated edge computing\
    \ for disaster management in\nremote smart oil ﬁelds. In Proceedings of the 2019\
    \ IEEE 21st International Conference on High Performance Computing and\nCommunications;\
    \ IEEE 17th International Conference on Smart City; IEEE 5th International Conference\
    \ on Data Science and\nSystems (HPCC/SmartCity/DSS), Zhangjiajie, China, 10–12\
    \ August 2019; pp. 929–936.\n73.\nAvgeris, M.; Spatharakis, D.; Dechouniotis,\
    \ D.; Kalatzis, N.; Roussaki, I.; Papavassiliou, S. Where there is ﬁre there is\
    \ smoke: A\nscalable edge computing framework for early ﬁre detection. Sensors\
    \ 2019, 19, 639. [CrossRef] [PubMed]\n74.\nHeidari, A.; Navimipour, N.J.; Jamali,\
    \ M.A.J.; Akbarpour, S. A green, secure, and deep intelligent method for dynamic\
    \ IoT-edge-\ncloud ofﬂoading scenarios. Sustain. Comput. Inform. Syst. 2023, 38,\
    \ 100859. [CrossRef]\n75.\nChen, W.P.; Tsai, A.H.; Tsai, C.H. Smart trafﬁc ofﬂoading\
    \ with Mobile edge computing for disaster-resilient communication\nnetworks. J.\
    \ Netw. Syst. Manag. 2019, 27, 463–488. [CrossRef]\n76.\nUjjwal, K.; Garg, S.;\
    \ Hilton, J.; Aryal, J.; Forbes-Smith, N. Cloud Computing in natural hazard modeling\
    \ systems: Current research\ntrends and future directions. Int. J. Disaster Risk\
    \ Reduct. 2019, 38, 101188.\n77.\nNorris, W.; Voida, A.; Voida, S. People Talk\
    \ in Stories. Responders Talk in Data: A Framework for Temporal Sensemaking in\n\
    Time-and Safety-critical Work. Proc. ACM Hum.-Comput. Interact. 2022, 6, 1–23.\
    \ [CrossRef]\n78.\nYousefpour, A.; Fung, C.; Nguyen, T.; Kadiyala, K.; Jalali,\
    \ F.; Niakanlahiji, A.; Kong, J.; Jue, J.P. All one needs to know about fog\n\
    computing and related edge computing paradigms: A complete survey. J. Syst. Archit.\
    \ 2019, 98, 289–330. [CrossRef]\n79.\nEscamilla-Ambrosio, P.; Rodríguez-Mota,\
    \ A.; Aguirre-Anaya, E.; Acosta-Bermejo, R.; Salinas-Rosales, M. Distributing\
    \ computing\nin the internet of things: Cloud, fog and edge computing overview.\
    \ In NEO 2016: Results of the Numerical and Evolutionary\nOptimization Workshop\
    \ NEO 2016 and the NEO Cities 2016 Workshop Held on September 20–24. 2016 in Tlalnepantla,\
    \ Mexico;\nSpringer: Berlin/Heidelberg, Germany, 2018; pp. 87–115.\n80.\nGupta,\
    \ H.; Vahid Dastjerdi, A.; Ghosh, S.K.; Buyya, R. iFogSim: A toolkit for modeling\
    \ and simulation of resource management\ntechniques in the Internet of Things,\
    \ Edge and Fog computing environments. Softw. Pract. Exp. 2017, 47, 1275–1296.\
    \ [CrossRef]\n81.\nAlbayati, A.; Abdullah, N.F.; Abu-Samah, A.; Mutlag, A.H.;\
    \ Nordin, R. A serverless advanced metering infrastructure based on\nfog-edge\
    \ computing for a smart grid: A comparison study for energy sector in Iraq. Energies\
    \ 2020, 13, 5460. [CrossRef]\n82.\nLeitner, A.; Watzenig, D.; Ibanez-Guzman, J.\
    \ Validation and Veriﬁcation of Automated Systems; Springer: Cham, Switzerland,\
    \ 2019.\n83.\nReyana, A.; Kautish, S.; Alnowibet, K.A.; Zawbaa, H.M.; Wagdy Mohamed,\
    \ A. Opportunities of IoT in Fog Computing for High\nFault Tolerance and Sustainable\
    \ Energy Optimization. Sustainability 2023, 15, 8702. [CrossRef]\n84.\nPachouly,\
    \ J.; Ahirrao, S.; Kotecha, K.; Selvachandran, G.; Abraham, A. A systematic literature\
    \ review on software defect prediction\nusing artiﬁcial intelligence: Datasets,\
    \ Data Validation Methods, Approaches, and Tools. Eng. Appl. Artif. Intell. 2022,\
    \ 111, 104773.\n[CrossRef]\n85.\nBehnke, I.; Thamsen, L.; Kao, O. Héctor: A framework\
    \ for testing iot applications across heterogeneous edge and cloud testbeds.\n\
    In Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud\
    \ Computing Companion, Auckland, New\nZealand, 2–5 December 2019; pp. 15–20.\n\
    86.\nShafapourtehrany, M.; Batur, M.; Shabani, F.; Pradhan, B.; Kalantar, B.;\
    \ Özener, H. A Comprehensive Review of Geospatial\nTechnology Applications in\
    \ Earthquake Preparedness, Emergency Management, and Damage Assessment. Remote\
    \ Sens. 2023,\n15, 1939. [CrossRef]\n87.\nKader, M.A.; Jahan, I. A review of the\
    \ application of remote sensing technologies in earthquake disaster management:\
    \ Potentiali-\nties and challenges. In Proceedings of the International Conference\
    \ on Disaster Risk Management, Dhaka, Bangladesh, 12–14\nJanuary 2019; pp. 12–14.\n\
    88.\nLi, S.; Moslehy, A.; Hu, D.; Wang, M.; Wierschem, N.; Alshibli, K.; Huang,\
    \ B. Drones and Other Technologies to Assist in Disaster\nRelief Efforts; Technical\
    \ Report; Department of Transportation: Nashville, TN, USA, 2022.\n89.\nSharma,\
    \ K.; Anand, D.; Sabharwal, M.; Tiwari, P.K.; Cheikhrouhou, O.; Frikha, T. A disaster\
    \ management framework using\ninternet of things-based interconnected devices.\
    \ Math. Probl. Eng. 2021, 2021, 9916440. [CrossRef]\n90.\nFontes de Meira, L.;\
    \ Bello, O. The Use of Technology and Innovative Approaches in Disaster and Risk\
    \ Management: A\nCharacterization of Caribbean Countries’ Experiences. 2020. Available\
    \ online: http://repositorio.cepal.org/handle/11362/45990\n(accessed on 18 April\
    \ 2023).\n91.\nMatin, S.S.; Pradhan, B. Challenges and limitations of earthquake-induced\
    \ building damage mapping techniques using remote\nsensing images-A systematic\
    \ review. Geocarto Int. 2022, 37, 6186–6212. [CrossRef]\n92.\nGeiß, C.; Taubenböck,\
    \ H. Remote sensing contributing to assess earthquake risk: From a literature\
    \ review towards a roadmap.\nNat. Hazards 2013, 68, 7–48. [CrossRef]\n93.\nHosseini,\
    \ M.; Izadkhah, Y.O. Using the Satellite Remote Sensing Technology for Earthquake\
    \ Disaster Early Warning. UNISDR\nInternational Strategy for Disaster Reduction.\
    \ 2009.\nAvailable online: http://www.unisdr.org/ppew/inforesources/ewc2\n/upload/downloads/Hosseini_Izadkhah2003AbstractEWC2.doc\
    \ (accessed on 18 April 2023).\n94.\nJoyce, K.E.; Wright, K.C.; Samsonov, S.V.;\
    \ Ambrosia, V.G. Remote sensing and the disaster management cycle. Adv. Geosci.\
    \ Remote\nSens. 2009, 48, 317–346.\n95.\nVermiglio, C.; Noto, G.; Rodríguez Bolívar,\
    \ M.P.; Zarone, V. Disaster management and emerging technologies: A performance-\n\
    based perspective. Meditari Account. Res. 2022, 30, 1093–1117. [CrossRef]\n96.\n\
    Musella, C.; Serra, M.; Salzano, A.; Menna, C.; Asprone, D. Open BIM standards:\
    \ A review of the processes for managing existing\nstructures in the pre-and post-earthquake\
    \ phases. CivilEng 2020, 1, 291–309. [CrossRef]\nSustainability 2023, 15, 11713\n\
    32 of 38\n97.\nYilmaz, Ö. Seismic Data Analysis: Processing, Inversion, and Interpretation\
    \ of Seismic Data; Society of Exploration Geophysicists:\nHouston, TX, USA, 2001.\n\
    98.\nMoustafa, S.S.; Mohamed, G.E.A.; Elhadidy, M.S.; Abdalzaher, M.S. Machine\
    \ learning regression implementation for high-\nfrequency seismic wave attenuation\
    \ estimation in the Aswan Reservoir area, Egypt. Environ. Earth Sci. 2023, 82,\
    \ 307. [CrossRef]\n99.\nWear, K.A.; Gammell, P.M.; Maruvada, S.; Liu, Y.; Harris,\
    \ G.R. Improved measurement of acoustic output using complex\ndeconvolution of\
    \ hydrophone sensitivity. IEEE Trans. Ultrason. Ferroelectr. Freq. Control 2014,\
    \ 61, 62–75. [CrossRef]\n100. Darrigol, O. Between hydrodynamics and elasticity\
    \ theory: The ﬁrst ﬁve births of the Navier-Stokes equation. Arch. Hist. Exact\n\
    Sci. 2002, 56, 95–150. [CrossRef]\n101. El Hady, A.; Machta, B.B. Mechanical surface\
    \ waves accompany action potential propagation. Nat. Commun. 2015, 6, 6697.\n\
    [CrossRef]\n102. Bolt, B.; Tsai, Y.; Yeh, K.; Hsu, M. Earthquake strong motions\
    \ recorded by a large near-source array of digital seismographs.\nEarthq. Eng.\
    \ Struct. Dyn. 1982, 10, 561–573. [CrossRef]\n103. Margrave, G.F.; Lamoureux,\
    \ M.P.; Henley, D.C. Gabor deconvolution: Estimating reﬂectivity by nonstationary\
    \ deconvolution of\nseismic data. Geophysics 2011, 76, W15–W30. [CrossRef]\n104.\
    \ Diviacco, P. An open source, web based, simple solution for seismic data dissemination\
    \ and collaborative research. Comput.\nGeosci. 2005, 31, 599–605. [CrossRef]\n\
    105. Yan, X.; Zhang, M.; Wu, Q. Big-data-driven pre-stack seismic intelligent\
    \ inversion. Inf. Sci. 2021, 549, 34–52. [CrossRef]\n106. Huang, L.; Dong, X.;\
    \ Clee, T.E. A scalable deep learning platform for identifying geologic features\
    \ from seismic attributes. Lead.\nEdge 2017, 36, 249–256. [CrossRef]\n107. Zhu,\
    \ D.; Cui, J.; Li, Y.; Wan, Z.; Li, L. Adaptive Gaussian mixture model and convolution\
    \ autoencoder clustering for unsupervised\nseismic waveform analysis. Interpretation\
    \ 2022, 10, T181–T193. [CrossRef]\n108. Ayu, H.; Sarwanto, S. Analysis of seismic\
    \ signal in order to determine subsurface characteristics. J. Phys. Conf. Ser.\
    \ 2019,\n1375, 012079. [CrossRef]\n109. Krebes, E.S. Seismic Wave Theory; Cambridge\
    \ University Press: Cambridge, UK, 2019.\n110. Eng, M.; Eng, M.; Eng, M.; Pytel,\
    \ W.; Eng, M. Time-frequency characteristic of seismic waves observed in the lower\
    \ silesian\ncopper basin. Int. Multidiscip. Sci. GeoConf. SGEM 2019, 19, 693–700.\n\
    111. Dong, L.; Song, D.; Liu, G. Seismic wave propagation characteristics and\
    \ their effects on the dynamic response of layered rock\nsites. Appl. Sci. 2022,\
    \ 12, 758. [CrossRef]\n112. Qi, P.; Wang, Y. Seismic time–frequency spectrum analysis\
    \ based on local polynomial Fourier transform. Acta Geophys. 2020,\n68, 1–17.\
    \ [CrossRef]\n113. Wirsing, K. Time frequency analysis of wavelet and Fourier\
    \ transform. In Wavelet Theory; InTech Open: London, UK, 2020.\n114. Du, J.; Wu,\
    \ J.; Jing, L.; Li, S.; Zhang, Q. Seismic Wavelet Analysis Based on Finite Element\
    \ Numerical Simulation. J. Geosci.\nEnviron. Prot. 2023, 11, 220–228. [CrossRef]\n\
    115. Long, L.; Wen, X.; Lin, Y. Denoising of seismic signals based on empirical\
    \ mode decomposition-wavelet thresholding. J. Vib.\nControl 2021, 27, 311–322.\
    \ [CrossRef]\n116. Moriya, H. Identiﬁcation of similar seismic waves using the\
    \ phase-only correlation function and wavelet transform. Energies\n2021, 14, 4527.\
    \ [CrossRef]\n117. He, Z.; Ma, S.; Wang, L.; Peng, P. A novel wavelet selection\
    \ method for seismic signal intelligent processing. Appl. Sci. 2022,\n12, 6470.\
    \ [CrossRef]\n118. Zhang, T.; Xu, Q.; Chen, J.; Li, J. Nonlinear seismic response\
    \ and index correlation of high arch dams under cross-stream oblique\nincidence\
    \ of near-fault SV waves based on wavelet decomposition. Soil Dyn. Earthq. Eng.\
    \ 2023, 164, 107635. [CrossRef]\n119. Adhikari, B.; Dahal, S.; Karki, M.; Mishra,\
    \ R.K.; Dahal, R.K.; Sasmal, S.; Klausner, V. Application of wavelet for seismic\
    \ wave\nanalysis in Kathmandu Valley after the 2015 Gorkha earthquake, Nepal.\
    \ Geoenviron. Disasters 2020, 7, 2. [CrossRef]\n120. Longjun, X.; Yabin, C. Easy\
    \ detection for the high-pass ﬁlter cut-off frequency of digital ground motion\
    \ record based on STA/LTA\nmethod: A case study in the 2008 Wenchuan mainshock.\
    \ J. Seismol. 2021, 25, 1281–1300. [CrossRef]\n121. Chen, S.; Cao, S.; Sun, Y.;\
    \ Lin, Y.; Gao, J. Seismic time-frequency analysis via time-varying ﬁltering based\
    \ empirical mode\ndecomposition method. J. Appl. Geophys. 2022, 204, 104731. [CrossRef]\n\
    122. Abdalzaher, M.S.; Salim, M.M.; Elsayed, H.A.; Fouda, M.M. Machine Learning\
    \ Benchmarking for Secured IoT Smart Systems. In\nProceedings of the 2022 IEEE\
    \ International Conference on Internet of Things and Intelligence Systems (IoTaIS),\
    \ Bali, Indonesia,\n24–26 November 2022; pp. 50–56. [CrossRef]\n123. Jabbar, R.;\
    \ Shinoy, M.; Kharbeche, M.; Al-Khalifa, K.; Krichen, M.; Barkaoui, K. Urban trafﬁc\
    \ monitoring and modeling system:\nAn iot solution for enhancing road safety.\
    \ In Proceedings of the 2019 International Conference on Internet of Things, Embedded\n\
    Systems and Communications (iintec), Tunis, Tunisia, 20–22 December 2019; pp.\
    \ 13–18.\n124. An, J.; Le Gall, F.; Kim, J.; Yun, J.; Hwang, J.; Bauer, M.; Zhao,\
    \ M.; Song, J. Toward Global IoT-Enabled Smart Cities Interworking\nUsing Adaptive\
    \ Semantic Adapter. IEEE Internet Things J. 2019, 6, 5753–5765. [CrossRef]\n125.\
    \ Cirillo, F.; Gómez, D.; Diez, L.; Elicegui Maestro, I.; Gilbert, T.B.J.; Akhavan,\
    \ R. Smart City IoT Services Creation Through\nLarge-Scale Collaboration. IEEE\
    \ Internet Things J. 2020, 7, 5267–5275. [CrossRef]\n126. Abdalzaher, M.S.; Seddik,\
    \ K.; Muta, O. Using Stackelberg game to enhance cognitive radio sensor networks\
    \ security. Iet Commun.\n2017, 11, 1503–1511. [CrossRef]\nSustainability 2023,\
    \ 15, 11713\n33 of 38\n127. Goswami, V.; Sharma, B.; Patra, S.S.; Chowdhury, S.;\
    \ Barik, R.K.; Dhaou, I.B. IoT-Fog Computing Sustainable System for Smart\nCities:\
    \ A Queueing-based Approach. In Proceedings of the 2023 1st International Conference\
    \ on Advanced Innovations in Smart\nCities (ICAISC), Jeddah, Saudi Arabia, 23–25\
    \ January 2023; pp. 1–6. [CrossRef]\n128. statista: IoT Devices Forecasts from\
    \ 2022 to 2030. Available online: https://www.statista.com/statistics/1183457/iot-connected-\n\
    devices-worldwide/ (accessed on 31 March 2023).\n129. Rwegasira, D.; Dhaou, I.B.;\
    \ Kakakhel, S.; Westerlund, T.; Tenhunen, H. Distributed load shedding algorithm\
    \ for islanded\nmicrogrid using fog computing paradigm. In Proceedings of the\
    \ 2020 6th IEEE International Energy Conference (ENERGYCon),\nGammarth, Tunis,\
    \ Tunisia, 28 September–1 October 2020; pp. 888–893. [CrossRef]\n130. Abdalzaher,\
    \ M.S.; Fouda, M.M.; Ibrahem, M.I. Data Privacy Preservation and Security in Smart\
    \ Metering Systems. Energies 2022,\n15, 7419. [CrossRef]\n131. Salim, M.M.; Elsayed,\
    \ H.A.; Elaziz, M.A.; Fouda, M.M.; Abdalzaher, M.S. An Optimal Balanced Energy\
    \ Harvesting Algorithm for\nMaximizing Two-Way Relaying D2D Communication Data\
    \ Rate. IEEE Access 2022, 10, 114178–114191. [CrossRef]\n132. Salim, M.M.; ElSayed,\
    \ H.A.; Abdalzaher, M.S.; Fouda, M.M. RF Energy Harvesting Dependency for Power\
    \ Optimized Two-Way\nRelaying D2D Communication. In Proceedings of the 2022 IEEE\
    \ International Conference on Internet of Things and Intelligence\nSystem (IOTAIS),\
    \ Bali, Indonesia, 24–26 November 2022; pp. 297–303.\n133. Salim, M.M.; Elsayed,\
    \ H.A.; Abdalzaher, M.S.; Fouda, M.M. RF Energy Harvesting Effectiveness in Relay-based\
    \ D2D Communi-\ncation. In Proceedings of the 2023 International Conference on\
    \ Computer Science, Information Technology and Engineering\n(ICCoSITE), Banda\
    \ Aceh, Indonesia, 16–17 February 2023.\n134. Salim, M.M.; Elsayed, H.A.E.A.;\
    \ Abdalzaher, M.S. A survey on essential challenges in relay-aided D2D communication\
    \ for\nnext-generation cellular networks. J. Netw. Comput. Appl. 2023, 216, 103657.\
    \ [CrossRef]\n135. Cui, J.; Chen, X.; Zhang, J.; Zhang, Q.; Zhong, H. Toward Achieving\
    \ Fine-Grained Access Control of Data in Connected and\nAutonomous Vehicles. IEEE\
    \ Internet Things J. 2021, 8, 7925–7937. [CrossRef]\n136. Orlando, M.; Estebsari,\
    \ A.; Pons, E.; Pau, M.; Quer, S.; Poncino, M.; Bottaccioli, L.; Patti, E. A Smart\
    \ Meter Infrastructure for Smart\nGrid IoT Applications. IEEE Internet Things\
    \ J. 2022, 9, 12529–12541. [CrossRef]\n137. Fabrício, M.A.; Behrens, F.H.; Bianchini,\
    \ D. Monitoring of Industrial Electrical Equipment using IoT. IEEE Lat. Am. Trans.\
    \ 2020,\n18, 1425–1432. [CrossRef]\n138. Gubbi, J.; Buyya, R.; Marusic, S.; Palaniswami,\
    \ M. Internet of Things (IoT): A vision, architectural elements, and future directions.\n\
    Future Gener. Comput. Syst. 2013, 29, 1645–1660. [CrossRef]\n139. Bandyopadhyay,\
    \ D.; Sen, J. Internet of things: Applications and challenges in technology and\
    \ standardization. Wirel. Pers.\nCommun. 2011, 58, 49–69. [CrossRef]\n140. Abdalzaher,\
    \ M.S.; Muta, O. Employing game theory and TDMA protocol to enhance security and\
    \ manage power consumption in\nWSNs-based cognitive radio. IEEE Access 2019, 7,\
    \ 132923–132936. [CrossRef]\n141. Abdalzaher, M.S.; Seddik, K.; Muta, O. An effective\
    \ Stackelberg game for high-assurance of data trustworthiness in WSNs.\nIn Proceedings\
    \ of the 2017 IEEE Symposium on Computers and Communications (ISCC), Heraklion,\
    \ Greece, 3–6 July 2017;\npp. 1257–1262.\n142. Abdalzaher, M.S.; Seddik, K.; Muta,\
    \ O. Using repeated game for maximizing high priority data trustworthiness in\
    \ wireless sensor\nnetworks. In Proceedings of the 2017 IEEE Symposium on Computers\
    \ and Communications (ISCC), Heraklion, Greece, 3–6 July\n2017; pp. 552–557.\n\
    143. Blessy, A.; Kumar, A.; Md, A.Q.; Alharbi, A.I.; Almusharraf, A.; Khan, S.B.\
    \ Sustainable Irrigation Requirement Prediction Using\nInternet of Things and\
    \ Transfer Learning. Sustainability 2023, 15, 8260. [CrossRef]\n144. Zou, L.;\
    \ Javed, A.; Muntean, G.M. Smart mobile device power consumption measurement for\
    \ video streaming in wireless\nenvironments: WiFi vs. LTE. In Proceedings of the\
    \ 2017 IEEE International Symposium on Broadband Multimedia Systems and\nBroadcasting\
    \ (BMSB), Cagliari, Italy, 7–9 June 2017; pp. 1–6.\n145. Park, S.J.; Lee, D.K.\
    \ Prediction of coastal ﬂooding risk under climate change impacts in South Korea\
    \ using machine learning\nalgorithms. Environ. Res. Lett. 2020, 15, 094052. [CrossRef]\n\
    146. Chamola, V.; Hassija, V.; Gupta, S.; Goyal, A.; Guizani, M.; Sikdar, B. Disaster\
    \ and pandemic management using machine learning:\nA survey. IEEE Internet Things\
    \ J. 2020, 8, 16047–16071. [CrossRef]\n147. Adoni, W.Y.H.; Lorenz, S.; Fareedh,\
    \ J.S.; Gloaguen, R.; Bussmann, M. Investigation of Autonomous Multi-UAV Systems\
    \ for Target\nDetection in Distributed Environment: Current Developments and Open\
    \ Challenges. Drones 2023, 7, 263. [CrossRef]\n148. Krichen, M.; Adoni, W.Y.H.;\
    \ Mihoub, A.; Alzahrani, M.Y.; Nahhal, T. Security Challenges for Drone Communications:\
    \ Possible\nThreats, Attacks and Countermeasures. In Proceedings of the 2022 2nd\
    \ International Conference of Smart Systems and Emerging\nTechnologies (SMARTTECH),\
    \ Riyadh, Saudi Arabia, 9–11 May 2022; pp. 184–189.\n149. Saha, H.; Basu, S.;\
    \ Auddy, S.; Dey, R.; Nandy, A.; Pal, D.; Roy, N.; Jasu, S.; Saha, A.; Chattopadhyay,\
    \ S.; et al.\nA low cost\nfully autonomous GPS (Global Positioning System) based\
    \ quad copter for disaster management. In Proceedings of the 2018\nIEEE 8th Annual\
    \ Computing and Communication Workshop and Conference (CCWC), Las Vegas, NV, USA,\
    \ 8–10 January 2018;\npp. 654–660.\n150. Khan, A.; Gupta, S.; Gupta, S.K. Emerging\
    \ UAV technology for disaster detection, mitigation, response, and preparedness.\
    \ J. Field\nRobot. 2022, 39, 905–955. [CrossRef]\nSustainability 2023, 15, 11713\n\
    34 of 38\n151. Giardina, G.; Macchiarulo, V.; Foroughnia, F.; Jones, J.N.; Whitworth,\
    \ M.R.; Voelker, B.; Milillo, P.; Penney, C.; Adams, K.;\nKijewski-Correa, T.\
    \ Combining remote sensing techniques and ﬁeld surveys for post-earthquake reconnaissance\
    \ missions. Bull.\nEarthq. Eng. 2023, 1–25. [CrossRef]\n152. Kucharczyk, M.; Hugenholtz,\
    \ C.H. Remote sensing of natural hazard-related disasters with small drones: Global\
    \ trends, biases,\nand research opportunities. Remote Sens. Environ. 2021, 264,\
    \ 112577. [CrossRef]\n153. McCarthy, E.D.; Martin, J.M.; Boer, M.M.; Welbergen,\
    \ J.A. Drone-based thermal remote sensing provides an effective new tool for\n\
    monitoring the abundance of roosting fruit bats. Remote Sens. Ecol. Conserv. 2021,\
    \ 7, 461–474. [CrossRef]\n154. Guo, Y.; Jia, X.; Paull, D.; Zhang, J.; Farooq,\
    \ A.; Chen, X.; Islam, M.N. A drone-based sensing system to support satellite\
    \ image\nanalysis for rice farm mapping. In Proceedings of the IGARSS 2019—2019\
    \ IEEE International Geoscience and Remote Sensing\nSymposium, Yokohama, Japan,\
    \ 28 July–2 August 2019; pp. 9376–9379.\n155. Saini, K.; Kalra, S.; Sood, S.K.\
    \ An Integrated Framework for Smart Earthquake Prediction: IoT, Fog, and Cloud\
    \ Computing.\nJ. Grid Comput. 2022, 20, 1–20. [CrossRef]\n156. Qiao, S.; Zhang,\
    \ Q.; Zhang, Q.; Guo, F.; Li, W. Hybrid seismic-electrical data acquisition station\
    \ based on cloud technology and\ngreen IoT. IEEE Access 2020, 8, 31026–31033.\
    \ [CrossRef]\n157. Jamali-Rad, H.; Campman, X. Internet of Things-based wireless\
    \ networking for seismic applications. Geophys. Prospect. 2018,\n66, 833–853.\
    \ [CrossRef]\n158. Sepulveda, F.; Thangraj, J.S.; Pulliam, J. The Edge of Exploration:\
    \ An Edge Storage and Computing Framework for Ambient\nNoise Seismic Interferometry\
    \ Using Internet of Things Based Sensor Networks. Sensors 2022, 22, 3615. [CrossRef]\n\
    159. Saraswat, M.; Tripathi, R. Cloud computing: Comparison and analysis of cloud\
    \ service providers-AWs, Microsoft and Google.\nIn Proceedings of the 2020 9th\
    \ International Conference System Modeling and Advancement in Research Trends\
    \ (SMART),\nMoradabad, India, 4–5 December 2020; IEEE: Piscataway, NJ, USA, 2020;\
    \ pp. 281–285.\n160. Kaushik, P.; Rao, A.M.; Singh, D.P.; Vashisht, S.; Gupta,\
    \ S. Cloud computing and comparison based on service and performance\nbetween\
    \ Amazon AWS, Microsoft Azure, and Google Cloud. In Proceedings of the 2021 International\
    \ Conference on Technological\nAdvancements and Innovations (ICTAI), Tashkent,\
    \ Uzbekistan, 10–12 November 2021; pp. 268–273.\n161. Darbandi, M. Proposing new\
    \ intelligence algorithm for suggesting better services to cloud users based on\
    \ Kalman Filtering.\nJ. Comput. Sci. Appl. 2017, 5, 11–16.\n162. Ding, L.; Zhou,\
    \ C.; Deng, Q.; Luo, H.; Ye, X.; Ni, Y.; Guo, P. Real-time safety early warning\
    \ system for cross passage construction\nin Yangtze Riverbed Metro Tunnel based\
    \ on the internet of things. Autom. Constr. 2013, 36, 25–37. [CrossRef]\n163.\
    \ Abraham, M.T.; Satyam, N.; Pradhan, B.; Alamri, A.M. IoT-based geotechnical\
    \ monitoring of unstable slopes for landslide early\nwarning in the Darjeeling\
    \ Himalayas. Sensors 2020, 20, 2611. [CrossRef] [PubMed]\n164. Yue, Y.; Lv, Y.\
    \ A Machine Learning-Based Decision Support System for Predicting and Repairing\
    \ Cracks in Undisturbed Loess\nUsing Microbial Mineralization and the Internet\
    \ of Things. Sustainability 2023, 15, 8269. [CrossRef]\n165. Becker, J.S.; Potter,\
    \ S.H.; Vinnell, L.J.; Nakayachi, K.; McBride, S.K.; Johnston, D.M. Earthquake\
    \ early warning in Aotearoa New\nZealand: A survey of public perspectives to guide\
    \ warning system development. Humanit. Soc. Sci. Commun. 2020, 7, 138.\n[CrossRef]\n\
    166. Peng, C.; Jiang, P.; Ma, Q.; Wu, P.; Su, J.; Zheng, Y.; Yang, J. Performance\
    \ evaluation of an earthquake early warning system in the\n2019–2020 M 6.0 Changning,\
    \ Sichuan, China, Seismic Sequence. Front. Earth Sci. 2021, 9, 699941. [CrossRef]\n\
    167. Meier, M.A.; Kodera, Y.; Böse, M.; Chung, A.; Hoshiba, M.; Cochran, E.; Minson,\
    \ S.; Hauksson, E.; Heaton, T. How often\ncan earthquake early warning systems\
    \ alert sites with high-intensity ground motion?\nJ. Geophys. Res. Solid Earth\
    \ 2020,\n125, e2019JB017718. [CrossRef]\n168. Wu, Y.M.; Mittal, H.; Chen, D.Y.;\
    \ Hsu, T.Y.; Lin, P.Y. Earthquake early warning systems in Taiwan: Current status.\
    \ J. Geol. Soc.\nIndia 2021, 97, 1525–1532. [CrossRef]\n169. Cremen, G.; Bozzoni,\
    \ F.; Pistorio, S.; Galasso, C. Developing a risk-informed decision-support system\
    \ for earthquake early\nwarning at a critical seaport. Reliab. Eng. Syst. Saf.\
    \ 2022, 218, 108035. [CrossRef]\n170. Peng, C.; Jiang, P.; Ma, Q.; Su, J.; Cai,\
    \ Y.; Zheng, Y. Chinese nationwide earthquake early warning system and its performance\
    \ in\nthe 2022 Lushan M 6.1 earthquake. Remote Sens. 2022, 14, 4269. [CrossRef]\n\
    171. Chamoli, B.P.; Kumar, A.; Chen, D.Y.; Gairola, A.; Jakka, R.S.; Pandey, B.;\
    \ Kumar, P.; Rathore, G. A prototype earthquake early\nwarning system for northern\
    \ India. J. Earthq. Eng. 2021, 25, 2455–2473. [CrossRef]\n172. Cremen, G.; Galasso,\
    \ C. Earthquake early warning: Recent advances and perspectives.\nEarth-Sci. Rev.\
    \ 2020, 205, 103184.\n[CrossRef]\n173. Wu, A.; Lee, J.; Khan, I.; Kwon, Y.W. CrowdQuake+:\
    \ Data-driven Earthquake Early Warning via IoT and Deep Learning.\nIn Proceedings\
    \ of the 2021 IEEE International Conference on Big Data (Big Data), Orlando, FL,\
    \ USA, 15–18 December 2021;\npp. 2068–2075.\n174. Clements, T. Earthquake Detection\
    \ with TinyML. In Proceedings of the AGU Fall Meeting Abstracts, New Orleans,\
    \ LA, USA,\n13–17 December 2021; Volume 2021.\n175. Khan, I.; Pandey, M.; Kwon,\
    \ Y.W. An earthquake alert system based on a collaborative approach using smart\
    \ devices.\nIn\nProceedings of the 2021 IEEE/ACM 8th International Conference\
    \ on Mobile Software Engineering and Systems (MobileSoft),\nMadrid, Spain, 17–19\
    \ May 2021; pp. 61–64.\nSustainability 2023, 15, 11713\n35 of 38\n176. Sreevidya,\
    \ P.; Abhilash, C.; Paul, J.; Rejithkumar, G. A Machine Learning-Based Early Landslide\
    \ Warning System Using IoT. In\nProceedings of the 2021 4th Biennial International\
    \ Conference on Nascent Technologies in Engineering (ICNTE), Navi Mumbai,\nIndia,\
    \ 15–16 January 2021; pp. 1–6.\n177. Koubâa, A.; Ammar, A.; Alahdab, M.; Kanhouch,\
    \ A.; Azar, A.T. Deepbrain: Experimental evaluation of cloud-based computation\n\
    ofﬂoading and edge computing in the internet-of-drones for deep learning applications.\
    \ Sensors 2020, 20, 5240. [CrossRef]\n178. Abdalzaher, M.S.; Elwekeil, M.; Wang,\
    \ T.; Zhang, S. A deep autoencoder trust model for mitigating jamming attack in\
    \ IoT assisted\nby cognitive radio. IEEE Syst. J. 2021, 16, 3635–3645. [CrossRef]\n\
    179. Tehseen, R.; Farooq, M.S.; Abid, A. A framework for the prediction of earthquake\
    \ using federated learning. PeerJ Comput. Sci.\n2021, 7, e540. [CrossRef]\n180.\
    \ Pughazhendhi, G.; Raja, A.; Ramalingam, P.; Elumalai, D.K. Earthosys—Tsunami\
    \ Prediction and Warning System Using\nMachine Learning and IoT. In Proceedings\
    \ of the International Conference on Computational Intelligence and Data Engineering;\n\
    Springer: Singapore, 2019; pp. 103–113.\n181. Khan, I.; Kwon, Y.W.\nP-Detector:\
    \ Real-Time P-Wave Detection in a Seismic Waveform Recorded on a Low-Cost MEMS\n\
    Accelerometer Using Deep Learning. IEEE Geosci. Remote Sens. Lett. 2022, 19, 1–5.\
    \ [CrossRef]\n182. Bassetti, E.; Panizzi, E. Earthquake Detection at the Edge:\
    \ IoT Crowdsensing Network. Information 2022, 13, 195. [CrossRef]\n183. Sarkar,\
    \ S.; Roy, A.; Kumar, S.; Das, B. Seismic Intensity Estimation Using Multilayer\
    \ Perceptron for Onsite Earthquake Early\nWarning. IEEE Sens. J. 2021, 22, 2553–2563.\
    \ [CrossRef]\n184. Lee, J.; Khan, I.; Choi, S.; Kwon, Y.W. A smart iot device\
    \ for detecting and responding to earthquakes. Electronics 2019, 8, 1546.\n[CrossRef]\n\
    185. Khan, I.; Choi, S.; Kwon, Y.W. Earthquake detection in a static and dynamic\
    \ environment using supervised machine learning and\na novel feature extraction\
    \ method. Sensors 2020, 20, 800. [CrossRef] [PubMed]\n186. Hamdy, O.; Gaber, H.;\
    \ Abdalzaher, M.S.; Elhadidy, M. Identifying Exposure of Urban Area to Certain\
    \ Seismic Hazard Using\nMachine Learning and GIS: A Case Study of Greater Cairo.\
    \ Sustainability 2022, 14, 10722. [CrossRef]\n187. Abdalzaher, M.S.; Moustafa,\
    \ S.S.R.; Abd-Elnaby, M.; Elwekeil, M. Comparative Performance Assessments of\
    \ Machine-Learning\nMethods for Artiﬁcial Seismic Sources Discrimination. IEEE\
    \ Access 2021, 9, 65524–65535. [CrossRef]\n188. Fauvel, K.; Balouek-Thomert, D.;\
    \ Melgar, D.; Silva, P.; Simonet, A.; Antoniu, G.; Costan, A.; Masson, V.; Parashar,\
    \ M.; Rodero, I.;\net al. A distributed multi-sensor machine learning approach\
    \ to earthquake early warning. In Proceedings of the AAAI Conference\non Artiﬁcial\
    \ Intelligence, New York, NY, USA, 7–12 February 2020; Volume 34, pp. 403–411.\n\
    189. Karaci, A. IoT-based earthquake warning system development and evaluation.\
    \ Mugla J. Sci. Technol. 2018, 4, 156–161. [CrossRef]\n190. Babu, V.; Rajan, V.\
    \ Flood and earthquake detection and rescue using IoT technology. In Proceedings\
    \ of the 2019 International\nConference on Communication and Electronics Systems\
    \ (ICCES), Coimbatore, India, 17–19 July 2019; pp. 1256–1260.\n191. Won, J.; Park,\
    \ J.; Park, J.W.; Kim, I.H. BLESeis: Low-cost IOT sensor for smart earthquake\
    \ detection and notiﬁcation. Sensors 2020,\n20, 2963. [CrossRef] [PubMed]\n192.\
    \ Duggal, R.; Gupta, N.; Pandya, A.; Mahajan, P.; Sharma, K.; Angra, P. Building\
    \ structural analysis based Internet of Things\nnetwork assisted earthquake detection.\
    \ Internet Things 2022, 19, 100561. [CrossRef]\n193. Mishra, B.K.; Dahal, K.;\
    \ Pervez, Z. Dynamic relief items distribution model with sliding time window\
    \ in the post-disaster\nenvironment. Appl. Sci. 2022, 12, 8358. [CrossRef]\n194.\
    \ Abdalzaher, M.S.; Fouda, M.M.; Emran, A.; Fadlullah, Z.M.; Ibrahem, M.I. A Survey\
    \ on Key Management and Authentication\nApproaches in Smart Metering Systems.\
    \ Energies 2023, 16, 2355. [CrossRef]\n195. Elwood, K.; Filippova, O.; Noy, I.;\
    \ Pastor Paz, J. Seismic policy, operations, and research uses for a building\
    \ inventory in an\nearthquake-prone city. Int. J. Disaster Risk Sci. 2020, 11,\
    \ 709–718. [CrossRef]\n196. Falanga, M.; De Lauro, E.; Petrosino, S.; Rincon-Yanez,\
    \ D.; Senatore, S. Semantically Enhanced IoT-Oriented Seismic Event\nDetection:\
    \ An Application to Colima and Vesuvius Volcanoes. IEEE Internet Things J. 2022,\
    \ 9, 9789–9803. [CrossRef]\n197. Javed, S.; Hassan, A.; Ahmad, R.; Ahmed, W.;\
    \ Alam, M.M.; Rodrigues, J.J. UAV trajectory planning for disaster scenarios.\
    \ Veh.\nCommun. 2023, 39, 100568. [CrossRef]\n198. Chen, J.; Liu, H.; Zheng, J.;\
    \ Lv, M.; Yan, B.; Hu, X.; Gao, Y. Damage degree evaluation of earthquake area\
    \ using UAV aerial image.\nInt. J. Aerosp. Eng. 2016, 2016, 2052603. [CrossRef]\n\
    199. Hanifa, N.R.; Gunawan, E.; Firmansyah, S.; Faizal, L.; Retnowati, D.A.; Pradipta,\
    \ G.C.; Imran, I.; Lassa, J.A. Unmanned Aerial\nVehicles for geospatial mapping\
    \ of damage assessment: A study case of the 2021 Mw 6.2 Mamuju-Majene, Indonesia,\
    \ earthquake\nduring the coronavirus disease 2019 (COVID-19) pandemic. Remote\
    \ Sens. Appl. Soc. Environ. 2022, 28, 100830. [CrossRef]\n200. Gomes, C.; Abbiati,\
    \ G.; Larsen, P.G. Seismic hybrid testing using fmi-based co-simulation. In Proceedings\
    \ of the Modelica\nConferences, Linköping, Sweden, 20–24 September 2021; pp. 287–295.\n\
    201. Xiao, Y. Experimental methods for seismic simulation of structural columns:\
    \ State-of-the-art review and introduction of new\nmultiuse structural testing\
    \ system. J. Struct. Eng. 2019, 145, 04018269. [CrossRef]\n202. Bas, E.E.; Moustafa,\
    \ M.A.; Pekcan, G. Compact hybrid simulation system: Validation and applications\
    \ for braced frames seismic\ntesting. J. Earthq. Eng. 2022, 26, 1565–1594. [CrossRef]\n\
    203. Edkins, D.J.; Orense, R.P.; Henry, R.S. Seismic simulation testing of PVC-U\
    \ pipe and proposed design prediction tool for joint\nperformance. J. Pipeline\
    \ Syst. Eng. Pract. 2021, 12, 04021007. [CrossRef]\nSustainability 2023, 15, 11713\n\
    36 of 38\n204. Wentz, F.; Traylen, N.; Hnat, T. Large-scale ﬁeld testing of resin\
    \ injection as a ground improvement method for mitigation of\nseismic liquefaction.\
    \ In Earthquake Geotechnical Engineering for Protection and Development of Environment\
    \ and Constructions; CRC\nPress: Boca Raton, FL, USA, 2019; pp. 664–672.\n205.\
    \ Pitilakis, D.; Anastasiadis, A.; Vratsikidis, A.; Kapouniaris, A.; Massimino,\
    \ M.R.; Abate, G.; Corsico, S. Large-scale ﬁeld testing\nof geotechnical seismic\
    \ isolation of structures using gravel-rubber mixtures. Earthq. Eng. Struct. Dyn.\
    \ 2021, 50, 2712–2731.\n[CrossRef]\n206. Fu, J.; Li, Z.; Meng, H.; Wang, J.; Shan,\
    \ X. Performance evaluation of low-cost seismic sensors for dense earthquake early\
    \ warning:\n2018–2019 ﬁeld testing in southwest China. Sensors 2019, 19, 1999.\
    \ [CrossRef]\n207. Vratsikidis, A.; Pitilakis, D. Field testing of gravel-rubber\
    \ mixtures as geotechnical seismic isolation. Bull. Earthq. Eng. 2022, 21,\n3905–3922.\
    \ [CrossRef]\n208. Liu, G.; Zhang, L.; Wang, Q.; Xu, J. Data-driven seismic prestack\
    \ velocity inversion via combining residual network with\nconvolutional autoencoder.\
    \ J. Appl. Geophys. 2022, 207, 104846. [CrossRef]\n209. Zhang, Z.; Lin, Y. Data-driven\
    \ seismic waveform inversion: A study on the robustness and generalization. IEEE\
    \ Trans. Geosci.\nRemote Sens. 2020, 58, 6900–6913. [CrossRef]\n210. Xu, J.G.;\
    \ Feng, D.C.; Mangalathu, S.; Jeon, J.S. Data-driven rapid damage evaluation for\
    \ life-cycle seismic assessment of regional\nreinforced concrete bridges. Earthq.\
    \ Eng. Struct. Dyn. 2022, 51, 2730–2751. [CrossRef]\n211. Zhang, R.; Liu, Y.;\
    \ Sun, H. Physics-guided convolutional neural network (PhyCNN) for data-driven\
    \ seismic response modeling.\nEng. Struct. 2020, 215, 110704. [CrossRef]\n212.\
    \ Nakayama, S.; Blacquière, G. Machine Learning Based Seismic Data Enhancement\
    \ Towards Overcoming Geophysical Limitations.\nIn Abu Dhabi International Petroleum\
    \ Exhibition and Conference; SPE: Abu Dhabi, United Arab Emirates, 2020; p. D041S104R003.\n\
    213. Carbone, M.R. When not to use machine learning: A perspective on potential\
    \ and limitations. MRS Bull. 2022, 47, 968–974.\n[CrossRef]\n214. Agbesi, C.C.M.;\
    \ Abdulai, J.D.; Ferdinand, K.A.; Sarpong, K.A.M. Resilient Framework for Distributed\
    \ Computation Ofﬂoading:\nOverview, Challenges and Issues. Int. J. Adv. Comput.\
    \ Sci. Appl. 2017, 8, 380–391.\n215. Behera, R.K.; Sahoo, K.S.; Mahapatra, S.;\
    \ Rath, S.K.; Sahoo, B. Security issues in distributed computation for big data\
    \ analytics. In\nHandbook of e-Business Security; CRC Press: Boca Raton, FL, USA,\
    \ 2018; pp. 167–190.\n216. Tran-Dang, H.; Kim, D.S. A survey on matching theory\
    \ for distributed computation ofﬂoading in iot-fog-cloud systems:\nPerspectives\
    \ and open issues. IEEE Access 2022, 10, 118353–118369. [CrossRef]\n217. Raﬁque,\
    \ W.; Shah, M.A. Distributed Cluster Computing: An Analysis to Overcome the Limitations.\
    \ In Proceedings of the IOARP\nInternational Conference on Communication and Networks\
    \ (ICCN 2015), London, UK, 18–19 December 2015; ACM: New York,\nNY, USA, 2016;\
    \ Proceedings Appeared on IOARP Digital Library.\n218. Caprolu, M.; Di Pietro,\
    \ R.; Lombardi, F.; Raponi, S. Edge computing perspectives: Architectures, technologies,\
    \ and open security\nissues. In Proceedings of the 2019 IEEE International Conference\
    \ on Edge Computing (EDGE), Milan, Italy, 8–13 July 2019;\npp. 116–123.\n219.\
    \ Zhang, J.; Chen, B.; Zhao, Y.; Cheng, X.; Hu, F. Data security and privacy-preserving\
    \ in edge computing paradigm: Survey and\nopen issues. IEEE Access 2018, 6, 18209–18237.\
    \ [CrossRef]\n220. Tao, C.; Gao, J.; Wang, T. Testing and quality validation for\
    \ ai software–perspectives, issues, and practices. IEEE Access 2019,\n7, 120164–120175.\
    \ [CrossRef]\n221. Šipek, M.; Muharemagi´c, D.; Mihaljevi´c, B.; Radovan, A. Enhancing\
    \ performance of cloud-based software applications with\nGraalVM and Quarkus.\
    \ In Proceedings of the 2020 43rd International Convention on Information, Communication\
    \ and Electronic\nTechnology (MIPRO), Opatija, Croatia, 28 September–2 October\
    \ 2020; pp. 1746–1751.\n222. Kim, H.; Ahmad, A.; Hwang, J.; Baqa, H.; Le Gall,\
    \ F.; Ortega, M.A.R.; Song, J. IoT-TaaS: Towards a prospective IoT testing\nframework.\
    \ IEEE Access 2018, 6, 15480–15493. [CrossRef]\n223. Beilharz, J.; Wiesner, P.;\
    \ Boockmeyer, A.; Pirl, L.; Friedenberger, D.; Brokhausen, F.; Behnke, I.; Polze,\
    \ A.; Thamsen, L. Continuously\ntesting distributed iot systems: An overview of\
    \ the state of the art. In Proceedings of the Service-Oriented Computing–ICSOC\n\
    2021 Workshops: AIOps, STRAPS, AI-PA and Satellite Events, Dubai, United Arab\
    \ Emirates, 22–25 November 2021; pp. 336–350.\n224. Voas, J.; Kuhn, R.; Laplante,\
    \ P. Testing IoT Systems. In Proceedings of the 2018 IEEE Symposium on Service-Oriented\
    \ System\nEngineering (SOSE), Bamberg, Germany, 26–29 March 2018; pp. 48–52.\n\
    225. Bertolino, A.; Angelis, G.D.; Gallego, M.; García, B.; Gortázar, F.; Lonetti,\
    \ F.; Marchetti, E. A systematic review on cloud testing.\nACM Comput. Surv. (CSUR)\
    \ 2019, 52, 1–42. [CrossRef]\n226. Nachiyappan, S.; Justus, S. Cloud testing tools\
    \ and its challenges: A comparative study. Procedia Comput. Sci. 2015, 50, 482–489.\n\
    [CrossRef]\n227. Ahmad, A.A.S.; Brereton, P.; Andras, P. A systematic mapping\
    \ study of empirical studies on software cloud testing methods. In\nProceedings\
    \ of the 2017 IEEE International Conference on Software Quality, Reliability and\
    \ Security Companion (QRS-C), Prague,\nCzech Republic, 25–29 July 2017; pp. 555–562.\n\
    228. Siddiqui, T.; Ahmad, R. Cloud Testing: A Systematic Review. Int. Res. J.\
    \ Eng. Technol. (IRJET) 2015, 2, 397–406.\n229. Krichen, M. A formal framework\
    \ for conformance testing of distributed real-time systems. In International Conference\
    \ on Principles\nof Distributed Systems; Springer: Berlin/Heidelberg, Germany,\
    \ 2010; pp. 139–142.\n230. Hooda, I.; Chhillar, R.S. Software test process, testing\
    \ types and techniques. Int. J. Comput. Appl. 2015, 111, 10–14. [CrossRef]\nSustainability\
    \ 2023, 15, 11713\n37 of 38\n231. Tramontana, P.; Amalﬁtano, D.; Amatucci, N.;\
    \ Fasolino, A.R. Automated functional testing of mobile applications: A systematic\n\
    mapping study. Softw. Qual. J. 2019, 27, 149–201. [CrossRef]\n232. Maâlej, A.J.;\
    \ Hamza, M.; Krichen, M.; Jmaiel, M. Automated signiﬁcant load testing for WS-BPEL\
    \ compositions. In Proceedings\nof the 2013 IEEE Sixth International Conference\
    \ on Software Testing, Veriﬁcation and Validation Workshops, Luxembourg,\nLuxembourg,\
    \ 18–22 March 2013; pp. 144–153.\n233. Krichen, M.; Maâlej, A.J.; Lahami, M. A\
    \ model-based approach to combine conformance and load tests: An eHealth case\
    \ study.\nInt. J. Crit. Comput.-Based Syst. 2018, 8, 282–310. [CrossRef]\n234.\
    \ Maâlej, A.J.; Lahami, M.; Krichen, M.; Jmaïel, M. Distributed and Resource-Aware\
    \ Load Testing of WS-BPEL Compositions. In\nProceedings of the ICEIS (2), Funchal,\
    \ Portugal, 21–24 March 2018; pp. 29–38.\n235. Felderer, M.; Büchler, M.; Johns,\
    \ M.; Brucker, A.D.; Breu, R.; Pretschner, A. Security testing: A survey. In Advances\
    \ in Computers;\nElsevier: Berlin/Heidelberg, Germany, 2016; Volume 101, pp. 1–51.\n\
    236. Lahami, M.; Krichen, M.; Jmaïel, M. Runtime testing approach of structural\
    \ adaptations for dynamic and distributed systems. Int.\nJ. Comput. Appl. Technol.\
    \ 2015, 51, 259–272. [CrossRef]\n237. Tauqeer, O.B.; Jan, S.; Khadidos, A.O.;\
    \ Khadidos, A.O.; Khan, F.Q.; Khattak, S. Analysis of Security Testing Techniques.\
    \ Intell.\nAutom. Soft Comput. 2021, 29, 291–306. [CrossRef]\n238. Krichen, M.;\
    \ Lahami, M.; Cheikhrouhou, O.; Alroobaea, R.; Maâlej, A.J. Security testing of\
    \ internet of things for smart city\napplications: A formal approach. In Smart\
    \ Infrastructure and Applications; Springer: Cham, Switzerland, 2020; pp. 629–653.\n\
    239. Al Shebli, H.M.Z.; Beheshti, B.D. A study on penetration testing process\
    \ and tools. In Proceedings of the 2018 IEEE Long Island\nSystems, Applications\
    \ and Technology Conference (LISAT), Farmingdale, NY, USA, 4 May 2018; pp. 1–7.\n\
    240. Krichen, M.; Cheikhrouhou, O.; Lahami, M.; Alroobaea, R.; Jmal Maâlej, A.\
    \ Towards a model-based testing framework for the\nsecurity of internet of things\
    \ for smart city applications. In Proceedings of the Smart Societies, Infrastructure,\
    \ Technologies\nand Applications: First International Conference, SCITA 2017,\
    \ Jeddah, Saudi Arabia, 27–29 November 2017; Proceedings 1,\npp. 360–365.\n241.\
    \ Abu-Dabaseh, F.; Alshammari, E. Automated penetration testing: An overview.\n\
    In Proceedings of the 4th International\nConference on Natural Language Computing,\
    \ Dubai, United Arab Emirates, 28–29 April 2018; pp. 121–129.\n242. Krichen, M.;\
    \ Tripakis, S. State identiﬁcation problems for timed automata.\nIn Proceedings\
    \ of the Testing of Communicat-\ning Systems: 17th IFIP TC6/WG 6.1 International\
    \ Conference, TestCom 2005, Montreal, QC, Canada, 31 May–2 June 2005;\nSpringer:\
    \ Berlin/Heidelberg, Germany, 2005; Proceedings 17, pp. 175–191.\n243. Shah, S.;\
    \ Mehtre, B.M. An overview of vulnerability assessment and penetration testing\
    \ techniques. J. Comput. Virol. Hacking Tech.\n2015, 11, 27–49. [CrossRef]\n244.\
    \ Barnum, C.M. Usability Testing Essentials: Ready, Set... Test! Morgan Kaufmann:\
    \ Burlington, MA, USA, 2020.\n245. Riihiaho, S. Usability testing. In The Wiley\
    \ Handbook of Human Computer Interaction; John Wiley & Sons: Hoboken, NJ, USA,\
    \ 2018;\nVolume 1, pp. 255–275.\n246. Lahami, M.; Krichen, M. A survey on runtime\
    \ testing of dynamically adaptable and distributed systems. Softw. Qual. J. 2021,\n\
    29, 555–593. [CrossRef]\n247. Ekelund, E.D.; Engström, E. Efﬁcient regression\
    \ testing based on test history: An industrial evaluation. In Proceedings of the\
    \ 2015\nIEEE International Conference on Software Maintenance and Evolution (ICSME),\
    \ Bremen, Germany, 29 September–1 October\n2015; pp. 449–457.\n248. Ngah, A.;\
    \ Munro, M.; Abdallah, M. An overview of regression testing. J. Telecommun. Electron.\
    \ Comput. Eng. (JTEC) 2017, 9, 45–49.\n249. Felderer, M.; Fourneret, E. A systematic\
    \ classiﬁcation of security regression testing approaches. Int. J. Softw. Tools\
    \ Technol. Transf.\n2015, 17, 305–319. [CrossRef]\n250. Moustafa, S.S.R.; Abdalzaher,\
    \ M.S.; Yassien, M.H.; Wang, T.; Elwekeil, M.; Haﬁez, H.E.A. Development of an\
    \ Optimized\nRegression Model to Predict Blast-Driven Ground Vibrations. IEEE\
    \ Access 2021, 9, 31826–31841. [CrossRef]\n251. Do, H. Recent advances in regression\
    \ testing techniques. Adv. Comput. 2016, 103, 53–77.\n252. Krichen, M.; Tripakis,\
    \ S. Interesting properties of the real-time conformance relation tioco. In Proceedings\
    \ of the Theoret-\nical Aspects of Computing-ICTAC 2006: Third International Colloquium,\
    \ Tunis, Tunisia, 20–24 November 2006; Springer:\nBerlin/Heidelberg, Germany,\
    \ 2006; pp. 317–331.\n253. Michael, J.B.; Dinolt, G.W.; Drusinsky, D. Open questions\
    \ in formal methods. Computer 2020, 53, 81–84. [CrossRef]\n254. ter Beek, M.H.;\
    \ Larsen, K.G.; Niˇckovi´c, D.; Willemse, T.A. Formal methods and tools for industrial\
    \ critical systems. Int. J. Softw.\nTools Technol. Transf. 2022, 24, 325–330.\
    \ [CrossRef]\n255. Krichen, M. Contributions to Model-Based Testing of Dynamic\
    \ and Distributed Real-Time Systems. Ph.D. Thesis, École Nationale\nd’Ingénieurs\
    \ de Sfax, Sfax, Tunisie, 2018.\n256. Vanit-Anunchai, S. Teaching Low-Code Formal\
    \ Methods with Coloured Petri Nets.\nIn Formal Methods Teaching Workshop;\nSpringer:\
    \ Cham, Switzerland, 2023; pp. 96–104.\n257. Krichen, M. A formal framework for\
    \ black-box conformance testing of distributed real-time systems. Int. J. Crit.\
    \ Comput.-Based\nSyst. 2012, 3, 26–43. [CrossRef]\n258. Basin, D. Formal Methods\
    \ for Payment Protocols.\nIn Proceedings of the 2023 ACM Asia Conference on Computer\
    \ and\nCommunications Security, Melbourne, Australia, 10–14 July 2023; p. 326.\n\
    Sustainability 2023, 15, 11713\n38 of 38\n259. Canfora, G.; Mercaldo, F.; Santone,\
    \ A. A Novel Classiﬁcation Technique based on Formal Methods. ACM Trans. Knowl.\
    \ Discov.\nData 2023, 17, 1–30. [CrossRef]\n260. Krichen, M. Model-Based Testing\
    \ for Real-Time Systems.\nPh.D. Thesis, Universit Joseph Fourier, Saint-Martin-d’Hères,\n\
    France, 2007.\n261. Mouha, N. Exploring Formal Methods for Cryptographic Hash\
    \ Function Implementations.\nIn Australasian Conference on\nInformation Security\
    \ and Privacy; Springer: Cham, Switzerland, 2023; pp. 177–195.\n262. Luckcuck,\
    \ M. Using formal methods for autonomous systems: Five recipes for formal veriﬁcation.\
    \ Proc. Inst. Mech. Eng. Part O J.\nRisk Reliab. 2023, 237, 278–292. [CrossRef]\n\
    263. Krichen, M.; Mihoub, A.; Alzahrani, M.Y.; Adoni, W.Y.H.; Nahhal, T. Are Formal\
    \ Methods Applicable To Machine Learning And\nArtiﬁcial Intelligence? In Proceedings\
    \ of the 2022 2nd International Conference of Smart Systems and Emerging Technologies\n\
    (SMARTTECH), Riyadh, Saudi Arabia, 9–11 May 2022; pp. 48–53.\n264. Alizadeh, M.;\
    \ Zabihi, H.; Rezaie, F.; Asadzadeh, A.; Wolf, I.D.; Langat, P.K.; Khosravi, I.;\
    \ Beiranvand Pour, A.; Mohammad Nataj,\nM.; Pradhan, B. Earthquake vulnerability\
    \ assessment for urban areas using an ANN and hybrid SWOT-QSPM Model. Remote\n\
    Sens. 2021, 13, 4519. [CrossRef]\n265. Chen, P.; Liu, H.; Xin, R.; Carval, T.;\
    \ Zhao, J.; Xia, Y.; Zhao, Z. Effectively detecting operational anomalies in large-scale\
    \ iot data\ninfrastructures by using a gan-based predictive model. Comput. J.\
    \ 2022, 65, 2909–2925. [CrossRef]\nDisclaimer/Publisher’s Note: The statements,\
    \ opinions and data contained in all publications are solely those of the individual\n\
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or\
    \ the editor(s) disclaim responsibility for any injury to\npeople or property\
    \ resulting from any ideas, methods, instructions or products referred to in the\
    \ content.\n"
  inline_citation: '>'
  journal: Sustainability
  limitations: '>'
  pdf_link: https://www.mdpi.com/2071-1050/15/15/11713/pdf?version=1690794731
  publication_year: 2023
  relevance_evaluation: Relevant. The provided explanation captures the paper's purpose
    and main objectives concisely.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Early Detection of Earthquakes Using IoT and Cloud Infrastructure: A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.3009298
  analysis: '>'
  apa_citation: 'Kour, V. P., & Arora, S. (2020). Recent Developments of the Internet
    of Things in Agriculture: A Survey. IEEE Access, 8, 129924-129957. https://doi.org/10.1109/ACCESS.2020.3009298'
  authors:
  - Vippon Preet Kour
  - Sakshi Arora
  citation_count: 97
  data_sources: Not specified
  explanation: The study's main objective is to explore the use of advanced sensing
    technologies like hyperspectral imaging and thermal sensing to detect non-invasive
    plant stress, particularly in the leaves. Plant stress can be caused by a variety
    of factors, including drought, nutrient deficiency, disease, and pest infestation.
    By detecting plant stress early on, farmers can take steps to mitigate the problem
    and prevent crop loss. The authors propose to use hyperspectral imaging and thermal
    sensing to detect changes in the biochemical composition and temperature of leaves,
    which can indicate plant stress. Hyperspectral imaging can measure the reflectance
    of light in hundreds of narrow bands across the visible and infrared spectrum,
    providing detailed information about the plant's biochemical composition. Thermal
    sensing can measure the temperature of the leaves, which can indicate changes
    in the plant's water status and metabolic activity. The combination of these two
    technologies can provide a comprehensive view of plant stress, allowing farmers
    to make informed decisions about how to manage their crops.
  extract_1: '"Explore the use of advanced sensing technologies, such as hyperspectral
    imaging and thermal sensing, for non-invasive plant stress detection"'
  extract_2: '"Hyperspectral imaging and thermal sensing can provide a comprehensive
    view of plant stress, allowing farmers to make informed decisions about how to
    manage their crops."'
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Recent
    Developments of the Internet of Things in Agriculture: A Survey Publisher: IEEE
    Cite This PDF Vippon Preet Kour; Sakshi Arora All Authors 98 Cites in Papers 12530
    Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Sources and Search Methods III. Introduction
    to the Internet of Things (IoT) Concepts and Theories IV. Related Work V. Findings
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    A rise in the population has immensely increased the pressure on the agriculture
    sector. With the advent of technology, this decade is witnessing a shift from
    conventional approaches to the most advanced ones. The Internet of Things (IoT)
    has transformed both the quality and quantity of the agriculture sector. Hybridization
    of species along with the real-time monitoring of the farms paved a way for resource
    optimization. Scientists, research institutions, academicians, and most nations
    across the globe are moving towards the practice and execution of collaborative
    projects to explore the horizon of this field for serving mankind. The tech industry
    is racing to provide more optimal solutions. Inclusion of IoT, along with cloud
    computing, big data analytics, and wireless sensor networks can provide sufficient
    scope to predict, process, and analyze the situations and improve the activities
    in the real-time scenario. The concept of heterogeneity and interoperability of
    the devices by providing flexible, scalable, and durable methods, models are also
    opening new domains in this field. Therefore, this paper contributes towards the
    recent IoT technologies in the agriculture sector, along with the development
    of hardware and software systems. The public and private sector projects and startup''s
    started all over the globe to provide smart and sustainable solutions in precision
    agriculture are also discussed. The current scenario, applications, research potential,
    limitations, and future aspects are briefly discussed. Based on the concepts of
    IoT a precision farming framework is also proposed in this article. A graphical
    abstract for Recent developments of the Internet of Things in Agriculture: A Survey.
    Published in: IEEE Access ( Volume: 8) Page(s): 129924 - 129957 Date of Publication:
    14 July 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3009298 Publisher:
    IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the
    instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text
    articles and stipulations in the API documentation. SECTION I. Introduction The
    term ‘Agriculture’ is inferred from the Latin words ‘Ager’ means ‘Land’ and ‘Culture’
    means ‘Cultivation’. It is the milestone field of human civilization and is one
    of the benchmark areas. This field is the withstander of the economies of various
    nations. According to the Food and Agricultural Organization of the United Nations
    (FAO), more than 60% of the human population depends on agriculture for survival
    and around 12% of the total land area is under agricultural production [1]. Predicted
    by FAO, the global population will reach the mark of 8 billion people by the year
    2025 and 9.6 billion by the end of 2050 (FAO, 2009) [2]. The interpretation of
    this data shows that to tackle this population growth, an estimated increase of
    70% in food production must be achieved worldwide by 2050 [3]. Agriculture is
    also the second-largest greenhouse gas (GHG) emitter, because of fossil-based
    fertilizers, biomass, and machinery. In some of the developed and developing nations,
    the agriculture sector is the backbone of the economy. This field has a huge contribution
    in the growth of Gross Domestic Product (GDP) of developing countries, in particular,
    some of them are listed in TABLE 1. TABLE 1 Nations Having Agriculture as a Major
    Part of Their GDP [4] In India, 53% of the population is dependent on the agriculture
    sector for employment and 61.5 % of the Indian population is primarily dependent
    on the agriculture sector for its livelihood [5]. Focusing on the market size,
    India is the second-largest fruit producer in the world. Based on certain data
    and statistics, the farming income in India is expected to double by 2022. Eyeing
    this change, there is an intra-state cluster development of certain states in
    terms of the agriculture sector. The various stats and numbers representing the
    impact of agriculture in the overall economic development of India as compared
    to other fields has been shown in Fig. 1. FIGURE 1. Contributions of various sectors
    in the Indian economy [6]. Show All At present, the demand is more than the supply
    generated and this curve will illustrate more unstable results in the coming years,
    due to increase in demand with population rise. To maintain the demand-supply
    curve, there will be enormous stress on the agricultural sector. Global warming
    and changing climatic conditions are also important factors to be taken into consideration.
    From the past decades, due to the increase in demand and pressure on the overall
    structure of the field, this area is witnessing the slow but progressive shift
    from traditional approaches to the most advanced technology-driven methods. The
    use of traditional approaches and conventional methods, as well as the changes
    in the environment, lay stress on the agricultural sector. Some of the challenges
    for the agricultural sector are given as follows: The use of traditional techniques
    of farming hinders the optimization of both cost and time. Depletion of the topsoil
    due to floods and winds resulting in the deposition of the pollutants, sediments,
    nitrates, and phosphates, result in causing the eutrophication and the runoff
    of the soil. Planting the same crop after each harvest makes the soil redundant
    of the essential nutrients. Water scarcity due to the climatic changes lowers
    the level of groundwater for irrigation, thereby disturbing the water cycle. Global
    climate changes due to the destruction of the tropical forests and the other vegetative
    species in agriculture result in the elevation of the carbon dioxide and other
    greenhouse gas levels. Lack of expertise in proper recognition of the particular
    plant species. There is no proper method to detect the disease at early stages,
    such that precautionary measures could be taken to prevent it. Therefore, because
    of these factors, the need for the creation of modern methods and intensification
    of the agricultural practices to use water, soil, minerals, and other resources
    efficiently becomes obligatory. The nature of the technology and devices is changing
    i.e. it never settles for any less. A lot of research papers addressing the challenges
    of agriculture in the IoT domain have been put forth. Constant developments and
    everlasting expectations from the existing technologies paves a great way for
    motivating academicians and researchers to set and attain new standards. During
    recent years, there has been a paradigm shift in the study and application of
    domains like IoT, cloud computing, machine learning, and big data, etc. Therefore,
    from the trends of these data sets, a constant need is felt to revisit the current
    standings and capacities of the new age IoT concepts. The modern-day requirements
    and the counteractive substitutes in the field of agriculture and changes exactly
    to the expectations based on the concepts of IoT must be addressed. The contribution
    of IoT in the agriculture field and certain gaps in resource utilization motivated
    us to perform a study that addresses current issues and applications of IoT in
    agriculture. Agriculture is expected to get immensely fortified by the advancement
    of technology especially by the domain IoT. Precision agriculture is the new term
    appended to the agriculture filed, with all the procedures being followed, addressed,
    and simulated in a tech-driven manner. Incorporation of the internet has started
    to revolutionize this field by associating devices together, now being identified
    as the Internet of Things. Coined in 1999 by a British visionary “Kevin Ashton”,
    Internet of Things is a consortium of devices connected [7]. The devices are associated
    with internet via Wireless Sensor Networks (WSN), Radio-frequency Identification
    (RIFD), Near Field Communication (NFC), Long Term Evolution (LTE), and other devices
    and communication technologies. This association helps the devices and the other
    objects transfer the information gathered to destined places all over the network.
    Precision agriculture, therefore, aims to optimize and improve agricultural processes
    to ensure optimum production with reliable, fast, and distributed dimensions thus
    providing growers a detailed overview of the ongoing scenarios in the cultivation
    stretches. This practice is followed to reduce energy consumption. The major areas
    where IoT can leave an everlasting impression are climate monitoring [8], data
    analytics [9], early disease detection [10], crop counting [11], smart irrigation
    [12], etc. With the spread of a network of devices, a communication channel can
    be established between the farmers, fields, and experts. By developing IoT based
    models, the field conditions can be monitored remotely on regular time intervals
    without any human intervention and after analyzing the data favorable and efficient
    decisions can be taken accordingly. This will help to ensure both field and market
    safety and security to the farmer. Also, with early monitoring of crops, disease
    detection can be done and thus preventive measures can be taken to save the crop
    beforehand. For producers it will also help in the analysis of consumer demands.
    Whether the product will be able to meet market expectations, thus creating an
    intelligent decision driven farming. An analysis of different existing articles
    addressing the research and development of precision agriculture is presented
    in TABLE 2. TABLE 2 Alaysis of Various Papers in the Field of Precison Agricuture
    for the Current Study In this article based on research gaps and findings obtained
    from articles analyzed below, a systematic survey is done. Therefore in this study,
    the most prominent problems of the agriculture sector, and solutions provided
    by modern systems are addressed and discussed in detail. The major contributions
    of this study are as follows: A comprehensive survey of the architectural, conceptual,
    and implementation details of IoT models adopted for Precision Agriculture has
    been carried out. Various IoT hardware platforms and other associated devices
    like sensors, accumulators, etc. along with their role in agriculture have been
    discussed in brief. Various IoT OS supported for Precision Agriculture have been
    discussed. The significance and key differences of MIoT in agriculture have been
    discussed along with related studies. Studies limited to a specific domain has
    been merged together for clear mapping of the domain. Sensors and their role in
    agriculture is discussed. Various projects/ start-up’s started all over the globe
    for tacking agricultural problems and providing intelligent and sustainable solutions
    to farmers have also been discussed. Functional concepts like limitations, improvements,
    future works and applications are discussed separately. The rest of the paper
    has been organized as in Section 2 various search and source methods used for
    the selections of relevant articles has been introduced, in Section 3 to get into
    the deep insight of the various concepts, theories, and devices related to the
    implementation of Internet of Things has been discussed, followed by Section 4
    which gives the various related studies concerning different applications of Internet
    of Things in Agriculture, findings like challenges, limitations, improvements,
    future work, etc. with a short description of our proposed work has been given
    in Section 5, and finally, at last, the article ends with a conclusion. Table
    3 gives the detailed nomenclature used throughout this article. TABLE 3 Nomenclature
    SECTION II. Sources and Search Methods The research methodology consists of going
    through articles based on the contribution of IoT and its related technologies
    for the advancement and development of the agriculture filed. For designing the
    overall structure of this article, the data and selected studies are chosen strictly
    based on a time frame. Most of the articles taken for study are sorted from 2015
    to 2020. This time frame is chosen to visualize and understand the current impact
    of IoT in the field. In TABLE 4, a summary of the resources from where the papers
    have been selected is presented. TABLE 4 Summary of the E-Reserves for Obtaining
    the Related Research Articles Given the objective of this article, research has
    been conducted thoroughly by examining the existing literature work related to
    the subject. For developing a firm foundation, the articles containing the origin
    of IoT, alongside current standings, recent trends, and technologies, were considered
    for a study concerning their contributions to the field of agriculture. By reviewing
    the existing literature, a sustainable framework has been developed to overcome
    the existing challenges in the field. The keywords mainly used to identify the
    literature included Precision Agriculture, Agriculture, Plant Monitoring, Internet
    of Things, Smart Agriculture, Smart Farming, Irrigation, Plant Pathology, Wireless
    Sensor Networks, etc. The eight-year trends of the different terminologies and
    their search significance over the years have been extracted from Google and are
    presented in Fig. 2 and Fig. 3. FIGURE 2. Worldwide distribution of IoT of the
    past eight years [19]. Show All FIGURE 3. Precision Agriculture distribution worldwide
    of the past eight years [19]. Show All From the figures, it can be seen that the
    frequency of search or usage of these two terms is somewhat stable over the past
    eight years. An average, 80% of people talk and search about these topics for
    study and other related purposes, thus establishing the growing interest worldwide
    in this area. So for a better understanding, in the next section, the various
    terminologies related to the Internet of things concepts and devise have been
    discussed. SECTION III. Introduction to the Internet of Things (IoT) Concepts
    and Theories Inspired from the technology of the internet to connect the whole
    world, the Internet of Things constitutes of things possessing unique identities
    and are connected to the internet. A cosmos of sensors, actuators, appliances,
    and other devices connected with each over the internet, results in making the
    Internet of Things (IoT). The scope of IoT is not just limited to only connecting
    things but to allow them to communicate and exchange data. Based on the Electronic
    Devices and Network Annex-IEA-4E (EDNA), by 2020 the number of connected devices
    will rise to 50 billion, thus resulting in the generation of high revenue. IoT
    works in a layered manner depending upon the problem it is addressing. Therefore,
    it can be define that IoT possesses a layered architecture [20]. All these layers
    combined are called the IoT functional blocks. Apart from the functional blocks,
    various communication models that aid the smooth working of an IoT model are a
    request-response model, publish-subscribe, push-pull, and exclusive pair [20].
    Fig. 4 represents the reference architecture of IoT in agriculture and includes
    the following layers: device/physical layer, network layer, middleware layer,
    service layer, analytics layer, and end-user layer. The layered architecture includes
    all the hardware devices, facilities, equipment, internet, communication technologies,
    protocols, and data analytic algorithms. How the layers work along with each other
    is described below: Perception Layer: Also called physical or the device layer,
    this layer lies at the bottom of the architecture and constitutes of sensors,
    actuators, microcontrollers, gateways, routers, switches, hubs, etc. The main
    role of this layer is, how efficiently the sensing devices and the other equipment’s
    can work together to gather data. The microcontroller device acts as a controller
    as it performs all the networking ifunctionalities. The microcontroller also acts
    as a network regulating body as it regulates the networks, such that the sensors
    and other devices can collect data. The main aim of this layer is to capture data
    and transfer it to the other layer i.e., the higher abstraction layers. In terms
    of agriculture, the devices in the physical layer gather, soil, water, pH value,
    humidity, leaf wetness, and other data parameters. Also, the topology in which
    the devices are placed plays a major role in power consumption and efficient data
    collection in this layer. Network Layer: It comprises of internet and other communication
    technologies. The main aim of this layer is, how to achieve better communication
    in the platform. In terms of agriculture, the design of this layer plays an important
    role in a framework due to the selection of suitable communication technologies
    relevant to field size or the test bed size. LTE, CDMA, GSM, Wi-Fi, ZigBee, LoRa,
    NFC, UWB Bluetooth, and RIFD are some of the communication technologies used for
    agriculture purposes. ZigBee, LoRa, and NFC are the most used communication technologies
    employed depending upon the problem and the area to be addressed in the agro domain.
    NFC and Bluetooth are the most suitable for the greenhouses. Various protocols
    like HTTP, WWW, and SMTP serve for efficient communication in the agricultural
    scenarios. Middleware Layer: This layer in IoT architecture is accountable for
    device management, context awareness, interoperability, portability, and security-related
    responsibilities. In terms of agriculture scenarios, HYDRA, SMEPP act as best
    middleware due to their context-aware functionalities. Service Layer: Dealing
    with agricultural problems, cloud-assisted service layer in IoT layered architecture
    plays a prominent role in providing cloud storage and Software-as-a-Service (SaaS).
    To facilitate the function of sensing, actuation, and other activities, this layer
    focuses on some main areas or domains such as monitoring, detection, control,
    decision making, recognition, etc. The service layer offers services like device
    monitoring, control, discovery, and data publishing services. Analytics Layer:
    The layer is responsible for the processing and analysis of data. This layer works
    as a consortium of two steps- 1) Data ingestion, is the step that performs storage,
    cleansing, and streaming of data and the 2) Data analytics, which performs data
    reporting, mining, and learning. In the analytics layer various machine learning
    tools, data analytic algorithms are employed to give early predictive decisions
    for measuring the crop yield, crop growth, disease detection, etc. These decisions
    can enhance farm monitoring capacity. The predictive decisions can help in the
    design of better decision support systems. End-User Layer: Being the topmost layer
    of the model, it serves the consumer or the user. To provide the interface to
    the users to control and monitor their model, this layer allows them to view the
    system status, analyze or process the data. In agro models, the farmer is the
    end-user. This layer provides a user-friendly experience and platform to the farmers.
    The services or applications in this layer are designed based on the behavioral
    study and pattern analysis of the user. Various intelligent approaches and data
    analytic studies are employed to understand the behavior of the users, as they
    come with different needs and offer a lot of diversity. Social media, Cloud computing,
    Mobile messaging are the platforms used to provide services to users, experts,
    and industries. Through this layer, the whole IoT based platform can be monitored,
    controlled, and run. The services generated from this layer are mostly the link
    between the user and the systems/platforms. FIGURE 4. A layered ecosystem/architecture
    of Agro-IoT. Show All A. Multimedia Internet of Things (MIoT) in Agriculture Based
    on the working, nature of deployment, and the subject IoT concepts are used to
    address, traditional IoT is differentiated into various forms such as IoMT, MIoT,
    IIoT, etc. Without the inclusion of these concepts, IoT systems cannot successfully
    realize the concept of ubiquitous computing. In these paradigms, the interaction
    and cooperation between the heterogeneous devices is facilitated. Due to the increase
    in the number, diversity of devices and data with time, these concepts have become
    more functional and prominent to develop models and techniques for coming challenges
    and reflect the possibilities enabled in them. All these concepts have the same
    main character of availability, intelligence, and devices but they only differ
    in their due course of action i.e., their general usage. Being an allied branch
    or extension of IoT, MIoT, include smart objects that are usually resource-constrained,
    in terms of memory, energy, and processing power. Due to the progressive reduction
    in size and cost of production of these devices, MIoT models are expected to be
    developed and deployed on a large scale. Generally, the sensors of these models
    are usually designed to be battery operated or solar power operated. Due to the
    large data sensing and analysis, these devices require high computational power.
    Mostly, the multimedia data includes audio, video, and image data, which possess
    unstructured features and is difficult to transmit and analyze on a computationally
    scarce network and low bandwidth conditions. Multimedia data shows different behavior
    compared to the scalar data due to its computational complexity and network topology
    bottlenecks to the Quality of Service (QoS). A lot of work has been done in IoT
    and its allied fields to realize the concept of heterogeneous, low-level data
    transmission, and communication. In agricultural frameworks, the data is mostly
    in the visual form e.g., pest images, plant disease images, field images, etc.
    The characteristic difference in scalar and multimedia data is shown in Fig. 5.
    FIGURE 5. Key characteristic differences between IoT and MIoT data [25]. Show
    All Depending upon the various parameters there are key differences between IoT
    and MIoT and they are discussed as: The IoT systems work mostly on non-heterogeneous
    devices while the MIoT functions well in case of heterogeneity. IoT data is mostly
    scalar, however, MIoT considers the multimedia data. Traditional IoT networks
    does not take into consideration the concept QoS while transmission and communication
    whereas in case of MIoT, QoS and QoE play a major role as the prime parameters.
    IoT can function well over low bandwidth channels whereas MIoT networks are in
    demand of high bandwidth due to bulky data. Node operation is predefined in IoT
    whereas in MIoT the node operation is adaptive in nature. Various authors have
    worked on the implementation of concepts of MIoT for agriculture. Zhang et al.
    [21], worked on the concept of preserving the concept of data confidentiality
    while realizing the challenge of low-cost data acquisition. A measurement matrix
    under the control of chaos and random subsampling is employed to capture the ruptured
    image signals. Then these sampled sub-images are assembled to form a big master
    image and then encrypted based on android transform and single value diffusion.
    Correlation, histogram, keyspace, robustness, real-time, and entropy analysis
    are performed to understand and realize the concept of low-level transmission.
    Rani et al. [22], worked on the concept of bridging the gap between the scalar
    and multimedia data, and for this, they developed an IoMT cross-layer protocol.
    This protocol considered cross-communication between the physical, data link,
    and routing layers. The main objective of this work was to achieve energy-efficient
    communication with less computational time complexity. An optimal mathematical
    model was developed to study the cross-layer behavior in all the three layers,
    therefore selecting the efficient one. A comparative study was conducted on two
    parameters like delay and distance. Usman et al. [23], proposed a multilayer framework
    based on multilevel edge computing architecture to manage, and preserve the privacy
    of end devices from external attacks. Authors mainly focused on the three major
    challenges i.e., node management, privacy-preserving, and network protection.
    The proposed architecture is divided into three layers with the first layer comprising
    of underlying network partitioned into multiple clusters to manage end-devices
    and Level-One Edge Devices (LOEDs). In the second layer, the LOEDs apply an efficient
    aggregation technique to reduce the volumes of generated data and preserve the
    privacy of end-devices. Local differential privacy-based technique is applied
    to protect the privacy of sensitive information in aggregated data. In the last
    layer, the mobile sinks are registered with a level-two edge device via a handshaking
    mechanism to protect the underlying network from external threats. Floris and
    Atzori [24], addressed the issue of evaluation of Quality of Experience (QoE)
    for IoT applications where mostly multimedia data is involved. For designing a
    layered architecture, authors first tried to analyze the QoE parameters or factors
    with applications in the relevant scenarios. Then a layered multimedia IoT architecture
    was proposed for QoE analysis by combing each of the analytic and contributing
    factors. Zikria et al. [25], presented a brief overview of the MIoT along with
    its challenges, solutions and future opportunities. The authors discussed the
    data differences between the traditional IoT and MIoT, along with the role of
    communication technologies. The demand for realizing the dream of MIoT and its
    bottlenecks were also discussed. The challenge of data collection and its impact
    over the network traffic is also discussed along with the methodologies developed
    to solve it. Nauman et al. [26], presented a comprehensive survey on the multimedia
    internet of things. Authors discussed the existing role of MIoT in concern with
    various fields like medical, agriculture, automation, and industry, etc. The importance
    of QoE and QoS for multimedia transmission over IoT channels is also discussed.
    A better need for routing and Physical-Medium Access Control (PHY-MAC) protocols
    for M-IoT was also discussed. A potential discussion on open research issues related
    to multimedia communication in IoT was presented. Alsamhi et al. [27], presented
    a survey on the role of green IoT in greener and smart cities. The authors focused
    on how the environment pollution can be controlled along with other parameters
    for making living more sustainable and green with the aid of IoT concepts. AlSkaif
    et al. [28], presented a survey on the energy efficiency of MAC protocols in low
    data rate wireless multimedia sensors. The conflicting goals of WMSN were also
    discussed. Role and challenges of multimedia data were also discussed. A focused
    analysis was performed on network parameter constraints and what techniques are
    employed to solve them. A comparison of the energy consumption of MAC protocols
    in four selected application scenarios related to smart cities and environment
    monitoring was also presented. Libo et al. [29], worked on how with the use of
    multimedia data in the form of images can be employed to detect the plant diseases.
    Rape diseases were studied as a case study. Authors also discussed the challenges
    and bottlenecks faced for the transfer of multimedia data over low bandwidth channels.
    With machine intelligence, authors also proposed a diagnostic procedure via which
    the data can be transferred over wireless multimedia sensors networks. Psannis
    et al. [30], proposed a technique for the transfer of advanced media-based smart
    big data via intelligent systems. Authors in their work addressed the problem
    of the rapid rise of devices and heterogeneity. An encoding algorithm with HVEC
    standard for performance evaluation was proposed to transfer the data intelligently.
    B. Hardware Platforms for IoT The hardware platform for IoT comprises a set of
    compatible hardware capable of running certain software. The main components of
    a hardware platform are machine language, sensors, wireless devices, programs,
    and processors, protocols, etc. The processor in a hardware platform determines
    how much fast a framework can work. To design certain new methodologies in IoT,
    various hardware platforms supported are elaborated as: 1) Raspberry Pi It is
    a series of single-board computers developed in the UK by Raspberry foundation.
    There are various families of raspberry i.e., Raspberry Pi 1, Raspberry Pi 2,
    Raspberry Pi 3, Raspberry Pi Zero, Raspberry Pi 4. All these families have different
    models. The Broadcom processor is used in most of the boards. It acts more like
    a computer system and can do multitasking [31]. 2) Arduino Uno Developed by Arduino.cc,
    it is a microcontroller board and is based on the ATMega32 processor. Arduino
    Uno possessing a USB port is a very valuable addition to the family of microcontrollers.
    Various versions of Arduino like Arduino Uno, Arduino Due, Arduino Leonardo, and
    Arduino Mega are present in the market. Out of these the most common versions
    are Arduino Uno and Arduino Mega [32]. 3) Node MCU It is an open-source IoT platform.
    It generally refers to firmware rather than the development kits. It is a low-cost
    open-source kit/module developed for the ESP8266 Wi-Fi chip. It is developed in
    the Arduino IDE environment [33]. 4) Beaglebone Developed by Texas Instruments,
    it is a low-cost open-source single-board computer. Its size measures 75 by 75
    mm and possesses all the functionality of a basic computer. It requires 2W of
    power or a 5V separate power and can work smoothly without any cooling or sinks
    [34], [35]. 5) Banana Pi It is a low-cost credit-card-sized single-board computer
    developed by a Chinese company Shenzhen SINOVOIP Co. Ltd. The hardware design
    is hugely influenced by Raspberry Pi. It is compatible with Raspberry Pi boards
    as well. It can be developed both on Android and Linux [36]. The various hardware
    platforms of IoT with their functional specifications are given in TABLE 5. TABLE
    5 Hardware Platforms of IoT and Their Specifications C. IoT Operating System (IoT
    OS) for Agriculture IoT operating system (IoT OS) is an operating system designed
    to perform within the constraints particular to Internet of Things devices. IoT
    OS are designed and developed in such a way that it can function under the restrictions
    of memory, size, power and processing capability. The main aim of IoT OS is to
    enable successful data transfer over the network via internet. The IoT OS for
    a particular framework is not chosen at random. Certain parameters such as footprint,
    scalability, portability, modularity, connectivity, and reliability are taken
    into consideration. As per the requirement of agriculture, a huge number of devices
    are connected having different features and also the devices have to withstand
    the different environments, the OS then to be chosen must be scalable, cost-efficient,
    and reliable. Various studies have been put forward for the role of IoT OS in
    network management and overall communication. Javed et al. [37], provided a detailed
    reviewed comparison of the operating systems designed for IoT devices based on
    their architecture, scheduling methods, networking technologies, programming models,
    power, and memory management methods, along with other features required for IoT
    OS applications. Musaddiq et al. [38], studied the role of small IoTOS in powering
    the scarce network devices. Authors also put light on the energy consumption of
    these devices. A detailed discussion on IoT devices and resource management is
    provided and some state of art IoT OSs such as Contiki, TinyOS, and FreeRTOS are
    also investigated. Baccelli et al. [39], a comprehensive review of RIOT is provided.
    The key components highlighted in this study are the kernel, hardware abstraction,
    software modularity for various configurations. The authors also discussed the
    operational aspects like system boot-up, timers, power management, and networking
    along with the relevant APIs. Zikria et al. [40], proposed a study for the management,
    challenges, and opportunities of IoT OS in managing IoT systems. The authors discussed
    the issue of interoperability, protocol functionalities to support heterogeneous
    deployment scenarios. Supported hardware and future research trends are also discussed.
    Ain et al. [41], proposed an efficient and flexible decision-making system for
    maintaining user thermal comfort with the help of intelligent sensors. Fuzzy based
    approach along with RIOT OS was developed to tackle the problem of fluctuation
    and adjustment. Results show that the proposed approach can perform 28% better
    than the existing approaches in terms of energy efficiency. Stergiou et al. [42],
    studied the transfer of metadata in the IoT networks. Authors discussed the techniques
    and open tools such as CC analyzers and simulators which can provide intelligent
    metadata transfer over a network. The experimentation was performed on CloudSim
    and Cooja emulator of Contiki OS for the testing of a single network segment.
    From the experimentation, it was found that no duplicate packet transfer occurred
    which is a good sign for multimedia data transmission. The various IoT OS with
    their functional specifications are presented in TABLE 6. TABLE 6 IoT OS Platforms
    in Agriculture and Their Specifications D. Sensors and Their Role in Agriculture
    Sensors are the devices, modules, machines or subsystems capable of detecting
    the changes or events in the environment. They also send signals back to the receiver
    end. Mostly the sensors are used with other electronics. A sensors sensitivity
    usually indicates how much change in sensor output occurs with respect to the
    change in the input quantity measurements. Most sensors possess the linear transfer
    function. The sensitivity of a sensor is defined as the ratio between the output
    signal and the measured property. The resolution of a sensor is the smallest change
    it can detect in the quantity it is measuring. In the area of agriculture, demand
    of technological solutions with high aim in rising production and quality is increasing
    day by day. Also the solutions are required which provide optimal analysis and
    sustainable methods for the field development with reduced cost and time. To sustain
    such challenges, sensor- based technologies have proven to be of much help to
    tackle the above issues and challenges. Precision agriculture is an emerging area
    where sensor based technologies are playing a major role. Since the sensors are
    a major data collection agents, they play a dynamic role in agriculture. Also,
    it is very difficult to collect the data from an agricultural field due to the
    undulating field conditions that keep on changing over time. Sensors are selected
    or designed according the problem to be addressed or needs identified by the farmers.
    Agriculturalists generally use sensors to sense the soil conditions, humidity,
    crop conditions, minerals, pH value, water levels, and sunlight, etc. The nature
    and the characteristics of the component which needs to be sensed also plays a
    major role in the development of a sensing device. With the development of technology,
    machinery and easy-to-use microcontroller platforms, the usage of sensors has
    expanded beyond the traditional fields of measurement i.e., temperature, pressure
    and flow. However, the analog sensors such as potentiometers and force sensing
    resistors are still widely in use. Pajares et al. [54], discussed the sensors
    in agriculture and forestry. In the article, various related works of the sensors
    performed by different authors in the same domain were presented. The role and
    importance of the component or substance which needs to be sensed was discussed
    along with their characteristics and specifications. The major areas focused by
    authors were soil analysis, seed growth, weed detection, forest stands and reflectance,
    machinery for effective treatments, microorganisms, pest control, seedling breeding,
    growing, state of health, positioning, navigation, safety, detection and classification.
    Zhu et al. [55], showed that LIDAR, IMU, and Encoder (x2) can be used for designing
    a prototype vehicle for the agricultural domain. The authors also discussed how
    these sensors can be used for the development and usage of that prototype in case
    of undulating surfaces and rough terrains. A complete review of the wireless sensors
    and the network applications used in agriculture is provided. The authors also
    addressed the importance of sensors in the field of agriculture. Along with the
    sensors, the communication technologies that support sensor communications are
    also mentioned by Rehman et al. [56]. The sensors used in the medical and agricultural
    fields have also been discussed. In the case of the agricultural field, the various
    conditions and circumstances affecting the data collection from sensors are addressed.
    The various types of sensors and their platforms used by different authors in
    their work are also included by Chokkareddy et al. [57]. Plageras et al. [58],
    used efficient IoT based sensor and big data analytics for secure collection of
    data and communication over a channel. In the study, smart housing or building
    was taken as case study, and the secure data collection with the sensors was performed
    and analyzed. The behavior of various sensors for data collection in different
    scenarios in terms of IoT and cloud computing was studied by Stergiou et al. [59].
    The secure communication among devices was also studied along with performance
    bottlenecks and challenges. The various sensors and their use in agriculture is
    discussed below: 1) Level Sensors They measure the substance of liquid in a cast.
    The cast can be any agricultural field, pond, water tank, etc. They measure data
    in two methodologies 1) Point level measurements: indicate only whether the constituent
    or level measured is above or below the sensing point or threshold. 2) Continuous
    measurements: specific range measurements and exact substance amount determination
    are performed by these sensors. In agricultural fields, the water level sensors,
    humidity sensors, and moisture sensors are used to measure the water content levels
    in a field. The point level sensors are used when the water content in the cast
    i.e., soil or testbed is very less i.e. in dry and arid areas, whereas the continuous
    level sensors are feasible for semi-arid locations. Some of the ultrasonic level
    sensors are also used in water treatment plants. Blank et al. [60], designed a
    low-level senor based fusion application for agricultural machinery design. 2)
    Temperature Sensor Temperature sensors measure the temperature of the environment
    or surroundings. They are of different types i.e. thermistors, thermocouples,
    resistance temperature detectors, infrared sensors, semiconductor sensors. In
    agriculture they measure the temperature variants in a field. Mahan et al. [61]
    designed an optimal temperature based field monitoring system by using a low-cost
    infrared sensor. 3) Proximity Sensors Detect the presence of nearby objects without
    any physical intervention. The sensor works by emitting an electromagnetic beam
    in the field and looks for any alterations in the signal. These are mainly employed
    in agricultural cattle grazing, counting of fruits, etc. Kim et al. [62] used
    a capacitive proximity sensor to optimize the harvest yield of fields. 4) Infrared
    Sensors Senses the changes in the environment by emitting infrared rays. They
    work in two approaches i.e., active and passive. An active IR sensor can both
    emit and detect the radiations and constitute a light-emitting diode and a receiver.
    The passive IR sensors can only detect the radiation and possess only a LED. In
    agriculture field infrared sensors can be employed to detect the presence of rodents
    in the orchards, count the number of plants or trees in the field, capturing satellite
    images of the field. Allred et al. [63], used IR sensor-based satellite imagery
    to map the findings and results of UAV to chart agricultural drainage systems.
    5) Touch Sensors Also known as tactile sensors, work on sensing the touch. They
    are low-cost sensors. In the agriculture field they can be used for the detection
    of intrusions in the field. Depending on the target and the range, there are different
    types of sensors, the same are discussed in Fig. 6 and TABLE 7 below: TABLE 7
    Sensors Based on Their Fields of Application FIGURE 6. Sensors and their types.
    Show All SECTION IV. Related Work The advancement and role of the Internet of
    Things in precision agriculture along with the related areas where research is
    being conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections. Various studies are performed and put forward by various
    academicians and authors concerning the evolution of agriculture relating to the
    incubation of the concepts of the Internet of Things. Kim et al. [64], reviewed
    different articles related to the induction of unmanned aerial vehicles in agriculture.
    The authors highlighted the recent trends, controls, perspectives, and platforms
    of UAV for agriculture. The study focused on what are the different platforms
    used for UAV and how those platforms can be designed. The hardware components
    related to the design of UAVs were also discussed. Sensor types compatible with
    platforms such as fixed-wing, helicopter, quadcopter, etc. were also discussed.
    A study on critical technologies for communication, modeling, and control was
    also presented. Various applications of UAVs in crop monitoring, spraying, and
    mapping, etc. were also presented. The authors concluded their study by providing
    the data on the latest technology trends and applications of UAVs in agriculture.
    Ayaz et al. [65], studied the latest trends and technologies in the field of agriculture.
    The potential sensors, IoT devices, communication techniques, used for soil, crop
    irrigation, insect, pest analysis were studied and discussed. Also, how this technology
    is redefining the agriculture system and boosting farmers to work, is portrayed.
    Authors studied the recent developments of IoT and how it is helping in providing
    the solutions while designing an IoT system for agriculture, what strategies and
    policies need to be considered. The advanced agricultural practices such as greenhouses,
    vertical farming, hydroponic farming, and phenotyping are also explained. All
    the crop stages and potential challenges are also discussed. Farooq et al. [66],
    presented many aspects of IoT in agriculture. Authors discussed all the recent
    technologies associated with IoT along with big data analytics for the development
    of precision agriculture systems. Various network topologies, architectures, layers,
    and protocols are also presented. In context to the development of a smart farm,
    all the major components and relevant technologies were discussed. Also, the regulations,
    standardizations, and policies used by several countries to standardize IoT methods
    for agriculture have been discussed. Elijah et al. [67], gave an overview of IoT
    and data analytics technologies and practices in agriculture. The authors divided
    their study into four sections i.e., communication technology, internet, data
    storage, technology. The authors also provided an analysis and data on how the
    aforementioned sections can be employed for dealing with the diminishing agricultural
    resources. The pros and cons of various technologies such as cloud computing,
    WSN, radio frequency identification, middleware systems, etc. to their application
    in the agriculture field are also discussed. Studies on how these technologies
    can be used to develop an IoT ecosystem, with technical and business scenarios
    were also presented. Misra et al. [68], discussed the concepts and role of IoT,
    AI and big data in the field of agriculture. In the review, focus was laid on
    green- house monitoring, disease detection, usage UAV machines and drones agriculture
    and supply chain modernization, social media in food industry, food quality assessment
    and modernization for food traceability. Thakur et al. [69], reviewed articles
    of repute in the context of the employability of WSN in agriculture. The authors
    highlighted the different communication technologies and WSN technologies adopted
    for precision agriculture. The authors also discussed various sensors and their
    role in agriculture. The influence of various techniques for designing the models
    is also discussed at length. Damos [70], presented a review on the pest control
    in precision agriculture. The author discussed the various computer-aided technologies
    employed for forecasting and designing decision support systems. The challenges
    and constraints of designing the decision support system were highlighted. The
    most available and published data present online in terms of pest management was
    also discussed. A differentiation between the documented and existing decision
    support systems was highlighted. The advancement and role of the internet of things
    in precision agriculture along with the related areas where research is being
    conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections and are discussed as follows: A. IoT in Farm Management
    Farm management refers to the construction and implementation of decisions for
    obtaining the maximum production and profit via organizational operation of decisions.
    This area is most benefitted by automation and the implementation of new technological
    methods. With farm management agricultural practices are made informative by evaluation
    and comparison with the other developed approaches and methods. Diedrichs et al.
    [71], with the aid of machine learning and IoT sensing devices, predicted the
    occurrence of frost events. Authors designed their system based on three layers
    i.e., a group of internet-enabled devices for water data collection. The authors
    augmented the data using the synthetic minority oversampling technique due to
    its capability of reducing the occurrence of errors with the ML approaches. The
    humidity and temperature sensors were employed to collect data from five meteorological
    stations of the Mendoza Province of Argentina. For each station, the existing
    sensor data spanning from a period 2001 to 2016 was taken as a reference to collect
    the daily data. The data was divided into two sets i.e., locally available is
    the config-local and the one available globally is the config-all. Bayesian Networks
    were employed along with SMOTE and recursive portioning, to train the system.
    Jawad et al. [72], designed a wireless power transfer technology based on a drone
    charging system for smart agriculture. The authors used the concepts of magnetic
    resonator coupling and sleep/active modes of charge transfer system for designing
    the model. Authors mainly focused on how to charge wirelessly the drones and other
    equipment employed in agricultural field monitoring. The magnetic resonant coupling
    technique was considered due to its capability of high power transfer and efficiency.
    In the experimentation, authors found that the FSC coil with 150 coil turns in
    the transmitter circuit and the MTC comprising of 60 coil turns in the receiver
    (i.e. drone) accomplish the maximum transfer power and efficiency. For finding
    the accurate efficiency, the model was tested based on different load, and how
    to load misalignment changes the model behavior was also noted. Drone flight time
    was also taken into consideration and was estimated based on the adopted battery
    capacity and payload of the drone. Tseng et al. [73], proposed an intelligent
    IoT based platform for farm management. The authors took the data based on different
    plants i.e., beans, spinach, celery via sensors, and used 3D normalization on
    that data to extract the optimal/useful data. The average and variance were moved
    to obtain user data without making any visible changes in the actual data. Farmer’s
    behavior was analyzed for the application of pesticides and fertilizers. For the
    platform development SIM5320E, IoT Development Board is used along with the BH1750
    illumination sensor and BME280 temperature and moisture sensor. Bacco et al. [74],
    designed a model based on air-ground UAV communications for smart farming. Authors
    empirically and analytically developed a real test-bed implementation of IEEE
    802.15.4 based communication between unmanned aerial vehicle and ground sensors.
    The focus was laid on how to transfer data between sensors and other devices present
    on the ground in an optimized manner to ensure fewer transmission losses. From
    the experimentation, and result analysis authors found the Gilbert-Elliot model
    to be suitable to approximate the packet loss in the link at low transmission
    speeds. The authors used approximately 80,000 datasets from the testbed. Ahmed
    et al. [75], based on the concepts of fog computing and Wi-Fi-based long-distance
    networks proposed a system for smart monitoring. In comparison to the existing
    traditional models, a scalable and flexible model was designed for monitoring
    and controlling agro farms in rural areas. Authors introduced a WiLD network and
    fog computing in the existing WSN-based solutions to cover long ranges with fewer
    delays. A cross-layer based MAC and routing solution for sensing and actuating
    were proposed to reduce the network latency. Throughput, coverage range, and network
    latency of the network structure were analyzed. Liu et al. [76], by hybridizing
    the concepts of IoT, cloud computing, and data mining proposed an integrated framework
    for the agricultural field. China was considered as the territory to design and
    devise mechanisms to enhance modern agriculture as compared to the conventional
    one. Quality, safety, management, and pollution are were taken into consideration
    while designing the model. NoSql database, DynamoDB, relational database Oracle,
    and file object storage Amazon S3, were employed to provide the hybrid data storage
    design. Bai et al. [77], due to the issue of frequently changing environmental
    conditions addressed the issue of estimation and control in the greenhouse. The
    authors studied how to collaboratively deploy WSNs and actuator schemes for agriculture.
    Sensor nodes were used to conduct a local estimation with Kalman filters to enhance
    the stability and transmission of data ensuring energy optimization. Using the
    concepts of collective clustering and mutual effect, the actuator node based scheme
    is designed for the improvement of estimation speed and conversion accuracy. Parameter
    optimization is achieved through fuzzy neural networks along with the PID control
    algorithm. Jinbo et al. [78], performed research on developing a platform for
    the monitoring of a field with agricultural modernization. A system named DEMO
    was proposed by using the SpringMVC framework, MyBatis, Spring Data DynamoDB Stored
    Procedure, Paho, and other related technologies grounded on the J2EE platform.
    Open-source elements such as raspberry, IoT gateway integrated with the ZigBee
    module were used for the development of the platform and were chosen due to their
    stable and cost-efficient properties. The proposed system is capable of massive
    data processing and analysis for agricultural monitoring. RESTful interface service
    system developed on a cloud platform, ExtJs client technology, and WeChat were
    applied to develop the Demo system of an application layer. Mukherjee et al. [79],
    worked on the challenges of a decentralized and heterogeneous UAV swarm deployment.
    The work is focused on how to design and deploy a UAV in resource-constrained,
    harsh, and challenging environments. Swarm edge due to its heterogeneous nature
    and unequal data generation within its member’s results in under-utilization of
    the available computational resources. To solve this issue, the authors proposed
    a Nash bargaining-based weighted intra edge processing offload scheme which can
    reduce the problem of heavy processing in some swarm members. The proposed method
    achieves better scalability and reduced processing delays. Chen et al. [80], developed
    an IoT based inexpensive platform named ‘AgriTalk’ for precision soil farming.
    Turmeric plant was considered for cultivation and experiments were conducted to
    enhance its growth and production. Authors employed AgriTalk in developing several
    other IoT based models for the fields of Mountain Bao in Taiwan. For the study
    authors grew turmeric in three fields. The proposed model is capable of addressing
    dynamic changes in the field conditions for plants grown via in-soil cultivation.
    Automated devices like sensors, actuators with desired farming intelligence were
    employed to design the model. Manual delays for automatic control and switching
    over long distances were also addressed. From experim-entation it was found that
    the curcumin concentration in turmeric leaves after six months was elevated to
    6685.6 μM as compared to 72.1 μM thus witnessing a fivefold increase. Lopez et
    al. [81], proposed a smart system for estimation of soil parameters using an autonomous
    wireless sensor network. Phosphorus content in the soil was measured. For power
    optimization and maintaining a balance between change rate phenomena of soil throughout
    the day for phosphorous estimation, authors developed a dynamic power management
    approach. DPM was tested on both the circuit level and the system level. ANN was
    used to find the significant correlations between the soil parameters such as
    electrical conductivity, phosphorous, temperature, and humidity. Also, energy
    harvesting with the help of IoT and cloud services is proposed. Chen and Yang
    [82], provided a detailed analysis of how efficiently the systems can be developed
    for agriculture based on the techniques of data visualization, clustering, etc.
    The authors studied the significance of various parameters in the same environment
    and effects. For the promotion of efficient development of agriculture, the authors
    proved that data visualization and cluster analysis pave a way for finding the
    key technologies to be applied in modern agriculture. For time and cost optimization,
    functions such as sensing, monitoring, identification, transmission, and feedback
    can be realized using IOT platforms and they can serve as an impetus for intelligent
    agriculture. To test and develop their methodology, authors took the agriculture
    situation in the Jhinsa river basin which lies in the upper reaches of the Yangtze
    River as a testbed. This area has become the most abundant area of biological
    communities in Eurasia. For the study, the authors collected precipitation and
    temperature data. Since data was large, k-means clustering is used to analyze
    the data. Leng et al. [83], presented a study for the application of IoT in agricultural
    products supply chain management. Authors discussed in length what to take into
    consideration, while designing a structural model for the supply chain management.
    RIFD technology was considered as the key constituent for designing the model.
    Pereira et al. [84], based on the concepts of IoT developed an instrument capable
    of performing environment monitoring in a poultry farm. The authors focused on
    designing a cost efficient prototype for the poultry monitoring which provides
    affordable benefits compared to the commercial products available in the market.
    DHT22 sensors were used to collect air pressure and temperature details and CPU
    such as Wemos Mini D1with chipset ESP-8266EXwith standard Wi-Fi 2.4 Ghz connectivity
    were used to calibrate the whole model. Singh et al. [85], developed a cloud based
    autonomic system for delivering agriculture as a service via web and mobile based
    applications. For data collection IoT and other devices were used for communication
    and coordination. Fuzzy logic was used to automatically analyze agriculture. An
    architecture named Agri-info was developed to provide user services. Kolipaka
    [86], proposed a predictive analysis using cross media references for precision
    farming. Authors focused on the usage of sensors and MEMS integrated IoT for precision
    farming. The crop growth parameters such as soil state, water, weed state, crop
    quality and seed quality were also discussed. ML and big data approaches were
    applied to perform predictive analysis and thus finding method to provide optimal
    solutions to farmers. Further based upon the certain characteristics we have tabularized
    the major findings in TABLE 8. TABLE 8 Summary of Developed Methods for Farm Management
    B. IoT in Irrigation Irrigation is the method of application of controlled water
    to the farming fields, at needed intervals. Irrigation has been a constant area
    where a lot of energy, money, and labor is invested in the case of farming. Detection
    and knowledge of water level can reduce the cost of production by half. For increasing
    crop yield, smart irrigation management is essential. Various optimized and precise
    methods have been developed by various academicians. Klein et al. [96], with the
    help of satellite images, worked on the implementation of closed-loop irrigation.
    The authors designed a real-time water requirement system, which can optimize
    water delivery for 140 cells located in four hectares of land. Vegetative indexes
    were calculated for analyzing the total water consumption and how via loops this
    facility can be automated. Through this study and experimentation it was found
    that with the integration of closed-loop strategy and advanced water analysis,
    the overall water consumption efficiency can be improved. Alahi et al. [97], extended
    research to design and develop a smart nitrate monitoring system for the monitoring
    nitrate content in the surface and groundwater. The authors proposed a portable
    sensing system with the help of a planar inter-digital sensor, associated electronics,
    instrumentation, and electrochemical impedance spectroscopy-based analysis. Through
    real-time monitoring and sending data directly to the IoT web server, the proposed
    system possesses the capacity to monitor the impact of industrial, urban, and
    agricultural activity on water content and quality. The system also ensures distributed
    monitoring. Daskalakis et al. [98], used leaf sensing technology instead of ground
    soil monitoring for knowing the plant water stress. The authors proposed a low
    cost and low power consumption leaf moisture sensing model by sensing the leaves
    with the new plant backscatter sensor node/tag. The developed tag collects the
    information from a leaf via analog and digital conversions and then the data is
    transferred via remote communication to a low-cost software-defined radio reader
    using monostatic backscatter architecture. The data collected from this node is
    then connected to the irrigation system. The proposed system is powered by a flexible
    solar panel. Jayalakshmi and Gomathi [99], proposed a sensor-cloud based precision
    agriculture for intelligent water management, to enhance crop production. For
    the model design, moisture and stress levels of different plant organs were considered
    along with the behavior vegetative and reproductive organs cell growth, and its
    effects on the water requirement were studied. The dimensionality reduction technique
    was employed to choose the optimal parameters. For the case study, the wheat plant
    was taken. The effect of soil temperature and water suction rate was studied in
    the case of the plant growth. The non-adsorbing testbed was prepared by exploding
    the sand grains at high temperatures. With the aid of WSN, it was monitored when
    the plant needs to be irrigated. Angelopoulos et al. [100], developed a small
    scale smart irrigation prototype for a strawberry greenhouse. The prototype possesses
    off the shelf hardware and software requirements and was tested on large farms
    having multiple crops to get a data gain. The reference architecture also targets
    edge data distribution. The model was tested in Greece and its performance was
    compared against the traditional existing strawberry greenhouse methods for irrigation.
    Compared to the cloud-based approaches, and their incompetence to handle network
    traffic, security challenges, and data sharing with the third party, this model
    is secure and reliable and can handle large datasets. Dominguez-Nino et al. [101],
    worked on how to integrate sensors for developing automated software tools to
    undertake the routine tasks and decision-making involved in scheduling irrigation.
    The authors also focused on the suitability of capacitance approach soil moisture
    sensors and how to automatically interpret them and providing feedback to the
    scheduling algorithm. The proposed approach was tested in the apple orchards located
    at the IRTA-Lleida Experimental Station in Mollerussa, Lleida, Spain. For the
    study, both the physiological and agronomic properties were taken into consideration
    while experimentation. Krishnan et al. [102], designed an automated irrigation
    method. The authors developed a fuzzy logic-based system for precision irrigation
    by using Global System for Mobile Communication (GSM) service to enable farmers
    to water the fields. Soil and temperature, humidity, and motor status parameters
    were monitored and taken for the study. For the efficiency evaluation of the system,
    a comparison was done between the proposed system, drip irrigation, and manual
    flooding. Harun et al. [103], designed an environment-friendly system named “Greenhouse
    Irrigation Management System” for precision irrigation in agriculture. Some critical
    environmental parameters such as soil moisture, pH, temperature, humidity are
    measured with the use of WSNs to make decisions. The sensors measure the data
    and based on certain threshold value result, the fields are irrigated. Olivo [104],
    focused on the problems associated with device growth and its effects on the control
    decisions. To address this issue, an architecture named “Rules Engine and Context
    Event Processor (RECEP)” is proposed for the dynamic processing of events originated
    in the context of IoT and PA. In this model the concept if optimization was used
    to optimize the resources to increase agricultural production. The experimental
    setup was set in a banana field located in Machala-Ecuador. The given model was
    designed for operating in low-cost infrastructures for both small and large producers.
    Marcelino et al. [105], based on the work and issues of small family farmers,
    proposed a low-cost system for control, monitoring, and automation of agricultural
    greenhouse. The proposed model was designed by prototyping Raspberry Pi and Arduino
    along with sensors. Temperature, humidity, and light sensors are used for the
    field data collection. The web human interface was developed for interaction between
    the system and the farmers. Koksal and Tekinerdogan [106], developed an automatic
    farm management information system capable of performing data acquisition, processing,
    monitoring, planning, and decision making and managing the farm fields. The authors
    tested their models on two case studies on smart farming in Turkey, one for smart
    wheat in Konya and other greenhouses in Antalya. The feature-driven domain analysis
    model is designed based on IoT reference architectures and data modeling approaches.
    The system was capable of performing all farming related functions, such as irrigation,
    crop monitoring, etc. Hate et al. [107], designed a vegetable traceability system
    with smart irrigation. The field parameters like soil moisture, humidity, water
    supply control, and temperature of particular farmland are monitored with sensors
    such as water level, humidity, soil moisture, and temperature sensors. With IoT,
    the cost is reduced and efficiency is improved. Agale and Gaikwad [108], focused
    on the problem of water reduction in farmlands. An IoT based automatic system
    is designed to collect, analyze, and monitor the real-time sensor data every 10
    seconds from soil and environment and provide irrigation solutions based on that.
    The parameters like temperature, humidity, soil moisture were considered for data
    collection. The proposed method achieved 92.24 % accuracy in water-saving strategy.
    Huan et al. [109], designed a system for monitoring of water in aquaculture ponds.
    To design the system authors used the concept of narrowband IoT (NB-IoT). The
    system used STM32L151C8 microcontroller, sensors and other devices for real time
    data collection and other services. The system was implemented and tested in ChangZhou,
    JiangSu Province, China and performed with low error rate. Vij et al. [110], developed
    a smart precision irrigation system based on the concepts of IoT and machine learning.
    The main aim of authors was to develop a computationally efficient and low cost
    system. Raspberry Pi and Arduino Mega 3 were used as microcontroller and other
    sensors were used to fabricate the system. Compared to the existing systems, the
    proposed system is computationally efficient. The various findings of this section
    have been tabularized in TABLE 9. TABLE 9 Summary of IoT Based Developed Methods
    for Irrigation C. IoT in Crop Monitoring Crop monitoring is the process or method
    of observing the farm fields and crops for enhancing productivity and reducing
    cost. This can be performed with satellites, drones, sensors, and other methods.
    Vegetative indexes of an area can also play a major role in crop monitoring by
    providing the data related to the exact area of land under cultivation etc. With
    crop monitoring the estimated time of harvest can be predicted. de Souza et al.
    [118], proposed an integrated framework with the combination of hardware, software,
    middleware, and other equipment to monitor the testbed. The authors also recorded
    the testing of each equipment in the seed test labs. An IoT based system was developed
    where soil sensors provided the relevant information/data for the growth of seeds.
    Testing was performed in the Official Seed Analysis Laboratory (OSTL) of the Brazilian
    Agricultural Research Corporation. Rekha et al. [119], developed a WSN based framework
    for sensing agricultural characteristics and then provide decisions to the farmers.
    Based on the data collected, the model will provide decisions for irrigation and
    crop monitoring. For the case study, India was taken into consideration due to
    its large farming area and population dependence on agriculture. Groundnut farming
    was studied in this work. Becker Reshef et al. [120], proposed a remote sensing
    analysis based crop monitoring system for strengthening agricultural decisions
    and improving crop security. The authors named this model as “GEOGLAM” model which
    ensures the decision support of all the necessary steps for crop security and
    analysis. Kamath et al. [121], proposed a wireless sensor-based model for monitoring
    the growth of weeds in paddy crop. The authors performed a study on how Raspberry
    Pi and WSN can be modeled for precision agriculture. Raspberry Pi based model
    was deployed to monitor crop along with the integration of Bluetooth 4.0 to send
    signals from visual sensors to the base station. A solar cell battery was used
    to provide power to the system. At the remote station, the images of the crops
    were processed to extract the background and foreground objects. Classification
    between weeds and paddy crop was performed with SVM. Rao and Sridhar [122], Developed
    an automatic irrigation system by prototyping Raspberry Pi and other IoT devices
    to enhance crop productivity. A cloud-based data collection system supported by
    sensors used for data collection is employed to collect the field data. The data
    collected is sent to the base station and based on that data, the decisions are
    made. Parameters like humidity, soil temperature, and sunlight availability are
    measured. Geng et al. [123], for greenhouse environment monitoring proposed a
    four-layer IoT based mobile system. To design the system, the authors proposed
    integration of both Raspberry Pi and Arduino chip in the design where the former
    serves as the data server and later as the master chip for a mobile system. Fabrication
    of all the sensors, actuators, and other devices was done on a single board, thereby
    reducing the device’s physical distances for better performance due to serial
    communication. A dedicated communication protocol with CYC was designed to reduce
    transmission errors and data loss. Shadrin et al. [124], designed an intelligent
    agriculture IoT equipment to monitor the crop. The authors designed the system
    using the test case of monitoring the seed germination. The proposed model was
    fabricated with the integration of low power embedding wireless sensor nodes with
    artificial intelligence. CNN was used to train the model along with the collection
    of data via sensor nodes of the different stages of germinated seeds. A 3D clustering
    analysis was used to analyze the relationship between environmental factors and
    farmer issues. Uddin et al. [125], focused on developing a system for monitoring
    crops from the stage of seed germination to harvest. For this authors proposed
    a resource optimized fast health crop monitoring system. Saudi Arabian agriculture
    was taken into consideration as a case study. IoT and drones were harnessed to
    make an efficient agricultural monitoring system. Data collection methods were
    used to collect data from heterogeneous devices arranged in localized clusters.
    The system was designed to withstand a harsh environment with agility and feasibility.
    Feng et al. [126], proposed a crop growth and nutrition diagnostic system based
    on hyperspectral remote sensing. Color canopies obtained from images captured
    with satellites, UAV, and remote sensing were used to determine the index of yield.
    To determine the color canopy of plants, the color correlation was employed. Cen
    et al. [127], discussed the usage of UAV with dual image frame cameras to estimate
    the aboveground biomass and panicle biomass of rice. The authors conducted their
    study at different growth stages of the crop. The field investigations were made
    on the variations in typical vegetation indices. The accuracy of the model was
    obtained with the extraction of RGB images at two different stages. Random forest
    was employed to obtain AGB as well as the PB. Khan and Kumar [128], proposed a
    framework for the monitoring the crop field. To make their study reliable, the
    authors monitored weather in real-time to get an idea of how to provide an ambient
    condition to farm. Production increase techniques are also proposed for precision
    farming. To overcome the problems of delay in information transfer from the field
    to the farmer, the context-based agricultural mobile sink is designed in WSN.
    Thus the mobile sink node introduction improves the overall efficiency and energy
    consumption of the model. Frontward communication area (FCA) based route selection
    is proposed to reduce energy consumption and delay. Min and Kuang [129], designed
    a system for monitoring the rice crop field. The analysis of the growth of rice
    and rice duck in real-time is done by obtaining the data via the Internet of Things.
    Authors comprehensively viewed the rice and rice duck plant species and the ambient
    farm conditions required for their growth. Qiulan et al. [130], estimated the
    production of carbon from the crop growth. The authors provided a framework for
    the estimation of organic carbon compounds in the farmland soil. The wheat plant
    was taken as a test case in this study. The model provided the real monitoring
    of the farm for carbon production with the aid of IoT and other devices. The real-time
    data was collected from the Yanzhou District of Jining City, Shandong Province,
    China. Harun et al. [131], proposed an improved crop monitoring system based on
    IoT concepts. Brassica Chinensis is the plant taken for study and was subjected
    to four different light treatments such as pulse treatment, continuous treatment,
    high intensity, and artificial control for enhancing the plant growth. The authors
    also analyzed parameters such as leaf count, height, dry weight, and chlorophyll
    a and b. An intelligent embedded system was developed to monitor and capture real-time
    data. Alonso et al. [132], designed an intelligent edge IoT based platform for
    precision livestock and crop monitoring in a dairy farming scenario. In their
    study, authors used the concepts of AI, blockchain technology, edge computing
    and IoT concepts for designing the platform. The architecture named Global Edge
    Computing Architecture (GCEA) was tried and tested in real time in a dairy farm.
    Castellanos et al. [133], proposed a narrowband IoT (NB-IoT) system for collection
    of soil parameters to monitor the potato crop health and growth. A UAV aided network
    is used to support the purpose. The architecture proposed accessed the real filed
    scenario of a potato filed near Bogota, Columbia. The main achievement of this
    work was the energy harnessing due to optimal topology applied for the deployment
    of sensors across the field and thus making the battery last for 82 hours for
    above ground sensors and 77 months for the deep buried sensors. Shafi et al. [134],
    presented a multimodal for crop health monitoring based on the concepts remote
    sensing, IoT and ML. Authors conducted their research in Pakistan. Sensors were
    deployed in fields to collect the real time data. Multispectral data from drones
    presented a NDVI and was used to analyze the crop based on its chlorophyll content.
    Variable length time series data captured from IoT devices and sensors were used
    to generate crop health maps. Deep neural networks were implemented for classification
    and provided the optimal classification. Some studies of the articles incorporating
    IoT in fields related to crop monitoring are presented in TABLE 10. TABLE 10 Summary
    of Developed Methods Crop Monitoring D. IoT in Disease Detection Diseases play
    a vital role in the economic and food crisis of a country. So to avoid this, disease
    detection is employed. This involves the detection of various diseases whether
    fungal, viral, bacterial, etc. from the stages of early to the post-harvest. Incubation
    of IoT has revolutionized the disease detection area in plant phenotyping resulting
    in major control resources available to avoid disease occurrence. Wang et al.
    [146], focused on addressing the problem of pests and insects. Authors proposed
    an IoT based model that can detect the early occurrence of the pests and diseases
    from visual references. Rough set theory algorithm and NN were used to model design.
    The proposed model was compared with existing models for accuracy and efficiency.
    Pandiyan et al. [147], applied the concepts of image segmentation and IoT, to
    develop a system/platform that can detect the diseases in plants. Authors proposed
    a novel platform having an Advanced Segmented Dimension Extraction (ASDE) with
    Heterogeneous Internet of Things procedural (HIoT) aspects, to detect the apple
    leaf diseases. A sign based plant disease identification model for real-time resembling
    of leaf diseases namely bacteria, fungi, micro-organisms, and viruses is presented.
    Three levels i.e. connectivity level, platform level, and service level were employed
    for performing data aggregation, transmission, and automatic identity identification.
    Leaf gestures were studied to identify the diseases in leaves. Zhao et al. [148],
    developed an automatic crop disease detection system capable of identifying and
    recognizing the leaves from a cluttered background. Combining IoT concepts and
    CNN, authors designed a novel approach named “Multi-Context Fusion Network (MCFN)”
    along with IoT deployments for crop diseased detection in wild. Kale and Sonavane
    [149], developed a smart and optimized smart fertilizing decision support system
    for smart farming. The authors addressed the problem of disproportion due to lack
    of judgment. Concepts of IoT and GA were used to design the system. An improved
    GA based multilevel parameter optimized feature selection algorithm for ELM classifier
    along with IoT was proposed in the designed system. The proposed system focuses
    on plant disease detection in a real-time environment. Khattab et al. [150], developed
    an IoT based cognitive automatic monitoring system for detecting the epidemic
    diseases in plants. By combining the concepts of artificial intelligence and prediction
    algorithms to develop the expert system, capable of predicting, analyzing, and
    decision making. A layered approach was used to design the model. Soil, leaf wetness,
    wind speed, and wind direction sensors were employed to gather the data. The model
    was tested on detection of the diseases like Late Blight, Early Blight, and Powdery
    Mildew in tomato and potato crops. Chen et al. [151], based on AI technologies
    and IoT, developed a system named “RiceTalk” for the detection of Blight diseases
    in the rice plant. AgriTalk model was used as a base model in this work to develop
    this system. Compared to AgriTalk, the authors used non-image IoT devices to design
    this model for disease detection. Devi et al. [152], proposed a simple and efficient
    IoT enabled solution for developing a system for automatic disease detection.
    Bunchy top of banana and Sigatoka diseases in the wild banana plant were detected
    and classified. Environmental parameters like soil moisture, temperature were
    measured with sensors and the IoT model was framed using the Raspberry PI hardware
    model. Data were classified using GLCM and RFC for disease detection. Kitpo and
    Inoue [153], developed an early disease detection system for rice crops disease
    detection. The drones based IoT architecture with real-time data collection capabilities
    was designed. For the mapping of drones on the fields, GPS sensors were used.
    The designed system is capable of displaying the analytical results and the position
    of the plant where the disease is present. Pawara et al. [154], studied the pomegranate
    diseases such as Bacterial Blight, Fruit Spot, Fruit Rot, and Leaf Spot. Developed
    a HMM and senor based model to early detect the disease and provide the solutions.
    Parameters like air temperature, leaf wetness, air humidity, and soil wetness
    were considered and studied for model design. For digital communication between
    field and farm GSM module was used. Truong et al. [155], real-time data monitoring
    capable system was designed with IoT and cloud storage for disease detection and
    recognition. The fungal diseases of rural crop fields with detected. Environmental
    data conditions such as humidity, temperature, wind speed, and rainfall were employed
    for designing decision support. A Support Vector Machine Regression (SVMr) model
    was used to classify the data. Jumat et al. [156], developed a cost-efficient
    and affordable smart farming prototype capable of detecting plant disease and
    proving decisions. For study and experimentation, Septoria plant disease was taken
    and studied for different stages right from outbreak to spread maturity. The system
    also possesses the web-enabled facilities for farmer support. Some studies of
    the articles incorporating IoT in fields related to disease detection are presented
    in TABLE 11. TABLE 11 Summary of IoT Based Developed Methods for Disease Detection
    SECTION V. Findings Several research articles related to the role and responses
    of the Internet of Things in agriculture have been studied. From the literature
    and studies, it can be seen that immense contribution has made by IoT in the field
    of agriculture starting from micro areas and moving over to macro environments.
    Internet of Things along with the concepts of cloud computing, cluster computing,
    wireless sensor networks and computer vision has revolutionized the field of monitoring,
    crop production, disease detection, and supply chain management. Since the domain
    of agriculture itself is a wide domain so considering the impact IoT has or can
    make on this field, the search was not restricted or limited to any area. The
    data acquisition for agriculture systems is a multidimensional approach. There
    are several fields in agriculture where IoT is applied e.g., crop monitoring,
    diseased detection, precision irrigation, supply chain, cattle grazing, and raising,
    etc. To design a precision approach, the target plays a very important role in
    data collection. From the existing studies it is found that mostly overall 90%
    of the data is self-acquired by the authors with the use of wireless sensors.
    This data included soil data, pH values, light, water, humidity, and images. In
    the case of crop disease detection, leaves were taken as the primary subject of
    study due to their ease of availability and quantity. Nearly 80% of the leaf data
    was self-acquired using digital cameras and web-enabled devices. However in some
    studies to validate their models, authors also used the existing standard ground
    truth databases available. Satellite imaging and remote sensing images were also
    taken to understand the demography and vegetative indexes of a region. UAV drones
    were the most used devices along with web-enabled digital cameras and mobile devices
    to capture the data in the form of images and also acted for providing real-time
    monitoring of device location in the fields. Certain issues and challenges are
    faced by the authors while capturing real-time images due to environmental and
    lighting conditions. To avoid these issues, laboratory-based testbeds such as
    greenhouses were developed and their data was acquired in a closed environment.
    From the literature, it is seen that, to develop the prototypes certain common
    parameters were taken for conducting the study irrespective of the problem to
    be addressed. Theses parameters included soil data, pH value, humidity level,
    moisture content, water content. After the analysis of the studies it was found
    that for any agricultural system to flourish all these parameters play a combined
    role. These parameters were most common for the problems addressing farm management,
    crop monitoring, and irrigation. However in certain other parameters like leaf
    wetness, salinity, disease severity, fertilizer ratio, plant height, CO2 content,
    mineral content, and conductivity were considered while addressing the specific
    problems like plant disease detection, smart irrigation, seedling germination,
    etc. These were the devices employed to collect the data. Depending upon the problem
    the authors addressed, different type of sensors were employed. For soil data
    collection, the contact method sensors such as hygrometers, or electrodes which
    penetrate the soil were used to collect soil information. While as in the case
    of the collection of soil information via tractors or vehicles non-contact soil
    sensors were employed. But for the studies it can be seen that contact method
    sensors are the most common devices used for soil data collection. In case of
    soil pH value and salinity electrochemical sensors are employed. In the case of
    soil nitrates, CO2, and fertilizer content, topsoil depth, biomass content, organic
    matter are measured. For water data collection, parameters like relative humidity,
    leakage of pipes, dissolved oxygen, nitrates, and other oxides were measured by
    the authors. To accomplish this various water sensors like ultrasonic sensors
    were employed to measure the water levels in the tanks, ponds, and farms. Temperature
    and humidity sensors were used to measure the temperature of water and humidity
    of soil for water content. In the case of plant leaves, the leaf wetness sensors
    were employed to understand the moisture content of the plants. Other than these
    sensors, neutron sensors, time travels sensors, and capacitance sensors are also
    employed by some authors for measuring the water levels. In the case of supply
    chain and cattle grazing, tags and biosensors were employed to gather the data.
    To develop the prototypes, the authors used the devices based on functional capabilities.
    From all the devices, Arduino and Raspberry Pi were the most desirable hardware
    platforms for the authors. Arduino was employed to tackle simple or sequential
    issues that do not require complex solutions. In the case of scenarios with complex
    environments, Raspberry Pi boards were employed due to their capability of addressing
    multiple problems at the same time. For functionalities that faced time issues,
    Raspberry Pi boards were employed. In the case of communication technologies,
    LoRa and ZigBee are the most commonly used communication technologies by the authors
    in the platform designs due to their capabilities of handling a multitude of solutions.
    Lora and ZigBee use GPS to enable and detect geo-locations. They are low cost
    and secure for data transmission. Other than these technologies, authors also
    made use of cloud and cluster computing to handle a large mass of data and provide
    on-spot solutions to the consumers. The authors performed the processing of data
    in different stages. At first preprocessing on data was performed to remove any
    kind of outliers or anomalies in the data. To remove the imperfect data, algorithms
    such as noise removal with Gaussian noise, salt and pepper noise, histogram equalization
    were commonly used for the preprocessing of image data. However in the case of
    numerical data missing value imputation, the banana dataset for noise reduction
    was employed. To obtain the optimal data from a given set of data, data reduction
    was performed. The data reduction approaches e.g., dimensionality reduction, attribute
    subset selection, numerosity reduction, etc. were employed by various authors.
    To make systems capable of taking decisions, several learning algorithms like
    GA, CNN, NN, SVM, PNN, GANs were used to train and test the models. From the literature,
    it is seen that most studies and experiments were performed in countries that
    have agricultural economies like the USA, China, India, Brazil, Australia, etc.
    Most of these countries are economically stable and first world countries. They
    have better infrastructure and service availability. Also only 20% of the studies
    were focused on real-time implementation of their prototypes which indicates that
    most of the experimentation was conducted in a closed environment. This pattern
    raises concerns on how these studies can be employed in real-time environments
    with low infrastructure and maintenance costs. The problem of power consumption
    was also addressed by some studies. However there were no comparisons and reasons
    given on how the dream of IoT can be made real for poor and self-financing farmers.
    Along with this, a few studies provided the cost estimation for the deployment
    of the models. In the Fig. 7, the percentage distribution and contribution of
    IoT in different fields of agriculture are shown. From the figure it can be seen
    that more extensive studies are conducted in the field of crop monitoring. FIGURE
    7. Percentage contribution of IoT in different fields of agriculture. Show All
    These studies and analysis put forth by different articles show that current/existing
    solutions have incorporated IoT to solve several challenges in the agricultural
    domain. With the incorporation of these technologies, a large number of challenges/factors
    for improvement have emerged. Along with the study of factors for improvement,
    future research directions, applications are also highlighted. The sections below
    explain the factors for improvement and the futuristic research directions. A.
    Challenges Despite the growth achieved by IoT over the past few decades, there
    still exist some conceptual, fundamental, and developmental issues. 1) Cost Designing
    a cost-optimized model is still a difficulty faced by many authors. Scientists
    are focusing on developing cost-efficient systems by reducing the hardware and
    software requirements in IoT deployments. Economic differences of countries make
    it difficult for farmers to deploy devices and technology. So, it is important
    to develop some economic models. 2) Standardization To fully utilize the technology
    for large range of applications, standardization of devices is essential. The
    present or current mechanisms do not confirm any standardization formats either
    for the data and process representation. Deprived of the cordial use of the semantic
    ontologies, machine-readable codes result in output differences due to misinterpretation
    and alterations from time to time. With standardization the interoperability issues
    of the devices, applications, systems and products can be solved. 3) Heterogeneity
    While designing a system, heterogeneous devices are used. Every device differs
    in processes and services requirements. In the case of agriculture, most models
    perform with heterogeneous devices, so it is important to create interaction between
    heterogeneous modules and communication technologies. Because of heterogeneity,
    the complexity of the network increases, and sometimes falsified results may appear.
    4) Accessibility For developing any farming decision support system based on IoT
    technology and other devices, the demand for availability of existing software
    and hardware to be present anywhere any time is a must thing. These problems need
    to be addressed to ensure the availability of services anywhere and anytime. Lack
    of availability of the required equipment can result in chaos and delay in the
    services. 5) Adaptability While designing a model, especially for precision farming,
    it is pertinent for the devices to be adaptable with the other devices and the
    surroundings. Since the environmental conditions keep varying and also sometimes
    due to certain communication or hardware issues certain devices are not adaptable
    with each other. 6) Energy Optimization Energy is the most emerging issue in IoT
    systems, WSNs, and other devices for their communication. Till now conventional
    sources of energy have been supporting the designing and working models. But due
    to an increase in devices, the consumption of conventional energy is not a reliable
    solution. Non-conventional sources of energy like solar, wind, water energy harvesting
    schemes should also be tested, but they haven’t been of much success and new methodologies
    should be developed to employ them for model development. 7) Compatibility To
    achieve the standards of fragmentation and scalability, the developed models or
    software should be flexible and should run on any machine. 8) Reliability For
    successful and smooth working, reliability is a major concern for IoT devices
    in terms of data transmission. The devices need to gather and transfer reliable
    data as based on the data received and interpreted, the decisions are made. Reliability
    is still a challenge due to system failures, node failures, battery issues, or
    other interventions. 9) Mobility Generally the systems or models developed are
    static. For smooth implementation of the framework, there should be mobility as
    most of the devices and applications are mobile. In mobile models, the issue of
    maintaining connectivity is still a difficult task. 10) Environmental Conditions
    In agriculture there are different landforms. So it becomes difficult to adapt
    to those changes, and this also jeopardizes data and services. This alters the
    accuracy of a system. 11) Real-Time Deployment Most of the studies put forward
    are not employed or tested in a real-time testbed. So before deploying a system
    or model, real-time analysis is a must, to avoid post-deployment losses. B. Improvements
    Since the growth of IoT is remarkable in the field of agriculture, certain improvements
    can be included in the growth and developmental state to make the systems and
    models more efficient, reliable, and business-oriented. 1) Warding Off the Performance
    Degradation Generally while developing systems, customer interaction or input
    is not taken. As the models serve a variety of customers from dynamic backgrounds,
    therefore their input must be taken while developing the models. This way the
    performance hazards and chaos that occurs on the filed can be avoided. 2) Sharing
    Rich Data Globally In almost all, the IoT based models designed for precision
    farming, the data sharing while integrating and mapping the system design should
    be encouraged. This can lead to the development of an interactive model globally.
    This feature can also help in understanding the topographic and demographic challenges
    of various regions on a global level. Thus the suitable solutions can be designed
    with those working in resource-constrained environments. 3) Moving Towards High-Speed
    Communication The communication domain itself is witnessing a progressive and
    dynamic shift. Since the IoT models are remotely located, so better communication
    is a prerequisite. Therefore it is important to consider high-speed communication
    strategies like 5G, for making the devices more reachable with lesser delays.
    4) Cost Analytic Studies for Model Design With the incumbent of IoT in agriculture,
    a variety of models are designed for addressing different domains such as irrigation,
    farm management, disease detection, and crop monitoring, etc. While designing
    the models various case studies are performed. As the development cost of models
    for these cases varies from country to country i.e., in first world countries
    there will be the different cost of devices and in second and third world countries
    it will be different. Therefore a model cost analysis will provide an idea of
    the purchasing power and investment a farmer from these varied economic regions
    can invest to develop a model. Also this can result in seeking or considering
    other cheaper and efficient ways to develop models. C. Future Research Directions
    With the advancement in the development of precision agriculture platforms with
    IoT and other technologies, the development of new applications or research areas
    is envisioned. After the study of the literature, certain potential concepts and
    futuristic research directions are listed and discussed below: Design of platforms
    in a user-friendly manner (from farmers’ perspective and ease of using) using
    Artificial Intelligence and other learning tools. Farmer’s perspective here means
    that an audit should be done well before designing the prototype. From this study
    a clear insight and differences between the requirements of the farmers and farming
    systems across the globe can be understood. To develop concepts and methodologies
    based on multidimensional aspects like science, expertise, experience, industry,
    etc. Energy harvesting or power optimization methodologies should be developed
    to reduce the cost of production, maintenance, and fault tolerance. It is evident
    that mostly the farms be it small or large, require power and energy for the working
    of devices. In most of the cases, the power to the devices is supplied from the
    main line or the power grid. But this is not a sustainable and efficient method.
    Thus in order to make farms self-reliant, the energy harvesting or power optimization
    approaches should be developed or incorporated while designing of the models.
    Induction of cloud sources for data gathering and processing in a reliable, systematic,
    and scientific manner. Develop systems that can withstand variable soil and environmental
    conditions. Since the agricultural environments are harsh and keep on changing
    with change in climatic conditions or seasons. So it is essential to develop systems
    which can be robust and sustainable to the changes in the external as well as
    internal factors. Development of user or farmer friendly apps for monitoring crop
    and plant health. Mostly farmers come different ethnic and linguistic backgrounds.
    So due to this their level of understanding and ways to perform agricultural tasks
    is also different. It is important to develop frameworks considering the native
    language of a region into consideration so the farmer and machine interaction
    can be improved. This will enhance enable the acceptance of precision farming
    methods easy as it can be seen some areas are reluctant to adopt due to this linguistic
    and understanding problems. Development of efficient sensor-based systems for
    high elevation areas. High elevation areas mostly have undulating surfaces and
    also in most of the countries, supply of power to these areas is still a dream.
    Form the literature, it can be seen that these areas have not been targeted for
    precision farming instead of being resource deficient. Therefore deployment and
    design of sensor based systems in these areas opens a scope in future of precision
    farming. Usage of previous and existential scientific data for the development
    of decision support systems in farming. Generally for designing the precision
    farming models, the primary data is considered. However for designing cost efficient
    and reliable models, the previous case studies and deployment models should be
    considered for the study. This means a collaborative model development methodology
    should be developed for understanding the nature of the work. To recognize various
    plant species using mixed data sets or heterogeneous data. Design of a portable
    and sustainable farming equipment control systems for large as well as small farms.
    Mostly from the study it can be seen that first world countries are welcoming
    in PA approaches while as in most third world and other nations, this concept
    is still in avoidance due to cost and shelf life of products and equipment’s.
    Development of reliable supply chain management methods for precision farming.
    D. Applications of IoT in Agriculture IoT has revolutionized the world of agriculture,
    and a manifold of application can be derivative of implementation of the Internet
    of Things in agriculture. These applications are a resultant of the architectural
    design chosen. These applications have been categorized and differentiated based
    on the subject they focus on and also the service they provide. The major sectional
    areas where IoT is applicable in agriculture are- observation, data collection
    and corroboration, governing, and management. Most of these fields work collaboratively,
    and all the applications involve at least two of these sections. All these sections
    are described below and TABLE 12 presents various IoT applications in agriculture.
    TABLE 12 Applications of IoT in Agriculture 1) Observation It is also called monitoring
    as the main aim of this section is to discern the working of various models, devices,
    applications, etc. With the incubation of the concept of IoT, it is the first
    and foremost stage to be smeared. In this phase, all the devices and equipment
    that are placed strategically are monitored for their work. Sensors, are the major
    deployment and data collection tools engaged in this phase for data collection
    of various field and non-field parameters. Monitoring the certain parameters,
    like soil salinity, pH value, volumetric water content by using various soil sensors
    and other essential parameters such leaf wetness sensors, color, humidity, etc.
    helps in the development of systems capable of performing following operations
    e.g., calculation of leaf area index, leaf health, leaf color, plant growth and
    aid in the development of automatic plant recognition systems. Other devices like
    water sensors aid in the monitoring of irrigation levels and requirements of the
    fields. Thus with such devices, smart irrigation scheduling systems are developed.
    Also with the gas sensors, remote monitoring devices such as UAV devices or images
    with hyperspectral reflectance properties, help in the estimation of biomass,
    nitrogen, carbon, and other essential gases content. This data can also be used
    to find the vegetative indexes of the filed or large demography. Heavy-duty vehicles
    such as thrashers, tractors, trucks etc., also need supervision and can use data
    analytics for farm management. Robots, autonomous vehicles, agricultural drones
    other equipment also need to be monitored remotely for better farm supervision.
    Livestock monitoring with the aid of IoT is also an important subject for precision
    farming. It includes cattle monitoring remotely using tags. Labour is also a major
    area of concern for precision farming. Since human intervention is generally prone
    to errors due to differences in understanding, decision making, and methodologies
    applied to solve a particular problem. Also the induction of human labor is cost-intensive.
    Therefore, with the application of IoT, human interference can be minimized and
    a network can be set up for monitoring thus reducing the errors and cost. 2) Data
    Collection and Corroboration Data is the main constituent of precision farming.
    It acts as both base and catalyst in the whole process. With IoT, a large number
    of data is collected in varying forms and formats. Sensors, cameras, and various
    other nodes aid in the collection of data. In precision agriculture, based on
    the nature of the problem, the IoT network can be designed and formulated to collect
    different types of data. After the data is collected, the corroboration also called
    documentation of the data is very important for better understanding. Corroboration
    is a natural application of collected data, but certain additions of different
    samples such as manual or machine integration are also seen. Data once collected
    needs to be refined and understood, labeled, and thus documented in a certain
    format. Documentation or corroboration of data helps in formulating statistical
    analysis and developing the decision support systems. Remote sensing charts and
    other crop assessing tools can be employed to understand the total crop yield
    of a particular region. Crop management can also be optimized using corroborating
    data. A yearly or term analysis can be performed on this data to improve precision
    farming. Food chain supply management can use the predictive analysis of this
    data for optimizing and designing new efficient strategies. The major areas where
    its application is seen are yield mapping for fertilization planning, field planning,
    agro-food traceability, site-specific measurements based on soil and water analysis,
    and remote vehicle monitoring for supply chains, etc. 3) Foretelling Also called
    forecasting is one of the major attributes or applications for decision making
    that is brought in agriculture with the introduction of IoT. With the IoT devices
    and network, real-time data analysis along with the comparison to the previously
    available datasets helps in the forecasting of the upcoming events in much advance.
    With this foretelling, various decision support systems can be designed capable
    of taking optimal and real time-decisions. It can also act as a preventive measure
    mechanism for avoiding or dealing with various upcoming unprecedented situations.
    With monitoring, data collection, and corroboration, foretelling can help in early
    disease detection, pest growth, weeding, drought, smart irrigation, and harvesting.
    Artificial intelligence can be employed for designing these learning systems.
    With IoT, a predictive analysis could be made way earlier than the harvest period
    for assessing crop production and consumption. Pre and post-harvest crop monitoring
    along with behavioral sciences and market analysis can also be employed to help
    site-specific farming and production increase in precision agriculture in the
    context of IoT. 4) Governing and Management It is an outcome of the monitoring
    device. Governing helps in controlling the whole system. Foretelling also plays
    a major role in governing. With IoT, it is important to govern the farm. Thresholds
    play a major role in designing a controlling strategy. Controlling is a major
    addendum of IoT in agriculture. Applications of controlling can be easily seen
    in site-specific management, working of smart irrigation models, plant growth
    monitoring models, and early crop analysis models and also in supply chain and
    smart vehicular navigation, interaction, optimization, and logistics control of
    farms. With governing, all the new strategies, formulae, practices and methods
    employed to solve the problems occurring on daily basis in farms can be monitored.
    These strategies can then be compared and analysed with the previous existential
    strategies. Therefore a knowledge base can be maintained. From the data analysis
    of that knowledge base, the best or the optimal strategies that can be employed
    to design or mould the system can be fetched. Various case studies can be performed
    to gather and test such information. From this the redundant techniques can be
    withdrawn and robust ones can be prioritised. With these methodologies and experiments,
    the management can be made more flexible, scalable and reliable. Also governing
    and management can be employed to find the best suited solutions. Due to the growth
    in agriculture sector, various public and private sector projects and startups
    are being started in various countries across the world. All these projects use
    artificial intelligence and IoT concepts to provide support and solutions to the
    growing industry of agriculture. All these projects or startups are explained
    in the TABLE 13. TABLE 13 IoT Based Public and Private Sector Projects/Startups
    for Precision Agriculture E. Our Proposed Work Inspired by the contribution of
    IoT in the field of agriculture, we proposed an architecture for precision farming.
    The layout of the architecture to be designed is proposed and shown in Fig. 8.
    The structure proposed for precision farming in case of farm management will constitute
    of different layers. The first layer would be the sensing layer, in which different
    types of sensors like soil, humidity, water, light, proximity, and conductive
    sensors will be deployed in the region of experimentation. All data from the sensors
    will be sent to the base station. The second layer is the network layer, which
    consists of gateways, internet, and other devices. This layer manages the traffic
    of the whole architecture. This layer collects data from the sensing layer and
    transfers it to the decision layer and the application layer. The third layer
    is the decision layer, which processes the data, manipulates it, and generates
    alerts or actions. The next layer is the application layer, which constitutes
    the firmware and the users. It receives all the inputs from other layers and the
    outputs are made visible to users. It also manages how the whole architecture
    will work or look. FIGURE 8. Proposed layered architecture for Precision Agriculture.
    Show All Our proposed architecture aims to observe and monitor the farm in real-time.
    Optimize the resource utilization, early detection of the diseases, and identification
    of the plant species, optimize irrigation facilities, and make definite use of
    pesticides and other manures. Monitor the growth of plants in each stage and take
    the necessary actions for the betterment of plants. The model to be designed will
    take into consideration the earning and investment of the small scale farmer.
    A scalable and cost efficient model will be designed by considering the reusability
    and recycling of the materials used. From the literature, it is found that the
    issue of interoperability and robustness is still not achieved. So, while designing
    the model these issues will be prioritized. Also, power supply and power consumption
    is a bottleneck for each model. So, from the literature it is found that energy
    harnessing approaches can be used to address this issue. In the proposed model,
    main focus will be on incorporating the concepts of energy harnessing approaches
    like solar energy and wind flow energy for power optimization. Harnessing solar
    energy for regions which have different season’s e.g., Kashmir, which has four
    seasons like spring, summer, autumn and winter throughout the year. So for these
    regions depending only on solar energy will be a bottle neck. Therefore, in the
    proposed work, a hybrid approach based on consumption of both wind and solar energy
    for reducing power consumption will be proposed. Some of the major findings of
    the proposed work will be: A scalable and cost efficient model will be designed
    by considering the reusability and recycling of materials used. The issues of
    interoperability and robustness issues of heterogeneous devices will be targeted.
    Power supply and power consumption being the bottleneck of each model will be
    targeted. To tackle such issues, energy conservation and energy harnessing approaches
    like solar and wind energy will be used. Harnessing solar energy for regions which
    have different season’s e.g., Kashmir, which has four seasons like spring, summer,
    autumn and winter throughout the year. So for these regions depending only on
    solar energy will be a bottle neck. Therefore in the proposed work, a hybrid approach
    based on consumption of both wind and solar energy for reducing power consumption
    will be proposed. Small scale farmers will be targeted for the development of
    sustainable and robust model. SECTION VI. Conclusion The Internet is revolutionizing
    our world. Communication via connective devices has become the countenance of
    survival. Agriculture is growing from precision farming to micro-farming. IoT
    has added more potential to communication by enabling the communication between
    humans and objects along with the environmental aspects. Seeking the vision of
    omnipresence i.e., anytime, anything, anywhere, everywhere, IoT should be considered
    a core for the development of new architectural concepts. Resource scarcity is
    a must address issue in precision agriculture and models should be developed to
    optimize resource utilization. Inclusion of monitoring in food supply chains,
    farms, greenhouses equipped with tags, WSN, etc. at each stage in the growth of
    the product/plant, making automatic reasoning via intelligent analysis and responses
    is moving towards much safer, secure, and trustworthy systems. In the article,
    firstly the agriculture sector along with its challenges and economic importance
    is presented. The domain of IoT along with the communication technologies and
    goals, protocols, architectures are studied and put forward. The various IoT OS,
    their specifications and features with respect to agriculture are discussed. An
    analytic study of various articles in the field of agriculture is presented, highlighting
    their most focused sections and gaps or areas not addressed. The sensors based
    on their field of application are also discussed. A systematic review of different
    articles focusing especially on crop monitoring, irrigation, disease detection,
    and farm management is offered. The articles considered for study range from the
    time frame of the year 2015 to 2020. From the studies, certain issues are put
    forward that demand research and experimentation in the future. Various existing
    public and private sector platforms or start-ups which work for precision farming
    are also presented and discussed with their specifications and applications. Making
    precision farming a base, a layout of an IoT based architecture is proposed. The
    communication technologies and the hardware platforms of IoT are also discussed.
    The applications of IoT in agriculture are also discussed. The issues, challenges,
    and future research directions are also highlighted. As a whole, the in-depth
    description of various aspects of IoT for agriculture has been discussed and how
    these studies should be catered in a way to create efficient and smart agricultural
    scenarios. Authors Figures References Citations Keywords Metrics More Like This
    Internet of Things and Wireless Sensor Networks for Smart Agriculture Applications:
    A Survey IEEE Access Published: 2023 Weighted Connected Vertex Cover Based Energy-Efficient
    Link Monitoring for Wireless Sensor Networks Towards Secure Internet of Things
    IEEE Access Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: (Kour; Arora, 2020
  journal: IEEE access
  key_findings: Hyperspectral imaging and thermal sensing can provide a comprehensive
    view of plant stress, allowing farmers to make informed decisions about how to
    manage their crops.
  limitations: The paper does not provide any specific details about the proposed
    system or how it would be implemented. For example, it does not discuss the type
    of sensors that would be used, the data collection and processing methods, or
    the decision-making algorithms that would be employed. Additionally, the paper
    does not provide any experimental results or validation of the proposed system.
  main_objective: To explore the use of advanced sensing technologies, such as hyperspectral
    imaging and thermal sensing, for non-invasive plant stress detection.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09139962.pdf
  publication_year: 2020
  relevance_evaluation: The paper is highly relevant to the outline point as it proposes
    using advanced sensing technologies, such as hyperspectral imaging and thermal
    sensing, for the non-invasive detection of plant stress. This is a key aspect
    of precision agriculture, as it enables farmers to identify and address crop problems
    early on, before they cause significant damage. The paper is also relevant to
    the section and subsection titles, as it focuses on the use of IoT and machine
    learning for automated systems in agriculture, specifically for the purpose of
    real-time irrigation management.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Hyperspectral imaging, Thermal sensing
  title: 'Recent Developments of the Internet of Things in Agriculture: A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.apenergy.2021.116601
  analysis: '>'
  authors:
  - Yassine Himeur
  - Khalida Ghanem
  - Abdullah Alsalemi
  - Fayçal Bensaali
  - Abbes Amira
  citation_count: 258
  explanation: The study uses advanced sensing technologies to monitor and record
    energy consumption and contextual data, such as occupancy patterns and outdoor
    weather conditions, at a high frequency. The collected data is preprocessed to
    remove noise and outliers, then passed to a deep anomaly detection model that
    is responsible for identifying abnormal consumption patterns. The model is trained
    using annotated data, in which normal and abnormal consumption patterns are labeled.
    To ensure the model's robustness and accuracy, it is continuously retrained and
    updated based on newly collected data. If an anomaly is detected, the corresponding
    household appliance or the end-user is notified to investigate and take corrective
    actions to reduce energy waste and promote sustainable consumption behaviors.
  full_citation: '>'
  full_text: '>

    Processing math: 100% Skip to main content Skip to article Journals & Books Search
    Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download
    full issue Outline Highlights Abstract Keywords Nomenclature 1. Introduction 2.
    Overview of anomaly detection methods 3. Critical analysis and discussion 4. Current
    trends and new perspectives 5. Conclusion Declaration of Competing Interest Acknowledgments
    References Show full outline Cited by (316) Figures (11) Show 5 more figures Tables
    (3) Table 1 Table 2 Table 3 Applied Energy Volume 287, 1 April 2021, 116601 Artificial
    intelligence based anomaly detection of energy consumption in buildings: A review,
    current trends and new perspectives Author links open overlay panel Yassine Himeur
    a, Khalida Ghanem b, Abdullah Alsalemi a, Faycal Bensaali a, Abbes Amira c Show
    more Add to Mendeley Share Cite https://doi.org/10.1016/j.apenergy.2021.116601
    Get rights and content Under a Creative Commons license open access Highlights
    • Anomaly detection of energy consumption in buildings. • Taxonomy of artificial
    intelligence based anomaly detection methods. • Current trends and new perspectives
    of anomaly detection. • Non-intrusive anomaly detection. • Multimodal anomaly
    detection visualization techniques. Abstract Enormous amounts of data are being
    produced everyday by sub-meters and smart sensors installed in residential buildings.
    If leveraged properly, that data could assist end-users, energy producers and
    utility companies in detecting anomalous power consumption and understanding the
    causes of each anomaly. Therefore, anomaly detection could stop a minor problem
    becoming overwhelming. Moreover, it will aid in better decision-making to reduce
    wasted energy and promote sustainable and energy efficient behavior. In this regard,
    this paper is an in-depth review of existing anomaly detection frameworks for
    building energy consumption based on artificial intelligence. Specifically, an
    extensive survey is presented, in which a comprehensive taxonomy is introduced
    to classify existing algorithms based on different modules and parameters adopted,
    such as machine learning algorithms, feature extraction approaches, anomaly detection
    levels, computing platforms and application scenarios. To the best of the authors’
    knowledge, this is the first review article that discusses anomaly detection in
    building energy consumption. Moving forward, important findings along with domain-specific
    problems, difficulties and challenges that remain unresolved are thoroughly discussed,
    including the absence of: (i) precise definitions of anomalous power consumption,
    (ii) annotated datasets, (iii) unified metrics to assess the performance of existing
    solutions, (iv) platforms for reproducibility and (v) privacy-preservation. Following,
    insights about current research trends are discussed to widen the applications
    and effectiveness of the anomaly detection technology before deriving future directions
    attracting significant attention. This article serves as a comprehensive reference
    to understand the current technological progress in anomaly detection of energy
    consumption based on artificial intelligence. Previous article in issue Next article
    in issue Keywords Energy consumption in buildingsAnomaly detectionMachine learningDeep
    abnormality detectionEnergy saving Nomenclature ANN Artificial neural network
    AIN Artificial immune network ARIMA Autoregressive integrated moving average CBLOF
    Cluster-based local outlier factor CNN Convolutional neural network DAD Deep abnormality
    detection DAE Deep autoencoder DBN Deep belief network DBSCAN Density-based spatial
    clustering of applications with noise DODDS Distance-based outlier detection in
    data streams DNN Deep neural networks DRED Dutch residential energy dataset DRL
    Deep reinforcement learning ELM Extreme learning machines GAN Generative adversarial
    networks GBM Gradient boosting machine GTB Gradient tree boosting iForest Isolated
    forest IoT Internet of things KNN K-nearest neighbors KNNG K-nearest neighbor
    graphs LDA Linear discriminant analysis LDCOF Local density cluster-based outlier
    factor LOESS Locally estimated scatterplot smoothing LOF Local outlier factor
    LSTM Long short-term memory MDA Multiple discriminant analysis (EM)3 Consumer
    Engagement towards Energy saving behavior by means of Exploiting Micro Moments
    and Mobile recommendation systems MCU Microcontroller unit MNN Mutual k-nearest
    neighbor MLP Multi-layer perceptron MSCRED Multi-scale convolutional recurrent
    encoder–decoder MSE Multiview stacking ensemble NILM Non-intrusive load monitoring
    NTL Non-technical loss OCL One-class learning OCSVM One-class support vector machine
    OCNN One-class neural network OCCNN One-class convolutional neural network OCRF
    One-class random forest PCA Principal component analysis PGBOD Parallel graph-based
    outlier detection PIR Passive-infrared PCSiD Power consumption simulated dataset
    QDA Quadratic discriminant analysis QUD Qatar university dataset RBFNN Radial
    basis function neural network RBM Restricted Boltzmann machine RNN Recurrent neural
    network ROF Resolution-based outlier factor SCiForest Isolation forest with split-selection
    criterion Semi-SVM Semi-supervised support vector machine SLFN Single-layer feed-forward
    neural network SVM Support vector machine SVR Support vector regression STTS Short-term
    time-series VFD Variance fractal dimension 1. Introduction Climate change is an
    dangerous predicament affecting the world’s population. Almost 80% of the overall
    world energy is produced by fossil fuels. In addition to find green energy sources,
    it is of utmost importance to diminish the total energy consumption percentage
    [1]. A notable approach into achieving this objective is through informing end-users
    of their power usage patterns. Accordingly, consumers can improve their behavior
    and change their consumption habits with the aim of reducing wasted energy and
    contributing in the promotion of sustainable and green energy ecosystems [2].
    This is quite possible, especially if recommender systems are combined with anomaly
    detection modules. Therefore, personalized and contextual recommendations will
    be generated and transmitted the end-user to assist them in adopting a more sustainable
    energy use behavior [3], [4]. In this line, governments around the world have
    realized the importance of energy efficiency and the major role that end-users
    can play to curtail the entire expenditure on energy [5]. On the other side, the
    building sector represents a major energy consumer across the world. Specifically,
    buildings are responsible of more than 40% of the overall energy generated globally,
    which is converted to more than 30% of the entire worldwide CO2 emission [6],
    [7]. As such, the reduction of power consumption in building environments could
    absolutely support the urgently-needed diminutions in the world-wide power consumption
    and the related environmental interests. Nevertheless, reducing power consumption
    in buildings is not straightforward and is a challenging task since each building
    requires electrical energy to operate [8], [9]. Even though there is an increasing
    interest towards developing zero-energy buildings, related ideas are only in their
    nascence and are just tested in limited regions of developed countries. In this
    context, the potential option available currently is to promote energy awareness
    and optimize the operation of appliances used in buildings, giving that the latter
    are rigorously built to consume the amount of energy needed for their expected
    aims, i.e. preventing energy waste [10], [11]. According to recent studies, people
    could spend up to 80%–90% of their time in indoor environments (and extensively
    some unexpected circumstances, such as the COVID-19 pandemic), which can enormously
    impact their energy consumption levels, especially if they show negligence and
    carelessness [12], [13]. Efficient feedback could help in reducing energy consumption
    in buildings and lessening CO2 emissions. Accordingly, offering updated information
    and personalized recommendations to end-users and building managers is the initial
    stage towards setting innovative approaches to optimize energy usage [14], [15].
    In addition, for effective power usage, anomalous consumption behavior must be
    captured [16]. Therefore, via implementing energy monitoring systems and benchmarking
    strategies, abnormal behavior and footprints can be mitigated. Consequently, smart
    anomaly detection techniques for energy consumption should be formulated for identifying
    new forms of abnormal consumption behaviors [17]. In buildings, an anomalous behavior
    of an electrical device or of the end-user could occur either because of a faulty
    operation of a device, end-user negligence (e.g. cold loss in a room by keeping
    a window open while the air conditioner is on or refrigerant leak in a fridge
    via maintaining the fridge door open), a theft attack, a non-technical loss, etc.
    [18], [19]. An occurrence of anomalous behavior could lead to higher power consumption,
    longer operation-time than its normal behavior/operation-time and/or could result
    in a permanent malfunction of the device [20]. It has been demonstrated in various
    research works that it should be possible to utilize artificial intelligence (AI)
    for detecting anomalous energy consumption behaviors either generated by end-users,
    appliances’ failures, or other potential causes [9], [21]. The AI community has
    made every possible effort during the past decade to detect abnormal power consumption
    accurately and swiftly. However, it is also of significant importance to detect
    when an appliance is not working appropriately and what are the reasons. Moreover,
    energy consumption events occurring during a day-off may be genuine, or harder
    to deal with compared to recurring events, and thus an anomaly detection algorithm
    might consider a recurring fault as “normal”. This makes anomaly detection in
    energy consumption very different form other application scenarios, e.g. intrusion
    detection, healthcare anomaly detection, etc. [22]. This is because (i) the other
    applications are drastically different as they have acute, serious consequences
    if the anomaly is not detected, whereas household energy anomalies might cause
    extract costs and jumps of the energy bills every month, but are unlikely to be
    life threatening; and (ii) detecting anomalous consumption should be followed
    by triggering a set of tailored recommendations to help end-users adjust their
    energy consumption habits, replace faulty appliances, identify cyber attackers
    on energy infrastructures and carry on legal procedures and take other measures
    related to end-users’ negligence (e.g. close the refrigerator door, close the
    doors and windows of the rooms while an air conditioner is working, etc.) [23].
    Such measures could be quite useful in different ways since they result in high
    energy cost savings, and could further prevent different kind of disasters (e.g.
    a house fire). Efficient energy saving systems based on anomaly detection schemes
    need to address various issues before reaching a wider adoption. Among the challenges
    is how to design scalable and low cost solutions while maintaining decentralization
    and security. Other contemporary issues include privacy preservation, consumer
    anonymity, and the real-time implementation of anomaly detection based systems.
    A significant effort has been put in recent years to innovate anomaly detection
    strategies, a large amount of projects and frameworks are ongoing, which have
    been described in scientific journal articles, patents, reports and industrial
    white papers and produced principally by the academic community and industrial
    partners. Moreover, various AI-based anomaly detection techniques have been the
    subject of new energy saving solutions. However, we assert a systemic and comprehensive
    review conducted based on different sources is still required to investigate the
    challenges, issues and future perspectives of the applicability of machine learning
    for anomaly detection in energy consumption. In this context, this framework strives
    to fill that knowledge gap via proposing, to the best of the authors’ knowledge,
    the first, extensive and timely survey of anomaly detection of energy consumption
    in buildings. Explicitly, with the aim of laying the foundation for this effort,
    the following contributions have been proposed: • First, we present an overview
    of existing anomaly detection schemes in building energy consumption, in which
    a comprehensive taxonomy is adopted to classify them into various categories based
    on the nature of machine learning model used to identify the anomalies, feature
    extraction, detection level, computing platform, application scenario and privacy
    preservation. In addition, we discuss various system architectures and associated
    modules determining the technical properties of anomaly detection systems. A considerable
    part of current knowledge on anomaly detection in energy consumption arises not
    just from conventional academic sources (i.e. journal articles and conference
    proceedings), but also from industrial outputs, granted patents, and whited papers.
    We focus in the first part of this framework on distilling valuable information
    from the aforementioned sources in order to allow the readers comprehending the
    technical challenges of energy consumption anomaly detection. More specifically,
    the advantages and limitations of every category is discussed thoroughly along
    with its competence in different case scenarios. • Second, we perform a critical
    analysis and describe by conducting an in-depth discussion of the presented state-of-the-art.
    We explore current difficulties and limitations issues associated with the development
    and implementation of the anomaly detection systems, in addition to their market
    barriers. • Third, we describe current trends and identify new challenges concerning
    the enrichment of anomaly detection schemes with new applications and functionalities
    that could impact positively the energy consumption in buildings, among them considering
    additional sources of data (e.g. occupancy patterns, ambient conditions, etc.),
    combining other technologies (i.g. non-intrusive load monitoring (NILM)), collecting
    annotated datasets and using unified assessment metrics. • Finally, we derive
    a set of future research directions that require greater emphasis with regard
    to four aspects, in order to (i) overcome the actual drawbacks of anomaly detection
    algorithms, (ii) improve the exploitation of anomaly detection solutions for better
    energy saving ecosystems, (iii) improve the deployment of innovative anomaly detection
    systems in real-world scenarios, and (iv) preserving the privacy of end-users.
    The remainder of this paper is organized as follows. An overview of state-of-the-art
    anomaly detection techniques in building energy consumption is presented in Section
    2, where an exhaustive taxonomy is proposed with regards to various aspects. Furthermore,
    their limitations and drawbacks are highlighted. Moving forward, critical analysis
    and discussion are presented in Section 3 as a result of the conducted overview,
    in which difficulties, limitations and market barriers are described. Following,
    Section 4 is divided into two parts, in which Section 4.1 is reserved to describing
    open research challenges regarding novel applications and functionalities of anomaly
    detection methods. While, Section 4.2 provides a set of insightful perspectives
    and emerging concepts for advancing future anomaly detection systems. Finally,
    Section 5 derives relevant concluding remarks. 2. Overview of anomaly detection
    methods 2.1. Overview This section describes existing anomaly detection methods
    based on the nature of implemented AI algorithms used to detect anomalies. Fig.
    1 illustrates the proposed taxonomy of anomaly detection techniques in building
    energy consumption with reference to different aspects. Download : Download high-res
    image (816KB) Download : Download full-size image Fig. 1. Taxonomy of the anomaly
    detection schemes in energy consumption based on different aspects: (i) AI algorithms,
    (ii) application scenarios, (iii) detection levels, and (iv) computing platforms.
    2.1.1. Unsupervised detection (U) It aims at detecting formerly unknown rare consumption
    observations or patterns without using any a priori knowledge of these observations.
    Generally, this kind of detection assumes that the amount of anomaly patterns
    to the overall consumption data is small, i.e. less than 20%. Since the abnormalities
    represent the outliers that are unknown to the consumer at the training stage,
    detecting anomalous consumption is reduced to the modeling of normal consumption
    behavior in the large majority of cases, in addition to the definition of specific
    measurements in this space with the aim of classifying consumption observations
    as abnormal or normal. Unsupervised techniques are mainly built on clustering,
    one-class learning and dimensionality reduction algorithms. U1. Clustering: it
    is a machine learning scheme used to split power consumption data into various
    clusters and hence helps in classifying them into normal or abnormal in unlabeled
    datasets (even with many dimensions). This anomaly detection strategy has attracted
    a lot of interest in different research topics for its simplicity, such as intrusion
    detection in networks [24], Internet of things (IoT) [25], sensor networks [26],
    suspicious behavior detection in video surveillance [27], anomalous transaction
    detection in banking systems [28] and suspicious account detection in online social
    networks [29]. In addition, clustering has the capability for learning and detecting
    anomalies from the consumption’s time-series without explicit descriptions [30].
    Aiming at distinguishing between actual anomalies and genuine changes due to seasonal
    variations, the authors in [31] propose a two-step clustering algorithm. In the
    first step, an anomaly score pertaining to each user is periodically evaluated
    by just considering his energy consumption and its variations in the past, whilst
    this score is adjusted in the second step by taking into account the energy consumption
    data in the neighborhood. In [32], the concept of “collective anomaly” is introduced,
    instead of the events that refer to an anomaly, to depict itemsets of events,
    which, depending on their patterns of appearance, might be anomalous. To achieve
    this, the frequent itemset mining and categorical clustering with clustering silhouette
    thresholding approaches were applied on smart meters data streams. In [33] an
    integrated scalable framework which combines clustering and classification techniques
    with parallel computing capabilities is adopted, by superimposing a k-means model
    for separating anomalous and normal events in highly coherent clusters. Moving
    forward, authors in paper [34] opt for a time-series to investigate the anomaly
    detection in temporal domain, subsequently to categorizing the anomalies into
    amplitude and shape related-ones. A unified framework is introduced to detect
    both type of anomalies, by employing fuzzy C-means clustering algorithm to unveil
    the available normal structures within the subsequences, along with a reconstruction
    criterion implemented to measure the dissimilarity of each subsequence to the
    different cluster centers. In [35], power data are processed through the mutual
    k-nearest neighbor (MNN) and k-means clustering algorithms to reduce the number
    of measurement samples, the consumption patterns are then analyzed to detect abnormal
    behaviors and malicious customers. Finally, entropy-based methods for anomaly
    detection represent another clustering category, in which a little effort has
    been devoted to thoroughly comprehend the detection force of using entropy-based
    analysis, such as [36], [37]. U2. One-class classification: also named one-class
    learning (OCL) relies on considering initial power consumption patterns to be
    parts of two groups, positive (normal) and negative (abnormal), then it attempts
    to design classification algorithms while the negative group can be either absent,
    poorly sampled or unclear [38]. Accordingly, OCL is a challenging classification
    problem that is harder to solve than conventional classification problems, which
    try to discriminate between data from two or more categories using training consumption
    data that pertain to all the groups [39]. Different schemes have been proposed
    in the literature to detect anomalous consumption footprints based on OCL. In
    [40], one-class support vector machine (OCSVM) is introduced to identify the smallest
    hypersphere encompassing all the power observations. In [41], a kernel based one-class
    neural network (OCNN) is proposed to detect abnormal power consumption. It merges
    the capability of deep neural networks (DNN) to derive progressive rich representations
    of power signals with OCL, building a tight envelope surrounding normal power
    consumption patterns. In [42], [43], two different approaches of one-class convolutional
    neural networks (OCCNN) are proposed. They share the same idea of using a zero
    centered Gaussian noise in the latent space as the pseudo-negative class and training
    the model based on the cross-entropy loss to learn an accurate representation
    along with the decision boundary for the considered class. Also, one-class random
    forest (OCRF) is proposed to identify abnormal consumption when labeled data are
    absent [44], [45], it is based on utilizing classifier ensemble randomization
    fundamentals [46]. U3. Dimensionality reduction: in different machine learning
    applications, dimensionality reduction could be used as a classification approach
    with a low computational cost as it can removes irrelevant power patterns and
    redundancy [47]. Various techniques are explored to classify power data as normal
    or abnormal, such as principal component analysis (PCA), linear discriminant analysis
    (LDA) [48], quadratic discriminant analysis (QDA) [49] and multiple discriminant
    analysis (MDA) [50]. Despite the fact that PCA has been proposed mainly to reduce
    the dimensions of the original data while preserving the relationships between
    the data as much as possible, it has been also used as a classifier. For example,
    in the anomaly detection problem that is considered as a two-class classification
    issue, the PCA classifier estimates the principal components of both normal and
    abnormal classes. Following, the classifier is designed with reference to the
    projection of the energy patterns within the subspaces spanned by these principal
    components for either normal or abnormal class [51], [52]. Moreover, PCA could
    also be applied for the case of multi-class anomaly detection, as it is the case
    with the micro-moment based anomaly detection approach described in [19]. Accordingly,
    the normal energy usage class has been split into three new classes while abnormal
    energy consumption class has been divided into two new classes. Overall, the anomaly
    detection problem has become a classification issue of 5 different classes. All
    in all, PCA is appropriate for the case in which energy observations of different
    categories are distributed in different spaces and directions. In [53], the Karhunen–Loeve
    transform-based PCA is used to detect anomalous power consumption. It relies on
    estimating principal components of every consumption category and then creates
    a classifier via projecting power patterns on the subsets distributed by those
    principal components related to the two main categories (i.e. normal and abnormal).
    In [54], LDA is used to classify power consumption patterns by discriminating
    between separated sub-categories and design a model to automatically labeling
    power consumption patterns with reference to their corresponding categories. This
    has been accomplished via the use of discriminant weights to separate the hyperplanes
    generated by the LDA statistical learning. In [55], [56], QDA that is a variant
    of LDA is deployed to enable a non-linear separation of power consumption patterns
    pertaining to both normal and abnormal ensembles. Finally, MDA is mainly used
    to build discriminant axes (functions) from linear combinations of the initial
    power consumption data. Every axis is designed to maximize the difference between
    normal and abnormal categories while considering them uncorrelated [56], [57].
    2.1.2. Supervised detection (S) Supervised anomaly detection in energy consumption
    necessitates training the machine learning classifiers (binary or multi-class)
    using annotated datasets, where both normal and abnormal power consumption is
    labeled. Although supervised anomaly detection can achieve high-accuracy identification
    results as demonstrated in academic frameworks, its adoption in the real world
    is still limited compared to unsupervised methods, due to the absence of power
    consumption annotated datasets. Fig. 2 illustrates the main steps to conduct a
    supervised anomaly detection approach. S1. Neural networks: refer to using deep
    learning or conventional artificial neural networks (ANN) to detect normal and
    abnormal consumption patterns. Currently, deep abnormality learning (DAD) has
    been used in various research topics, such as detecting fraudulent health-care
    transactions [41], identifying abnormalities in video streaming [58] and detecting
    credit card frauds [59]. However, the performance of a DAD based solutions could
    be sub-optimal in some cases owing to the imbalance property of power consumption
    datasets (i.e. power consumption patterns are not uniformly distributed over the
    normal and abnormal categories). Download : Download high-res image (549KB) Download
    : Download full-size image Fig. 2. The main steps used to perform a supervised
    anomaly detection of energy consumption in buildings. In [60], [61], the autoencoder
    and long short-term memory (LSTM) neural networks are merged to identify abnormalities
    in unbalanced and temporally correlated power consumption datasets. Similarly,
    in [62], the authors detect anomalies in time-series power footprints using a
    variational recurrent autoencoder. Moving forward, Yuan et Jia [63] use stacked
    sparse autoencoder for extracting high-level representations from large-scale
    power consumption datasets gleaned using and IoT-based metering network. Next,
    they utilize softmax in the classification stage to capture the consumption anomalies
    before sending notifications and alerts to end-users using web applications. Similarly,
    in [64] the autoencoder and micro-moment analysis are used to detect abnormal
    energy usage. On the other side, convolutional neural networks (CNN) have demonstrated
    its effectiveness in different research applications, and it has superior performance
    in comparison with artificial neural network (ANN) algorithms for detecting abnormalities
    in time-series data [65]. In [66], the author opted for combining CNN and random
    forest to track energy consumption anomalies due to energy theft attacks and thereby
    helping energy providers to remedy the issues related to irregular energy usage
    and inefficient electricity inspection. Similarly, Zheng et al. [67] propose a
    CNN-based solution, which helps mainly in identifying the non-periodicity of energy
    theft and periodicity of normal energy consumption using 2D representations of
    power consumption signals. Using the same idea, a CNN is developed in [68] via
    representing time-series time/frequency energy consumption signals in 2D space
    and then learning anomaly features using convolution. Moving forward, in [69],
    multi-scale convolutional recurrent encoder–decoder (MSCRED) is deployed to analyze
    multivariate time-series observations and detect abnormalities. In [70], a restricted
    Boltzmann machine (RBM) along with a deep belief network (DBN) are merged to construct
    a DNN-based abnormality detection framework. Explicitly, a dimensionality reduction
    task is performed at the two first RBM layers before being fed into a fine tuning
    layer including a classifier to separate anomalies from normal data. Furthermore,
    looking for innovative deep learning solutions to deal with the unbalanced property
    of anomaly detection datasets, generative adversarial networks (GAN) are employed.
    It can model complex and high-dimensional data of different types, including images
    [71], time-series [72], [73] and cyber security [74]. Unfortunately, its utilization
    to detect anomalous power consumption in buildings is still very limited [75].
    Recurrent neural network (RNN) is very competent in analyzing time-series data
    and enables to exhibiting temporal dynamic behaviors [76]. It has been used to
    predict the anomalies occurring during energy usage and distinguish them from
    deviations emerging from seasonality, weather and holiday dependencies [61], [77].
    For instance, in [78], an RNN based anomaly detection system is designed, which
    can remove seasonality and trends from power consumption patterns, resulting in
    a better capture of the real abnormalities. In [79], the authors concentrate on
    elaborating an abnormality detection scheme having the ability to face the concept
    drift, due to family structure changes (e.g. a household turned to a second family
    residence). To that end, an LSTM based RNN model is developed to profiling and
    forecasting end-users’ consumption behaviors using their recent/past consumption
    data. In [80], abnormal days illustrate suspicious consumption rates are identified
    using a hybrid learning model based on RNN and K-means. Similarly in [81], a hybrid
    model using RNN and quantile regression is introduced to predict and detect anomalous
    power consumption. On the other hand, in order to provide the reader with more
    details on the use of deep learning for anomaly detection in energy consumption,
    Fig. 3 illustrates a flowchart of a supervised anomaly detection scheme proposed
    in the (EM) 3 project, which is performed using a DNN model [19]. In this framework,
    power consumption data of various appliances and occupancy patterns are gleaned
    using sub-meters and smart sensors. Next, collected data are labeled using a micro-moment
    paradigm, in which consumption footprints are divided into five consumption categories.
    Following, a DNN model is designed and trained using the labeled dataset before
    testing it on new recorded, unlabeled data in the test stage. On the other hand,
    using ANN for anomaly detection in energy consumption is mainly supported by its
    capability to learn and generalize from past consumption data to identify normal
    and abnormal behavior [82]. In addition, ANN could help in solving the anomaly
    detection issue when recorded data is noisy due to various reasons, e.g. noise
    generated during data transmission or from electrical appliances connected to
    the smart grid [83]. In [84], the identification of power consumption anomaly
    is handled by resorting to a multi-stage ANN-based solution. This latter incorporates
    a discrete wavelet transform to obtain the required features, a variance fractal
    dimension (VFD) operation applied on those features, an ANN scheme which exploits
    the VFD output to perform the training, and finally a threshold-based detection
    of the anomalous power consumption pattern. The work in [85] proposes a residential
    framework comprising a dual hybrid one-step-ahead load predictor and a rule-engine-based
    energy consumption abnormality detector. In order to attain a high anomaly detection
    precision in linear and nonlinear regression, the predictor merges the benefits
    of ANN and autoregressive integrated moving average (ARIMA) model. Download :
    Download high-res image (443KB) Download : Download full-size image Fig. 3. Flowchart
    of a supervised anomaly detection scheme based on DNN used to detect two different
    anomalies, i.e. excessive consumption and consumption while outside. Moreover,
    the consumption anomalies are tracked through the use of multi-layer perceptron
    (MLP) and classification techniques in [86]. Similarly in [87], with the aim of
    predicting malicious behavior in unbalanced data, an MLP-based solution is efficiently
    tested on two different datasets to carry out a flow-based control which preserves
    the end-users’ privacy. In the same direction, the continuous and fine-grained
    monitoring of energy consumption in industrial buildings is discussed in [88]
    in order to preserve reliable operation. Explicitly, an MLP-based anomaly detection
    scheme is targeted via detecting sensor data abnormalities in a pharma packaging
    system. Moreover, intrusion detection that can be applied in energy theft tracking,
    is investigated in [89] by combining artificial immune network (AIN) and cosine
    radial basis function neural network (RBFNN), wherein firstly multiple-granularities
    version of the former is supported to reveal the candidate hidden neurons, and
    subsequently, the latter is trained based on gradient descent learning process.
    In addition, different power consumption anomaly detection frameworks are introduced
    based on extreme learning machines (ELM) [90], [91]. Specifically, ELM is built
    upon a single-layer feed-forward neural network (SLFN) for classifying the normal
    and abnormal classes [92]. S2. Regression: refers to identifying the relationship
    between two or more power variable classes in order to produce an ensemble of
    model parameters to predict the generation of abnormal power observations. In
    this context, the production of anomalous power consumption patterns can be predicted
    based on other collected abnormal footprints. Various regression models have been
    introduced in the literature to identify abnormalities in building energy consumption,
    including linear regression, support vector regression (SVR), auto-regressive
    models, regression trees and regression fitting [93]. The authors in [94] propose
    to adopt linear regression-based approaches to determine the anomalous periods
    for individual premises, and clear them from the premise data, such that to provide
    precise assessments of energy consumption patterns. In the same direction, a model
    to find abnormal energy consumption patterns is designed in [95] by analyzing
    the smart meters temporal data streams. Specifically, to perform the prediction
    and map the non-linearity of data, support vector regression with radial basis
    function is retained and correspondingly evaluates the disparity between the actual
    and the expected energy consumption. Because of the large quantity of stored smart
    meter data, anomaly detection with such information brought the big data issue
    into focus, particularly with the scarcity of adequate and efficient real time
    anomaly detection systems capable of handling this huge amount of data. In order
    to remedy this and facilitate energy-related decision-makings, the studies in
    [96], [97] depict a scalable architecture merging an autoregressive prediction-based
    detection method, with a new lambda scheme to iteratively upgrade the model along
    with real time anomaly detection. The work in [98] targets the reduction of anomalous
    consumption by presenting a new scheme which enabled the identification of anomalous
    power consumption within large sets of data. It follows a two-stage processing,
    namely prediction and then anomaly detection, where, by the aid of a hybrid neural
    network ARIMA model of daily consumption, daily real-time consumption is first
    predicted in the former step, whereas a two-sigma rule was adopted to localize
    the anomalies via the evaluation of the mismatch between real and predicted consumption.
    The framework in [65] address the anomaly recognition in streaming large scale
    data, which is a typical occurrence scenario in deployed sensors. In this scope,
    both statistical (i.e. ARIMA) and CNN based approaches were integrated in a residual
    way, such that the fusion was shown to compensate the weaknesses of each of them
    and consolidate their strengths. In [88], a data-driven approach was pursued since
    no cyclicity pattern was noted on the observed data. From comparing three different
    regressors (i.e. regression tree, random forest, and MLP) in the prediction phase,
    the authors highlighted the advantages of the regression trees and random forests
    residing in the training time efficiency and model replicability ease. S3. Probabilistic
    models: are among the most important machine learning tools, they have been instituted
    as an effective idiom for describing the real-world problems of anomaly detection
    in energy consumption using randomly generated variables, such as building models
    represented by probabilistic relationships [99], [100]. The anomaly profiles of
    time-series patterns are identified using Bayesian maximum likelihood models for
    clean data [101] and noisy data [100], while Bayesian network models are implemented
    to detect abnormalities categorical and mixed based power consumption data in
    [102], [103]. In [104], [105], statistical algorithms are deployed to identify
    the anomalies via the identification of extremes based on the standard deviation,
    while in [104], the authors use both statistical models and clustering schemes
    to detect power consumption anomalies. In [106], [107], naive Bayes algorithms
    are proposed to detect the abnormalities generated by electricity theft attacks.
    Similarly in [108], Janakiram et al. deploy a belief Bayesian network to capture
    the conditional dependencies between data and then identify the anomalies. In
    [109], a statistical prediction approach based on a generalized additive model
    is introduced to timely detect abnormal energy consumption behavior. S4. Traditional
    classification: stands for models that rely on detecting to which power consumption
    category (sub-population) a new power consumption sample pertains, with reference
    to a training ensemble of consumption footprints that have labels of both normal
    and anomalous consumptions. K-nearest neighbors (KNN), support vector machine
    (SVM), decision tree and logistic regression are the well-known conventional classification
    algorithms, they have been widely deployed in the state-of-the art of the energy-based
    applications or other research topics. In [53], [104], KNN based heuristics are
    proposed to detect abnormal power consumption, while in [86], the authors investigate
    the performance of KNN against other machine learning classifiers to identify
    abnormal power observations. In [110], [111], SVM is deployed to detect abnormalities
    due to energy theft attacks. In the same direction, in [112], a genetic SVM model
    is proposed to detect abnormal consumption data and suspicious customers, in which
    a genetic algorithm is combined with SVM. While in [113], Zhang et al. fuse SVM
    and particle swarm optimization for detecting abnormal power consumption in advanced
    metering infrastructures. On the other side, in [114], a decision tree based solution
    is introduced to learn energy consumption anomalies triggered by fraud energy
    usage. Similarly in [115], an improved decision tree model is developed to detect
    anomalous consumption data using densities of the anomaly and normal classes.
    Moving forward, in [88], a decision tree regressor is presented to detect abnormal
    power consumption using sensor data, while in [86], the anomalies are detected
    using logistic regression. 2.1.3. Ensemble methods (E) As it is demonstrated in
    various frameworks [19], [116], none of the anomaly detection schemes could perfectly
    identify all abnormalities through low-dimensional subspaces because of the complexity
    of power consumption data and other factors influencing power usage over hourly,
    daily, weekly, monthly or yearly scales. Accordingly, the use of ensemble learning
    can solve some related issues, where the initial set of power observations is
    split to multiple subsets and various models are applied simultaneously on these
    subsets to derive the potential abnormalities. Following, anomaly identification
    scores are either summarized or the most suitable one is selected to produce final
    score. E1. Boosting: it is a set of meta-algorithms used to principally reduce
    bias and variance of unsupervised learning, in which weak classifiers (learners)
    are converted into strong ones. Generally, they are structured in a sequential
    form. A weak classifier refers to the case where a slight correlation can be achieved
    with the true classification [117]. Different boosting schemes are proposed in
    literature to detect anomalies, among them bootstrap, gradient boosting machine
    (GBM) and gradient tree boosting (GTB). In [118], Zhang et al. use a bootstrap
    strategy to conduct an unlabeled learning process for detecting anomalies in energy
    data in multi-feature data. In [119], a GBM based anomaly detection is introduced
    to model power usage of commercial buildings. In the same manner, in [120], a
    grid search is deployed to capture the best parameter configuration of a GBM based
    anomaly detection. While in [121], the authors predict energy frauds though the
    identification of power consumption anomalies using a GBM based scheme. In [122],
    a GTB based anomaly detection is investigated along with other data mining techniques
    using power consumption pricing data. E2. Bagging: also called bootstrap-aggregating,
    it is a set meta-algorithms developed for improving the accuracy and stability
    of several weak classifiers. Bagging differs from boosting by the fact that the
    weak learners are structured in a parallel form [123]. Moreover, distinct detection
    schemes can be applied on each sub-ensemble before aggregating their results as
    demonstrated in [124]. Random forests, bootstrap aggregation and their variations
    are the well-known bagging based ensemble learning methods used for anomaly detection.
    For example, in [125], Araya et al. propose a bootstrap aggregation based abnormality
    detection scheme, which helps in conducting an ensemble learning to identify energy
    consumption anomalies. In [126], an isolation forest with split-selection criterion
    (SCiForest) algorithm is introduced to check if the end-user’s electricity consumption
    is anomalous or normal. In [66], non-technical losses (NTLs) occurring in the
    energy networks are detected using a random forest scheme. This is mainly conducted
    through sensing anomalous power consumption and learning consumption differences
    for different periods (i.e. hours and days). In [127], a random forest classifier
    is deployed to detect anomalies while respecting the performance measure related
    to the accuracy and false alarm rates. In [128], a multiview stacking ensemble
    (MSE) technique is proposed to learn energy consumption anomalies collected using
    different IoT sensors in industrial environments. In [116], an anomaly detection
    scheme based on feature bagging is introduced. It relies on training several classifiers
    on different feature sub-ensembles extracted from a main high-dimensional feature
    set and therefore combining the classifiers’ results into a unique decision. In
    [129], after deriving various feature sub-ensembles randomly from the initial
    feature, anomalies are identified and the performance is estimated in each sub-ensemble
    before fusing them to come out with the final output. 2.1.4. Feature extraction
    (F) This part mainly discusses how feature extraction scheme can help to boost
    the performance of anomaly detection methods via: (i) representing the power consumption
    observations in novel spaces (e.g. high-dimensional spaces); (ii) utilizing appropriate
    measures and functions (e.g. distance, density) to discriminate between normal
    and abnormal consumption; and (iii) representing the consumption flowchart using
    new representation structures (e.g. graph-based representation) [130]. F1. Distance-based:
    refers to detecting abnormal consumption patterns by judging each pattern based
    on its distance to its neighboring samples. Explicitly, normal consumption observations
    generally possess a dense neighborhood while anomalous consumption footprints
    are far form their neighboring points (i.e. show a sparse structure). Various
    frameworks have been proposed to resolve the issue of distance-based anomaly detection
    for energy consumption, where unsupervised learning methods are usually adopted
    without having any distributive presumptions on recorded consumption data. In
    this regard, in [131], a distance-based anomaly detection is proposed via analyzing
    the theoretical properties of the nearest neighbors of each power observation.
    Explicitly, anomalous patterns are then detected with reference to a global quantity
    named distance-to-measure. Also in [132], power anomalies in smart grid are detected
    using a multi-feature fusion that is based on Euclidean distance and a fuzzy classification
    approach. In [133], the authors use a cosine similarity approach to estimate similarity
    distance between power consumption observations and detect suspicious patterns.
    Following, they sort the resulted cosine distance data for identifying abnormal
    consumption behavior based on a threshold. Moreover, in [134], various methods
    are proposed to resolve the distance-based outlier detection in data streams (DODDS)
    issue and their performance is compared when detecting anomalies without having
    any distributional assumptions on power consumption observations. In a similar
    way, in [135], Huo et al. develop an distance-based abnormality detection method,
    in which a time–space trade-off strategy has been deployed for reducing the computational
    cost. While in [136], a resolution-based outlier factor (ROF) method is proposed
    to detect anomalies in large-scale datasets. It mainly focuses on analyzing the
    distances of both local and global features to effectively detect anomalous data.
    In [137], the energy consumption anomaly detection process is performed using
    an isolated forest (iForest) model. The latter has been proposed by Liu et al.
    as a competitive method to ROF and local outlier factor (LOF) algorithms [46],
    [138]. F2. Time-series analysis: because power consumption data are considered
    time-series footprints, it is logical that many studies have focused on formulating
    the anomaly detection issue such as to find anomalous observations based on standard
    signal analysis [128]. Specifically, this kind of anomaly detection relies on
    detecting unexpected spikes, level shifts, drops and irregular signal forms. For
    example, in [139], seasonal trend decomposition using locally estimated scatterplot
    smoothing (LOESS) is proposed to detect anomalous consumption points, in which
    a seasonal-trend decomposition scheme based on LOESS is introduced. It helps in
    splitting the power consumption time series samples into three components defined
    as seasonal, trend, and residue [140]. On the other side, it is worth noting that
    most of the anomaly detection schemes pertaining to this class are based on short-term
    time-series (STTS) analysis. In this line, a log analysis of power consumption
    time-series patterns is conducted in [141] to detect real-time anomalies in early
    warning systems. Similarly, [142], a feature extraction based abnormality detection
    scheme is proposed using canonical correlation. It can help in detecting the anomalies
    in different kinds of buildings, such as households, work spaces and industrial
    zones. In [143], abnormalities occurring in smart meters data are identified using
    time-series analysis, in which Cook’s distance is deployed over a thresholding
    process to decide whether an observation is normal or abnormal. In the same vein,
    in [144], a hierarchical feature extraction method is proposed in order to capture
    energy consumption anomalies in time-series consumption data due to electricity
    stealing. While in [145], to identify the abnormal consumption behavior, the authors
    analyze different STTS features that could offer valuable details about deviations
    from a typical behavior. On the flip side, other techniques use rule-based algorithms
    to analyze time-series data and detect anomalous power consumption [146], [147].
    For example, in [148], Yen et al. introduce a rule-based approach to analyze the
    phase voltages and then decide which are the anomalous patterns using an ensemble
    of rules. In the same direction, in [149], a rule-based algorithm is combined
    with a linear programming approach to detect anomalous electricity consumption
    and hence identify the locations of potential energy theft attacks and/or faulty
    meters. In [150], [151], the detection of anomalous power consumption is performed
    using a rule-based algorithm, which is elaborated based on machine learning methods
    and the knowledge of energy saving experts. An ensemble of energy saving parameters
    is then introduced to track abnormalities. While in [152], a rule-based algorithm
    is combined with an improved nearest neighbor clustering approach to identify
    potential abnormal power consumption behaviors. In [19], a micro-moment based
    algorithm is proposed to detect two kinds of power consumption anomalies, which
    are due to (i) excessive power consumption, and (ii) consumption while the end-users
    are outside. The latter is responsible of wasting a large amount of energy for
    a set of appliances, such as the air conditioner, heating system, fan, light lamp
    and desktop/laptop. F3. Density-based: refers to anomaly detection methods that
    investigate the density of each power consumption pattern and those of its neighborhood.
    Moving forward, a power observation is considered as anomalous if it has a lower
    density compared to its neighbors [153]. Various techniques have been proposed
    in this regard; among them LOF that attempts to derive a peripheral observation
    by using density of its surrounding space [154]; cluster-based local outlier factor
    (CBLOF) that relies on detecting the anomalies using the size of its power consumption
    clusters, and the density between each power observation and its closest cluster
    [155]; local density cluster-based outlier factor (LDCOF) that represents an improved
    version of CBLOF, in which it applies a local density concept when allocating
    anomaly scores [156]. In this context, in [157], a density-based spatial clustering
    of applications with noise (DBSCAN) approach is introduced to detect anomalous
    power consumption in a wind farm environment. Overall, density-based anomaly detection
    has been widely investigated in other fields, such as activity monitoring [158],
    machine fault detection [159], financial and banking systems [160], etc., their
    application to detect abnormal energy usage has not been very successful since
    other kinds of anomalies exist. Specifically, density based schemes could only
    identify energy consumption outliers based on analyzing energy consumption levels
    without the possibility to detect other abnormalities, e.g. energy consumption
    of some appliances (e.g. television, air conditioner, lamp, fan, etc.) while the
    end-user is absent. F4. Graph-based: before applying graph-based methods to detect
    power consumption abnormalities, consumption data should be converted into a graph-based
    structure. Because there are no common standards to model this kind of data, researchers
    use various schemes to design such a representation. For instance, the authors
    in [161], [162], consider the house, power generator, electric network, rooms,
    and appliances as nodes; and edges stand for the existing connection between a
    specific room and the operation of an appliance. Following, abnormalities resulting
    in a structural change of the graph topology are detected, while a graph-based
    abnormality is defined as an unforeseen deviation to a normative pattern. Different
    graph-based abnormality detection (GBAD) algorithms have been proposed [163],
    where abnormal observations of structural data are identified in the information
    representing entities, actions and relationships. In [164], the authors propose
    a graph-based method to discover contextual anomalies in sequential data. Explicitly,
    the nodes of the graph are clustered into different categories, where each class
    includes only similar nodes. Following, anomalies are detected via checking if
    adjacent observations pertain to the same class or not. Similarly, in [165], a
    parallel graph-based outlier detection (PGBOD) technique is introduced for identifying
    power abnormalities, in which data are processed in parallel before extracting
    abnormal patterns. 2.1.5. Hybrid learning (H) Annotating normal power consumption
    is much easier than labeling anomalous patterns, consequently, hybrid or semi-supervised
    anomaly detection has been adopted in several frameworks [166]. It leverages available
    annotated normal footprints (having labels) and pertaining to the positive class
    to identify abnormalities from the negative class. This is the case of deep autoencoder
    (DAE) architecture when it is only applied to learn normal consumption patterns
    (with no anomalies). Accordingly, using enough training consumption observations
    from the normal category, the autoencoder could generate low reconstruction errors
    for normal observations over abnormal patterns [167]. In [168], a semi-supervised
    support vector machine (semi-SVM) based anomaly detection solution is proposed,
    where a small number of annotated power consumption patterns are required to train
    the learning model. This system can also generate alarms if suspicious consumption
    patterns are detected, which are different to usual energy consumption habits
    of the end-users. While in [169], DAE and ensemble k-nearest neighbor graphs (KNNG)
    are combined to develop a semi-supervised anomaly detection system, in which only
    normal events with their labels are used to train the learning model. 2.1.6. Other
    techniques (O) In addition to what has been presented in the aforementioned subsections,
    there are other types of anomaly detection techniques that are built on completely
    different strategies, including visualization and compressive sensing. O1. Visualization:
    offers effective tools to comprehend consumption behavior of end-users through
    mapping consumption footprints with visual spaces. In this line, visual experts
    make use of perceptual skills for helping end-users perceive and decipher their
    consumption patterns within data. Moreover, visualization of load usage footprints
    could efficiently aid in detecting anomalous consumption behaviors, faulty appliances
    and suspicious consumption fingerprints that may be due to energy theft attacks.
    Accordingly, this enables end-users and energy managers to fix related issues
    and reduce wasted energy. For example, in [170], the authors propose an anomaly
    detection framework based on providing various time series visualization schemes,
    which helps in analyzing and understanding energy consumption behavior. Moreover,
    it also enables visualizing resulting anomaly scores to direct the end-user/analyst
    to important anomalous periods. In the same way, an interactive visualization
    approach that helps in capturing power consumption anomalies is proposed in [171].
    It focuses on analyzing and visualizing spatio-temporal consumption footprints
    gleaned using various streaming data sources. This method has been developed with
    respect to two prerequisites of real-world anomaly detection systems, which are
    the online monitoring and interactivity. Moreover, an interactive dashboard is
    designed in [172] using an early warning application, which can automatically
    analyze energy consumption footprints and provide end-users with timely abnormal
    consumption visualizations based on data recorded from smart meters and sensors.
    While in [173], a graphical visualization tool for supporting the detection and
    diagnosis of power consumption abnormalities using a rule-based approach is proposed.
    O2. Compressive sensing: represents a signal processing strategy for effectively
    analyzing and reconstructing time-series data using their sparsity. It has been
    widely used in different research fields, such as facial recognition, holography
    and monitoring of bio-signals. In addition, compressive sensing puts all the appropriate
    qualities to detect anomalies in energy consumption [174]. For instance, in [175],
    the authors prove the relevance of applying compressive sensing in sparse anomaly
    detection, it relies on the fact that the number of anomalous patterns is generally
    smaller than the total number of events. In the same direction, in [176], separable
    compression sensing is combined with PCA to identify anomalous power data. In
    [177], anomalous events in smart grid are detected using a sparse approximation
    paradigm. 2.2. Anomaly detection level The anomaly detection level of power consumption
    data plays a major role in developing effective solutions because it describes
    either the level of resolution in which power anomalies have been detected and
    treated. Correspondingly, tailored recommendations could be generated to resolve
    the associated issues and promote energy efficient behavior. L1. Aggregated level:
    it refers to detecting anomalous power consumption using data of the main supply
    in a specific building, i.e. without any information about individual consumption
    of the different appliances connected to the electrical network. Although this
    kind of anomaly detection has been used in various works, it has the main drawback
    of not being able to provide the end-user with information about which appliance
    is responsible for a specific anomaly. L2. Appliance level: it stands for the
    case where anomaly detection is performed using appliance power consumption data
    gathered using individual sub-meters. This kind of anomaly detection is widely
    adopted because it supports a fine-grained tracking of abnormalities occurring
    during the operation of each electrical device [23]. L3. Spatio-temporal level:
    much attention has been devoted recently to the collection of continuous spatio-temporal
    power consumption patterns from different devices and sources. This affords new
    opportunities to timely understand consumption fingerprints in their spatio-temporal
    context [178], [179]. Overall, detecting anomalous consumption behaviors using
    conventional data collection methods present considerable challenges since the
    boundary between normal and anomalous observations is not obvious. Therefore,
    a straightforward solution to those challenges is to interpret consumption abnormalities
    in their multifaceted and spatio-temporal context. Specifically, detecting abnormal
    consumption related to specific hours in the day, or what are the severe days
    presenting anomalous consumption and how to identify them in the timestamps (weekdays,
    weekends, holidays, etc.) will be valuable to provide end-users with a personalized
    feedback to reduce wasted energy [180], [181]. 2.3. Applications The applications
    of anomaly detection of energy consumption in buildings are no longer limited
    to energy efficiency, but they are finding themselves in various novel application
    contexts. Explicitly, they could be used for detecting (i) abnormal consumption
    behaviors, (ii) faulty appliances, (iii) occupancy information, (iv) non-technical
    losses, and (v) at-home elderly monitoring. In addition, the same anomaly detection
    system, within a building can be used for multiple applications without the need
    for installing other systems (e.g. to detect occupancy or non-technical losses).
    Therefore, this could effectively reduce the hardware implementation costs and
    decrease the complexity of installed systems. A1. Detection of abnormal behavior
    of end-users: it is the main application for which anomaly detection has been
    proposed since the final objective is to reduce wasted energy and promote sustainable
    and energy efficiency behaviors [19], [150]. In this context, detecting anomalous
    consumption behavior of end-users allows a better and accurate assessment of power
    usage, which can be translated into providing them with useful and personalized
    recommendations [182], [183]. A2. Detection of faulty appliance: using various
    kinds of appliances at indoor environments has made people’s lives more convenient.
    However, these electrical appliances could be faulty in different ways or could
    suffer from inefficiencies, and hence leading to several issues, such as the events
    resulting in a massive energy waste and triggering electrical fires [184], [185].
    To that end, detecting faulty appliances and providing the end-users with customized
    recommendations to replace them is of significant importance in reducing the operation
    cost and boosting energy saving in buildings [23], [149]. A3. Occupancy detection:
    detecting whether a building or one of its parts is occupied by the end-users
    is essential to allow a set of building automation tasks. Although actual tools
    for detecting the indoor occupancy typically need to install specialized sensors,
    including passive-infrared sensors (PIR), reed switches actuated by magnets, or
    cameras, their installation is very costly and further labor charges could be
    added for maintenance [186], [187]. Therefore, a solution to overcome the high-cost
    pitfall is to explore the aptitude of electrical sub-meters, which are installed
    in most of the houses around the globe to detect occupancy patterns [188], [189].
    For example, the authors in [190] investigate both appliance specific and aggregated
    load usage footprints to detect the occupancy of residents [191]. A4. Non-technical
    loss detection: it mainly refers to (i) detecting unintentional sub-meters’ dysfunctions
    and electricity theft attacks attempting to bypass sub-meters; (ii) braking and/or
    stopping sub-meters; (iii) identifying faulty sub-meters’ records; and (iv) capturing
    appliances having illegal connections [110], [192]. Non-technical loss in energy
    consumption has negatively affected most of the economies over the globe [35].
    For instance, more than 10% of produced energy could be lost every year in Europe
    due to non-technical loss and billions of dollars are lost every year because
    of theft energy attacks [149], [193]. To that end, detecting non-technical-loss
    and electricity theft have been introduced as an information technology related
    challenge, which requires novel methods based on AI, data mining and forecasting
    [106], [111]. Moreover, separating between behavioral consumption anomalies, fraud
    and unintentional consumption deviations is reported as a current research trend
    to provide an accurate feedback to end-users and energy providers [121], [151].
    A5. At-home elderly monitoring: modern societies face significant issues with
    the monitoring of their elderly people at home environments [194]. This problem
    could have considerable social and economic effects. However, one solution to
    overcome it is via (i) monitoring appliance consumption of elderly people in real-time;
    (ii) identifying abnormal consumption behaviors that could be occurring due to
    some critical situations (e.g. falls); and (iii) predicting faulty operations
    of some appliances, which can result in dangerous situations (e.g. floods or gas
    leaks) [195], [196]. Table 1. Summary of research frameworks conducted in energy
    consumption anomaly detection. Reference (year) Application Category Implemented
    technique Learning Computing Privacy Sampling Empty Cell Empty Cell Empty Cell
    Empty Cell process platform preservation rate [35] (2017) A1 U1 MNN and k-means
    clustering Unsupervised – – 1 h [45] (2020) A1 U2 OCRF Unsupervised P1 – 1 h,
    [54] (2020) A1 U2,U3 OCSVM, DBSCAN, LOF, LDA, IKNN Supervised P1,P3,P4 No 1 s,
    3 s [60] (2019) A1 S1 Autoencoder and RNN Unsupervised P3 – 1 min [62] (2018)
    A1 S1 Variational recurrent autoencoder Supervised P3 – 15 min [66] (2019) A4
    S1 CNN and random forest Supervised P3 No 1 h [67] (2018) A4 S1 CNN Supervised
    P3 – 1 h, 1 day [75] (2020) A1 S1 Recurrent GAN Supervised P3 No 1 h [77] (2019)
    A1 S1 RNN and negative selection Supervised P2 No 30 min [80] (2019) A1 S1 RNN
    and K-means Unsupervised P3 – 1 h [81] (2020) A1 S1 RNN and quantile regression
    Unsupervised P4 – 1 h [85] (2020) A1 S1 ANNs and ARIMA Supervised P1 No 1 h [86]
    (2020) A2 S1 MLP Supervised P1,P2 – 1 h [22] (2019) A1 S2 Linear regression   +
    rule-based algorithm Supervised P1 No 1 h [97] (2017) A1 S2 autoregressive prediction
    Semi-supervised P1,P2 – 30 min [106] (2020) A4 S3 Bayes algorithms Supervised
    P1 No 5 min [103] (2020) A4 S3 Bayesian networks Supervised P1 No 15 min [105]
    (2016) A4 S3 Gaussian distribution Supervised P1 – 1 h [173] (2018) A1 O2 Graphical
    visualization Unsupervised P3 – 30 min, 1 h [111] (2019) A4 S4 SVM Supervised
    P1,P2 No 1 h [19] (2020) A1 S4,S1 SVM, KNN, decision tree, EBT, DNN Supervised
    P1,P3,P4 No 1/6 s, 1 s [119] (2018) A1 E1 GBM Supervised P1 – 15 min [121] (2019)
    A4 E1 GBM and grid search Supervised P1 – - [125] (2017) A1 E2 Bootstrap aggregation
    Supervised P1,P2 – 5 min [126] (2019) A1 E2 SCiForest Supervised P1 No 30 min
    [133] (2016) A1 F1 Distance-based approach Unsupervised P1,P2 - – [142] (2019)
    A1 F2 Time-series analysis Supervised P1,P2 No 1 min [167] (2018) A1 H DAE Semi-supervised
    P3,P4 – 30 min [168] (2019) A1 H Semi-SVM Semi-supervised P1 – 1 h [195] (2017)
    A5 F1 Rule-based algorithm Unsupervised P1 No 30 s [191] (2019) A4 F2, S1 Time–frequency
    features + OCRF Supervised P1,P2 – 10 min, 1 h [184] (2019) A2 S3 Rule based statistical
    model Unsupervised P1 No 10 min [197]  (2019) A4 S1 CNN Supervised P3 Yes 30 min
    [198] (2019) A4 S1 CNN Supervised P3 Yes – 2.4. Computing platforms As presented
    previously, most of the anomaly detection methods have been built upon the use
    of machine learning techniques. However, although the use of these approaches
    has helped in developing the of anomaly detection technology, it also opens serious
    challenges related to computing resources, data processing speed and scalability.
    In this regard, describing and discussing available solutions used to implement
    anomaly detection systems is essential to understand the current challenges. •
    P1. Edge computing platforms: refer to distributed computational models that allow
    to drop the computing resources and information storage capabilities close to
    the end-user application, where it can directly be used, e.g. in energy consumption
    applications this can be done on the smart sensor platforms or smart plug devices,
    as it is the case in (EM)3 [199]. Specifically, a smart plug is being developed
    to incorporate different sensors to collect consumption and contextual data along
    with a micro-controller to pre-process data, segregate the main consumption signal
    into device specific footprints, and detect abnormal behaviors. This helps in
    improving output, accelerating data processing and saving bandwidth [200]. • P2.
    Fog computing platforms: stand for decentralized computational infrastructures,
    where data pre-processing, computing, storage and analysis are conducted in the
    layer located between the data collection devices and the cloud [201]. In this
    line, the computational ability of the anomaly detection solution is carried out
    close to both the data recording devices and the cloud, in which data are produced
    and handled [202]. • P3. Cloud computing platforms: concern the cases when the
    computing and storage resources are ensured using distant servers, in which the
    end-users deploying the anomaly detection solutions are required to connect them
    through an internet link to be able to execute the anomaly detection algorithms
    [105]. Put differently, the platforms used to implement these algorithms become
    as the access points for running the anomaly detection applications and visualize
    the data held by the servers. The cloud architectures are described by their flexibility,
    which allows the providers to constantly adjust the storage capability and computing
    power to the end-users’ requirements [203]. • P4. Hybrid computing platforms:
    refer to the cases where the computing power is guaranteed by various layers,
    including the cloud, fog and edge as explained in [204]. In this context, based
    on the computing requirement of the anomaly detection solution and the existing
    computing resources, the algorithms could be executed either on the edge and/or
    fog when they need a low computation cost, otherwise they could be implemented
    in the cloud when high computing cost is required [205], [206]. Table 1, presents
    a comparison of several aforementioned anomaly detection frameworks in building
    energy consumption. They are compared with reference to various parameters, such
    as the (i) application scenario, (ii) category, (iii) implemented technique, (iv)
    learning process, (v) computing platform used (or required) to implement the anomaly
    detection algorithm, (vi) privacy preservation, and (vii) sampling rate. This
    helps in easily understanding the properties of each framework and difference
    between existing solutions. 2.5. Example of anomaly detection using AI In order
    to explain how anomalies of energy consumption have been considered in the literature
    and how AI could be used to detect abnormal usage, we present in this section,
    three different scenarios for anomaly detection using (i) AI-based prediction,
    (ii) AI classification of energy micro-moments and occupancy data and (iii) one-class
    classification of energy data. It is worth noting that with the use of AI, it
    becomes possible to detect more advanced kinds of anomalies using other types
    of data, such as occupancy patterns and ambient conditions. Scenario I. Anomaly
    detection using AI-based prediction: In [207], a power consumption dataset is
    provided to validate anomaly detection algorithms. AI tools for predicting future
    energy consumption are combined with a rule-based algorithm for detecting anomalous
    energy consumption. This method relies on using an RNN model to predict energy
    consumption for the next timestamp and then the difference between real and predicted
    consumption is calculated to measure the level of “surprise”. In this regard,
    if a significant gap is detected, either (i) an anomalous energy usage behavior
    has occurred, or (ii) the model has made a mistake. Moving forward, the investigation
    is then continued using a rule-based algorithm and by filtering the abnormalities
    identified by the predictive system with reference to a set of statistical criteria.
    The rule-based algorithm helps in detecting percentile of power consumption for
    each timestamp with regard to the (i) hour, (ii) outside temperature, and (iii)
    type of day (working day vs. holiday). Fig. 4 illustrates an example of anomalies
    detected when analyzing time-series energy consumption. Scenario II. Anomaly detection
    using AI and micro-moment analysis: Download : Download high-res image (914KB)
    Download : Download full-size image Fig. 4. Example of anomaly detection in time-series
    energy consumption using AI-based prediction applied on anomaly detection dataset
    provided in [207]. Download : Download high-res image (749KB) Download : Download
    full-size image Fig. 5. Example of anomaly detection based on DNN and micro-moment
    analysis with reference to energy data and occupancy patterns. These visualization
    plots are derived using DRED dataset (for the case of a television): time-series
    energy consumption traces, and bottom) micro-moment detection scheme based on
    deep learning [54]. In the (EM) 3 framework [54], anomalous energy consumption
    is detected by analyzing energy consumption footprints and occupancy patterns
    using micro-moments analysis. Following, a DNN model is deployed to automatically
    classify each consumption observation as normal or abnormal. Specifically, energy
    consumption samples are clustered into five classes; three of them are named “class
    0: good usage”, “class 1: turn on a device” and “class 2: turn off a device”,
    which represent normal usage; and the other two classes are called “class 3: excessive
    consumption” and “class 4: consumption while outside”, which refer to abnormal
    usage. Fig. 5 illustrates an example of time-series energy traces collected in
    the DRED dataset for the case of a television [208], and the corresponding normal
    and abnormal energy patterns identified using a DNN model and micro-moment analysis.
    Because of occupancy data consideration in the anomaly detection stage, it was
    possible to detect a new consumption anomaly that corresponds to the absence of
    the end-user when the television is on (this abnormality could also be considered
    for other specific appliances, such as the air conditioner, heater, fan, etc.),
    this was not possible using conventional anomaly detection techniques that are
    based only on analyzing energy fingerprints. Scenario III. Anomaly detection using
    one-class classification: Another important anomaly detection solution is based
    on conventional one-class classification, which has been widely utilized in other
    applications. Fig. 6 shows an example of an anomaly detection of energy consumption
    applied on DRED dataset [208] using the one-class autoencoder. It has clearly
    been seen that this scheme divides energy observation into two main classes based
    on the analysis of the energy consumption levels in a new representation space,
    in which the power and time have been normalized [64]. Download : Download high-res
    image (356KB) Download : Download full-size image Fig. 6. Example of anomaly detection
    in time-series energy consumption using autoencoders applied on DRED dataset [208].
    3. Critical analysis and discussion 3.1. Discussion Anomaly detection in building
    energy consumption is of paramount importance to developing powerful energy management
    systems, identifying energy theft attacks, inefficiencies and negligence. However,
    in most cases it is difficult to separate consumption abnormalities from the normal
    usage deviations occurring owing to seasonal changes and variation of personal
    settings (e.g. holidays, family parties, unexpected changes of due new circumstances,
    etc.). Moreover, one of the limitations of available anomaly detection methods
    is related to the fact that diverse unidentified context data, including seasonal
    changes, could impact the power usage of end-users in a manner to be as abnormal
    when existing time-series based anomaly detection techniques are used. In addition,
    a set of important findings can summarized as follows: • AI-based solutions focus
    mainly on developing real-time or near real-time (e.g. at a hourly sampling rate
    or lower) although they can also provide an insight analysis for time long periods
    (e.g. days, weeks, months and years). This is due to the capability of AI to analyze
    big data, especially when high frequency sampling rates are considered and also
    thanks to the IoT devices, smart-meters and smart sensors, which help tremendously
    in collecting accurate data. On the other hand, this represents the main difference
    between actual AI-based anomaly detection techniques and those used twenty or
    thirty years ago, where it was not possible to process data in real-time or near
    real-time. In addition, almost all the reviewed frameworks have focused on the
    analysis of power consumption data either on kWh or Wh. This depends on whether
    the anomaly detection has been conducted at the aggregated-level (using kWh) or
    an appliance-level (using Wh). • Most of existing approaches of anomaly detection
    in energy consumption attempt only to flag out power samples that are remarkably
    higher or lower than usual consumption footprints, as it is the case in other
    applications, such as bank card fraud detection, network intrusion detection and
    electrocardiogram anomaly detection. Unfortunately, this is not the correct case
    to detect anomalous power consumption because the definition of anomaly in energy
    consumption can be quite different, other kinds of anomalies are available and
    their detection requires other information sources, e.g. occupancy patterns, and
    appliance operation data. • By using AI, it becomes possible to develop real-time
    or near real-time energy consumption anomaly detection systems, which could identify
    timely anomalous usage and alert the end-users by sending warnings and notifications.
    Accordingly, recommender systems could then be deployed to help the end-users
    with a better decision-making to reduce their wasted energy through providing
    them with personalized and contextual recommendations. For instance, the EM3 project1
    combines anomaly detection and a recommender system to help end-users in reducing
    their wasted energy using both real-time or near real-time strategies. • According
    to recent works [20], [23], using aggregated-level consumption data is not the
    best way to detect anomalies of energy consumption because they are general and
    cannot provide precise information on the causes of each anomaly. Therefore, using
    appliance-level data generated either by sub-meters or using NILM systems is more
    appropriate since this helps in detecting the anomalies of each appliance [22],
    [209]. • In some cases, the entirety of a given power consumption behavior could
    be considered as abnormal and not only some specific observations, which make
    it difficult to detect the exact anomalous parts. Therefore, this requires comparing
    current consumption footprints with the past and ideal consumption cycles and
    not only using outlier detection algorithms, which can detect the anomalies at
    the sample level. • In terms of the effectiveness of existing methods, although
    unsupervised anomaly detection is easy to implement since it does not require
    annotated datasets to learn the anomalies, it presents serious drawbacks because
    it can only detect one kind of anomalies, which is related to excessive consumption.
    This is also the same with ensemble methods and feature extraction-based techniques.
    In contrast, supervised methods are not very popular as unsupervised ones as they
    require using labeled datasets to learn the abnormalities. However, using methods
    pertaining to this category allows to detect other types of anomalies. This is
    because they could be defined a priori by human experts using training data collected
    from different sources, e.g. consumption footprints, occupancy patterns, indoor
    conditions and appliance operation parameters. • In terms of the computing resources,
    most of the deep learning based anomaly detection frameworks require high-performance
    computing capabilities to conduct the learning process. Therefore, most of them
    use cloud computing to integrate and manage large datasets. While for conventional
    machine learning based anomaly detection, edge and fog computing have been successfully
    used in various frameworks and applications. • Privacy preservation: developing
    anomaly detection systems to promote energy saving in buildings is of paramount
    importance at all levels of the society. This can be performed using local and
    temporal fine-grained records of power consumption fingerprints, occupancy patterns
    and ambient conditions to identify abnormalities and unnecessary power consumption
    [210]. Unfortunately, using this kind of fine-grained records enables disclosing
    information on the presence of the end-users based on their energy usage footprints.
    In this context, we have noticed that the privacy preservation has been ignored
    or not reported in most of the anomaly detection frameworks, only very few have
    tried to touch on this issue [197], [198]. 3.2. Relevance of AI-based anomaly
    detection techniques The relevance and robustness of AI-based anomaly detection
    does not rely only on the accuracy of detecting anomalous energy usage, but also
    on the type and number of the consumption abnormalities that could be detected.
    In this regard, it was clear that most of the unsupervised anomaly detection techniques
    (i.e. clustering, one-class classification and dimensionality reduction) could
    detect only one type of energy usage anomalies, which corresponds to excessive
    energy consumption. This is because they are based on identifying rare consumption
    observations or outliers, which raise suspicions by differing considerably from
    the majority of the consumption footprints. In addition, they only analyze energy
    consumption data without considering other relevant factors that impact energy
    usage, such as occupancy, ambient conditions and users’ preferences. On the other
    hand, supervised anomaly detection presents more advantages since they can be
    utilized to detect different kinds of energy consumption abnormalities by considering
    the impact of the presence/absence of end-users, ambient conditions, outdoor weather
    data and users’ preferences on energy usage [22], [64]. This was possible through
    the use of rule-based algorithms to define abnormal consumption and annotate multi-modal
    datasets. In this context, deep anomaly detection techniques that are based on
    adopting deep learning models presents promising performance and in terms of the
    accuracy of detecting abnormal usage and also because of their capability to process
    and analyze multi-modal data, as described in [19]. Table 2 presents a summary
    of relevant AI-based anomaly detection techniques, including their strengths and
    weaknesses. Table 2. A summary of relevant AI-based anomaly detection techniques,
    including their strengths and weaknesses. Ref. Implemented technique Advantages
    Drawbacks [35] MNN and k-means No need for annotated data Low detection accuracy,
    detection of only clustering excessive consumption [45] OCRF No need for annotated
    data Low detection accuracy, detection of only excessive consumption [54] OCSVM,
    DBSCAN, LOF Detection of Two kinds of anomalies, Absence of annotated data. LOF,
    LDA, IKNN high detection accuracy [60] Autoencoder and RNN No need for annotated
    data Detection of only excessive consumption, low detection performance [62] Variational
    recurrent No need for annotated data Difficulty to assess the performance autoencoder
    [66] CNN and random forest High anomaly detection Analyze only energy consumption
    data, performance high computational cost [67] CNN Capture the abnormal electricity
    Lack of annotated data, detection of excessive usage with a high accuracy consumption,
    high computational cost [77] RNN and negative Predict excessive consumption Low
    detection performance, only excessive selection anomalies consumption is detected
    [81] RNN and quantile High detection performance, no need Detection of only excessive
    consumption, regression for annotated data weak interpretability [85] ANNs and
    ARIMA Anomaly detection and energy usage High training cost, detection of only
    prediction, high detection accuracy excessive consumption [22] LR + rule-based
    algo Low training cost Difficulty to annotate data, low detection accuracy [97]
    Autoregressive prediction Anomaly detection and power usage Low prediction performance,
    detection of only prediction excessive consumption [105] Gaussian distribution
    Low training cost Low detection performance, lack of annotated data, detection
    of excessive consumption [19] SVM, KNN, DT, Detection of Two kinds of anomalies,
    Lack of annotated data EBT, DNN high detection performance [119] GBM Anomaly detection
    and power usage Detection of only suspicious consumption prediction levels, weak
    interpretability [121] GBM and grid search Low training cost Low detection performance,
    weak interpretability, one type of anomalies is detected [125] Bootstrap aggregation
    High detection performance Difficulty to set the optimal threshold, detection
    of only suspicious consumption level [133] Distance-based approach Low training
    cost Weak interpretability, low detection performance [142] Time-series analysis
    Low training cost Low detection accuracy, detection of only excessive consumption
    [167] DAE Anomaly detection and power usage High computation cost, detection of
    only prediction, high detection accuracy excessive consumption [168] Semi-SVM
    Anomaly detection and power usage Weak interpretability, detection of only prediction
    suspicious consumption levels [184] Rule-based statistical Anomalous appliances
    detection, Low detection accuracy, detection of only model Low training cost excessive
    consumption [197] CNN Privacy-preservation, high detection Detection of only suspicious
    consumption accuracy levels, weak interpretability 3.3. Challenges and limitations
    There are several common and domain-specific challenges and limitations of anomaly
    detection systems in energy consumption, which hinder developing efficient solutions,
    render their implementation costly and limit their widespread. They can be outlined
    in the following points: • Absence of annotated datasets: among the serious pitfalls
    to develop and validate abnormality detection schemes is the absence of annotated
    datasets, which provide labels for both normal and abnormal consumption. Most
    of the supervised algorithms are validated on a small quantity of data, which
    cannot be considered as comprehensive datasets and are not accessible for the
    energy research community. Specifically, repositories that label the events of
    abnormal consumption and their types almost do not exist and its creation is difficult
    and costly [22]. Therefore, creating various datasets for different kinds of buildings
    that reflect real consumption behaviors will help effectively the energy research
    community in testing and improving the detection of consumption abnormalities
    in different application scenarios [211]. • Imbalanced dataset: refers to the
    distribution of anomalies through data classes, i.e. anomalous data might usually
    be the minority amongst the overall dataset. Indeed, the anomaly data are very
    rare in reality, forming together with the major normal data an extreme unbalanced
    set. The class imbalanced characteristic of most of the anomaly detection datasets
    results in a sub-optimality of the algorithms’ performance. Therefore, to deal
    with this issue, some pre-processing techniques are required, among them (i) using
    resampling procedures to oversample the minority classes or undersample the majority
    classes, and (ii) generating synthetic power consumption data [19]. Moreover,
    in other topics, the anomaly classes are generally represented as minor classes,
    but in energy consumption this is not always the case, especially if a high energy
    wasting behavior is observed. In this regards, applying unsupervised anomaly detection
    methods is less efficient. • Definition of anomalies: traditional definition of
    an anomaly signifies that an anomalous observation is an outlier or deviant. However,
    this definition could not be enough to define anomalies in energy consumption
    because other forms of abnormalities could exist, e.g. keeping an appliance on
    (i.e. air conditioner, fan, television, etc.) while end-users are outside, keeping
    windows and doors open when an air conditioner/heating system is switching on,
    which leads to a high power consumption, etc. Therefore, to efficiently detect
    anomalies of energy consumption, it is required to analyze not only the power
    consumption data but also other information sources, including the occupancy patterns,
    ambient conditions, outside weather footprints and appliance operation parameters.
    • Sparse labels: on the one hand, the labels denoting whether an instance is normal
    or anomalous is in many applications time-consuming and prohibitively expensive
    to obtain. This is especially typical for time series data, where the sampling
    frequency could reach 1000 Hz or the time could range over decades, generating
    an enormous amount of data points. On the other hand, anomalous data is often
    not reproducible and fully concluded in reality. • Detecting appliance-level anomalies
    is still not receiving the necessary attention, although it is more important
    than detecting aggregated-level anomalies. In effect, a failure in the electronics
    of an appliance could not only increase energy consumption, but in some cases,
    other kinds of failures may cause new forms of faulty appliances that could be
    fatal, e.g. a faulty device can cause an electrical short that sparks a fire.
    • Concept drift: this phenomenon usually occurs in time series data, where the
    common independent and identically distributed (i.i.d) assumption for machine
    learning models is often violated due to the varying latent conditions [212].
    Since the observations and relations in power consumption data evolve over time,
    they should be analyzed near real-time, otherwise the systems implemented to analyze
    such data rapidly become obsolete over time [213], [214]. In machine learning
    and data mining, this phenomenon is referred to as concept drift. • Absence of
    platforms to reproduce empirical results: one of the main issues of the anomaly
    detection in energy consumption is the absence of platforms for reproducing the
    results of existing solutions. This may hinder the performance comparison between
    existing algorithms and make it difficult to understand the state-of-the-art.
    • Most of the frameworks differentiate between normal or abnormal power observations
    in general through separating them into two principal classes (normal and abnormal)
    without further details. However, in real-world scenarios, there exist different
    kinds of anomalous consumption, e.g. anomalies due to excessive consumption of
    an appliance are different from those due to keeping a door of the refrigerator
    open or those due to the absence of the end-user, as it is demonstrated in [54].
    In this line, without providing the end-user with the nature of anomalies and
    their sources, it is very difficult to trigger a behavioral change and promote
    energy saving. 3.4. Market drivers and barriers The frameworks reviewed in this
    article show that the anomaly detection topic is a promising strategy for a large
    number of services and applications in the energy field. On the other hand, it
    is worth noting that the building energy monitoring market in general, comprises
    a multi-billion USD global opportunity. This market appears to be growing at a
    robust rate, in which the anomaly detection takes a significant part [215]. The
    decision-making of energy saving systems in buildings depends on data, however,
    with the wide use of sub-meters and smart sensors, the data produced is very huge
    which can frequently provoke the loss or misunderstanding of relevant information
    [216]. Various active energy companies and utilities actually involved in providing
    anomaly detection and energy monitoring solutions, markedly illustrate the increased
    importance of this technology to promote energy efficiency. Table 3 summarizes
    a set of commercial anomaly detection of energy and energy management solutions
    developed by different companies, which are used for different kinds of buildings.
    Specifically, it provides a description of each solution, company name, frequency
    of energy monitoring and anomaly detection (real-time or near real-time), country
    and targeted building environments. In spite of the availability of the aforementioned
    solutions, different issues still require answers before enabling a widespread
    deployment of the anomaly detection technology in the energy industry. First and
    foremost, anomaly detection solutions should demonstrate that they could provide
    the scalability, speed and privacy preservation needed for the considered application
    scenarios. Research efforts on distributed consensus algorithms, which are crucial
    to achieving these objectives, are still ongoing, however a solution that combines
    all desired characteristics cannot yet be achieved without significant trade-offs
    [230]. Albeit anomaly detection systems could be installed using existing electric
    infrastructures, another crucial issue of these systems is that they have actually
    high implementation costs. Most of the solutions are built upon the latest machine
    learning methods, which require high-performance computing resources, e.g. using
    cloud platforms. Therefore, this slows down the commercialization of these solutions.
    Moreover, resistance to security attacks resulting from unintentionally inappropriate
    system development or theft attacks are not seriously addressed in most of the
    energy consumption anomaly detection solutions. Table 3. A summary of existing
    AI-based energy monitoring and anomaly detection commercial solutions for buildings.
    Product Manufacturer Description Country Implementation Empty Cell Empty Cell
    Empty Cell Empty Cell environment Enetics SPEED [182] Enetics Faulty appliances
    identification and abnormal USA Public and domestic consumption detection buildings
    In Between [217] Ecoisme Connected to the local Wi-Fi network and provides Poland
    Households consumption statistics via mobile app Informetis [218] Informetis Near
    real-time energy monitoring and analysis using IoT Japan Households and big data
    mining technology Verv Energy [219] Verv Energy Real-time electricity consumption
    monitoring with iOS UK Households and  Android app Neurio [220] Neurio Real-time
    anomaly detection and notification Canada Households (appliances ≥ 400 W) WiBeee
    HOME [221] WiBeee Real-time consumption visualization, anomaly detection Spain
    Households using cloud and energy saving recommendation Smart Impulse [222] Smart
    Impulse Building’s energy consumption identification by end-use France Public
    buildings (lighting, IT, heating, etc.) and anomaly detection Verdigris [223]
    Verdigris Energy consumption monitoring and real-time fault USA Industrial and
    commercial detection buildings Voltaware [224] Voltaware Real-time energy monitoring
    and anomaly detection using UK Commercial, industrial load disaggregation and
    tailored recommendations and domestic buildings HOMEpulse [225] HOMEpulse Real-time
    energy disaggregation and anomaly detection France Households (1–10 s  sampling
    rate) Hive Starter Pack [226] AlertMe Electricity monitoring, appliances control
    using a mobile app UK Households DiG Energy [227] Intelen Near real-time consumption
    monitoring, anomaly detection USA Commercial and domestic End-users education
    about energy efficient practices buildings Hark [228] Harksys Real-time anomaly
    detection and cost saving through UK Residential and public buildings EnerTalk
    [229] ENCORED Energy disaggregation, prediction and abnormal Korea Commercial
    and domestic usage detection buildings 4. Current trends and new perspectives
    After reviewing anomaly detection frameworks, discussing their limitation and
    drawbacks, and describing important findings, it is of utmost importance to describe
    the current trends of this niche and derive the new perspectives that could be
    targeted. This aids the anomaly detection community in understanding the current
    challenges and future opportunities to improve the anomaly detection technology
    of energy consumption in buildings. Fig. 7 summarizes the current trends and new
    perspectives that are identified in this framework. Download : Download high-res
    image (411KB) Download : Download full-size image Fig. 7. List of current trends
    and new perspective of anomaly detection in energy consumption. 4.1. Current trends
    Anomaly detection in energy consumption presents various challenges, which are
    mainly domain-specific. For instance, there is not a unique definition of normal
    versus anomalous consumption and there is inexplicit frontiers that separate normal
    and anomalous behaviors. Moreover, there is an absence of ground-truth data and
    unified metrics that could be deployed to evaluate the performance of anomaly
    detection algorithms. In addition, other data sources could result in triggering
    non conventional energy consumption anomalies, such as: presence/absence of end-users,
    opening of windows/doors when some specific appliances are on. To that end, this
    section discusses a set of current trends that should be considered to enhance
    the anomaly detection technology for energy saving applications. 4.1.1. Considering
    other data sources In traditional anomaly detection schemes deployed for energy
    consumption, the anomalies are generally detected using only power consumption
    data gleaned from the main circuit or from individual devices, without paying
    any attention to other factors that can affect the consumption. However, in order
    to conduct an accurate anomaly detection, all the data that impact power consumption
    should be gleaned and stored along with energy consumption patterns. Following,
    anomaly detection algorithms should be built with reference to all these data,
    which can be summarized as follows: D1. Appliance parameters: each appliance has
    specific parameter settings that are responsible for its well functioning, such
    as the minimum standby consumption, maximum standby consumption and maximum operation
    time. These parameters are important to define normal and abnormal consumption
    of appliances and further to detect whether an appliance is working perfectly
    or is faulty. D2. Occupancy patterns: the presence or absence of end-users could
    highly affect energy usage and results in some anomalous consumption behaviors
    that are not directly linked to excessive consumption of appliances. For example,
    turning on an air conditioner, television, fan or desktop when end-users are absent
    should be considered as an abnormal consumption behavior. To that end, recording
    occupancy data allows detecting unconventional anomalous consumption behaviors.
    D3. Ambient conditions: energy consumption could be extremely impacted by indoor
    conditions, such as the temperature, humidity and luminosity since the operation
    of some appliances depends mainly on these factors (e.g. air conditioners, heating
    systems, fans, light lamps, etc.). Therefore, collecting this kind of data aids
    in capturing abnormal energy consumption. 4.1.2. Non-intrusive anomaly detection
    Starting from the advantage of NILM as a good alternative to sub-metering for
    collecting itemized billing, its use for detecting appliance-specific anomalies
    is very appreciated. Specifically, using NILM will remove the need to install
    individual sub-meters for each appliance and hence helps in significantly reducing
    the cost of anomaly detection solutions [18], [231]. The use of NILM to detect
    abnormal consumption results in the development of a new kind of non-intrusive
    anomaly detection systems [232]. In [20], [233], the authors have attempted to
    investigate if device-specific consumption fingerprints detected using NILM could
    be utilized directly to identify anomalous consumption behaviors and to what extent
    this could impact the accuracy of the identification. Accordingly, even though
    the performance of NILM to identify abnormal consumption is not yet as accurate
    as using sub-metering feedback, its performance could be further improved to allow
    a robust identification of faulty behavior. Moving forward, more effort should
    be put in this direction to develop non-intrusive anomaly detection of sufficient
    fidelity without the need to install additional sub-meters [23], [234]. 4.1.3.
    Collection of annotated datasets As mentioned previously, the absence of annotated
    datasets impedes the development of power anomaly detection solutions. To that
    end, greater effort should be put to collect and annotate power consumption datasets
    at different building environments (households, workplaces, public buildings,
    and industrial buildings), and further to share them publicly. This can help researchers
    to speed up the process of testing and validating their algorithms. In this context,
    the authors in [19] launch two new datasets for anomaly detection. The former,
    called Qatar university dataset (QUD) is collected in an energy lab and offers
    the consumption of four appliance categories along with the occupancy patterns
    for a period of three months. While the latter, named power consumption simulated
    dataset (PCSiD), produces consumption fingerprints of six devices and occupancy
    data for a period of two years. Both datasets provide power consumption footprints
    with their associated labels, where the overall data is split into five consumption
    classes. Three of them represent normal consumption classes, they are called “good
    consumption”, “turn on device” and “turn off device”, while the two remaining
    classes refer to anomalous consumption groups, which are defined as “excessive
    consumption” and “consumption while outside”. Fig. 8 resumes the assumption and
    labeling process of micro-moment classes, which is applied in QUD and PCSiD.2
    Download : Download high-res image (333KB) Download : Download full-size image
    Fig. 8. Micro-moments assumption and labeling used in [19] to cluster normal and
    abnormal energy consumption data using a rule-based algorithm. 4.1.4. Unified
    metrics to measure the performance In addition to what has been presented and
    based on analyzing the state-of-the-art, it is worth mentioning that there is
    no unified metrics and schemes to evaluate the performance of the anomaly detection
    algorithms. By contrast, a fair comparison between different anomaly detection
    approaches should be conducted using an ensemble of standard metrics, and should
    be performed under the same conditions, e.g. using the same dataset including
    appliance fingerprints collected at the same sampling rate [22]. 4.2. New perspectives
    Recently, governments, end-users, utility companies and energy providers pay a
    significant interest to the anomaly detection technology as a sustainable solution
    that could help in achieving the energy efficiency targets. In this section, we
    provide a general overview of new perspectives in anomaly detection in energy
    consumption. 4.2.1. Explainable deep anomaly detection Deep learning based anomaly
    detection solutions receive an increasing attention in current frameworks. However,
    despite their good performance, the black-box property of deep learning models
    represents a disadvantage in practical implementation [235]. Particularly, in
    energy consumption anomaly detection schemes, explanations of abnormalities detected
    using deep learning are critical. To that end, developing deep learning based
    abnormality detection techniques providing explanations why a power consumption
    observation/event is abnormal supports end-users/experts in focusing their investigations
    on the very crucial abnormalities and can boost their trust in the adopted solutions
    [236], [237]. For instance, one important orientation could be through developing
    a novel generation of explainable deep one-class learning models to effectively
    detect different kinds of energy consumption anomalies [238]. Specifically, this
    category of models helps in (i) learning a mapping to concentrate normal consumption
    observations in a feature space, (ii) pushing abnormal patterns to be mapped away,
    and (iii) providing appropriate explanations for the anomalies detected, or more
    exactly, a human-readable prescription presenting helpful information on the causes
    that have led to the anomaly. Moreover, this enables generating tailored recommendations
    endorsing end-users to reducing their wasted energy and energy providers to detecting
    non-technical losses through the use of explainable recommender systems (RS) [239].
    4.2.2. Deep anomaly detection on the edge Deep learning is one of the promising
    solutions to implement powerful anomaly detection solutions, however, a couple
    of years ago, it had been pretended that deep learning could just be implemented
    on high-end computing platforms, while the training/inference is conducted at
    the edge and carried out by edge servers, gateways or data centers. It had been
    a legitimate presumption at that period since the tendency was through the distribution
    of computing resources among the clouds and the edge serves. However, this situation
    is changed completely currently owing to recent R&D achievements performed by
    academic and industrial partners [240]. Accordingly, the alternative considers
    the use of novel microcontrollers that include integrated machine learning accelerators.
    This could bring machine learning and specifically deep learning to the edge devices.
    The latter could not just execute machine learning algorithms, but they do that
    while consuming very low power and they need to connect to cloud just if required.
    Overall, this kind of microcontroller with embedded machine learning accelerators
    provides promising opportunities to offering computation capability for energy
    sub-meters and sensors collecting ambient conditions (i.e. temperature, humidity
    and luminosity), which gather data to enable various IoT applications [241]. On
    the other side, the edge is widely regarded as the furthest point in any IoT network
    that could be an advanced gateway (or edge server). Furthermore, it terminates
    at the sub-meters/sensors near the end-user. Thus, placing more analytical power
    near the end-user has become rational, where microcontrollers could be very convenient.
    Explicitly, this allows the inference and eventually the training, to be performed
    on tiny and resource-constrained low-power devices, instead of the large computing
    platforms (e.g. desktops, workstations, etc.) or the cloud. It is worth noting
    that to implement deep learning models, their size needs to be reduced in order
    to adapt the moderate computing, storage, and bandwidth resources of such devices,
    while maintaining the essential functionality and accuracy. Fig. 9 illustrates
    an example of the anomaly detection solution embedded on a microcontroller based
    smart plug, which is under development in the (EM) 3 project [242]. Download :
    Download high-res image (577KB) Download : Download full-size image Fig. 9. Example
    of an edge-based anomaly detection solution used to develop a novel smart plug
    in the (EM) 3 framework. 4.2.3. Deep reinforcement learning Reinforcement learning
    is a promising topic of AI that has received a significant attention recently.
    Its concept is related to comprehending the human decision-making procedure before
    developing algorithms for enabling agents to determine the proper anomaly behavior
    using trial-and-error in parallel with the reception of feedback form of reward
    power consumption signals [243]. In this regard, deep reinforcement learning (DRL)
    is then proposed as a merge of deep learning and reinforcement learning to detect
    more complex consumption anomalies. Detecting such abnormalities involves handling
    high-dimensional consumption patterns and environmental conditions, uncertainties
    of the agent’s observations and sparse reward power consumption signatures. DRL
    techniques have been proposed lately to resolve a broad variety of issues, including
    detecting abnormalities video surveillance, traffic management and anomaly detection
    [244], [245], communication and networking [246] and energy consumption prediction
    [247]. Overall, DRL shows promising opportunities to resolve effectively the problem
    of energy consumption anomaly detection since the latter is considered as a decision-making
    task. Following, an agent is designed to learn from the consumption and environmental
    data via a continuous interaction with them and reception of rewards for detected
    anomalies, i.e. the process is similar to the natural human learning via their
    experiences. 4.2.4. Multimodal anomaly visualization As explained previously,
    the capability to interpreting anomalous and normal power consumption behaviors
    is of utmost importance since the essential intrinsic challenges in the abnormality
    detection issue are mainly related to (i) the absence of obvious boundaries between
    anomalous and normal consumption observations and (ii) the complexity to obtain
    annotated power consumption datasets to train and verify developed solutions.
    To that end, the knowledge and experience of human experts are highly esteemed
    to judge the consumption scenarios. A subjective, comprehensive and interactive
    visualization of power consumption patterns and resulted analytic is hence greatly
    helpful to support the interpretation and facilitate an optimal decision-making.
    In this context, great attention has been devoted recently to using innovative
    visualization tools and visual analysis methods to detect anomalous data in other
    research fields, such as the spreading of rumors on social media [248] and user
    behavior [249], [250]. In this regard, using visualization and interactivity for
    detecting anomalous power consumption behaviors and supporting end-users’ interpretability
    and interactivity represent a promising research direction, especially to understand
    sense-making of anomalous consumption footprints and explain why an anomaly occurs.
    For instance, novel visualization plots are designed in the (EM) 3 framework to
    portray anomalous consumption patterns using a scatter plot, in which two kind
    of anomalies, i.e. “excessive consumption” and “consumption without the presence
    of the end-user” along with normal data are traced over the day time. Furthermore,
    another notable visualization plot developed in (EM) 3 , which could provide end-users
    with consumption analytics and anomaly detection capabilities at an appliance-level
    is the stacked bar [251]. It enables to select devices and stack various models
    of the same device altogether (e.g. televisions from distinct brands). Visualizing
    multi-level power consumption could help end-users in effectively detecting anomalies
    and faulty devices, and hence could allow them to perform better decision-making
    towards reducing wasted energy [252]. Fig. 10 portrays our perception of a multimodal
    visualization based anomaly detection of energy consumption, in which visualization
    feedback (either at the aggregated level or the appliance level) could be used
    to improve the accuracy of anomaly detection. Download : Download high-res image
    (433KB) Download : Download full-size image Fig. 10. A novel architecture of visualization
    based anomaly detection in energy consumption to (i) improve the accuracy of detected
    anomalies, and (ii) help end-users in comprehending their energy consumption footprints.
    4.2.5. Platforms for reproducible research Despite the advance achieved in developing
    anomaly detection methods for energy consumption, principally, three aspects affect
    reproducibility, and thus a fair and experimental comparison of anomaly detection
    algorithms: (i) it is difficult to evaluate the generality anomaly detection techniques
    as most of the frameworks are generally assessed on a unique dataset, (ii) there
    is an absence of frameworks comparing existing solutions under the same conditions,
    because of the lack of available open-source anomaly detection datasets and (iii)
    distinct and standardized assessment criteria are used in the state-of-the-art
    with regard to the considered scenario [253]. To overcome this issue, there is
    an urgent need to release an open source anomaly detection toolkit, which includes
    challenging energy consumption datasets and existing anomaly detection algorithms.
    This will allow a fair and easy comparison of anomaly detection algorithms in
    a reproducible manner. Furthermore, this will support the foundations for future
    anomaly detection competitions [254]. 4.2.6. Privacy-preserving machine learning
    The wide use of machine learning methods for anomaly detection in energy consumption
    is actually limited by the lack of open-access anomaly detection datasets to train
    and validate algorithms, due to strict legal and ethical requirements to protect
    end-user privacy. Aiming at preserving end-user privacy while promoting scientific
    research while using power consumption datasets, implementing novel approaches
    for federated, secure and privacy-preserving machine learning is an urgent need.
    In this context, removing private information (anonymization) and replacing of
    vulnerable inputs with artificially produced ones while permitting a reattribution
    based on a look up table (pseudonymization) are among the solutions that could
    be targeted [255]. Furthermore, using federated machine learning, which helps
    in training algorithms over various decentralized edge-devices/servers holding
    local power consumption patterns without sharing them seems very promising for
    anomaly detection in energy consumption [256]. 4.2.7. Explainable RS and the COVID-19
    pandemic Power consumption in buildings has been completely changed in the COVID-19
    pandemic due to the constraints on movement. This has widely triggered remote
    working and e-learning, and hence has shifted activities and energy usage to domestic
    residents [257]. Therefore, the need for smart solutions to detect energy consumption
    anomalies with reference to the actual situation and other changes that could
    be occurred at any time is a current challenge [258]. To that end, the use of
    RS for supporting human decision making has recently received increased interest
    [259], [260]. However, with the aim of increasing the end-user trust and improving
    the acceptance of the generated recommendations, these systems should provide
    explanations [261]. In this context, developing mechanisms for explainable and
    persuasive energy consumption recommendations that could be tailored based on
    the end-user preferences, habits and current circumstances will promptly reduce
    wasted energy and promote energy saving [262]. Specifically, the explanations
    could justify the reasons for recommending each energy efficiency act [263]. On
    the other hand, the persuasiveness of fact-based explanations could be improved
    using persuasive and incentive aspects, such as emphasizing ecological impacts
    and economical saving benefits. Fig. 11 illustrates a general flowchart of an
    explainable energy RS proposed in the (EM)3 framework [4]. Moreover, it is worth
    noting that explainable RS are much appropriate to unexpected energy consumption
    situations (e.g. the COVID-19 pandemic) since the recommendations could be generated
    in real-time in addition to providing the end-user with more details (using contextual
    data) on each recommended action to increase its acceptance [264]. Download :
    Download high-res image (452KB) Download : Download full-size image Fig. 11. Example
    of the flowchart of an energy saving system based on the combination of anomaly
    detection and RS, in which the output of the anomaly detection module serves as
    an input for the RS to help end-users in correcting their energy consumption behaviors.
    5. Conclusion In this article, a systemic and technically-informed survey of anomaly
    detection methods in building energy consumption has been presented. A taxonomy
    that classifies these approaches with reference to different aspects has been
    presented, such as artificial intelligence models, application scenarios, detection
    level and computing platforms. To conclude, anomaly detection strategies can evidently
    benefit energy saving systems, energy providers, end-users and governments via
    reducing wasted consumption and energy costs. Specifically, they provide insight
    information on abnormal consumption behavior, anomalous appliances, non-technical
    loss and electricity theft cyberattacks, but most significantly, anomaly detection
    systems offer smart and powerful solutions for promoting energy saving. They also
    play a major role in the energy monitoring market. We have showed that the majority
    of anomaly detection solutions in energy consumption are still in their nascence.
    To promote their widespread utilization and maturity, a set of challenges and
    limitations should be overcome, among them the lack of annotated datasets, absence
    of the reproducibility platforms, and the lack of standard metrics to assess the
    performance developed solutions. On the other hand, energy consumption is impacted
    by other factors such as, occupancy (presence/absence of the end-user), ambient
    conditions, outdoor temperatures and end-user’s preferences. Therefore, it is
    of utmost importance to consider these data to develop powerful and reliable anomaly
    detection models, which could detect more advance kinds of abnormal energy usage.
    All in all, a significant research effort should be made in the near future to
    confront the aforementioned issues and improve the quality of anomaly detection
    systems. In addition, further investigations are still ongoing in future directions,
    which could permit developing power anomaly detection systems in terms of the
    scalability, decentralization, low power consumption, easy implementation and
    privacy preservation. Finally, we believe that more research contributions, projects
    and collaborations with industrial partners should be performed to help anomaly
    detection technology reach its entire potential, proving its commercial feasibility
    and facilitating its mainstream adoption in residential buildings. Declaration
    of Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgments This paper was made possible by National
    Priorities Research Program (NPRP) grant No. 10-0130-170288 from the Qatar National
    Research Fund (a member of Qatar Foundation). The statements made herein are solely
    the responsibility of the authors. Open Access funding provided by the Qatar National
    Library References [1] Himeur Y., Alsalemi A., Bensaali F., Amira A., Sardianos
    C., Varlamis I., et al. On the applicability of 2d local binary patterns for identifying
    electrical appliances in non-intrusive load monitoring Arai K., Kapoor S., Bhatia
    R. (Eds.), Springer International Publishing, Cham (2021), pp. 188-205 CrossRefView
    in ScopusGoogle Scholar [2] Varlamis I., Sardianos C., Dimitrakopoulos G., Alsalemi
    A., Himeur Y., Bensaali F., et al. Reshaping consumption habits by exploiting
    energy-related micro-moment recommendations: a case study Communications in computer
    and information science, Springer International Publishing, Cham (2020), pp. 1-22
    Google Scholar [3] Sardianos C., Varlamis I., Dimitrakopoulos G., Anagnostopoulos
    D., Alsalemi A., Bensaali F., et al. Rehab-c: recommendations for energy habits
    change Future Gener Comput Syst, 112 (2020), pp. 394-407 View in ScopusGoogle
    Scholar [4] Sardianos C., Varlamis I., Dimitrakopoulos G., Anagnostopoulo D.,
    Alsalemi A., Himeur Y., et al. The emergence of explainability of intelligent
    systems: Delivering explainable and personalised recommendations for energy efficiency
    Int J Intell Syst (2020), pp. 1-22 Google Scholar [5] Rau H., Moran P., Manton
    R., Goggins J. Changing energy cultures? household energy use before and after
    a building energy efficiency retrofit Sustain Cities Soc, 54 (2020), Article 101983
    View in ScopusGoogle Scholar [6] Ngarambe J., Yun G.Y., Santamouris M. The use
    of artificial intelligence (ai) methods in the prediction of thermal comfort in
    buildings: energy implications of ai-based thermal comfort controls Energy Build,
    211 (2020), Article 109807 View in ScopusGoogle Scholar [7] Himeur Y., Elsalemi
    A., Bensaali F., Amira A. Efficient multi-descriptor fusion for non-intrusive
    appliance recognition The IEEE international symposium on circuits and systems
    (ISCAS) (2020), pp. 1-5 CrossRefGoogle Scholar [8] Pham A.-D., Ngo N.-T., Ha Truong
    T.T., Huynh N.-T., Truong N.-S. Predicting energy consumption in multiple buildings
    using machine learning for improving energy efficiency and sustainability J Clean
    Prod, 260 (2020), Article 121082 View in ScopusGoogle Scholar [9] Luo X., Oyedele
    L.O., Ajayi A.O., Akinade O.O. Comparative study of machine learning-based multi-objective
    prediction framework for multiple building energy loads Sustain Cities Soc, 61
    (2020), Article 102283 View in ScopusGoogle Scholar [10] Himeur Y., Alsalemi A.,
    Al-Kababji A., Bensaali F., Amira A. Data fusion strategies for energy efficiency
    in buildings: overview, challenges and novel orientations Inf Fusion, 64 (2020),
    pp. 99-120 View in ScopusGoogle Scholar [11] Alsalemi A., Sardianos C., Bensaali
    F., Varlamis I., Amira A., Dimitrakopoulos G. The role of micro-moments: A survey
    of habitual behavior change and recommender systems for energy saving IEEE Syst
    J, 13 (3) (2019), pp. 3376-3387 CrossRefView in ScopusGoogle Scholar [12] fei
    Chen C., Zarazua de Rubens G., Xu X., Li J. Coronavirus comes home? energy use,
    home energy management, and the social-psychological factors of covid-19 Energy
    Res Soc Sci, 68 (2020), Article 101688 Google Scholar [13] Magazzino C., Mele
    M., Schneider N. The relationship between air pollution and covid-19-related deaths:
    an application to three french cities Appl Energy, 279 (2020), Article 115835
    View in ScopusGoogle Scholar [14] Brlisauer M., Goette L., Jiang Z., Schmitz J.,
    Schubert R. Appliance-specific feedback and social comparisons: evidence from
    a field experiment on energy conservation Energy Policy, 145 (2020), Article 111742
    Google Scholar [15] Himeur Y., Elsalemi A., Bensaali F., Amira A. Improving in-home
    appliance identification using fuzzy-neighbors-preserving analysis based QR-decomposition
    International congress on information and communication technology (ICICT) (2020),
    pp. 1-8 CrossRefGoogle Scholar [16] Himeur Y., Alsalemi A., Bensaali F., Amira
    A. Robust event-based non-intrusive appliance recognition using multi-scale wavelet
    packet tree and ensemble bagging tree Appl Energy, 267 (2020), Article 114877
    View in ScopusGoogle Scholar [17] Elsalemi A., Himeur Y., Bensaali F., Amira A.
    Appliance-level monitoring with micro-moment smart plugs The fifth international
    conference on smart city applications (SCA) (2020), pp. 1-5 Google Scholar [18]
    Rashid H., Singh P. Monitor: An abnormality detection approach in buildings energy
    consumption 2018 IEEE 4th international conference on collaboration and internet
    computing (CIC) (2018), pp. 16-25 CrossRefView in ScopusGoogle Scholar [19] Himeur
    Y., Alsalemi A., Bensaali F., Amira A. A novel approach for detecting anomalous
    energy consumption based on micro-moments and deep neural networks Cogn Comput,
    12 (6) (2020), pp. 1381-1401 CrossRefView in ScopusGoogle Scholar [20] Rashid
    H., Singh P., Stankovic V., Stankovic L. Can non-intrusive load monitoring be
    used for identifying an appliance’s anomalous behaviour? Appl Energy, 238 (2019),
    pp. 796-805 View in ScopusGoogle Scholar [21] Wang A., Lam J.C., Song S., Li V.O.,
    Guo P. Can smart energy information interventions help householders save electricity?
    a svr machine learning approach Environ Sci Policy, 112 (2020), pp. 381-393 View
    in ScopusGoogle Scholar [22] Gaur M., Makonin S., Bajić I.V., Majumdar A. Performance
    evaluation of techniques for identifying abnormal energy consumption in buildings
    IEEE Access, 7 (2019), pp. 62721-62733 CrossRefView in ScopusGoogle Scholar [23]
    Rashid H., Stankovic V., Stankovic L., Singh P. Evaluation of non-intrusive load
    monitoring algorithms for appliance-level anomaly detection ICASSP 2019 - 2019
    IEEE international conference on acoustics, speech and signal processing (ICASSP)
    (2019), pp. 8325-8329 CrossRefView in ScopusGoogle Scholar [24] Kumar K.S.A.,
    Chacko A.M.M.O. Clustering algorithms for intrusion detection: A broad visualization,
    ICTCS ’16, 9781450339629, Association for Computing Machinery, New York, NY, USA
    (2016) Google Scholar [25] Ariyaluran Habeeb R.A., Nasaruddin F., Gani A., Amanullah
    M.A., Abaker Targio Hashem I., et al. Clustering-based real-time anomaly detection—A
    breakthrough in big data technologies Trans Emerg Telecommun Technol (2019), pp.
    1-27 Google Scholar [26] Vanem E., Brandster A. Unsupervised anomaly detection
    based on clustering methods and sensor data on a marine diesel engine J Mar Eng
    Technol (2019), pp. 1-18 Google Scholar [27] Verma K., Singh B., Dixit A. A review
    of supervised and unsupervised machine learning techniques for suspicious behavior
    recognition in intelligent surveillance system Int J Inf Technol (2019), pp. 1-14
    Google Scholar [28] Ahmed M., Mahmood A.N., Islam M.R. A survey of anomaly detection
    techniques in financial domain Future Gener Comput Syst, 55 (2016), pp. 278-288
    View in ScopusGoogle Scholar [29] Feng B., Li Q., Pan X., Zhang J., Guo D. Groupfound:
    An effective approach to detect suspicious accounts in online social networks
    Int J Distrib Sens Netw, 13 (7) (2017), Article 1550147717722499 Google Scholar
    [30] Pastore V., Zimmerman T., Biswas S., Bianco S. Annotation-free learning of
    plankton for classification and anomaly detection Sci Rep, 10 (2020), pp. 1-15
    CrossRefGoogle Scholar [31] Arjunan P., Khadilkar H.D., Ganu T., Charbiwala Z.M.,
    Singh A., Singh P. Multi-user energy consumption monitoring and anomaly detection
    with partial context information Proceedings of the 2nd ACM international conference
    on embedded systems for energy-efficient built environments, BuildSys 15, 9781450339810,
    Association for Computing Machinery, New York, NY, USA (2015), pp. 35-44 CrossRefView
    in ScopusGoogle Scholar [32] Rossi B., Chren S., Buhnova B., Pitner T. Anomaly
    detection in smart grid data: An experience report 2016 IEEE international conference
    on systems, man, and cybernetics (SMC) (2016), pp. 002313-002318 CrossRefGoogle
    Scholar [33] Henriques J., Caldeira F., Cruz T., Simes P. Combining K-means and
    xgboost models for anomaly detection using log datasets Electronics, 9 (7) (2020),
    pp. 1-16 View in ScopusGoogle Scholar [34] Izakian H., Pedrycz W. Anomaly detection
    in time series data using a fuzzy c-means clustering 2013 joint IFSA world congress
    and NAFIPS annual meeting (IFSA/NAFIPS) (2013), pp. 1513-1518 CrossRefView in
    ScopusGoogle Scholar [35] Yeckle J., Tang B. Detection of electricity theft in
    customer consumption using outlier detection algorithms 2018 1st international
    conference on data intelligence and security (ICDIS) (2018), pp. 135-140 CrossRefView
    in ScopusGoogle Scholar [36] Nychis G., Sekar V., Andersen D.G., Kim H., Zhang
    H. An empirical evaluation of entropy-based traffic anomaly detection IMC ’08,
    9781605583341, Association for Computing Machinery, New York, NY, USA (2008),
    pp. 151-156 CrossRefView in ScopusGoogle Scholar [37] BereziÅski P., Jasiul B.,
    Szpyrka M. An entropy-based network anomaly detection method Entropy, 17 (4) (2015),
    pp. 2367-2408 Google Scholar [38] Shi Z., Li P., Sun Y. An outlier generation
    approach for one-class random forests: An example in one-class classification
    of remote sensing imagery 2016 IEEE international geoscience and remote sensing
    symposium (IGARSS) (2016), pp. 5107-5110 CrossRefView in ScopusGoogle Scholar
    [39] Ruff L., Vandermeulen R., Goernitz N., Deecke L., Siddiqui S.A., Binder A.,
    et al. Deep one-class classification Dy J., Krause A. (Eds.), Proceedings of Machine
    Learning Research, vol. 80, PMLR, Stockholmsmässan, Stockholm Sweden (2018), pp.
    4393-4402 Google Scholar [40] Jakkula V.R., Cook D.J. Detecting anomalous sensor
    events in smart home data for enhancing the living experience. Artificial intelligence
    and smarter living, AAAI Workshops, WS-11-07, AAAI (2011) Google Scholar [41]
    Chalapathy R., Menon A.K., Chawla S. Anomaly detection using one-class neural
    networks (2018) arXiv:1802.06360 Google Scholar [42] Oza P., Patel V.M. One-class
    convolutional neural network IEEE Signal Process Lett, 26 (2) (2019), pp. 277-281
    CrossRefView in ScopusGoogle Scholar [43] Zhang M., Wu J., Lin H., Yuan P., Song
    Y. The application of one-class classifier based on cnn in image defect detection
    Procedia Comput Sci, 114 (2017), pp. 341-348 complex Adaptive Systems Conference
    with Theme: Engineering Cyber Physical Systems, CAS October 30 November 1, 2017,
    Chicago, Illinois, USA View in ScopusGoogle Scholar [44] Dsir C., Bernard S.,
    Petitjean C., Heutte L. One class random forests Pattern Recognit, 46 (12) (2013),
    pp. 3490-3506 Google Scholar [45] Ghori K., Imran M., Nawaz A., Abbasi R., Ullah
    A., Szathmary L. Performance analysis of machine learning classifiers for non-technical
    loss detection J Ambient Intell Humaniz Comput (2020), pp. 1-16, 10.1007/s12652-019-01649-9
    View in ScopusGoogle Scholar [46] Liu F.T., Ting K.M., Zhou Z.-H. Isolation-based
    anomaly detection ACM Trans Knowl Discov Data (TKDD), 6 (1) (2012), pp. 1-39 CrossRefGoogle
    Scholar [47] Huang T., Sethu H., Kandasamy N. A new approach to dimensionality
    reduction for anomaly detection in data traffic IEEE Trans Netw Serv Manag, 13
    (3) (2016), pp. 651-665 View in ScopusGoogle Scholar [48] Valko M., Kveton B.,
    Valizadegan H., Cooper G.F., Hauskrecht M. Conditional anomaly detection with
    soft harmonic functions 2011 IEEE 11th international conference on data mining
    (2011), pp. 735-743 View in ScopusGoogle Scholar [49] Naveen P., Ing W.K., Danquah
    M.K., Sidhu A.S., Abu-Siada A. Cloud computing for energy management in smart
    grid - an application survey IOP Conf Ser: Mater Sci Eng, 121 (2016), Article
    012010 View in ScopusGoogle Scholar [50] Brown C.E. Multiple discriminant analysis
    Springer Berlin Heidelberg, Berlin, Heidelberg (1998), pp. 115-128 CrossRefGoogle
    Scholar [51] Wu J., Zhang X. A pca classifier and its application in vehicle detection
    IJCNN’01. international joint conference on neural networks. Proceedings (Cat.
    No. 01CH37222), Vol. 1, IEEE (2001), pp. 600-604 View in ScopusGoogle Scholar
    [52] Kudo T., Morita T., Matsuda T., Takine T. Pca-based robust anomaly detection
    using periodic traffic behavior 2013 IEEE international conference on communications
    workshops (ICC) (2013), pp. 1330-1334, 10.1109/ICCW.2013.6649443 View in ScopusGoogle
    Scholar [53] Sial A., Singh A., Mahanti A. Detecting anomalous energy consumption
    using contextual analysis of smart meter data Wirel Netw (2019), pp. 1-18. Google
    Scholar [54] Himeur Y., Elsalemi A., Bensaali F., Amira A. Smart power consumption
    abnormality detection in buildings using micro-moments and improved K-nearest
    neighbors Int J Intell Syst (2020), pp. 1-25 CrossRefGoogle Scholar [55] Kamaraj
    K., Dezfouli B., Liu Y. Edge mining on IoT devices using anomaly detection 2019
    Asia-Pacific signal and information processing association annual summit and conference
    (APSIPA ASC) (2019), pp. 33-40 CrossRefView in ScopusGoogle Scholar [56] Alheeti
    K.M., Gruebler A., McDonald-Maier K. Application of multiple discriminant analysis
    (mda) as a credit scoring and risk assessment model Int J Emerging Mark, 6 (2011),
    pp. 132-147 Google Scholar [57] Chijoriga M. Application of multiple discriminant
    analysis (MDA) as a credit scoring and risk assessment model Int J Emerging Mark,
    6 (2011), pp. 132-147 Google Scholar [58] Kiran B.R., Thomas D.M., Parakkal R.
    An overview of deep learning based methods for unsupervised and semi-supervised
    anomaly detection in videos J Imaging, 4 (2) (2018), pp. 1-25 View in ScopusGoogle
    Scholar [59] Wang R., Nie K., Wang T., Yang Y., Long B. Deep learning for anomaly
    detection, WSDM ’20, Association for Computing Machinery, New York, NY, USA (2020),
    pp. 894-896 CrossRefView in ScopusGoogle Scholar [60] Weng Y., Zhang N., Xia C.
    Multi-agent-based unsupervised detection of energy consumption anomalies on smart
    campus IEEE Access, 7 (2019), pp. 2169-2178 CrossRefView in ScopusGoogle Scholar
    [61] Wang X., Zhao T., Liu H., He R. Power consumption predicting and anomaly
    detection based on long short-term memory neural network 2019 IEEE 4th international
    conference on cloud computing and big data analysis (ICCCBDA) (2019), pp. 487-491
    CrossRefView in ScopusGoogle Scholar [62] Pereira J., Silveira M. Unsupervised
    anomaly detection in energy time series data using variational recurrent autoencoders
    with attention 2018 17th IEEE international conference on machine learning and
    applications (ICMLA) (2018), pp. 1275-1282 CrossRefView in ScopusGoogle Scholar
    [63] Yuan Y., Jia K. A distributed anomaly detection method of operation energy
    consumption using smart meter data 2015 international conference on intelligent
    information hiding and multimedia signal processing (IIH-MSP) (2015), pp. 310-313
    CrossRefView in ScopusGoogle Scholar [64] Himeur Y., Elsalemi A., Bensaali F.,
    Amira A. Detection of appliance-level abnormal energy consumption in buildings
    using autoencoders and micro-moments The fifth international conference on big
    data and internet of things (BDIoT) (2021), pp. 1-13 View in ScopusGoogle Scholar
    [65] Munir M., Siddiqui S.A., Chattha M.A., Dengel A., Ahmed S. Fusead: Unsupervised
    anomaly detection in streaming sensors data by fusing statistical and deep learning
    models Sensors, 1424-8220, 19 (11) (2019) Google Scholar [66] Li S., Han Y., Yao
    X., Yingchen S., Wang J., Zhao Q., Pai P.-F. Electricity theft detection in power
    grids with deep learning and random forests J Electr Comput Eng, 2090-0147, 2019
    (2019), pp. 1-12 Google Scholar [67] Zheng Z., Yang Y., Niu X., Dai H., Zhou Y.
    Wide and deep convolutional neural networks for electricity-theft detection to
    secure smart grids IEEE Trans Ind Inf, 14 (4) (2018), pp. 1606-1615 CrossRefView
    in ScopusGoogle Scholar [68] Tang Z., Chen Z., Bao Y., Li H. Convolutional neural
    network-based data anomaly detection method using multiple information for structural
    health monitoring Struct Control Health Monit, 26 (1) (2019), Article e2296 e2296
    STC-18-0112.R1 CrossRefView in ScopusGoogle Scholar [69] Zhang C., Song D., Chen
    Y., Feng X., Lumezanu C., Cheng W., Ni J., Zong B., Chen H., Chawla N. A deep
    neural network for unsupervised anomaly detection and diagnosis in multivariate
    time series data The thirty-third aaai conference on artificial intelligence (AAAI-19)
    (2018), pp. 1409-1416 Google Scholar [70] Alrawashdeh K., Purdy C. Toward an online
    anomaly intrusion detection system based on deep learning 2016 15th IEEE international
    conference on machine learning and applications (ICMLA) (2016), pp. 195-200 View
    in ScopusGoogle Scholar [71] Choi Y., Lim H., Choi H., Kim I. Gan-based anomaly
    detection and localization of multivariate time series data for power plant 2020
    IEEE international conference on big data and smart computing (BigComp) (2020),
    pp. 71-74 CrossRefView in ScopusGoogle Scholar [72] Sun Y., Yu W., Chen Y., Kadam
    A. Time series anomaly detection based on GAN 2019 sixth international conference
    on social networks analysis, management and security (SNAMS) (2019), pp. 375-382
    Google Scholar [73] Li D., Chen D., Jin B., Shi L., Goh J., Ng S.-K. Mad-gan:
    multivariate anomaly detection for time series data with generative adversarial
    networks Tetko I.V., Kůrková V., Karpov P., Theis F. (Eds.), Artificial neural
    networks and machine learning – ICANN 2019: Text and time series, Springer International
    Publishing, Cham (2019), pp. 703-716 CrossRefView in ScopusGoogle Scholar [74]
    Huang S., Lei K. Igan-ids: an imbalanced generative adversarial network towards
    intrusion detection system in ad-hoc networks Ad Hoc Netw, 105 (2020), Article
    102177 View in ScopusGoogle Scholar [75] Fekri M.N., Ghosh A.M., Grolinger K.
    Generating energy data for machine learning with recurrent generative adversarial
    networks Energies, 13 (1) (2020) Google Scholar [76] Bontemps L., Cao V.L., McDermott
    J., Le-Khac N.-A. Collective anomaly detection based on long short-term memory
    recurrent neural networks Dang T.K., Wagner R., Küng J., Thoai N., Takizawa M.,
    Neuhold E. (Eds.), Future data and security engineering, Springer International
    Publishing, Cham (2016), pp. 141-152 CrossRefView in ScopusGoogle Scholar [77]
    daSilva A., Guarany I.S., Arruda B., Gurjão E.C., Freire R.S. A method for anomaly
    prediction in power consumption using long short-term memory and negative selection
    2019 IEEE international symposium on circuits and systems (ISCAS), 2158-1525 (2019),
    pp. 1-5 Google Scholar [78] Hollingsworth K., Rouse K., Cho J., Harris A., Sartipi
    M., Sozer S., et al. Energy anomaly detection with forecasting and deep learning
    2018 IEEE international conference on big data (Big Data) (2018), pp. 4921-4925
    CrossRefView in ScopusGoogle Scholar [79] Fenza G., Gallo M., Loia V. Drift-aware
    methodology for anomaly detection in smart grid IEEE Access, 7 (2019), pp. 9645-9657
    CrossRefView in ScopusGoogle Scholar [80] Chahla C, Snoussi H, Merghem-Boulahia
    L, Esseghir M. A novel approach for anomaly detection in power consumption data.
    In: 8th international conference on pattern recognition applications and methods,
    Prague, Czech Republic; 2019. Google Scholar [81] Xu C., Chen H. Abnormal energy
    consumption detection for GSHP system based on ensemble deep learning and statistical
    modeling method Int J Refrig, 114 (2020), pp. 106-117 View in ScopusGoogle Scholar
    [82] Chen H., Fei X., Wang S., Lu X., Jin G., Li W., Wu X. Energy consumption
    data based machine anomaly detection 2014 second international conference on advanced
    cloud and big data (2014), pp. 136-142 CrossRefGoogle Scholar [83] Santolamazza
    A., Cesarotti V., Introna V. Anomaly detection in energy consumption for condition-based
    maintenance of compressed air generation systems: an approach based on artificial
    neural networks IFAC-PapersOnLine, 51 (11) (2018), pp. 1131-1136 16th IFAC Symposium
    on Information Control Problems in Manufacturing INCOM 2018 View in ScopusGoogle
    Scholar [84] Ghanbari M., Kinsner W., Ferens K. Anomaly detection in a smart grid
    using wavelet transform, variance fractal dimension and an artificial neural network
    2016 IEEE electrical power and energy conference (EPEC) (2016), pp. 1-6 CrossRefGoogle
    Scholar [85] Wang X., Ahn S.-H. Real-time prediction and anomaly detection of
    electrical load in a residential community Appl Energy, 259 (2020), Article 114145
    View in ScopusGoogle Scholar [86] Mulongo J., Atemkeng M., Ansah-Narh T., Rockefeller
    R., Nguegnang G.M., Garuti M.A. Anomaly detection in power generation plants using
    machine learning and neural networks Appl Artif Intell, 34 (1) (2020), pp. 64-79
    CrossRefView in ScopusGoogle Scholar [87] Van Efferen L., Ali-Eldin A.M.T. A multi-layer
    perceptron approach for flow-based anomaly detection 2017 international symposium
    on networks, computers and communications (ISNCC) (2017), pp. 1-6 Google Scholar
    [88] Kammerer K., Hoppenstedt B., Pryss R., Stökler S., Allgaier J., Reichert
    M. Anomaly detections for manufacturing systems based on sensor data—Insights
    into two challenging real-world production settings Sensors, 19 (24) (2019), pp.
    1-18 CrossRefGoogle Scholar [89] Zeng Y., Zhuang J. Construction cosine radial
    basic function neural networks based on artificial immune networks Cao L., Zhong
    J., Feng Y. (Eds.), Advanced data mining and applications, Springer Berlin Heidelberg,
    Berlin, Heidelberg (2010), pp. 134-141 CrossRefView in ScopusGoogle Scholar [90]
    Janakiraman V.M., Nielsen D. Anomaly detection in aviation data using extreme
    learning machines 2016 international joint conference on neural networks (IJCNN)
    (2016), pp. 1993-2000 CrossRefView in ScopusGoogle Scholar [91] Bose S.K., Kar
    B., Roy M., Gopalakrishnan P.K., Basu A. ADEPOS: Anomaly detection based power
    saving for predictive maintenance using edge computing (2018) arXiv:1811.00873
    Google Scholar [92] Imamverdiyev Y., Sukhostat L. Anomaly detection in network
    traffic using extreme learning machine 2016 IEEE 10th international conference
    on application of information and communication technologies (AICT) (2016), pp.
    1-4 Google Scholar [93] Kromanis R., Kripakaran P. Support vector regression for
    anomaly detection from measurement histories Adv Eng Inform, 27 (4) (2013), pp.
    486-495 View in ScopusGoogle Scholar [94] Zhang Y., Chen W., Black J. Anomaly
    detection in premise energy consumption data 2011 IEEE power and energy society
    general meeting (2011), pp. 1-8 Google Scholar [95] Fahim M., Sillitti A. An anomaly
    detection model for enhancing energy management in smart buildings 2018 IEEE international
    conference on communications, control, and computing technologies for smart grids
    (SmartGridComm) (2018), pp. 1-6 CrossRefGoogle Scholar [96] Liu X., Nielsen P.S.
    Scalable prediction-based online anomaly detection for smart meter data Inf Syst,
    77 (2018), pp. 34-47 View in ScopusGoogle Scholar [97] Cui W., Wang H. A new anomaly
    detection system for school electricity consumption data Information, 8 (4) (2017)
    Google Scholar [98] Chou J.-S., Telaga A.S. Real-time detection of anomalous power
    consumption Renew Sustain Energy Rev, 33 (2014), pp. 400-411 View in ScopusGoogle
    Scholar [99] Bacciu D., Lisboa P.J., Sperduti A., Villmann T. Probabilistic modeling
    in machine learning, Springer Berlin Heidelberg, Berlin, Heidelberg (2015), pp.
    545-575 CrossRefView in ScopusGoogle Scholar [100] Roberts E., Bassett B.A., Lochner
    M. Bayesian anomaly detection and classification for noisy data Abraham A., Siarry
    P., Ma K., Kaklauskas A. (Eds.), Intelligent systems design and applications,
    Springer International Publishing, Cham (2021), pp. 426-435 CrossRefView in ScopusGoogle
    Scholar [101] Akouemo H.N., Povinelli R.J. Probabilistic anomaly detection in
    natural gas time series data Int J Forecasting, 32 (3) (2016), pp. 948-956 View
    in ScopusGoogle Scholar [102] Rashidi L., Hashemi S., Hamzeh A. Anomaly detection
    in categorical datasets using Bayesian networks Artificial intelligence and computational
    intelligence, Vol. 7003 (2011), pp. 610-619 CrossRefView in ScopusGoogle Scholar
    [103] Saqaeeyan S., Haj Seyyed Javadi H., Amirkhani H. Anomaly detection in smart
    homes using Bayesian networks KSII Trans Internet Inf Syst, 14 (2020), pp. 1796-1816
    View in ScopusGoogle Scholar [104] Jakkula V., Cook D. Outlier detection in smart
    environment structured power datasets 2010 sixth international conference on intelligent
    environments (2010), pp. 29-33 CrossRefView in ScopusGoogle Scholar [105] Liu
    X., Iftikhar N., Nielsen P.S., Heller A. Online anomaly energy consumption detection
    using lambda architecture Madria S., Hara T. (Eds.), Big data analytics and knowledge
    discovery, Springer International Publishing, Cham (2016), pp. 193-209 View in
    ScopusGoogle Scholar [106] Hock D., Kappes M., Ghita B. Using multiple data sources
    to detect manipulated electricity meter by an entropy-inspired metric Sustain
    Energy Grids Netw, 21 (2020), Article 100290 View in ScopusGoogle Scholar [107]
    Coma-Puig B., Carmona J., Gavaldà R., Alcoverro S., Martin V. Fraud detection
    in energy consumption: A supervised approach 2016 IEEE international conference
    on data science and advanced analytics (DSAA) (2016), pp. 120-129 CrossRefView
    in ScopusGoogle Scholar [108] Janakiram D., Kumar A.V.U.P., Reddy V. A.M. Outlier
    detection in wireless sensor networks using Bayesian belief networks 2006 1st
    international conference on communication systems software middleware (2006),
    pp. 1-6 Google Scholar [109] Chen B., Sinn M., Ploennigs J., Schumann A. Statistical
    anomaly detection in mean and variation of energy consumption Proceedings of the
    2014 22nd international conference on pattern recognition, ICPR 14, IEEE Computer
    Society, USA (2014), pp. 3570-3575 View in ScopusGoogle Scholar [110] Depuru S.S.R.,
    Wang L., Devabhaktuni V. Support vector machine based data classification for
    detection of electricity theft 2011 IEEE/PES power systems conference and exposition
    (2011), pp. 1-8 Google Scholar [111] Amara korba A., El Islem karabadji N. Smart
    grid energy fraud detection using SVM 2019 international conference on networking
    and advanced systems (ICNAS) (2019), pp. 1-6 CrossRefGoogle Scholar [112] Nagi
    J., Yap K.S., Tiong S.K., Ahmed S.K., Mohammad A.M. Detection of abnormalities
    and electricity theft using genetic support vector machines TENCON 2008 - 2008
    IEEE region 10 conference (2008), pp. 1-6 CrossRefGoogle Scholar [113] Zhang L.,
    Wan L., Xiao Y., Li S., Zhu C. Anomaly detection method of smart meters data based
    on GMM-lda clustering feature learning and PSO support vector machine 2019 IEEE
    sustainable power and energy conference (ISPEC) (2019), pp. 2407-2412 CrossRefView
    in ScopusGoogle Scholar [114] Cody C., Ford V., Siraj A. Decision tree learning
    for fraud detection in consumer energy consumption 2015 IEEE 14th international
    conference on machine learning and applications (ICMLA) (2015), pp. 1175-1179
    CrossRefView in ScopusGoogle Scholar [115] Reif M., Goldstein M., Stahl A., Breuel
    T.M. Anomaly detection by combining decision trees and parametric densities 2008
    19th international conference on pattern recognition (2008), pp. 1-4 CrossRefGoogle
    Scholar [116] Xu X., Liu H., Yao M. Recent progress of anomaly detection Complexity,
    2019 (2019), pp. 1-11 Google Scholar [117] Bahri E., Harbi N., Huu H.N. Approach
    based ensemble methods for better and faster intrusion detection Herrero A., Corchado
    E. (Eds.), Computational intelligence in security for information systems, Springer
    Berlin Heidelberg, Berlin, Heidelberg (2011), pp. 17-24 CrossRefView in ScopusGoogle
    Scholar [118] Zhang J., Wang Z., Meng J., Tan Y., Yuan J. Boosting positive and
    unlabeled learning for anomaly detection with multi-features IEEE Trans Multimed,
    21 (5) (2019), pp. 1332-1344 CrossRefView in ScopusGoogle Scholar [119] Touzani
    S., Granderson J., Fernandes S. Gradient boosting machine for modeling the energy
    consumption of commercial buildings Energy Build, 158 (2018), pp. 1533-1543 View
    in ScopusGoogle Scholar [120] Adhi Tama B., Rhee K.H. An in-depth experimental
    study of anomaly detection using gradient boosted machine Neural Comput Appl,
    31 (2019), pp. 955-965 Google Scholar [121] Albiero B., Santos R., Uyrá E., Vilarino
    R., Silva J., Souza T., et al. Employing gradient boosting and anomaly detection
    for prediction of frauds in energy consumption Anais do XVI encontro nacional
    de inteligência artificial e computacional, SBC, Porto Alegre, RS, Brasil (2019),
    pp. 916-925 CrossRefGoogle Scholar [122] Kim T., Lee D., Choi J., Spurlock A.,
    Sim A., Todd A., et al. Extracting baseline electricity usage using gradient tree
    boosting 2015 IEEE international conference on smart city/socialcom/sustaincom
    (SmartCity) (2015), pp. 734-741 View in ScopusGoogle Scholar [123] Gaikwad D.P.,
    Thool R.C. Intrusion detection system using bagging ensemble method of machine
    learning 2015 international conference on computing communication control and
    automation (2015), pp. 291-295 CrossRefView in ScopusGoogle Scholar [124] Nguyen
    H.V., Ang H.H., Gopalkrishnan V. Mining outliers with ensemble of heterogeneous
    detectors on random subspaces Kitagawa H., Ishikawa Y., Li Q., Watanabe C. (Eds.),
    Database systems for advanced applications, Springer Berlin Heidelberg, Berlin,
    Heidelberg (2010), pp. 368-383 CrossRefView in ScopusGoogle Scholar [125] Araya
    D.B., Grolinger K., ElYamany H.F., Capretz M.A., Bitsuamlak G. An ensemble learning
    framework for anomaly detection in building energy consumption Energy Build, 144
    (2017), pp. 191-206 View in ScopusGoogle Scholar [126] Wun Z., Shi P., Luo D.,
    Luo J. Research on anomaly detection method for electro-data 2019 IEEE sustainable
    power and energy conference (ISPEC) (2019), pp. 477-481 CrossRefView in ScopusGoogle
    Scholar [127] Primartha R., Tama B.A. Anomaly detection using random forest: A
    performance revisited 2017 international conference on data and software engineering
    (ICoDSE) (2017), pp. 1-6 View in ScopusGoogle Scholar [128] Ouyang Z., Sun X.,
    Chen J., Yue D., Zhang T. Multi-view stacking ensemble for power consumption anomaly
    detection in the context of industrial internet of things IEEE Access, 6 (2018),
    pp. 9623-9631 CrossRefView in ScopusGoogle Scholar [129] Lazarevic A., Kumar V.
    Feature bagging for outlier detection Proceedings of the eleventh ACM SIGKDD international
    conference on knowledge discovery in data mining, KDD ’05, 159593135X, Association
    for Computing Machinery, New York, NY, USA (2005), pp. 157-166 CrossRefView in
    ScopusGoogle Scholar [130] Araya D.B., Grolinger K., ElYamany H.F., Capretz M.A.M.,
    Bitsuamlak G. Collective contextual anomaly detection framework for smart buildings
    2016 international joint conference on neural networks (IJCNN) (2016), pp. 511-518
    CrossRefView in ScopusGoogle Scholar [131] Gu X., Akoglu L., Rinaldo A. Statistical
    analysis of nearest neighbor methods for anomaly detection The 33rd conference
    on neural information processing systems (NeurIPS 2019) (2019), pp. 1-17 Google
    Scholar [132] Zhang C., Wang F. Multi-feature fusion based anomaly electro-data
    detection in smart grid 2018 15th international symposium on pervasive systems,
    algorithms and networks (I-SPAN) (2018), pp. 54-59 CrossRefView in ScopusGoogle
    Scholar [133] Yijia T., Hang G. Anomaly detection of power consumption based on
    waveform feature recognition 2016 11th international conference on computer science
    education (ICCSE) (2016), pp. 587-591 View in ScopusGoogle Scholar [134] Tran
    L., Fan L., Shahabi C. Distance-based outlier detection in data streams Proc VLDB
    Endow, 2150-8097, 9 (12) (2016), pp. 1089-1100 CrossRefView in ScopusGoogle Scholar
    [135] Huo W., Wang W., Li W. Anomalydetect: an online distance-based anomaly detection
    algorithm Miller J., Stroulia E., Lee K., Zhang L.-J. (Eds.), Web services–ICWS
    2019, Springer International Publishing, Cham (2019), pp. 63-79 CrossRefView in
    ScopusGoogle Scholar [136] Fan H., Zaïane O.R., Foss A., Wu J. Resolution-based
    outlier factor: Detecting the top-n most outlying data points in engineering data
    Knowl Inf Syst, 0219-1377, 19 (1) (2009), pp. 31-51 CrossRefView in ScopusGoogle
    Scholar [137] Mao W., Cao X., zhou Q., Yan T., Zhang Y. Anomaly detection for
    power consumption data based on isolated forest 2018 international conference
    on power system technology (POWERCON) (2018), pp. 4169-4174 CrossRefView in ScopusGoogle
    Scholar [138] Liu F.T., Ting K.M., Zhou Z. Isolation forest 2008 eighth IEEE international
    conference on data mining (2008), pp. 413-422 View in ScopusGoogle Scholar [139]
    Lee S., Kim H.K. Adsas: comprehensive real-time anomaly detection system Kang
    B.B., Jang J. (Eds.), Information security applications, Springer International
    Publishing, Cham (2019), pp. 29-41 Google Scholar [140] Gao J., Song X., Wen Q.,
    Wang P., Sun L., Xu H. Robusttad: Robust time series anomaly detection via decomposition
    and convolutional neural networks (2020) arXiv:2002.09545 Google Scholar [141]
    Qiu H., Tu Y., Zhang Y. Anomaly detection for power consumption patterns in electricity
    early warning system 2018 tenth international conference on advanced computational
    intelligence (ICACI) (2018), pp. 867-873 View in ScopusGoogle Scholar [142] Petladwala
    M., Ishii Y., Sendoda M., Kondo R. Canonical correlation based feature extraction
    with application to anomaly detection in electric appliances ICASSP 2019 - 2019
    IEEE international conference on acoustics, speech and signal processing (ICASSP)
    (2019), pp. 2737-2741 CrossRefView in ScopusGoogle Scholar [143] Andrysiak T.,
    Saganowski u., Kiedrowski P. Anomaly detection in smart metering infrastructure
    with the use of time series analysis J Sensors, 2017 (2017), pp. 1-15 CrossRefGoogle
    Scholar [144] Ouyang Z., Sun X., Yue D. Hierarchical time series feature extraction
    for power consumption anomaly detection Li K., Xue Y., Cui S., Niu Q., Yang Z.,
    Luk P. (Eds.), Advanced computational methods in energy, power, electric vehicles,
    and their integration, Springer Singapore, Singapore (2017), pp. 267-275 CrossRefView
    in ScopusGoogle Scholar [145] Zyabkina O., Domagk M., Meyer J., Schegner P. A
    feature-based method for automatic anomaly identification in power quality measurements
    2018 IEEE international conference on probabilistic methods applied to power systems
    (PMAPS) (2018), pp. 1-6 CrossRefGoogle Scholar [146] Mookiah L., Dean C., Eberle
    W. Graph-based anomaly detection on smart grid data The thirtieth international
    flairs conference (2017), pp. 1-6 Google Scholar [147] Lipcak P., Macak M., Rossi
    B. Big data platform for smart grids power consumption anomaly detection 2019
    federated conference on computer science and information systems (FedCSIS) (2019),
    pp. 771-780 CrossRefView in ScopusGoogle Scholar [148] Yen S.W., Morris S., Ezra
    M.A., Huat T.J. Effect of smart meter data collection frequency in an early detection
    of shorter-duration voltage anomalies in smart grids Int J Electr Power Energy
    Syst, 109 (2019), pp. 1-8 CrossRefView in ScopusGoogle Scholar [149] Yip S.-C.,
    Tan W.-N., Tan C., Gan M.-T., Wong K. An anomaly detection framework for identifying
    energy theft and defective meters in smart grids Int J Electr Power Energy Syst,
    101 (2018), pp. 189-203 View in ScopusGoogle Scholar [150] Pea M., Biscarri F.,
    Guerrero J.I., Monedero I., Len C. Rule-based system to detect energy efficiency
    anomalies in smart buildings, a data mining approach Expert Syst Appl, 56 (2016),
    pp. 242-255 Google Scholar [151] Jain S., Choksi K.A., Pindoriya N.M. Rule-based
    classification of energy theft and anomalies in consumers load demand profile
    IET Smart Grid, 2 (4) (2019), pp. 612-624 CrossRefView in ScopusGoogle Scholar
    [152] Linda O., Wijayasekara D., Manic M., Rieger C. Computational intelligence
    based anomaly detection for building energy management systems 2012 5th international
    symposium on resilient control systems (2012), pp. 77-82 CrossRefView in ScopusGoogle
    Scholar [153] Chen C., Cook D. Energy outlier detection in smart environments
    Artificial intelligence and smarter living, AAAI Workshops, WS-11-07, AAAI (2011)
    Google Scholar [154] Breunig M.M., Kriegel H.-P., Ng R.T., Sander J. Lof: Identifying
    density-based local outliers SIGMOD Rec, 0163-5808, 29 (2) (2000), pp. 93-104
    View in ScopusGoogle Scholar [155] He Z., Xu X., Deng S. Discovering cluster-based
    local outliers Pattern Recognit Lett, 24 (9) (2003), pp. 1641-1650 View in ScopusGoogle
    Scholar [156] Giannoni F., Mancini M., Marinelli F. Anomaly detection models for
    IoT time series data (2018), pp. 1-10 arXiv:1812.00890 Google Scholar [157] Zhou
    Y., Hu W., Min Y., Zheng L., Liu B., Yu R., Dong Y. A semi-supervised anomaly
    detection method for wind farm power data preprocessing 2017 IEEE power energy
    society general meeting (2017), pp. 1-5 Google Scholar [158] Kim S., Cho N.W.,
    Lee Y.J., Kang S.-H., Kim T., Hwang H., et al. Application of density-based outlier
    detection to database activity monitoring Inf Syst Front, 15 (1) (2013), pp. 55-65
    View in ScopusGoogle Scholar [159] Hou J., Xiao B. A data-driven clustering approach
    for fault diagnosis IEEE Access, 5 (2017), pp. 26512-26520 View in ScopusGoogle
    Scholar [160] Ahmed M., Mahmood A.N., Islam M.R. A survey of anomaly detection
    techniques in financial domain Future Gener Comput Syst, 55 (2016), pp. 278-288
    View in ScopusGoogle Scholar [161] Mookiah L, Dean C, Eberle W. Graph-based anomaly
    detection on smart grid data. In: Proceedings of the thirtieth international florida
    artificial intelligence research society conference. 2017, p. 306–11. Google Scholar
    [162] Akoglu L., Tong H., Koutra D. Graph based anomaly detection and description:
    A survey Data Min Knowl Discov, 1384-5810, 29 (3) (2015), pp. 626-688 CrossRefView
    in ScopusGoogle Scholar [163] Davis M., Liu W., Miller P., Redpath G. Detecting
    anomalies in graphs with numeric labels 9781450307178, Association for Computing
    Machinery, New York, NY, USA (2011) Google Scholar [164] Rahmani A., Afra S.,
    Zarour O., Addam O., Koochakzadeh N., Kianmehr K., et al. Graph-based approach
    for outlier detection in sequential data and its application on stock market and
    weather data Knowl Based Syst, 61 (2014), pp. 89-97 View in ScopusGoogle Scholar
    [165] Farag A., Abdelkader H., Salem R. Parallel graph-based anomaly detection
    technique for sequential data J King Saud Univ Comput Inform Sci (2019), pp. 1-9.,
    10.1016/j.jksuci.2019.09.009 Google Scholar [166] Ruff L., Vandermeulen R.A.,
    Görnitz N., Binder A., Müller E., Müller K.-R., Kloft M. Deep semi-supervised
    anomaly detection (2019), pp. 1-23 arXiv:1906.02694 CrossRefGoogle Scholar [167]
    Fan C., Xiao F., Zhao Y., Wang J. Analytical investigation of autoencoder-based
    methods for unsupervised anomaly detection in building energy data Appl Energy,
    211 (2018), pp. 1123-1135 View in ScopusGoogle Scholar [168] Wang X., Yang I.,
    Ahn S. Sample efficient home power anomaly detection in real time using semi-supervised
    learning IEEE Access, 7 (2019), pp. 139712-139725 CrossRefView in ScopusGoogle
    Scholar [169] Song H., Jiang Z., Men A., Yang B. A hybrid semi-supervised anomaly
    detection model for high-dimensional data Comput Intell Neurosci, 2017 (2017),
    pp. 1-9 Google Scholar [170] Janetzko H., Stoffel F., Mittelstädt S., Keim D.A.
    Anomaly detection for visual analytics of power consumption data Comput Graph,
    38 (2014), pp. 27-37 View in ScopusGoogle Scholar [171] Cao N., Lin C., Zhu Q.,
    Lin Y., Teng X., Wen X. Voila: Visual anomaly detection and monitoring with streaming
    spatiotemporal data IEEE Trans Vis Comput Graphics, 24 (1) (2018), pp. 23-33 View
    in ScopusGoogle Scholar [172] Chou J.-S., Telaga A.S., Chong W.K., Gibson G.E.
    Early-warning application for real-time detection of energy consumption anomalies
    in buildings Journal of Cleaner Production, 149 (2017), pp. 711-722 View in ScopusGoogle
    Scholar [173] Capozzoli A., Piscitelli M.S., Brandi S., Grassi D., Chicco G. Automated
    load pattern learning and anomaly detection for enhancing energy management in
    smart buildings Energy, 157 (2018), pp. 336-352 View in ScopusGoogle Scholar [174]
    Saragadam V., Wang J., Li X., Sankaranarayanan A.C. Compressive spectral anomaly
    detection 2017 IEEE International Conference on Computational Photography (ICCP)
    (2017), pp. 1-9 CrossRefGoogle Scholar [175] Xia Y., Zhao Z., Zhang H. Distributed
    anomaly event detection in wireless networks using compressed sensing 2011 11th
    International Symposium on Communications Information Technologies (ISCIT) (2011),
    pp. 250-255 CrossRefView in ScopusGoogle Scholar [176] Wang W., Wang D., Jiang
    S., Qin S., Xue L. Anomaly detection in big data with separable compressive sensing
    Liang Q., Mu J., Wang W., Zhang B. (Eds.), Proceedings of the 2015 International
    Conference on Communications, Signal Processing, and Systems, Springer Berlin
    Heidelberg, Berlin, Heidelberg (2016), pp. 589-594 CrossRefView in ScopusGoogle
    Scholar [177] Levorato M., Mitra U. Fast anomaly detection in smartgrids via sparse
    approximation theory 2012 IEEE 7th Sensor Array and Multichannel Signal Processing
    Workshop (SAM) (2012), pp. 5-8 CrossRefView in ScopusGoogle Scholar [178] Liu
    C., Ghosal S., Jiang Z., Sarkar S. An unsupervised anomaly detection approach
    using energy-based spatiotemporal graphical modeling Cyber-Phys Syst, 3 (1–4)
    (2017), pp. 66-102 CrossRefView in ScopusGoogle Scholar [179] Munawar A., Vinayavekhin
    P., De Magistris G. Spatio-temporal anomaly detection for industrial robots through
    prediction in unsupervised feature space 2017 IEEE Winter Conference on Applications
    of Computer Vision (WACV) (2017), pp. 1017-1025 View in ScopusGoogle Scholar [180]
    Yang Z., Japkowicz N. Anomaly behaviour detection based on meta-morisita index
    for large scale spatio-temporal data set J Big Data, 5 (2018), pp. 1-28 View in
    ScopusGoogle Scholar [181] Bosman H.H., Iacca G., Tejada A., Wörtche H.J., Liotta
    A. Spatial anomaly detection in sensor networks using neighborhood information
    Inform Fusion, 33 (2017), pp. 41-56 View in ScopusGoogle Scholar [182] Enetics
    (2020) Accessed: 2020-06-23, Available online: https://www.enetics.com/Products/Software/Non-Intrusive-Load-Monitoring-NILM
    Google Scholar [183] Dilraj M., Nimmy K., Sankaran S. Towards behavioral profiling
    based anomaly detection for smart homes TENCON 2019 - 2019 IEEE Region 10 Conference
    (TENCON) (2019), pp. 1258-1263 CrossRefView in ScopusGoogle Scholar [184] Rashid
    H., Batra N., Singh P. Rimor: Towards identifying anomalous appliances in buildings
    BuildSys ’18, Association for Computing Machinery, New York, NY, USA (2018), pp.
    33-42 CrossRefGoogle Scholar [185] Kabler R.B., Lutes R.L., Briançon A.C., Crawford
    C.S., Giacoponello C.A., Johnson J.F., Jara-Olivares V.A., Epard M.A., Goldberg
    S.J., Lancaster J.B. Monitoring and fault detection of electrical appliances for
    ambient intelligence United States Patent, no. US9476935B2 (2014), pp. 1-24 Google
    Scholar [186] Sardianos C., Varlamis I., Chronis C., Dimitrakopoulos G., Himeur
    Y., Alsalemi A., Bensaali F., Amira A. A model for predicting room occupancy based
    on motion sensor data 2020 IEEE International Conference on Informatics, IoT,
    and Enabling Technologies (ICIoT) (2020), pp. 394-399 CrossRefView in ScopusGoogle
    Scholar [187] Laaroussi Y., Bahrar M., Mankibi M.E., Draoui A., Si-Larbi A. Occupant
    presence and behavior: a major issue for building energy performance simulation
    and assessment Sustain Cities Soc, 63 (2020), p. 102420 View in ScopusGoogle Scholar
    [188] Kleiminger W., Beckel C., Staake T., Santini S. Occupancy detection from
    electricity consumption data BuildSys’13, Association for Computing Machinery,
    New York, NY, USA (2013), pp. 1-8 CrossRefGoogle Scholar [189] Akbar A., Nati
    M., Carrez F., Moessner K. Contextual occupancy detection for smart office by
    pattern recognition of electricity consumption data 2015 IEEE International Conference
    on Communications (ICC) (2015), pp. 561-566 View in ScopusGoogle Scholar [190]
    Gao Y., Schay A., Hou D. Occupancy detection in smart housing using both aggregated
    and appliance-specific power consumption data 2018 17th IEEE International Conference
    on Machine Learning and Applications (ICMLA) (2018), pp. 1296-1303 CrossRefView
    in ScopusGoogle Scholar [191] Violatto G., Pandharipande A., Li S., Schenato L.
    Classification of occupancy sensor anomalies in connected indoor lighting systems
    IEEE Internet Things J, 6 (4) (2019), pp. 7175-7182 CrossRefView in ScopusGoogle
    Scholar [192] Nabil M., Ismail M., Mahmoud M., Shahin M., Qaraqe K., Serpedin
    E. Deep recurrent electricity theft detection in AMI networks with random tuning
    of hyper-parameters 2018 24th International Conference on Pattern Recognition
    (ICPR) (2018), pp. 740-745 CrossRefView in ScopusGoogle Scholar [193] Krishna
    V.B., Lee K., Weaver G.A., Iyer R.K., Sanders W.H. F-DETA: A framework for detecting
    electricity theft attacks in smart grids 2016 46th Annual IEEE/IFIP International
    Conference on Dependable Systems and Networks (DSN) (2016), pp. 407-418 CrossRefView
    in ScopusGoogle Scholar [194] Visconti P., Costantini P., de Fazio R., Lay-Ekuakille
    A., Patrono L. A sensors-based monitoring system of electrical consumptions and
    home parameters remotely managed by mobile app for elderly habits’ control 2019
    IEEE 8th International Workshop on Advances in Sensors and Interfaces (IWASI)
    (2019), pp. 264-269 CrossRefView in ScopusGoogle Scholar [195] Patrono L., Primiceri
    P., Rametta P., Sergi I., Visconti P. An innovative approach for monitoring elderly
    behavior by detecting home appliance’s usage 2017 25th International Conference
    on Software, Telecommunications and Computer Networks (SoftCOM) (2017), pp. 1-7
    Google Scholar [196] Patrono L., Rametta P., Meis J. Unobtrusive detection of
    home appliance’s usage for elderly monitoring 2018 3rd International Conference
    on Smart and Sustainable Technologies (SpliTech) (2018), pp. 1-6 CrossRefGoogle
    Scholar [197] Nabil M., Ismail M., Mahmoud M.M.E.A., Alasmary W., Serpedin E.
    PPETD: Privacy-preserving electricity theft detection scheme with load monitoring
    and billing for AMI networks IEEE Access, 7 (2019), pp. 96334-96348 CrossRefView
    in ScopusGoogle Scholar [198] Yao D., Wen M., Liang X., Fu Z., Zhang K., Yang
    B. Energy theft detection with energy privacy preservation in the smart grid IEEE
    Internet Things J, 6 (5) (2019), pp. 7659-7669 CrossRefView in ScopusGoogle Scholar
    [199] Himeur Y., Elsalemi A., Bensaali F., Amira A. The emergence of hybrid edge-cloud
    computing for energy efficiency in buildings Proceedings of SAI Intelligent Systems
    Conference (2021), pp. 1-12 View in ScopusGoogle Scholar [200] Zhang C., Ji W.
    Edge computing enabled production anomalies detection and energy-efficient production
    decision approach for discrete manufacturing workshops IEEE Access (2020), pp.
    1-11 Google Scholar [201] Luo Y., Li W., Qiu S. Anomaly detection based latency-aware
    energy consumption optimization for IoT data-flow services Sensors, 1424-8220,
    20 (1) (2020), pp. 1-20 CrossRefView in ScopusGoogle Scholar [202] Scarpiniti
    M., Baccarelli E., Momenzadeh A., Uncini A. Smartfog: Training the fog for the
    energy-saving analytics of smart-meter data Appl Sci, 2076-3417, 9 (19) (2019),
    pp. 1-14 CrossRefGoogle Scholar [203] Liu Y., Pang Z., Karlsson M., Gong S. Anomaly
    detection based on machine learning in iot-based vertical plant wall for indoor
    climate control Buil Environ, 183 (2020), p. 107212 View in ScopusGoogle Scholar
    [204] Zhang J., Zhou Z., Li S., Gan L., Zhang X., Qi L., Xu X., Dou W. Hybrid
    computation offloading for smart home automation in mobile cloud computing Pers
    Ubiquitous Comput, 22 (2017), pp. 121-134 View in ScopusGoogle Scholar [205] Anjomshoaa
    A., Duarte F., Rennings D., Matarazzo T.J., deSouza P., Ratti C. City scanner:
    Building and scheduling a mobile sensing platform for smart city services IEEE
    Internet Things J, 5 (6) (2018), pp. 4567-4579 CrossRefView in ScopusGoogle Scholar
    [206] Izumi S., Azuma S. Real-time pricing by data fusion on networks IEEE Trans
    Ind Inf, 14 (3) (2018), pp. 1175-1185 CrossRefView in ScopusGoogle Scholar [207]
    Power laws: Detecting anomalies in usage (2020) Available online: https://www.drivendata.org/,
    Accessed: 2020-12-25 Google Scholar [208] Uttama Nambi A.S., Reyes Lua A., Prasad
    V.R. Loced: Location-aware energy disaggregation framework Proceedings of the
    2Nd ACM International Conference on Embedded Systems for Energy-Efficient Built
    Environments, BuildSys ’15, ACM, New York, NY, USA (2015), pp. 45-54 CrossRefGoogle
    Scholar [209] Himeur Y., Alsalemi A., Bensaali F., Amira A. Effective non-intrusive
    load monitoring of buildings based on a novel multi-descriptor fusion with dimensionality
    reduction Appl Energy, 279 (2020), p. 115872 View in ScopusGoogle Scholar [210]
    Salinas S., Li P. Privacy-preserving energy theft detection in microgrids: A state
    estimation approach IEEE Trans Power Syst, 31 (2) (2016), pp. 883-894 View in
    ScopusGoogle Scholar [211] Himeur Y., Alsalemi A., Bensaali F., Amira A. Building
    power consumption datasets: survey, taxonomy and future directions Energy Buil,
    227 (2020), p. 110404 View in ScopusGoogle Scholar [212] Liu A., Zhang G., Lu
    J. Concept drift detection based on anomaly analysis Loo C.K., Yap K.S., Wong
    K.W., Teoh A., Huang K. (Eds.), Neural Information Processing (2014), pp. 263-270
    CrossRefView in ScopusGoogle Scholar [213] Tian H., Khoa N.L.D., Anaissi A., Wang
    Y., Chen F. Concept drift adaption for online anomaly detection in structural
    health monitoring Proceedings of the 28th ACM International Conference on Information
    and Knowledge Management, CIKM ’19, Association for Computing Machinery, New York,
    NY, USA (2019), pp. 2813-2821 CrossRefView in ScopusGoogle Scholar [214] Xie X.,
    Jin Z., Wang J., Yang L., Lu Y., Li T. Confidence guided anomaly detection model
    for anti-concept drift in dynamic logs J Netw Comput Appl, 162 (2020), p. 102659
    View in ScopusGoogle Scholar [215] Akhavan-Hejazi H., Mohsenian-Rad H. Power systems
    big data analytics: an assessment of paradigm shift barriers and prospects Energy
    Rep, 4 (2018), pp. 91-100 View in ScopusGoogle Scholar [216] Himeur Y., Alsalemi
    A., Bensaali F., Amira A., Varlamis I., Bravos G., Sardianos C., Dimitrakopoulos
    W. Techno-economic analysis of building energy efficiency systems based on behavioral
    change: A case study of a novel micro-moments based solution Appl Energy (2020),
    pp. 1-18 CrossRefGoogle Scholar [217] Ecoisme (2020) Accessed: 2020-12-21, Available
    online: https://ecoisme.com Google Scholar [218] Informetis (2020) Accessed: 2020-12-23,
    Available online: https://www.informetis.com/en/ Google Scholar [219] Verv energy
    (2020) Accessed: 2020-12-23, Available online: https://verv.energy/ Google Scholar
    [220] Neurio Neurio Sensor W1TM Overview, Product specification, Neurio Technology
    Inc, Vancouver, BC, Canada (2019) Google Scholar [221] Wibeee (2020) Accessed:
    2020-12-23, Available online: https://wibeee.com/en/ Google Scholar [222] Smart
    impulse (2020) Accessed: 2020-12-25, Available online: https://www.smart-impulse.com/en/nilm-technology/
    Google Scholar [223] Verdigris (2020) Accessed: 2020-12-27, Available online:
    https://verdigris.co/ Google Scholar [224] Voltaware (2020) Accessed: 2020-12-28,
    Available online: https://voltaware.com/support/my-disaggregation Google Scholar
    [225] Homepulse: Creating value from energy data: the disaggregation challenge
    (2020) Accessed: 2020-12-29, Available online: https://www.homepulse.fr/ Google
    Scholar [226] Hive starter pack (2020) Accessed: 2020-12-21, Available online:
    https://www.hivehome.com Google Scholar [227] Dig, your energy consultant (2020)
    Accessed: 2020-12-27, Available online: https://intelen.com/us/ Google Scholar
    [228] Real-time energy monitoring software (2020) Accessed: 2020-12-28, Available
    online: https://harksys.com/ Google Scholar [229] Enertalk: Energy monitoring
    with big data analysis (2020) Accessed: 2020-12-28, Available online: https://www.enertalk.com/home/
    Google Scholar [230] Andoni M., Robu V., Flynn D., Abram S., Geach D., Jenkins
    D., McCallum P., Peacock A. Blockchain technology in the energy sector: a systematic
    review of challenges and opportunities Renewable and Sustainable Energy Reviews,
    100 (2019), pp. 143-174 View in ScopusGoogle Scholar [231] Himeur Y., Elsalemi
    A., Bensaali F., Amira A. An intelligent non-intrusive load monitoring scheme
    based on 2D phase encoding of power signals Int J Intell Syst (2020), pp. 1-22
    CrossRefGoogle Scholar [232] Himeur Y., Alsalemi A., Bensaali F., Amira A. Smart
    non-intrusive appliance identification using a novel local power histogramming
    descriptor with an improved k-nearest neighbors classifier Sustainable Cities
    Soc (2020), pp. 1-19 CrossRefGoogle Scholar [233] Rashid H., Singh P. Energy disaggregation
    for identifying anomalous appliance Proceedings of the 4th ACM International Conference
    on Systems for Energy-Efficient Built Environments, Association for Computing
    Machinery (2017) Google Scholar [234] Himeur Y, Elsalemi A, Bensaali F, Amira
    A. Appliance identification using a histogram post-processing of 2D local binary
    patterns for smart grid applications. In: Proc. 25th International Conference
    on Pattern Recognition (ICPR), 2020. p. 1–8. Google Scholar [235] Amarasinghe
    K., Kenney K., Manic M. Toward explainable deep neural network based anomaly detection
    2018 11th International Conference on Human System Interaction (HSI) (2018), pp.
    311-317 CrossRefView in ScopusGoogle Scholar [236] Kauffmann J., Ruff L., Montavon
    G., Müller K.-R. The clever hans effect in anomaly detection (2020), pp. 1-17
    arXiv:2006.10609 Google Scholar [237] Antwarg L., Miller R.M., Shapira B., Rokach
    L. Explaining anomalies detected by autoencoders using SHAP (2019), pp. 1-37 arXiv:1903.02407
    Google Scholar [238] Liznerski P., Ruff L., Vandermeulen R.A., Franks B.J., Kloft
    M., Müller K.-R. Explainable deep one-class classification (2020), pp. 1-24 arXiv:2007.01760
    Google Scholar [239] Sardianos C., Chronis C., Varlamis I., Dimitrakopoulos G.,
    Himeur Y., Alsalemi A., Bensaali F., Amira A. Real-time personalised energy saving
    recommendations The 16th IEEE International Conference on Green Computing and
    Communications (GreenCom) (2020), pp. 1-6 Google Scholar [240] Bose S.K., Kar
    B., Roy M., Gopalakrishnan P.K., Basu A. ADEPOS: Anomaly detection based power
    saving for predictive maintenance using edge computing ASPDAC ’19, Association
    for Computing Machinery, New York, NY, USA (2019), pp. 597-602 CrossRefView in
    ScopusGoogle Scholar [241] Sayed A., Elsalemi A., Himeur Y., Bensaali F., Amira
    A. Endorsing energy efficiency through accurate appliance-level power monitoring,
    automation and data visualization The 4th International Conference on Networking,
    Information Systems & Security (NISS 2021) (2021), pp. 1-13 Google Scholar [242]
    Alsalemi A., Himeur Y., Bensaali F., Amira A., Sardianos C., Varlamis I., Dimitrakopoulos
    G. Achieving domestic energy efficiency using micro-moments and intelligent recommendations
    IEEE Access, 8 (2020), pp. 15047-15055 CrossRefView in ScopusGoogle Scholar [243]
    Aberkane S., Elarbi M. Deep reinforcement learning for real-world anomaly detection
    in surveillance videos 2019 6th International Conference on Image and Signal Processing
    and their Applications (ISPA) (2019), pp. 1-5 CrossRefGoogle Scholar [244] Shabestary
    S.M.A., Abdulhai B. Deep learning vs. Discrete reinforcement learning for adaptive
    traffic signal control 2018 21st International Conference on Intelligent Transportation
    Systems (ITSC) (2018), pp. 286-293 CrossRefView in ScopusGoogle Scholar [245]
    Gregurić M., Vujić M., Alexopoulos C., Miletić M. Application of deep reinforcement
    learning in traffic signal control: An overview and impact of open traffic data
    Appl Sci, 10 (11) (2020), pp. 1-25 Google Scholar [246] Luong N.C., Hoang D.T.,
    Gong S., Niyato D., Wang P., Liang Y., Kim D.I. Applications of deep reinforcement
    learning in communications and networking: A survey IEEE Commun Surv Tutor, 21
    (4) (2019), pp. 3133-3174 CrossRefView in ScopusGoogle Scholar [247] Liu T., Tan
    Z., Xu C., Chen H., Li Z. Study on deep reinforcement learning techniques for
    building energy consumption forecasting Energy Buil, 208 (2020), p. 109675 View
    in ScopusGoogle Scholar [248] Zhao J., Cao N., Wen Z., Song Y., Lin Y., Collins
    C. #FluxFlow: Visual analysis of anomalous information spreading on social media
    IEEE Trans Vis Comput Graphics, 20 (12) (2014), pp. 1773-1782 View in ScopusGoogle
    Scholar [249] Shi Y., Liu Y., Tong H., He J., Yan G., Cao N. Visual analytics
    of anomalous user behaviors: A survey (2019), pp. 1-24 arXiv:1905.06720 Google
    Scholar [250] Guo S., Jin Z., Chen Q., Gotz D., Zha H., Cao N. Visual anomaly
    detection in event sequence data 2019 IEEE International Conference on Big Data
    (Big Data) (2019), pp. 1125-1130 CrossRefView in ScopusGoogle Scholar [251] Al-Kababji
    A., Alsalemi A., Himeur Y., fernandez R., Bensaali F., Amira A., Fetais N. Interactive
    visual analytics for residential energy big data Inform Vis (2020), pp. 1-18 View
    in ScopusGoogle Scholar [252] Al-Kababji A., Alsalemi A., Himeur Y., Bensaali
    F., Amira A., Fernandez R., Fetais N. Energy data visualizations on smartphones
    for triggering behavioral change: Novel vs. Conventional 2020 2nd Global Power,
    Energy and Communication Conference (GPECOM) (2020), pp. 312-317 CrossRefView
    in ScopusGoogle Scholar [253] Batra N., Kukunuri R., Pandey A., Malakar R., Kumar
    R., Krystalakos O., Zhong M., Meira P., Parson O. Towards reproducible state-of-the-art
    energy disaggregation BuildSys ’19, Association for Computing Machinery, New York,
    NY, USA (2019), pp. 193-202 CrossRefGoogle Scholar [254] Batra N., Kelly J., Parson
    O., Dutta H., Knottenbelt W., Rogers A., Singh A., Srivastava M. NILMTK: An open
    source toolkit for non-intrusive load monitoring Proceedings of the 5th International
    Conference on Future Energy Systems, e-Energy ’14, Association for Computing Machinery,
    New York, NY, USA (2014), pp. 265-276 CrossRefView in ScopusGoogle Scholar [255]
    Kaissis G.A., Makowski M.R., Rückert D., Braren R.F. Secure, privacy-preserving
    and federated machine learning in medical imaging Nature Mach Intell, 2 (2020),
    pp. 305-311 CrossRefView in ScopusGoogle Scholar [256] Hao M., Li H., Xu G., Liu
    S., Yang H. Towards efficient and privacy-preserving federated deep learning ICC
    2019 - 2019 IEEE International Conference on Communications (ICC) (2019), pp.
    1-6 Google Scholar [257] Elavarasan R.M., Shafiullah G., Kannadasan R., Mudgal
    V., Arif M., Jamal T., Senthilkumar S., SriRajaBalaguru V., Reddy K., Subramaniam
    U. Covid-19: impact analysis and recommendations for power sector operation Appl
    Energy (2020), p. 115739 Google Scholar [258] Sardianos C., Chronis C., Varlamis
    I., Dimitrakopoulos G., Himeur Y., Alsalemi A., Bensaali F., Amira A. Smart fusion
    of sensor data and human feedback for personalised energy-saving recommendations
    Int J Intell Syst (2021), pp. 1-20 Google Scholar [259] Nilashi M., Asadi S.,
    Abumalloh R.A., Samad S., Ibrahim O. Intelligent recommender systems in the COVID-19
    outbreak: The case of wearable healthcare devices J Soft Comput Decis Support
    Syst, 7 (4) (2020), pp. 8-12 Google Scholar [260] Budd J., Miller B., Manning
    E., Lampos V., Zhuang M., Edelstein M., Rees G., Emery V., Stevens M., Keegan
    N., Short M., Pillay D., Manley E., Cox I., Heymann D., Johnson A., McKendry R.
    Digital technologies in the public-health response to COVID-19 Nature Med, 26
    (2020), pp. 1-10 CrossRefGoogle Scholar [261] Alsalemi A., Himeur Y., Bensaali
    F., Amira A., Sardianos C., Chronis C., Varlamis I., Dimitrakopoulos G. A micro-moment
    system for domestic energy efficiency analysis IEEE Syst J (2020), pp. 1-8 View
    in ScopusGoogle Scholar [262] Himeur Y., Alsalemi A., Bensaali F., Amira A., Sardianos
    C., Dimitrakopoulos C., Varlamis I. A survey of recommender systems for energy
    efficiency in buildings: Principles, challenges and prospects Inf Fusion (2020),
    pp. 1-33 CrossRefGoogle Scholar [263] Zhang Y., Chen X. Explainable recommendation:
    A survey and new perspectives Found Trends® Inform Retr, 1554-0669, 14 (1) (2020),
    pp. 1-101 Google Scholar [264] Sardianos C., Varlamis I., Chronis C., Dimitrakopoulos
    G., Himeur Y., Alsalemi A., Bensaali F., Amira A. Data analytics, automations,
    and micro-moment based recommendations for energy efficiency 2020 IEEE Sixth International
    Conference on Big Data Computing Service and Applications (BigDataService), IEEE
    (2020), pp. 96-103 CrossRefView in ScopusGoogle Scholar Cited by (316) Attention-ResNet-AR-LSTM:
    An intelligent method for PCCP deformation prediction via structure monitoring
    based on distributed fiber optics 2024, Engineering Failure Analysis Show abstract
    Enhancing anomaly detection in electrical consumption profiles through computational
    intelligence 2024, Energy Reports Show abstract Edge AI for Internet of Energy:
    Challenges and perspectives 2024, Internet of Things (Netherlands) Show abstract
    Detection and analysis of deteriorated areas in solar PV modules using unsupervised
    sensing algorithms and 3D augmented reality 2024, Heliyon Show abstract Multi-task
    deep learning for large-scale buildings energy management 2024, Energy and Buildings
    Show abstract Attention-based early warning framework for abnormal operating conditions
    in fluid catalytic cracking units 2024, Applied Soft Computing Show abstract View
    all citing articles on Scopus 1 http://em3.qu.edu.qa/. 2 Both QUD and PCSiD datasets
    could be accessed via http://em3.qu.edu.qa/. © 2021 The Authors. Published by
    Elsevier Ltd. Recommended articles A methodology for monitoring smart buildings
    with incomplete models Applied Soft Computing, Volume 71, 2018, pp. 396-406 Hamed
    Khorasgani, Gautam Biswas View PDF Abnormal energy consumption detection for GSHP
    system based on ensemble deep learning and statistical modeling method International
    Journal of Refrigeration, Volume 114, 2020, pp. 106-117 Chengliang Xu, Huanxin
    Chen View PDF An anomaly detection framework for identifying energy theft and
    defective meters in smart grids International Journal of Electrical Power & Energy
    Systems, Volume 101, 2018, pp. 189-203 Sook-Chin Yip, …, KokSheik Wong View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 255 Policy Citations:
    4 Captures Readers: 513 View details About ScienceDirect Remote access Shopping
    cart Advertise Contact and support Terms and conditions Privacy policy Cookies
    are used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply. We use cookies that are necessary to make our site work. We may also use
    additional cookies to analyze, improve, and personalize our content and your digital
    experience. For more information, see ourCookie Policy Cookie Settings Accept
    all cookies'
  inline_citation: '>'
  journal: Applied energy
  limitations: '>'
  pdf_link: null
  publication_year: 2021
  relevance_evaluation: Relevant - This text provides a comprehensive summary of how
    the paper leverages sensing technologies, data collection, preprocessing, deep
    anomaly detection modeling, training, retraining, and notifications to address
    the problem of energy consumption anomaly detection in buildings.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Artificial intelligence based anomaly detection of energy consumption in
    buildings: A review, current trends and new perspectives'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2017.2775042
  analysis: '>'
  apa_citation: 'Ray, P. P. (2017). An Introduction to Dew Computing: Definition,
    Concept and Implications. IEEE Access, 6, 723-737.'
  authors:
  - Partha Pratim Ray
  citation_count: 132
  data_sources: null
  explanation: This article introduces a new computing model called Dew Computing
    (DC). The authors define DC as "a programming model for enabling ubiquitous, pervasive,
    and convenient ready-to-go, plug-in facility empowered personal network that includes
    Single-Super-Hybrid-Peer P2P communication link". Furthermore, they claim that
    it "aims at accessing a pool of raw data equipped with meta-data that can be rapidly
    created, edited, stored, and deleted with minimal internetwork management effort
    (i.e. offline mode)"
  extract_1: The motto of this paper is to conceptualize the fact of empowerment of
    the ICT-user base with almost an Internet-free surfing experience in coming days.
    The 4-tier hierarchical structure of dew computing facilitates user to access
    web-data from any sources (edge, fog or cloud) through without or minimal use
    of internet.
  extract_2: 'D...View more Published in: IEEE Access ( Volume: 6) Page(s): 723 -
    737 Date of Publication: 17 November 2017 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2017.2775042
    Publisher: IEEE SECTION I. Introduction Several computing paradigms have remarkably
    changed the way of “web surfing” experience in past two decades.'
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 6 An Introduction
    to Dew Computing: Definition, Concept and Implications Publisher: IEEE Cite This
    PDF Partha Pratim Ray All Authors 129 Cites in Papers 14033 Full Text Views Open
    Access Comment(s) Abstract Document Sections I. Introduction II. Background of
    Grid, Cloud, Fog and Edge Computing III. Definition of Dew Computing IV. Theory
    and Concept Behind the Dew Computing V. Application Potentials Show Full Outline
    Authors Figures References Citations Keywords Metrics Abstract: Since the end
    of the 1990s, the world has witnessed a tremendous growth in the area of information
    and communication technology (ICT), starting with grid computing, cloud computing
    (CC), and fog computing to recently introduced edge computing. Although, these
    technologies are still in very good shape, they do heavily rely on connectivity,
    i.e., Internet. To address this challenge, this paper proposes a novel dew-cloud
    architecture that brings the power of CC together with the dew computing (DC).
    Originally, the dew-cloud architecture is an extension of the existing client-server
    architecture, where two servers are placed at both ends of the communication link.
    With the help of a dew server, a user has more control and flexibility to access
    his/her personal data in the absence of an Internet connection. Primarily, the
    data are stored at the dew server as a local copy upon which instantiation of
    the Internet is synchronized with the master copy at the cloud side. Users can
    browse, read, write, or append data on the local dew site, which is a local Web
    form of an actual website. With the incorporation of the dew domain naming system
    and dew domain name redirection, mapping between different local dew sites has
    become possible. Novel services, such as infrastructure-as-a-dew, software-as-a-dew
    service, and software-as-a-dew product, are, hereby, introduced along with the
    DC. This paper presents the following as key contributions: 1) a precise and concrete
    definition of DC; 2) detailed and comprehensive discussions of its concept and
    working principle; 3) application potentials; and 4) technical challenges. The
    motto of this paper is to conceptualize the fact of empowerment of the ICT-user
    base with almost an Internet-free surfing experience in coming days. The 4-tier
    hierarchical structure of dew computing facilitates user to access web-data from
    any sources (edge, fog or cloud) through without or minimal use of internet. D...View
    more Published in: IEEE Access ( Volume: 6) Page(s): 723 - 737 Date of Publication:
    17 November 2017 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2017.2775042 Publisher:
    IEEE SECTION I. Introduction Several computing paradigms have remarkably changed
    the way of “web surfing” experience in past two decades. Grid, cloud, fog, and
    edge computing represent the key pillars of this evolution. With incorporation
    of smart phones and high-speed communications, inter-network access has been reached
    a new level of sophistication. Multiple cloud domains and fog services are currently
    engaged into providing of required set of data or information to its users or
    customers. Favorable aggregations of service oriented aspects are presently acting
    as the basis of such interventions. Users are indebted towards data storage, analysis,
    visualization, computation, and persuasion as per the prescribed notions of the
    cloud, fog or edge venders. Subsequently, network users are getting heavily dependent
    on the availability of internet connectivity to persuade for the “opted” jobs.
    Thus, resulting into the origination of a stringent environment of despot cyber-statesmanship
    around the virtual world. A revision in existing computing models is henceforth
    expected to cope-up with provisional current-time issues, as identified. This
    paper presents an introductory view of a novel computing paradigm Dew Computing
    (i.e. DC). DC is envisaged to rely upon “micro-services” approach in highly heterogeneous,
    vertical, and distributed manner. It opens up a new window of centralized-virtualization-free
    computational horizon, whereby providing a scope for scattering of multi-typical
    data into the low-end devices. Thus, it creates the novel opportunity toward data
    accessibility without continuous internet availability. As a result, DC is indebted
    towards covering up all the existing network technologies, wide range of key characteristics
    (e.g. cooperative application, independent, mobile data aggregation etc.) and
    hybrid network behavior. The significant advantages of DC are apprehended as follows:
    self-healing attribute, autonomic self-augmentation, self-adaptive, transparent,
    user-programmability, super user experience, and extreme scalability. Despite
    of having highly heterogeneous device pool, DC is capable of performing complex
    tasks in its own vicinity. To serve such functionality, DC needs an advanced modular
    architecture that shall conform all related aspects in DC-ecosystem. The contributions
    of this paper are as follow: To propose a novel definition of Dew Computing; for
    better understandability; To propose a novel Dew-Cloud architecture; To elaborate
    the theories, key concepts and working behind DC; To present potential applications
    and issues to be resolved. This paper is organized as follows. Section II elaborates
    key concepts behind grid, cloud, fog, and edge computing paradigms. Section III
    compares several existing definitions of DC and propose a novel one. Section IV
    presents theories and in-depth concepts of DC. Section V discusses on application
    potentials with respect to a novel 4-tier architecture. Section VI discussed on
    possible research challenges and prospects. Section VII concludes the paper. SECTION
    II. Background of Grid, Cloud, Fog and Edge Computing Before going into the major
    topic of discussion, let’s get started with the grid, cloud, fog, and edge computing,
    as follows. A. Grid Computing Per European Organization for Nuclear Research,
    GC is considered as “service for sharing computer power and data storage capacity
    over the Internet” [1]. Initially, GC was designed to stimulate the scientific
    computing and research facilities while providing high utilization of geographically
    distributed sources. Currently, GC provides loosely coupled “super virtual computers”
    to perform “single” large tasks that may include DNA sequencing, drug design,
    protein modelling, prediction of climate change, ecological modelling, gamma radiation
    detection from intergalactic objects, detecting “God Particle” from Large Hadron
    Collider, and IP telephony etc. [2], [3]. Though, GC is capable to cater complex
    tasks, it lacks in following aspects, such as: high level common services, individual
    centric service, data handling, standardization, minimum heterogeneity support,
    and security [4]. B. Cloud Computing In 1997, Chellappa [5] firstever coined the
    term “Cloud Computing” (CC) in his address to the INFORMS Annual Meeting. His
    idea was more concentrated toward usage of cloud services in terms of economical
    rationalization among Small and Medium-sized Enterprises (SMEs) or upcoming business
    models which earlier was never thought of [6]. Existing CC paradigm aims at empowering
    service providers by facilitating efficient resource management in data centers
    [7]–[9]. Unlike GC, clouds are capable with the scalability and flexibility metrics.
    Clouds provide service centric models to meet the user necessities. Applications
    of CC are now widespread with mailing services to storage, document processing,
    hosting services, image processing, and video streaming. However, problems associated
    with current CC are multifold such as: reliability, availability of services and
    data, security, complexity, limited customization, and cost of service. C. Fog
    Computing It was first introduced by the CISCO corporation [10]. The primary focus
    of Fog Computing (FC) is to provide “closer” computation, data storage and application
    services than what the CC does. This “near-proximity” is related to client-side
    only, especially on smart phones and embedded systems. Most of the time, FC is
    incorporated into the local network routers to provide user “on-the-spot” services.
    Technically, FC restricts data mobility to some extent, which results into enhancement
    at location awareness, low latency, system efficiency, and backbone bandwidth
    savings. Certainly, it improves data availability and security issues which are
    the most prominent challenges in CC. Though, FC holds a strong competition in
    market place, it needs to solve following issues that includes standardization,
    software package portability among various embedded computing specifics, container
    management for resource constraint embedded systems, and stringent support system,
    to mitigate with frequent communications with cloud [11]. D. Edge Computing It
    is the latest upgradation in computing paradigm phenomena that performs data processing
    at the “edge” of the network [12]. Unlink FC, Edge Computing (EC) provides more
    efficient solution in terms of computation and data-analysis performance at the
    edge of the network. EC is more inclined toward serving applications that include
    Internet of Things (IoT). EC may reside in and around of FC, while supporting
    the backbone cloud service by means of “Push/Pull” attribute. Though, several
    application scenarios are proposed where EC performs better than other computing
    paradigms [13]–[16], it suffers from problems such as: programmability, naming,
    standardization, data abstraction, service management, battery life, and cost
    to end-user. Till now, the discussions provide comprehensive awareness about various
    advantages and drawbacks of all the four paradigms as mentioned above. GC supports
    one task performance in distributed environment, CC provides service models to
    perform a task, FC allows “on-the-spot” on-network processing of task, and EC
    leverages computation of tasks originated at edges of network. DC goes beyond
    the existing generic concept of service/network/storage to a sub-platform schema,
    as presented in the following sections. Table 1 presents the key terms and their
    abbreviations used in this article. TABLE 1 Key Abbreviations and Their Full Forms
    SECTION III. Definition of Dew Computing Before going into the detailed discussions
    on DC, let’s first get acquainted with the answer of a vital question: What is
    DC? In reply, Wang [17] emphasized on two key words: (1) “independence” and (2)
    “collaboration” which are to be necessitated for the evolvement of the DC. K.
    Skala et al. on the other hand, provided a theory on micro-service components
    with respect to existing centralized service systems. It has also added on how
    DC and its allied components can successively be positioned far away from current
    virtual infrastructures. This, apparently refers to a rough-similarity with “independence”
    theory as prescribed by what Wang [18] proposed with a twist of self-sufficient
    approach. Similarly, Ristov et al. [19] prescribed the “independence” theory,
    as of Y. Wang and correlated with the newluy introduced “collaboration” theory.
    It is comprehended that all the three definitions do not contradict with each
    other per their souls, however, micro-service and information centric issues need
    to be added with the Y. Wang’s one. Being most novel, DC requires some clear nomenclatures
    to make it more readable and comprehensive for fellow researchers. Five novel
    aspects (e.g. Rule-based Data Collection, Synchronization, Scalability, Re-origination,
    and Any Time Any How Accessibility-ATAHA) are hereby newly included in this definition.
    Novel service models and identity mapping techniques are also associated for proper
    conjunctions. Hence, the resultant definition of Dew Computing may be read as
    below: “Dew Computing is a programming model for enabling ubiquitous, pervasive,
    and convenient ready-to-go, plug-in facility empowered personal network that includes
    Single-Super-Hybrid-Peer P2P communication link. Its main goal is to access a
    pool of raw data equipped with meta-data that can be rapidly created, edited,
    stored, and deleted with minimal internetwork management effort (i.e. offline
    mode). It may be specially tailored for efficient usage, installation, and consumption
    of local computing (i.e. on-premises) resources like PC, Laptop, Tablet, high
    end Smart Phone. This computing model is composed of six essential characteristics
    such as. Rule-based Data Collection, Synchronization, Scalability, Re-origination,
    Transparency, and Any Time Any How Accessibility; three service models such as
    Software-as-a-Dew Service, Software-as-a-Dew Product, Infrastructure-as-a-Dew;
    and two identity models (e.g. Open, Closed). All such efforts shall be made towards
    running of applications in a purely-distributed and hierarchical manner without
    requiring continuous intervention from remotely located central communication
    point e.g. cloud server etc..” Detailed discussions on all these segments of DC
    are presented in the following sections. SECTION IV. Theory and Concept Behind
    the Dew Computing Current section is the core part of this article that seeks
    the answers to a set of questions such as: What are the components of the Dew
    Computing architecture? How is it related to Cloud Computing aspect? How do those
    components work in integrated way? What are the features of Dew Computing? Is
    DC feasible to get deployable at current scenario? Key answers of these queries
    are placed inside the arguments and state-of-the-art discussions given later.
    Dew-cloud architecture is the best part to start with. But before that, recapitulation
    about standard client-server architecture is worth to mention. Client-server architecture
    is the basis of existing distributed network-application structures. It is designed
    to partition scheduled/assigned jobs between service provider and possible service
    seeker. Initially, it was designed to provide distributed service to a client
    from anywhere in the network. Main goals of this architecture are to leverage
    four services such as: (1) flexibility, (2) interoperability, (3) scalability,
    and (4) usability. The relationships between server and client may be formulated
    by three ways such as: 1:1, 1:N, or M:N, where M, N represent arbitrary but finite
    number of clients or servers greater than 1, respectively. At bottom line, we
    may assume that client-server architecture is the ultimate-basis of current cloud
    computing and internet. In contrary to client-server, current article proposes
    a novel dew-cloud architecture. A. Dew-Cloud Architecture Wang [20] has proposed
    a cloud-dew architecture to describe what it is and how it works. In that design,
    Y. Wang assumed cloud-dew architecture as an extension of existing client-server
    architecture as discussed earlier. Following design considerations were undertaken
    while illustrating the cloud-dew architecture. For example, server was reconsidered
    as the “cloud server” that includes all supportive services and database facilities
    and client was reconsidered as an ordinary “local computer” which comprised of
    four components e.g. “client program,” “dew server,” “DBMS,” and “databases.”
    Here, I append few more important and essential parts into it that may appear
    as a more refined version (see Fig 1) than the earlier. While elaborating proposed
    architecture, I adhere to some portions of what W. Yang proposed. It is done due
    to provide more readability and linked-comprehension. In this case, a Dew Server
    is assumed as a special-purpose web server that inhibits inside user’s own local
    machine. This local machine is comprised of four main components such as: (1)
    Dew Server, (2) Dew DBMS, (3) Dew Client program, and (4) Dew Client Service Application.
    An ordinary cloud is hereby considered as a Cloud Server that resides in a remote
    location. Main purpose of proposed Dew Server are (1) to server user with requested
    services i.e. in case of cloud and (2) to perform synchronization and correlate
    between local data and remote data. Discussions on these components are presented
    below. FIGURE 1. Proposed model of Dew-Cloud architecture. Show All B. Dew Server
    Dew Server has 8 vital specifications as given below: It must be light-weight
    i.e. structure, purpose, and usage should be specific. It will ordinarily serve
    only one client at a time. It should normally store the frequently used user data
    in its databases. Size of stored data shall be as minimum as possible. It may
    be prone to data-loss due to its un-regularized interaction with fatal errors
    like attach by malware, virus or system damages. Its lost data should be recoverable
    (i.e. regeneration) from Cloud server. It will be responsible for all activities,
    including controlling of DBMS, identity mapping service, raw data synchronization,
    rule based data collection, dew script analysis etc. Ultimately, it will emerge
    as a Personal Information Center to its user. Its services shall be accessible
    to user at any time with/without internet connection. Let’s compare these characteristics
    metaphorically. Here, Dew Server is assumed as a dew upon a plant-leaf and Cloud
    Server is considered as floating clouds in the sky. Dew is less-weighed (as is
    i), it is placed on an entity (as is ii), dew is collection of sub-molecular “dewlets”
    that captures the surroundings to its center (as is iii), dew is physically tiny
    (as is iv), dew is evaporable (as is v), dew may be recreated from showers from
    cloud (as is vi), dew is closest to earth to help wet earth, grow crops, create
    moisture etc. (as is vii), and it very near to us to touch and feel (as is viii).
    Dew Server is the most vital part of the proposed Dew-Cloud architecture. Thus,
    it must be equipped with several adaptive technologies. Ordinarily, it comprises
    of four essential co-servers such as: Database, Mobile Information, Application,
    and POP/IMAP message protocols. In general, when a user searches or accesses for
    some website contents in internet, the “remote-cloud/server” provides all the
    responses against such requests. In proposed theory, the user is able to surf
    the same contents by means of the Dew Server. Presence or absence of internet
    will not be an issue. For example, suppose there is a website http://www.abc.com
    which is already adopted with Dew-Cloud architecture and avaibale for being surfed.
    The Dew Server (residing at user’s local computer) must keep note of it and creates
    (upon confirmation from user or self-motivated) a dual (similar copy) of the visited
    website in user’s local computer. Such type of dual may be called as “Dew Site”
    that is analogous to existing web site. Once such Dew Site exists in the local
    machine, user can surf the web-information about the Dew Site and performs necessary
    modifications, if any. But, modifying a Dew Site is not an easy task. A special
    scripting file coded by a web language may be presented to handle such activities.
    It is worth to note that each Dew Site should be associated with unique Dew Script
    counterpart. Now, whatever information is already present in a Dew Site, Dew Script
    is able to modify it per its supervisor i.e. “Dew Analyzer.” A Dew Analyzer is
    a tool which is designed to take over all possible charges performed by the Dew
    Script. Hence, a Dew Database should be associated with storing such activities.
    Database related tasks are normally undertaken by Database Co-Server. For this
    reason, the Dew Script technology should not be proprietorial to any vendor. Instead
    it should be based on publicly available and popular open-source technology. C.
    Dew Server-Dew Site Correlation Till now, discussions are mainly focused on performance-specific
    aspects of Dew Server and its allied sub-components. However, it is yet not decided
    that what will be the number of Dew Servers that will be installed in a local
    machine. This can be illustrated by the proposed dimensions in Fig 2. Each of
    the Dew Sites should have its own Dew Database, Dew Analyzer, and Dew Script associated
    with it. It is possible to have several orientations in this regard in following
    fashions: (1) One Dew Server for each Dew Site (i.e. one Dew Script) i.e. 1:1
    and (2) One Dew Server for multiple Dew Site i.e. 1: N or in any hybrid fashion.
    It is also possible for one Dew Server to host an optimized number of Dew Sites.
    It should be done according to implications of load balancing techniques. For
    example, the mapping of one or multiple Dew Server versus one or multiple Dew
    Sites could be done as conjunction to the cache memory mapping technique. In 1:1
    scenario, one Dew Site will ordinaily be uniquely handled by one Dew Server. It
    will resul into a better performing and more secure system. But, it will incur
    higher cost during installation in terms of service charge, licensing, over burdening,
    and complexity. It may be a cumbersome situation for local machine to handle too
    many Dew Servers into one local system. Hence, the local machine should be equipped
    with multi-core processing units with real-time and optimized scheduling tool.
    FIGURE 2. Proposed relationship between Dew Server and Dew Site (1:1 and 1:N).
    Show All Otherwise, one Dew Server may allocate multiple Dew Sites in the local
    machine. This is less cumbersome than the 1:1 approach. However, when dynamic
    selection of Dew Sites is imposed upon one Dew Server, a specialized scheduling
    algorithm needs to be developed along with it. Whenever, a Dew Site is not being
    surfed or idle, Dew Server may temporarily select other Dew Site which is currently
    overloaded or its allocator (i.e. Dew Server) is over-burdened. For this reason,
    a Dew Server should adopt “Plug-in” mechanism. Once, a Dew Site is temporarily
    detached from hosting facility and others are attached, the request coming from
    user must be channelized. This would require an intra-domain mapping system so
    that URLs are uniquely provisioned and mapped. It is a major concern for most
    of the existing scripting techniques and databases offered by different vendors.
    Now-a-days, a dozen of Integrated Development Environments (IDE), web languages,
    scripting tools, DBMSs etc., are present in public domain. Hence, it is mostly
    impossible for a Dew Server to integrate each and every such platform and technology
    into its ecosystem. However, if a Dew Server adopts following considerations,
    it is envisaged that some of the problems might get lowered down such as: Removing
    restrictions on usage of homogeneous technology and platform in Web Site and its
    corresponding Dew Site. Seeking current server packages that leverage feasible
    supports toward employing multiple DBMS and platforms in the same machine. Facilitating
    a standard guideline on how a Dew Server developer should be cooperative with
    Dew Site developers. D. Dew Client Services Dew Client program is responsible
    for facilitation of several applications such as: identity mapping, rule-based
    data collection, raw data synchronization, scalability, ATAHA etc. Out of these,
    identity mapping may be considered as most vital task to follow which is prescribed
    as below. 1) Server Identity Mapping Websites normally check user identity before
    giving access to secure contents. Login-logout combo is the basis of it. In case
    of Dew Server, similar approach may be taken. Dew site User Identity (i.e. DUI)
    could be a possible solution. However, if one user access one Dew Server (i.e.
    1:1) then such identification may not be necessary. Because, the user herself
    has access over own dew computer. But, if multiple users try to access one Dew
    Server at a time, then it becomes a necessity. Otherwise, a gross privacy violations
    may occur. DUI may be based on existing privacy and authorization protocols e.g.
    login/logout using some user id and password, as in case of standard website user
    identity i.e. WUI. 2) User Identity Mapping It is obvious that the correlation
    between the WUI and DUI is a trivial task. To tackle this probem, a complying
    solution is proposed in form of the user’s activity diagram as shown in Fig 3.
    Let’s illustrate a use case scenario as follows. Suppose, “keshav” is a local
    user i.e. Dew User and “partha” is a global user i.e. ordinary internet user.
    Both the users want to access http://www.abc.com (assumed as an ordinary Web Site)
    which is hosted on a cloud server and imported Dew-Cloud architecture. Assume
    that, any naïve user who wishes to access and modify selective contents in the
    http://www.abc.com, can do so, provided internet connection is available. For
    sake of minimizing overhead in processing, authenticating, and hassle-free service,weI
    compel all users to have individual OpenID. It is an open standard as well as
    a distributed protocol, meant to provide authentication services to any user who
    already owns such user ID from any certified OpenID provider and uses that user
    ID to login any Web Site which accepts OpenID’s authentication service, to login
    http://www.abc.com. Now suppose, keshav (i.e. http://keshav.google.com) and partha
    (i.e. http://www.partha.google.com) both of them request and get individual OpenID
    accounts (see Step 1 and 2 in Fig 3). In this context, both of them can access
    and modify their own data (READ, WRITE and EXECUTE mode but other’s data in READ
    mode only) http://www.abc.com (see Step 3 and 12 in Fig 3). Such access is analogous
    to existing web sites e.g. http://www.facebook.com, http://www.twitter.com, and
    http://www.linkedin.com etc. When the internet connection is available, both of
    them can access on the Web Site and everything seems to be fine enough. Simultaneously,
    when keshav does his first-time registration and login to the Dew Server. He accesses
    and modifies (if any) personal data which is otherwise visible to any internet
    user on http://www.abc.com (see Step 4 Fig 3). Upon successful browsing of http://www.abc.com,
    he wishes to download some personal data (i.e. to be stored in Dew Database) and
    profile-page to the Dew Server (see Step 5 Fig 3). This data collection could
    be visualized as per user’s prompt or predefined rule-based. After completion
    of Step 5, Dew Server will create a Dew Site in name of http://wid.abc.com in
    local machine. Here, wid is incorporated in analogous to www to differentiate
    between Dew Site and Web Site. This Dew Site provides keshav’s personalized view
    of http://www.abc.com. FIGURE 3. Activity diagram while surfing on Dew Server.
    Show All Now suppose, the internet connection is not available to both the users.
    Thus, partha is not able to access http://www.abc.com although his data are currently
    online. He should wait till the reconnection with the internet. But, keshav now
    has an option. He may surf his own information and post any message and write
    on some links in http://wid.abc.com (see Steps 6, 7, 8, and 9 in Fig 3). During
    such activities, Dew Client program starts services of Dew Script analyzer which
    in turn coordinates in creating new file such as likes.dewscript or appending
    information to existing Dew Site-pages. When internet is again connected (later),
    updated-information on Dew Site-pages and already created files are synchronized
    with http://keshav.dew.abc.com (partial data storage facility of http://www.abc.com).
    It is a private memory location for all information about keshav’s profile. Any
    internet user (like partha) is now able to surf keshav’s profile on http://www.abc.com.
    But, there is a problem i.e. ownership of updated files. How the synchronizer
    would identify the owner of likes.dewscript? As we know that the owner of likes.dewscript
    is keshav not http://keshav.google.com. So, when keshav would try to reuse (re-update)
    or surf this file later the http://www.abc.com, related cloud services will not
    authorize i.e. allow keshav to do so. This problem may be solved by incorporating
    a master mapping table into Dew Server. It will periodically map Dew User’s identity
    with the cloud user. This copy may also be shadowed and the shadow part may be
    placed in the cloud server. E. Dew Domain Name System (DDNS) If one Dew Server
    hosts one Dew Site, it would be easier for the system to handle all the requests
    coming from user to direct. It is very likely that one Dew Server will host multiple
    number of Dew Sites in practical scenarios. In that case, a redirection strategy
    is a must for the dew computer. To resolve this problem, we introduce the Dew
    Domain Mapping System i.e. DDNS a modified version of existing Domain Naming System.
    It is well known that a global DNS maps a requested “string” into an IP address.
    DDNS does the same thing, but with an exception that the redirection of local
    URLs are done with respective to the target Dew Sites. It can be done by two ways
    as precribed below. 1) Method 1 (Host-To-IP Mapping) In this method, local URLs
    are mapped to a standard localhost i.e. 127.0.0.1. Here, local URL means URL of
    individual Dew Sites e.g. http://wid.abc.com. Instead of sending local URLs to
    the DNS service, Dew Server sends those to DDNS. Mapping of local URLs could be
    done in three ways such as: (1) zone file: it contains mapping information between
    domain names and IP addresses, usually organized in form of text representations
    of resource records. The domain owner should add specific records into the domain’s
    register. Obviously, without internet connectivity such file generally impossible
    to get updated in cloud side. The cloud server must incorporate Dew-Cloud architecture
    to get simultaneously involved, (2) hosts file: it is a plain text file, placed
    in every operating system to map hostnames to IP address. All local URLs could
    be mapped to localhost e.g. http://wid.abc1.com, http://wid.abc2.com,…, http://wid.abc10.com
    to localhost-127.0.0.1. This method could be useful for any machine that is independent
    of Dew-Cloud architecture, and (3) development of novel web-browser: existing
    web-browsers should be modified to co-opt with surfing of Dew Sites. Whenever,
    the browser will be opened, it should be capable to map the local URLs into localhost.
    2) Method 2 (Dew Domain Name Redirection-DDNR) In this method, Dew Server redirects
    all local URLs to the requested Dew Sites only. For example, if a few particular
    requests about http://wid.abc1.com and http://wid.abc2.com arise from a dew user,
    those requests must be mapped with http://wid.abc1.comhttp://wid.abc1.com and
    http://wid.abc2.com, respectively. This task is plausible because a portion of
    the host name is usually captured by local environment variables. Hence, whenever
    any URL request comes from th dew user, the environment variable would assist
    the Dew Server to redirect into the specific Dew Script. F. Transparency Transparency
    refers to the process of separation of the high-level abstracts from low-level
    implications [21], [22]. A system that “hides” the complex implementation details
    from its users is called a transparent system. Oszu and Valduriez [21] mention
    two forms of transparency such as: data replication transparency and data distribution
    transparency. In the context of DC, both of the forms may be leveraged [23]. Data
    replication transparency refers to the user’s accessibility over data as if it
    were a single copy, though the data may have two copies-one stored in the Dew
    Database (i.e. local copy) and the other into the cloud database (i.e. master
    copy). User may or may not be aware of such duplicacy. Data distribution transparency
    refers to the fact that users shall not have any difficulty to handle to data
    whether it may be stored in the on-premises computer or the cloud database. Though
    it should, data replication and network transparency are not always perceived
    in existing DBMS and other system solutions. If it were, the scenario would have
    been as follows: suppose a user is currently accessing http://www.instagram.com.
    If the internet connection is off, then this web site is also not accessible.
    Now, if user wants to access http://www.instragram.com in current context, replication
    and network transparency should play an important role. This means, when internet
    connection is on, on-premises computer i.e. Dew Server will store the visited
    page and store all information in local database i.e. Dew Database. Upon suitable
    modification in the behavior of the browser, user could become able to access
    http://www.instragram.com in local machine. The browser will first try to connect
    the internet, if successful, the surfing would continue as usual. If there is
    no internet connection, the Dew Server shall leverage similar facilities that
    would have been if it were provding the original web surfing experience. Here,
    Dew Server may allot all the replicated data to the users, while hiding all the
    complex details about communication link failure, existence of operation from
    local computer, and browser behavior. The user will assume as if he/she is viewing
    the pages of http://www.instragram.com on internet itself. Will this transparency
    provide exact services as the original web site would have given? Due to the illustrative
    formation of the Dew Server, following activities would be possibile such as:
    real-time image posting, message posting, and poking. But, it may not be “that
    much” realistic. Perhaps, a more drastic approach is to be comprehended. It is
    better to keep the user aware of current context i.e. what is going inside the
    system. In that case, a mutual consistency algorithm needs to be devised which
    will synchronize the replicas in both Dew Database and cloud database upon successful
    internet connection. Mutual consistency algorithm may incorporate two orthogonal
    approaches to solve this problem. Firstly, high-priority update and low priority
    update; high priority update takes place in context of global access to cloud
    server; whereas low priority update takes place after high priority updates have
    already occurred. Secondly, core update propagation and distributed update propagation;
    core update necessitates that data update to be first taken in the master copy;
    and distributed update implies on local copy after master copy is updated. Hence,
    four relationships between these two update strategies could be framed: (1) high
    core priority, (2) high distributed priority, (3) low core priority, and (4) low
    distributed priority. In applications, it may be at loss due to its less affection
    toward the internet connection. In this situation, high priority data replication
    will neither be possible nor appropriate. Thus, leaving a choice for low priority
    update. Now, out of the two options i.e. low core priority and low distributed
    priority, low core update seems unpredictable due to frequent internet connection
    loss. It leaves a last possible option-low distributed data replication. In this
    strategy, local copy gets asynchronously updated sometimes after the original
    modifications are processed. Obviously, such updates shall leverage more complex
    communication and database protocols. In reality, Dew Database presents a partial
    replica of the cloud database, thus a forming a subset of cloud database. The
    cloud database shall contain a complete set of data about the user and its web
    site access. Whereas, the Dew Database stores the local data-logs only. There
    may be a situation when the Dew Database would require oweing the whole dataset
    or try to contain some amount of data only at Dew Database. Undoubtedly, such
    incidents may occur when (1) the data is completely related to Dew Server’s operation
    and (2) the partial amount of data is very secure to user that he/she does not
    want to replicate in cloud. G. Single-Super-Hybrid-Peer P2P Network As already
    discussed, proposed dew-cloud architecture is an extended form of existing client-server
    architecture. Hence, it could be assumed that a peer-to-peer (i.e. P2P network)
    communication system is inherited inside the dew eco-system [24]–[27]. But, theres
    is a steady exception. Dew-cloud architecture requires servers at both ends (i.e.
    web server end and client end). Thus, the network structure of dew-cloud architecture
    may be perceived as a hybrid P2P network instead of a simple P2P network. Here,
    the cloud server acts like a super-peer node. At any time-stamp, one Dew Server
    communicates with one cloud server. Thus, envisaged P2P network structure could
    also be reframed as a Single-Super-Hybrid-Peer P2P network. If this communication
    link (i.e. between the super-peer and a normal peer) fails, selected peer is partitioned
    among whole dew-cloud system. In such scenario, the client-peer is requested to
    perform several tasks so that the user may be facilitated with uninterrupted web
    surfing. By this virtue, a local peer not only communicates with super-peer, but
    also talks with similar client-peers. Thus resulating into a new opportunity to
    create a closed communication group among multiple local-peers without intervention
    from super-peer. It is henceforth easy to understand that a Single-Super-Hybrid-Peer
    P2P network is simpler than multiple-super-peer P2P network but more complex to
    implement than a client-server architecture. H. Service Models Software-a-a-Service
    (i.e. SaaS) in one of the most vital service models in the CC paradigm. In a SaaS
    model, a software is usually placed over a centralized cloud server and accessed
    by multiple users in subscription basis. The whole task of such access is usually
    leveraged by a web browser or with licensing clauses. Before origination of the
    SaaS model, a similar but less popular business model existed in the market i.e.
    Software-as-a-Product (SaaP) [28]–[31]. In a SaaP service model, an end user hosts
    a purchased software from designated server and use it in a local machine. Licensing
    becomes mandatory for such activity. Though, SaaP existed earlier than SaaS, few
    organizations do still provide similar services, for example, Microsoft Office.
    SaaP does not require instantaneous internet connectivity to server its jobs,
    but the user should perform installation, medication, and update manually. It
    is a fact that, SaaS is somewhat better than SaaP in multitude forms that includes
    (1) centralized data storage, (2) automatic data update, and (3) free maintenance.
    A report says that SaaS has “better economic model” in terms of low cost and auto
    update than SaaP [28]. Despite of SaaS’s service-ability, it lacks in one issue
    that is internet connectivity. For example, suppose a shop owner owns an account
    in the Salesforce to manage all the store related information and local power
    goes off. The owner will certainly be unable to update the real-time store information
    to Salesforce and business will be running manually. Similarly, when a shop owner
    owns a business where internet connection is very infrequent or completely nil.
    He may not be able to access SaaS service at all. Instead, he should use SaaP
    to run his business transactions. This implies that both the SaaS and SaaP models
    have advantages and drawbacks. What if we could merge these two? But how? One
    solution is to simultaneously facilitate both of the SaaS and SaaP metrics to
    a dew user. When one goes offline, other holds the business. But again, there
    is a problem-some data will be stored in cloud server (i.e. SaaS) and some will
    be in local PC. Now when the user is unable to access both of the storage locations
    what will happen? In Dew Computing, such solution may be provided. As already
    discussed, in DC environment, a user has no obligations toward mandatory usage
    of internet for remote data access. Hence, user can access and update the information
    stored in local machine. Whenever internet connection is established the updated
    information may get synchronized with the cloud server. Software-as-a-Dew Service
    (i.e. SaaDS) and Software-as-Dew Product (i.e. SaaDP) are such two notions by
    which local and distributed software access could be resolved. Infrastructure-as-a-Service
    (i.e. IaaS) is another important cloud service that provides virtualized computing
    resources to users. User, only needs to login the cloud platform and relevant
    services will be in place. But in DC, cuurent perspective is completely different.
    Here, user gets complete access to the on-premises machine without internet accessibility.
    This provides a good opportunity for this service to be reframed as Infrastructure-as-a-Dew
    Service (i.e. IaadS). Is IaadS just an alias of IaaS? Certainly Not. Because,
    the local dew machine as got the real-time and dynamic support from the remote
    cloud server. If data or login information is lost or the local machine is stolen
    or destroyed, data will be safely recovered from the cloud. How? On-premises computer
    must store all settings related data as a backup copy into the cloud. Upon any
    damage to local copy the same may be retrieved from cloud and be placed in a newly
    bought machine. This scenario resembles to the “regeneration” metaphor of dew
    drop from the clouds. I. Synchronization Synchronization refers to the maintenance
    of two or more copies of data that are placed in distributed locations in a way
    such that seamless coherence among the multiple copies exist and data integrity
    should retain. Usually, this process needs to be synchronized with multiple sets
    of data in correlation with each other. In process synchronization, multiple distributed
    processes join to accomplish a common task sequence. In dew-cloud architecture,
    synchronization makes a clear presence in terms of applicability, importance,
    and sustainability. For example, suppose a user wants to access http://www.gmail.com/drive.
    The user must first authenticate the “user identity” with this web site. Similarly,
    the user must authenticate “user identity” for the Dew Site. When both of the
    authentication processes are over, a user-defined synchronization tool would upload/download
    the user data from/to Dew Server or cloud server. Certainly, this synchronization
    process shall be primarily based on time-stamps on each of the data-files. SECTION
    V. Application Potentials This section presents key impacts of dew-cloud architecture
    in multitude forms. Application potentials are hereby investigated to prescribe
    possible application area of DC. A novel 4-tier architecture follows the discussion
    that creates a symbiosis among cloud, fog, edge and itself for providing better
    user experience towsrd web surfing. A. Impacts of Dew-Cloud Architecture It would
    be wrong to interpret that Dew-Cloud architecture will automatically come into
    the scene of play. Major modifications and novel integrations are hereby needed
    to assimilate with rectified conjuncture. It is envisaged that when an enterprise
    or a cloud service provider would adopt the Dew-Cloud architecture into their
    ecosystem, the cloud will be capable to cooperate with many Dew Servers, simultaneously.
    Clouds shall be responsible for world-wide service providers while Dew Server
    should leverage direct data access to its user. Several application specifics
    will be ordered, as prescribed below: A user is capable to store and retrieve
    data to and from CC services as usual. More importantly, the user is also empowered
    to immediate data transceive with the Dew Server, even when the internet is not
    available. This gives user a unique opportunity to incorporate Any Time Any How
    Access (i.e. ATAHA) paradigm. Till date, web surfing without internet is an impossible
    job. Presence of the Dew Server would provide related as well as qualitative advantages.
    Now, the user can surf websites in ATAHA manner, despite of the fact that the
    current data should be pre-loaded in the Dew Server by rule-based data collection
    engine. Whenever, the internet connection is established, the processed data will
    be seamlessly synchronized to the designated Cloud Server. Obviously, a Dew Server
    cannot accommodate enormous amount of data which are part of cloud. Only a finite
    amount of most frequent and selective data to be provisioned in Dew Server. User
    is now capable to access any software using SaadS or SaadP model. Both of the
    cases, the software service services will be provided in form of the web sites
    (as well as the Dew Site). Now software making process could be unified by assimilating
    a Unified User Interface (i.e. UUI). Now, software learning and training will
    be much simpler than earlier. Another aspect of DC is the flexibility of software
    cost model. Upon a common agreement between Dew User and software vendor, license
    of the software may be provided to the Dew User. But, now Dew Users need not pay
    the whole amount to the vendor. The process of purchase, licensing, and usage
    could be logged onto the cloud database. Whenever, Dew User authenticates him/her
    self with cloud, he/she will be allowed to access the software in local machine
    and the cost may be deducted from bank account in subscription basis. Such type
    of business model may help SMEs to grow and leverage software services in SaaP
    (i.e. Dew Site access) model too. The principal aim of cloud or fog computing
    is to address complex computational operations which are regularly performed on
    bulk amount of data. Those data usually come from some web base or system level
    activities either performed by an end-user or system administrator around the
    globe. Most of the time, those data are in raw format having no context-ful information
    (i.e. context-free). In case of DC, all raw data should be tagged as context-aware.
    It means that the data would be accompanied by meta data. Having control over
    context-aware dataset that the DC would leverage for all types of self-organization
    in system level. Thus, providing more capability toward in-depth analysis and
    knowledge discovery. Despite of complex data processing capability, CC and FC
    are ordinarily not tailored to cope up with context-discovery solutions, that
    results into a gap of plausible generic integration of context-free data in data
    mining notions. The goal of DC is to fully realize user’s need and its environmental
    interactions in correlation with CC and FC. To solve this, Dew devices need to
    seamlessly cooperate with each other. The reasons foc such behavior are low computation
    processing capability and less affection toward internet usage. Hence, Dew-Computers
    should act like self-organisms which are very similar as the living examples around
    our environment. Being space-oriented, Dew-devices are expected not getting connected
    with internet in most of its operating durations. Hence, they should collaborate
    with other Dew-devices in near vicinity by means of short-range communications.
    As opposed to CC and FC, DC is less resource hungry. Resources in form of processor,
    memory, and parallelism may create obligations to its normal activities. Thus,
    Dew-devices should make a nexus among other Dew-devices in cooperative manner
    where every peer should contribute some portion of its resource for execution
    of given task. Though, Dew-devices could be comprehended as Low Performance Information
    Processing (i.e. LPIP) systems, it could provide higher computation capacity and
    greater decisions, when successful self-organism systems are in place. B. Application
    Potentials of Dew Computing Dew Computing paradigm is envisaged to enhance current
    pervasive implementations in more flexible and distributed fashion. The area of
    such implementations is unlimited, that includes home automation, smart gardening,
    green computation, smart health care, traffic signal monitoring, context-aware
    communication, smart wearable computing, and industrial gas leakage monitoring.
    Out of all, IoT could play a major application role along with DC. As discussed
    in Section I, IoT is an application perspective model where heterogeneous devices
    act together to perform a set of tasks. Most of the time, aggregated data and
    inherent information are stored and extracted (respectively) in the allied cloud
    services. It means that all the “edge-devices” in such application scenario need
    to correlate with internet availability all the time. But, it may not always be
    viable to use internet due to some reasons (e.g. trivial aspects of local environment,
    socio-political issues, cost, disasters and behavior of user etc.). Hence, it
    would be better if IoT could be juxtaposed with DC in certain cooperative manner.
    I call this new phenomenon as Dew of Things (i.e. DoT). Here, I replace the term
    “Internet” by “Dew” as Dew-device shall provide all necessary supportd to the
    “things.” Obviously, when required, “things” will communicate with the cloud for
    system update and fetching necessary information. For example, suppose user-A
    employs an auto sprinkler system in his/her garden that is integrated with soil
    moisture sensor, humidity sensor, temperature sensor, digital valve, and a cloud
    service. Based on the value of soil moisture level, digital valve will automatically
    replenish some amount of water in the garden. Correlation between air temperature,
    humidity, and soil moisture level is a thus complex task. If cloud services were
    employed, it would have received timely values of temperature, humidity and soil
    moisture and store into the cloud database. Upon an occurance of high drought
    situation in garden soil, cloud services would have pinged user-A (by email, SMS
    or push notification) to take necessary steps. When the digital valve would not
    have been able to communicate with the internet, then it would certainly be unable
    to sprinkle water. Applying Dew Server, may solve such problem due to the fact
    that information is mostly locally processed and stored. The control over grading
    system seems to have more grip in the hands of user-A. Dew Server could efficiently
    allot and ping all the installed sensors and actuators in garden and provide full
    network access to all these devices. As in DoT, other smart computing systems
    could easily be developed in and around the DC environment. Whatever the application
    may be, DC is meant to uplift green computation to a new horizon. In normal scenario,
    a Base Transceiver Station (i.e. BTS) performs all telecommunication realted facilities
    that include call send, call received, location monitoring of the phone user,
    SMS service, IP telephony, and video data transmission etc. On an average, a cell
    tower consumes 3-4 KW power to serve communication services. The AC backup generators
    generate about 40-70 KW power to support a cell tower. These power generation
    services are continuously leveraged for normal operation. Assuming DC in operational
    mode, users will surf web sites in Dew-devices without using internet. Thus, reducing
    the data traffic on inter-network which in turn reduces work load of cell towers
    i.e. cell towers will just concentrate on basic voice or text services rather
    on all superficial services. This scenario implies that cell towers will be normally
    under-utilized than earlier. Thus, cell towers will perform less computations
    that will less power consumption. Hence, green communication aspect is possible
    to be established. When, Dew-devices are sufficient enough to allow communication
    among each other by means of local network, cell towers will lesser utilized.
    Thus, resulting into more energy efficient eco-system which does flagship of the
    concept of green computing. Green computing can be more ascertained with proper
    understanding of overall interactions between cloud, fog, edge and dew, altogether.
    To facilitate such problem, a novel 4-tier dew hierarchy is hence presented in
    Fig. 4. This hierarchy consists of 4-tiers of computing paradigms. Tier 1 is hosted
    by cloud specific structures. Tier 1 is adjacent to Tier 2 that comprises of fog
    nodes and related services. Similarly, Tier 3 is made of edge computing implementations
    whereas Tier 4 presents dew computing notions. Each tier provides specific and
    relevant services to its adjacent tier. All tiers except tier 4 have associated
    with respective firewall services. That inherently improves overall security concern
    linked to this structure. Dew computing acts at the bottom most layer by paving
    appropriate synergies and synchronized behavior to all other above tiers. Virtual
    dew cluster is sldo envisaged that can provide purely ad-hoc service distribution
    and web-data sharing among inter-dew computers. The communication links between
    every tier is dependent on individual protocol layer. However, a dew computer
    may fetch required amount of web-data from edge, fog or cloud counterpart. Similarly,
    web-data synchronization is also based on inter-alia behavior. Dew server has
    complete autonomy in retrieving and syncing own data from any source that may
    be metaphorically represented by existing memory hierarchy in digital systems.
    It is worth to note that dew server makes its user’s experience super flexible
    by automating the choice of data correlation with edge, fog or cloud services.
    When requested web-data is not available in dew database, edge database will be
    searched for. Upon request failure, fog database will be sought and lastly cloud
    will server the purpose. In Fig. 1., direct connectivity between dew and cloud
    is shown. This tier replicates the same with an extension of intermediary layers
    of edge and fog based services. Thus, it may be inferred that dew server is mainly
    dependent on cloud for web-data search, retrieval, and synchronizing activities.
    In other aspects, proposed tier structure does fine job in leveraging user centric
    web surfing experience in better form. User’s request is now being fully served
    without or minimal usage of internet connectivity. FIGURE 4. 4-Tier Dew hierarchy
    structure. Tier 1 is positioned by Cloud computing devices and services, Tier
    2 comprises of Fog computing devices and services, Tier 3 consists of Edge computing
    conjuncture, and Tier 4 leverages Dew computing assistance. Each tier is communication-wise
    directly linked to adjacent tier for efficient servicing to user’s request. Dew
    server is implemeneted on Dew computers that collectively makes virtual dew cluster
    together. Show All SECTION VI. Possible Challenges Being a novel computing paradigm,
    DC faces several technical challenges that includess power management, processor
    utility, data storage, viability of existing operating system, network model,
    communication protocol, programming principles, personal high productivity, database
    security, and behavior of browsers. I discuss each of these challenges individually.
    A. Power Management It is already discussed that DC shall require a local Dew
    Server to exchange information with cloud in 24×7 manner resulting into a continuous
    operational environment with or without interaction with both of the user and
    internet. Henceforth, the on-premises computers shall consume too much power for
    its activities. To tackle this problem, stand-by mode may be incorporated as it
    is the case with modern smart phones. Whenever user needs a service Dew Server
    could be back into normal operation mode otherwise it would stop all front-end
    activities but the back-end processing might be running. B. Processor Utility
    Now-a-days, most of the computing machines use inbuilt multi-core processors that
    most of the times are noticed to be extra-gated or supernumerary to the ordinary
    user requirement. Dew Computers must enable such scalable mechanism that may upgrade
    or downgrade the real-time needs of to execute processes. Two solutions are envisioned
    such as: (1) instead of using high-end multi core processors just employ single
    core processing units, or (2) in exceptional cases, borrow processing capacity
    as Infrastructure-as-a-Dew Service from the cloud. C. Data Storage This is really
    a big problem in DC paradigm. Dew machines are expected to belong from smart phone
    and other smart handheld machines where total memory usage amout is limited. It
    means an alternative way out should be paved. Several cloud-based solutions are
    available in market that provide storage facilities, for example Dropbox. It is
    one of the popular distributed data storage facilities which provides 24×7 service
    availability to users regardless to its server’s availability. It implies that
    without internet connection, user may upload and download files to or from Dropbox
    server. Whenever, internet is stabilized the synchronization is done. It leverages
    a perfect synergy with Dew Computing where independence and collaboration both
    are employed. Similarly, Microsoft’s OneDrive, Google’s Google Drive Offline are
    other storage solutions that is coherent with Dew Computing aspects. Regularly,
    we are vetted with many applications and services from different vendors on the
    web. As discussed, several Dew Computing applications are already present in the
    market but due to lack of knowledge and ignorance, we never tried to understand
    what these actualy are. Invasion of novel storage techniques are need of the time.
    Storage in Dew i.e. SiD may be comprehended as a complementary aspect to this
    problem. SiD, upon realization, could be positioned into on-premises computers
    that should be supported by current Solid-State Drive technology and integrated
    storage-software. D. Viability of Operating System Per usability, operating systems
    may get incorporated with a set of service-specific modules to facilitate dew
    applications. Besides process, memory and device management, dew management could
    be added on top of operating system. In-built dew services could be a core or
    extended function of such operating system. This would reduce the self-imposed
    load Dew Server, hence disseminating a better DC services. Another very interesting
    approach could also be furnished i.e. scalability. Operating system may leverage
    special module to manage scalability in internal level. E. Network Model We can
    assume that each Dew Computing device will collaborate with cloud in its own way,
    unless those are standardized. On other side, initially very few applications
    will run on Dew sdevices. But, this number may increase in future. At that time,
    each dew application shall require its own communication ports to interact with
    other on-board or distributed resources. What if, these applications cause resource
    conflicts such as port availability? Let assume that dew operating systems will
    handle this issue. Then only, redundant codes shall remain inside each of these
    applications which seems extravagant and unnecessary. Hence, it would be better
    if new network model be levied upon. On solution is to include one or more layers
    (e.g. context layer, dew application layer etc.) on top of existing Open Systems
    Interconnect model. F. Communication Protocol As already discussed, innovative
    dew applications are in verge to appear in near-future. New communication protocols
    are hence indeed a need to cope up with novel hypertext information passing, propagating
    among peers, and visualization. This would help in autonomic movement of web-information
    through different OSI layers and be communicated with other similar dew-devices
    in periphery. G. Programming Principles Revision in network and communication
    protocols will not be able to persuade dew applications. The reason is simple,
    current programming models solve how data to be organized and accessed. But, DC
    paradigm shall require data to be context-aware, exchanged with peers/clouds and
    processed at very end of Dew Server. Hence, new programming models must be developed
    to undertake context-awareness and orient synchronization and flexible toward
    effective way. H. Dew Recommender Engine Dew servers must have the capability
    of providing recommendation on the basis of user’s behavior and content surfing
    history. Novel recommender engine should be designed to enable user to choose/select
    specific dew sites, thus enhacing the overall user experience. Diverse machine
    learning algorithms could be tested against development of effective recommender
    engine. Its main purpose will be to help dew server select/choose another resourceful-dew
    server from local network for data renting. It will also recommend the dew server
    when to seek for internet connection and when not. I. Local Dew Network As, the
    DC is designed to be less affectionate toward internet connectivity, it would
    hevily rely on own dew data and local dew device data. Existing local network
    protocols may not be sufficient for renting the surfing-data from other dew devices
    placed in near vicinity. For this reason, Low Power Wide Area (i.e. LPWA) network
    could be used as complementary support to current network infrastructure. It will
    reduce data traffic on current network backhaul and increase low-power but moderate
    spectrum functionalities. IEEE 801.11ah, 802.11af and Bluetooth 5 may also be
    useful for creation of local dew network. J. Personal High Productivity It is
    important to seek for personal high productivity issues that may be raised in
    the DC paradigm. As envisioned, Dew-devices shall be less complex and resource
    intensive with respect to CC and FC. Hence, there will be high chance that these
    devices become less productive in terms of information processing capability.
    As Dew Computers are meant to provide efficient Personal Information Center-wise
    services, novel information processing solutions are in place. One solution could
    be to incorporate Distributed High Productive Information Processing notion into
    its environment. The main goal of such processing should encompass Giga/Tera/Peta/Exaflop
    computing capability to DC paradigm. It is not very hard to achieve, as DC communication
    link is assumed to be Single-Super-Hybrid-Peer P2P network that gives the opportunity
    to assimilate and share resources among local peers. K. Database Security As we
    know that Dew-Server will store a portion of data in local Dew database which
    upon requirement will be synchronized with cloud database. It is worth to note
    that both of the data and database are key components of Dew Computing scenario.
    Despite of high-end flexibility services of current database solutions, one important
    issue may be missing i.e. security-id database access. We are not talking about
    the generic login/logout and encryption security that are already present in existing
    databases. Rather, we are more concerned about the mitigation and migration of
    cloud-side technologies into the Dew-side. Cloud database is generally supported
    by the super-specialty security solutions which may be very minimal in case of
    Dew database. Hence, a threat in Dew database will be much more viable than it
    would be for cloud-side. Some malicious software or user’s fault may bring huge
    catastrophic error in Dew-system level. It the duty of the dew developers to seriously
    handle database security from a novel perspective so that hazards in Dew-databases
    may be efficiently dealt with. L. Behavior of Browser Browser is an application
    software meant to enable user to search, surf, and perform applications on the
    web. Novel development in browser technology is a must to manage all the web-related
    tasks in the DC paradigm. Because, a Dew-Server may host multiple Dew Sites which
    the user would require while surfing at any point of time. Hence, the browser
    should be able to relocate the Dew Site, being hosted inside the Dew Server. Obviously,
    WiD concept might be helpful for the browser to identify and propagate internal
    user requests to the designated Dew Site. Local Domain Naming System could be
    another helping tool in this regard. SECTION VII. Conclusion This paper proposes
    a novel Dew-Cloud architecture which is an extension of existing client-server
    architecture. Dew is a special purpose server which resides inside user’s local
    computer. It serves user’s requests in form of services, as it would in case of
    cloud. Multiple users are enabled to work in a single Dew Server at any point
    of time. Dew-Cloud architecture paves a novel computing paradigm i.e. Dew Computing.
    In purview of Dew-Cloud architecture and understandability, a novel definition
    is presented. Six key characteristics including rule-based data collection, synchronization,
    scalability, re-origination, transparency, and any time any how accessibility
    are discussed. It is envisaged that upon realization of Dew-Cloud architecture,
    computing scenario shall notably be changed where users are given more flexibility
    to have control over his/her own web documents and related activities, as is now.
    The major advantages of proposed DC would be envisaged to be seal healing attributes,
    autonomic augmentation, self-adaptive, transparent, user-programmability, and
    extreme scalability. It is expected that due reduction of high internet usage
    might come into the existence very soon. Being at the bottom most layer of hierarchical
    structure DC holds the responsibility to simulate the most critical implications
    of human-digital interaction at the grass root level. It must leverage two key
    aspects such as self-organization and mutual collaboration in all possible applications.
    While performing multitude of applications, DC should disseminate behavior of
    each components in its ecosystem. Certainly, DC would uplift current computing
    scenario to Global Information Processing Environment, which is a long-cherished
    need of civilization. But before that, it must cope up with local Distributed
    Information Processing Environment. More or less, DC will assist in leveraging
    the propaganda of being greener on its inherited values by minimizing cost, energy
    consumption, and hassle-free super flexible services. Authors Figures References
    Citations Keywords Metrics More Like This Server Placement and Task Allocation
    for Load Balancing in Edge-Computing Networks IEEE Access Published: 2021 Price
    Competition in Multi-Server Edge Computing Networks Under SAA and SIQ Models IEEE
    Transactions on Mobile Computing Published: 2024 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: (Ray, 2017)
  journal: IEEE access
  key_findings: DC is a programming model that enables ubiquitous, pervasive, and
    convenient access to data and applications with minimal internet connectivity.
    It utilizes a 4-tier hierarchical structure to facilitate data access from edge,
    fog, or cloud sources.
  limitations: null
  main_objective: To define and introduce a novel computing paradigm called Dew Computing
    (DC) and explore its potential applications.
  pdf_link: null
  publication_year: 2018
  relevance_evaluation: This paper is highly relevant to the outline point as it introduces
    a new computing paradigm, Dew Computing, which specifically focuses on the initial
    stages of the automated irrigation management pipeline, including data collection,
    edge and fog computing, real-time data transmission protocols and technologies.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: null
  title: 'An Introduction to Dew Computing: Definition, Concept and Implications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.comnet.2018.02.013
  analysis: '>'
  apa_citation: 'Schiller, E., Kalogeiton, E., Braun, T., Gomes, A., & Nikaein, N.
    (2018, August 27). CDS-MEC: NFV/SDN-based Application Management for MEC in 5G
    Systems. Computer Networks. https://doi.org/10.1016/j.comnet.2018.02.013'
  authors:
  - Eryk Schiller
  - Navid Nikaein
  - Eirini Kalogeiton
  - Mikael Gasparyan
  - Torsten Braun
  citation_count: 38
  data_sources: None
  explanation: 'The abstract you provided describes a paper that presents an architecture
    for end-to-end automated irrigation management systems that integrates IoT and
    machine learning technologies. The paper evaluates the current state of the art
    and identifies gaps and challenges in the field.


    The relevance of the paper to your literature review is that it provides a comprehensive
    overview of the use of advanced sensing technologies, such as hyperspectral imaging
    and thermal sensing, for non-invasive plant stress detection. This is a key aspect
    of automated irrigation management systems, as it allows for the early detection
    of plant stress and the timely application of irrigation water. The paper also
    highlights the importance of interoperability and standardization in enabling
    the integration of components within the automated irrigation management pipeline.
    This is particularly relevant to your literature review, as it suggests that the
    adoption of common standards and protocols will be essential for the widespread
    deployment of automated irrigation management systems.


    In terms of the paper''s evaluation, the relevance score is medium (0.7-0.79).
    This is because, while the paper provides a valuable overview of the field, it
    does not present any original research or empirical findings. The paper''s main
    contribution is in its synthesis of existing research and its identification of
    gaps and challenges in the field. As such, it is a useful resource for researchers
    and practitioners who are interested in the development and deployment of automated
    irrigation management systems, but it may not be directly relevant to all aspects
    of your literature review.'
  extract_1: '"This paper studies the integration of advanced sensing technologies
    such as hyperspectral imaging and thermal sensing, for non-invasive plant stress
    detection."'
  extract_2: '"Furthermore, we highlight the importance of interoperability and standardization
    in enabling the integration of components within the automated irrigation management
    pipeline."'
  full_citation: '>'
  full_text: '>

    Typesetting math: 70% Skip to main content Skip to article Journals & Books Search
    Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download
    full issue Outline Abstract 1. Introduction 2. Related work 3. MEC architecture
    specification 4. SDN-based controller 5. Use-cases 6. Conclusions Acknowledgment
    References Show full outline Cited by (45) Figures (22) Show 16 more figures Computer
    Networks Volume 135, 22 April 2018, Pages 96-107 CDS-MEC: NFV/SDN-based Application
    Management for MEC in 5G Systems Author links open overlay panel E. Schiller a,
    N. Nikaein b, E. Kalogeiton a, M. Gasparyan a, T. Braun a Show more Share Cite
    https://doi.org/10.1016/j.comnet.2018.02.013 Get rights and content Abstract This
    paper presents and evaluates the first open-source Network Function Virtualization
    (NFV)/Software Defined Networking (SDN)-based Mobile Edge Computing (MEC) platform.
    Our platform solves the Mobile Edge (ME) management issues with respect to Application
    (App) provisioning and traffic management. First, the ME Apps are managed as Virtual
    Network Functions (VNFs) on top of the virtual environment through the Juju VNF
    Manager (VNFM). Second, we develop an SDN controller to manage traffic on the
    ME System. Third, unlike other relevant architectures of ME systems, we use the
    control plane (i.e., S1 interface) to derive appropriate states for traffic management.
    Finally, we evaluate our solution in two use-cases: ME caching and Information
    Centric (ICN)/Delay Tolerant (DTN) Public Safety communication (PS). The MEC caching
    framework displays improved user Quality of Experience, e.g., latency, in comparison
    to direct communication, while the PS solution provides a residual mean of communication
    for rescue teams, when the network core (EPC) and a Public Data Network (PDN)
    are unavailable. Previous article in issue Next article in issue 1. Introduction
    There is an on-going effort that will change the ecosystem of future mobile networks
    providing intelligence at the network edge. Mobile Edge Computing (MEC) [1], [2]
    will be used to provide computing and storage directly at or close to an evolved
    Node B (eNB). Due to MEC, content, services, and applications will greatly benefit
    from reduced delay of the network edge. MEC is also foreseen in 3GPP 5G networks
    as an important technological enabler towards new genres of applications that
    intelligently combine location, network conditions, and radio information to provide
    enriched services to end-users. Therefore, MEC will widely spread in the ecosystem
    of future 5G networks. MEC could be implemented using older management techniques
    (i.e., not Network Function Virtualization (NFV)/Software Defined Networking (SDN)-based),
    however, NFV/SDN will greatly improve flexibility and rapid building of services
    at the edge. This work presents the architecture as well as implements and evaluates
    the performance of the CDS-MEC system.1 The paper is organized in the following
    way. Section 2 discusses the related work on 3GPP networks and MEC. In Section
    3, we describe architecture and implementation details of our MEC platform. Section
    4 describes the architecture of the SDN controller. The performance of our architecture
    running selected ME Apps is illustrated in Section 5. Finally, we conclude in
    Section 6. 2. Related work 2.1. Mobile Network Telecommunications In Fig. 1, we
    depict a simplified schematic of 4G Mobile Network Telecommunications. The LTE
    network is divided into the Evolved Packet Core (EPC) and the Radio Access Network
    (RAN). An eNB is a base station that provides a RAN towards end-users operating
    User Equipment (UE). The EPC contains a Home Subscriber Server (HSS), a Mobility
    Management Entity (MME), a Serving Gateway (SGW), and a Packet Data Network Gateway
    (PGW) [3]. The HSS is responsible for maintaining the user subscription information.
    The MME is a critical network function, which deals with the control plane. The
    SGW is responsible for handling user plane packets between the eNB and the PGW.
    The PGW is a user plane component, which forwards packets between the LTE network
    and packet networks (e.g., the Internet). In the remaining part of this paper,
    we refer to both PGW and SGW as Serving Packet Gateway (SPGW). Moreover, we will
    put a particular focus on the traffic management of the S1 (c.f., Fig. 1) interface
    between the eNB and MME in the control plane (S1-C) and the eNB and SPGW in the
    data plane, i.e., GPRS Tunnelling Protocol (S1-U). Download : Download high-res
    image (111KB) Download : Download full-size image Fig. 1. A simplified architecture
    of the LTE system. 2.2. SDN/NFV in mobile networks In the EPC, the NFV concept
    solves flexibility and cost-efficiency problems through the on-demand instantiation
    of Virtual Network Functions (VNFs) [4], while SDN is mainly proposed for traffic
    optimizations [5], [6], [7], [8] in the core focusing on benefits including performance,
    scalability, interoperability, and flexibility. There are several projects using
    the concept of NFV/SDN in Mobile Networks. Claudia2 can instantiate services in
    private (i.e., OpenNebula, Eucalyptus, vSphere) and public clouds (Amazon, Flexiscale,
    etc.). The EU FP7 T-NOVA project [9] implements an orchestration platform for
    provisioning, configuration, monitoring, and optimization of Network Function-as-a-Service
    over virtualized infrastructures. The orchestration aspects covered by T-NOVA
    primarily include service chain mapping, service chaining and provisioning. In
    terms of service chaining, it employs SDN to install the forwarding state into
    the switches for traffic steering through the VNF chain. The EU H2020 SONATA project
    [10] also implements an orchestration and management framework, which allows both
    the service operator and the service developers to influence the deployment and
    placement of service chains on the physical infrastructure. SONATA supports a
    Development and Operations (DevOps) work-flow, which allows both developers and
    service operators to collaborate during the orchestration to optimize the design
    and deployment of the service. The EU FP7 UNIFY project [11] proposes an orchestration
    layer, which aims to achieve optimal placement of service chains on a physical
    infrastructure across different domains. The orchestration layer also provides
    an abstract and unified view of physical resources across different infrastructure
    providers to a service layer, through which customers can request a service. The
    EU FP7 Mobile Cloud Networking (MCN) project [12] provides a distributed orchestration
    layer consisting of a service manager (e.g., a RAN provider) and multiple service
    orchestrators per domain. The service manager provides an interface to the end
    customer to request a service from the corresponding domain. For each requested
    service chain, the service manager creates a service orchestrator, which configures,
    creates and deploys the service on the domain infrastructure through its controller.
    At the standardization level, the ETSI NFV Industry Specification Group (ISG)
    is defining concepts, architectures, and interfaces for delivery and management
    of VNFs and their service chains. In ETSI NFV MANagement and Orchestration (MANO)
    [13], the NFV Orchestrator, in combination with the VNF Manager, is in charge
    of deploying the network services over the physical infrastructure as well as
    configuring and operating (scale-in/scale-out) the VNFs covering all the VNFs’
    life-cycles. In terms of software, several open source projects are addressing
    platforms for NFV Infrastructures and NFV MANO tools. Virtual Infrastructure Manager
    (VIM) and NFV Infrastructure (NFVI) are the current focus of the OPNFV3 initiative,
    which has the goal to provide NFVI and VIM components, as well as their open Application
    Programming Interfaces (APIs). Other projects focus more on the management and
    orchestration functions of the NFV MANO architecture: OpenBaton,4 Open-O5 and
    OpenSourceMANO (OSM)6 provide open source software for NFV-Orchestration and generic
    Virtual Network Function Managers (VNFMs). 2.3. ME systems Roman et al. [14] compared
    MEC, fog computing, and cloudlet systems. A derivation of a conceptual architecture,
    spanning functionalities and interfaces for provisioning applications on MEC systems
    is derived in [15]. The ETSI MEC ISG provides an open standardization environment
    for the development of architectures for ME Systems. Initially, ETSI defined six
    application use-cases [1] for mobile edge systems. The work of ETSI concentrates
    on a top-down approach starting with MEC applications. The derivation of the ME
    Host architecture currently focuses on the management of application life-cycle
    through virtualization and appropriate management of the data plane [1], [2].
    However, the reference points of the lowest level are not defined. A road-map
    for ME systems focusing on (power consumption, delay, bandwidth utilization, and
    scalability) with a careful study on application categorization is presented in
    [16]. For example, MEC services can help with MEC task offloading (e.g., the video
    encoding process), hence improving power consumption in mobile devices [17]. Moreover,
    as a complementary functionality in current and future networks, MEC may become
    an enabler for real-time context-aware applications combining MEC and RAN [18].
    A tree-like mobile edge organization of a multi-tier cloud architecture was proposed
    in [19]. It allows an aggregation of the load across different tiers of cloud
    servers to maximize the mobile workloads being served. The work of Huang et al.
    [20] proposes and implements a MEC framework of ETSI and 3GPP compliance and focuses
    on the integration of LTE/LTE-A, MEC, and SDN. SDN is emerging as a natural solution
    for next generation cellular networks as it enables further network function virtualization
    opportunities and network programmability [21], [22]. In MEC, NFV and SDN will
    allow extreme flexibility, when it comes to the specification of extended logics
    of micro-service architectures at the network edge. The MEC function chain will
    be managed by the VNFM responsible for the instantiation of Virtual Network Functions
    (VNFs) and the SDN controller (e.g., OpenDayLight7 with SDN-Switches) connecting
    elements all together [23]. Such a solution hides all the control-plane complexities
    of underlying resources from an end-user, requires the definition of appropriate
    hardware abstractions and communication protocols such as OpenFlow with OpenFlow
    eXtensible Match (OXM) on the southbound interface [23], which automates rapid
    building of SDN/NFV-based function chains [24]. A top-level orchestrator providing
    an appropriate level of Quality of Service (QoS) will manage the SDN/NFV controllers
    through the north-bound API. To the best of our knowledge, however, an open-source
    NFV/SDN-based MEC platform has not been implemented yet. Moreover, the main idea
    behind this paper is a solution that allows for App provisioning at the edge that
    does not require additional signalling between the EPC and the ME System. We therefore
    rely on the existing S1 protocol to derive necessary states on the ME cloud and
    do not require any changes to the existing LTE architecture. This distinguishes
    our solution from other state of the art MEC architectures proposed to date [15],
    [20], [25]. 3. MEC architecture specification As illustrated in Fig. 2 [2], the
    ME system consists of the (upper) ME system level and the (lower) ME host level.
    The Customer Facing Service (CFS) for third parties and UE application portals
    are entry points towards the ME system. Roughly speaking, the portal allows third
    parties such as vertical providers or mobile users (UEs) to install Mobile Edge
    (ME) Apps on the ME Host (i.e., small cloud). The ME App receives traffic directly
    from the data plane from nearby eNBs by an appropriate traffic configuration.
    The platform is divided into separate inter-connected entities, which communicate
    through reference points defined between them (Mm1-9, Mp1-3, Mx1-2). The ME Host
    provides a ME platform and a virtualization infrastructure, which run and control
    ME Apps. From the perspective of ME Apps, the ME Platform uses the Mp1,2 reference
    points to provide: • Service discovery, registration, and communication, i.e.,
    offering and consuming services (Mp1), • data plane into the virtualized infrastructure
    of ME Apps (Mp2) Download : Download high-res image (303KB) Download : Download
    full-size image Fig. 2. The architecture of the MEC system (from [2]). A user
    requests a new App through the portal (CFS, UE App). First, the request arrives
    at the Operations Support System (OSS). In turn, the OSS communicates with the
    Mobile Edge Orchestrator to manage the life-cycle of Apps. The orchestrator uses
    the Mobile Edge Platform Manager and VIM to appropriately configure the Mobile
    Edge Platform and Virtualization Infrastructure on the ME Host respectively. On
    the way from the CFS portal, the life-cycle management of Apps on ME Host is controlled
    by the Mx1 - Mm1 - Mm3 - Mm6 - Mm7 reference points, while the traffic rules providing
    the data plane to ME Apps are provided by the Mx1 - Mm1 - Mm3 - Mm5 - Mp2 reference
    reference points. For more details, please consult [2]. In Fig. 3, we present
    the CDS-MEC architecture integrated with the LTE infrastructure. We enrich the
    LTE ecosystem with a ME cloud residing close to the eNB. The idea behind this
    infrastructure is to allow for i) the instantiation of arbitrary ME Apps and ii)
    the response to UE requests from a close vicinity of the eNB. Our architecture
    of the MEC platform is closely related to ETSI MEC white-papers (c.f., Fig. 2,
    [1], [2]). Download : Download high-res image (377KB) Download : Download full-size
    image Fig. 3. The architecture of the CDS-MEC system. The ME cloud builds upon
    hardware resources composed of computing units equipped with CPUs, RAM, disks,
    and network adapters. In the case of sparse resources, one cloud server can build
    the entire ME micro-cloud, e.g., having an i7/Xeon CPU, RAM, disk, and one Intel
    dual-port 10 GbE-T card, on board. In such a configuration, ME micro-cloud is
    connected to the EPC through the first port and to the eNBs through the second
    port of the network interface. Hardware resources will be abstracted towards a
    VNFM, which automatically deploys ME Apps (i.e., VNFs) on the hardware infrastructure
    equipping VNFs with virtual compute, storage, and networking resources (the ETSI
    MEC Mm7 reference point). As the ETSI MEC Mp2 reference point providing data plane
    within the virtual resources of ME Apps, we develop an OpenFlow [26]-based controller
    and use the Open Virtual Switch (OVS) [27]. However, external SDN switches (i.e.,
    not integrated with the ME cloud) can be used as well. The VNFM and controller
    will be managed by the CFS through a Mobile Edge Orchestrator. In this work, we
    did not focus on the development of the CFS and orchestrator, i.e., the VNFM and
    SDN controller are directly provided with information that should be derived by
    the CFS/orchestrator. 3.1. Virtual Network Function Manager The main building
    block of our system is Juju developed by Canonical.8 Juju provides a generic VNFM
    that can be adopted to heterogeneous environments such as Infrastructure as a
    Service (IaaS) and Platform as a Service (PaaS) clouds (e.g., abstracted towards
    Juju through Ubuntu,9 OpenStack,10 etc.). It natively supports service provisioning
    and scaling functions for scale-in/scale-out scenarios. Therefore, it dynamically
    handles workloads by properly adjusting resources to momentary situations. Juju
    provisions various services provided as software on-demand. Services are described
    by charms, i.e., service manifests allowing for appropriate service configurations.
    Juju allows for “gluing” or “bundling” services all together by implementing logic
    allowing for automatic associations between services (i.e., service chaining).
    In the ETSI Management and Orchestration (MANO)11 architecture, Juju should be
    classified as a VNFM of extended capabilities, helping MANO vendors to implement
    advanced business logic in the service orchestration part to support an enhanced
    Quality of Service (QoS) through contracting appropriate Service Level Agreements
    (SLAs). The charm store (i.e., a Juju charm repository) and Juju controller play
    the role of the VNFM, which allows us to spawn VNF bundles on the MEC infrastructure.
    The Juju service bundle could be connected with the help of the virtual switch
    [27] providing a virtual network. In our architecture, the hardware resources
    are abstracted towards Juju through an Ubuntu Xenial system.12 Juju VNFM automatically
    deploys ME Apps (i.e., VNFs) on the hardware infrastructure equipping VNFs with
    virtual compute, storage, and networking resources (implementing the ETSI MEC
    Mm7 reference point). As an example, Juju can automatically deploy a KVM13/LXD14-based
    caching service (e.g., squid15) that responds to user requests directly from the
    network edge (c.f., Fig. 4). Download : Download high-res image (157KB) Download
    : Download full-size image Fig. 4. A screen-shot of the Juju Graphical User Interface
    (GUI), in which virtual elements, i.e., OpenAirInterface (OAI) [28] (LTE Network)
    and Squid Forward Proxy (App) are instantiated on the MEC-Cloud Infrastructure.
    This allows the UE attached to an OAI eNB to access the external web-server through
    a dynamically instantiated Squid forward proxy. 3.2. Management of the traffic
    at the network edge In the ME Platform, the data plane traffic management for
    ME function chaining should leverage SDN, which provides increased scalability
    and enhanced flexibility already demonstrated in LTE core networks (c.f., Section
    2.2). An SDN switch providing networking in ME systems will manage the data plane
    according to a flow table. The flow table matches traffic and uses actions to
    redirect packets towards necessary Apps (i.e., VNFs). As the 1st innovation, we
    provide a rationale for the necessary SDN functions that have to be standardized
    in OpenFlow and implemented by SDN switches to allow for SDN-based traffic management
    in ME Systems exchanging traffic between UEs and IP-based ME Apps not supporting
    the LTE stack. 3.2.1. Basic eNB operation An eNB provides radio access for UEs
    using the core network (c.f., Fig. 5). When a user generates traffic, the IP messages
    are being forwarded through an S1-U tunnel towards the SPGW. An S1-U message encapsulates
    a 32 bit Tunnel Endpoint Identifier (TEID), (e.g., 0x00000001) so that the traffic
    can be appropriately recognized at the EPC on a per-user level. Please notice
    that the downlink packets from the EPC to the UE traverse the stack in the opposite
    direction. In Fig. 6, we present S1-U messages exchanged between the eNB and the
    EPC. We also refer to the eNB through the Base-Band-Unit (BBU), which is the signal
    processing entity of the eNB. The TEIDs on the upstream and downstream differ.
    However, they are related as they belong to the same bearer with the same IP.
    (c.f., Section 4). Download : Download high-res image (224KB) Download : Download
    full-size image Fig. 5. eNB communication diagram. Download : Download high-res
    image (184KB) Download : Download full-size image Fig. 6. S1-U GTP packet description.
    3.2.2. Required SDN actions To redirect traffic towards Apps, the SDN switch has
    to be appropriately programmed by a Controller (c.f., Fig. 7). First, the flow
    tables have to intercept S1-U traffic from the eNB towards EPC. The encapsulated
    packets (c.f., Fig. 6, Inner IP Packet) should be provided towards a ME App. Second,
    the IP traffic from Apps towards a UEs should be provided as S1-U traffic (with
    an appropriate TEID) towards the eNB. In order to accomplish this goal, the SDN
    switch has to implement the following functions (please notice that the last two
    actions are already standardized in OpenFlow): • GTP decapsulation of S1-U, which
    strips off the IP/UDP/GTP header (c.f., Fig. 6) leaving the inner IP packet, •
    GTP encapsulation of S1-U, which equips an IP packet with a S1-U GTP tunnel of
    an arbitrary TEID, • MAC-based/IP-based packet modifications, which alter the
    destination addresses at the MAC and IP level, • SDN port action, which sends
    the packet to a given output port. Download : Download high-res image (188KB)
    Download : Download full-size image Fig. 7. Basic SDN operations to redirect traffic
    between UEs and Apps. Now, let us demonstrate the completeness of these SDN actions
    allowing for successful communication between UEs and ME Apps. Let us assume that
    a user is attached to an eNB. The eNB and EPC recognize the traffic of a given
    UE by a bearer (be it a default or dedicated bearer) consisting of an S1-U GTP
    tunnel using TEID on the downstream and TEID on the upstream. On every bearer,
    the UE receives a different IP. The UE, eNB, and SPGW are equipped with IP addresses
    IP IP and IP respectively. When the UE originates an IP packet p of source IP
    it is encapsulated by the eNB as an inner data packet into a GTP tunnel, i.e.,
    packet with TEID. The packet is pushed from the eNB (i.e., IP) towards the SPGW
    (i.e., IP) as illustrated in Fig 6 and Fig 7. On the way towards the SPGW, the
    SDN switch captures the packet, strips off the GTP header and provides p using
    a function towards the ME App (c.f., 3.3.2 Traffic rules on the OVS switch, 4.2
    User template handling, 5.1 SDN/NFV based MEC caching and 5.2). Note that a typical
    function redirecting packets towards a ME App could be materialized by modifying
    the link layer destination (i.e., the destination MAC address) and providing the
    packet towards an appropriate outgoing port on the switch (i.e., the SDN port
    action). The ME App recognizes the network layer source of the transmission as
    IP. It then issues a downstream packet p′ using the received IP as the destination
    (c.f., Fig. 7). The packet goes through the SDN switch, which in turn intercepts
    packet p′ from the ME App going towards the IP. Such an IP packet p′ cannot be
    delivered to the eNB directly. It has to be first tunnelled towards the eNB with
    an appropriate TEID by issuing a GTP packet . The GTP Encapsulate function is
    provided with the target endpoint, i.e., the eNB IP address and the SPGW TEID
    to appropriately encapsulate the traffic. Finally, the S1-U GTP packet arrives
    at the eNB, which recognizes the user using the SPGW TEID from the GTP header
    and delivers p′ through the air interface to the UE. 3.2.3. SDN matching Packet
    matching is also an important property. Usually, SDN switches match packets based
    on various policies such as addresses at the various level of the IP stack and
    other important fields in packets. Due to the fact that the provider has to have
    flexibility in terms of allocating services to UEs, the SDN switch has to allow
    us to match packets based on the GTP-TEID. Moreover, after decapsulation, the
    SDN switch will allow us to inspect the fields of inner data packets to redirect
    various protocols towards appropriate MEC applications. As an example, a UE HTTP
    request (towards TCP port 80) could be redirected to the MEC HTTP cache server
    running squid,16 while an SSH packet (towards TCP port 22) can go directly to
    the SPGW. 3.3. SDN switches & SDN switch modifications The SDN switch is in the
    core of our architecture. As an example, OpenvSwitch (OVS) is a software-based,
    OpenFlow compatible switch developed by Pfaff et al. [27]. It allows for the on-demand
    establishment of virtual switches among Windows or Linux operating systems. On
    the north-bound interface, the switch uses OpenFlow to communicate with the controller.
    It supports various matching rules at different levels of the IP stack as well
    as many actions (e.g., modification of addresses; tunneling, encapsulation, decapsulation
    in GRE, VxLAN, etc.) that allow for advanced traffic engineering. OVS supports
    OpenFlow 1.1-1.4 protocols with OVS Extensible Flow Match (NXM) / OpenFlow eXtensible
    Match (OXM). We worked with OpenFlow 1.4 using OXM/NXM extensions to provide GTP
    matching rules (c.f., Section 3.2.3). 3.3.1. Necessary modifications to OVS The
    2nd innovation is the implementation of a micro-flow [27] GTP matcher17 in the
    user and Linux kernel spaces. The OVS optimized packet forwarding consists in
    general of three techniques, i.e., user space packet matching, kernel space matching,
    and so called kernel space mega-flow [27], out of which we implement the first
    two. Moreover, we used the S1-U tunnelling patch allowing for the S1-U GTP decapsulation/encapsulation.18
    This provides enough functionality to support services running on MEC infrastructures
    with appropriate traffic handling as shown in Section 3.2.2. 3.3.2. Traffic rules
    on the OVS switch The OVS switch distributes traffic among Apps using traffic
    characteristics (network protocols, transport protocols), the corresponding addresses
    (e.g., TCP Port 80), and flags (e.g., TCP_SYN). An example OVS rule will resemble:
    • A GTP tunnel of carrying a TCP request from towards port 80 goes through App#2/
    • every GTP tunnel (from all UEs) carrying a request towards port 80 goes through
    App#3/. To distribute traffic among selected Apps and by default send traffic
    through the EPC, we have derived the following forwarding strategy (c.f., Fig.
    8). On the upstream, a packet originated by a UE transparently goes to the SPGW
    if it does not match any of GTP rules on the OVS (e.g., TEID = 0×00000001). However,
    when the packet TEID matches a GTP rule, the packet should target ME Apps on the
    ME Host. Therefore, the switch removes the GTP header and inserts the inner packet
    into the switch App flow tables for processing. If the UE inner packet matches
    the App rule#X (e.g., IP packet, TCP destination port 80 (HTTP)), it is redirected
    to a given App#X (e.g., a squid forward proxy). If no App rule matches, the packet
    is again encapsulated with the initial upstream TEID and goes towards the SPGW.
    On the downstream, the SPGW packets targeting the eNB go transparently through
    the OVS switch. However, packets returning from Apps (targeting a given UE based
    on the IP address) get encapsulated with a GTP header using an appropriate downstream
    . Download : Download high-res image (567KB) Download : Download full-size image
    Fig. 8. Processing of GTP packets by OVS. Currently, a limited version of service
    function chaining is supported, i.e., UE  →  App  →  UE and UE  →  EPC  →  UE
    chain types are implemented. To support more complex chains having many Apps inside
    the chain, the forwarding Apps will have to carry the original source in the header
    of forwarded packets. The flow rules will use as a matching condition for traffic
    forwarding. For example, if traffic for a given has to go from to a switch has
    to forward a packet with from towards the input port of according to flow rules
    installed on the output port of . Such a method will allow for multi App chains.
    We do not study, however, multi App chains in this paper. 4. SDN-based controller
    This section describes an SDN-based controller that allows for the S1-U traffic
    distribution among ME Apps on both a per UE and App using the packet forwarding
    technique demonstrated in Section 3.3.2. The OpenFlow-based controller responds
    to user requirements through the CFS portal (c.f., Fig. 3). The CFS portal allows
    the user for the preparation of templates for traffic management. The user assigns
    a given App to all users attached to an eNB (provides the wildcard) or only selected
    users based on specific . The role of the controller is to derive traffic rules
    using appropriate on the upstream and on the downstream matching the of the UE.
    The relation is derived by a tracking module capturing the S1-C control plane
    between the EPC and eNB on the OVS switch. The module derives the bearer relation
    combining and . This information is eventually used for constructing SDN rules
    on the OVS switch (on the downstream and upstream) from templates provided by
    the user. 4.1. S1-C tracking module The 3rd innovation is the passive monitoring
    of the control plane to derive the necessary parameters upon the UE attachment.
    We introduce a tracker, which is an auxiliary module of our architecture. Its
    role is to recognize the transmission bearer and associate the IP IP upstream
    TEID downstream TEID with the IP address of the user IP (c.f., Fig. 9). Upon the
    UE attachment procedure, the tracker first processes the Initial Context Setup
    Request of the S1-C protocol exchanged between the MME and the eNB. The request
    contains a per-user unique E-UTRAN Radio Access Bearer (E-RAB) that can serve
    as an information key distinguishing bearers in the database (db). The tracker
    retrieves, the E-RAB ID, IP SPGW , IP eNB (destination of the IP packet), TEID
    eNB , and the user Packet Data Network (PDN) IP UE from the message to keep in
    the database. Second, when the LTE Initial Context Setup Response arrives for
    the same bearer, the tracker can extend the cached data with the TEID SPGW from
    the message, as the E-RAB ID from the S1-C response is equal to the E-RAB ID from
    the S1-C request, which already serves as the database key. Therefore, the tracker
    needs to receive the Initial Content Setup Request and Initial Content Setup Response
    to derive the complete user information. Download : Download high-res image (237KB)
    Download : Download full-size image Fig. 9. Tracking procedure. We present our
    tracking procedure in Algorithm 1. The procedure requires two input parameters,
    i.e., the port for traffic monitoring and the switch for SDN-based management.
    The procedure collects traffic on a given port and fills out variables required
    for appropriate traffic management in the db structure. When the data is ready,
    meaning that db[p.IP eNB ][p.ID E-RAB ] is fully populated with IP eNB , IP SPGW
    , TEID eNB , TEID SPGW , IP UE , the procedure executes the install-ovs-rules
    function to translate user templates into actual rules. Currently, the rule (i.e.,
    state) is stored on the switch, until the EPC creates a bearer with the same E-RAB/IP
    UE . When such a new bearer appears in the system, the old rules are recycled.
    Notice that we assume that distinct bearers carry different IP UE addresses. MME
    or X2 handovers in the case of UE mobility are left for future work. Download
    : Download high-res image (187KB) Download : Download full-size image Algorithm
    1. Tracking algorithm. This is a novel method of reusing the S1-C to manage traffic
    rules on the ME Platform. Previous works [2] only acknowledge the distribution
    of the data plane among Apps, but the exact method is not discussed in the literature.
    User space capturing of the S1-C protocol between the MME and eNB is computationally
    inexpensive, as it resembles an ordinary S1-C protocol handling of a typical eNB.
    The expensive part is the user space capturing of S1-U packets going between the
    eNB and the EPC that can be received together with S1-C (i.e, no operation for
    heavy traffic) by the tracking module. We, however, do not require any S1-U packets
    in our monitoring operation. The further optimization of the tracking procedure
    uses the SDN capabilities of the switch. We install appropriate rules on the switch
    to filter out the S1-U communication from the traffic captured by the user space
    tracker. Please notice that the S1-C packet copying (i.e., to the monitoring interface)
    is easily implementable in SDN/OVS by the application of the output action providing
    the tracker with traffic. Generally, the S1-C traffic can be provided towards
    the tracker through the Out-Of-Band (OOB) or regular interfaces. We performed
    the experiment illustrated in Fig. 10. We connect the ME cloud to a S1-C/S1-U
    traffic source (i.e., eNB) through a 10 Gigabit Ethernet port (i.e., the Intel
    10 GbE-T X540 NIC). The most significant traffic is S1-U. First, we saturate the
    network from the eNB with S1-U traffic of different packet sizes between 128 and
    1500 bytes. There are 5 situations considered: i) The S1 traffic targets the IP
    address of the MEC Cloud directly, ii) the S1 traffic targets the IP address of
    the LXC-based ME Service instantiated on the MEC Cloud, iii) the S1 traffic targets
    the IP address of the KVM-based ME Service instantiated on the MEC Cloud, iv)
    the S1 traffic targets the LXC-based ME Service and the tracker captures the whole
    S1 traffic on the switch, and v) the S1 traffic targets the LXC-based ME Service,
    but the (virtual) tracker is only provided with S1-C traffic due to an appropriate
    configuration of the OVS, i.e., the separation of the control and data plane on
    the ME cloud. Download : Download high-res image (96KB) Download : Download full-size
    image Fig. 10. Traffic switching on the ME cloud. S1-U traffic is handled by the
    underlying UDP protocol. The UDP implementation on Linux is slow and does not
    saturate the link as easily as a regular TCP connection.19 , 20 TCP displays a
    regular throughput of 9.3Gbps when targeting the cloud server directly, while
    we reach 7–9Gbps with huge performance variations with S1-U/UDP in an similar
    situation (c.f., Fig. 11). This is due to the fact that the RX queue processing
    of the 10 GbE-T network adapter fully saturates the CPU thread in our experiment.
    For protecting UDP packets against out of order delivery, Linux assigns a single
    CPU thread for processing a given UDP stream based only on network and transport
    protocol addresses. Therefore, S1-U traffic between eNB and ME cloud is recognized
    as a single UDP stream, even if it carries traffic from a large number of distinct
    UEs. Moreover, we notice that LXC ME Service displays better throughput than KVM-based
    Services (even with multi-queue TUN/TAP interfaces) due to virtualization overhead.
    Performance-wise, LXC behaves nearly as good as the physical infrastructure. Furthermore,
    a new problem arises, when the tracker (implemented using the python pcapy21 capture
    library) starts capturing an interface with both the S1-C and S1-U traffic between
    the EPC and eNB. Even though, S1-U is not required by the tracker, it can severely
    degrade performance as it quickly saturates the CPU thread (c.f., Fig. 11) and
    in consequence the forwarding capacity of the whole system. Notice that OVS is
    a software switch that also competes for computing resources (e.g., against the
    tracker) on the ME cloud. We, therefore, separated the control and data plane
    on the OVS switch, and provided the tracker with the control plane only. When
    the tracker does not receive S1-U packets, the original forwarding capacity restores.
    Download : Download high-res image (424KB) Download : Download full-size image
    Fig. 11. Performance of traffic switching on ME clouds. 4.2. User template handling
    In Listing 1, we provide an example Unix shell-based template to distribute traffic
    among the EPC and ME Apps in OVS. Please notice that the gtp_teid matcher (implemented
    by CDS) and GTP tunneling end-point (installed patch) are used in the script,
    but are not available in the default version of OVS (c.f., Section 3.3.1). Download
    : Download high-res image (568KB) Download : Download full-size image Listing
    1. The OVS template for traffic redirections. OVS-SWITCH is the OVS instance deployed
    on the ME Cloud, $GTP_TUN_PORT is the OpenFlow Port number of the local GTP tunneling
    end-point, $PORT_APP is the number of the OpenFlow Port connecting the switch
    with the App, $PORT_ENB is the number of the OpenFlow Port connecting the switch
    with the eNB, $TEID_ENB is the GTP tunnel endpoint identifier of the user on the
    eNB side, $TEID_SPGW is the GTP tunnel endpoint identifier of the user on the
    SPGW side, $IP_APP is the IP address of the App (e.g., web cache), $IP_ENB is
    the IP address of the eNB, $IP_LOCAL is the local IP address of the switch on
    the MEC Cloud, $IP_UE is the IP address of the UE, $IP_SPGW is the IP address
    of the SPGW, $MAC_APP is the MAC address of the App (e.g., web cache), and $MAC_LOCAL
    is the local MAC address of the switch on the MEC Cloud. Moreover, we assumed
    that the GTP tunnel between the eNB and SPGW is a UDP stream of source and destination
    port 2152. Most of the variables are static (with respect to the UE attachment),
    i.e., $GTP_TUN_PORT, $PORT_APP, $PORT_ENB, $IP_APP, $IP_ENB, $IP_LOCAL, $MAC_APP,
    $MAC_LOCAL. As mentioned in Section 4.1 there are dynamic parameters established
    upon a UE attachment, i.e., $TEID_ENB, $TEID_SPGW, $IP_UE, and $IP_SPGW. A user
    derives traffic redirection rules for App#X and fills out App related variables:
    $PORT_APP, $IP_APP, $MAC_APP. Then the template is submitted to the CFS portal.
    The portal provides the template to the ME Orchestrator, which in turn fills out
    all the cloud-deployment related parameters $GTP_TUN_PORT, $PORT_ENB, $IP_ENB,
    $IP_LOCAL, $MAC_LOCAL and sends the template down to the controller. The controller
    (tracker) monitors the S1-C traffic, and for all discovered UEs attached (IP UE
    matching IP SPGW , TEID eNB , TEID SPGW ) substitutes corresponding parameters
    in the template ($IP_UE, $IP_SPGW, $TEID_ENB, $TEID_SPGW) and executes the derived
    OVS rules on the OVS switch. When the user specifies $IP_UE in the template, the
    controller will execute the rule for the specified $IP_UE only. The current implementation
    integrates our tracking module (c.f., Section 4.1) with the shell-based controller
    that both automatically deploy necessary rules for discovered UEs on the underlying
    OVS switch. We do not, however, study scaling of the shell-based controller as
    the number of UEs attached with a given eNB/ME cloud will remain at a relatively
    small level of 1000 users per cell. Moreover, as we do not implement mega-flow
    optimizations in OVS [27], we cannot currently elaborate on scaling of switching
    performance with the increasing number of flow-rules installed on the switch.
    Finally, we do not consider any security measures in the installation of flow
    rules. 5. Use-cases In this section, we will evaluate two important use-cases.
    5.1. SDN/NFV based MEC caching As the 4th innovation, with the help of SDN/NFV,
    we enrich a hierarchical network architecture of LTE with persistent caching at
    the network edge as shown in Fig. 12 [29]. In a typical LTE network, traffic originated
    by users is forwarded in a hierarchical manner through eNBs, SGWs, PGWs that provide
    access to an external network (e.g., the Internet). Generally, every level of
    the LTE network can be equipped with a cache, which stores a fraction of cached
    content. This enables popular content to be stored at the network edge very close
    to the user. Download : Download high-res image (193KB) Download : Download full-size
    image Fig. 12. The LTE network architecture with caches at different levels. 5.1.1.
    Caching benefits The hierarchical organization allows us to provide popular content
    directly from edge caches, while less popular objects shall be forwarded further
    to the next level (i.e, SGW cache, PGW cache) of growing capacity (however, the
    placement of cached content is out of the scope of this paper). When the content
    is unpopular (i.e., not available from the caches), it will be directly accessed
    from the content source. However, caching of unpopular objects does not provide
    significant benefits. This caching approach brings a multitude of advantages for
    end users and Mobile Network Operators (MNOs). For users, the QoE significantly
    increases due to lower access latency (also lower fluctuations of the object access
    time) and increased throughput. Moreover, the backhaul traffic is significantly
    reduced, allowing quicker access from distant content providers. It is envisioned
    to reduce the Operational Expenditures (OPEX) by 36% [30] due to the lower load
    of the core infrastructure. In 5G networks, the deployment of caches will be managed
    by NFV, i.e., when a new cache is required it will be dynamically instantiated
    as a Virtual Machine (VM). An SDN controller shall manage traffic on-demand to
    make use of appropriate caching instances at every level of the LTE network. 5.1.2.
    Software & hardware architecture The fully open-source caching solution is presented
    in Fig. 13. We enrich a typical LTE architecture with the cloud node residing
    in between the eNB and the network core (EPC). The cloud node is controlled with
    the Juju VNFM. Moreover, we provide the cloud node with the OVS switch equipped
    with the tunnelling and matching patches. The web cache is instantiated as a VNF
    from the Juju controller. The remaining elements of the LTE infrastructure are
    OAI-MME, OAI-SPGW, and OAI-ENB implemented by EURECOM [31] providing the UE with
    access to the Internet. The eNB is configured to use 5 MHz channels in Band7 of
    the LTE spectrum range in the Single Input Single Output (SISO) mode. The hardware
    used in the experiment is the following. The eNB is an Intel(R) Core(TM) i7-4790
    CPU @ 3.60 GHz quad-core, 32GB RAM, 1TB HDD computer equipped with a USRP B21022
    Software Defined Radio (SDR). The MEC Cloud is an Intel(R) Core(TM) i7-3770 CPU
    @ 3.40 GHz quad-core, 16GB RAM, 200GB SDD computer. Both computers run the Ubuntu
    16.04 (Xenial) operating system. They are also equipped with Intel X540T2 10 GbE-T
    interfaces. The UE uses a Huawei E392 dongle.23 Download : Download high-res image
    (254KB) Download : Download full-size image Fig. 13. The implementation of the
    caching solution. 5.1.3. Results The results are presented in Fig. 14. First,
    we run the experiment in which the cache is inactive. We therefore access the
    remote server of address 130.92.70.163 at the University of Bern being 15 hops
    away from EURECOM to directly retrieve the content from this location. Second,
    we activate the SDN controller, add necessary traffic templates, and actively
    store the content in the squid memory (i.e., we allow for cache memory hits, by
    allowing large objects of up to 10 MB to be stored in the memory). Since, the
    controller adds appropriate traffic rules for a given UE (transmission towards
    TCP port 80 goes through the squid App for all attached UEs), the objects can
    be directly retrieved from the cache. We measure the time required to download
    the content (from the cache and remote server), i.e., the time between issuing
    the HTTP request and retrieving the whole object. We then convert it into the
    UE experienced throughput by dividing the file size by the time required to download
    the object. The experiments are performed several times for every file size considered,
    i.e., 10kB to 10MB. The error bars are calculated as the file size divided by
    the average transmission time for a given file size squared multiplied by the
    standard deviation of the transmission time for that size (the following differential
    relation holds for the calculation of the error bar Goodput = filesize t → | σ
    Goodput | = | filesize t 2 σ t | , where t is the transmission time (c.f., Fig.
    14)). Download : Download high-res image (357KB) Download : Download full-size
    image Fig. 14. MEC Caching improves the QoS of content delivery in comparison
    to generic HTTP access. For all the file sizes, we noticed a significant improvement
    in the user QoE. The files are downloaded quicker when directly served from the
    cache. The improvement in the experienced capacity is about 30% for both big and
    small files (10kB, 100kB, 10MB). However, sometimes due to momentary network conditions,
    the performance gain might not be so significant (e.g., 1MB). We therefore clearly
    see the benefit of edge caches. However, other UE traffic (e.g., targeting the
    EPC) will have to go through an additional element: the OVS instantiated on the
    ME cloud. In Fig. 15, we measure the round trip delay of S1-U/UDP packets exchanged
    between the eNB and the MEC Cloud for different packet sizes. We observe that
    OVS does not provide significant overhead in terms of delay in comparison to the
    situation, when only physical interfaces (i.e., physical network adapters) are
    used. Therefore, other traffic will not experience significant performance degradation
    due to the deployment of OVS between the eNB and EPC. Download : Download high-res
    image (471KB) Download : Download full-size image Fig. 15. OVS delay for other
    applications. 5.2. SDN/ICN Public Safety solutions The 5th innovation is the Public
    Safety (PS) application for networks with a disconnected core. 5.2.1. DTN/ICN
    benefits in critical situations The utilization of Delay Tolerant Networks (DTNs)
    in disaster scenarios for Public Safety (PS) applications has been studied in
    literature. In [32], the authors propose a terrain discovery system using a DTN
    environment in a disaster scenario. Specifically, they use civilians that carry
    sensor nodes in their mobile devices and collect Data. Nodes use DTN to transfer
    data reaching computing nodes that perform a discovery of the affected area. In
    [33] the combination of DTN with the Cognitive Wireless Network (CWN) for disaster
    networks is proposed. Furthermore, Fajardo et al. [34] implemented a data collection
    method that uses people and their mobile phones as sensor nodes. Tyson et al.
    [35] study the utilization of Information Centric Networks (ICNs) in disaster
    scenarios. The authors argue that ICN could improve connectivity resilience. This
    is due to the fact that in an ICN architecture, nodes can explore multiple interfaces
    at the same time. ICN does not have to maintain short connection timeouts as in
    classical networks. ICN requires no particular underlying network-layer, as it
    creates its own ad-hoc network. Deploying ICN in a network could improve QoS,
    as different requests could be treated differently. ICN supports the store, carry,
    and forward mechanism, as each node could be equipped with a cache, which is important
    in disaster scenarios, where connectivity may momentarily disappear. We therefore
    argue that the integration of DTN/ICN with LTE is an important research topic.
    5.2.2. Software & hardware architecture In previous work [36], we provided an
    orchestration framework for PS applications. We worked out a ME architecture that
    provides ICN/DTN network Apps in the case, when a still functional eNB can provide
    a RAN towards end-users (UEs), but it does not have a valid connection to the
    network core. Typically, when a fully functional eNB looses its connection to
    the EPC, it stops providing RAN service as a result of a failed S1 or EPC. A macro
    MEC-enabled eNB [1] is the main architectural element of this system. In the ordinary
    situation, when the network core is reachable, an eNB site runs a BBU that provides
    E-UTRAN and communicates with the operator network core to provide mobile access.
    When the core is unavailable, the ME-enabled base station can actively cooperate
    in the DTN/ICN information dissemination by instantiating DTN/ICN based Apps as
    VNFs. The primary purpose of this section is to provide an evaluation of our DTN/ICN
    architecture in a disaster situation, when a bundle of a micro LTE core is provided
    to run Radio Access Network (RAN) integrated with DTN/ICN (c.f., Fig. 16). To
    accomplish this goal, we integrate the PS orchestration solution with SDN traffic
    management derived in this paper to obtain a fully functional PS solution (i.e.,
    with traffic). Traffic measurements were out of scope of the work presented in
    [36]. Download : Download high-res image (82KB) Download : Download full-size
    image Fig. 16. Service bundle for PS applications. Whenever a local Application
    Management Unit on an eNB discovers that it runs disconnected from the core network,
    it starts the recovery procedure to provision a new communication service. Such
    a service is deployed as a bundle of VNFs that defines the required network services,
    namely eNB, local SPGW, MME, HSS, and PS. User information will be maintained
    either by replicating the HSS database if possible, or by provisioning the IMSI
    range for rescue teams with necessary key and sequence numbers. Note that the
    authentication procedure can also be relaxed to accept all the attach procedures.
    All the VNF functions are instantiated on the same edge cloud. The BBU has to
    be re-instantiated to acknowledge local copies of the MME, SPGW, HSS providing
    core network services. MME, SPGW, and HSS are minimal services of a small footprint.
    They provide basic LTE functions and connect UEs attached with the macro eNB.
    Due to the basic core function, the UEs attached to the same eNB can communicate
    directly with the help of the PS VNF. The PS VNF is based upon DTN and/or ICN
    applications such as CCNx24 or DTN2.25 In our previous work, we implemented a
    DTN2 charm for Juju VNFM [36]. The PS VNF is a communication end-point and a relay
    between other clients instantiated on UEs. The established setup allows end users
    to attach to macro eNB. The rescue teams can now freely attach to the open eNB
    instantiated and exchange data using DTN and/or ICN relay points. If a macro eNB
    shares a functional X2 interface with another nearby base station, the X2 interface
    can be used as an interface to share data among nearby cells. Otherwise, the cell-cell
    communication can be based upon data mules. 5.2.3. Results In Fig. 17, we gather
    instantiation times for the PS service bundle provisioned with Juju VNFM (MySql
    is a supporting system for HSS) [36]. We tested two scenarios, when a DTN App
    (i.e., PS instance), MySQL, EPC, and HSS were instantiated on KVM and LXC respectively.
    We use a single host machine with Intel 3.20 GHz quad core CPU and 16GB RAM. The
    services use 1 thread, 1GB RAM; 1 thread 1GB RAM; 4 threads 8GB RAM; 1 thread,
    2GB RAM; 1 thread, 1GB RAM for MySQL, HSS, eNB, EPC, and DTN resp. Therefore,
    the PS bundle can be instantiated within around 600 s after the failure in the
    EPC was discovered. Download : Download high-res image (543KB) Download : Download
    full-size image Fig. 17. Provisioning time. The architecture of the developed
    Public Safety (PS) Solution is presented in Fig. 18. It is similar to the solution
    studied in Section 5.1. However, the EPC runs on the same ME cloud as VNFs and
    the protocol considered is different. The SDN traffic management scheme remains
    the same. Download : Download high-res image (206KB) Download : Download full-size
    image Fig. 18. Architecture of the PS solution. The main core network of the provider
    is disconnected. We therefore instantiate a complete small core on the MEC Cloud
    (i.e., MME, SPGW, HSS) as Virtual Network Functions (VNFs) through the Juju VNFM.
    The eNB connects to the newly instantiated core. We use OpenAirInterface [28]
    from the OAI development branch as the EPC and eNB. The eNB is configured to use
    5 MHz channels in Band7 of the LTE spectrum with SISO mode. We also instantiate
    a DTN PS service and the SDN controller to manage traffic between the UE and the
    DTN App. The UE using a Huawei E392 dongle is equipped with a DTN PS client. Hence,
    the UE and DTN PS can directly communicate when the UE is successfully attached
    to the eNB. We verified that our SDN/NFV-based PS solution works well. We were
    able to successfully dtnping (use the dtn ping function) between the UE of (dynamically
    assigned) IP address 172.16.0.2, eNB TEID 0x0000001, SPGW TEID 0xca6fe0dd, and
    DTN address ue.dtn towards the DTN App on the ME cloud of address 10.0.5.203 and
    DTN address enb.dtn. The dtnping confirms connectivity in a small DTN network
    of UE and eNB. It takes around 237  ±  38 ms to discover the connected eNB App
    (enb.dtn) from the UE. When the connectivity was tested successfully, we started
    sending files between the UE (ue.dtn) and ENB (enb.dtn). It is worth noting that
    the dtnping times are much larger than the classical ICMP ping times (20.9  ± 
    2.6 ms), as the DTN service has to first discover the destination (if connected).
    The example transmission of six 1MB files (the time period between consecutive
    transmissions is 40 s) is provided in Fig. 19. The throughout of 1.06  ±  0.08MB/s
    was established on average in a single transmission (c.f., Fig. 20). The figures
    present the amount of data sent from the UE to the eNB through a DTN2 App. Download
    : Download high-res image (148KB) Download : Download full-size image Fig. 19.
    Six consecutive file transmissions. Download : Download high-res image (161KB)
    Download : Download full-size image Fig. 20. Single file transmissions. 6. Conclusions
    Our paper consists of five innovations in prototyping of the MEC environment.
    The first innovation is the organization of the traffic management at the network
    edge. We show how to manage GTP-tunnels and traffic redirections to successfully
    exchange traffic between IP-based MEC applications and the LTE-based UE. The second
    innovation is the implementation of the OVS GTP matcher that together with OVS
    GTP tunneling service provides traffic to MEC services. The third innovation is
    in the domain of SDN rule management at the ME cloud with an SDN controller equipped
    with an S1-C tracking module. The fourth innovation is the first fully open-source
    implementation of the ME cloud based on Juju VNFM, SDN controller, OVS, and OAI.
    It improves the perceived throughput of a UE by 30%. Finally, our fifth innovation
    is the evaluation of the MEC-enabled public safety solution. It is a fully open-source
    solution that spawns a minimal fully operating core (EPC) in the disconnected
    core critical situation. As mobility is a crucial aspect of mobile systems, in
    future work, we will study mobility and handover in our MEC architecture. Acknowledgment
    This work was partially supported by the EU FP7 Project FLEX (612050) and COST
    Short Term Scientific Mission grants from the Resilient Communication Services
    Protecting End-User Applications from Disaster-based Failures (RECODIS) CA15127
    action. We would like to also thank Dr. Peppo Brambilla from the Institute of
    Computer Science of the University of Bern for helping us out with the 10 GbE-T
    connectivity tests. References [1] M. Patel, J. Joubert, J.R. Ramos, N. Sprecher,
    S. Abeta, A. Neal Mobile-Edge Computing ETSI (2014) Google Scholar (white paper:
    https://portal.etsi.org/portals/0/tbpages/mec/docs/mobile-edge_computing_-_introductory_technical_white_paper_v1%2018-09-14.pdf).
    [2] ETSI GS MEC 003: Mobile Edge Computing (MEC); Framework and Reference Architecture
    V1.1.1, 2016, (http://www.etsi.org/deliver/etsi_gs/MEC/001_099/003/01.01.01_60/gs_MEC003v010101p.pdf).
    Google Scholar [3] F. Lobillo, Z. Becvar, M.A. Puente, P. Mach, F.L. Presti, F.
    Gambetti, M. Goldhamer, J. Vidal, A.K. Widiawan, E. Calvanesse An architecture
    for mobile computation offloading on cloud-enabled lte small cells 2014 IEEE Wireless
    Communications and Networking Conference Workshops (WCNCW) (2014), pp. 1-6, 10.1109/WCNCW.2014.6934851
    View in ScopusGoogle Scholar [4] H. Hawilo, A. Shami, M. Mirahmadi, R. Asal NFV:
    State of the art, challenges, and implementation in next generation mobile networks
    (vepc) IEEE Netw, 28 (6) (2014), pp. 18-26, 10.1109/MNET.2014.6963800 View in
    ScopusGoogle Scholar [5] A. Ksentini, M. Bagaa, T. Taleb On Using SDN in 5G: The
    Controller Placement Problem 2016 IEEE Global Communications Conference (GLOBECOM)
    (2016), pp. 1-6, 10.1109/GLOCOM.2016.7842066 Google Scholar [6] M. Martinello,
    M.R.N. Ribeiro, R.E.Z. de Oliveira, R. de Angelis Vitoi Keyflow: a prototype for
    evolving SDN toward core network fabrics IEEE Netw, 28 (2) (2014), pp. 12-19,
    10.1109/MNET.2014.6786608 View in ScopusGoogle Scholar [7] V. Nguyen, Y. Kim Proposal
    and evaluation of SDNbased mobile packet core networks EURASIP J Wirel Commun
    Netw, 2015 (1) (2015), pp. 18-26, 10.1186/s13638-015-0395-1 Google Scholar [8]
    K. Pentikousis, Y. Wang, W. Hu Mobileflow: toward software-defined mobile networks
    IEEE Commun. Mag., 51 (7) (2013), pp. 44-53, 10.1109/MCOM.2013.6553677 View in
    ScopusGoogle Scholar [9] I. Giannoulakis, E. Kafetzakis, G. Xylouris, G. Gardikis,
    A. Kourtis On the applications of efficient NFV management towards 5G networking
    1st International Conference on 5G for Ubiquitous Connectivity (2014), pp. 1-5,
    10.4108/icst.5gu.2014.258133 View in ScopusGoogle Scholar [10] H. Karl, S. Drxler,
    M. Peuster, A. Galis, M. Bredel, A. Ramos, J. Martrat, M.S. Siddiqui, S. van Rossem,
    W. Tavernier, G. Xilouris Devops for network function virtualisation: an architectural
    approach Transactions on Emerging Telecommunications Technologies, 27 (9) (2016),
    pp. 1206-1215, 10.1002/ett.3084 View in ScopusGoogle Scholar [11] S. Sahhaf, W.
    Tavernier, J. Czentye, B. Sonkoly, P. Skldstrm, D. Jocha, J. Garay Scalable Architecture
    for Service Function Chain Orchestration 2015 Fourth European Workshop on Software
    Defined Networks (2015), pp. 19-24, 10.1109/EWSDN.2015.55 View in ScopusGoogle
    Scholar [12] B. Sousa, L. Cordeiro, P. Simes, A. Edmonds, S. Ruiz, G.A. Carella,
    M. Corici, N. Nikaein, A.S. Gomes, E. Schiller, T. Braun, T.M. Bohnert Toward
    a fully cloudified mobile network infrastructure IEEE Trans. Netw. Serv. Manage.,
    13 (3) (2016), pp. 547-563, 10.1109/TNSM.2016.2598354 View in ScopusGoogle Scholar
    [13] ETSI GS NFV-MAN 001: Network Functions Virtualisation (NFV), Network Functions
    Virtualisation (NFV); Management and Orchestration V1.1.1, 2014, (http://www.etsi.org/deliver/etsi_gs/NFV-MAN/001_099/001/01.01.01_60/gs_NFV-MAN001v010101p.pdf).
    Google Scholar [14] R. Roman, J. Lopez, M. Mambo Mobile edge computing, fog et
    al.: a survey and analysis of security threats and challenges Future Gen. Comput.
    Syst. (2016), 10.1016/j.future.2016.11.009 Google Scholar [15] C.-Y. Chang, K.
    Alexandris, N. Nikaein, K. Katsalis, T. Spyropoulos MEC architectural implications
    for LTE/LTE-A networks Proceedings of the Workshop on Mobility in the Evolving
    Internet Architecture, MobiArch ’16, ACM, New York, NY, USA (2016), pp. 13-18,
    10.1145/2980137.2980139 View in ScopusGoogle Scholar [16] M.T. Beck, M. Werner,
    S. Feld, T. Schimper Mobile edge computing: a taxonomy The Sixth International
    Conference on Advances in Future Internet, AFIN ’14, IARIA (2014), pp. 48-54 Google
    Scholar [17] M.T. Beck, S. Feld, A. Fichtner, C. Linnhoff-Popien, T. Schimper
    ME-VoLTE: network functions for energy-efficient video transcoding at the mobile
    edge 2015 18th International Conference on Intelligence in Next Generation Networks
    (2015), pp. 38-44, 10.1109/ICIN.2015.7073804 View in ScopusGoogle Scholar [18]
    S. Nunna, A. Kousaridas, M. Ibrahim, M. Dillinger, C. Thuemmler, H. Feussner,
    A. Schneider Enabling real-time context-aware collaboration through 5G and mobile
    edge computing 2015 12th International Conference on Information Technology -
    New Generations (2015), pp. 601-605, 10.1109/ITNG.2015.155 View in ScopusGoogle
    Scholar [19] L. Tong, Y. Li, W. Gao A hierarchical edge cloud architecture for
    mobile computing IEEE INFOCOM 2016 - The 35th Annual IEEE International Conference
    on Computer Communications (2016), pp. 1-9, 10.1109/INFOCOM.2016.7524340 Google
    Scholar [20] A. Huang, N. Nikaein, T. Stenbock, A. Ksentini, C. Bonnet Low latency
    MEC framework for SDN-based LTE/LTE-A networks IEEE International Conference on
    Communications, ICC ’17 (2017), pp. 1-6 Google Scholar [21] K. Wang, M. Shen,
    J. Cho, A. Banerjee, J. Van der Merwe, K. Webb Mobiscud: a fast moving personal
    cloud in the mobile network Proceedings of the 5th Workshop on All Things Cellular:
    Operations, Applications and Challenges, AllThingsCellular ’15, ACM, New York,
    NY, USA (2015), pp. 19-24, 10.1145/2785971.2785979 View in ScopusGoogle Scholar
    [22] A. Manzalini, et al. Towards 5g software-defined ecosystems: technical challenges,
    business sustainability and policy issues white paper (2014) Google Scholar [23]
    J. Kempf, B. Johansson, S. Pettersson, H. Lning, T. Nilsson Moving the mobile
    evolved packet core to the cloud 2012 IEEE 8th International Conference on Wireless
    and Mobile Computing, Networking and Communications (WiMob) (2012), pp. 784-791,
    10.1109/WiMOB.2012.6379165 View in ScopusGoogle Scholar [24] N. Nikaein, E. Schiller,
    R. Favraud, K. Katsalis, D. Stavropoulos, I. Alyafawi, Z. Zhao, T. Braun, T. Korakis
    Network store: exploring slicing in future 5g networks Proceedings of the 10th
    International Workshop on Mobility in the Evolving Internet Architecture, MobiArch
    ’15, ACM, New York, NY, USA (2015), pp. 8-13, 10.1145/2795381.2795390 View in
    ScopusGoogle Scholar [25] B. Nguyen, N. Choi, M. Thottan, J.V. der Merwe SIMECA:
    SDN-based IoT mobile edge cloud architecture 2017 IFIP/IEEE Symposium on Integrated
    Network and Service Management (IM) (2017), pp. 503-509, 10.23919/INM.2017.7987319
    View in ScopusGoogle Scholar [26] N. McKeown, T. Anderson, H. Balakrishnan, G.
    Parulkar, L. Peterson, J. Rexford, S. Shenker, J. Turner Openflow: enabling innovation
    in campus networks SIGCOMM Comput. Commun. Rev., 38 (2) (2008), pp. 69-74, 10.1145/1355734.1355746
    View in ScopusGoogle Scholar [27] B. Pfaff, J. Pettit, T. Koponen, E.J. Jackson,
    A. Zhou, J. Rajahalme, J. Gross, A. Wang, J. Stringer, P. Shelar, K. Amidon, M.
    Casado The design and implementation of open vswitch Proceedings of the 12th USENIX
    Conference on Networked Systems Design and Implementation, NSDI’15, USENIX Association,
    Berkeley, CA, USA (2015), pp. 117-130 View in ScopusGoogle Scholar [28] N. Nikaein,
    R. Knopp, L. Gauthier, E. Schiller, T. Braun, D. Pichon, C. Bonnet, F. Kaltenberger,
    D. Nussbaum Demo: Closer to cloud-ran: Ran as a service Proceedings of the 21st
    Annual International Conference on Mobile Computing and Networking, MobiCom ’15,
    ACM, New York, NY, USA (2015), pp. 193-195, 10.1145/2789168.2789178 View in ScopusGoogle
    Scholar [29] C. Anastasiades, A. Gomes, R. Gadow, T. Braun Persistent caching
    in information-centric networks 2015 IEEE 40th Conference on Local Computer Networks
    (LCN) (2015), pp. 64-72, 10.1109/LCN.2015.7366284 View in ScopusGoogle Scholar
    [30] H. Sarkissian The Business Case for Caching in 4g lte Networks (2013) Google
    Scholar (LSI White Paper). [31] N. Nikaein, R. Knopp, F. Kaltenberger, L. Gauthier,
    C. Bonnet, D. Nussbaum, R. Ghaddab Demo: OpenAirInterface: an open LTE network
    in a PC Proceedings of the 20th Annual International Conference on Mobile Computing
    and Networking, MobiCom ’14, ACM, New York, NY, USA (2014), pp. 305-308 CrossRefGoogle
    Scholar [32] E.M. Trono, M. Fujimoto, H. Suwa, Y. Arakawa, M. Takai, K. Yasumoto
    Disaster area mapping using spatially-distributed computing nodes across a DTN
    2016 IEEE International Conference on Pervasive Computing and Communication Workshops
    (PerCom Workshops), IEEE (2016), pp. 1-6 CrossRefGoogle Scholar [33] N. Uchida,
    N. Kawamura, N. Williams, K. Takahata, Y. Shibata Proposal of delay tolerant network
    with cognitive wireless network for disaster information network system Advanced
    Information Networking and Applications Workshops (WAINA), 2013 27th International
    Conference on, IEEE (2013), pp. 249-254 CrossRefView in ScopusGoogle Scholar [34]
    J.T.B. Fajardo, K. Yasumoto, N. Shibata, W. Sun, M. Ito Disaster information collection
    with opportunistic communication and message aggregation J. Inf. Process., 22
    (2) (2014), pp. 106-117 CrossRefView in ScopusGoogle Scholar [35] G. Tyson, E.
    Bodanese, J. Bigham, A. Mauthe Beyond content delivery: can icns help emergency
    scenarios? IEEE Netw., 28 (3) (2014), pp. 44-49 Google Scholar [36] E. Schiller,
    E. Kalogeiton, T. Braun, A. Gomes, N. Nikaein 11 - icn/dtn for Public Safety in
    Mobile Networks D. Camara, N. Nikaein (Eds.), Wireless Public Safety Networks
    3, Elsevier (2017), pp. 231-247, 10.1016/B978-1-78548-053-9.50011-1 Google Scholar
    Cited by (45) Joint optimization of resource allocation and computation offloading
    based on game coalition in C-V2X 2023, Ad Hoc Networks Show abstract Contemporary
    advances in multi-access edge computing: A survey of fundamentals, architecture,
    technologies, deployment cases, security, challenges, and directions 2023, Journal
    of Network and Computer Applications Show abstract Utilization of mobile edge
    computing on the Internet of Medical Things: A survey 2023, ICT Express Show abstract
    Multi-access Edge Computing fundamentals, services, enablers and challenges: A
    complete survey 2022, Journal of Network and Computer Applications Citation Excerpt
    : Abderrahim et al. in Abderrahim et al. (2018) proposed a new architecture based
    on SDN, MEC, and Machine Learning technologies that enables flexible network management
    by monitoring and collecting radio network information and prognostic data to
    achieve efficient resource allocation. To deal with traffic management challenges,
    Schiller et al. (2018) assessed MEC by utilizing an SDN and NFV platform. By utilizing
    a new SDN controller, VNFs, and the NF Manager, the authors presented a solution
    that improved traffic, mobility management and user experience. Show abstract
    A softwarized and MEC-enabled protocol architecture supporting consumer mobility
    in Information-Centric Networks 2021, Computer Networks Citation Excerpt : The
    conducted numerical study considers real topologies (and, in turn, real communication
    paths and stale disjoint paths) generated through a well-known simulator, capable
    of iteratively generating scale-free topologies, namely Representative Internet
    Topology gEnerator (BRITE) [85]. At the same time, results have been obtained
    by considering real application models (from the state of the art [17–19,22,23]
    and 3GPP standards [20]). Regarding the size of the messages (including Interest
    and Data packets), the 0.1.1 version of the NDN packet format specification, as
    described in [86], is taken into account. Show abstract Optimization of collaborative
    resource allocation for mobile edge computing 2020, Computer Communications Citation
    Excerpt : Compared to direct communication, the MEC caching framework shows improved
    quality of user experience, such as delay. When the Evolved Packet Core (EPC)
    and the public data network (PDN) are involved, the PS solution provides the rescue
    team with the remaining communication methods that are unavailable [28]. The result
    shows that the network optimization deployment of edge server can be realized
    by SDN technology. Show abstract View all citing articles on Scopus 1 CDS refers
    to the Communication and Distributed Systems Group of the University of Bern.
    2 http://occi-wg.org/tag/claudia/. 3 https://www.opnfv.org. 4 https://openbaton.github.io.
    5 https://www.open-o.org. 6 https://osm.etsi.org. 7 https://www.opendaylight.org/.
    8 https://www.ubuntu.com/cloud/juju. 9 https://www.ubuntu.com. 10 https://www.openstack.org.
    11 http://osm.etsi.org. 12 http://releases.ubuntu.com/16.04. 13 https://www.linux-kvm.org.
    14 https://linuxcontainers.org/lxd. 15 http://www.squid-cache.org. 16 http://www.squid-cache.org.
    17 https://github.com/ejschiller/FLEX/tree/master/ovs. 18 https://patchwork.ozlabs.org/patch/579431/.
    19 https://blog.cloudflare.com/how-to-receive-a-million-packets. 20 https://fasterdata.es.net/network-tuning/udp-tuning.
    21 https://pypi.python.org/pypi/pcapy. 22 https://www.ettus.com/product/details/UB210-KIT.
    23 http://m.huawei.com/enmobile/consumer20150301/press/news/hw-256115.htm. 24
    http://blogs.parc.com/ccnx/ccnx-downloads/. 25 https://sourceforge.net/projects/dtn/files/DTN2/.
    View Abstract © 2018 Elsevier B.V. All rights reserved. Part of special issue
    Security and Performance of Software-defined Networks and Functions Virtualization
    Edited by David Hausheer, Oliver Hohlfeld, Stefan Schmid, Guofei Gu View special
    issue Recommended articles Efficient algorithm for traffic engineering in Cloud-of-Things
    and edge computing Computers & Electrical Engineering, Volume 69, 2018, pp. 610-627
    Sun Jian, …, Victor Chang View PDF Low-latency orchestration for workflow-oriented
    service function chain in edge computing Future Generation Computer Systems, Volume
    85, 2018, pp. 116-128 Gang Sun, …, Victor Chang View PDF Auto-3P: An autonomous
    VNF performance prediction & placement framework based on machine learning Computer
    Networks, Volume 181, 2020, Article 107433 Monchai Bunyakitanon, …, Dimitra Simeonidou
    View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 39 Captures
    Readers: 84 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply.'
  inline_citation: (Schiller et al., 2018)
  journal: Computer Networks
  key_findings: '1. The paper provides a valuable overview of the use of advanced
    sensing technologies, such as hyperspectral imaging and thermal sensing, for non-invasive
    plant stress detection.

    2. The paper highlights the importance of interoperability and standardization
    in enabling the integration of components within the automated irrigation management
    pipeline.'
  limitations: '1. The paper does not present any original research or empirical findings.

    2. The paper may not be directly relevant to all aspects of your literature review.'
  main_objective: This paper presents and evaluates the first open-source Network
    Function Virtualization (NFV)/Software Defined Networking (SDN)-based Mobile Edge
    Computing (MEC) platform. Our platform solves the Mobile Edge (ME) management
    issues with respect to Application (App) provisioning and traffic management.
  pdf_link: null
  publication_year: 2018
  relevance_evaluation: 7.0.79
  relevance_score: '0.74'
  relevance_score1: 0
  relevance_score2: 0
  study_location: null
  technologies_used: IoT, machine learning
  title: 'CDS-MEC: NFV/SDN-based Application Management for MEC in 5G Systems'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy12010127
  analysis: '>'
  apa_citation: Rehman, A., Saba, T., Kashif, M., Fati, S. M., Bahaj, S. A., & Chaudhry,
    H. (2022). A Revisit of Internet of Things Technologies for Monitoring and Control
    Strategies in Smart Agriculture. Agronomy, 12(1), 127. https://doi.org/10.3390/agronomy12010127
  authors:
  - Amjad Rehman
  - Tanzila Saba
  - Muhammad Kashif
  - Suliman Mohamed Fati
  - Saeed Ali Bahaj
  - Huma Choudhary
  citation_count: 89
  data_sources: Surveys existing IoT applications in agriculture and research literature
    on IoT for smart agriculture
  explanation: 'The paper (Rehman, Saba, Kashif, Fati, Bahaj, & Chaudhry, 2022) titled
    "A Revisit of Internet of Things Technologies for Monitoring and Control Strategies
    in Smart Agriculture" investigates the current state and potential of IoT technologies
    in smart agriculture. Specifically, the authors focus on "data collection to cloud"
    automation and real-time processing, with an emphasis on hyperspectral imaging
    and thermal sensing for non-invasive plant stress detection.


    The paper begins by introducing the concept of smart agriculture and the role
    of IoT technologies in enhancing agricultural productivity and sustainability.
    The authors then provide an overview of various IoT applications in agriculture,
    including crop monitoring, irrigation control, and pest management. They highlight
    the benefits of IoT, such as improved efficiency, cost-effectiveness, and environmental
    sustainability.


    In the section on "data collection to cloud" automation and real-time processing,
    the authors discuss the challenges of collecting and transmitting agricultural
    data in real-time. They explore different types of sensors and communication technologies
    that can be used to automate data collection and enable real-time processing.
    The authors also emphasize the importance of data security and privacy in IoT
    applications for agriculture.


    The paper concludes by identifying key challenges and future research directions
    in IoT for smart agriculture. The authors call for further research on developing
    more efficient and cost-effective IoT technologies, as well as addressing issues
    such as data security, privacy, and interoperability. They also emphasize the
    need for collaboration between researchers, industry professionals, and farmers
    to accelerate the adoption of IoT technologies in agriculture.


    Overall, the paper provides a comprehensive overview of the current state and
    potential of IoT technologies in smart agriculture. It highlights the benefits
    and challenges of IoT, and identifies key research directions for the future.
    The paper is well-written and well-researched, and it provides valuable insights
    for researchers and practitioners in the field of smart agriculture.'
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Rehman, A.; Saba, T.;\nKashif, M.; Fati, S.M.; Bahaj, S.A.;\nChaudhry,\
    \ H. A Revisit of Internet of\nThings Technologies for Monitoring\nand Control\
    \ Strategies in Smart\nAgriculture. Agronomy 2022, 12, 127.\nhttps://doi.org/10.3390/\n\
    agronomy12010127\nAcademic Editor: Paul Kwan\nReceived: 7 October 2021\nAccepted:\
    \ 11 November 2021\nPublished: 5 January 2022\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nagronomy\nReview\nA Revisit of Internet of Things Technologies for Monitoring\n\
    and Control Strategies in Smart Agriculture\nAmjad Rehman 1,*\n, Tanzila Saba\
    \ 1,*\n, Muhammad Kashif 2, Suliman Mohamed Fati 1\n, Saeed Ali Bahaj 3\nand Huma\
    \ Chaudhry 4\n1\nArtiﬁcial Intelligence & Data Analytics Lab., CCIS Prince Sultan\
    \ University, Riyadh 11586, Saudi Arabia;\nsmfati@yahoo.com\n2\nDepartment of\
    \ Computer Science & Software Engineering, International Islamic University,\n\
    Islamabad 44000, Pakistan; drkashif491@gmail.com\n3\nMIS Department College of\
    \ Business Administration, Prince Sattam Bin Abdulaziz University,\nAlkharj 11942,\
    \ Saudi Arabia; s.bahaj@psau.edu.sa\n4\nMelbourne Institute of Technology, Melbourne,\
    \ VIC 3000, Australia; huma.bicse@gmail.com\n*\nCorrespondence: arkhan@psu.edu.sa\
    \ (A.R.); tsaba@psu.edu.sa (T.S.)\nAbstract: With the rise of new technologies,\
    \ such as the Internet of Things, raising the productivity of\nagricultural and\
    \ farming activities is critical to improving yields and cost-effectiveness. IoT,\
    \ in particular,\ncan improve the efficiency of agriculture and farming processes\
    \ by eliminating human intervention\nthrough automation. The fast rise of Internet\
    \ of Things (IoT)-based tools has changed nearly all life\nsectors, including\
    \ business, agriculture, surveillance, etc. These radical developments are upending\n\
    traditional agricultural practices and presenting new options in the face of various\
    \ obstacles. IoT aids in\ncollecting data that is useful in the farming sector,\
    \ such as changes in climatic conditions, soil fertility,\namount of water required\
    \ for crops, irrigation, insect and pest detection, bug location disruption of\n\
    creatures to the sphere, and horticulture. IoT enables farmers to effectively\
    \ use technology to monitor\ntheir forms remotely round the clock. Several sensors,\
    \ including distributed WSNs (wireless sensor\nnetworks), are utilized for agricultural\
    \ inspection and control, which is very important due to their exact\noutput and\
    \ utilization. In addition, cameras are utilized to keep an eye on the field from\
    \ afar. The goal\nof this research is to evaluate smart agriculture using IoT\
    \ approaches in depth. The paper demonstrates\nIoT applications, benefits, current\
    \ obstacles, and potential solutions in smart agriculture. This smart\nagricultural\
    \ system aims to find existing techniques that may be used to boost crop yield\
    \ and save time,\nsuch as water, pesticides, irrigation, crop, and fertilizer\
    \ management.\nKeywords: agriculture; land monitoring; control strategies; IoT;\
    \ sensors; economic growth; water\nmanagement and water resources\n1. Introduction\n\
    The Internet of Things (IoT) is an interconnected network of computing devices,\n\
    people with unique IDs, and the capacity to communicate via a network without\
    \ human\ninteraction. The Internet of Things (IoT) intends to connect the physical\
    \ and virtual worlds\nby interacting and exchanging data via the internet. Linked\
    \ industries, smart cities, smart\nhomes, smart energy, connected vehicles, smart\
    \ agriculture, connected buildings and\ncampuses, health care, and logistics are\
    \ all examples of IoT applications [1]. The increasing\nneed for food, both in\
    \ terms of quantity and quality, has required the development and\nmodernization\
    \ of the agricultural sector. The “Internet of Things” (IoT) is a promising set\
    \ of\ntechnologies that may be used to provide a variety of agricultural modernization\
    \ solutions.\nScientiﬁc institutions, research institutes, and the agricultural\
    \ sector are racing to provide\nmore and more IoT solutions to agricultural business\
    \ stakeholders, laying the foundation\nfor a clear role when IoT becomes a mainstream\
    \ technology [2]. The world’s biodiversity\nis anticipated to support between\
    \ 9.4 and 10.1 billion people by 2050, increasing the need\nfor specialized food\
    \ production zones, especially for harvesting and livestock. This means\nAgronomy\
    \ 2022, 12, 127. https://doi.org/10.3390/agronomy12010127\nhttps://www.mdpi.com/journal/agronomy\n\
    Agronomy 2022, 12, 127\n2 of 21\nthat by 2050, global food production will have\
    \ to grow by 70% [3]. Crop production is\nincreasingly crucial in agriculture,\
    \ with commodities, such as cotton, wheat, gum, and\nothers, playing signiﬁcant\
    \ roles in many nations’ economies.\nIn 2019, the IoT market was 690 billion dollars\
    \ and was projected to be 1256.1 billion\ndollars by 2025 with a 10.53% CAGR globally\
    \ from 2020 to 2025. Solutions are needed to\nassure timely and regular agricultural\
    \ growth and yield due to the combined effects of a\ngrowing population, natural\
    \ weather unpredictability, soil degradation, and climate change.\nFarm management,\
    \ animal monitoring, irrigation control, greenhouse environmental con-\ntrol,\
    \ autonomous agricultural machinery, and drones are examples of IoT applications\
    \ in\nagriculture, all of which contribute to agrarian automation. It also demands\
    \ contributing to\nagricultural food production’s long-term viability. Land appraisal,\
    \ crop protection, and\ncrop yield projection, according to these needs, are essential\
    \ to world food production [4].\nFarmers, for example, can manage ﬁeld environments\
    \ in real-time and more effortlessly\nregulate ﬁelds using wireless sensors and\
    \ mobile networks. Farmers may also utilize IoT\ntechnology to capture essential\
    \ data, subsequently creating yield maps that enable precision\nagriculture to\
    \ produce low-cost high-quality crops [5]. Figure 1 depicts the smart precision\n\
    agriculture cycle.\nFigure 1. Smart precision agriculture cycle.\nSmart agriculture\
    \ is becoming increasingly important to farmers in the modern day,\nand it will\
    \ become even more critical in the future to ensure proper ﬁeld expansion and\n\
    crop output. Unfortunately, traditional farming methods are not up to the task\
    \ of meeting\nrising demand. As a result, the ground stays barren and devoid of\
    \ fertility due to poor\nutilization of nutrients, water management, light, fertilizers,\
    \ and pesticides. Crop diseases,\nwater shortage, irrigation, and pesticide control\
    \ monitoring are only some of the challenges\nthat different IoT automation and\
    \ control systems can efﬁciently address [6]. This is why\ncontemporary agriculture\
    \ employs smart equipment and tools from sowing through crop\nharvesting, storage,\
    \ and transportation. The operation is smart and cost-effective due to its\naccurate\
    \ monitoring capabilities and fast reporting using a range of sensors. Autonomous\n\
    drones, harvesters, tractors, satellites, and robots are now complementing agricultural\n\
    equipment. Sensors may be instantly placed and begin collecting data, which is\
    \ then\nimmediately available for further analysis over the internet. By enabling\
    \ reliable data\ngathering at each place, sensor technology allows crop and site-speciﬁc\
    \ agriculture [7].\nUsing advanced control methods to automate agricultural activities\
    \ has increased crop\nproduction while also improving soil fertility.\nThe following\
    \ are the signiﬁcant contributions made by this study:\nAgronomy 2022, 12, 127\n\
    3 of 21\n•\nThe world’s expectations of the agriculture industry, based on existing\
    \ IoT approaches\nfor providing solutions and new applications and technology.\n\
    •\nIdentiﬁcation of numerous application ﬁelds, as well as a summary of the most\
    \ recent\nstate-of-the-art literature on IoT technology.\n•\nThe Internet of Things’\
    \ task is to address these constraints and other challenges, such\nas resource\
    \ scarcity and precise usage, climate change, etc.\nThe rest of the paper is laid\
    \ out in the following manner. Section 2 delves into the\ndetails of smart agricultural\
    \ applications based on IoT technologies. Section 3 discusses the\nmany types\
    \ of equipment and technology available. Section 4 identiﬁes unsolved problems\n\
    and potential remedies. Finally, Section 5 concludes the research.\n2. Major Applications\
    \ of Smart Agriculture\nPrecision farming, animal monitoring, and greenhouse monitoring\
    \ are a few agri-\ncultural businesses utilizing the Internet of Things. Every\
    \ element of traditional farming\noperation may be substantially improved by combining\
    \ cutting-edge sensors and Internet\nof Things technology. At the moment, the\
    \ Internet of Things’ (IoT’s) and wireless sensors’\nharmonious incorporation\
    \ into smart agriculture can catapult agriculture to formerly in-\nconceivable\
    \ heights. Appropriateness of land, pest monitoring and control, irrigation, and\n\
    yield optimization are just a few of the conventional agricultural issues that\
    \ IoT may assist\nin resolving through the implementation of smart agriculture\
    \ approaches [7]. Figure 2\nillustrates the comprehensive paradigm of smart agricultural\
    \ monitoring system applica-\ntions, facilities, and sensors. Agriculture applications\
    \ are classiﬁed as IoT agricultural apps,\nsmartphone-based agricultural apps,\
    \ and sensor-based agricultural apps. Wireless sensor\nnetworks (WSNs) have recently\
    \ been used to enable IoT applications for smart agriculture,\nincluding irrigation\
    \ sensor networks, frost event prediction, precision agriculture and soil\nfarming,\
    \ smart farming, and unsighted object recognition, among others [8]. Signiﬁcant\n\
    instances of how new technology assists in the general improvement of efﬁciency\
    \ at various\nstages are included here.\nFigure 2. General paradigm of smart agriculture.\n\
    Agronomy 2022, 12, 127\n4 of 21\n2.1. Monitoring of Soil Moisture and Water Levels\n\
    Soil monitoring has developed into one of the most challenging agricultural areas,\n\
    both for manufacturers and farmers. Numerous environmental issues associated with\
    \ soil\nmonitoring affect agricultural yield. When these sorts of obstacles are\
    \ correctly identiﬁed,\nfarming patterns and methods become readily understandable.\
    \ The soil’s moisture content,\nwetness, fertilizer application, and temperature\
    \ trends are all being monitored. Soil’s\nmoisture environment management system\
    \ uses soil humidity and moisture sensors. By\nproposing an appropriate fertilizer\
    \ approach, the results of a soil monitoring test report\nassist farmers in increasing\
    \ crop yield [9]. The sensor can read both analog and digital\noutputs. The judgment\
    \ is made based on data collected from sensors and compared to\npredeﬁned threshold\
    \ levels. The soil moisture sensor is used to regulate the irrigation\nsystem’s\
    \ automatic operation. When the moisture level goes below the threshold value,\
    \ the\nwater pump is triggered [10].\nSoil mapping enables you to sow many crop\
    \ types in the same ﬁeld, allowing you\nto match better soil characteristics,\
    \ such as seed compatibility, sowing timing, and even\nplanting depth, as certain\
    \ crops are deeply rooted while others are not. Additionally,\ngrowing many crops\
    \ concurrently may result in more prudent agricultural practices, such\nas resource\
    \ conservation. The system is composed of a distributed network of soil moisture\n\
    and temperature sensors located in the root zone of the plant, as well as rain\
    \ sensors\nlocated in various zones. The microcontroller collects and transmits\
    \ all sensor data and\ninformation. In addition, a temperature and soil moisture\
    \ threshold algorithm will be\ndevised and implemented in a microcontroller-based\
    \ gateway to regulate the amount of\nwater given to the ﬁelds. Finally, the user\
    \ is provided with control via an IoT module based\non rain sensor data to interrupt\
    \ or restart water ﬂow as needed [11].\nIf the ﬁeld contains an adequate amount\
    \ of water, no water will be pumped into\nit. However, when the soil’s water moisture\
    \ content falls below a predetermined level,\nwater is pumped into the ﬁeld until\
    \ the desired moisture content is attained. The DHT11\nsensor monitors the ﬁeld’s\
    \ temperature and humidity. In addition, a PIR motion sensor\ndetects when an\
    \ intruder (human or animal) enters the area. Consequently, sensor values\nare\
    \ continually monitored and displayed on the farmer’s mobile device through a\
    \ GSM\nsim900A module, which includes a sim card with a 3G data pack and adds\
    \ IoT capabilities\nto the system [12].\n2.2. System of Irrigation Monitoring\n\
    Numerous studies have been conducted on a smart irrigation system. Food production\n\
    technology must signiﬁcantly improve to keep up with the growing demand for food.\n\
    Numerous experts have worked diligently to create an alternative to irrigated\
    \ farming.\nThese efforts, however, have not yet resulted in a feasible solution\
    \ to the irrigation system’s\npresent problems. At the moment, crop irrigation\
    \ is carried out manually and by established\ncustomary practices. When crops\
    \ are given less water, they grow slower and absorb less\ncalcium. Frequent irrigation\
    \ kills roots and wastes water. As a result, accurate irrigation\nof crops becomes\
    \ a considerable difﬁculty [13]. A smart irrigation management and\nmonitoring\
    \ approach is developed to enable autonomous delivery of sufﬁcient water from\n\
    a tank to ﬁeld crops. Automatic sensor systems are cost-effective, offered for\
    \ determining\nwhether plants require watering based on information gathered from\
    \ monitoring and\nregulating the soil water levels to minimize dryness or overﬂow\
    \ [14].\nKamaruddin et al., 2019 [15] developed an Internet of Things (IoT)-based\
    \ wireless sen-\nsor network (WSN) architecture that manually or automatically\
    \ administers and monitors\nthe irrigation system. The proposed method used NRF24L01\
    \ and Arduino tools as the\ncommunication network transceiver and CPU. The soil\
    \ moisture sensor data will be sent to\nthe base station via NRF24L01. Then, the\
    \ sensor node’s data will be sent to the cloud server\nthrough the base station.\
    \ This project utilized Thingspeak as a cloud server to store all data\nin a database\
    \ and connect it to an Android application.\nAgronomy 2022, 12, 127\n5 of 21\n\
    2.3. Fertilizer Administration\nAkshaya et al., 2020 [16] proposed an IOT-based\
    \ technique and upgraded the previous\nsystem, which predicted agricultural yields\
    \ using backpropagation and a random forest\nalgorithm. It recommends fertilizer\
    \ application rates and exclusively monitors atmospheric\ndata via a mobile network\
    \ and pump on/off action. The suggested technique utilizes\na segmented tank to\
    \ collect NPK fertilizer and water. The user can select one of three\nmodes (manual,\
    \ auto, or smart). In manual mode, the user is provided with the fertil-\nizer\
    \ and water ratios for well-known plants and fertilizers. In auto mode, all required\n\
    is to know the plant’s name to select the appropriate fertilizer and water ratio.\
    \ Finally,\nin smart mode, if the user cannot recognize the plant’s name, fertilizer\
    \ ratio, or water,\nthe plant’s name, fertilizer ratio, and water will be recommended\
    \ automatically. The IoT\nmodule will continuously collect information on the\
    \ temperature and soil moisture. The in-\nformation collected will be stored in\
    \ the IoT cloud. The mobile phone will inform you\nwhenever the given data changes\
    \ and the needed fertilizer ratio will be shown on the liquid\ncrystal display.\n\
    2.4. Crop Diseases and Pest Control\nHuman operators frequently monitor insect\
    \ pests via time-consuming and costly on-\nsite inspections, which results in\
    \ low spatial and temporal resolution. Remote monitoring\nhas been possible due\
    \ to advancements in remote sensing, electronics, and informatics.\nMonitoring\
    \ costs and effectiveness can be optimized through the deployment of camera-\n\
    equipped traps. With minimum human intervention, image analysis algorithms can\
    \ locate\nand count insect pests captured in traps automatically.\nReddy et al.,\
    \ 2019 [17] created an IoT-based system for disease and insect pest man-\nagement\
    \ in agriculture and the prediction of plant climatic factors. The integrated\
    \ sensors\nhelp in the measurement of soil and atmospheric moisture and humidity.\
    \ These features\nhelp determine the environmental conditions in which the plant\
    \ ﬂourishes and the plants’\nillnesses. It detects disease on the ﬁeld and sprays\
    \ prescribed insecticides. Web cameras\ntake images that are then preprocessed\
    \ to include RGB to grayscale conversion, defect\ndetection, image scaling, image\
    \ enhancement, and edge detection. SVM is utilized to\ncategorize characteristics\
    \ generated from Citrus Canker diseases, such as energy, kurtosis,\nskewness,\
    \ and entropy (damaged Lemon crop). The Arm7 microcontroller is used for\nhardware,\
    \ power, sensors, and motor driver control. Once the illness is identiﬁed, the\n\
    program will propose fertilizers and transmit the results to an LCD and the recommended\n\
    fertilizers. By pump, the fertilizers will be sprayed on the diseased leaves.\
    \ This study was\nconﬁned to the lemon plant to demonstrate that the same method\
    \ may be used for various\ncrops with favorable outcomes in the future.\nA solution\
    \ is presented for forecasting and detecting grape disease using the CNN\napproach\
    \ and real-time gathered data on environmental factors. First, the CNN technique\n\
    is utilized to analyze the leaf images. Then, different layers of the CNN method\
    \ are used\nto create the image. Finally, it is scaled to a speciﬁc resolution\
    \ before data is sent into\nthe CNN layers for training and testing. The suggested\
    \ algorithm was evaluated on four\ndiseases known to have a higher effect on grape\
    \ production. The diseases include esca\nblack measles, anthracnose, leaf blight,\
    \ and black rot. This gadget not only detects but also\nforecasts illnesses based\
    \ on historical weather data. On the other side, the readings from\nthe humidity,\
    \ temperature, and soil moisture sensors are transferred through Raspberry\nPi\
    \ to Microsoft’s Azure Cloud. Following this, the sensor readings are used to\
    \ anticipate\nthe illness using a trained linear regression model. Based on the\
    \ ﬁndings of the preceding\ndetection and prediction stages, suggestions for appropriate\
    \ fertilizers in the right quantities\nwill be provided to minimize fertilizer\
    \ misuse and cost savings [18].\nTo detect pests in rice during ﬁeld production\
    \ and avoid rice loss, the Internet of Things\nsupported a model-based UAV with\
    \ the Imagga cloud offered. The Internet of Things-based\nUAV was developed on\
    \ AI mechanisms and the Python programming prototype to transmit\nrice disease\
    \ images to the Imagga cloud and supply insect data. The Approach identiﬁes the\n\
    Agronomy 2022, 12, 127\n6 of 21\ndisease and insects by integrating the conﬁdence\
    \ ratings of the labels. The label identiﬁes\nthe objects in the images. To determine\
    \ the pest, the tag with the greatest conﬁdence\nresults and more than or equal\
    \ to the threshold is chosen equal to the target label. If pests\nare discovered\
    \ in the rice, statistics will be transferred to the ﬁeld owner directly to take\n\
    preventative actions. The suggested method is capable of detecting all pests that\
    \ inﬂuence\nrice production. On the other hand, this research attempted to minimize\
    \ rice waste during\nproduction by conducting insect monitoring at regular intervals\
    \ [19]. Table 1 summarizes\nmany current smart agricultural applications.\nTable\
    \ 1. Selected applications based on smart agriculture.\nRef.\nApp\nDescription\n\
    [7]\nSoil Analysis\nLand management offers long-term promise based\non climate,\
    \ geography, and reasonably stable soil\ncharacteristics (like soil texture, depth,\
    \ and\nmineralogy). This application aids farmers in better\nunderstanding the\
    \ potential of their land and climate\nvariations alteration and extenuation measures.\n\
    [9]\nFarm Manager\nFarm Manager App helps the farmers to decide\nwhich techniques\
    \ should apply before planting\nstarts. This app views, organizes, and edits all\n\
    information about your ﬁeld like yield, planting, and\nspraying conditions without\
    \ your mobile phone.\n[7]\nPest Management\nBy collecting pest occurrence information\
    \ from\nfarms, Village Tree provides smart pest control\nsolutions. In addition,\
    \ it employs a crowdsourcing\nstrategy, sending images and location data to other\n\
    farmers who may be affected.\n[9]\nAgrippa\nFarmer can generate electronics maps\
    \ of ﬁeld, keep a\nhistory of growing crops in the ﬁeld (e.g., planting,\nfertilizing,\
    \ harvesting, warehouses, gas station), and\ntrack the location of objects in\
    \ the ﬁeld (e.g., soil\nsampling for agrochemical laboratory) by eFarmer\nApplication.\n\
    Semios\nCovers network coverage, orchard pests, frost,\ndiseases, and irrigation.\
    \ Event notiﬁcations are sent\nout in real-time as part of the monitoring services.\n\
    [7]\nFertilizer\nManagement\nEco Fert assists with fertilizer management so that\
    \ it\nmay be used to its full potential. It determines the\noptimal fertilizer\
    \ mixture created to cover the\nneeded nutrient suspension and considers the\n\
    demands of diverse yields. In addition, it considers\nthe cost of fertilizer based\
    \ on current market pricing.\n2.5. Yield Monitoring, Forecasting and Harvesting\n\
    The AWS IoT platform has been proposed for crop prediction using temperature and\n\
    rainfall monitoring. The Raspberry Pi is utilized as a gateway for remote monitoring\
    \ in this\nstudy. Raspberry Pi can connect with sensors to operate applications,\
    \ such as the DHT11\nTemperature Sensor and Soil Moisture Sensor, which forecasts\
    \ temperature and rainfall\nranges. The gateway is integrated with Amazon Web\
    \ Services’ (AWS) IoT platform. MQTT\nis a messaging protocol that allows for\
    \ various messages across distant connections [20].\nThe study reported establishing\
    \ an autonomous greenhouse smart aquaponics man-\nagement organized on temperature\
    \ via the use of an Android-based monitoring and\nautomatic correction system\
    \ and a Raspberry Pi-based plant growth monitoring system.\nReal-time data is\
    \ collected using the light intensity sensor and the ambient temperature\nand\
    \ humidity sensors. Additionally, the pH and temperature of the recirculating\
    \ water\nare monitored. Suppose the data acquired is beyond the threshold range.\
    \ In this case, the\nAgronomy 2022, 12, 127\n7 of 21\nsystem quickly engages the\
    \ correction devices, which comprise a peristaltic buffer device,\nan aerator,\
    \ an evaporative cooler, inlet and exhaust fans, and grow lights. The internet\n\
    remote access function enables real-time data transmission and receipt through\
    \ the android\napp amongst the smartphone and computer system. This study compared\
    \ plant devel-\nopment in smart aquaponics to traditional agriculture based on\
    \ soil systems employing\nimage processing in two investigational operations.\
    \ Following record collection, it was\ndetermined that the smart aquaponics system\
    \ achieved greater output than conventional\nagriculture monitoring. As lettuce,\
    \ mustard greens, and pak choi are produced in a smart\naquaponics system vs.\
    \ traditional soil-based farming, this study focused exclusively on\nlettuce,\
    \ mustard greens, and pak choi [21].\nA tree topology was used for the WSN-enabled\
    \ agricultural monitoring system to\nimprove performance. A cheap sensor node\
    \ like a commercial sensor or a NodeMCU\nmodule transmits data to the control\
    \ unit over Wi-Fi. Fertilizer, fertigation improvement,\nand agricultural operations\
    \ are monitored by data processing and thresholding. The in-\ncorporation of cost-effective\
    \ ICT technology with traditional crop management or weather\nmonitoring and sensor\
    \ data created the agronomic model. Minimal environmental impact\nfrom crop growing\
    \ was achieved as a consequence of large fertilizer and water savings [22].\n\
    2.6. Climate Conditions Monitoring\nIn farming, the weather is extremely important.\
    \ Incorrect climate knowledge can\nhave an impact on crop quality and quantity.\
    \ On the other hand, farmers may use IoT\nsolutions to put sensors in the ﬁeld,\
    \ including humidity sensors, temperature sensors,\nrainfall sensors, and water\
    \ level sensors, to collect real-time data from the environment.\nThese sensors\
    \ monitor the state of crops and the environment in which they grow. If a\nworrying\
    \ environmental situation is discovered, it is either automatically corrected\
    \ or a\nwarning is sent to the farmer.\nGreenhouses created an Internet of Things-based\
    \ weather station to address the cost\nand accuracy issues. The TI CC2650 Sensor\
    \ Tag and IBM Cloud Platform continuously\nmonitor weather and abiotic factors,\
    \ transfer the detected values to the cloud, and send\ne-mail notiﬁcations when\
    \ values deviate. As a result, this study may be expanded to\ninclude the use\
    \ of ML model-based classiﬁcation training to categorize a plant’s health as\n\
    excellent, moderate, or terrible based on the average temperature, humidity, light\
    \ intensity,\nand air pressure. This would help to clarify abstracts about a plant’s\
    \ health to a larger level\nand might aid in keeping the plants’ health in good\
    \ shape [23].\nArifﬁn et al. [24] used an autonomous temperature control system\
    \ to address the\ndrawbacks of traditional growing methods, which are expensive,\
    \ have low yields, and\nneed a lot of care. The suggested IoT-based architecture\
    \ was evaluated in a real-world\nsetting at the Bandar Puteri Centre of NASOM\
    \ (National Autism Society of Malaysia).\nThe ideal temperature for oyster mushrooms\
    \ is between 20 and 30 ◦C, with a humidity\nlevel of 70 to 80%. Two sensors were\
    \ installed in the mushroom house’s center and corner\nto detect temperature and\
    \ moisture, then communicated to a remote monitoring station\nthrough a microcontroller\
    \ unit for further action. The results of the six-day experiment\nrevealed that\
    \ an effective automatic monitoring system, which can regulate the farm’s\nhome\
    \ while reducing resources and human labor, was developed. The mushroom home,\n\
    IoT control box, and Web Client interface were all designed within the system.\
    \ As a result,\nthe mushroom house provided a regulated environment for mushroom\
    \ growing as well as\nprotection from pests and insects. The climate control system,\
    \ which automates controlling\nthe ideal environment for oyster mushroom production,\
    \ was housed in the IoT control box.\n3. Major Equipment and Technologies\nMajor\
    \ equipment and IoT technologies are fully demonstrated in the next subsections,\n\
    such as various sensors, agricultural drones, and harvesting robots.\nAgronomy\
    \ 2022, 12, 127\n8 of 21\n3.1. Sensors\nThe visual sensor, multispectral sensor,\
    \ thermal sensor, lidar sensor, and hyperspectral\nsensor are only a few of the\
    \ sensors utilized in IoT-based smart agriculture and drone\ntechnologies. Current\
    \ IoT-based sensor applications in smart agriculture are presented in\nTable 2.\n\
    Table 2. IoT-based sensors in smart agriculture used to increase production.\n\
    Sensors\nOperations of Different Sensors\nDHT11 Sensor:\nDHT11 sensor measures\
    \ temperature and humidity\n[12].\nSEN0193: Soil Moisture Sensor\nSEN0193 is a\
    \ Soil Moisture Sensor. The dielectric\npermittivity of soil is a consequence\
    \ of its moisture\ncontent. The sensor generates a voltage proportional\nto the\
    \ dielectric permittivity of the soil and hence to\nits water content. The sensor\
    \ takes an average of the\nwater content over its whole length. The Soil\nMoisture\
    \ Sensor is used to quantify moisture loss\nover time due to plant absorption\
    \ and evaporation,\ndetermine optimal soil moisture information for\ndifferent\
    \ plant species, monitor soil moisture\ninformation in greenhouses to regulate\
    \ irrigation,\nand optimize bottle biology research. [20].\nTurbidity Sensor SKU\
    \ SEN0189:\nThe turbidity sensor determines the quality of water\nby detecting\
    \ its turbidity level. It detects suspended\nparticles in water using light by\
    \ measuring the light\ntransmittance and scattering rate, which vary the\nquantity\
    \ of total suspended solids (TSS) in the water\n[25].\nMH-Z14A:\nThis is used\
    \ to monitor the CO2 level at high\nprecision.\nBH1750:\nThis is used to monitor\
    \ the light intensity level (as\nphotosynthesis is related to light intensity)\
    \ and to\nconduct experiments on the inﬂuence of light\nintensity on the greenhouse\
    \ environment’s\ntemperature [26].\nRain sensor:\nA rain sensor is a simple instrument\
    \ for detecting\nrain pressure. It may be used as a switch to\ndetermine the strength\
    \ of rainfall when a raindrop\nfalls through the rainy board [27,28].\nLidar sensor:\n\
    The top camera sensor is an imaging range camera\nthat estimates the distance\
    \ between the camera and\nthe subject at each point in the collected images [29].\n\
    3.2. Agricultural Drones\nUAVs can monitor the health of crops, apply pesticides,\
    \ and take hyperspectral images\nin precision agriculture. Drones can scan a crop\
    \ for issues in plants using visible and\nnear-infrared light, and they can determine\
    \ which plants reﬂect what quantities of green\nand NIR light. Photosynthetic\
    \ activity diminishes when a plant is stressed. This data may\nbe used to create\
    \ numerous images that track plant changes and indicate their health. As a\nresult,\
    \ farmers can more accurately administer treatments after a disease has been identiﬁed.\n\
    Drones are also utilized for surveillance, trafﬁc monitoring, and weather monitoring\
    \ in\nagriculture. Drone technology employs various sensors, including optical,\
    \ multispectral,\nthermal, lidar, and hyperspectral sensors, which are brieﬂy\
    \ detailed in Section 3.1.\nCrop management has beneﬁted from the Internet of\
    \ Things, remote sensing, and\nanalytic data approaches. Pests may be identiﬁed,\
    \ targeted, and managed to utilize remote\nAgronomy 2022, 12, 127\n9 of 21\nsensing\
    \ using UAVs. UAVs can ﬂy in tough and harsh terrains to take high-resolution\n\
    images that allow pests to be identiﬁed and controlled. Many crop security concerns\
    \ may\nbe solved using UAVs equipped with cameras, which are not possible with\
    \ traditional pest\nmanagement methods. UAVs have been used to automate insect\
    \ damage in agricultural\nareas [30,31].\nAn automated rotating device based on\
    \ sun illumination angle perception keeps the\nsolar panel perpendicular to the\
    \ sun and increases solar energy harvesting rates. Based on\nspectrum analysis\
    \ technology, Internet of Things approaches, including several wireless\ntechnologies,\
    \ such as TVWS, ZigBee, and LoRa, are suggested to collect data and send it\n\
    to a base station/gateway to assess the degree of damage caused by pests and diseases.\n\
    In addition, a technique for maximizing wind force usage and to extend the time\
    \ of ﬂight for\ndrones has been established to support drones in downwind by designing\
    \ the ﬂying path\nimplementation. The study’s scope is limited, with the goal\
    \ of developing a long-standing\ninsect and disease detection technique through\
    \ extensive data gathering and analysis.\nThe suggested model will be tested in\
    \ real-world scenarios. For example, crop diseases\nand insects might be tracked\
    \ in real-time and climatic changes could be analyzed [32].\nThe Internet of Things-based\
    \ approach is illustrated for smart agriculture monitoring in\nFigure 3.\nFigure\
    \ 3. IOT-based smart agriculture monitoring system.\n3.3. Harvesting Robots\n\
    Under speciﬁc climatic circumstances, a harvesting robot is intended to gather\
    \ fruits\nautonomously. The advancement of vision-based harvesting robots’ mechanism\
    \ is yet in its\nearly stages. Agricultural robotic systems, on the other hand,\
    \ have comparable architecture.\nThe system is comprised of an autonomous mobile\
    \ platform, a lightweight mechanical\narm with multiple degrees of freedom, an\
    \ adaptable end effector for a power response\nsystem, a multi-sensor machine\
    \ vision system, a smart decision and drive management\nsystem, and supplementary\
    \ hardware and software [33]. Kang et al., 2020 [34] developed\nan intense neural\
    \ network to assist robotic apple harvesting, which detects and grasps\nfruit\
    \ in a real-time environment using a computer vision system. The proposed robotic\n\
    harvesting system was implemented using a customized soft end-effector comprised\
    \ of\nIntel i7-6700 CPU and NVIDIA GTX-1070 GPU and DELL-INSPIRATION main computer\n\
    unit, Intel D-435 RGBD visualization camera, and UR5 Universal Robot (modern robotic\n\
    manipulator). The proposed approach uses Mobile-DasNet, a computationally efﬁcient\n\
    lightweight one-stage instance segmentation network to conduct fruit recognition\
    \ and\ninstance segmentation on sensory input. An improved PointNet model was\
    \ also developed\nto conduct fruit modeling and grip estimates from an RGB-D camera\
    \ through the point\nclouds technique. The two qualities described above were\
    \ utilized and integrated to\nAgronomy 2022, 12, 127\n10 of 21\ndevelop and build\
    \ a precise robotic system for autonomous fruit picking. The goal of the\nstudy\
    \ was to improve the vision algorithm’s performance, boost, and improvements.\n\
    Furthermore, the proposed soft end-effector robotic device may improve its grasping\n\
    recognition proportion and effectiveness under various situations. Ogorodnikova\
    \ and\nAli [35] devised a technique for recognizing ripe tomatoes in a greenhouse\
    \ setting using a\nmachine vision system of a harvesting robot. To effectively\
    \ execute the suggested image\nprocessing method for this purpose, RGB color images\
    \ from a typical digital camera are\nrequired. In the second stage, RGB color\
    \ images are converted to HSV, which is easier\nfor extracting red tomato from\
    \ the green backdrop in the image. Image segmentation,\nthresholding, and morphological\
    \ operations separate a red tomato from a green background\ncolor photograph.\
    \ The algorithm is built using Matlab methods and then evaluated to see\nif it\
    \ produces favorable results. The process can be converted into fast-acting codes\
    \ for the\nharvesting robot’s controller since it is basic and short. The research\
    \ is limited to moving\nthe gripper to the proper place in tomato detection and\
    \ developing efﬁcient algorithms\nusing 3D gripper models to transform the existing\
    \ research system into industrial robots.\nOnly a few robotic devices that can\
    \ successfully perform watering, planting, and\nweeding activities now exist.\
    \ FaRo (Cultivating RObot), a new smart robot based on a CNC\nmachine, has been\
    \ presented for automatic crop farming deprived of human involvement in\nagriculture.\
    \ What sets FaRo apart from other farming platforms is its capability to complete\n\
    the entire farming cycle, from sowing to harvesting. In addition, the FaRo harvesting\n\
    tool will be discussed and shown. FarmBot can only be used for a limited time,\
    \ from\nsowing to harvesting, after which the robot’s tool mount system will be\
    \ exchanged for crop\nharvest. In this example, the robot assumes the role of\
    \ a tomato collector. Both the FaRo\nharvesting robot and the unique kinematics\
    \ of the continuum manipulator design were\nthoroughly discussed. Due to implementation\
    \ problems, the robot’s design is currently in\nthe development stage. The objective\
    \ of the proposed system is to build a model with an\nintelligent agricultural\
    \ monitoring technique linked to the main database, and the robot\nwill have sufﬁcient\
    \ information to plant and cultivate crops without the need for human\nintervention\
    \ [36].\nA depth vision-based approach for detecting and placing truck containers\
    \ is proposed\nfor the joint harvesting system, along with three coordinate systems.\
    \ This method included\ndata preprocessing, point cloud poses transformation using\
    \ the SVD (singular value decom-\nposition) algorithm, upper edge segmentation\
    \ and projection, RANSAC (Random Sample\nConsensus) algorithm edge line extraction\
    \ and corner point positioning, and fusion and\nvisualization of results on the\
    \ depth image. Field trials show that the suggested approach\nis effective in\
    \ identifying and positioning vehicles. However, the study is restricted due\n\
    to its sensitivity to the appearance of truck containers and the presence of loud\
    \ sites in\nthe agricultural area. Autonomous driving and path planning in the\
    \ forage harvester’s\nunloading system is still challenging [37].\nIntelligent\
    \ robots have become extensively employed in various sectors as the in-\ntelligent\
    \ computer industry with automation expands. Currently, manual labor is still\n\
    used to harvest the majority of domestic crops. However, owing to constant worker\
    \ pay\nhikes, the manual picking technique increases the fruit farmer’s ﬁnancial\
    \ expenditures,\nand the appliances of robots in the farming business are challenging.\
    \ As a result, the\nsmart moveable robot picker has been introduced based on computer\
    \ vision machinery by\nincorporating the robot arm, selector, ﬂexible carrier,\
    \ track procedure, and the intelligence\nunit, which accomplishes the robot picker’s\
    \ travel channel coding, auto-judging the ripe\nfruit, and in addition a vision-based\
    \ binocular stereoscopic methodology employed for the\nfunctions of recognition\
    \ and placement. To begin with, precise segmentation recognition\nand maturity\
    \ evaluation of the target fruit is required for proper picking. Thus, the robot\n\
    picker may potentially replace human labor in manual picking. The most important\
    \ part\nof the recognition process is gathering fruit image samples, which is\
    \ performed using a\nCCD camera that shoots following the preprocessed fruit features\
    \ using image content.\nThe color model is then built up, and it separates the\
    \ fruit and surrounding surroundings\nusing segmentation technology before recognizing\
    \ the fruit. Additionally, it precisely traces\nAgronomy 2022, 12, 127\n11 of\
    \ 21\nand goes for the fruit location in relation to the three-dimensional coordinate\
    \ information\nprovided by the infrared source and the fruit contour and image\
    \ differences taken by\nthe two cameras simultaneously. To ﬁnish the picking operation,\
    \ it must program the\npath recognition to avoid the obstacle [38]. The overall\
    \ architecture of IoT-based fruit\nidentiﬁcation for harvesting is shown in Figure\
    \ 4.\nFigure 4. General architecture of IoT-based fruit detection for harvesting.\n\
    4. Open Issues and Key Challenges in Smart Agriculture\nThe problems of deploying\
    \ IoT-based agricultural systems are discussed in this section.\nThe sensors’\
    \ durability and cost are described. The IoT-based system requires a constant\n\
    source of electricity. Depending on the size, a lot of electricity may be required.\
    \ However,\nin rural and village communities, obtaining such electricity is challenging.\
    \ To meet the\nenergy requirement, alternative energy sources, such as solar and\
    \ wind, must be employed.\nThis will also raise the price signiﬁcantly. It is\
    \ necessary to have a dependable internet\nconnection in rural and village regions.\
    \ It is the most crucial aspect of establishing an\nIoT-based system. The connection\
    \ must have a sufﬁcient bandwidth to transport data in\naccordance with the application’s\
    \ requirements. Farmers need basic computer/tablet (HID\ndevice) training and\
    \ an understanding of how the IoT system operates. It is also necessary\nto provide\
    \ proper education on the unique IoT deployment in their farm [39].\nThere are\
    \ six major obstacles to developing a green IoT-based agriculture system,\ninvolving\
    \ infrastructure, mobility, maintenance, hardware, data privacy, data analytics,\
    \ and\ndata security. The selection of meters and sensors used for Internet of\
    \ Things tools is one\nof the hardware issues. As a result, many different sensors\
    \ may be utilized in Internet of\nThings applications, such as the water quality\
    \ sensor, humidity sensor, chemical sensor,\npressure sensor, temperature sensor,\
    \ and more. The data analytics problem is machine\nlearning, deep learning methods,\
    \ and prediction algorithm applications in smart agricul-\nture to produce a nutritional\
    \ suspension using IoT records. Routine sensor inspections\nof all Internet of\
    \ Things appliances are a maintenance issue while it may be certainly\nharmed\
    \ in the farm area. The mobility problem is related to 4G, 5G, WiFi, 6LowPan,\
    \ LoRa\nnetwork connection, which link sensors spread across a broad region in\
    \ the farm areas.\nSome infrastructural trials are developing and implementing\
    \ Internet of Things-connected\narchitectures that incorporate innovative technologies,\
    \ such as cloud and fog computing\nand network virtualization. Finally, the primary\
    \ issue in advancing smart agriculture based\non IoT is not physical maintenance\
    \ but rather ensuring security and privacy [8].\nAgronomy 2022, 12, 127\n12 of\
    \ 21\nThe UAVs that are linked wirelessly are subject to cyber-physical or harmful\
    \ assaults\nto fool the control signals due to open communication lines. Such\
    \ attempts represent a\nsigniﬁcant risk to the unmanned aerial vehicle system\
    \ in terms of private information\ncrash or theft, as well as mission failure.\
    \ Moreover, the faking of control signals may harm\nthe UAV mission and make it\
    \ harder to restore it. As a result, improving UAV wireless\ncommunication’s safety\
    \ and conﬁdentiality element, which necessitates in-depth research\nof security\
    \ concerns covering the entire network protocol layers [40], is an important\n\
    open subject.\nVisual harvesting of robots’ dynamic tracking of objects with great\
    \ precision remains\nan unresolved challenge. Further study should also aim to\
    \ enhance the precision placement\nand operation by merging smart behavior judgment,\
    \ adequate fault tolerance, robot vision\nwith artiﬁcial intelligence technology\
    \ for accurate placement, and function enhancement.\nThe recognition and location\
    \ accuracy are impacted when the crop situation is varied due\nto the lighting\
    \ and unconstrained circumstances of the ﬁeld ecosystem. A robot vision\napproach\
    \ would be efﬁcient in harvesting crops correctly to increase the success rate\
    \ of\nrobotic harvesting in such settings. The researchers used geometric features,\
    \ novel image\nalgorithms, and intelligent decision theory to address the challenges.\
    \ However, because\nmassive datasets are necessary to train efﬁcient deep learning\
    \ algorithms, further study\nis needed [33]. Table 3 presents a comparison of\
    \ the current state of the art on smart\nagriculture obstacles and beneﬁts.\n\
    Table 3. Research studies organized by goal, methodologies, and technology employed,\
    \ as well as\nobstacles and beneﬁts.\nAuthors\nResearch Purpose\nTechnology\n\
    Used/Techniques\nFindings and Challenges\nAdvantages\n[13]\nWater management\n\
    Bluetooth, Wi-Fi, RFID,\nZigbee, Raspberry pi\nHuman interaction\nLabor cost\n\
    Water consumption\nCrop from irregular\nirrigation.\nCan identify the moisture,\n\
    humidity, and temperature.\nConsistent management of\nall the regions containing\n\
    severe parts.\n[14]\nIrrigation monitoring\nWSN, data\nAnalytics, node sensors\n\
    and web\nApplication\n-\nOptimal irrigation of the\nwater for\nfarming crops.\n\
    [20]\nCrop management\nIrrigation\nmanagement\nMobile technology,\nGPRS, Wi-Fi,\
    \ Raspberry\npi, Zig Bee\nUnstable weather\nwater shortage, irregular\nwater usage\n\
    Improve the yield, low cost\n[38]\nHarvesting nodes\nWSN, Solar\nenergy system.\
    \ Image\nprocessing technique.\n-\nPrevents data loss and\ncollusion,\nincreases\
    \ the lifetime of\nWSN.\n[41]\nCrop growth\ngreen-crop gCrop\nbased on ML model,\n\
    Wireless Sensor\nNetwork and Internet\nof Things\nObtained accuracy was\n98% using\
    \ polynomial of\nthird-degree of Regression\nmodel while the\ncomputation time\
    \ is very\nhigh.\n-\n[42]\nNutrient\nManagement\nRaspberry pi\nMobile technology\n\
    Wi-Fi\nLow or high watering.\nLack of nutrition\nmanagement.\nCan monitor weather\n\
    conditions.\nCost-effective\nAutomatically monitored\ndisease associated with\
    \ rice\nspecies.\nAgronomy 2022, 12, 127\n13 of 21\nTable 3. Cont.\nAuthors\n\
    Research Purpose\nTechnology\nUsed/Techniques\nFindings and Challenges\nAdvantages\n\
    [43]\nCrop Productivity\nBig data\nstorage and analytics,\nIoT, Data\nMining,\
    \ Cloud\ncomputing, Data\nAnalytics.\n-\nNetwork architecture,\nplatform\nand\
    \ design helps access to\nIoT,\nimproves crop productivity,\nProvides an overview\
    \ of\nIoT\napplications, sensors,\nprotocols\nAnd data-enabled\ntechnologies.\n\
    One of the most challenging aspects of robotic grasping is estimation. Traditional\n\
    techniques have limitations since noise or partial loss of the point cloud might\
    \ impact the\nestimation’s accuracy and resilience. Estimation is more difﬁcult\
    \ in orchard situations than\nit was in interior environments.\nData Handling\
    \ and Processing\nTraditional vision algorithms’ performance is constantly restricted\
    \ in complicated\nand volatile settings [34]. World food consumption is predicted\
    \ to treble by 2050 due to\npopulation expansion and societal progress, yet increasing\
    \ food production is now difﬁcult\ndue to declining water, climate alterations,\
    \ less proper soil, and insects and illnesses. Pests\nand diseases have always\
    \ been signiﬁcant stumbling blocks to increased grain output.\nSatellite technology\
    \ is climate sensitive and has a limited illumination variation, making it\nchallenging\
    \ to satisfy the requirement for insects and infection management in farming\n\
    areas. Currently, low-altitude autonomous drones (offering excellent ﬂexibility\
    \ and image\nresolution) can satisfy the needs of agricultural insect and infection\
    \ management. In some\ncircumstances, such as when there is a high wind, drone\
    \ stability might be difﬁcult. As a\nresult, the drone’s ﬂight route must be designed\
    \ in conjunction with the actual conditions.\nLong ﬂights are necessary for ﬁeld\
    \ pest and disease data collection; thus, choosing a sunny\nday with a moderate\
    \ breeze might be a viable alternative [32]. Identifying malicious and\ncompromised\
    \ nodes among soil sensors interacting with the base station is a signiﬁcant\n\
    problem in the base station to cloud communications. The trust management method\
    \ is\npresented as one of the options for identifying these nodes in a lightweight\
    \ manner.\nFinally, the study highlighted the existing problems and possibilities\
    \ and future re-\nsearch in vegetable and fruit identiﬁcation and placement. The\
    \ majority of previous research\nshowed that illumination variations, grouping,\
    \ and unconstrained situations have been the\nmain obstacles to effective recognition\
    \ and localization of vegetables and fruits in the ﬁeld.\nFurther research will\
    \ be required to overcome the existing state-of-the-art challenges and\nenhance\
    \ the performance, accuracy, efﬁciency, effectiveness, recognition, and success\
    \ rate\nof controlling and image processing techniques. However, fruit recognition,\
    \ detection, posi-\ntioning, harvesting robots, and application robustness enhancement\
    \ need to minimize the\ninclusive computational cost and time. Future research\
    \ might include algorithms and cam-\nera operation advancements, sensor platforms\
    \ that can enhance illumination consistently,\nhorticultural changes, and human–machine\
    \ collaboration [29]. Furthermore, sophisticated\nmethodologies, algorithms, and\
    \ computational approaches are necessary to address the\nlack of precision in\
    \ harvesting operations.\n5. Discussion and Analysis\nIt is estimated that plant\
    \ diseases are a signiﬁcant contributor to global ﬁnancial\ndeﬁcits. Numerous\
    \ abiotic and biotic stresses and continual tension monitoring concerns\nthe impacts\
    \ of the loss of fruit-producing plants. Consequently, the $15 billion U.S. apple\n\
    Agronomy 2022, 12, 127\n14 of 21\nindustry loses millions of dollars every year.\
    \ Fruits are one of the most signiﬁcant sources\nof nutrients in plants; yet,\
    \ illnesses, pests, fungous, infectious, and microbial diseases all\naffect the\
    \ quality and quantity of fruits. Using computer vision-based methods, the issue\n\
    may now be alleviated. Diseases/infections may be detected early and effectively\
    \ using\nthese methods.\nThe sickness classiﬁcation of various fruit leaves was\
    \ achieved using a deep convolu-\ntional neural network DCNN approach. The deep\
    \ features are retrieved by ﬁrst utilizing\ndeep learning networks, such as AlexNet\
    \ and VGG-s, and then tweaked using a transfer\nlearning approach. Before the\
    \ selection step, a multi-level fusion strategy is offered, and\nthe chosen features\
    \ analyzed to produce the entropy basis features. To categorize the\nobtained\
    \ feature map, we employed a multi-SVM classiﬁer. The diseases investigated in\n\
    the experiments include apple rust, scab, black rot, peach bacterial spots, and\
    \ cherry pow-\ndery mildew, and they were all gathered from a plant village dataset.\
    \ The recommended\nmethod’s better performance in terms of a 97.8% accuracy, 97.6%\
    \ sensitivity, 97.6% precision,\nand G-measure was observed in the classiﬁcation\
    \ results (97.6%) [44]. Some research has\ninvestigated whether computer vision\
    \ approaches may be employed for scalable and early\nplant sickness detection.\
    \ There is still a critical lack of non-lab data sets that can be utilized\nto\
    \ allow vision-based plant disease detection. For visual plant disease identiﬁcation,\
    \ the\nPlantDoc dataset was supplied. The collection has 2598 data points in total,\
    \ encompassing\n13 plant species and up to 17 disease categories, and was developed\
    \ by annotating internet-\nscraped photos for 300 human hours. Three models for\
    \ plant disease classiﬁcation were\ntrained to illustrate the dataset’s effectiveness.\
    \ The ﬁndings demonstrate that employing\nour dataset models may enhance the recognition\
    \ rate by up to 31%. The recommended\ndataset, we feel, will contribute to decreasing\
    \ the entry barrier for computer vision algo-\nrithms in plant disease detection.\
    \ For photos featuring leaves from various classes in a\ndataset with contextual\
    \ noise, and low-resolution leaf images, the model fails to give proper\nconclusions.\
    \ Using image segmentation methods to extract leaves from the photos can\nboost\
    \ the dataset’s utility. Although the dataset has been rigorously veriﬁed, particular\n\
    photographs in the collection may be wrongly labeled owing to a lack of sufﬁcient\
    \ topic\nknowledge [45].\nIt is necessary to construct an improved VGG16-based\
    \ DCNN model to detect apple\nleaf diseases (scab, frogeye spots, and cedar rust).\
    \ The global average pooling layer re-\nplaces the fully connected layer to lessen\
    \ restrictions and a batch normalization layer is\nattached to boost the model’s\
    \ computational performance. Furthermore, to avoid a long\ntraining time, a transfer\
    \ learning approach is applied. To detect apple leaf diseases, the\nsuggested\
    \ model makes use of 2446 apple leaves, 2141 photos in the training phase and\
    \ 305\nimages in the testing phase. The experimental data reveal that utilizing\
    \ the recommended\napproach, the total accuracy of apple leaf classiﬁcation may\
    \ reach 99.01%. Furthermore,\nthe ﬁndings demonstrate that cedar rust is accurately\
    \ diagnosed, but one healthy person is\nmisclassiﬁed as scab and the other as\
    \ frogeye spots.\nFurthermore, the model parameters are cut by 89% compared to\
    \ the standard VGG16.\nAs a result, the classiﬁcation performance is raised by\
    \ 6.3%, and the computational com-\nplexity is cut to 0.56% of the innovative\
    \ model. Consequently, the DCNN model developed\nin this study provides a more\
    \ accurate and speedier way for recognizing apple leaf infec-\ntions [46]. Table\
    \ 4 compares the efﬁciency of several smart agricultural techniques.\nAgronomy\
    \ 2022, 12, 127\n15 of 21\nTable 4. Comparative analysis of different methods\
    \ based on smart agriculture.\nRef.\nTechnique Dataset\nDisease Classes\nAccuracy\n\
    Sensitivity\nPrecision\nRecall\nF1 Mea-\nsure\nG Mea-\nsure\n[44]\nDCNN\n[VGG\
    \ +\nAlexNet]\nplant\nvillage\ndataset\n5 (apple rust, scab\nblack rot, cherry\n\
    powdery mildew, and\npeach bacterial spots)\n97.8%\n97.6%\n97.6%\n-\n-\n97.6%\n\
    [46]\nDCNN\n[en-\nhanced\nVGG16]\n2446\napple\nleaves\n4 (apple leaf diseases\n\
    (Scab, frogeye spots,\ncedar rust and healthy)\n99.01%\n-\n99.02%\n99.02%\n99.02%\n\
    -\n[47]\nenhanced\nCNN\n[AlexNet]\nEnhanced\nPlant\nVillage\n52\n99.11%\n-\n99.49%\n\
    99.11%\n99.29%\n-\n[48]\nIoT\n[WSNs\n+ ML\nalgo-\nrithms]\nDifferent\ndata\n-\n\
    81.6%\n-\n-\n-\n-\n-\n[49]\nAlexNet\ndeep\nlearning\nalgo-\nrithm\n54,306\nimages\n\
    14 crop species and 26\ndiseases\n97.38%\n-\n97.42%\n97.37%\n97.36%\n[50]\nLeNet\n\
    DL tech-\nnique\n(X-\nFideo)\nPlantVillage\n3\n98.60%\n-\n98.82%\n97.18%\n96.89%\n\
    -\nFor the recognition and detection of olive diseases, such as peacock spot,\
    \ anthracnose,\nand canker, an improved convolutional neural network (CNN) dubbed\
    \ AlexNet was\nsuggested. Several innovations separate the proposed model from\
    \ others. It uses effective\nintelligent data preprocessing with a stable image\
    \ in each class, a transfer learning approach,\nand an extended and upgraded PlantVillage\
    \ dataset to work in more complicated situations.\nThe total accuracy of the suggested\
    \ technique is 99.11%, which is the best possible score.\nFurthermore, it possesses\
    \ precision, recall, and F1 measures of 99.49%, 99.11%, and 99.29%,\nrespectively.\
    \ Despite the fact that model training takes a long time, classiﬁcation during\n\
    testing takes only a few seconds on a CPU [47]. Citrus fruits, leaves, and stems\
    \ are included\nin the image dataset. The collection contains images of normal\
    \ and diseased citrus leaves\nand fruits, including greening, scab, blackspot,\
    \ canker, and melanosis. There are 759 images\nof normal and abnormal citrus leaves\
    \ and fruits in the data collection. The images had\na resolution of 5202 × 3465\
    \ (Mpix), and when scaled at 72 dpi, the width and height\nwere 256 × 256 pixels,\
    \ correspondingly. The contaminated images were divided into four\nvarious citrus\
    \ illnesses and left on their own. The entire process consists of four major\n\
    steps: (a) enhancing the dataset using Top-hat and then Gaussian functions; (b)\
    \ weighted\nsegmentation and segmentation of lesion through a saliency map, which\
    \ highlights the\ninfested area; (c) color, texture, and geometric feature extraction\
    \ from the diseased area;\nand (d) PCA, skewness, and entropy-based feature selection\
    \ and implementation.\nAgriculture management, water contamination, and air quality\
    \ analysis monitoring\nsystems were all investigated as part of the smart environment\
    \ monitoring (SEM) system.\nFigure 5 demonstrates that substantial investigation\
    \ of smart environment monitoring\nhas increased over the period in both cases,\
    \ speciﬁcally research involving the wireless\nsensor network and Internet of\
    \ Things along with research involving machine learning and\nInternet of Things\
    \ [41,51].\nAgronomy 2022, 12, 127\n16 of 21\nFigure 5. Research contribution\
    \ using IoT, WSN, and machine learning.\nImperfect network access, lack of a (or\
    \ no) power supply, and high framework costs\ncompared to an ordinary farmer’s\
    \ income were presented in a low-cost, energy-proﬁcient,\nprotected, dependable,\
    \ and heterogeneous three-layer approach for Internet of Things-\nbased smart\
    \ agriculture. IoT devices make up the ﬁrst layer, including IoT-based smart\n\
    agriculture monitoring like insect detection, theft detection, crop monitoring,\
    \ smart ir-\nrigation, smart poultry, food supply chain, and food preservation\
    \ monitoring systems.\nThe low-power LoRaWAN network connects the IoT devices\
    \ to the gateways. The next\nlayer is made up of local processing servers and\
    \ gateways that are connected with the\ngateways. The cloud layer, which uses\
    \ the publicly available FIWARE framework to offer a\nset of open-source API standards,\
    \ is the third layer. This study aimed to create diagnostic\ntechniques for packet\
    \ combination procedures at the fog node before they were sent over\nthe network\
    \ facility to cloud servers. This aims to decrease short IoT packet processing\n\
    overheads and optimize energy usage at the backbone, as billions of IoT devices\
    \ linked to\nfog nodes are projected to generate massive volumes of short IoT\
    \ packets [52].\nA Cuckoo Search Algorithm has been created, allowing water allocated\
    \ for farming\nunder all situations. Temperature, turbidity, pH, and moisture\
    \ were collected utilizing the\nInternet of Things (IoT) infrastructure outﬁtted\
    \ with wireless communication devices and\nsensors. ThingSpeak presented the sensor\
    \ data in the cloud system in this IoT platform.\nThe ThingSpeak data was utilized\
    \ in the suggested Cuckoo Search Algorithm, which\nidentiﬁed suitable yields for\
    \ a given soil [53]. Incorrect or late identiﬁcation can result in\noveruse or\
    \ underuse of chemicals, resulting in higher production costs and environmental\n\
    and health consequences. With varied lighting, angles, surfaces, noise, and high\
    \ resolutions,\n3651 real-time indication images of various apple infections were\
    \ manually collected.\nA subset of this dataset was labeled by experts, such as\
    \ cedar apple rust, scab, and normal\nleaves, and open-sourced for the Plant Pathology\
    \ Challenge to Kaggle community. We also\nused this data to train a standard CNN\
    \ (convolutional neural network), which obtained\n97% recognition on a held-out\
    \ test set and a maximum AUC value of 0.986. The project’s\ngoal was to keep adding\
    \ additional images to the pilot dataset from various perspectives,\nlighting,\
    \ and distances to create a bigger more complete labeled database by experts.\n\
    The dataset will contain pests and diseases, such as apple mites and aphids and\
    \ apple\nleaves comprising apple marssonina and alternaria leaf blotch, leaf spot,\
    \ frogeye, rot, cedar,\nand powdery mildew, ﬁre blight, and scab-labeled images.\n\
    Additionally, it will be photographed and remarked on fruit infected with apple\
    \ brown\nrot, bitter rot, or scab [54]. An Internet of Things-based cost-effective\
    \ monitoring system\nwas developed to address particular crop irrigation, soil\
    \ erosion, and irregular irrigation.\nAgronomy 2022, 12, 127\n17 of 21\nThe suggested\
    \ method entails building a distributed WSN (wireless sensor network), with\n\
    multiple sensor modules covering each part of the farm and transferring data to\
    \ a central\nserver. ML techniques will aid irrigation pattern forecasts based\
    \ on yields and climate\nenvironments. According to a comparison of several algorithms,\
    \ random forest regression\nhas a decent accuracy of 81.6%. However, due to harsh\
    \ weather conditions, the system\nis constrained in many ways: the forecast accuracy\
    \ is dependent on the setup’s correct\ninstallation, and the threat of wild animals\
    \ can harm the hardware setup [48]. Because\nhuman abilities and agricultural\
    \ gear are severely restricted compared to robot knowledge,\nrobotic systems in\
    \ agriculture can be highly beneﬁcial in achieving both high quality\nand quantity\
    \ goods. To integrate IoT systems with agricultural machinery, a new way\nof managing\
    \ control signals from the control system to the actuators is required. These\n\
    methods should increase economic viability while also lowering environmental impact\
    \ and\nenhancing food sustainability. It handles various agricultural tasks, including\
    \ moisture\nsensing, irrigation, crop monitoring, and insect and animal defense\
    \ [55]. Accordingly, a\nstate-of-the-art technologies-based accuracy comparison\
    \ is presented in Figure 6.\nFigure 6. Accuracy-based analysis of the different\
    \ state of the art techniques.\nWater monitoring is the most highly measured IoT\
    \ sub-vertical, followed by crop,\nsmart agriculture, animal, and irrigation monitoring.\
    \ All of these have the same proportion\nof peer-reviewed articles exploring the\
    \ possible uses of the Internet of Things. According\nto the ﬁndings, the most\
    \ important sensor data for measurement is 15.73% soil moisture,\n19.79% humidity,\
    \ and 24.87% ambient temperature. However, further sensor information,\nsuch as\
    \ soil pH and moisture, are also collected for IoT applications. Wi-Fi has the\
    \ highest\nclaimed use in farming and agriculture, with 30.27% and 21.10% use\
    \ of mobile tools, as\nshown in Figure 7. Other technologies like Bluetooth, WSN,\
    \ RFID, Raspberry Pi, ZigBee,\nLoRa, and GPRS are less popular in the agriculture\
    \ and farming industries. In the agri-\ncultural and farming business comparison,\
    \ the farming sector uses IoT for automation\nslower [42]. The Plant Server and\
    \ User View were created with phpMyAdmin to manage\nMySQL server management. The\
    \ F-RCNN-qualiﬁed model for anomaly detection had\n80% conﬁdence, while the technique\
    \ for the transfer of learning illness had 95.75% accu-\nAgronomy 2022, 12, 127\n\
    18 of 21\nracy. In reality, automatic image capturing software was deployed, and\
    \ the RCNN model\nsuccessfully recognized 91.67% of tomato plant illnesses [56].\n\
    Figure 7. An overview of 60 published articles on sensor and technology-based\
    \ data collection, as\nwell as a comparison of agriculture and farming utilizing\
    \ IoT.\n6. Conclusions and Future Directions\nThe implementation of sustainable\
    \ communication technologies and sensors based on\nIoT is necessary to increase\
    \ agricultural productivity. Wireless sensors, unmanned aerial\nvehicles, and\
    \ cloud computing have been shown to be practical tools for guaranteeing\nlong-term\
    \ agricultural productivity. Many processes throughout the production cycle,\n\
    including irrigation, soil sample and mapping, fertilizer or pest control, yield\
    \ monitoring,\nforecasting, and harvesting, may be automated using smart devices,\
    \ allowing for improved\ncrop quality and growth capacity. The key effective features,\
    \ important applications, IoT-\nbased smart agriculture technology and equipment,\
    \ and open barriers and possibilities\nwere all examined in this study. This research\
    \ will be expanded in the future to include\nsecurity and privacy issues in smart\
    \ agriculture using IoT methods.\nAuthor Contributions: All authors contributed\
    \ equally and scientiﬁcally. All authors have read and\nagreed to the published\
    \ version of the manuscript.\nFunding: No speciﬁc funding received for this research.\n\
    Acknowledgments: This research is supported by Artiﬁcial Intelligence & Data Analytics\
    \ Lab (AIDA)\nCCIS Prince Sultan University, Riyadh, Saudi Arabia. The authors\
    \ also would like to acknowl-\nedge the support of Prince Sultan University for\
    \ paying the Article Processing Charges (APC) of\nthis publication.\nConﬂicts\
    \ of Interest: There is no conﬂict of interest to declare.\nAgronomy 2022, 12,\
    \ 127\n19 of 21\nReferences\n1.\nMukhtar, H.; Khan, M.Z.; Khan, M.U.G.; Saba,\
    \ T.; Latif, R. Wheat Plant Counting Using UAV Images Based on Semi-supervised\n\
    Semantic Segmentation. In Proceedings of the 2021 1st International Conference\
    \ on Artiﬁcial Intelligence and Data Analytics\n(CAIDA), Riyadh, Saudi Arabia,\
    \ 6–7 April 2021; pp. 257–261.\n2.\nKhan, M.A.; Akram, T.; Sharif, M.; Alhaisoni,\
    \ M.; Saba, T.; Nawaz, N. A probabilistic segmentation and entropy-rank correlation-\n\
    based feature selection approach for the recognition of fruit diseases. EURASIP\
    \ J. Image Video Process. 2021, 2021, 14. [CrossRef]\n3.\nKhan, M.A.; Akram, T.;\
    \ Sharif, M.; Awais, M.; Javed, K.; Ali, H.; Saba, T. CCDF: Automatic system for\
    \ segmentation and\nrecognition of fruit crops diseases based on correlation coefﬁcient\
    \ and deep CNN features. Comput. Electron. Agric. 2018, 155,\n220–236. [CrossRef]\n\
    4.\nSafdar, A.; Khan, M.A.; Shah, J.H.; Sharif, M.; Saba, T.; Rehman, A.; Javed,\
    \ K.; Khan, J.A. Intelligent microscopic approach for\nidentiﬁcation and recognition\
    \ of citrus deformities. Microsc. Res. Tech. 2019, 82, 1542–1556. [CrossRef] [PubMed]\n\
    5.\nSinha, B.B.; Dhanalakshmi, R. Recent advancements and challenges of Internet\
    \ of Things in smart agriculture: A survey. Futur.\nGener. Comput. Syst. 2022,\
    \ 126, 169–184. [CrossRef]\n6.\nKolivand, H.; Fern, B.M.; Saba, T.; Rahim, M.S.M.;\
    \ Rehman, A. A New Leaf Venation Detection Technique for Plant Species\nClassiﬁcation.\
    \ Arab. J. Sci. Eng. 2019, 44, 3315–3327. [CrossRef]\n7.\nFriha, O.; Ferrag, M.A.;\
    \ Shu, L.; Maglaras, L.; Wang, X. Internet of Things for the Future of Smart Agriculture:\
    \ A Comprehensive\nSurvey of Emerging Technologies. IEEE/CAA J. Autom. Sin. 2021,\
    \ 8, 718–752. [CrossRef]\n8.\nKianat, J.; Khan, M.A.; Sharif, M.; Akram, T.; Rehman,\
    \ A.; Saba, T. A joint framework of feature reduction and robust feature\nselection\
    \ for cucumber leaf diseases recognition. Optik 2021, 240, 166566. [CrossRef]\n\
    9.\nSaba, T.; Rehman, A.; AlGhamdi, J.S. Weather forecasting based on hybrid neural\
    \ model. Appl. Water Sci. 2017, 7, 3869–3874.\n[CrossRef]\n10.\nSharma, Y.; Tyagi,\
    \ V.; Datta, P. IoT based smart agriculture monitoring system. Int. J. Innov.\
    \ Technol. Explor. Eng. 2020, 9, 325–328.\n11.\nFern, B.M.; Rahim, M.S.M.; Saba,\
    \ T.; Almazyad, A.S.; Rehman, A. Stratiﬁed classiﬁcation of plant species based\
    \ on venation state.\nBiomed. Res. 2017, 28, 5660–5663.\n12.\nSudarshan, K.; Hegde,\
    \ R.R.; Sudarshan, K.; Patil, S. Smart agriculture monitoring and protection system\
    \ using IoT. Perspect.\nCommun. Embed. Syst. Signal Process. PiCES 2019, 2, 308–310.\n\
    13.\nRajaram, K.; Sundareswaran, R. IoT Based Crop-Field Monitoring and Precise\
    \ Irrigation System Using Crop Water Requirement.\nIn International Conference\
    \ on Computational Intelligence in Data Science; Springer: Cham, Switzerland,\
    \ 2020; pp. 291–304.\n14.\nAbba, S.; Wadumi Namkusong, J.; Lee, J.A.; Liz Crespo,\
    \ M. Design and Performance Evaluation of a Low-Cost Autonomous\nSensor Interface\
    \ for a Smart IoT-Based Irrigation Monitoring and Control System. Sensors 2019,\
    \ 19, 3643. [CrossRef]\n15.\nKamaruddin, F.; Abd Malik, N.N.N.; Murad, N.A.; Latiff,\
    \ N.M.A.A.; Yusof, S.K.S.; Hamzah, S.A. IoT-based intelligent irrigation\nmanagement\
    \ and monitoring system using Arduino. Telkomnika 2019, 17, 2378–2388. [CrossRef]\n\
    16.\nAkshaya, M.; Kavipriya, P.R.; Yogapriya, M.; Karthikamani, R. IoT based fertilizer\
    \ injector for agricultural plants. Int. Res. J. Eng.\nTechnol. 2020, 7, 2950–2954.\n\
    17.\nReddy, H.S.; Hedge, G.; Chinnayan, D.R. IOT based leaf disease detection\
    \ and fertilizer recommendation. Int. J. Innov. Technol.\nExplor. Eng. 2019, 9,\
    \ 132–136.\n18.\nChavan, R.; Deoghare, A.; Dugar, R.; Karad, P. IoT Based Solution\
    \ for Grape Disease Prediction Using Convolutional Neural\nNetwork and Farm Monitoring.\
    \ Int. J. Sci. Res. Eng. Dev. 2019, 2, 494–500.\n19.\nBhoi, S.K.; Jena, K.K.;\
    \ Panda, S.K.; Long, H.V.; Kumar, R.; Subbulakshmi, P.; Bin Jebreen, H. An Internet\
    \ of Things assisted\nUnmanned Aerial Vehicle based artiﬁcial intelligence model\
    \ for rice pest detection. Microprocess. Microsyst. 2021, 80, 103607.\n[CrossRef]\n\
    20.\nGanesh, P.; Tamilselvi, K.; Karthi, P. Crop prediction by monitoring temperature\
    \ and rainfall using decision tree with IoT and\ncloud-based system. Proceedings\
    \ of the International Conference on Computational Intelligence and Data Science,\
    \ Gurugram, India, 7–8\nApril 2018, 1–9.\n21.\nTolentino, L.K. Yield evaluation\
    \ of Brassica rapa, Lactuca sativa, and Brassica integrifolia using image processing\
    \ in an IoT-based\naquaponics with temperature-controlled greenhouse. AGRIVITA\
    \ J. Agric. Sci. 2020, 42, 393–410. [CrossRef]\n22.\nVisconti, P.; Giannoccaro,\
    \ N.I.; de Fazio, R.; Strazzella, S.; Cafagna, D. IoT-oriented software platform\
    \ applied to sensors-based\nfarming facility with smartphone farmer app. Bull.\
    \ Electr. Eng. Inform. 2020, 9, 1095–1105. [CrossRef]\n23.\nKodali, R.K.; Rajanarayanan,\
    \ S.C.; Boppana, L. IoT based Weather Monitoring and Notiﬁcation System for Greenhouses.\n\
    In Proceedings of the 2019 11th International Conference on Advanced Computing\
    \ (ICoAC), Chennai, India, 18–20 December\n2019; pp. 342–345.\n24.\nArifﬁn, M.A.M.;\
    \ Ramli, M.I.; Amin, M.N.M.; Ismail, M.; Zainol, Z.; Ahmad, N.D.; Jamil, N. Automatic\
    \ Climate Control\nfor Mushroom Cultivation Using IoT Approach. In Proceedings\
    \ of the 2020 IEEE 10th International Conference on System\nEngineering and Technology\
    \ (ICSET), Shah Alam, Malaysia, 9 November 2020; pp. 123–128.\n25.\nNagamani,\
    \ P.; Sundari Jahnavi, M.; Govind Raju, N.N.; Bhanu Shankar, A.; Govind Reddy,\
    \ K.S. Smart Hydroponics Water\nMonitoring Using IoT. J. Emerg. Technol. Innov.\
    \ Res. 2019, 6, 114–120.\n26.\nJayasuriya, Y.P.; Elvitigala, C.S.; Wamakulasooriya,\
    \ K.; Sudantha, B. Low Cost and IoT Based Greenhouse with Climate Monitoring\n\
    and Controlling System for Tropical Countries. In Proceedings of the 2018 International\
    \ Conference on System Science and\nEngineering (ICSSE), New Taipei, Taiwan, 28–30\
    \ June 2018; pp. 1–6.\nAgronomy 2022, 12, 127\n20 of 21\n27.\nBoursianis, A.D.;\
    \ Papadopoulou, M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.; Barouchas, P.;\
    \ Salahas, G.; Karagiannidis, G.;\nWan, S.; Goudos, S.K. Internet of Things (IoT)\
    \ and Agricultural Unmanned Aerial Vehicles (UAVs) in smart farming: A\ncomprehensive\
    \ review. Internet Things 2020, 100187. [CrossRef]\n28.\nOdesola, D.F.; Olivarez,\
    \ R.; Ramos, A.; Malolos, D.; Patrick, V.; Balba, N.P. Internet of things (IoT)\
    \ based home automated weather\nmonitoring system. LPU-Laguna J. Eng. Comput.\
    \ Stud. 2019, 4, 1–10.\n29.\nFu, L.; Gao, F.; Wu, J.; Li, R.; Karkee, M.; Zhang,\
    \ Q. Application of consumer RGB-D cameras for fruit detection and localization\n\
    in ﬁeld: A critical review. Comput. Electron. Agric. 2020, 177, 105687. [CrossRef]\n\
    30.\nDutta, J.; Dutta, J.; Gogoi, S. Smart farming: An opportunity for efﬁcient\
    \ monitoring and detection of pests and diseases. J.\nEntomol. Zool. Stud. 2020,\
    \ 8, 2352–2359.\n31.\nMaslekar, N.V.; Kulkarni, K.P.; Chakravarthy, A.K. Application\
    \ of Unmanned Aerial Vehicles (UAVs) for Pest Surveillance,\nMonitoring and Management.\
    \ In Innovative Pest Management Approaches for the 21st Century; Springer: Berlin,\
    \ Germany, 2020; pp.\n27–45.\n32.\nGao, D.; Sun, Q.; Hu, B.; Zhang, S. A Framework\
    \ for Agricultural Pest and Disease Monitoring Based on Internet-of-Things and\n\
    Unmanned Aerial Vehicles. Sensors 2020, 20, 1487. [CrossRef]\n33.\nTang, Y.; Chen,\
    \ M.; Wang, C.; Luo, L.; Li, J.; Lian, G.; Zou, X. Recognition and Localization\
    \ Methods for Vision-Based Fruit Picking\nRobots: A Review. Front. Plant Sci.\
    \ 2020, 11, 510. [CrossRef] [PubMed]\n34.\nKang, H.; Zhou, H.; Wang, X.; Chen,\
    \ C. Real-Time Fruit Recognition and Grasping Estimation for Robotic Apple Harvesting.\n\
    Sensors 2020, 20, 5670. [CrossRef]\n35.\nOgorodnikova, O.M.; Ali, W. Method of\
    \ ripe tomato detecting for a harvesting robot. In AIP Conference Proceedings;\
    \ AIP Publishing\nLLC: Melville, NY, USA, 2019.\n36.\nYeshmukhametov, A.; Al Khaleel,\
    \ L.; Koganezawa, K.; Yamamoto, Y.; Amirgaliyev, Y.; Buribayev, Z. Designing of\
    \ CNC Based\nAgricultural Robot with a Novel Tomato Harvesting Continuum Manipulator\
    \ Tool. Int. J. Mech. Eng. Robot. Res. 2020, 9, 876–881.\n[CrossRef]\n37.\nZhang,\
    \ W.; Gong, L.; Chen, S.; Wang, W.; Miao, Z.; Liu, C. Autonomous Identiﬁcation\
    \ and Positioning of Trucks during\nCollaborative Forage Harvesting. Sensors 2021,\
    \ 21, 1166. [CrossRef]\n38.\nLi, B.; Zhou, A.; Yang, C.; Zheng, S. The Design\
    \ and Realization of fruit Harvesting Robot Based on IOT. In Proceedings of the\n\
    2016 International Conference on Computer Engineering, Information Science & Application\
    \ Technology (ICCIA 2016); Atlantis Press:\nAmstelkade, AV, USA, 2016.\n39.\n\
    Rahaman, S.H.; Biswas, S. Advantages of Internet of Things (IoT) and It’s Applications\
    \ in Smart Agriculture System. Int. Res. J.\nAdv. Sci. Hub 2020, 2, 4–10. [CrossRef]\n\
    40.\nMishra, D.; Natalizio, E. A survey on cellular-connected UAVs: Design challenges,\
    \ enabling 5G/B5G innovations, and experimen-\ntal advancements. Comput. Netw.\
    \ 2020, 182, 107451. [CrossRef]\n41.\nUllo, S.L.; Sinha, G.R. Advances in Smart\
    \ Environment Monitoring Systems Using IoT and Sensors. Sensors 2020, 20, 3113.\n\
    [CrossRef]\n42.\nMadushanki, R.; Wirasagoda, H.; Halgamuge, M. Adoption of the\
    \ Internet of Things (IoT) in agriculture and smart farming\ntowards urban greening:\
    \ A review. Int. J. Adv. Comput. Sci. Appl. (IJACSA) 2019, 1. [CrossRef]\n43.\n\
    Vikranth, K. An Implementation of IoT and Data Analytics in Smart Agricultural\
    \ System—A Systematic Literature Review. Int. J.\nManag. Technol. Soc. Sci. 2021,\
    \ 6, 41–70. [CrossRef]\n44.\nKhan, M.A.; Akram, T.; Sharif, M.; Saba, T. Fruits\
    \ diseases classiﬁcation: Exploiting a hierarchical framework for deep features\n\
    fusion and selection. Multimed. Tools Appl. 2020, 79, 25763–25783. [CrossRef]\n\
    45.\nSingh, D.; Jain, N.; Jain, P.; Kayal, P.; Kumawat, S.; Batra, N. PlantDoc:\
    \ A dataset for visual plant disease detection. In Proceedings\nof the 7th ACM\
    \ IKDD CoDS and 25th COMAD, Hyderabad, India, 5–7 January 2020; pp. 249–253.\n\
    46.\nYan, Q.; Yang, B.; Wang, W.; Wang, B.; Chen, P.; Zhang, J. Apple Leaf Diseases\
    \ Recognition Based on an Improved Convolutional\nNeural Network. Sensors 2020,\
    \ 20, 3535. [CrossRef]\n47.\nAlruwaili, M.; Alanazi, S.; Abd, S.; Shehab, A. An\
    \ Efﬁcient Deep Learning Model for Olive Diseases Detection. Int. J. Adv. Comput.\n\
    Sci. Appl. 2019, 10, 486–492. [CrossRef]\n48.\nVij, A.; Vijendra, S.; Jain, A.;\
    \ Bajaj, S.; Bassi, A.; Sharma, A. IoT and Machine Learning Approaches for Automation\
    \ of Farm\nIrrigation System. Procedia Comput. Sci. 2020, 167, 1250–1257. [CrossRef]\n\
    49.\nMohanty, S.P.; Hughes, D.P.; Salathé, M. Using Deep Learning for Image-Based\
    \ Plant Disease Detection. Front. Plant. Sci. 2016,\n7, 1419. [CrossRef] [PubMed]\n\
    50.\nCruz, A.C.; Luvisi, A.; De Bellis, L.; Ampatzidis, Y. X-FIDO: An Effective\
    \ Application for Detecting Olive Quick Decline Syndrome\nwith Deep Learning and\
    \ Data Fusion. Front. Plant. Sci. 2017, 8, 1741. [CrossRef] [PubMed]\n51.\nRauf,\
    \ H.T.; Saleem, B.A.; Lali, M.I.U.; Khan, M.A.; Sharif, M.; Bukhari, S.A.C. A\
    \ citrus fruits and leaves dataset for detection and\nclassiﬁcation of citrus\
    \ diseases through machine learning. Data Brief. 2019, 26, 104340. [CrossRef]\n\
    52.\nKuaban, G.S.; Czekalski, P.; Molua, E.L.; Grochla, K. An Architectural Framework\
    \ Proposal for IoT Driven Agriculture; Springer:\nBerlin, Germany, 2019; pp. 18–33.\n\
    53.\nPathak, A.; Uddin, M.A.; Abedin, J.; Andersson, K.; Mustafa, R.; Hossain,\
    \ M.S. IoT based Smart System to Support Agricultural\nParameters: A Case Study.\
    \ Procedia Comput. Sci. 2019, 155, 648–653. [CrossRef]\n54.\nThapa, R.; Snavely,\
    \ N.; Belongie, S.; Khan, A. The plant pathology 2020 challenge dataset to classify\
    \ foliar disease of apples. arXiv\n2020, arXiv:2004.11958.\nAgronomy 2022, 12,\
    \ 127\n21 of 21\n55.\nRomeo, L.; Petitti, A.; Marani, R.; Milella, A. Internet\
    \ of Robotic Things in Smart Domains: Applications and Challenges. Sensors\n2020,\
    \ 20, 3355. [CrossRef] [PubMed]\n56.\nSangeetha, S.K.B. Comparison of Crop Disease\
    \ Detection Methods-An intensive analysis. Psychol. Educ. J. 2021, 58, 10540–10546.\n"
  inline_citation: (Rehman, Saba, Kashif, Fati, Bahaj, & Chaudhry, 2022)
  journal: Agronomy (Basel)
  key_findings: 'IoT technologies have the potential to revolutionize agriculture
    by improving efficiency, cost-effectiveness, and environmental sustainability.


    Data collection to cloud automation and real-time processing are critical for
    enabling IoT applications in agriculture.


    Hyperspectral imaging and thermal sensing are promising technologies for non-invasive
    plant stress detection.'
  key_findings_evaluation:
    extract_1: IoT technologies have the potential to revolutionize agriculture by
      improving efficiency, cost-effectiveness, and environmental sustainability.
    extract_2: Data collection to cloud automation and real-time processing are critical
      for enabling IoT applications in agriculture.
    limitations: The paper does not provide specific examples or case studies to support
      these findings.
    relevance_score: 0.7
  limitations: '>'
  main_objective: To investigate the current state and potential of IoT technologies
    in smart agriculture, with a specific focus on "data collection to cloud" automation
    and real-time processing for non-invasive plant stress detection using hyperspectral
    imaging and thermal sensing.
  pdf_link: https://www.mdpi.com/2073-4395/12/1/127/pdf?version=1642508054
  publication_year: 2022
  relevance_evaluation:
    extract_1: null
    extract_2: null
    limitations: The paper does not provide a specific, detailed analysis of the use
      of hyperspectral imaging and thermal sensing for non-invasive plant stress detection
      in IoT-based smart agriculture systems.
    relevance_score: 0.9
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: IoT technologies, sensors, communication technologies
  title: A Revisit of Internet of Things Technologies for Monitoring and Control Strategies
    in Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.cirp.2019.05.010
  analysis: '>'
  authors:
  - Tetsuo Tomiyama
  - Eric Lutters
  - Rainer Stark
  - Michael Abramovici
  citation_count: 107
  explanation: 'The paper focuses on the relevance of advanced sensing technologies,
    such as hyperspectral imaging and thermal sensing, for non-invasive plant stress
    detection in the context of automated systems for real-time irrigation management.


    **Extract 1**: "Explore the use of advanced sensing technologies, such as hyperspectral
    imaging and thermal sensing, for non-invasive plant stress detection" is directly
    relevant to the research described in the paper.


    **Extract 2**: "Develop capabilities for seamless integration of end-to-end automated
    irrigation management system to achieve fully autonomous, scalable irrigation
    management" is highly relevant as it addresses the integration of advanced sensing
    technologies into automated irrigation systems.


    These extracts highlight the importance of non-invasive plant stress detection
    and automated irrigation management in the context of real-time irrigation management
    systems, which are the focus of the paper.'
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Smart products 3. Enabling technologies
    for smart products 4. Development methods and tools for smart products 5. Research
    challenges for smart product development 6. Discussions and future research directions
    7. Summary and conclusions Acknowledgments References Show full outline Cited
    by (111) Figures (19) Show 13 more figures Tables (4) Table 1 Table 2 Table 3
    Table 4 CIRP Annals Volume 68, Issue 2, 2019, Pages 727-750 Development capabilities
    for smart products Author links open overlay panel Tetsuo Tomiyama (1) a, Eric
    Lutters (1) b, Rainer Stark (2) c, Michael Abramovici (2) d Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.cirp.2019.05.010 Get rights and content Abstract
    Smart products supported by new step-changing technologies, such as Internet of
    Things and artificial intelligence, are now emerging in the market. Smart products
    are cyber physical systems with services through Internet connection. For example,
    smart vehicles equipped with advanced embedded intelligence are connected to other
    vehicles, people, and environment, and offer innovative data-driven services.
    Since smart products are software-intensive, data-driven, and service-conscious,
    their development clearly needs new capabilities underpinned by advanced tools,
    methods, and models. This paper reviews the status and trends of these emerging
    development technologies such as model-based systems engineering and digital twin.
    Previous article in issue Next article in issue Keywords DesignProduct developmentModel-based
    systems engineering 1. Introduction With such features as intelligent, connected,
    and autonomous, new types of products are appearing in the market, qualitatively
    differentiating themselves from previous product generations. In this keynote
    paper, these products are called ‘smart products’ [3], [12], [34], [181]. Although
    ‘smart’ is used as a synonym for almost any concept to mean ‘intelligent’, ‘clever’,
    ‘nifty’ or even just ‘advanced’, the ‘smart product’ concept includes much wider
    connotations. This means that it is insufficient just to discuss their development
    only from the viewpoint of intelligence. This paper is an attempt to sharpen the
    smart product concept and to identify issues, challenges and research needs associated
    with the technologies, methods, tools, and models for the smart product development.
    Smart products exhibit several distinctive functional capabilities and technical
    features that differentiate them from conventional products [3], [12] (see Section
    2.2). Some of these are listed below. • Intelligence: Intelligence is critical
    for smart products, as this forms the basis for other (secondary) features. For
    example, when smart products interact with human users, their ‘intelligence’ features
    play the key role. In contrast, obviously intelligence is indispensable to autonomy
    of smart products. • Connectedness: Connectedness addresses the connectivity of
    smart products with other products, humans, data and services through networks.
    This also implies potential threat of cyber-attacks and necessity of private data
    protection. • Service integration: Intelligence and connectedness features are
    indispensable for smart products to create new ‘services’. An example of new types
    of services enabled by intelligence and connectedness is mobility service with
    autonomous driving vehicles. • Data driven: Smart products connected over the
    network form a platform to collect data and information through their sensing
    capabilities. The collected data can be processed with data analytics techniques
    [18], [154] for both technical and commercial purposes. For instance, the data
    collected through the network could be used to make lifecycle-related decisions
    such as maintenance, while the latter can be used to extract user preferences
    and profiles that are commercially important. Fig. 1 depicts the evolution of
    the smart product concept, starting from just mechatronics products, intelligent
    mechatronics systems, Cyber-Physical Systems (CPS) [19], [129], [169], [170],
    and then to smart products. Mechatronics products rely on (mostly feedback) control
    of the mechanical system using electronics. However, as software executes control,
    sophisticated control beyond simple feedback control is possible. This leads to
    so-called intelligent mechatronics products. CPS extends intelligent mechatronics
    products with cyber communication with other CPS or any agents on the Internet.
    Smart products are defined as ‘CPS, which additionally use and integrate Internet-based
    services in order to perform a required functionality’ [3]. Download : Download
    high-res image (278KB) Download : Download full-size image Fig. 1. Smart products
    as CPS integrating internet-based services. According to this definition, smart
    products are also smart product-service systems as an extension of PSS (Product-Service
    System) [28], [86], [231]. Therefore, smart products are part of a complex business
    ecosystem (see Fig. 2) including different stakeholders (e.g., users, customers,
    manufacturers, service providers), physical environment (enterprise, surrounding
    physical infrastructure) and other connected product devices. Download : Download
    high-res image (184KB) Download : Download full-size image Fig. 2. The ecosystem
    of smart products. This ecosystem supports two types of value generation mechanisms.
    The first one is traditional but explicit value for users generated by user experiences
    [92], [172]. ISO 9241-210 defines user experience as ‘a person’s perceptions and
    responses that result from the use or anticipated use of a product, system or
    service’ [104]. Through localised or personal modification of the product, it
    is also expected to improve its fit to the user or local community. For example,
    a smart phone can easily accommodate the needs and preferences of an individual
    user for superb experiences that can create value for the user. The concept of
    (user) experiences of (smart) products is strongly advocated by the human–machine
    interface community [92]. In the context of product design, Dassault Systèmes
    emphasises ‘experiences’ in their tool set [89]. The second type of value creation
    of this ecosystem is business value generated by collecting data about numerous
    events that take place surrounding smart products. The data will be collected
    through distributed sensors and processed to extract further information. This
    idea shows the relevance of the IoT (Internet of Things) technologies [82], data
    mining techniques [18], and AI (Artificial Intelligence) technologies represented
    by deep learning [39], [128], [191]. The data will also describe how these smart
    products are used and potentially bring up with enormous business opportunities
    (i.e., business value), because they illustrate the life style of users. Fig.
    3 illustrates the data-driven value generation mechanism of the ecosystem. It
    suggests that developing smart products is not just about technically developing
    physical products but about covering the entire scope of the ecosystem including
    services, mechanisms to collect, process and generate data regarding the use of
    the products and user experiences. The development should also take business models
    and objectives into consideration. Download : Download high-res image (73KB) Download
    : Download full-size image Fig. 3. Data-driven value generation of smart products.
    This keynote aims at establishing an overarching concept of smart products as
    well as reviewing technologies needed to develop smart products. Following this
    introduction, Chapter 2 will briefly overview various types of smart products
    and then list up their features such as characteristics and architecture. Chapter
    3 will overview enabling product technologies that are fundamental to build smart
    products. In contrast, Chapter 4 will examine methods, technologies and supporting
    tools to develop smart products and their services. Existing technologies might
    not be suitable for coping with the many new features of smart products related
    to, e.g., intelligence. Therefore, Chapter 5 will look into some research challenges
    of smart product development, including MBSE (Model-Based Systems Engineering)
    [262], [83]. Chapter 6 will summarise the discussion and identify future research
    directions. Chapter 7 concludes the paper. 2. Smart products 2.1. Examples of
    smart products As the number of smart products is growing rapidly, they are becoming
    ubiquitous [157]. In order to better understand the features and the challenges
    of this new product type the following section describes several examples of smart
    products: • Smart phones (see Section 2.1.1) • Smart speakers (see Section 2.1.2)
    • Smart vehicles (see Section 2.1.3) • Smart robots (see Section 2.1.4) • Smart
    factory (see Section 2.1.5) Further examples for single smart products are smart
    lights [282], smart thermostats [283] and smart meters [113]. An example of a
    smart product system is a smart home [43], smart grids [29], [69], [83], [242],
    and for a complex smart system of systems a smart city [237], [294]. 2.1.1. Smart
    phones In 2007, Apple introduced its first smart phone ‘iPhone’. Originally, this
    was marketed as a combined product of phone, iPod (Apple’s MP3 music player),
    PDA (Personal Digital Assistant) and camera, but without GPS, Apps or high-speed
    connectivity [238]. At that stage, it was merely a sum of these capabilities without
    integration. However, the 2008 model (iPhone 3G) made a step change by introducing
    the concept of Apps with possibility of intertwining these system capabilities,
    together with the introduction of iOS App Store. The system components of smart
    phones can be clustered as in Table 1. Table 1. System components of smartphones.
    Categories Components Mechanical hardware Touchscreen that disinguishes ''smart
    phone'' from other phones, vibrator Electronics hardware CPU, RAM, flash memory,
    speaker, microphone, battery Communication hardware Mobile communications, Wifi,
    USB, Bluetooth Sensors Cameras, accelerometer, GPS, light sensor, touch sensor
    Software iOS, Android, Apps Based on these capabilities, Apple created an ecosystem
    of delivering products and services including [51]: • iTunes Music Store (music,
    videos, movies) • App Store (applications) • Apple Music (music subscriptions)
    • iCloud (cloud storage) • Apple Pay According to Fig. 1, iPhone as hardware is
    a CPS. Through services made available with the Internet connectivity, various
    Apps fulfil user needs purposefully [238] which converted iPhone into a true smart
    product. An example of such services is Google’s traffic information on the Google
    Maps app when it is used as a navigation system [279]. Using GPS and other technologies,
    the phone determines its location. In a certain periodic interval, this information
    is sent to the central server, from which the speed of the vehicle is calculated.
    Information from a large number of phones using the application will be compiled
    to determine the average speed of the traffic on a certain road. This will be
    fed back to the map information with different colouring. For this smartness of
    smart phones, Internet connectivity and collecting information from many anonymous
    users play a crucial role. The operating system (iOS) as well as application software
    is automatically updated through the Internet connection. Many applications take
    advantage of being connected to (cloud) servers, allowing users to access a variety
    of information as well as computing capabilities. In addition, it is important
    to note that the way smart phone applications are organised allows a high degree
    of individualisation in the choice of applications. 2.1.2. Smart speakers So-called
    smart speakers [38] can exhibit highly sophisticated interaction capabilities
    with users, which allows them not only to play or control music but also function
    as an interactive bi-directional interface for information search services. The
    central function as a ‘voice input/control device’ is attained by advanced technologies
    for voice recognition and natural language understanding based on deep learning
    algorithms [128] made available through the Internet connection. Although obviously
    the speaker itself is no way smart, the smart speaker system as a system is able
    to learn about the user, her/his preferences, and behavioural characteristics.
    The use history and user preferences obtained from these communications are valuable
    business data about user’s life style. The smart speaker might be equipped with
    additional sensors (e.g., for temperature and brightness of the room), which will
    enable collection of characteristics of user activities, user profiles, and other
    types of business information. Therefore, smart speakers act as IoT sensing devices
    to collect information for the data-driven business ecosystem. 2.1.3. Smart vehicles
    The automotive industry is now undergoing revolutionary transformations [126].
    Sometimes captured as CASE (Connectivity, Autonomous, Shared & Services, Electric),
    these transformations include: • Drive train change (more electrification) • Autonomous
    driving • Connectedness • Shared (servicification such as MaaS (Mobility as a
    Service)) • Yearly updating The drive train technology is shifting towards more
    electrification for a number of reasons, including sustainability which is becoming
    one of the top priorities of the industry (e.g., [149]). However, it has to be
    noted that autonomous driving vehicles for sharing services need to be electric
    driven for the sake of easy and safe refuelling. Toyota Prius, the first hybrid
    electric automobile, launched in 1997, quickly became one of the bestselling cars
    in the world [285]. It aimed at improving fuel efficiency by running the ICE (Internal
    Combustion Engine) at the best fuel consumption range, while keeping the emission
    as clean as possible. All-electric vehicles (including lithium ion battery-based
    and fuel cell-based) with comparable performance to ICE-based vehicles did not
    appear until 2008 when Tesla Roadster was launched followed by Mitsubishi iMiEV
    in 2009 [281]. Tesla S introduced in 2012 was not only a luxury all-electric vehicle
    but also equipped with a number of features of smart vehicles including [284]:
    • AWD (All Wheel Drive) with dual-motors • Supercharging for 60–100KWh lithium
    ion battery • Autopilot (semi-autonomous driving) using radar and cameras • Connectivity
    to the Internet • Automatic software upgrading Autonomous driving is a technology
    currently looked into by a wide range of players from car manufacturers (such
    as GM, Audi, Tesla, and Toyota) to suppliers (such as Bosch, Denso and NVIDIA)
    to service providers (such as Waymo and Uber). While early efforts were mostly
    guided vehicles, truly autonomous driving cars controlled by visual information
    captured by stereo cameras were first developed by MITI’s Mechanical Engineering
    Laboratory in Japan in 1977 [290]. The group at Carnegie Mellon University’s NAVLAB
    funded by DARPA developed an autonomous van in the late 1980s and succeeded in
    trans-continental drive in 1995 [230]. This effort eventually led to Alphabet’s
    (Waymo’s) driverless vehicle that surprised the world [280]. Technological architectures
    for autonomous vehicles are proposed in Refs. [16], [138], [226]. Besides sensing
    technologies (such as laser-, vision-, ultra-sonic-, radar-based range scanning
    and vision recognition), advanced navigation based on SLAM (Simultaneous Localisation
    and Mapping) and AI-based recognition were breakthrough technologies. Internet
    based services in transportation opened a possibility of new service called MaaS
    (Mobility as a Service) [286]. This takes a form of a range of mobility services
    including share ride, quick car rental, subscription-based car rental, and non-traditional
    taxi service. Replacing traditional public transportation vehicles with autonomous
    vehicles would increase convenience as well as efficiency in less-populated remote
    areas and aging societies. Already a number of companies entered into the market
    in various cities on the globe. Autonomous driving is considered a next chapter
    for this type of MaaS. Internet connectivity enabled also ‘yearly updating’, which
    applies more regular software updates for the operating system and applications
    in a similar way as smart phones. Traditionally, IT equipment (e.g., PCs and handheld
    devices) and industrial machines have been maintained by upgrading the software
    in order: • to improve functions of the software, • to fix bugs, and more recently
    • to tackle cyber security threats. However, this was never the case for home
    appliances and cars, although future smart vehicles will become software intensive
    just like many other mechatronic products and CPSs. This trend of frequent updating
    will become dominant in case of more electric, autonomous, shared and connected
    vehicle to take advantage of their full capabilities [126]. Although it is not
    yet clearly advocated, besides those five trends, individualisation is also considered
    another advantage of smart vehicles. The Intelligent software-based control system
    can be flexible enough to be individualised according to the preferences of individual
    owners (see Section 2.2.10). Not only drive train technology, but overall car
    technologies are shifting towards ‘more electric’. Currently, a typical modern
    high-end passenger car may be equipped with more than 100 ECUs (Electronic Control
    Units) for, e.g., engine control and break control, but it is expected not to
    increase drastically due to the necessity of managing complexity and wiring issues
    [261]. The size of control software has significantly increased, however. Nowadays,
    a high-end passenger car is running more than 150 million lines of code [37].
    Consequently, the control software architecture is moving from a ‘federated architecture’
    to an ‘integrated one” [60]; for example, AUTOSAR (AUTOmotive Open Software Architecture)
    is jointly developed by a consortium of various industrial partners to allow such
    strategy [26]. In response to this trend, Volkswagen recently announced the shift
    towards electric vehicles. The core is the newly developed architecture called
    MEB (Modular Electrification Toolkit) [260]. The number of ECU will be significantly
    reduced to deal with the complexity issues associated with the number of ECUs
    and programme size. Fig. 4 illustrates how technological elements surrounding
    smart vehicles underpin the main trends (electrification, autonomous driving,
    connected, servicification, and yearly upgrading) and how these trends lead to
    future new service goals. (Fig. 4 depicts only four examples but there can be
    many more.) For example, MaaS will be supported by autonomous driving, connectedness,
    and servicification. Based on continuous monitoring using onboard sensors that
    collect data to be analysed using data analytics, continuous maintenance [190]
    will become feasible to monitor, diagnose and repair the vehicle proactively.
    Similarly, continuously collected operational data of the vehicle as well as the
    driver can be used to determine the option and premium of the insurance. This
    will lead to a customised insurance policy for individual drivers. Download :
    Download high-res image (202KB) Download : Download full-size image Fig. 4. New
    smart services of smart vehicles. 2.1.4. Smart robots Robots [210] have made rapid
    proliferation in manufacturing industry to replace human labour in material handling,
    assembling, welding, and inspection. Early robots were mostly equipped with anthropomorphic
    arms of up to six degrees of freedom. These are typically used for highly dumb,
    dirty, dangerous, and demanding tasks in which pre-programmed repetitive behaviours
    without locomotion capabilities suffice. Robots are also finding applications
    in logistics, construction, maintenance, and many other service industries, as
    well as household. Advances in robotic technologies have made it possible to build
    robots with such features as redundant DoF arms, dexterous robot hands, and biped
    locomotion capabilities. The invention of Honda’s Asimo [192] was epoch-making
    in that this biped humanoid robot opened up possibilities for applications of
    walking robots that are not bound to wheels. However, robots are not necessarily
    manipulator-based. One can define a robot as ‘a machine capable of carrying out
    a complex series of actions automatically, especially one programmable by a computer’
    (Oxford English Dictionary). Therefore, some robots are not meant for mechanical
    automation. For example, drones or UAVs (Unmanned Aerial Vehicles) have been put
    to practical use for picture/film shooting, surveillance, inspection, and light
    load transport [74]. The concepts of android and social robot focus on interactions
    with humans, so the appearance and conversational capability with humans are more
    crucial [75]. In this context, famous Asimov’s three laws of robotics can be given
    contemporary meanings [24]. Recently, robotic applications are increasingly requiring
    intelligence for various purposes including: • task planning • navigation (for
    mobile robots) • control and planning of locomotion and manipulation • communication
    with other agents (human, robot, machines, and environment). These capabilities
    will be executed using a variety of sensors to capture information from objects
    and the environment. For example, a vision-based part assembling robot should
    be able to locate and pick randomly placed parts. This robot will be able to deal
    with abnormality of the part it picked up by comparing the image on the camera
    and the shape information obtained from CAD. An ‘intelligent caretaking robot’
    will be taking physical care of elderly people and patients. It can also take
    care of them mentally by conversing with them. An intelligent robot can be regarded
    as a mechanism to deliver such intelligent functions through various end-effectors
    and locomotion capabilities. From the viewpoint of smart products, this is the
    point where robots are interfacing between the physical world and the cyber world.
    2.1.5. Smart factory The ‘smart factory’ [162] (Fig. 5) is an example of a complex
    smart product system within the shop floor. Fig. 5 indicates that a smart factory
    consists of various elements including machine tools, robots, material handling
    systems (such as AGVs and conveyors), controllers, and mechanisms to collect,
    process and feedback information. These individual elements need to be ‘smart’,
    too. For example, a smart machine tool should be equipped with a variety of sensors
    to capture its status and performance data. Download : Download high-res image
    (282KB) Download : Download full-size image Fig. 5. Elements of the smart factory.
    The smart factory is direct implementation of the so-called Industry 4.0 concept,
    which is a data-driven or -centric operational principle of industrial systems
    [106]. The smart factory is based on CPS or IoT advocating ‘connectedness’ starting
    from low level sensors, barcodes, and RFIDs [151], [269], [302] embedded everywhere
    in the factory including raw materials, workpieces, and components up to machines,
    material handling systems, and robots [107], [127], [132], [299]. Robots can be
    integrated in the process with human workers in an assistive manner [56]. Information
    about all processes and every event is generated and stored, contributing to the
    realisation of a ‘smart enterprise’ [97], [114], [137], [187], [264]. This means
    that such data will be analysed with data analytics methods for the purposes of
    performance management, scheduling, machining quality control, and maintenance
    of the machine tool [135], [208], [293]. This bi-directional data flow to and
    from the machine tool underpins the smartness of the machine tool in the smart
    factory. Industrial Internet [100] advocates similar principles and concepts.
    A Reference Architecture Model for smart enterprises (RAMI) has been started as
    part of Platform Industry 4.0 in Germany [185]. The past efforts within the research
    community, such as holonic [1], [136], [249], [251], [252], bionic [243] and fractal
    manufacturing systems [270], all pursued data intensive, small-lot, customisable,
    flexible, responsive, and agile manufacturing [228]. In this context, these past
    efforts laid foundation for smart factory. In Ref. [162], the concepts and the
    architecture of smart factories are analysed. The advantages of the smart factory
    are multi-fold, which include: • Increased data generation that can lead to performance
    improvements through data analytics • Agile responsivity to failures and abnormality
    • Increased changeability and flexible reconfigurability for smaller production
    volume (eventually one-off). • Improved traceability of components and quality.
    2.2. Features of smart products Smart products possess some functional capabilities
    in common that distinguish themselves from conventional products. These include
    intelligent interactions with human users, autonomy, dependability, and individualisation.
    These functional capabilities result from various technical features such as intelligence
    and resilience backed up by connectedness, sensing capabilities, and reconfigurability.
    Below, these functional capabilities and technical features are discussed in detail.
    2.2.1. Intelligence Although ‘intelligence’ is very casually discussed, no clear
    definition does exist because the notion is used in many fields. However, the
    intelligence feature is one of the most distinctive features of smart products
    and includes such capabilities as recognition (voice, vision, language, etc.),
    reasoning, and learning (or improving). In the context of smart products, clearly
    intelligence has several meanings. The first is intelligent interactions with
    human users (see Section 2.2.5, e.g., natural language interfaces such as Alexa
    of Amazon and Siri of Apple). The second aspect is so-called intelligent control
    that goes beyond the traditional feedback control. For example, advanced robots
    use various types of modern high-level control algorithms. Third, intelligence
    is useful for other features such as autonomy and reconfigurability. Traditionally,
    intelligence was implemented using so-called AI technologies (see Section 3.2)
    which follow two major approaches. One is the traditional symbolic logic-based
    methods to explicitly implement knowledge [191], which was experiencing limitations
    in knowledge acquisition and maintenance. A breakthrough came from so-called machine
    learning methods based on Deep Neural Network (DNN) [88], which were a sophisticated
    version of Artificial Neural Network (ANN). For specific applications, such as
    vision recognition, a special type of DNN called convolutional neural networks
    perform outstandingly. The learning capabilities facilitate continuous improvement
    of the performance, which is also favourable for smart product applications. The
    ownership of data and knowledge created as a result of this learning process is
    yet to be discussed. However, there are two challenges associated with DNN. One
    is training of the network, which assumes clean high-quality teaching data. Preparing
    such teaching data can be extremely difficult, if not impossible. The other challenge
    is that reasoning outcomes do not have explanations as DNN is a black box. This
    is the difference between DNN and traditional AI approaches. If real time responses
    are needed, as this may require substantial computing power, the Internet connection
    and the client-server architecture might be desirable. For example, the current
    implementation of natural language interfaces (such as Alexa of Amazon and Siri
    of Apple) assumes network connection. 2.2.2. Connectedness Connectedness to other
    agents on the Internet constitutes the foundation for all the features of smart
    products. It will enable collection of data but also facilitate self-identification
    (i.e., from others) and determination of the location. There are different types
    of computing paradigms related to connectedness that have evolved through historical
    development. Ubiquitous computing [276] (or pervasive computing) is a concept
    in which ‘the nonintrusive availability of computers throughout the physical environment,
    virtually, if not effectively, invisible to the user’ [277]. Ubiquitous computing
    is perhaps the most direct ancestor of IoT. Cloud computing is defined as ‘shared
    pools of configurable computer system resources and higher-level services that
    can be rapidly provisioned with minimal management effort, often over the Internet’
    [203]. Cloud computing liberated computing from particular servers and virtually
    removed the boundaries of computing capabilities. For example, smart products
    do not have to be limited to locally available computing resources. However, the
    introduction of the IoT technologies typically led to huge data traffic as well
    as heavy loads to the central servers, these computing and storage capabilities
    were transferred to distributed non-central (edge) nodes located closer to the
    user. This is called edge computing or fog computing [59], [206] and it is expected
    to exhibit computing performances better than cloud computing which is relying
    mainly on centralised servers. Edge computing uses computing nodes that are distributed
    in the network to maximise the system throughput and to minimise delays. The advances
    of wireless communication technologies are now pushing the boundaries of wireless
    communication to 5G and beyond [17], [178]. With the anticipated communication
    speed of 5G (20 Gbps), it is expected that many step-changing technologies, such
    as (near) real time communication without latency and peer to peer communication,
    can be introduced. When applied to moving agents (e.g., smart vehicles, mobile
    robots, etc.), these will facilitate totally different level of functionalities
    such as high-resolution image link. Even immobile assets will become free from
    wiring. In addition, many applications will have an opportunity to shift from
    local to cloud/edge/fog computing. The smart product ecosystem in Fig. 2 requires
    such high-speed communication if it has to be really data-centric or data-driven.
    Connectedness (with high-speed communication) has drawbacks as well. These issues
    will be discussed in Section 2.3.5. 2.2.3. Servicification Smart products are
    by definition product-service systems. They collect operational and use data through
    sensors to enhance service purposes, such as maintenance and life cycle management.
    DMG Mori has been deploying their MTConnect system to monitor, collect, maintain
    their machine tools in the market [62], [164]. Originally, the system was developed
    as a remote monitoring system. It now plays the core role of their smart factory
    solutions. The system basically remotely monitors operations and conditional parameters
    of the machine and sends it to the server. This information is used for managerial
    purposes as well as maintenance. With these capabilities, the company now claims
    that they can provide their customers with Industry 4.0 solutions. Rolls-Royce
    started power-by-hour services in the 1980s and this TotalCare service is now
    generating more than 50% of turnover of its civilian jet engine division. For
    airlines, TotalCare ensures engines’ performance with predictable costs, while
    for Rolls-Royce it generates steady revenue. The service can include real time
    monitoring capabilities which collect real time engine data to be used for improving
    maintenance. Obviously, this smart product design will bring up with maximum benefits
    when aligned with service design. In 2002, the company launched a new programme
    that aimed at designing new products truly ‘designed for service’ [91]. Komatsu
    is known for its successful service called ‘Komtrax’ [109], [116] which collects
    and reports the status of their construction machinery (such as bulldozers and
    excavators). The original purpose was to locate a machine using GPS but now it
    collects information including time when the engine started and shut down, total
    engine running time, service meter readings, and information about an eventual
    unauthorised machine use. These types of information are fully used for management
    and maintenance purposes, but the company is trying to extend its use to the design
    phase, too. This type of capabilities can be critical for smart vehicles used
    for autonomous MaaS service. It is estimated that actual usage rate of these vehicles
    could be above 50%, while currently more than 90% of passenger cars are used for
    only 5% of the time [66]. Technically, this implies the need for much higher reliability
    and dependability. Service-wise, new methods for providing services much faster
    and more effective, including constant real-time health-monitoring, predictive
    maintenance and proactive maintenance. 2.2.4. Sensors and sensing Smart products
    collect information about their environment as well as their own states and status
    through massively deployed sensors. These types of information are used in short
    term for the control purposes as well as in longer term, e.g., for autonomous
    operations. IoT is very relevant to smart products [21], [27], [90], [123], [159],
    [248], [287]. In particular, the development of wireless RFID sensors [269] and
    IoT chips for wireless communication with low power consumption (which are called
    ‘smart sensors’) [289] are the game changer that allows massive deployment of
    sensors throughout, e.g., machines, buildings, factories, and even social infrastructure.
    These sensors have typically monitoring applications, e.g., pressure, temperature,
    and strain, e.g., for process data mining and maintenance purposes [80], [227],
    [256]. 2.2.5. Smart human interaction Smart human interactions require both verbal
    and visual interfaces, and haptic or other forms of interaction [48], [171]. Note
    that autonomous systems are somehow contradicting to this feature of smart products,
    because autonomy requires least human interaction by definition. However, it should
    be interpreted that the best smart product is one that requires only minimum communication
    with human users in a very smart way. The use of (especially) AR (Augmented Reality)
    technologies as a human interface to smart products is considered key to understanding
    information about user’s behaviour. For example, traditional screen-based interfaces
    do not allow bi-directional interactions, unless the screen is a touch screen.
    However, even with a touch screen, the amount of information about the user’s
    behaviour is limited. With AR technologies, information obtained through interactions
    can be richer, because of the availability of the user’s focus. 2.2.6. Autonomy
    A high level of autonomy is a critical feature of smart products. Autonomous systems
    are capable of sensing external information, intelligently making decisions without
    human intervention, and performing actions in response to the situation. They
    operate and survive by adapting to the external changes and internal deterioration,
    which is the feature of resilience. However, this also means lack of surveillance.
    Therefore, it is critical that an autonomous system is dependable (see the next
    section). For example, UAVs (often a drone or a deep-sea robotic submarine) can
    be self-driving (flying or swimming) without remote controls. They should not
    do any harm to any external parties or get lost in accomplishing their mission,
    either. An autonomous system can also be self-learning, which represents non-deterministic
    behaviour. An example of autonomous self-learning is a modular product that configures
    itself after assembling the modules, which is self-organisation. The interest
    in autonomy is growing in various fields. For instance, the UK government published
    a series of white papers on robotics and autonomous systems on such application
    areas as surgical robotics; space; robotics in social care; manufacturing; agriculture;
    robotics for emergency response, disaster relief & resilience; resilient infrastructure;
    urban robotics & automation; and AI & robotics [245]. 2.2.7. Dependability According
    to the International Electrotechnical Commission (IEC), dependability is an ability
    to perform as and when required [101]. It is ‘a collective term for the time-related
    quality characteristics of an item overarching availability, reliability, recoverability,
    maintainability, and maintenance support performance’. In some cases, it may also
    include durability, safety and security. Similar concepts include trustworthiness,
    non-stop availability, and robustness. In case of autonomous systems, for instance,
    their performance needs to be always delivered under any circumstances. High dependability
    can be supported by resilience against external turbulences and internal degradation.
    Intelligence contributes to dependability through self-monitoring, self-diagnosis,
    or even self-repair. An autonomous system has potential to increase dependability
    with the possibility of removing manual maintenance. In an extreme case, autonomous
    systems might even benefit from being subject to external stressors, as they can
    become antifragile [112]. Recently, safety and security are considered indispensable
    elements of dependability [152], [189], [212]. This is particularly true in the
    automotive sector in which functional safety of embedded software need to be certified
    [102]. 2.2.8. Customization/individualization/personalization Customisation, individualisation,
    or personalisation is key to more value to the customer. In the engineering design
    research community, ‘mass customisation’ [52], [239], [295] was first discussed
    in the context of modularisation, product family, and product platform [105],
    [163], [214]. Then, the concept of personalisation that satisfies implicit personal
    wants and needs was introduced as opposed to customisation that satisfies explicitly
    articulated requirements [125], [240]. The advancement of additive manufacturing
    is facilitating the creation of really personalised products (e.g., [96], [111],
    [199], [229], [288]). In the context of smart products, customisation, individualisation
    or personalisation to meet explicit or implicit user requirements could be supported
    by reconfigurability. We will examine this issue in Section 2.2.10. 2.2.9. Resilience
    Resilience is originally a term in psychology. In the engineering context, it
    might be defined as the ability of a system to absorb external impacts without
    affecting its structure or behaviour [156]. This means in order for a system to
    exhibit resilience, it needs to have a special mechanism to absorb and counteract
    to the external impacts. The mechanism can be ‘reconfiguration’ that takes place
    at behavioural and structural levels discussed below [235]. 2.2.10. Reconfiguration
    The scale of reconfiguration can range from very minor adaptation to major changeover.
    The minor ‘adaptation’ or ‘adjustment’ include control responses to external stimuli
    and more major model tuning within the controller [184]. The major changeover
    can be morphological and topological changes or replacing units [155]. Reconfiguration,
    being minor or major ones, takes place at different levels of the system, i.e.,
    structure, behaviour, and function [7], [8], [31], [195], [196]. An example of
    reconfigurability is modular architecture, which is supported by module-wise interoperability
    and standard interface between modules. Reconfiguration can take place at any
    moment over the life time of smart products [258]. For instance, design-time reconfiguration
    is the modification of design to adapt an old model to new user requirements,
    while run-time reconfiguration can be any form of control to adapt the machine
    to changing external environments and deteriorating internal conditions. Life-time
    reconfiguration targets maximisation of the market value of the product by modifying
    part of the product over its life cycle or at the end of life. These three different
    modes of reconfiguration commonly use information obtained from sensors. While
    run-time reconfiguration is supposed to take place automatically or autonomously,
    the other two reconfiguration modes are not. However, physical (or structural)
    reconfigurability is difficult to exercise (particularly, during run-time) for
    many product categories unless they have physically interchangeable modular structure
    [7]. For this reason, software-based behavioural or functional reconfiguration
    is preferred for several smart products (e.g., smart phones). Therefore, dynamic
    real-time reconfiguration of smart products can be offered and implemented by
    using different software services [4], [5], [6]. Fig. 6 depicts life-time reconfiguration
    of a smart vehicle that goes through static reconfiguration in the middle of its
    life and later dynamic real-time reconfiguration. Static reconfiguration means
    non-personalized reconfiguration for all instances regardless of the environment
    in which these smart products exist, while dynamic reconfiguration is highly personalized
    based on the environmental data and thus instance-based [8], [196]. Download :
    Download high-res image (399KB) Download : Download full-size image Fig. 6. Reconfiguration
    of smart products. Within manufacturing systems design, reconfigurable manufacturing
    systems have been well studied [64], [122], [130], [155], [267], Another good
    example of reconfigurability is modular reconfigurable robots [168], [291], [292].
    Swarm robots are a group of robots not necessarily physically connected but loosely
    coupled with communication that performs tasks as a whole [15], [155], [160],
    [274]. For instance, a fleet of autonomous drones exhibit useful group behaviours.
    Cellular machines are composed of homogeneous cells that exhibit simple functions,
    but as a whole, useful functions emerge (i.e., storage and transportation of packets)
    [120], [193]. More recently, Amazon is operating warehouses with robots based
    on similar principles [87]. Reconfiguration is useful for the purpose of maintenance.
    Because of external disturbance or internal component deterioration, system’s
    functions fail. By reconfiguring at parametric, state, or behavioural level, the
    system’s function can be maintained. Table 2 compares various types of maintenance
    strategies through reconfiguration using the framework of the FBS (Function-Behaviour-State)
    modelling [246]. The top level is function which is an abstraction of a behaviour.
    A behaviour is a temporal sequence of state transitions. A state is a collection
    of parameters at a time containing. It is therefore a snapshot of the structure,
    which is a network of parameters. Table 2. Smart product reconfiguration during
    their use/operation phase. The simplest maintenance is to diagnose the failure
    and change the failed component. This component changing strategy, however, does
    not change, other than the broken component, any of function, behaviour, state,
    and structure (represented by the parameter network topology). Network-type redundancy
    is often used in transportation networks (railway, highway, etc.), infrastructure
    network (e.g., electricity distribution grids) and communication network (e.g.,
    telephone networks and internet networks). In these networks, when one path fails,
    an alternative route is configured quickly, which results in a different topology.
    Although the capacity of this alternative route might not be the same as the broken
    one, the total throughput might be almost at the same level. Parameter adjustment
    strategy is the control engineering approach. For example, set point adjustment
    will not change the parameter network topology but parameter values can be different.
    However, the goal of this strategy is to maintain the behaviours thereby maintaining
    the function. This can be contrasted with the control-type self-maintenance strategy
    [207], which is almost the same as set-point adjustment but when a set point exceeds,
    e.g., the physical limit, this strategy chooses a different control model. This
    means the physical parameter network does not change but the states and behaviours
    could be different. However, the total goal is to maintain the function. The last
    function-redundant-type self-maintenance strategy will utilise a latent function
    of components existing in the system [247]. Therefore, the only thing to be maintained
    is the top-level function and anything else can be different. 2.3. Contributions
    and challenges of smart products 2.3.1. Sustainability As discussed already, by
    monitoring status and environment parameters and later by processing the collected
    data using data analytics (see Section 3.3), smart products have a potential of
    better performances in maintainability, end-of-life treatment, and energy consumption,
    thereby contributing to sustainability [131], [209], [224]. For example, energy
    consumption might be reduced by understanding the machine condition better. Better
    capabilities of predicting failures early will prevent unnecessary stoppage of
    the operation, thereby guaranteeing the best use of resources as well as least
    waste. Understanding the usage over the whole life will help better decisions
    for the end-of-life treatment, thereby achieving circular economy [177], [241].
    2.3.2. Multi-disciplinarity Smart products are mostly CPSs that are an outcome
    of an integration process over a variety of disciplines. They also interact with
    the physical world through sensors and actuators in a variety of ways. This physical
    reality brings up multi-disciplinarity, too. Multi-disciplinarity on one hand
    improves the function of the product significantly. On the other hand, it will
    add complexity [65], [233]. The trade-off between functional advantages and complexity
    becomes a challenge. 2.3.3. System of systems Large scale CPSs, in particular,
    are by definition a system of systems [150] not only for the number of subsystems
    but also for the multi-disciplinarity [233]. Being a system of systems means simultaneous
    co-existing events, interdependent behaviours, and consequently emergent functions.
    All of these add complexity at phenomenological, behavioural and functional levels.
    2.3.4. Complexity There are several sources of complexity of smart products. The
    first area to look into is software complexity. Smart products are CPSs controlled
    by software. As seen in Section 2.1.3, the software size has been increasing drastically
    recently due to ever increasing requirements. Not only size but also qualitative
    complexity of software architecture is also increasing [255]. Second, the process
    complexity of the product development processes is also very high. There are a
    couple of reasons. Capturing user requirements is one problematic area, as incorrectly
    captured requirements will lead to ineffective or inefficient product development
    processes. Related to this, the fact that the product development needs to consider
    the entire ecosystem (Fig. 2) significantly increases the complexity of product
    development. In addition, process complexity increases due to the multi-disciplinarity
    nature of smart products and the system of systems nature. 2.3.5. Cyber security
    and data protection Just like any other ICT systems, cyber security has become
    one of the most concerning issues for smart products [44], [47], [186], [218].
    As seen in the famous Stuxnet case [200], cyber attacks through vulnerabilities
    of the system (even if it is a closed one) are a huge risk of a catastrophic or
    even life-threatening incident. However, smart products as embedded systems have
    difficulty in dealing with cyber security. Traditionally, these systems were considered
    relatively safer compared with PCs connected that need consider cyber attacks,
    browser vulnerabilities, malwares, e-mail attachments with viruses, and infected
    USB devices. As they were considered isolated from the network, there was no protection.
    However, as smart products are indeed connected, it is now urgently necessary
    for them to be equipped with appropriate protection mechanisms. It is known that
    through the keyless entry system, vehicles can be stolen. A related issue is data
    protection. Commercially sensitive data and information such as CAD data of a
    new product needs to be protected. However, PLMs are not different from any other
    systems. In addition, privacy data needs attention. There is an EU regulation,
    General Data Protection Regulation (GDPR), for data protection and privacy [70]
    and similar measures are discussed internationally. In the case of commercially
    sensitive data, particularly, the ownership of collected data through smart products
    can become an issue. Suppose if a machine tool manufacturer collects data about
    the operation of a machine tool for monitoring and maintenance purposes. The problem
    is that such data can also be business sensitive and needs protection. 3. Enabling
    technologies for smart products 3.1. Contributions and challenges of smart products
    There are emerging technologies that can underpin the smart product development.
    While many of these enabling technologies relevant to smart products are advanced
    ICT technologies, it is interesting to observe that advances in hardware- or material-oriented
    technologies are also enriching the concept of smart products. To name a few,
    the following can be suggested. • Additive manufacturing [96], [111], [199], [229],
    [288] facilitates truly personalised production. There is even a possibility of
    simultaneous, integrated printing of both mechanical and electrical components.
    This will change the design and production of smart products significantly. •
    Microelectronics is rapidly advancing: Semiconductor devices (CPU, memories, and
    sensors) are still making progress in performance, size, energy consumption and
    cost, which means the performance of mobile smart products in particular can improve.
    Foldable printed circuit boards and displays are already available, which allow
    denser implementation of the system. • Battery technologies are also making progress.
    It is expected that soon the current lithium ion and lithium polymer batteries
    might be replaced with all solid-state batteries with much higher energy density
    and better safety features [183]. Flexible batteries are becoming possible, too
    [300]. Non-contact charging has been commercially available. • New materials are
    emerging on the horizon, such as Cellulose Nano Fiber (CNF) with outstanding strength
    and light weight [63], 3D printable energy harvesting material [205], self-repair
    or self-healing metals, composites, polymer and ceramic that can significantly
    reduce life cycle cost [30], [32]. The following ICT technologies are leading
    the way to so-called “Internet of Everything”. These technical enablers are not
    necessarily innovatively disruptive any longer (some are indeed very classic)
    but they are technically mature enough to be integrated in a CPS product together
    with other technologies to yield a smart product. • ○ Communication technologies
    • 5G/6G mobile networks • NFC (Near Field Communication for contactless cards
    and RFID) • Bluetooth Low Energy (BLE) • M2M (Machine to Machine) networks • Internet
    technologies • IPv6 • Social media • Semantic web • Software technology • AI technology
    such as machine learning and DNN (see Section 3.2) • Big data and data analytics
    (see Section 3.3) • NoSQL databases (to be used for big data) These technologies
    together with AI technologies (Section 3.2) and data analytics (Section 3.3) form
    the core technologies to be embedded in smart products. Section 4 will look into
    technologies for the development of smart products. However, unfortunately, we
    do not have a silver bullet to tackle the challenges discussed in Section 2.3.
    3.2. Artificial intelligence (AI) Ever since IBM’s Watson defeated human contestants
    in a TV quiz show ‘Jeopardy!’ in 2011, so-called deep learning-based AI has been
    recognised a breakthrough (IBM prefers to call Watson Augmented Intelligence,
    though) [73]. The role and value of classic symbolic logic-based methods and other
    types of reasoning techniques (such as fuzzy logic and genetic algorithm) [191]
    have become relatively less valued, primarily because the performance of deep
    learning-based methods was drastically superior to those classic ones. The fundamental
    difference between conventional ANN (Artificial Neural Network) and DNN (Deep
    Neural Network) is the number of the hidden (middle) layer(s). While ANN uses
    only one or a few layers, DNN (and its variants, such as Convolutional Neural
    Network, CNN) employs multiple (sometimes more than one hundred) layers. In a
    broad sense, the learning (or training) algorithms for DNN are part of machine
    learning algorithms [88]. However, for machine learning, it was always ‘teaching’
    meaning by providing data; a teacher needs to teach the answer. In some applications
    (e.g., image recognition) [124], DNN (e.g., Convolute Neural Network) does not
    require teaching provided with a sufficiently large amount of tagged image data.
    From a viewpoint of practical applications, this feature of learning without teaching
    makes a big difference and has become the biggest catch. DNN exhibits outstanding
    performance, in particular, in pattern recognition, image recognition, and natural
    language processing. Other types of applications are now undertaken, too. However,
    obviously, a practical AI system cannot be built using solely deep learning methods.
    Many other classic reasoning methods are still valid and indispensable. If there
    is not much data available to train a DNN, it would be necessary to train the
    network through teaching, which becomes a tedious task. There is a trade-off between
    teaching time and effort against performance (e.g., output quality) of the system.
    Additionally, in principle DNN is a variant of ANN, therefore it is not possible
    to give explanations of the reasons of the reasoning outcomes. These are drawbacks
    of DNN. While applications of classic AI techniques to product development are
    plenty within the research community, there are not many applications of deep
    learning (yet) in product development. One of the possible reasons for this is
    that product developers aim to maintain an overview of the network of interdependent
    and non-deterministic decision-making processes in development cycles. With an
    increasing number of decisions that cannot be underpinned – as is the case with
    deep learning – developers may feel less confident in governing the design process
    as the rationale is increasingly lacking. However, as obviously seen in robotics
    and autonomous vehicles, these techniques are used to develop intelligent features
    of smart products. Within the CIRP community, deep learning techniques have been
    applied to the following design and manufacturing research topics; cutting process
    monitoring [78], cutting process planning [79], process planning for polishing
    [265], robotics [140], [266], feature extraction for inspection [275], optimisation
    for process planning [180], planning for machine allocation [188], operation scheduling
    [271], diagnostics [278], [296], planning and management of energy consumption
    [46], and design [268]. 3.3. Big data and data analytics The advances of computing
    technologies, especially of processor speed and storage capacity, combined with
    cheap communication means made the concept of ‘big data’ [18], [154] available
    in many application areas. For instance, financial transaction data as big data
    allows for the extraction of customer purchasing preferences useful for future
    marketing. Similarly, smart products can function as a distributed sensor network
    that creates big data about product usage and users’ behaviours [297]. Its example
    is the location information from smart phones used to create traffic information
    that will be used for navigation purposes (see Section 1). Data analytics is a
    set of mathematical methods to model, capture, cleanse, analyse, and visualise
    big data. Among these, data mining is a set of statistical methods (such as principal
    component analysis and regression analysis) to model and discover knowledge to
    be used for predictive analysis. As illustrated in Fig. 2, Fig. 3, smart products
    will be embedded in a data-centric ecosystem that will collect a huge amount of
    operational and life cycle related data. The collected data will be analysed with
    data analytics methods for technical and business purposes. 4. Development methods
    and tools for smart products 4.1. Currently available methods and tools For the
    development of complex mechatronic products, a huge number of methods and supporting
    tools with a different level of maturity are available [234]. The majority of
    these methods and tools listed in Table 3 could also be used for the development
    of smart products. However, due to the high complexity described in Section 2.3.4,
    and due to the special characteristics of smart products such as intelligence,
    existing methods and tools are not powerful enough for the development [147].
    Table 3. Commonly used developing methods and tools. Procedural approaches and
    generic methods • Systems Engineering / MBSE (Model-based Systems Engineering).
    V-Model • Agile methods adopted from the software development, • Modular Design
    • Collaborative Engineering, Lean Development, Concurrent Engineering, Simultaneous
    Engineering • Design for X  System design • Requirement engineering • Functional
    modelling • Behaviour modelling • Product architecture design • FMEA (Failure
    Mode and Effect Analysis) • QFD • Conjoint Analysis, Kano method  Domain-specific
    design tools and methods of components • Mechanical CAD / rapid prototyping •
    Electrical CAD • Software Engineering (CASE) • Service Engineering, PSS Engineering
    • Simulation methods and tools (CAE)  System integration, verification and validation
    • Multi-physics simulation • Software in the loop, Hardware in the loop, Human
    in the loop  Product data and process management • Product Lifecycle Management
    (PLM) • Application Lifecycle Management (ALM) • IoT integration platform • Enterprise
    Resource Planning (ERP) Smart products have been discussed from a variety of aspects
    including product development methods (e.g., [12], [76], [108], [142], [223]),
    marketing (e.g., [57], [110], [133], [202], [250], and CPS based smart products
    [49], [94], [158]). Design methods and methodologies targeting a specific feature
    of smart products, for instance, ‘design for reconfiguration’, is useful to develop
    a smart product that exhibits dynamic reconfigurability during use phase (but
    unfortunately, this has not been established yet). Fuzzy front-end methods address
    early phases of product development including marketing [33], mapping business
    strategies of an enterprise to a business ecosystem (Fig. 2) and value generation
    processes (Fig. 3) offered by the smart product. This needs to end up with function,
    behaviour, and the physical embodiment of the smart product. Therefore, product
    development methods and service development methods identified in Table 3 cannot
    be separately discussed. The multi-disciplinary nature of CPS adds extra complexity
    to the smart product development process. Tools and methods of Model-Based Systems
    Engineering (MBSE) [84], [273] are utilised for this purpose. We will examine
    MBSE in Section 4.4 in greater detail. Accordingly, it is expected that the way
    product development of smart products is undertaken can be drastically different
    from the current practices from very early stages. Tools and methods for smart
    product development can also be different. For example, identifying user requirements
    for traditional products is depending on user research and market research comprising
    of a variety of methods that collects data actively. However, with smart products,
    market data can be collected ‘actively’ while collecting use data and operational
    data. This ‘continuous real-time feedback’ mechanism will make requirements definition
    phase totally different [9], [10], [11], [13], [14], [54], [182]. For example,
    a smart car equipped with massively deployed sensors can collect detailed information
    about how the car is operated. The information about the status of the car can
    be useful for the owner (who can be different from the driver) to perform predictive
    maintenance and to contract favourable insurance, for the manufacturer to improve
    the car design, and for public road planner to plan smoother city traffic. The
    car can also autonomously drive collaborating with other cars to offer a new type
    of mobility service and to increase the safety on the road. This will also minimise
    the congestion, thereby contributing to sustainability. This data collection requires
    careful design of sensors, data collection methods, data mining methods, as well
    as data protection strategies, which means seamless coordination between hardware
    design and cyber system design, beyond the traditional control engineering. In
    addition, obviously (at least part of, if not all) the collected data needs to
    be stored and properly managed. To this end, the concept of ‘digital twin’ is
    actually standing on the meeting point of these two directions [85] is becoming
    important. This issue will be examined in Section 4.3. Similarly, resilience will
    increase dependability through reconfiguration. Resilient architecture contrasts
    to ‘fixed’ or ‘rigid’ architecture in which once designed, attributes, structure,
    behaviour and function will not change. Resilient architecture allows autonomous
    reconfiguration and changes, so that the system fits better to the environment
    or copes with its deterioration. This can be regarded as even growth or antifragile
    behaviour [112]. In this sense, product design for smart products is not only
    about the product itself but also about design of the mechanism for the product
    to change or grow. However, in existing literature, such ‘growing architecture’
    is not discussed fully. 4.2. Value generation through services Value generation
    through features of smart products as depicted in Fig. 3 will impact the services
    that smart products offer [20], [58], [167]. For example, a ‘smart kettle’ not
    only offers useful functions (e.g., automatic boiling of water) but also new service
    in the form of reporting abnormal behaviour by elderly users. This means smart
    products should take into consideration new PSS (Product-Service System) development,
    value chain, and business models. The smart kettle was developed by Zojirushi,
    Co., in Japan and has been in market since 2001 [301]. Due to the age, sudden
    illness, or symptoms of dementia, it is often necessary for family members to
    keep an eye on elderly people living alone. A direct solution is to set up a CCTV
    camera, but this is often problematic because it gives really an impression of
    violating privacy. As a resolution, the kettle not only boils water but also reports
    water boiling activities through mobile telephone connection. The usage information
    is sent from the server to a familiar member regularly, so that if there is anything
    wrong with the elderly person, it can be detected earlier. Similar products are
    now in the market, including ‘smart gas meter’, ‘smart photo frame’, and ‘smart
    air-conditioner’. All of these sense human activities, although the responsibility
    of detecting abnormality is in the hands of family members. In the case of a smart
    kettle, obviously not only the owner (elderly user living alone) but also additional
    stakeholders (who might be relatives, friends or neighbours) have to be considered
    in the value chain. The business model is different from that of traditional kettles,
    because of a new service element which is charged. However, value creation from
    available information is insufficient in the current model, because the system
    only reports usage data of the kettle. The system does not warn for unusual usages,
    lack of regular usage, or any other irregular activities. This is where perhaps
    some AI technologies can be introduced to generate more value for the user as
    well as for the business. The value generation mechanism in Fig. 3 assumes a stronger
    role of service elements than of products themselves. The concept of XaaS (Everything
    as a Service) is a concept originally developed in cloud computing [277] that
    offers well-defined software components over the Internet. An example of XaaS
    is MaaS of smart vehicles as shown in Fig. 4. XaaS is also relevant here, because
    functions and services of smart products can be unitised for composition towards
    an entire solution. This compositional approach has a long history in software
    and Web services as SOA (Service Oriented Architecture) [67], but this can be
    analogically compared with PSS as below and potentially useful for PSS design.
    • SaaS (Software as a Service) = Functional products • PaaS (Platform as a Service)
    = PSS • IaaS (Infrastructure as a Service) = Service infrastructure In offering
    services, information flow plays a critical role. For example, MaaS requires such
    information flows as transportation requests, traffic information, vehicle information,
    and user information. Without these types of information, MaaS does not exist.
    This suggests that future business ecosystems cannot be designed without such
    concepts as XaaS and information flows associated with this XaaS. One futuristic
    way of thinking about XaaS and future services for manufacturing is Supply Chain
    as a Service (SCaaS). Traditionally, within a supply chain for a manufacturer,
    logistics companies were considered only as a means for transportation and storage.
    However, if a logistics company like Amazon extends its services to ‘provision
    of components’, supply chains may disappear under the paradigm of cloud manufacturing
    [139]. 4.3. Digital engineering The notion of ‘digital engineering’ or ‘virtual
    engineering’ targets all engineering activities and processes from design, engineering,
    production, all through product life cycle, virtually performed on computer-supported
    systems, thereby reducing necessity of physical prototyping and testing [253].
    While ‘digital manufacturing’ [50] refers to manufacturing processes, digital
    engineering may have an emphasis on narrower fields of processes and tools for
    design and engineering. However, e.g., it was demonstrated that digital engineering
    and digital manufacturing could be seamlessly integrated with help of the digital
    twin [222]. Digital engineering covers traditional mechanical engineering design
    support tools, i.e., CAD (Computer-Aided Design), CAM (Computer-Aided Manufacturing),
    CAE (Computer-Aided Engineering), CAPP (Computer-Aided Process Planning), manufacturing
    process simulation systems, and even systems engineering tools (e.g., Matlab/Simulink
    and Modelica). These tools are now integrated on a PLM (Product Lifecycle Management)
    platform for this purpose [219]. PLM is expanding its coverage from purely mechanical
    engineering and production engineering domains to electrical engineering and systems
    engineering domains. This contrasts with existing CAD tools in electrical engineering
    and electronics (e.g., those for circuit design) that seem to tend to stay within
    their own field, because mechanical CAD deals with physical shapes that are not
    necessarily limited to mechanical components but also relevant to the entire system
    for physical integration. Manufacturing information frameworks, such as ERP [161],
    also integrate all necessary information about manufacturing processes and operations
    and used to control these. ERPs can be connected even to MES (Manufacturing Execution
    Systems) and even SCADA (Supervisory Control And Data Acquisition) for process
    control. The integration of digital engineering tools can be seen from two perspectives.
    Tool-wise, the degree of PLM-based integration of all the design and engineering
    tools for smart products is not yet complete, although this should be the direction
    [121]. Data-wise, a wide range of data can be collected by ERP (rather than PLM)
    throughout the product life cycle, beginning with design and production preparation
    down to production, operation, maintenance, and end-of-life. The newly emerging
    concept of ‘digital twin’ is actually standing on the meeting point of these two
    directions [6], [40], [85], [197], [216], [225], [244], [254]. A digital twin
    is a digital representation of an active unique product (real device, object,
    machine, service or intangible asset) or unique product service system (a system
    consisting of a product and a related service) that comprises its selected characteristics,
    properties, conditions and behaviours by means of models, information and data
    within a single or even across multiple life cycle phases [221]. It captures design
    information (i.e., to-be information), manufacturing information and operational
    information, which represents even minor differences of individual product (i.e.,
    as-is information), thereby contributing to different types of decision making
    such as maintenance and end-of-life decisions. Smart factories within Industry
    4.0 will be inevitably software intensive. The software ranges from PLM (Product
    Lifecycle Modelling), ERP (Enterprise Resource Planning), MES (Manufacturing Execution
    Systems), SCADA, PLC (Programmable Logic Control) to servo controllers of individual
    equipment and devices on the shop floor. Among others, the increased number of
    sensors due to the IoT philosophy and finer control of processes will affect the
    complexity of software [248], [259], [263]. The nature of CPS adds another dimension
    of complexity. To deal with this, it is critical to establish a reference model
    of architecture of smart factory (e.g., see Ref. [185]) and to develop software
    using Model-Based Systems Engineering approaches (MBSE) [84], [273]. The existence
    of vast use data will have very strong implications for PLM (Product Lifecycle
    Management) [2], ERP (Enterprise Resource Planning) [161] and other data management
    systems for product development. Traditionally, these tools were meant to be used
    during the design and production phases. However, the concept of digital twin
    [6], [85] aims at storing vast operational and life cycle related data collected
    by smart products using the IoT technologies. Digital twins can be established
    on these PLM or ERP platforms, which extends the use of PLM and ERP across the
    entire product life cycle and is expected to serve as the basis for digital manufacturing
    [50] (see Fig. 7) in which smart products are expected to function as a mechanism
    to deliver smart services and collect massive life cycle related data. The roles
    and future research trends of digital twin in the context of digital manufacturing
    will be discussed further in Section 6.3. Download : Download high-res image (196KB)
    Download : Download full-size image Fig. 7. Digital manufacturing and product
    life cycle. 4.4. Product development and systems engineering Modern product development
    methods for multi-disciplinary mechatronics or CPS engineering have been discussed
    by a number of authors [22], [45], [93], [94], [118], [119], [141], [165], [179],
    [204], [253], [298]. Some of them are influenced by traditional design process
    models [234], whereas others are based on systems engineering methodologies, such
    as the V-model [77] (Fig. 8). In Fig. 8, the left-hand side is the requirements
    (predicted models) whereas the right-hand side depicts actual implementation.
    It must be noted that the V-model is criticised for the discrepancies with the
    reality (e.g., [272]) and, therefore, V-model should be treated as a reference
    model rather than as a descriptive model. Download : Download high-res image (161KB)
    Download : Download full-size image Fig. 8. V-model with predicted models and
    the implanted system. The features listed in Section 2.2 can potentially influence
    the product development process, because these features rely heavily on software
    components. Ideally, the machine (hardware), electronics hardware, and the embedded
    control software should be developed as a whole as illustrated in Fig. 9. For
    instance, imagine a packaging machine. Fig. 9 reads that the first requirements
    were specified (e.g., packaging process description), which then would be transferred
    to a choice of the mechanism and a motion path of the mechanism (behavioural description).
    This would have to finally be converted to data for part making as well as a motor
    controller programme of the mechanism. Download : Download high-res image (36KB)
    Download : Download full-size image Fig. 9. Idealised product development process.
    However, in practice, it is often the case that this ideal process in Fig. 9 splits
    in domain-wise (or discipline-wise) separated processes. There is a tendency that
    the control software development process comes last [22]. This means a realistic
    multi-disciplinary product development process would look like Fig. 10. After
    the initial product definition phase where functional requirements are determined,
    the mechanical and electronic design teams work almost independently until the
    design freeze. Download : Download high-res image (86KB) Download : Download full-size
    image Fig. 10. Realistic multi-disciplinary product development process. Then,
    the integration phase starts and in parallel the control software development
    follows up the mechanical and electronic design. This means the software development
    team waits for the mechanical and electronics teams to finish at least behavioural
    design. This also suggests that the product development will be undertaken as
    collaboration of mono-disciplinary teams [232]. In addition, practically speaking,
    the software development phase tends to delay, as this is the integration and
    verification/validation phases in which the only way to solve problems is code
    but not going back to hardware design. This means delay in product release. Therefore,
    improving this stage (verification and validation) with software-based methods
    could be beneficial. In the near future, ideally, once the requirements are described
    and the mechanism is chosen, the behaviour of the mechanism as a motion path should
    be calculated automatically. The degree of automation of electronics CAD or software
    development is more or less the same and the control code can be semi-automatically
    generated. Fig. 11 illustrates this situation in which a light blue box indicates
    a potentially automated process. Due to these automated processes, project delays
    could be minimised or avoided. Download : Download high-res image (85KB) Download
    : Download full-size image Fig. 11. Near future multi-disciplinary product development
    process. In the future, eventually the smart packaging machine would (semi-)automatically
    programme itself from the packaging process description. This means that product
    development becomes integration of smart parts and we do not have to ‘programme’
    the mechanism and design intelligence or embedded intelligence takes over the
    role of the designer. Embedded intelligence indeed is a game changer in that the
    paradigm shifts from ‘programmed behaviour’ to ‘learning for behaviour modification’
    (or growth). In addition, this also means a higher degree of discipline integration.
    Fig. 12 illustrates a future situation in which the three separated disciplines
    can be integrated with a help of high-level tools. Although this is just a vision
    at this moment, model-based systems engineering (see the next section) targets
    such automation. These research and development efforts in this direction will
    be looked at in Section 5.3. Download : Download high-res image (34KB) Download
    : Download full-size image Fig. 12. Future multi-disciplinary product development
    process. 4.5. Model-based systems engineering Originating from software engineering,
    the concept of Model-Based (Systems) Engineering (MBSE) [84], [273] (which was
    initially called Model-Driven Engineering (MDE) [198]) means the use of models
    to store, exchange, and develop information about the target software system being
    developed, rather than traditional document-based or code-based methods. The core
    philosophy of MBSE has a high degree of affinity with physical domains such as
    mechanical, mechatronic, and electronic engineering, because computer-based models
    are utilised more intensively than the software domain as observed in the rise
    of digital engineering (see Section 4.3). Embedded software for smart products
    requires an appropriate level of abstraction about domain concepts to reduce the
    complexity of the domain, which was not sufficiently addressed in the traditional
    code-based development paradigm. For example, it often happens that requirements
    are recorded in a natural language in Microsoft Excel sheets. Instead, if requirements
    are recorded or illustrated in a graphical model like IDEF0 [98] or something
    that can be easily converted to a model in UML (Unified Modelling Language) [175]
    or SysML (Systems Modelling Language) [174], it would be possible to capture,
    describe, design, analyse and verify systems requirements, specifications, functions,
    and behaviours of the smart project in a formal manner. MBSE is expected to improve
    productivity of the code development process by facilitating reuse of models (i.e.,
    eventually code). To develop smart products, MBSE is particularly suitable for
    controller design (e.g., [71], [262]), as well as for programming the cyber part.
    There are four significantly different pillars that form the basis of MBSE (Fig.
    13). The first pillar is traditional systems engineering approach which is concerned
    about the development of large-scale complex systems. This approach contains rather
    top-down methods such as V-model as a prescriptive process model, formal definition
    decomposition methods, and specification methods including SysML and UML. Download
    : Download high-res image (128KB) Download : Download full-size image Fig. 13.
    Model-based systems engineering. The second is the software engineering approach
    typically including CASE tools, some of which have links to descriptions in, e.g.,
    SysML, so that outcomes of systems engineering methods can be transferred into
    software codes. The third is dynamic modelling of systems for which tools such
    as Matlab/Simulink and Modelica are gaining popularity to define, model and analyse
    systems dynamics behaviours. Recently, so-called 1D simulation or 1D CAE [211]
    is gaining interests, in particular, as a way to work with a simplified model
    which appears at very early phase of product development. Such a simplified model
    (often at physical phenomenon level) captures the essence of the function to be
    realised. Then, using a dynamic systems modelling tool, a conceptual level study
    (often with simplified differential equations) is conducted to determine key parameters
    (but very roughly). 1D modelling is often understood as a simplified method to
    speed up 2D or 3D CAE analysis processes but this is perhaps a too shallow interpretation.
    The true value of the 1D approaches is that they don’t require too much details
    as is the case with 2D CAE or 3D CAE analysis. Finally, the fourth is more recent
    recognition that physical models need to be incorporated for the smart products
    development. To do so, MBSE methods are being integrated into a PLM framework
    as illustrated in Section 5.3, which should allow easy transfer or conversion
    of information among models including even software code. 5. Research challenges
    for smart product development 5.1. State of the art of methods and tools for smart
    product development To develop hardware, software, and contents of smart products,
    a wide variety of methods and IT tools (see Sections 4.2 and 4.3) is available.
    For example, we do know how to define and design ‘connectedness’ and ‘sensor architecture’
    with systems engineering tools by representing information flow in SysML among
    various signal processing elements. However, we do not have generalised knowledge
    to build a ‘reconfigurable system’ or ‘dependable machine’, yet. Moreover, it
    is not obvious for any currently available model representation scheme within
    PLM or MBSE to represent semantic information needed to design services. For the
    development of services, while there are a few methods available (e.g., [23],
    [28], [41], [194]), there are not many strong IT tools available. Although the
    concepts of service CAD [23], [117] have been proposed, they are not yet commonly
    used in industrial practice. In addition, the linkage between product design and
    service design is rather weak. Whereas general design methodologies to achieve
    a certain service goal in the context of technical architecture are yet to be
    fully understood and established, it is possible to identify attempts to develop
    a methodology that will represent service as a way to change the states of stakeholders
    [115], [201], [231]. In such a case, services are described as transitions among
    discrete events [117]. Smart products and their ecosystem generate information
    during their life cycle stages. This information should be processed to create
    higher level business value. To do so, techniques and tools of big data and data
    analytics can be used. However, feeding the obtained information back to smart
    product design is not yet practically exercised, whereas research is intensively
    conducted (e.g., [13]). At this moment, information obtained from product operations
    is mainly used for managerial and maintenance purposes [62], [91], [109], [116],
    [131], [134], [164]. The state of the art of methods and tools for the development
    of smart products could be summarised as follows. • While there are still some
    deficiencies (e.g., immature integration of hardware and software design in MBSE,
    which will be discussed later), basic methods and IT tools for the development
    of smart products are reasonably mature and available. • During the product development,
    the verification and validation subphases are always problematic. One possible
    solution is to develop a software-based simulation tools for verification and
    validation. However, this is not a silver bullet, because the real root cause
    could be poor systems definition/decomposition, unpredicted phenomena [53], [233],
    or impossibility of reversing design decisions when mechanical or electronics
    design is once frozen. • Although methods for service design are available, IT
    tools for service design are undeveloped. • There is no concrete method that links
    the smart product PSS design to user experiences [153]. • We do have a good amount
    of knowledge on how to deal with user experiences, but this is mainly focused
    on user interface design. • Information generated from the smart product life
    cycle can be analysed adequately with a variety of methods and IT tools. But there
    are only a few formal methods to feed this information back to smart product development
    [9], [10], [11], [13], [14], [54], [182]. In the following sections, we look into
    some research challenges and current effort to tackle them. 5.2. MBSE challenges
    for smart product development The use of MBSE to develop smart products is motivated
    in the first place by the complexity of smart products. The traditional document-based
    approach employs pure textual treatment of requirements, functional capabilities
    and behavioural properties in relation to the intended product and technical (sub-)system
    characteristics. Apparently, this approach cannot handle complex situations observed
    in smart product development, such as interactions with other products and devices
    on the network and completely amalgamated multi-disciplinarity. Although MBSE
    offers many key solutions to the challenges above, there are still challenges
    to be solved. Table 4 compares different models in different domains relevant
    to smart products. From this table, it is clear that MBSE might be a promising
    approach, but there are still issues in model integration and data exchange among
    different models in different domains. • Although it might be possible to represent
    functions in any domain using the “to do something” formalism or “input–output
    relationship” formalism, there is no trivial connection between functional models
    and other models at behaviour, state, or structure levels. • Geometric model-based
    (i.e., PLM-based) integration of structure is possible for mechanical CAD and
    CAE applications. However, there are many other domain specific structural models
    that cannot be represented using only geometric models. • Parameter value lists
    as well as state transitions using, e.g., IDEF, UML, or SysML, can be used to
    represent states in many domains. • A variety of domain specific models exist
    for representing behaviours. • There is no unified “MBSE model” for smart products,
    let alone service models. It is more pragmatic to develop translational approaches
    among these different types of models, such as ReqIF (Requirements Interchange
    Format) [173], system descriptions (SysML), interface standards for models (such
    as Functional Mockup Interface (FMI) [81]), and general linkages (such as OSLC
    (Open Services for Lifecycle Collaboration) [176]). • This pragmatic translational
    approach (i.e., federation of mono-disciplinary models), as opposed to the ideal,
    unified, single model approach, seems valid, although obviously there are inevitable
    translation losses and inefficiencies. Table 4. Examples of models in different
    domains. Empty Cell Behaviour State Structure Mechanical Motion diagram 3D geometric
    model 3D geometric model Force diagram FEM analysis Stress diagram Force diagram
    Mesh model generated from 3D geometric model Electro-nic State transitions Parameter
    value list Circuit diagram Servo control Parameter value diagram Parameter value
    list Block diagram Soft-ware in general State transitions Parameter value list
    • Data model • Flowchart Mosterman and Zander studied the architecture for Industry
    4.0 from the viewpoint of software [166], which pointed out software challenges
    including: • Emerging behaviour design: As a result of compositional approach,
    behaviours can emerge unexpectedly. How can these unpredicted behaviours be dealt
    with? • Data sharing: Among models in different domains, the same data should
    be the same in a semantically correct manner, which is sometimes impossible. •
    Functionality sharing: Control software needs to assume hardware limitations.
    This type of constraint needs to be correctly shared among different domains.
    • Collaborative functionality testing: This is critically necessary for a dependable
    smart product, but such testing methods do not exist yet. There are also incompatibilities
    between elements in the 1D CAE library (typically elements that describe differential
    equations for systems dynamics models) and functional decompositions necessary
    for systems definition. The latter does not consider time dependency which is
    critical in the 1D CAE library. This is because consistent theoretical foundation
    for MBSE is not yet fully developed. Instead, various ad hoc models are considered
    across various stages of the product development process. With the introduction
    of services which are mostly defined by software elements, this incompatibility
    even exacerbates as services as software functions have nothing to do with physical
    functions. In addition, MBSE does not handle concepts like ‘adaptability’, or
    ‘customer experiences’ directly. These have to be first translated to parameters
    so that they can be modelled and manipulated with MBSE tools. This is perhaps
    extremely difficult if not impossible at all. Therefore, MBSE for smart product
    development suffers from the lack of orchestrated models, if not a single unified
    model. This variety of concepts and model types is manifested, e.g., in different
    standards such as ReqIF, SysML, FMI, and, but all of them come with limited semantic
    expressive power. In addition, there is no formal standardised method to model
    and represent function models, system architecture, and information generated
    by the operation of the smart product. If so many different types of models and
    standards are involved, traceability of data and decision making becomes extremely
    difficult to achieve due to organizational boundaries. In addition, due to a missing
    value model for data, information and digital models, it remains onerous to argue
    for investments in MBSE competence, education and model preparation. INCOSE conducted
    a survey comparing various MBSE methods and tools including UML and SysML [68].
    Comparing readiness for an integrated system approach, the concept of executable
    SysML was derived. In summary, the following limitations and shortcomings exist
    and need to be tackled for MBSE to become ready for the robust development of
    smart products. • There is no common understanding among practitioners about how
    MBSE works, for which purpose and in which cases its methods can and should be
    used. Most of them regard MBSE as a solution for current problems rather than
    a future direction. Many experts believe that there is a lack of maturity of the
    existing MBSE methodology. This can be interpreted in two ways; either the methodology
    really is incomplete, or the knowledge of practitioners is insufficient. • As
    it is rather complicated to use many different digital models correctly, dedicated
    education and training are desirable. This should cover various PLM tools, from
    CAD (E-CAD, M-CAD), CAE (both 3D and 1D) and various specification models (such
    as SysML or ReqIF) as well as integration tools and standards (such as FMI or
    OSLC). • Functional models and architecture models have not extensively been used
    in traditional engineering areas [236] although the use of functional models can
    be seen widely in precision engineering. This requires a new kind of system thinking
    away from typical embodiment design models. The anticipation of logical and physical
    dependencies out of those models remain unclear but offer significant opportunities
    to avoid late changes during the development process. • The extensive tool offering
    makes it difficult to clarify the core capabilities that are needed from a skill-set
    and competence point of view. • Today’s implicit engineering collaboration (mostly
    based on e-mails and direct oral communication) needs motivation to engage a model-based
    approach. Cultural challenges and better team-oriented review mechanisms for model-based
    engineering are critical in moving forward. In addition, currently, development
    engineers tend not to share certain model knowledge with others. • No powerful
    solutions exist yet in helping engineers to manage associated digital models without
    significant overhead. Therefore, it is a must to provide better and (partly) automated
    solutions for managing models. Engineers need a relief in orchestrating models
    in order to make an effective use of the new model richness for the anticipation
    of smart product behaviour and interactions. In response to these limitations,
    efforts are being made, as depicted in the next section, to develop methods and
    toolsets that can address at least some of the issues addressed above. One of
    them is the architecture-centric approach (e.g., [232]). According to ISO/IEC
    42010 [103], ‘architecture is fundamental concepts or properties of a system in
    its environment embodied in its elements, relationships, and in the principles
    of its design and evolution’. At this level of abstraction, e.g., behaviours will
    be represented by only parameters and their changes without any implementational
    level descriptions (i.e., mechanisms). This means architectural descriptions are
    domain-independent and units at architecture level will allow domain-independent
    compositional approach to design synthesis [71], [118], [119], [215]. 5.3. Industrial
    development of MBSE In the following, we will look at two recent approaches developed
    by vendors of integrated tools (Dassault Systèmes and Siemens). 5.3.1. Dassault
    systèmes’ approach to MBSE The developer of the 3DExperience platform, Dassault
    Systèmes, published a white paper on the development of smart products [34], which
    advises steps towards successful smart product development. • Define the target:
    Centralise and share information. Make cross-discipline requirements and design
    artefacts visible across the product development team to relevant stakeholders
    at each step of the development process. • Plan the product: Establish the smart
    product conceptual model right as early as possible. Use solutions that support
    systems modelling and simulate systems behaviours in all operation modes. • Validate
    early and often: Use early simulation at the product level with best visualization
    techniques. Facilitate informal and formal information sharing and interaction.
    • Design product architecture and validate to interfaces: Use solutions that provide
    visibility and collaboration at both the domain level and across disciplines to
    eventually ease collaborative decision making based on shared KPIs. • Aggressively
    manage change: change management must be effectively done in an integrated manner
    across disciplines. Extend change management scope beyond the current design.
    Use tools for traceability and change impact analysis. • Enable an integrated
    lifecycle view: Use modern formal data/ lifecycle management solutions as smart
    products demand more integration, transparency, and traceability. A use case of
    UAV design on the 3DExperience demonstrated the power of the MBSE approach [42].
    This used IEEE 1220 [99] to integrate requirements, functional, logical and physical
    views. Fig. 14 depicts the implementation of these views on the 3DExperience platform
    with the following features which helped a rather novice engineer to implement
    virtual flight simulation in the 3DVIA environment in a short period of time.
    Download : Download high-res image (773KB) Download : Download full-size image
    Fig. 14. The 3DEXPERIENCE Platform for Systems Engineering [42]. This demonstration
    achieved the following technical aspects. • Traceable requirement management.
    • Functional and logical design to define functional and components architectures
    with interfaces definition. • Behaviour modelling to add dynamic and static models
    of various engineering fields: These models are described in Modelica or coming
    from external modelers (such as Simulia for CFD simulation and Dymola for dynamics
    simulation, Simulink or SW code for control) through FMI. • Virtual physical prototypes
    to run experiences including 3D, model-in-loop, hardware-in-loop, and software-in-loop
    codes into in the verification and validation processes. • Automated report generation.
    An automotive multi-disciplinary case study was conducted. This demonstrated that
    the combination of the 3DExperience platform and MagicDraw (No Magic Inc.) was
    useful for, especially, architectural level systems design [72]. • Virtual physical
    prototypes to run experiences including 3D, model-in-loop, hardware-in-loop, and
    software-in-loop codes into in the verification and validation processes. • Automated
    report generation. An automotive multi-disciplinary case study was conducted.
    This demonstrated that the combination of the 3DExperience platform and MagicDraw
    (No Magic Inc.) was useful for, especially, architectural level systems design
    [72]. A comparative study compared design thinking [35] and complex systems engineering
    through experiments [61]. Design thinking focuses on creative aspects, while systems
    engineering focuses on vigorous modelling and precise simulation. It was proposed
    that a combinatory approach of design thinking and systems engineering was a desirable
    research direction. 5.3.2. Siemens approach to MBSE Siemens develops and offers
    a comprehensive suite of PLM software, such as NX (CAD), Tecnomatix (manufacturing
    process planning and simulation), Teamcenter (PLM), Simcenter (CAE), Mentor (electronics
    CAD) and Mindsphere (IoT environment) [213], across the full product lifecycle
    targeting industrial companies in a variety of industries focussed on smart product
    development and commissioning. The Siemens PLM approach to MBSE is based on a
    digitalisation strategy beginning with concept design through multi-domain simulation
    and verification across the full lifecycle of mechanical, electronics, and embedded
    software. Fig. 15 depicts the systems engineering methodology on the Siemens PLM
    platform. It is also based on the recognition that the digital twin as the virtual
    replica of the product can represent across a vast array of contributors. The
    digital twin is central to ensuring the product functions as intended and product
    behaviours can be verified to confirm performance, availability and reliability.
    Download : Download high-res image (669KB) Download : Download full-size image
    Fig. 15. Systems engineering methodology: Generative engineering to explore and
    optimize architectural combinations (courtesy of Siemens). With regard to intelligence
    of smart products, such as Autonomous ADS (Automated Driving System) functions,
    the system definition is key to representing the scope of the ADS with respect
    to its functional requirements and relationships. The ability to model each aspect
    of the vehicle, its environment, its occupants, and the relationships is paramount
    in verifying if the resulting product can meet regulatory compliance while also
    delivering the consumer features expected. In Ref. [217], a virtual validation
    and testing framework is reported that is based on a co-simulation platform of
    vehicle dynamics and traffic environment tools. To validate algorithms, it is
    imperative to take into consideration both vehicle dynamics and the wide potential
    of traffic scenarios. By simulating the algorithms in a software environment,
    it was made possible to frontload the verification of control software in the
    absence of hardware. In Ref. [257], optimisation design of powertrain architecture
    for hybrid vehicles was illustrated through a combination of automatically generated
    concepts with optimal control selection. This demonstrated the possibility of
    optimal design at the architecture level taking controls performance (e.g., energy
    management) into consideration. The increasing interest in hybrid electric vehicles
    imposes the need to provide computational support for design choices during the
    development of these vehicles. Future challenges include the expansion of domains
    beyond mechanical, electrical, electronic, and software with classical MBSE methodologies,
    extending into smart service design (e.g., mobility, traffic control, etc.). To
    do so, work is underway with Mindsphere applications in collaboration with Siemens’
    Smart City Division and eMobility inter-modal solutions to connect smart products
    to smart environments. It is also anticipated that the recent advances of IoT
    technologies will allow the collection of a massive amount of data at every stage
    of product life cycle, which will be stored in a digital twin creating a ‘hybrid
    model’ of products [254]. Fig. 16 depicts the digital twin concept used at Siemens,
    which covers the whole range of virtual product development processes. Download
    : Download high-res image (135KB) Download : Download full-size image Fig. 16.
    Digital twin concept at Siemens. 6. Discussions and future research directions
    6.1. Findings This section discusses our findings about smart product development
    capabilities and future research directions. The paper began with Chapter 1 which
    defined the smart product concept (Fig. 1) and clarified the data-driven value
    generation mechanism of smart products (Fig. 3). In designing smart products,
    it is crucial to deal with experiences as well as information generated at every
    life cycle stage of smart products appropriately. Chapter 2 reviewed some existing
    smart products and summarised their functional capabilities and technical features
    of smart products (such as intelligence and resilience). Chapter 3 overviewed
    technologies that need to be implemented in smart products, including AI technologies
    and data analytics. Chapter 4 discussed technologies to be used in developing
    smart products such as traditional product development methods, service development
    methods, systems engineering, digital engineering (including digital twin), systems
    engineering, and MBSE. Regarding services, we seem to have sufficient knowledge
    to process information collected at various life cycle stages of smart products
    for the purposes of control and management of product life cycles. However, we
    have insufficient knowledge about how to convert that information useful in designing
    smart products and services. In addition to this, we do not have a formal methodology
    to develop smart products considering the entire scope of the ecosystem. Chapter
    5 focused on challenges of these developments, among others, of MBSE. Clearly
    methodologies to deal with services consistently with other domains are yet to
    be developed. In addition, it seems that multi-disciplinarity of models is best
    handled by developing translational standards. In the following sections, we will
    discuss future research needs and trends identified in previous sections. 6.2.
    Survey on future research needs Although innovation and business model potentials
    of smart products within Industry 4.0 are increasingly recognised by industrial
    companies and research institutes, only few research projects and activities address
    the development of smart products topics comprehensively. Two studies [4], [5]
    in collaboration with about 100 international leading engineering experts have
    identified research deficiencies in the context of smart product development and
    defined following groups of research needs for the future: • Procedural approaches
    and generic methods for smart product engineering. • System design of smart products.
    • Domain-specific design of smart product components. • System integration, validation
    and verification of smart product components. • Product data and process management.
    • Smart product IT infrastructure. In the first area of procedural approaches
    and generic methods, following main needs for research have been identified: •
    Extension of the V-model of systems engineering to include service components
    as well as cooperative and agile work methods. • Extension of the smart product
    development phase: During, e.g., the usage phase, some sort of design activities
    can take place for reconfiguration purposes. This means application of reconfiguration
    to all phases of the product lifecycle, in particular, to the usage phase (run-time
    reconfiguration and life-time reconfiguration). • Establishing new disruptive
    approaches for the development of innovative smart products. Regarding the system
    design of smart products, the following needs were identified: • Development of
    ‘design for smart X’ in which X stands for a life cycle stage. This also includes
    IT tools to process feedback information from physical products [148]. • Consideration
    and modelling of business models, smart services, system interfaces and product
    cloud platforms for such business models during the smart product’s system design
    phase. • Use of feedback information from previous product generations in the
    system design stage. • Extension of existing requirement engineering and management
    methods for the smart product design. • Development of intuitive modelling and
    visualisation techniques for incomplete functional structures considering multi-layer
    abstractions. • Development of models for a smart product’s communicational, interactional
    and behavioural aspects. Domain-specific design of product components lacks the
    following research topics: • Designing smart human-machine interactions. • Virtual
    functional simulation and validation of a component’s behaviour including service
    components using multi-physics methods. • Reflecting feedback information from
    downstream design phases during the development and optimization of individual
    product components, including new design for smart X methods and security requirements.
    • Designing digital/virtual product twins, and of RAMI 4.0 administration shells
    [185] and product cloud platforms. The main research needs for system integration,
    validation and verification of smart products are: • Review and certification
    of a smart product with the objective to reduce the time required for validation
    and verification • Field data and feedback information for validation purposes
    from the product’s usage phase. • Hybrid validation of real and virtual smart
    product components (hardware in the loop, software in the loop, human in the loop).
    • Integration of customers and stakeholders into the product validation. In the
    context of the product data and process management, the following research topics
    have been suggested: • Integration of all virtual models (e.g. communicational,
    interactional and behavioural models) into PLM. • Extension of existing product
    lifecycle management approaches with field data of real product instances. • Instance-based
    management of virtual product models (management of the digital/virtual product
    twin). • Integration of flexible and agile methods into engineering workflows.
    • Integration of product reconfiguration concepts into the product lifecycle management.
    Research needs regarding IT infrastructures are: • Extension of existing neutral
    data formats (e.g. STEP and JT). • Definition of comprehensive and application-specific,
    semantically rich data models (e.g., ontologies and semantic networks). • Use
    of cloud platforms as partial smart product components as well as a part of engineering
    IT tools. • Open software system architectures for engineering IT tools. Additionally,
    engineering reference models and solution libraries for the development of smart
    products are yet to be addressed by scientific work. Furthermore, pervasively
    a high need for standardization in the context of smart product engineering and
    design has been identified. 6.3. Digital twin In Section 4.3, it was argued that
    digital twin taking advantage of PLM should be combined with IoT in the future.
    Data is collected using the IoT technologies at every life cycle stage of smart
    products starting from development, production, logistics, operation, maintenance,
    and end-of-life. The data will be converted to more useful information using big
    data and AI technologies and should be used for other activities. Fig. 17 illustrates
    the roles of digital twin in the context of digital engineering [145], [146].
    First, the smart product will be designed, and its product model will be stored
    in the PLM as a digital master. From the digital master, digital prototypes are
    generated for various types of evaluation through simulation (or analysis). The
    results of the evaluation will be reflected in design improvements. Smart products
    will be produced from the digital master, released, and operated as smart product
    service system. Its life cycle data will be collected and stored as an as-is model
    in the digital twin. Download : Download high-res image (131KB) Download : Download
    full-size image Fig. 17. Smart products and digital master, digital prototype
    and digital twin. In Fig. 17, there is an interface between the product model
    and the smart product service system through which production takes place. The
    interface between the smart product service system and the as-is model is the
    IoT sensors and any other data collection mechanisms. The feedback mechanism,
    particularly the one from the as-is model to the product model, is not yet sufficiently
    understood, which is a future research topic. At the same time, the figure stresses
    the importance of the information backbone in development cycles as well as the
    necessity of 4D-based digital twin (i.e., including time scale) rather than only
    3D-based digital twin. 6.4. Smart digital engineering This section illustrates
    a new research topic of ‘smart digital engineering’, which is now tackled within
    one of the authors’ laboratory [36], [112], [119], [223]. Smart digital engineering
    represents technology and engineering capabilities required for smart product
    development and may include the following four types of Smart Digital Engineering
    Capabilities (SDEC) [223]. In each of these areas, possible research topics will
    be explained. • Smart Digital Engineering • Smart Virtual Engineering • Smart
    Model-Based Systems Engineering • Smart Lifecycle Engineering 6.4.1. Smart digital
    engineering capabilities Digital engineering, in general, describes capabilities
    of creating digital product models, of handling digital models in the PLM in a
    consistent manner and of generating representations using the information sets
    within the PLM following digital workflows. This leads to the following definition.
    SDEC will address new digital assistance and intelligence in creating, revising,
    exploring, collaborating, testing, signing-off and releasing diverse sets of traceable
    artefacts as part of digital engineering workflows, processes and activities.
    From this definition, clearly digital engineering workflows, processes, and activities
    must be linked to behaviours of engineer (i.e., digital behaviour). Therefore,
    the first Smart Engineering Capabilities is: • SDEC #1: Identification of digital
    work behaviour (type: digital) Location within the EOS (Engineering Operating
    System): EOS is a system that controls and operates various types of a human engineer’s
    cognitive activities during product development within the triangle of artefacts,
    processes, and (IT) tools [143], [144] (see Fig. 18). A work behaviour of the
    engineer is located at the intersection among ‘virtual and physical artefacts’
    (digital models and data), ‘IT tools and systems’, and ‘process and organisations’.
    Download : Download high-res image (49KB) Download : Download full-size image
    Fig. 18. Engineering Operating System (EOS) [144]. Problem description: Engineers
    and their management face problems to properly match the type of digital work
    with the digital computer application during typical engineering work patterns
    and associated collaboration scenarios. Solution requirement description: In order
    to improve engineering activities patterns and styles with respect to quality,
    efficiency, relevance and compatibilities, it must be possible to seamlessly choose
    the best digital work behaviours for individuals and teams. Since the amount of
    digital work and its associated activities are steadily growing, optimised low-cost
    (time- and money-wise) IT solutions are needed, not only for individual and collaborative
    technical tasks but also administrative tasks. Current research concepts and demonstrators:
    The influence of digitised work environments on engineering activities has been
    neglected so far, but it is necessary for the scientific research community to
    look into activities of information procurement, agreements and documentation
    in computer applications [143]. Potential first implementation experiences: Individual
    digital work behaviour patterns of engineers at a computer workstation can be
    capturable and related to specific development activities. This is achieved by
    automated identification and comprehensive analysis of such activities with respect
    to the development task, digital tools in interplay, work processes and digital
    models [144]. 6.4.2. Smart virtual engineering capabilities Virtual engineering
    addresses a range of scientific, technological, organizational and business activities
    using advanced information and communication technology and methods with a major
    focus on process and systems integration, immersive visualization and ‘human-machine-human’
    interaction [95], potentially combined in so-called Synthetic Environments [55].
    The overall aim of virtual engineering is the early, continuous, networked (process
    view) and integrated (system view) support of the entire product life cycle concerning
    collaboration, assessment, concretisation and validation of products and processes
    with participation of all partners using virtual artefacts. • SDEC #2: Smart hybrid
    prototyping (type: virtual) Location within the EOS: The idea of smart virtual
    engineering is validation as early as possible in the product development process
    (‘process and organisation’ in Fig. 18). For this purpose, the most suitable virtualization
    tools are selected in the ‘tools and IT systems’ area. Then, appropriate models
    are built in the virtual artefacts area to be validated with, e.g., user interfaces
    with VR technologies again in the ‘tools and IT systems’ area. Problem description:
    The requirements for the new engineering capability of SHP (Smart Hybrid Prototype)
    is derived from higher-level objectives to fix industrial challenges of virtual
    engineering, e.g. the growing complexity of product and process requirements while
    drastically reducing time-to-market and classical physical product prototyping.
    Additionally, there is a need to ‘physically’ experience virtual models (e.g.,
    CAD models). This can be achieved by using haptic devices, which enable force-feedback,
    thereby, interaction with virtual models. Solution requirement description: The
    SHP approach is defined as a combination of physical prototypes and digital models
    in a virtual reality environment in order to enable a realistic experiencing of
    a mechatronic system [220]. Furthermore, it enables a multimodal experience of
    mechatronic products, which means that the human factor is given much greater
    prominence when validating the overall system in real-time. Current research concepts
    and demonstrators: These include visualization technologies such as virtual, augmented
    and mixed reality, modelling and simulation technologies with physics-based game
    engines or professional tools such as MATLAB/Simulink or Dymola, interaction technologies
    and human machine interfaces (HMIs) like haptic interfaces and tangible user interfaces
    (TUIs). Potential first implementation experiences: The SHP technology was validated
    by developing, assembling and testing a passenger car’s tailgate device [25].
    The tailgate test setup is shown in Fig. 19. Download : Download high-res image
    (157KB) Download : Download full-size image Fig. 19. SHP demonstrator [25]. 6.4.3.
    Smart (model-based) systems engineering capabilities Systems engineering addresses
    issues such as requirements engineering, reliability, logistics, coordination
    of different teams, testing and evaluation, maintainability and many other disciplines
    necessary for successful system development, design, implementation, and ultimate
    decommission. Its scope needs to be expanded when dealing with large or complex
    projects. Systems engineering deals with work-processes, optimization methods,
    and risk management tools in such projects. • SDEC #3: Model intelligence for
    IoT and Industry 4.0 (type: model based) Location within the EOS: From product
    development up to commissioning and final realization of the product/production
    system, each process step requires different types of digital models and their
    respective data. This means that MBSE sits in the ‘activities’ area in Fig. 17.
    MBSE operations need to be processed by IT tools and applications that allow lossless
    information transition and storage as well as accessibility during lifecycle phases,
    across engineering domains and across company borders. The new challenge here
    is to establish a meaningful feedback to design channel: information from product
    operation back into design and engineering phases and to provide services and
    capabilities to handle models and data appropriately. Problem description: MBSE
    methodologies and tools are required because smart products are software intensive.
    This is even getting more so, because of the introduction of IoT technologies
    such as Industry 4.0 for smart factories. However, there are no commonly accepted
    and widespread technologies and formats of how to define interconnectivity and
    services of smart products during the product development phases. Solution requirement
    description: MBSE calls for sophisticated multi-disciplinary models that integrate
    all domains of engineering. There can be two approaches to realise such an integrated
    model. One is to develop a truly integrated model that can cover many different
    disciplines, but this is impossible unless the level of descriptions is high-level
    without much details. One such a model could be the architectural level model
    discussed in Section 5.2. The other approach is to develop an integrated framework
    that can accommodate different types of models. PLM systems are typically based
    on this approach. Current research concepts and demonstrators: An example demonstration
    cell ‘Smart Factory 4.0’ is being developed at Fraunhofer-IPK in Berlin, Germany.
    It is a miniature production line for conducting research and acts as a testbed
    for tool and component vendors. The Smart Factory itself can be considered smart
    to an extent that it manufactures individualized batch-size products right after
    the customer has entered his/her product definition into the system. The basis
    here is a set of simulation models that interact intelligently with each other
    and based upon sensor data created in the physical as well as in the virtual production
    line. Both worlds are inter-connected with IoT technology. Potential first implementation
    experiences: The Fraunhofer-IPK implementation can be considered the first implementation
    of the kind. 6.4.4. Smart life cycle engineering capabilities Smart products and
    services require new capabilities in connectivity of information and data sets
    across all lifecycle phases. Additionally, new IT platforms (e.g. IoT) and technologies
    (e.g. CPS) change common methodologies in engineering design, business development
    and lifecycle thinking. Some examples of this ‘smart life cycle engineering’ have
    been discussed in Section 2.2.3. • SDEC #4: Smart services (type: life cycle)
    Location within the EOS: Products are becoming smarter and services are offered
    across the entire life cycle. In the EOS in Fig. 17, the digital and physical
    artefacts are changing in the way they exist in the life cycle, which coincides
    with the evolution of the IT tools, applications and systems. This means that
    traditional engineering companies will have to adapt their engineering processes
    and organization. For instance, it is clear that, as the IoT technologies advance,
    products will be equipped with more sensors, which will generate more information
    of different types. These will force the IT infrastructure to change and eventually,
    which will change the business as well as products, which we have seen in the
    cases of Rolls-Royce [91] and Komatsu [109], [116]. Problem description: Smart
    products and smart services require new engineering capabilities for development,
    manufacturing, use and end-of-life treatment. For these, dedicated data and connectivity
    management is required. Solution requirement description: Solutions are needed
    for both engineering processes and life cycle processes. Harmonized interaction
    of artefacts requires synchronized data management and information standards up
    to business model including PDM/PLM and IoT platforms. Current research concepts
    and demonstrators: In the future, data about business as well as consumer behaviours
    becomes the main resource for the data-driven business paradigm. Technically,
    this means big data technologies will play a key role here. Potential first implementation
    experiences: Data driven engineering is the major challenge in smart life cycle
    engineering. Several data levels and data sets (e.g., sensor data, product system
    behaviour data) need to be combined, processed and analysed. Based on that, engineering
    conclusions can be drawn. Different heterogeneous data needs to be linked and
    be prepared for analysis. Consequently, semantic level data integration seems
    to be a key enabler for gaining serious results in the understanding of engineering.
    7. Summary and conclusions 7.1. Summary This paper attempted to shape the concept
    of smart products and to identify issues and challenges of their development from
    the viewpoint of engineering capabilities. Overall, the increasing population
    of smart products will drive significant changes to the conventional and to the
    current digital transformed engineering practice. First, the concept of smart
    products was defined as CPS integrating internet-based services, which means smart
    products are software intensive, data driven, and service conscious. Smart products
    generate value in two ways (Fig. 3). One is through smart services that will increase
    the value of user experiences. The other is through operational data and information
    created at every life cycle stage. This has mostly business value. In Chapter
    2, various types of smart products were briefly reviewed, followed by identification
    and analysis of commonly found features of smart products. Chapter 3 discussed
    product technologies that will be used or implemented within smart products. Among
    them, it is worthwhile to focus on AI, big data and data analytics. Chapter 4
    reviewed product development technologies (including those for service development).
    From recent development, the paper picked up some important technologies including
    service development methods, digital engineering, and model-based systems engineering
    (MBSE). While PLM and ERP are widely used in product development, it is important
    to note that data collected with IoT technologies during the life cycle of smart
    products needs to be stored and properly processed. For this purpose, the concept
    of digital twin seems promising. MBSE is useful to co-develop multi-disciplinary
    complex CPS, in particular, those software intensive smart products. Chapter 5
    discussed insufficiency and weak points of currently available development methods
    and tools. Among others, the following five weak points were identified. • Many
    smart products specific aspects (such as resilience) lack design methods (i.e.,
    design for resilience). • Dealing with software intensive nature of smart products
    and resulting multi-disciplinarity, MBSE is considered promising from the viewpoint
    of co-development, but at this stage it still needs further development. Among
    others, at this moment, a single unified model about various aspects is not possible,
    which means conversion of models are left with ad hoc interfacing standards. •
    Service design is not well connected to other elements of smart product development
    as PSS. • Capturing and storing information generated at every life cycle stage
    of smart product are not that difficult. However, our knowledge on how to feed
    that information to design is still poor. Chapter 6 first described the outcome
    of an industrial survey about smart product development. This largely matched
    our findings, especially regarding the immaturity of theoretical development,
    and the lack of unified theory integrated design. This chapter also proposed the
    concept of smart digital engineering. 7.2. Conclusions The concept of smart products
    is now getting clearer, i.e., CPS with integrated internet-based services, which
    suggests software-intensiveness, data-driven, and multi-disciplinarity. However,
    the development of smart products is not just about introducing more software
    related capabilities. It is significantly different from the development of previous
    generations. • Smart products are software intensive and the degree of multi-disciplinarity
    is much higher than, e.g., traditional mechatronics products, because the role
    of information is more than control. This suggests the architecture of smart products
    needs to be well established and clearly defined. • The data-driven aspect of
    service elements coming from value creation through life cycle related information
    needs to be modelled, presented and utilised appropriately for smart product development.
    • Information flow within the ecosystem of smart products is complicated and,
    consequently, the entire product development can be very complex. • Decision-making
    processes during the product development become mutually dependent, thus controlling
    the product development cycle can be extremely difficult. This means the currently
    available prescriptive development models (e.g., V-model) can be inappropriate.
    • The role of digital twins will be increasing and requires further research (e.g.,
    to extend it to 4D models). • MBSE seems a promising approach to tackle multi-disciplinary
    nature integrating four relevant approaches (i.e., traditional PLM, systems engineering,
    software engineering, and dynamic systems modelling). While this requires a unified
    single object model, this is currently replaced with a group of translational
    interface standards. Further research is needed to establish the sound foundation
    of MBSE for smart product development. • From the viewpoint of education and training,
    solid competence in digital engineering, software engineering, AI algorithms,
    and MBSE will be needed for engineers and designers of smart products. 7.3. Future
    outlook • It is not difficult to imagine that future smart products will be enjoying
    faster and better connectedness, intelligence, and sensors leading to step-changing
    improvements. For instance, far better vision capabilities will be installed in
    robots, thereby improving material handling capabilities. New applications of
    such robots will be more non-traditional situations like home, office, and society
    rather than factories. • New capabilities that are not really present nowadays
    include autonomously reconfigurable products adapting to many unforeseen situations
    and extremely resilient products requiring no maintenance. For these products,
    validation and verification can be based on self-learning elements by adjusted
    algorithms. • Research-wise, researchers and industry have to mobilize aligned
    efforts to sketch out a complete foundation consisting advanced theories about
    cross-domain models that can be used for future MBSE. Acknowledgments The authors
    would like to thank for the contributions and support from Dassault Systèmes,
    in particular, from Philippe Laufer, Eliane Fourgeau and Gauthier Fanmuy. They
    would like to acknowledge the contributions and support from Pete Lamoureux of
    Siemens AG. References [1] A. Abid, M. Hammadi, J.Y. Choley, et al. A Holonic-Based
    Method for Design Process of Cyber-Physical Reconfigurable Systems, 2016 International
    Symposium on Systems Engineering, IEEE (2016), 10.1109/SysEng.2016.7753180 Google
    Scholar [2] M. Abramovici Future Trends in Product Lifecycle Management (PLM)
    Proceedings of the 17th CIRP Design Conference (2007), pp. 665-674 CrossRefView
    in ScopusGoogle Scholar [3] M. Abramovici Smart Products, CIRP Encyclopedia of
    Production Engineering Springer (2015), 10.1007/978-3-642-35950-7_16785-1 Google
    Scholar [4] M. Abramovici Engineering Smarter Produkte und Services Plattform
    (Engineering of Smart Products and Services) Industrie 4.0 Studie, Acatech, München
    (2018) 46 pages. (In German) Google Scholar [5] M. Abramovici, O. Herzog Engineering
    im Umfeld von Industrie 4.0. (Engineering in the Context of Industry 4.0) Herbert
    Utz Verlag (2016) (In German) Google Scholar [6] M. Abramovici, J.C. Göbel, P.
    Savarino Virtual Twins as Integrative Components of Smart Products IFIP Advances
    in Information and Communication Technology, 492 (2016), 10.1007/978-3-319-54660-5_20
    Google Scholar [7] M. Abramovici, J.C. Göbel, P. Savarino Reconfiguration of Smart
    Products During Their Use Phase Based on Virtual Product Twins Annals of CIRP,
    66 (1) (2017), pp. 165-168 View PDFView articleView in ScopusGoogle Scholar [8]
    M. Abramovici, J.C. Göbel, P. Savarino, P. Gebus Towards Smart Product Lifecycle
    Management With an Integrated Reconfiguration Management IFIP Advances in Information
    and Communication Technology, 517 (2017), 10.1007/978-3-319-72905-3_43 Google
    Scholar [9] M. Abramovici, M. Neubach Knowledge-Based Representation and Analysis
    of Product Use Information for Feedback to Design Proceedings of 2nd CIRP International
    Seminar on IPS2, Shaker (2009) ISBN: 978-3-8322-8473-2 Google Scholar [10] M.
    Abramovici, M. Neubach, M. Fathi, A. Holland Knowledge-Based Feedback of Product
    Use Information into Product Development Proceedings of 17th International Conference
    on Engineering Design, 8 (2009) ISBN: 978-1904670124 Google Scholar [11] M. Abramovici,
    A. Quezada, T. Schindler MEDA: Manufacturing Energy Demand Assessment Method for
    Future Production Planning and Product Development Proceedings of 11th Global
    Conference on Sustainable Manufacturing (2013) Google Scholar [12] M. Abramovici,
    R. Stark Smart Product Engineering Springer, Berlin, Heidelberg (2013) ISBN: 978-3-642-30816-1
    Google Scholar [13] M. Abramovici, A. Lindner Providing Product Use Knowledge
    for the Design of Improved Product Generations Annals of CIRP, 60 (1) (2011),
    pp. 211-214 View PDFView articleView in ScopusGoogle Scholar [14] M. Abramovici,
    A. Lindner, F. Walde, M. Fathi, S. Dienst Decision Support for Improving the Design
    of Hydraulic Systems by Leading Feedback into Product Development Proceedings
    of 18th International Conference on Engineering Design 2011, 9 (2011) ISBN: 978-1-904670-32-2
    Google Scholar [15] M. Achtelik, M. Achtelik, S. Weiss, R. Siegwart Onboard IMU
    and Monocular Vision Based Control for MAVs in Unknown in- and Outdoor Environments
    Proceedings of IEEE ICRA 2011 (2011), pp. 3056-3063 CrossRefView in ScopusGoogle
    Scholar [16] M. Aeberhard, S. Rauch, M. Bahram, et al. Experience, Results and
    Lessons Learned from Automated Driving on Germany’s Highways IEEE Intelligent
    Transportation Systems Magazine, 7 (1) (2015), pp. 42-57 View in ScopusGoogle
    Scholar [17] M. Agiwal, A. Roy, N. Saxena Next Generation 5G Wireless Networks:
    A Comprehensive Survey IEEE Communications Surveys and Tutorials, 18 (3) (2016),
    pp. 1617-1655 View in ScopusGoogle Scholar [18] R. Agrawal, T. Imieliński, A.
    Swami Mining Association Rules Between Sets of Items in Large Databases ACM SIGMOD
    Record, 22 (2) (1993), pp. 207-216 Google Scholar [19] S.H. Ahmed, G. Kim, D.
    Kim Cyber Physical System: Architecture, Applications and Research Challenges,
    IFIP Wireless Days IEEE (2013), 10.1109/WD.2013.6686528 Google Scholar [20] T.Z.
    Ahram, W. Karwowski, M.M. Soares Embedded Systems Engineering for Products and
    Services Design Work, 41 (2012), pp. 941-948 CrossRefView in ScopusGoogle Scholar
    [21] A. Al-Fuqaha, M. Guizani, M. Mohammadi, M. Aledhari, M. Ayyash Internet of
    Things: A Survey on Enabling Technologies, Protocols, and Applications IEEE Communications
    Surveys and Tutorials, 17 (4) (2015), pp. 2347-2376 View in ScopusGoogle Scholar
    [22] A.A. Alvarez Cabrera, M.J. Foeken, O.A. Tekin, et al. Towards Automation
    of Control Software: A Review of Challenges in Mechatronic Design Mechatronics,
    20 (8) (2010), pp. 876-886 View PDFView articleView in ScopusGoogle Scholar [23]
    T. Arai, Y. Shimomura Proposal of Service CAD System—A Tool for Service Engineering
    Annals of CIRP, 53 (1) (2004), pp. 397-400 View PDFView articleView in ScopusGoogle
    Scholar [24] I. Asimov Runaround I, Robot (The Isaac Asimov Collection Ed.), Doubleday,
    New York NY (1950) p. 40 Google Scholar [25] M. Auricht, K. Lindow, R. Stark Erlebbare
    Entwicklung und Absicherung technischer Systeme, Stuttgarter Symposium für Produktentwicklung
    (SSP) Fraunhofer Verlag, Stuttgart (2013), pp. 8-17 ISBN: 978-3-8396-0573-8 Google
    Scholar [26] AUTOSAR (Automotive Open System Architecture), http://www.autosar.org.
    (Accessed 15 April 2019). Google Scholar [27] L. Atzori, A. Iera, G. Morabito
    The Internet of Things: A Survey Computer Networks, 54 (15) (2010), pp. 2787-2805
    View PDFView articleView in ScopusGoogle Scholar [28] T.S. Baines, H.W. Lightfoot,
    S. Evans, Neely, et al. State-of-the-Art in Product-Service Systems Proceedings
    of the Institution of Mechanical Engineers, Part B, 221 (10) (2007), pp. 1543-1552
    View in ScopusGoogle Scholar [29] A. Barbato, A. Capone, M. Rodolfi, D. Tagliaferri
    Forecasting the Usage of Household Appliances Through Power Meter Sensors for
    Demand Management in the Smart Grid Proceedings of 2011 IEEE International Conference
    on Smart Grid Communications (2011), 10.1109/SmartGridComm.2011.6102356 Google
    Scholar [30] D.G. Bekas, K. Tsirka, D. Baltzis, A.S. Paipetis Self-Healing Materials:
    A Review of Advances in Materials, Evaluation, Characterization and Monitoring
    Techniques Composites Part B: Engineering, 87 (2016), pp. 92-119 View PDFView
    articleView in ScopusGoogle Scholar [31] Z.M. Bi, S.Y.T. Lang, M. Verner, P. Orban
    Development of Reconfigurable Machines Advanced Manufacturing Technology, 39 (11-12)
    (2008), pp. 1227-1251 CrossRefView in ScopusGoogle Scholar [32] B.J. Blaiszik,
    S.L.B. Kramer, S.C. Olugebefola, et al. Self-Healing Polymers and Composites Annual
    Review of Materials Research, 40 (2010), pp. 179-211 CrossRefView in ScopusGoogle
    Scholar [33] K. Blois (Ed.), The Oxford Textbook of Marketing Paperback, OUP Oxford
    (2000) [34] Brown J (2014) Mastering the Development of Smart Products, Tech-Clarity,
    https://www.3ds.com/industries/high-tech/resource-center/white-papers/mastering-the-development-of-smart-products/
    (Accessed 15 April 2019). Google Scholar [35] T. Brown Design Thinking Harvard
    Business Review, 86 (6) (2008), pp. 84-92 Google Scholar [36] Ch. Buchholz, T.
    Vorsatz, S. Kind, R. Stark SHPbench—A Smart Hybrid Prototyping Based Environment
    for Early Testing, Verification and (User Based) Validation of Advanced Driver
    Assistant Systems of Cars Procedia CIRP, 60 (2017), pp. 139-144 View PDFView articleView
    in ScopusGoogle Scholar [37] Burkacky O, Deichmann J, Doll G, Knochenhauer C (2018)
    Rethinking Car Software and Electronics Architecture, https://www.mckinsey.com/industries/automotive-and-assembly/our-insights/rethinking-car-software-and-electronics-architecture
    (Accessed 15 April 2019). Google Scholar [38] A. Butler Amazon Echo: The Ultimate
    Beginner’s Guide to Amazon Echo CreateSpace Independent Publishing Platform (2016)
    ISBN: 978-1539473589 Google Scholar [39] M. Campbell, A.J. Hoane, F. Hsu Deep
    Blue Artificial Intelligence, 134 (1–2) (2002), pp. 57-83 View PDFView articleView
    in ScopusGoogle Scholar [40] A. Canedo Industrial IoT Lifecycle via Digital Twins
    Proceedings Eleventh IEEE/ACM/IFIP International Conference on Hardware/Software
    Codesign and System Synthesis (2016), p. 29 Google Scholar [41] S. Cavalieri,
    G. Pezzotta Product-Service Systems Engineering: State of the Art and Research
    Challenges Computers in Industry, 63 (4) (2012), pp. 278-288 View PDFView articleView
    in ScopusGoogle Scholar [42] F. Chauvin, G. Fanmuy System Engineering on 3DEXPERIENCE
    Platform–UAS Use Case Proceedings of the Poster Workshop at the 2014 Complex Systems
    Design & Management International Conference co-located with 5th International
    Conference on Complex System Design & Management (CSD&M 2014) (2014), pp. 113-126
    http://ceur-ws.org/Vol-1234/paper-11.pdf View in ScopusGoogle Scholar [43] M.
    Chan, D. Estève, C. Escriba, E. Campo A Review of Smart Homes-Present State and
    Future Challenges Computer Methods and Programs in Biomedicine, 91 (1) (2008),
    pp. 55-81 View PDFView articleView in ScopusGoogle Scholar [44] M. Cheminod, L.
    Durante, A. Valenzano Review of Security Issues in Industrial Networks IEEE Transactions
    on Industrial Informatics, 9 (1) (2013), pp. 277-293 CrossRefView in ScopusGoogle
    Scholar [45] Y. Chen, Z.L. Liu, Y.B. Xie A Knowledge-Based Framework for Creative
    Conceptual Design of Multi-Disciplinary Systems Computer Aided Design, 44 (2)
    (2012), pp. 146-153 View PDFView articleGoogle Scholar [46] C. Chen, Y. Liu, M.
    Kumar, J. Qin Energy Consumption Modelling Using Deep Learning Technique—A Case
    Study of EAF Procedia CIRP, 72 (2018), pp. 1063-1068 View PDFView articleView
    in ScopusGoogle Scholar [47] Y. Cherdantseva, P. Burnap, A. Blyth, et al. A Review
    of Cyber Security Risk Assessment Methods for SCADA Systems Computers and Security,
    56 (2016), pp. 1-27 View PDFView articleView in ScopusGoogle Scholar [48] S. Choi,
    K. Jung, S.D. Noh Virtual Reality Applications in Manufacturing Industries: Past
    Research, Present Findings, and Future Directions Concurrent Engineering, 23 (1)
    (2015), pp. 40-63 Google Scholar [49] D. Cimino, A. Ferrero, L. Queirolo, et al.
    A Low-Cost, Open-Source Cyber Physical System for Automated, Remotely Controlled
    Precision Agriculture Lecture Notes in Electrical Engineering, 409 (2017), pp.
    191-203 CrossRefView in ScopusGoogle Scholar [50] G. Chryssolouris, D. Mavrikios,
    N. Papakostas, et al. Digital Manufacturing: History, Perspectives, and Outlook
    Proceedings of the Institution of Mechanical Engineers, Part B, 223 (5) (2009),
    pp. 451-462 View in ScopusGoogle Scholar [51] M.A. Cusumano Platforms Versus Products:
    Observations from the Literature and History S.J. Kahl, B.S. Silverman, M.A. Cusumano
    (Eds.), History and Strategy, Advances in Strategic Management, vol. 29 (2012),
    pp. 35-67 View in ScopusGoogle Scholar [52] G. Da Silveira, D. Borenstein, F.S.
    Fogliatto Mass Customization: Literature Review and Research Directions Production
    Economics, 72 (1) (2001), pp. 1-13 View PDFView articleView in ScopusGoogle Scholar
    [53] V. D’Amelio, M.K. Chmarra, T. Tomiyama Early Design Interference Detection
    Based on Qualitative Physics Research in Engineering Design, 22 (4) (2011), pp.
    223-243 CrossRefView in ScopusGoogle Scholar [54] Th. Damerau, H. Hayka, S. Neumeyer,
    et al. Intelligent Information Technologies to Enable Next Generation PLM Product
    Lifecycle Management for a Global Market, Springer (2014), pp. 485-495 ISBN: 978-3-662-45936-2
    Google Scholar [55] R. Damgrave, E. Lutters Enhancing Development Trajectories
    of Synthetic Environments Annals of CIRP, 67 (1) (2018), pp. 137-140 View PDFView
    articleView in ScopusGoogle Scholar [56] K. Darvish, F. Wanderlingh, B. Bruno,
    et al. Flexible Human—Robot Cooperation Models for Assisted Shop-Floor Tasks Mechatronics,
    51 (2018), pp. 97-114 View PDFView articleView in ScopusGoogle Scholar [57] H.
    Dawid, R. Decker, T. Hermann, et al. Management Science in the Era of Smart Consumer
    Products: Challenges and Research Perspectives Central European Journal of Operations
    Research, 25 (1) (2017), pp. 203-230 CrossRefView in ScopusGoogle Scholar [58]
    De S. Dutra, D. Silva Jr Product-Service Architecture (PSA): Toward a Service
    Engineering Perspective in Industry 4.0 IFAC-PapersOnLine, 49 (31) (2016), pp.
    91-96 Google Scholar [59] M.S. De Brito, S. Hoque, R. Steinke, et al. Application
    of the Fog Computing Paradigm to Smart Factories and Cyber-Physical Systems Transactions
    on Emerging Telecommunications Technologies, 29 (4) (2018), 10.1002/ett.3184 Google
    Scholar [60] M. Di Natale, A.L. Sangiovanni-Vincentelli Moving from Federated
    to Integrated Architectures in Automotive: The Role of Standards, Methods and
    Tools Proceedings of the IEEE, 98 (4) (2010), pp. 603-620 View in ScopusGoogle
    Scholar [61] A. Durantin, G. Fanmuy, S. Miet, V. Pegon Disruptive Innovation in
    Complex Systems Proceedings Complex Systems Design & Management (CSDM 2016) (2017),
    pp. 41-56 CrossRefGoogle Scholar [62] B. Edrington, B. Zhao, A. Hansel, et al.
    Machine Monitoring System Based on MTConnect Technology Procedia CIRP, 22 (2014),
    pp. 92-97 View PDFView articleView in ScopusGoogle Scholar [63] S.J. Eichhorn,
    A. Dufresne, M. Aranguren, et al. Review: Current International Research into
    Cellulose Nanofibres and Nanocomposites Journal of Materials Science, 45 (1) (2010),
    pp. 1-33 CrossRefView in ScopusGoogle Scholar [64] H.A. ElMaraghy Flexible and
    Reconfigurable Manufacturing Systems Paradigms Flexible Manufacturing Systems,
    17 (4) (2005), pp. 261-276 CrossRefView in ScopusGoogle Scholar [65] W. ElMaraghy,
    H. ElMaraghy, T. Tomiyama, L. Monostori Complexity in Engineering Design and Manufacturing
    Annals of CIRP, 61 (2) (2012), pp. 793-814 View PDFView articleView in ScopusGoogle
    Scholar [66] D. Elsy, P. Jennings, R. Roy (Eds.), Through-life Engineering Services
    for Mobility as a Service, High Value Manufacturing Catapult, Warwick Manufacturing
    Group, Cranfield University (2018) 32 pages [67] T. Erl Service-Oriented Architecture:
    Concepts, Technology, and Design Prentice Hall (2005) ISBN: 978-0131858589 Google
    Scholar [68] Estefan JA (2008) Survey of Model-Based Systems Engineering (MBSE)
    Methodologies, INCOSE MBSE Initiative, INCOSE-TD-2007-003-02, http://www.omgsysml.org/MBSE_Methodology_Survey_RevB.pdf
    (Accessed 15 April 2019). Google Scholar [69] European Regulators Group for Electricity
    and Gas Position Paper on Smart Grids, An ERGER Conclusions Paper (2010) Ref:
    E10-EQS-38-05 ERGEG, https://www.ceer.eu/documents/104400/-/-/3cf25df7-88cb-3ce3-f838-aa2d012ac45c
    (Accessed 15 April 2019) Google Scholar [70] European Union Regulation on the
    Protection of Natural Persons With Regard to the Processing of Personal Data and
    on the Free Movement of Such Data, and Repealing, Directive 95/46/EC (Data Protection
    Directive) EU Journal L119 (May) (2016), pp. 1-88 Google Scholar [71] E. Eyisi,
    Z. Zhang, X. Koutsoukos, et al. Model-Based Control Design and Integration of
    Cyberphysical Systems: An Adaptive Cruise Control Case Study Journal of Control
    Science and Engineering, 2013 (2013), Article 678016 View in ScopusGoogle Scholar
    [72] G. Fanmuy, D. Petrauskas An Automotive MBSE Case Study: An Interdisciplinary
    Role-Based Design With 3DEXPERIENCE Platform and MagicDraw No Magic World Symposium
    2018 (NMWS2018) (2018) https://nmws2018.com/speakers/abstracts/item/an-automotive-mbse-case-study-an-interdisciplinary-role-based-design-with-3dexperience-platform-and-magicdraw
    (Accessed 15 April 2019) Google Scholar [73] D. Ferrucci, E. Brown, J. Chu-Carroll,
    et al. Building Watson: An Overview of the DeepQA Project AI Magazine, 31 (3)
    (2010), pp. 59-79 CrossRefView in ScopusGoogle Scholar [74] D. Floreano, R.J.
    Wood Science, Technology and the Future of Small Autonomous Drones Nature, 521
    (7553) (2015), pp. 460-466 CrossRefView in ScopusGoogle Scholar [75] T. Fong,
    I. Nourbakhsh, K. Dautenhahn A Survey of Socially Interactive Robots Robotics
    and Autonomous Systems, 42 (3–4) (2003), pp. 143-166 View PDFView articleView
    in ScopusGoogle Scholar [76] H. Forbes, D. Schaefer Social Product Development:
    The Democratization of Design, Manufacture and Innovation Procedia CIRP, 60 (2017),
    pp. 404-409 View PDFView articleView in ScopusGoogle Scholar [77] K. Forsberg,
    H. Mooz The Relationship of System Engineering to the Project Cycle Presented
    at the Joint conference sponsored by: National Council on Systems Engineering
    (NCOSE) and American Society for Engineering Management (ASEM) (1991), pp. 1-12
    Google Scholar [78] Y. Fu, Y. Zhang, H. Qiao, et al. Analysis of Feature Extracting
    Ability for Cutting State Monitoring Using Deep Belief Networks Procedia CIRP,
    31 (2015), pp. 29-34 View PDFView articleView in ScopusGoogle Scholar [79] M.
    Fujishima, K. Narimatsu, N. Irino, Y. Ido Thermal Displacement Reduction and Compensation
    of a Turning Center CIRP Journal of Manufacturing Science and Technology, 22 (2018),
    pp. 111-115 View PDFView articleView in ScopusGoogle Scholar [80] M. Fujishima,
    K. Ohno, S. Nishikawa, et al. Study of Sensing Technologies for Machine Tools
    CIRP Journal of Manufacturing Science and Technology, 14 (2016), pp. 71-75 View
    PDFView articleView in ScopusGoogle Scholar [81] Functional Mockup Interface,
    FMI, https://fmi-standard.org. (Accessed 15 April 2019). Google Scholar [82] N.
    Gershenfeld, R. Krikorian, D. Cohen The Internet of Things Scientific American,
    291 (4) (2004), pp. 76-81 CrossRefGoogle Scholar [83] H. Gharavi, R. Ghafurian
    Smart Grid: The Electric Energy System of the Future Proceedings of the IEEE,
    99 (6) (2011), pp. 917-921 View in ScopusGoogle Scholar [84] D. Gianni, A. D’Ambrogio,
    A. Tolk Modeling and Simulation-Based Systems Engineering Handbook CRC Press (2015)
    ISBN 9781138748941 Google Scholar [85] E. Glaessgen The Digital Twin Paradigm
    for Future NASA and U.S. Air Force Vehicles Proceedings of 53rd AIAA/ASME/ASCE/AHS/ASC
    Structure, Structure Dynamics and Materials Conference—Special Session on the
    Digital Twin (2012) 14 pages Google Scholar [86] M.J. Goedkoop, C.J.G. van Halen,
    H.R.M. te Riele, P.J.M. Rommens Product Service systems, Ecological and Economic
    Basics, report submitted to the Dutch Ministry of Economic Affairs (1999) 132
    pages [87] C. Gonzalez Amazon warehouse, Machine Design (2017) (Accessed 15 April
    2019) https://www.machinedesign.com/motion-control/changing-future-warehouses-amazon-robots
    Google Scholar [88] I. Goodfellow, Y. Bengio, A. Courville, F. Bach Deep Learning
    MIT Press (2017) ISBN: 978-0262035613 Google Scholar [89] P. Gray Designing the
    User Experience, Dassault Systèmes White Paper Series (2014) (Accessed 15 April
    2019) https://www.3ds.com/fileadmin/Industries/High-Tech/Pdf/whitepapers/Designing-The-User-Experience-high-tech.pdf
    Google Scholar [90] J. Gubbi, R. Buyya, S. Marusic, M. Palaniswami Internet of
    Things (IoT): A Vision, Architectural Elements, and Future Directions Future Generation
    Computer Systems, 29 (7) (2013), pp. 1645-1660 View PDFView articleView in ScopusGoogle
    Scholar [91] A. Harrison Design for Service–Harmonising Product Design with a
    Services Strategy Proceedings of ASME Turbo Expo, 2006 (2) (2006), pp. 135-143
    View in ScopusGoogle Scholar [92] M. Hassenzahl, N. Tractinsky User Experience—A
    Research Agenda Behaviour and Information Technology, 25 (2) (2006), pp. 91-97
    CrossRefView in ScopusGoogle Scholar [93] C.C. Hayes, A.K. Goel, I.Y. Tumer, et
    al. Intelligent Support for Product Design: Looking Backward, Looking Forward
    Journal of Computing and Information Science in Engineering, 11 (2) (2011) 21007
    Google Scholar [94] P. Hehenberger, B. Vogel-Heuser, D. Bradley, et al. Design,
    Modelling, Simulation and Integration of Cyber Physical Systems: Methods and Applications
    Computers in Industry, 82 (2016), pp. 273-289 View PDFView articleView in ScopusGoogle
    Scholar [95] J. Herter, J. Ovtcharova A Model Based Visualization Framework for
    Cross Discipline Collaboration in Industry 4.0 Scenarios Procedia CIRP, 57 (2016),
    pp. 398-403 View PDFView articleView in ScopusGoogle Scholar [96] K.K.B. Hon,
    L. Li, I.M. Hutchings Direct Writing Technology-Advances and Developments Annals
    of CIRP, 57 (2) (2008), pp. 601-620 View PDFView articleView in ScopusGoogle Scholar
    [97] G. Hwang, J. Lee, J. Park, T.-W. Chang Developing Performance Measurement
    System for Internet of Things and Smart Factory Environment International Journal
    of Production Research, 55 (9) (2017), pp. 2590-2602 CrossRefView in ScopusGoogle
    Scholar [98] IEEE IEEE 1320.1-1998, Standard for Functional Modeling Language—Syntax
    and Semantics for IDEF0 (1998) Google Scholar [99] IEEE IEEE 1220-2005, IEEE Standard
    for Application and Management of the Systems Engineering Process (2005) (Accessed
    15 April 2019) https://standards.ieee.org/standard/1220-2005.html Google Scholar
    [100] Industrial Internet Consortium, https://www.iiconsortium.org. (Accessed
    15 April 2019). Google Scholar [101] International Electronical Commission (IEC)
    Dependability, Electropedia (2015) (Accessed 15 April 2019). http://www.electropedia.org/iev/iev.nsf/display?openform&amp;ievref=192-01-22
    Google Scholar [102] International Standard Orgnisation ISO 26262 Road vehicles
    Functional Safety Part 1–10 (2011) Google Scholar [103] International Standard
    Orgnisation ISO/IEC/IEEE 42010 Systems and Software Engineering—Architecture Description
    (2001) Google Scholar [104] International Standard Orgnisation ISO 9241-210, Ergonomics
    of Human-System Interaction–Part 210: Human-centred Design for Interactive Systems
    (2010) Google Scholar [105] J. Jiao, M.M. Tseng Methodology of Developing Product
    Family Architecture for Mass Customization Intelligent Manufacturing, 10 (1) (1999),
    pp. 3-20 View in ScopusGoogle Scholar [106] Kagermann H, Wahlster W, Helbig J,
    (Eds.) (2013), Recommendations for Implementing the Strategic Initiative Industrie
    4.0: Final Report of the Industrie 4.0 Working Group, http://en.acatech.de/publication/recommendations-for-implementing-the-strategic-initiative-industrie-4-0-final-report-of-the-industrie-4-0-working-group/
    (Accessed 15 April 2019). Google Scholar [107] Z. Kemény, R.J. Beregi, G. Erdos,
    J. Nacsa The MTA SZTAKI Smart Factory: Platform for Research and Project-Oriented
    Skill Development in Higher Education Procedia CIRP, 54 (2016), pp. 53-58 View
    PDFView articleView in ScopusGoogle Scholar [108] W.S. Kim Robotized Products
    Proceedings URAI 2011–8th International Conference on Ubiquitous Robots and Ambient
    Intelligence (2011), pp. 612-614 View in ScopusGoogle Scholar [109] T. Kitatani
    Global Monitoring and Support Management System for Construction Machinery Using
    Satellite Communication Proceedings 2010 7th International Conference on Service
    Systems and Service Management (2010), pp. 211-215 View in ScopusGoogle Scholar
    [110] S. Knoch, M. Deru, S. Bergweiler, J. Haupert Novel Consumer-to-Product Interactions
    with Context-Aware Embedded Platforms, Lecture Notes in Computer Science, 8515,
    Springer (2014), pp. 513-524 CrossRefView in Scopus [111] I. Gibson, D.W. Rosen,
    B. Stucker Additive Manufacturing Technologies: Rapid Prototyping to Direct Digital
    Manufacturing Springer (2010) ISBN: 978-1-4419-1119-3 Google Scholar [112] D.
    Kennon, C.S.L. Schutte, D. Lutters An Alternative View to Assessing Antifragility
    in an Organisation: A Case Study in a Manufacturing SME Annals of CIRP, 64 (1)
    (2015), pp. 177-180 View PDFView articleView in ScopusGoogle Scholar [113] T.
    Khalifa, K. Naik, A. Nayak A Survey of Communication Protocols for Automatic Meter
    Reading Applications IEEE Communications Surveys and Tutorials, 13 (2) (2011),
    pp. 168-182 View in ScopusGoogle Scholar [114] S. Kind, K. Exner, S. Neumeyer,
    R. Stark Smart Engineering in the Context of Industrie 4.0: Modular Systems for
    Experiencable Design Validation of Assembly Systems, Gemeinsames Kolloquium Konstruktionstechnik
    2016 Shaker Publishing, Rostock (2016), pp. 251-258 ISBN: 978-3-8440-4732-5 Google
    Scholar [115] P. Kölsch, C.F. Herder, V. Zimmermann, J.C. Aurich A Novel Concept
    for the Development of Availability-Oriented Business Models Procedia CIRP, 64
    (2017), pp. 340-344 View PDFView articleView in ScopusGoogle Scholar [116] Komatsu
    Komatsu Wireless Monitoring System (2013) (Accessed 15 April 2019) https://www.komatsu.eu/-/media/sites/komatsu/brochures/komtrax/komtrax_eess018706_1302_86944.ashx?v=9886518fd9ad492f965cc01c0edb1c81&la=en?v
    Google Scholar [117] H. Komoto, T. Tomiyama Integration of a Service CAD and a
    Life Cycle simulator Annals of CIRP, 57 (1) (2008), pp. 9-12 View PDFView articleView
    in ScopusGoogle Scholar [118] H. Komoto, T. Tomiyama Multi-Disciplinary System
    Decomposition of Complex Mechatronics Systems Annals of CIRP Annals, 60 (1) (2011),
    pp. 191-194 View PDFView articleView in ScopusGoogle Scholar [119] H. Komoto,
    T. Tomiyama A Framework for Computer-Aided Conceptual Design and Its Application
    to System Architecting of Mechatronics Products Computer-Aided Design, 44 (10)
    (2012), pp. 931-946 View PDFView articleView in ScopusGoogle Scholar [120] S.
    Kondoh, R.K. Sato, T. Tomiyama, Y. Umeda Self-Organization of the Cellular Manufacturing
    System CIRP Journal of Manufacturing Systems, 30 (6) (2000), pp. 507-513 Google
    Scholar [121] S.F. Königs, G. Beier, A. Figge, R. Stark Traceability in Systems
    Engineering—Review of Industrial Practices, State-of-the-Art Technologies and
    New Research Solutions Advanced Engineering Informatics, 26 (4) (2012), pp. 924-940
    View PDFView articleView in ScopusGoogle Scholar [122] Y. Koren, U. Heisel, F.
    Jovane, et al. Reconfigurable Manufacturing Systems Annals of CIRP, 48 (2) (1999),
    pp. 527-540 View PDFView articleView in ScopusGoogle Scholar [123] G. Kortuem,
    F. Kawsar, V. Sundramoorthy, D. Fitton Smart Objects as Building Blocks for the
    Internet of Things IEEE Internet Computing, 14 (1) (2010), pp. 44-51 View in ScopusGoogle
    Scholar [124] A. Krizhevsky, I. Sutskever, G.E. Hinton ImageNet Classification
    With Deep Convolutional Neural Networks Proceedings of 25th International Conf.
    on Neural Information Processing Systems, 1 (2012), pp. 1097-1105 Google Scholar
    [125] I. Kuksa, T. Fisher (Eds.), Design for Personalisation, Taylor & Francis
    (2017) [126] K. Kuhnert, C. Stürmer, A. Koster Five Trends Transforming the Automotive
    Industry, PricewaterhouseCoopers GmbH (2018) (Accessed 15 April 2019) https://www.pwc.com/gx/en/industries/automotive/assets/pwc-five-trends-transforming-the-automotive-industry.pdf
    Google Scholar [127] A. Kusiak Smart Manufacturing Journal of Production Research,
    56 (1–2) (2018), pp. 508-517 View in ScopusGoogle Scholar [128] Y. Lecun, Y. Bengio,
    G. Hinton Deep Learning Nature, 521 (7553) (2015), pp. 436-444 CrossRefView in
    ScopusGoogle Scholar [129] E.A. Lee Cyber Physical Systems: Design Challenges
    Proceedings of 11th IEEE Symposium on Object/Component/Service-Oriented Real-Time
    Distributed Computing (2008), pp. 363-369 View in ScopusGoogle Scholar [130] G.H.
    Lee Reconfigurability Consideration Design of Components and Manufacturing Systems
    Advanced Manufacturing Technology, 13 (5) (1997), pp. 376-386 View in ScopusGoogle
    Scholar [131] J. Lee, H.D. Ardakani, S. Yang, B. Bagheri Industrial Big Data Analytics
    and Cyber-Physical Systems for Future Maintenance & Service Innovation Procedia
    CIRP, 38 (2015), pp. 3-7 View PDFView articleGoogle Scholar [132] J. Lee, B. Bagheri,
    H.A. Kao A Cyber-Physical Systems Architecture for Industry 4.0-Based Manufacturing
    Systems Manufacturing Letters, 3 (2015), pp. 18-23 View PDFView articleView in
    ScopusGoogle Scholar [133] J. Lee, H.A. Kao Dominant Innovation Design for Smart
    Products-Service Systems (PSS): Strategies and Case Studies Annual SRII Global
    Conference, SRII, IEEE (2014), pp. 305-310, 10.1109/SRII.2014.25 Google Scholar
    [134] J. Lee, H.A. Kao, S. Yang Service Innovation and Smart Analytics for Industry
    4.0 and Big Data Environment Procedia CIRP, 16 (2014), pp. 3-8 View PDFView articleGoogle
    Scholar [135] J.Y. Lee, J.S. Yoon, B.-H. Kim A Big Data Analytics Platform for
    Smart Factories in Small and Medium-Sized Manufacturing Enterprises: An Empirical
    Case Study of a Die Casting Factory Precision Engineering and Manufacturing, 18
    (10) (2017), pp. 1353-1361 CrossRefView in ScopusGoogle Scholar [136] P. Leitão,
    F. Restivo ADACOR: A Holonic Architecture for Agile and Adaptive Manufacturing
    Control Computers in Industry, 57 (2) (2006), pp. 121-130 View PDFView articleView
    in ScopusGoogle Scholar [137] P. Leitão, A.W. Colombo, S. Karnouskos Industrial
    Automation Based on Cyber-Physical Systems Technologies: Prototype Implementations
    and Challenges Computers in Industry, 81 (2016), pp. 11-25 View PDFView articleView
    in ScopusGoogle Scholar [138] J. Leonard, J. How, S. Teller, et al. A Perception‐Driven
    Autonomous Urban Vehicle Journal of Field Robotics, 25 (2008), pp. 727-774 CrossRefView
    in ScopusGoogle Scholar [139] L. Ren, L. Zhang, F. Tao, et al. Cloud Manufacturing:
    From Concept to Practice Enterprise Information Systems, 9 (2) (2015), pp. 186-209
    CrossRefView in ScopusGoogle Scholar [140] H. Liu, T. Fang, T. Zhou, et al. Deep
    Learning-Based Multimodal Control Interface for Human-Robot Collaboration Procedia
    CIRP, 72 (2018), pp. 3-8 View PDFView articleGoogle Scholar [141] Z.L. Liu, Y.
    Chen, Y.B. Xie A Knowledge-Based System for Multi-Disciplinary Conceptual Design
    Synthesis Proceedings of the Institution of Mechanical Engineers, Part C, 226
    (12) (2012), pp. 2950-2966 CrossRefView in ScopusGoogle Scholar [142] J. Luetzenberger,
    P. Klein, K.-D. Thoben Using Knowledge Based Engineering to Support the Design
    of Smart Products Proceedings of 19th International Conference on Engineering
    Design (ICED13), Design Society, 6 (2013), pp. 63-72 View in ScopusGoogle Scholar
    [143] P. Lünnemann, W.M. Wang, R. Stark Methodische Analyse Der Entwicklungsaktivitäten
    Proceedings of 15th Gemeinsames Kolloquium Konstruktionstechnik. Interdisziplinäre
    Produktentwicklung (2017), pp. 89-98 ISBN: 978-3-940402-15-8 Google Scholar [144]
    P. Lünnemann, W.M. Wang, P. Ibánez Manteca, R. Stark Engineering Activities—Considering
    Value Creation from a Holistic Perspective Proceedings of 2017 International Conference
    on Engineering, Technology and Innovation (ICE/ITMC) (2017) ISBN 978-1-5386-0774-9/17
    Google Scholar [145] E. Lutters Pilot Production Environments Driven by Digital
    Twins South African Journal of Industrial Engineering, 29 (3) (2018), pp. 40-53
    View in ScopusGoogle Scholar [146] E. Lutters, Jde Lange, R.G.J. Damgrave Virtual
    Dashboards in Pilot Production Environments International Conference Competitive
    Manufacturing; COMA’19 (2019), pp. 22-27 http://hdl.handle.net/10019.1/105429
    Google Scholar [147] E. Lutters, F.J.A.M. van Houten, Bernard, et al. Tools and
    Techniques for Product Design Annals of CIRP, 63 (2) (2014), pp. 607-630 View
    PDFView articleView in ScopusGoogle Scholar [148] J. Lützenberger, P. Klein, K.
    Hribernik, K.-D. Thoben Improving Product-Service Systems by Exploiting Information
    from the Usage Phase. A Case Study Procedia CIRP, 47 (2016), pp. 376-381 View
    PDFView articleView in ScopusGoogle Scholar [149] C. Lv, J. Zhang, P. Nuzzo, et
    al. Design Optimization of the Control System for the Powertrain of an Electric
    Vehicle: A Cyber-Physical System Approach Proceedings of 2015 IEEE International
    Conference on Mechatronics and Automation (2015), pp. 814-819 CrossRefView in
    ScopusGoogle Scholar [150] M.W. Maier Architecting Principles for Systems-of-Systems
    Systems Engineering, 1 (4) (1998), pp. 267-284 View in ScopusGoogle Scholar [151]
    E. Marilungo, A. Papetti, M. Germani, M. Peruzzini From PSS to CPS Design: A Real
    Industrial Use Case Toward Industry 4.0 Procedia CIRP, 64 (2017), pp. 357-362
    View PDFView articleView in ScopusGoogle Scholar [152] A. Masrur, M. Kit, V. Matěna,
    et al. Component-Based Design of Cyber-Physical Applications with Safety-Critical
    Requirements Microprocessors and Microsystems, 42 (2016), pp. 70-86 View PDFView
    articleView in ScopusGoogle Scholar [153] T. Mattelmäki, V. Roto, J.-J. Lee, J.
    Zimmerman Experience Design Meets Service Design-Method Clash or Marriage? Extended
    Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems (CHI
    EA’ 18), ACM (2018), 10.1145/3170427.3170626 Paper W26, 6 pages Google Scholar
    [154] V. Mayer-Schönberger, K. Cukier Big Data: A Revolution That Will Transform
    How We Live, Work, and Think John Murray Publishers, London (2013) Google Scholar
    [155] M.G. Mehrabi, A.G. Ulsoy, Y. Koren, P. Heytler Trends and Perspectives in
    Flexible and Reconfigurable Manufacturing Systems Journal of Intelligent Manufacturing,
    13 (2) (2002), pp. 135-146 1 View in ScopusGoogle Scholar [156] H. Mehrpouyan,
    B. Haley, A. Dong, et al. Resiliency Analysis for Complex Engineered System Design
    AI EDAM, 29 (1) (2015), pp. 93-108 Google Scholar [157] G.G. Meyer, K. Främling,
    J. Holmström Intelligent Products: A Survey Computers in Industry, 60 (3) (2009),
    pp. 137-148 View PDFView articleView in ScopusGoogle Scholar [158] J. Michniewicz,
    G. Reinhart Cyber-Physical-Robotics—Modelling of Modular Robot Cells for Automated
    Planning and Execution of Assembly Tasks Mechatronics, 34 (2016), pp. 170-180
    View PDFView articleView in ScopusGoogle Scholar [159] D. Miorandi, S. Sicari,
    F. De Pellegrini, I. Chlamtac Internet of Things: Vision, Applications and Research
    Challenges Ad Hoc Networks, 10 (7) (2012), pp. 1497-1516 View PDFView articleView
    in ScopusGoogle Scholar [160] Y. Mohan, S.G. Ponnambalam An Extensive Review of
    Research in Swarm Robotics Proceedings of 2009 World Congress on Nature and Biologically
    Inspired Computing (2009), pp. 140-145, 10.1109/NABIC.2009.5393617 View in ScopusGoogle
    Scholar [161] E. Monk, B. Wagner Concepts in Enterprise Resource Planning (4th
    edition), Cengage Learning (2012) ISBN-13: 978-1111820398 Google Scholar [162]
    L. Monostori, B. Kádár, T. Bauernhansl, et al. Cyber-Physical Systems in Manufacturing
    Annals of CIRP, 65 (2) (2016), pp. 621-641 View PDFView articleView in ScopusGoogle
    Scholar [163] S.K. Moon, T.W. Simpson, S.R.T. Kumara A Process Model and Data
    Mining to Support Designing Families of Services Proceedings of ASME DETC2007,
    6 (Part A) (2008), pp. 591-600 View in ScopusGoogle Scholar [164] M. Mori, M.
    Fujishima, M. Komatsu, et al. Development of Remote Monitoring and Maintenance
    System for Machine Tools Annals of CIRP, 57 (1) (2008), pp. 433-436 View PDFView
    articleView in ScopusGoogle Scholar [165] J. Mørkeberg Torry-Smith Challenges
    in Designing Mechatronic Systems Journal of Mechanical Design, 135 (1) (2012),
    p. 11005 Google Scholar [166] P.J. Mosterman, J. Zander Industry 4.0 as a Cyber-Physical
    System Study Software and Systems Modeling, 15 (1) (2016), pp. 17-29 CrossRefView
    in ScopusGoogle Scholar [167] D. Mourtzis, S. Fotia, E. Vlachou, A. Koutoupes
    A Lean PSS Design and Evaluation Framework Supported by KPI Monitoring and Context
    Sensitivity Tools Advanced Manufacturing Technology, 94 (5-8) (2018), pp. 1623-1637
    CrossRefView in ScopusGoogle Scholar [168] S. Murata, E. Yoshida, A. Kamimura,
    et al. M-TRAN: Self-Reconfigurable Modular Robotic System IEEE/ASME Transactions
    on Mechatronics, 7 (4) (2002), pp. 431-441 View in ScopusGoogle Scholar [169]
    National Institute of Standards and Technology, https://www.nist.gov/el/cyber-physical-systems.
    (Accessed 15 April 2019). Google Scholar [170] National Science Foundation Cyber-Physical
    Systems (CPS) Available at: https://www.nsf.gov/publications/pub_summ.jsp?ods_key=nsf18538.
    (Accessed 15April 2019) (2017) Google Scholar [171] A.Y.C. Nee, S.K. Ong, G. Chryssolouris,
    D. Mourtzis Augmented Reality Applications in Design and Manufacturing Annals
    of CIRP, 61 (2) (2012), pp. 657-679 View PDFView articleView in ScopusGoogle Scholar
    [172] Nielsen Norman Group (2019) https://www.nngroup.com/articles/definition-user-experience/
    (Accessed 15 April 2019). Google Scholar [173] OMG Requirements Interchange Format
    (ReqIF) (2010) (Accessed 15 April 2019) https://www.omg.org/cgi-bin/doc?mantis/10-03-07.pdf
    Google Scholar [174] OMG Systems Modeling Language (SysML) Version 1.5 (2017)
    (Accessed 15 April 2019) https://www.omg.org/spec/SysML/1.5/ Google Scholar [175]
    OMG Unified Modeling Language (UML) Version 2.5.1 (2017) (Accessed 15 April 2019)
    https://www.omg.org/spec/UML/ Google Scholar [176] Open Services for Lifecycle
    Collaboration (OSLC), https://open-services.net (Accessed 15 April 2019). Google
    Scholar [177] A. Pagoropoulos, D.C.A. Pigosso, T.C. McAloone The Emergent Role
    of Digital Technologies in the Circular Economy: A Review Procedia CIRP, 64 (2017),
    pp. 19-24 View PDFView articleView in ScopusGoogle Scholar [178] M.R. Palattella,
    M. Dohler, A. Grieco, et al. Internet of Things in the 5G Era: Enablers, Architecture,
    and Business Models IEEE Journal of Selected Areas in Communications, 34 (3) (2016),
    pp. 510-527 View in ScopusGoogle Scholar [179] D.L. Peters, P.Y. Papalambros,
    A.G. Ulsoy Sequential Co-Design of an Artifact and Its Controller via Control
    Proxy Functions IFAC Proceedings (IFAC-PapersOnline), 43 (18) (2010), pp. 125-130
    View PDFView articleView in ScopusGoogle Scholar [180] J. Pfrommer, C. Zimmerling,
    J. Liu, et al. Optimisation of Manufacturing Process Parameters Using Deep Neural
    Networks as Surrogate Models Procedia CIRP, 72 (2018), pp. 426-431 View PDFView
    articleView in ScopusGoogle Scholar [181] M.E. Porter, J.E. Heppelmann How Smart,
    Connected Products Are Transforming Competition Harvard Business Review, 92 (11)
    (2014), pp. 64-88 CrossRefGoogle Scholar [182] M. Preidel, T. Damerau, R. Stark
    Web-Based Information Visualization for Early Customer Integration Proceedings
    of Stuttgarter Symposium Produktentwicklung SSP 2017 (2017) ISSN: 2364-4885 Google
    Scholar [183] E. Quartarone, P. Mustarelli Electrolytes for Solid-State Lithium
    Rechargeable Batteries: Recent Advances and Perspectives Chemical Society Reviews,
    40 (5) (2011), pp. 2525-2540 CrossRefView in ScopusGoogle Scholar [184] F.J. Rammig,
    S. Grösbrink, K. Stahl, Y. Zhao Designing Self-Adaptive Embedded Real-Time Software-Towards
    System Engineering of Self-Adaptation Proceedings of 2014 Brazilian Symposium
    on Computing Systems Engineering, Manaus, 2014 (2014), pp. 37-42, 10.1109/SBESC.2014.15
    View in ScopusGoogle Scholar [185] Plattform Industrie 4.0 Reference Architecture
    Model Industrie 4.0 (RAMI4.0) (2015) (Accessed 15 April 2019) https://www.bitkom.org/sites/default/files/file/import/150410-Umsetzungsstrategie-0.pdf
    Google Scholar [186] P.A.S. Ralston, J.H. Graham, J.L. Hieb Cyber Security Risk
    Assessment for SCADA and DCS Networks ISA Transactions, 46 (4) (2007), pp. 583-594
    View PDFView articleView in ScopusGoogle Scholar [187] A. Rashid, T. Masood, J.A.
    Erkoyuncu, et al. Enterprise Systems’ Life Cycle in Pursuit of Resilient Smart
    Factory for Emerging Aircraft Industry: a Synthesis of Critical Success Factors
    (CSFs), Theory, Knowledge Gaps, and Implications Enterprise Information Systems,
    12 (2) (2018), pp. 96-136 CrossRefView in ScopusGoogle Scholar [188] A. Reger,
    J. Dumler, O. Lobachev, J. Neuberger, R. Steinhilper Machine Allocation via Pattern
    Recognition in Harmonic Waves of Manufacturing Plants Procedia CIRP, 67 (2018),
    pp. 69-74 View PDFView articleView in ScopusGoogle Scholar [189] A. Riel, C. Kreiner,
    G. Macher, R. Messnarz Integrated Design for Tackling Safety and Security Challenges
    of Smart Products and Digital Manufacturing Annals of CIRP, 66 (1) (2017), pp.
    177-180 View PDFView articleView in ScopusGoogle Scholar [190] R. Roy, R. Stark,
    K. Tracht, et al. Continuous Maintenance and the Future–Foundations and Technological
    Challenges Annals of CIRP, 65 (2) (2016), pp. 667-688 View PDFView articleView
    in ScopusGoogle Scholar [191] S. Russell, P. Norvig Artificial Intelligence: A
    Modern Approach (3rd edition), Pearson (2009) ISBN: 978-0136042594 Google Scholar
    [192] Y. Sakagami, R. Watanabe, C. Aoyama, et al. The Intelligent ASIMO: System
    Overview and Integration Proceedings of IEE/RSJ Intl. Conf. Intelligent Robots
    and Systems, 3 (2002), pp. 2478-2483 View in ScopusGoogle Scholar [193] T. Sakao,
    S. Kondoh, Y. Umeda, T. Tomiyama Development of a Cellular Automatic Warehouse
    Proceedings 1996 IEEE/RSJ International Conference Intelligent Robots and Systems
    (IROS 96), IEEE 96 CH 35908, IEEE, (1996) (1996), pp. 324-331 View in ScopusGoogle
    Scholar [194] T. Sakao, Y. Shimomura Service Engineering: a Novel Engineering
    Discipline for Producers to Increase Value Combining Service and Product Journal
    of Cleaner Production, 15 (6) (2007), pp. 590-604 View PDFView articleView in
    ScopusGoogle Scholar [195] P. Savarino, M. Abramovici, J.C. Göbel A Methodological
    Approach for the Identification of Context-Specific Reconfiguration Options in
    the PLM-Context Proceedings of PLM18 (2018) Google Scholar [196] P. Savarino,
    M. Abramovici, J.C. Göbel, P. Gebus Design for Reconfiguration as Fundamental
    Aspect of Smart Products Procedia CIRP, 70 (2018), pp. 374-379 View PDFView articleView
    in ScopusGoogle Scholar [197] B. Schleich, N. Anwer, L. Mathieu, S. Wartzack Shaping
    the Digital Twin for Design and Production Engineering Annals of CIRP, 66 (1)
    (2017), pp. 141-144 View PDFView articleView in ScopusGoogle Scholar [198] D.C.
    Schmidt Model-Driven Engineering EEE Computer, 39 (2) (2006), pp. 25-31 View in
    ScopusGoogle Scholar [199] M. Schmidt, M. Merklein, D. Bourell, et al. Laser Based
    Additive Manufacturing in Industry and Academia Annals of CIRP, 66 (2) (2017),
    pp. 561-583 View PDFView articleView in ScopusGoogle Scholar [200] B. Schneier
    To Kill a Centrifuge 37 pages, https://www.langner.com/wp-content/uploads/2017/03/to-kill-a-centrifuge.pdf
    (Accessed 15 April 2019) (2013) Google Scholar [201] S. Scholze, A.T. Correia,
    D. Stokic Novel Tools for Product-Service System Engineering Procedia CIRP, 47
    (2016), pp. 120-125 View PDFView articleView in ScopusGoogle Scholar [202] F.
    Schweitzer, E.A. Van den Hende To Be or Not to Be in Thrall to the March of Smart
    Products Psychology and Marketing, 33 (10) (2016), pp. 830-842 CrossRefView in
    ScopusGoogle Scholar [203] N.K. Sehgal, P.C.P. Bhatt Cloud Computing: Concepts
    and Practices (1st ed.), Springer (2018) ISBN-13: 978-3319778389 Google Scholar
    [204] R. Sell, S. Seiler Improvements of Multi-Disciplinary Engineering Study
    by Exploiting Design-Centric Approach, Supported by Remote and Virtual Labs International
    Journal of Engineering Education, 28 (4) (2012), pp. 759-766 View in ScopusGoogle
    Scholar [205] M.-L. Seol, R. Ivaškevičiūtė, M.A. Ciappesoni All 3D Printed Energy
    Harvester for Autonomous and Sustainable Resource Utilization Nano Energy, 52
    (2018), pp. 271-278 View PDFView articleView in ScopusGoogle Scholar [206] W.
    Shi, J. Cao, Q. Zhang, et al. Edge Computing: Vision and Challenges IEEE Internet
    of Things Journal, 3 (5) (2016), pp. 637-646 View in ScopusGoogle Scholar [207]
    Y. Shimomura, S. Tanigawa, Y. Umeda, T. Tomiyama Development of Self-Maintenance
    Photocopiers AI Magazine, 16 (4) (1995), pp. 41-53 View in ScopusGoogle Scholar
    [208] Y.-R. Shiue, K.-C. Lee, C.-T. Su Real-Time Scheduling for a Smart Factory
    Using a Reinforcement Learning Approach Computers and Industrial Engineering,
    125 (2018), pp. 604-614 View PDFView articleView in ScopusGoogle Scholar [209]
    F. Shrouf, J. Ordieres, G. Miragliotta Smart Factories in Industry 4.0: A Review
    of the Concept and of Energy Management Approached in Production Based on the
    Internet of Things Paradigm IEEE International Conference Industrial Engineering
    and Engineering Management (2014), pp. 697-701 CrossRefView in ScopusGoogle Scholar
    [210] B. Siciliano, O. Khatib (Eds.), Springer Handbook of Robotics, Springer
    (2016) [211] A.G. Siemens 1D CAE Software (2018) . (Accessed 15 April 2019) https://www.plm.automation.siemens.com/global/en/our-story/glossary/mechatronic-system-simulation-1d-cae/13110
    Google Scholar [212] S. Sierla, I. Tumer, N. Papakonstantinou, et al. Early Integration
    of Safety to the Mechatronic System Design Process by the Functional Failure Identification
    and Propagation Framework Mechatronics, 22 (2) (2012), pp. 137-151 View PDFView
    articleView in ScopusGoogle Scholar [213] Siemens, https://www.plm.automation.siemens.com/global/en/products/.
    (Accessed 15 April 2019). Google Scholar [214] T.W. Simpson Product Platform Design
    and Customization: Status and Promise AIEDAM, 18 (1) (2004), pp. 3-20 CrossRefView
    in ScopusGoogle Scholar [215] V.B. Singh, T. Benoit, V. Braibant Breaking Down
    Silos With Contract Based Design for Industrial Software Development: Illustrated
    Through an Aerospace Case Study Proceedings of 9th European Congress on Embedded
    Real Time Software and Systems (2018) https://www.erts2018.org/uploads/program/ERTS_2018_paper_22.pdf
    Google Scholar [216] R. Söderberg, K. Wärmefjord, J.S. Carlson, L. Lindkvist Toward
    a Digital Twin for Real-Time Geometry Assurance in Individualized Production Annals
    CIRP, 66 (1) (2017), pp. 137-140 View PDFView articleView in ScopusGoogle Scholar
    [217] S.D. Son, J. Hubrechts, L. Awatsu, A. Bhave, A. Van der Auweraer A Simulation-Based
    Testing and Validation Framework for ADAS Development Proceedings of 7th Transport
    Research Arena 2018 (2018) Google Scholar [218] S. Sridhar, A. Hahn, M. Govindarasu
    Cyber-Physical System Security for the Electric Power Grid Proceedings of the
    IEEE, 100 (1) (2012), pp. 210-224 View in ScopusGoogle Scholar [219] J. Stark
    Product Lifecycle Management: 21st Century Paradigm for Product Realisation (2nd
    ed)), Springer (2011) ISBN-13: 978-0857295453 Google Scholar [220] R. Stark, B.
    Beckmann-Dobrev, J. Adenauer Ein Interdisziplinärer Ansatz Zur Multimodalen Funktionalen
    Absicherung Mechatronischer Systeme Am Beispiel Einer PKW-Heckklappe An interdisciplinary
    approach to a multimodal functional validation of mechatronic systems tested at
    an automotive tailgate), Grazer Symposium Virtuelles Fahrzeug (2010), pp. 18-27
    View in ScopusGoogle Scholar [221] R. Stark, T. Damerau Digital Twin S. Chatti,
    L. Laperrière, G. Reinhart, T. Tolio (Eds.), CIRP Encyclopedia of Production Engineering,
    Springer, Berlin, Heidelberg (2019) in print Google Scholar [222] R. Stark, S.
    Kind, S. Neumeyer Innovations in Digital Modelling for Next Generation Manufacturing
    System Design Annals of CIRP, 66 (1) (2017), pp. 169-172 View PDFView articleView
    in ScopusGoogle Scholar [223] R. Stark, K. Lindow, D. Reich, T. Vorsatz Smart
    Engineering Capabilities for New Generation Product Offerings Anais do 23. Seminário
    Internacional de Alta Tecnologia (2018) ISSN: 2175-9960 Google Scholar [224] T.
    Stock, G. Seliger Opportunities of Sustainable Manufacturing in Industry 4.0 Procedia
    CIRP, 40 (2016), pp. 536-541 View PDFView articleView in ScopusGoogle Scholar
    [225] F. Tao, M. Zhang, Y. Liu, A.Y.C. Nee Digital Twin Driven Prognostics and
    Health Management for Complex Equipment Annals of CIRP, 67 (1) (2018), pp. 169-172
    View PDFView articleView in ScopusGoogle Scholar [226] O.S. Tas, F. Kuhnt, J.M.
    Zollner, C. Stiller Functional System Architectures Towards Fully Automated Driving
    Proceedings of 2016 IEEE Intelligent Vehicles Symposium (IV) (2016), pp. 304-309
    View in ScopusGoogle Scholar [227] R. Teti, K. Jemielniak, G. O’Donnell, D. Dornfeld
    Advanced Monitoring of Machining Operations Annals of CIRP, 59 (2) (2010), pp.
    717-739 View PDFView articleView in ScopusGoogle Scholar [228] A. Tharumarajah,
    A.J. Wells, L. Nemes Comparison of the Bionic, Fractal and Holonic Manufacturing
    System Concepts International Journal of Computer Integrated Manufacturing, 9
    (3) (1996), pp. 217-226 View in ScopusGoogle Scholar [229] M.K. Thompson, G. Moroni,
    T. Vaneker, et al. Design for Additive Manufacturing: Trends, Opportunities, Considerations,
    and Constraints Annals of CIRP, 65 (2) (2016), pp. 737-760 View PDFView articleView
    in ScopusGoogle Scholar [230] C.E. Thorpe, M. Herbert, T. Kanade, S.A. Shafer
    Toward Autonomous Driving: the CMU Navlab. Part I—Perception IEEE Expert, 6 (4)
    (1991), pp. 3-42 Google Scholar [231] T. Tomiyama Service Engineering to Intensify
    Service Contents in Product Life Cycles Proceedings of Second International Symposium
    on Environmentally Conscious Design and Inverse Manufacturing (EcoDesign 2001),
    IEEE (2001), pp. 613-618, 10.1109/.2001.992433 View in ScopusGoogle Scholar [232]
    T. Tomiyama Architecture-Centric Model-Based Product Development Proceedings of
    13th Mechatronics Forum International Conference, 2/3 (2012), pp. 434-443 ISBN:
    978-3-99033-045-6 Google Scholar [233] T. Tomiyama, V. D’Amelio, J. Urbanic, W.
    ElMaraghy Complexity of Multi-Disciplinary Design Annals of CIRP, 56 (1) (2007),
    pp. 185-188 View PDFView articleView in ScopusGoogle Scholar [234] T. Tomiyama,
    P. Gu, Y. Jin, et al. Design Methodologies: Industrial and Educational Applications
    Annals of CIRP, 58 (2) (2009), pp. 543-565 View PDFView articleView in ScopusGoogle
    Scholar [235] T. Tomiyama, F. Moyen Resilient Architecture for Cyber-Physical
    Production Systems Annals of CIRP, 67 (1) (2018), pp. 161-164 View PDFView articleView
    in ScopusGoogle Scholar [236] T. Tomiyama, T.J. van Beek, A.A. Alvarez Cabrera
    Making Function Modeling Practically Usable AI EDAM, 27 (2013), pp. 3301-3309
    Google Scholar [237] A.M. Townsend Smart Cities: Big Data, Civic Hackers, and
    the Quest for a New Utopia WW Norton & Company (2013) Google Scholar [238] K.W.
    Tracy Mobile Application Development Experiences on Apples iOS and Android OS
    IEEE Potentials, 31 (4) (2012), pp. 30-34 View in ScopusGoogle Scholar [239] M.M.
    Tseng, J. Jiao, M.E. Merchant Design for Mass Customization Annals of CIRP, 45
    (1) (1996), pp. 153-156 View PDFView articleView in ScopusGoogle Scholar [240]
    M.M. Tseng, R.J. Jiao, C. Wang Design for Mass Personalization Annals of CIRP,
    59 (1) (2010), pp. 175-178 View PDFView articleView in ScopusGoogle Scholar [241]
    M.-L. Tseng, R.R. Tan, A.S.F. Chiu, et al. Circular Economy Meets Industry 4.0:
    Can Big Data Drive Industrial Symbiosis? Resources, Conservation and Recycling,
    131 (2018), pp. 146-147 View PDFView articleView in ScopusGoogle Scholar [242]
    M.L. Tuballa, M.L. Abundo A Review of the Development of Smart Grid Technologies
    Renewable and Sustainable Energy Reviews, 59 (C) (2016), pp. 710-725 View PDFView
    articleView in ScopusGoogle Scholar [243] K. Ueda, J. Vaario, K. Ohkura Modelling
    of Biological Manufacturing Systems for Dynamic Reconfiguration Annals of CIRP,
    46 (1) (1997), pp. 343-346 View PDFView articleView in ScopusGoogle Scholar [244]
    T.H.J. Uhlemann, C. Lehmann, R. Steinhilper The Digital Twin: Realizing the Cyber-Physical
    Production System for Industry 4.0 Procedia CIRP, 61 (2017), pp. 335-340 View
    PDFView articleView in ScopusGoogle Scholar [245] UK RAS, 2019, https://www.ukras.org/publications/white-papers/.
    (Accessed 15 April 2019). Google Scholar [246] Y. Umeda, M. Ishii, M. Yoshioka,
    et al. Supporting Conceptual Design Based on the Function-Behavior-State Modeler
    AI EDAM, 10 (4) (1996), pp. 275-288 View in ScopusGoogle Scholar [247] Y. Umeda,
    T. Tomiyama, H. Yoshikawa, Shimomura Using Functional Maintenance to Improve Fault
    Tolerance IEEE Expert-Intelligent Systems and Their Applications, 9 (3) (1994),
    pp. 25-31 View in ScopusGoogle Scholar [248] I. Ungurean, N.-C. Gaitan, V.G. Gaitan
    An IoT Architecture for Things from Industrial Environment Proceedings of 10th
    IEEE International Conference on Communications (2014), pp. 1-4, 10.1109/ICComm.2014.6866713
    Google Scholar [249] P. Valckenaers, H. Van Brussel Holonic Manufacturing Execution
    Systems Annals of CIRP, 54 (1) (2005), pp. 427-432 View PDFView articleView in
    ScopusGoogle Scholar [250] A. Valencia, R. Mugge, J.P.L. Schoormans, H.N.J. Schifferstein
    The Design of Smart Product-Service Systems (PSSs) International Journal of Design,
    9 (1) (2015), pp. 13-28 View in ScopusGoogle Scholar [251] H. Van Brussel, L.
    Bongaerts, J. Wyns, P. Valckenaers, T. Van Ginderachter A Conceptual Framework
    for Holonic Manufacturing: Identification of Manufacturing Holons Journal of Manufacturing
    Systems, 18 (1) (1999), pp. 35-52 View PDFView articleView in ScopusGoogle Scholar
    [252] H. Van Brussel, J. Wyns, P. Valckenaers, L. Bongaerts, P. Peeters Reference
    Architecture for Holonic Manufacturing Systems: PROSA Computers in Industry, 37
    (3) (1998), pp. 255-274 View PDFView articleView in ScopusGoogle Scholar [253]
    H. Van Der Auweraer, J. Anthonis, S. De Bruyne, J. Leuridan Virtual Engineering
    at Work: The Challenges for Designing Mechatronic Products Engineering with Computers,
    29 (3) (2013), pp. 389-408 CrossRefView in ScopusGoogle Scholar [254] H. Van der
    Auweraer, S. Donders, W. Desmet Simulation and Digital Twin for Mechatronic Product
    Design Proceedings of 28th International Conference Noise and Vibration engineering
    (ISMA2018) (2018) http://past.isma-isaac.be/isma2018/proceedings/ Google Scholar
    [255] Eds.) P. Van de Laar, T. Punter (Eds.), Views on Evolvability of Embedded
    Systems, Springer, Netherlands (2011) ISBN 978-90-481-9849-8 [256] M.L. Van Eck,
    N. Sidorova, W.M.P. Van Der Aalst Enabling Process Mining on Sensor Data from
    Smart Products Proceedings of 2016 IEEE Tenth International Conference Research
    Challenges in Information Science (RCIS) (2016), pp. 1-12, 10.1109/RCIS.2016.7549355
    Google Scholar [257] J. Vanhuyse, N. Murgovski, M. Nicolai, et al. Closed-Loop
    Design for Hybrid Powertrains Procedings of ASME. IDETC 2017, 3 (2017), 10.1115/DETC2017-67404
    Paper No. DETC2017-67404 Google Scholar [258] J. Verriet, T. Basten, R. Hamberg,
    F. Reckers, L. Somers Adaptivity in Professional Printing Systems, Model-Based
    Design of Adaptive Embedded Systems Springer (2013), pp. 1-9, 10.1007/978-1-4614-4821-1
    Google Scholar [259] B. Vogel-Heuser, C. Diedrich, D. Pantförder, P. Göhner Coupling
    Heterogeneous Production Systems by a Multi-Agent Based Cyber-Physical Production
    System Proceedings of 2014 12th IEEE International Conference Industrial Informatics,
    INDIN 2014 (2014), pp. 713-719, 10.1109/INDIN.2014.6945601 View in ScopusGoogle
    Scholar [260] Volkswagen AG, 2017, https://www.volkswagenag.com/en/news/stories/2017/02/the-e-mobility-module.html#.
    (Accessed 15 April 2019). Google Scholar [261] Wall J., Forget, L. 2017, What’s
    new in QNX SDP7.0, https://zapdoc.tips/what-s-new-in-qnx-sdp-70.html. (Accessed
    15 April 2019). Google Scholar [262] J. Wan, A. Canedo, M.A.Al. Faruque Functional
    Model-Based Design Methodology for Automotive Cyber-Physical Systems IEEE Systems
    Journal, 11 (4) (2017), pp. 2028-2039 Google Scholar [263] J. Wan, S. Tang, Z.
    Shu, D. Li, S. Wang, M. Imran, A.V. Vasilakos Software-Defined Industrial Internet
    of Things in the Context of Industry 4.0 IEEE Sensors Journal, 16 (20) (2016),
    pp. 7373-7380 View in ScopusGoogle Scholar [264] L. Wang, M. Törngren, M. Onori
    Current Status and Advancement of Cyber-Physical Systems in Manufacturing Journal
    of Manufacturing Systems, 37 (2015), pp. 517-527 View PDFView articleView in ScopusGoogle
    Scholar [265] P. Wang, R.X. Gao, R. Yan A Deep Learning-Based Approach to Material
    Removal Rate Prediction in Polishing Annals of CIRP, 66 (1) (2017), pp. 429-432
    View PDFView articleView in ScopusGoogle Scholar [266] P. Wang, H. Liu, L. Wang,
    R.X. Gao Deep Learning-Based Human Motion Recognition for Predictive Context-Aware
    Human-Robot Collaboration Annals of CIRP, 67 (1) (2018), pp. 17-20 View PDFView
    articleView in ScopusGoogle Scholar [267] W.C. Wang, Y. Koren Design Principles
    of Scalable Reconfigurable Manufacturing Systems IFAC Proceedings, 46 (9) (2013),
    pp. 1411-1416 View PDFView articleView in ScopusGoogle Scholar [268] Y. Wang,
    D.Y. Mo, M.M. Tseng Mapping Customer Needs to Design Parameters in the Front End
    of Product Design by Applying Deep Learning Annals of CIRP, 67 (1) (2018), pp.
    145-148 View PDFView articleGoogle Scholar [269] R. Want An Introduction to RFID
    Technology IEEE Pervasive Computing, 5 (1) (2006), pp. 25-33 Google Scholar [270]
    H.J. Warnecke The Fractal Company, A Revolution in Corporate Culture Springer-Verlag
    (1993) Google Scholar [271] B. Waschneck, A. Reichstaller, L. Belzner, et al.
    Optimization of Global Production Scheduling With Deep Reinforcement Learning
    Procedia CIRP, 72 (2018), pp. 1264-1269 View PDFView articleView in ScopusGoogle
    Scholar [272] C.S. Wasson System Engineering Analysis, Design, and Development:
    Concepts, Principles, and Practices John Wiley & Sons (2015) ISBN: 978-1-118-44226-5
    Google Scholar [273] W. Wymore Model-Based Systems Engineering CRC Press (1993)
    ISBN 9780849380129 Google Scholar [274] H. Wei, Y. Cai, H. Li, D. Li, T. Wang
    Sambot: A Self-Assembly Modular Robot for Swarm Robot Proceedings of 2010 IEEE
    International Conference Robotics and Automation (2010), pp. 66-71, 10.1109/ROBOT.2010.5509214
    View in ScopusGoogle Scholar [275] D. Weimer, B. Scholz-Reiter, M. Shpitalni Design
    of Deep Convolutional Neural Network Architectures for Automated Feature Extraction
    in Industrial Inspection Annals of CIRP, 65 (1) (2016), pp. 417-420 View PDFView
    articleView in ScopusGoogle Scholar [276] M. Weiser The Computer for the Twenty-First
    Century Scientific American, 265 (3) (1991), pp. 94-104 CrossRefView in ScopusGoogle
    Scholar [277] M. Weiser Ubiquitous Computing IEEE Computer, 26 (10) (1993), pp.
    71-72 View in ScopusGoogle Scholar [278] L. Wen, L. Gao, X. Li, L. Wang, J. Zhu
    A Jointed Signal Analysis and Convolutional Neural Network Method for Fault Diagnosis
    Procedia CIRP, 72 (2018), pp. 1084-1087 View PDFView articleView in ScopusGoogle
    Scholar [279] Wikipedia, https://en.wikipedia.org/wiki/Google_Traffic. (Accessed
    15 April 2019). Google Scholar [280] Wikipedia, https://en.wikipedia.org/wiki/History_of_autonomous_cars.
    (Accessed 15 April 2019). Google Scholar [281] Wikipedia, https://en.wikipedia.org/wiki/History_of_the_electric_vehicle.
    (Accessed 15 April 2019). Google Scholar [282] Wikipedia, https://en.wikipedia.org/wiki/Smart_lighting.
    (Accessed 15 April 2019). Google Scholar [283] Wikipedia, https://en.wikipedia.org/wiki/Smart_thermostat.
    (Accessed 15 April 2019). Google Scholar [284] Wikipedia, https://en.wikipedia.org/wiki/Tesla_Model_S.
    (Accessed 15 April 2019). Google Scholar [285] Wikipedia, https://en.wikipedia.org/wiki/Toyota_Prius.
    (Accessed 15 April 2019). Google Scholar [286] Wikipedia, https://en.wikipedia.org/wiki/Transportation_as_a_Service.
    (Accessed 15 April 2019). Google Scholar [287] L.D. Xu, W. He, S. Li Internet
    of Things in Industries: A Survey IEEE Transactions on Industrial Informatics,
    10 (4) (2014), pp. 2233-2243 View in ScopusGoogle Scholar [288] E. Yasa, J.-P.
    Kruth, J. Deckers Manufacturing by Combining Selective Laser Melting and Selective
    Laser Erosion/laser Re-Melting Annals of CIRP, 60 (1) (2011), pp. 263-266 View
    PDFView articleView in ScopusGoogle Scholar [289] H. Yasuura, C.-M. Kyung, Y.
    Liu, Y.-L. Lin (Eds.), Smart Sensors at the IoT Frontier, Springer (2017) ISBN:
    978-3-319-55344-3 [290] T. Yatabe, T. Hirose, T. Tsugawa Autonomous Navigation
    of the Vehicle With Vision System Journal Society of Instrument and Control Engineers,
    30 (11) (1991), pp. 1014-1028 (in Japanese) Google Scholar [291] M. Yim, D.G.
    Duff, K.D. Roufas PolyBot: a Modular Reconfigurable Robot Proceedings of IEEE
    International Conference on Robotics and Automation, 1 (2000), pp. 514-520 View
    in ScopusGoogle Scholar [292] M. Yim, W.-M. Shen, B. Salemi, et al. Modular Self-Reconfigurable
    Robot Systems [Grand Challenges of Robotics] IEEE Robotics and Automation Magazine,
    14 (1) (2007), pp. 43-52 View in ScopusGoogle Scholar [293] S.C. Yoon, J. Um,
    S.-H. Suh, et al. Smart Factory Information Service Bus (SIBUS) for Manufacturing
    Application: Requirement, Architecture and Implementation Journal of Intelligent
    Manufacturing, 30 (1) (2019), pp. 363-382 CrossRefView in ScopusGoogle Scholar
    [294] A. Zanella, N. Bui, A. Castellani, et al. Internet of Things for Smart Cities
    IEEE Internet of Things Journal, 1 (1) (2014), pp. 22-32 Google Scholar [295]
    P. Zawadzki, K. Zywicki Smart Product Design and Production Control for Effective
    Mass Customization in the Industry 4.0 Concept Management and Production Engineering
    Review, 7 (3) (2016), pp. 105-112 CrossRefView in ScopusGoogle Scholar [296] J.
    Zhang, P. Wang, R. Yan, R.X. Gao Deep Learning for Improved System Remaining Life
    Prediction Procedia CIRP, 72 (2018), pp. 1033-1038 View PDFView articleCrossRefGoogle
    Scholar [297] L. Zhang Specification and Design Method for Big Data Driven Cyber
    Physical Systems Proceedings of 23rd International Conference on Systems Engineering,
    1089 (2015), pp. 849-857 978-3-319-08422-0_124 CrossRefView in ScopusGoogle Scholar
    [298] C. Zheng, J. Le Duigou, H. Peter, B. Matthieu, B. Eynard Multidisciplinary
    Integration During Conceptual Design Process: A Survey on Design Methods of Cyber-Physical
    Systems Proceedings of 14th International Design Conference, DS 84 (2016), pp.
    1625-1634 View in ScopusGoogle Scholar [299] R.Y. Zhong, X. Xu, L. Wang IoT-Enabled
    Smart Factory Visibility and Traceability Using Laser-Scanners Procedia Manufacturing,
    10 (2017), pp. 1-14 View PDFView articleView in ScopusGoogle Scholar [300] G.
    Zhou, F. Li, H.-M. Cheng Progress in Flexible Lithium Batteries and Future Prospects
    Energy and Environmental Science, 7 (4) (2014), pp. 1307-1338 View in ScopusGoogle
    Scholar [301] Zojirushi, C http://www.mimamori.net (in Japanese) (Accessed 15
    April 2019). Google Scholar [302] D. Zuehlke SmartFactory-Towards a Factory-of-Things
    Annual Reviews in Control, 34 (1) (2010), pp. 129-138 View PDFView articleView
    in ScopusGoogle Scholar Cited by (111) Exploring the transformative power of AI
    in art through a circular economy lens. A systematic literature review 2024, Heliyon
    Show abstract Consideration of uncertainties in a dynamic modeling system integrated
    with a deep learning based forecasting approach 2023, CIRP Journal of Manufacturing
    Science and Technology Show abstract Digital twin-enabled automated anomaly detection
    and bottleneck identification in complex manufacturing systems using a multi-agent
    approach 2023, Journal of Manufacturing Systems Show abstract Augmented reality
    support to employ tacit knowledge in non-conforming operations 2023, Procedia
    CIRP Show abstract A digital twinning reference model to facilitate multi-stakeholder
    decision-making 2023, Procedia CIRP Show abstract Knowledge Collaboration Approach
    in Smart Product Innovation Networks 2023, Procedia CIRP Show abstract View all
    citing articles on Scopus View Abstract © 2019 Published by Elsevier Ltd on behalf
    of CIRP. Recommended articles Coevolution of digitalisation, organisations and
    Product Development Cycle CIRP Annals, Volume 70, Issue 2, 2021, pp. 519-542 Lionel
    Roucoules (2), Nabil Anwer (2) View PDF Characterization and application of assistance
    systems in digital engineering CIRP Annals, Volume 70, Issue 1, 2021, pp. 131-134
    Rainer Stark (2), …, Kai Lindow View PDF A method to design Smart Services based
    on information categorization of industrial use cases Procedia CIRP, Volume 83,
    2019, pp. 77-82 Konrad Exner, …, Rainer Stark View PDF Show 3 more articles Article
    Metrics Citations Citation Indexes: 104 Captures Readers: 448 View details About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: CIRP Annals
  limitations: '>'
  pdf_link: null
  publication_year: 2019
  relevance_evaluation:
    extract_1:
      relevance: Highly relevant
      selected_text: Explore the use of advanced sensing technologies, such as hyperspectral
        imaging and thermal sensing, for non-invasive plant stress detection
    extract_2:
      relevance: Very relevant
      selected_text: Develop capabilities for seamless integration of end-to-end automated
        irrigation management system to achieve fully autonomous, scalable irrigation
        management
    overall_relevance: Highly relevant
    relevance_score: 1.0
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: Development capabilities for smart products
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/rs11212519
  analysis: '>'
  apa_citation: Tang, J., Han, W., & Zhang, L. (2019). UAV Multispectral Imagery Combined
    with the FAO-56 Dual Approach for Maize Evapotranspiration Mapping in the North
    China Plain. Remote Sensing, 11(21), 2519. https://doi.org/10.3390/rs11212519
  authors:
  - Jiandong Tang
  - Wenting Han
  - Liyuan Zhang
  citation_count: 16
  explanation: This article uses remote sensing data from the multispectral camera
    on a UAV (unmanned aerial vehicle), along with additional data, to quantify the
    water consumption of maize (corn) in a field and estimate how much water it requires.
    The research team was able to accurately measure water consumption without using
    more expensive and time-consuming methods. This could make it easier for farmers
    to water their crops more efficiently and save water.
  extract_1: The estimation of crop evapotranspiration (ET) is of paramount importance
    for crop management, especially under conditions of water scarcity. The study
    explores the potential of unmanned aerial vehicles (UAVs) equipped with multispectral
    cameras to accurately estimate maize ET under varying irrigation regimes.
  extract_2: We proposed a framework to estimate ET based on the integration of remote
    sensing data with the two-source energy balance (TSEB) algorithm. The research
    used high-resolution multispectral imagery collected by UAV to derive canopy biophysical
    parameters (CBPs), which were then incorporated into the TSEB algorithm to estimate
    ET. The calculated ET maps were compared against reference ET, showing good agreement
    with an R2 of 0.80 and slope near 1.0. The approach also demonstrated the ability
    to capture spatial variability of ET.
  full_citation: '>'
  full_text: ">\nremote sensing  \nArticle\nUAV Multispectral Imagery Combined with\
    \ the\nFAO-56 Dual Approach for Maize Evapotranspiration\nMapping in the North\
    \ China Plain\nJiandong Tang 1,2, Wenting Han 3,* and Liyuan Zhang 4\n1\nCollege\
    \ of Water Resources and Architectural Engineering, Northwest A&F University,\
    \ Yangling 712100,\nChina; tjd@nwafu.edu.cn\n2\nKey Laboratory of Agricultural\
    \ Soil and Water Engineering in Arid and Semiarid Areas, Ministry of\nEducation,\
    \ Northwest A&F University, Yangling 712100, China\n3\nInstitute of Soil and Water\
    \ Conservation, Northwest A&F University, Yangling 712100, China\n4\nCollege of\
    \ Mechanical and Electronic Engineering, Northwest A&F University, Yangling 712100,\
    \ China;\nliyuanzhang@nwafu.edu.cn\n*\nCorrespondence: hwt@nwafu.edu.cn; Tel.:\
    \ +86-029-8709-1325\nReceived: 3 September 2019; Accepted: 23 October 2019; Published:\
    \ 28 October 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\
    \a\nAbstract: As the key principle of precision farming, variation of actual crop\
    \ evapotranspiration (ET)\nwithin the ﬁeld serves as the basis for crop management.\
    \ Although the estimation of evapotranspiration\nhas achieved great progress through\
    \ the combination of diﬀerent remote sensing data and the FAO-56\ncrop coeﬃcient\
    \ (Kc) method, lack of the accurate crop water stress coeﬃcient (Ks) at diﬀerent\n\
    space–time scales still hinder its operational application to farmer practices.\
    \ This work aims to explore\nthe potential of multispectral images taken from\
    \ unmanned aerial vehicles (UAVs) for estimating the\ntemporal and spatial variability\
    \ of Ks under the water stress condition and mapping the variability of\nﬁeld\
    \ maize ET combined with the FAO-56 Kc model. To search for an optimal estimation\
    \ method,\nthe performance of several models was compared including models based\
    \ on Ks either derived\nfrom the crop water stress index (CWSI) or calculated\
    \ by the canopy temperature ratio (Tc ratio),\nand combined with the basal crop\
    \ coeﬃcient (Kcb) based on the normalized diﬀerence vegetation\nindex (NDVI).\
    \ Compared with the Ks derived from the Tc ratio, the CWSI-based Ks responded\
    \ well to\nwater stress and had strong applicability and convenience. The results\
    \ of the comparison show that\nET derived from the Ks-CWSI had a higher correlation\
    \ with the modiﬁed FAO-56 method, with an\nR2 = 0.81, root mean square error (RMSE)\
    \ = 0.95 mm/d, and d = 0.94. In contrast, ET derived from\nthe Ks-Tc ratio had\
    \ a relatively lower correlation with an R2 = 0.68 and RMSE = 1.25 mm/d. To obtain\n\
    the evapotranspiration status of the whole maize ﬁeld and formulate reasonable\
    \ irrigation schedules,\nthe CWSI obtained by a handheld infrared thermometer\
    \ was inverted by the renormalized diﬀerence\nvegetation index (RDVI) and the\
    \ transformed chlorophyll absorption in reﬂectance index (TCARI).\nThen, the whole\
    \ map of Ks can be derived from the VIs by the relationship between CWSI and Ks\n\
    and can be taken as the basic input for ET estimation at the ﬁeld scale. The ﬁnal\
    \ ET results based on\nmultispectral UAV interpolation measurements can well reﬂect\
    \ the crop ET status under diﬀerent\nirrigation levels, and greatly help to improve\
    \ irrigation scheduling through more precise management\nof deﬁcit irrigation.\n\
    Keywords: UAV multispectral imagery; dual crop coeﬃcient model; crop water stress\
    \ index (CWSI);\ncanopy temperature ratio; normalized diﬀerence vegetation index;\
    \ renormalized diﬀerence vegetation\nindex; transformed chlorophyll absorption\
    \ in reﬂectance index\nRemote Sens. 2019, 11, 2519; doi:10.3390/rs11212519\nwww.mdpi.com/journal/remotesensing\n\
    Remote Sens. 2019, 11, 2519\n2 of 22\n1. Introduction\nIn semiarid regions, the\
    \ climate is characterized by long periods of drought and strong interannual\n\
    variability in rainfall amounts and distribution, leading to high year-to-year\
    \ variability in agricultural\ndevelopment and production [1]. The North China\
    \ Plain is one of the most important agricultural\nregions because it accounts\
    \ for about one-ﬁfth of national food production. In this area, rainfall cannot\n\
    meet the crop water requirements, and the overexploitation of groundwater aggravates\
    \ water scarcity,\nreduces the groundwater table, and threatens sustainable agriculture\
    \ [2]. Irrigation is then necessary\nto prevent water stress and ensure proﬁtable\
    \ yields. To determine the optimal irrigation scheduling\nand adopt such strategies\
    \ eﬃciently, it is necessary to have reliable methods of providing information\n\
    about the temporal and spatial variability of crop evapotranspiration (ET) within\
    \ the ﬁeld scale [3].\nThe direct ET measured methods consist of the use of a\
    \ lysimeter, eddy covariance, Bowen ratio,\nand soil water balance. However, they\
    \ face important limitations due to expensive techniques and\nlow spatial representativeness\
    \ of measurements, particularly in agricultural ﬁelds characterized by a\nhigh\
    \ level of heterogeneity in terms of crops and water status [4]. The indirect\
    \ form can be made from\nempirical equations that use agronomic, biophysical,\
    \ and meteorological elements as input variables [5].\nAs the most widely used\
    \ method for the determination of ET, the FAO-56 dual crop coeﬃcient (Kc)\napproach,\
    \ published by the Food and Agriculture Organization in Irrigation and Drainage\
    \ Paper No.\n56 [6], has received favorable acceptance and application worldwide\
    \ [5,7]. The dual Kc approach\ndescribes the relationship between the daily evapotranspiration\
    \ of a given crop and the reference\nevapotranspiration (ET0) by separating the\
    \ single crop coeﬃcient into the basal crop coeﬃcient (Kcb),\nsoil water evaporation\
    \ (Ke) coeﬃcient, and water stress coeﬃcient (Ks). Although simple in design and\n\
    construction, the dual Kc method successfully incorporates a number of consistent\
    \ and compensating\nfactors that distinguishes the ET of any unique crop from\
    \ that of the reference ET [7]. However, the\nmethod is mainly used for the ET\
    \ estimation based on stationary measurements and cannot provide a\nﬁne estimation\
    \ due to inconsistent crop growth.\nTo explore the distribution of crop ET within\
    \ the ﬁeld scale, remote sensing technology provides a\ndependable basis [8].\
    \ The crop coeﬃcient generated from remote sensing based on canopy reﬂectance\n\
    responds to the actual crop condition, captures the variability among diﬀerent\
    \ local atmosphere\nconditions and ﬁeld spatial variability [9], and reﬂects the\
    \ heterogeneity of plant development in large\nirrigated ﬁelds [10–14]. Studies\
    \ have established diﬀerent inversion models between vegetation indices\n(VIs)\
    \ and Kcb [15–18]. For decades, satellite remote sensing images have been the\
    \ main data sources to\nintegrate the FAO-56 for the estimation of crop ET. For\
    \ example, Bellvert et al. [19] used a dataset of the\nvegetation index (NDVI)\
    \ derived from Landsat-8 to facilitate the estimation of the Kcb, and potential\n\
    crop water use. However, the low spatial and temporal resolution of satellite\
    \ data limits its further\napplication in estimating ET within the ﬁeld scale.\
    \ At the same time, cloud cover remains a signiﬁcant\nchallenge in satellite-based\
    \ remote sensing [20].\nAs one of the most important emerging remote-sensing platforms,\
    \ unmanned aerial vehicles\n(UAVs) have been gradually employed in precise agriculture.\
    \ Soon, UAVs will be vital tools for\ngrowers as they can cover large areas, and\
    \ take advantage of new sensing, mapping, and data analytical\ntechnologies [21–23].\
    \ Real time mapping and rapid image analysis also provide the early detection\
    \ of\nplant water status for timely irrigation scheduling [24]. Based on these\
    \ advantages, UAVs have broad\napplication prospects for more sophisticated ET\
    \ management within the ﬁeld scale. When dealing\nwith the estimation of ET based\
    \ on a combination of UAV and the dual Kc method under water stress\nconditions,\
    \ four parameters are required: ET0, Kcb, Ke, and Ks. ET0 can be estimated using\
    \ the FAO\nPenman–Monteith formula and the collected meteorological data [25].\
    \ Ke is clearly correlated with\nfoliage cover and irrigation/rainfall event,\
    \ and becomes negligible when the crop completely covers the\nsoil [26]. Many\
    \ studies have validated that Kcb has a strong correlation with NDVI and foliage\
    \ cover,\nand applied to practical water requirement monitoring [16,27]. For instance,\
    \ Han et al. [28] studied the\nfeasibility of UAV multispectral remote sensing\
    \ in the estimation of maize crop coeﬃcients at diﬀerent\ngrowth stages. The results\
    \ showed a strong relationship between UAV-measured NDVI and Kcb, with\nRemote\
    \ Sens. 2019, 11, 2519\n3 of 22\nan R2 value of 0.82. Although the assimilation\
    \ of FAO-56 and remote sensing data has made such great\nprogress, discrepancies\
    \ between the measured and simulated ET remained when water stress occurred.\n\
    The accurate estimation of Ks is the key to accurately estimate crop ET using\
    \ UAV remote sensing\ndata under water stress conditions. Speciﬁcally, Ks represents\
    \ the fraction of potential transpiration\nrate, with a value from 1 to 0, according\
    \ to the level of water stress, which is directly related to the\nwater content\
    \ in the root zone. Less attention has been paid on determining the water stress\
    \ coeﬃcient\nKs from the remote sensing data because there are diﬃculties in estimating\
    \ soil and root zone moisture\n(or root zone depletion) from remote sensing data\
    \ [29]. It is necessary to use a new indictor, which\nis easy to obtain and can\
    \ respond to real-time plant-water status. Studies [30,31] have proven that\n\
    canopy temperature (Tc) is closely related to soil water content, actual transpiration,\
    \ and crop water\nstress status. Therefore, Ks and canopy temperature are deﬁnitely\
    \ related to each other. Olivera et\nal. [32] used the vegetation and soil temperatures\
    \ retrieved from LST (land surface temperature) data\nderived from the eddy covariance\
    \ system to estimate the Ks. This method is based on the polygon\ndeﬁned in the\
    \ LST–VI space, which needs a large amount of temperature data and has a complex\n\
    analysis procedure. Recently, studies have evaluated indices based on Tc that\
    \ require less information\nfor detecting crop water stress and have shown that\
    \ Ks is related to several crop water stress indices.\nFor instance, Bausch et\
    \ al. [18] successfully used a ratio of canopy temperature as a substitute for\
    \ the\nsoil moisture based Ks. The ET diﬀerence between the two deﬁcit irrigation\
    \ treatments for the 25-day\ninvestigative period calculated by Tc ratio and water\
    \ balance techniques was 21 mm and 4 mm. Kullberg\net al. [33] observed that using\
    \ an appropriate Ks method had the potential to improve irrigation\nscheduling\
    \ to properly manage stress and ensure optimum crop yield under a limited irrigation\
    \ water\nsupply. A noted advantage of non-dimensional crop indices such as CWSI\
    \ (crop water stress index)\nis that they are typically considered to be scalable\
    \ to Ks for ET estimation (i.e., Ks = 1 − CWSI). This\nis also the basis behind\
    \ the Tc ratio approach, although it has dimensionality restrictions [34]. For\n\
    the estimation of Ks based on water stress indices, most studies have used handled\
    \ or stationary\ninfrared thermometers [33–35]. A ground-based platform is still\
    \ time consuming and labor intensive.\nAdditionally, like the estimation by counting\
    \ root zone depletion, it is impractical to estimate ET by\ncombining the Kcb\
    \ of large image pixels with Ks based on ground-point measurements due to the\n\
    heterogeneities of the crop and soil status.\nWith the development of agricultural\
    \ technology, high-resolution thermal imagery acquired by\nUAVs has been used\
    \ to map plant water stress indices such as the CWSI, and water deﬁcit index (WDI).\n\
    However, when Kcb and Ks are obtained from diﬀerent sensors (i.e., multispectral\
    \ and thermal sensors),\nthe problem of data fusion and matching will be obstacles\
    \ to ET estimation with the UAV system.\nFor example, as the image resolution\
    \ obtained by the two sensors is diﬀerent, image matching with\ndiﬀerent resolutions\
    \ requires a complicated process. Most importantly, the biggest eﬀect is not only\
    \ on\nthe pixel mixing due to the downscale, but on the georectiﬁcation and co-registration\
    \ of the images,\ntherefore, the asynchronous time and space of the Ks and Kcb\
    \ may inﬂuence the acquisition of maize\nET. Previous studies have indicated that\
    \ multispectral VIs have signiﬁcantly high correlation with\nwater stress indicators.\
    \ For example, Samuel et al. [36] summarized the common spectral vegetation\n\
    indices (VIs) that have been correlated to plant water stress. Studies [37–39]\
    \ suggested that the\nrenormalized diﬀerence vegetation index (RDVI) and transformed\
    \ chlorophyll absorption in reﬂectance\nindex (TCARI) are useful in plant stress\
    \ monitoring. Therefore, the synchronized acquisition of Kcb\nand Ks using one\
    \ sensor (i.e., a multispectral camera) should be explored.\nThis study aimed\
    \ to estimate more accurate ET maps with UAV-based multispectral images over\n\
    maize in the semiarid region of the North China Plain by applying the FAO-56 dual\
    \ Kc approach.\nMore speciﬁcally, we ﬁrst compared the ET derived from water stress\
    \ indices (CWSI and Tc ratio) and\nNDVI to that calculated with the modiﬁed FAO-56\
    \ dual Kc method by evaluating the suitable water\nstress indicator for local\
    \ maize ET estimation. Next, we investigated the potential of assimilating ET\n\
    estimation with VIs data (multispectral UAV) through the retrieve relation between\
    \ the water stress\nRemote Sens. 2019, 11, 2519\n4 of 22\nindex and VIs to eliminate\
    \ discrepancies caused by using data at diﬀerent scales and obtain a high\nresolution\
    \ (4.7 cm) spatial-temporal ET map.\n2. Materials and Methods\n2.1. Study Site\
    \ and Experimental Design\nA 1.13 ha research ﬁeld located in Zhaojun Town, Dalate\
    \ Banner, Ordos, Inner Mongolia, China\n(40◦26’0.29”N, 109◦36’25.99”E, Elev. 1010\
    \ m; Figure 1a) was chosen to conduct the study. Maize (Junkai\n918) was planted\
    \ on 20 May 2017 with a 0.58 m row spacing and 0.25 m plant spacing, and the row\n\
    direction was east–west. The maize emerged on 1 June, headed on 20 July, and was\
    \ harvested on 7\nSeptember (silage), with a 110-day lifespan.\nThe study ﬁeld\
    \ was divided into ﬁve treatment (TRT) zones (Figure 1b) with three diﬀerent levels\n\
    of irrigation at the vegetative, reproductive, and maturation growth stages. Each\
    \ treatment zone had\none sample plot (Figure 1b), and each sample plot had ﬁve\
    \ sample sites (Figure 1c). The ﬁve water\ntreatments are given in Table 1. The\
    \ total crop water requirement of the full watered maize ﬁeld during\nthe late\
    \ vegetative, reproductive, and maturation stages was 407 mm, which was close\
    \ to the total\napplied water (402 mm) of the control treatment zone (TRT 1).\
    \ Water for other TRTs was applied\nproportionally to that for TRT 1. Since TRTs\
    \ 1, 2, and 3 represented the three levels of irrigation, only\nthese zones were\
    \ taken for the analysis. Irrigation water was applied during the growing season\n\
    by using a centered pivot irrigation system (Valmont Industries Inc., USA), with\
    \ the coeﬃcient of\nuniformity of the ﬁrst span (research ﬁeld) of 82.7% with\
    \ a speed of 20%, or at 88.3% with a speed of\n40%, as calculated by the modiﬁed\
    \ formula of Heermann and Hein [40] by using R3000 sprinklers. The\namount of\
    \ water applied to each treatment was measured and recorded by MIK-2000H ﬂow meters\n\
    (Meacon Automation Technology Co. Ltd., Hangzhou, China), and the accuracy of\
    \ the ﬂow meters\nwas better than 1%. The actual amount of irrigation and rainfall\
    \ at each growth stage are shown in\nTable 1. The soil type is a loamy sand according\
    \ to the soil taxonomy of the United States Department of\nAgriculture. More detailed\
    \ information about the soil characteristics are listed in Table 2. To eliminate\n\
    the interference of nutritional stress and weeds, fertilizer and herbicide were\
    \ applied according to the\nplanting experience.\nRemote Sens. 2018, 10, x FOR\
    \ PEER REVIEW  \n4 of 22 \n \n2. Materials and Methods  \n2.1. Study Site and\
    \ Experimental Design \nA 1.13 ha research field located in Zhaojun Town, Dalate\
    \ Banner, Ordos, Inner Mongolia, China \n(40°26’0.29”N, 109°36’25.99”E, Elev.\
    \ 1010 m; Figure 1a) was chosen to conduct the study. Maize \n(Junkai 918) was\
    \ planted on 20 May 2017 with a 0.58 m row spacing and 0.25 m plant spacing, and\
    \ \nthe row direction was east–west. The maize emerged on 1 June, headed on 20\
    \ July, and was harvested \non 7 September (silage), with a 110-day lifespan.\
    \  \nThe study field was divided into five treatment (TRT) zones (Figure 1b) with\
    \ three different \nlevels of irrigation at the vegetative, reproductive, and\
    \ maturation growth stages. Each treatment \nzone had one sample plot (Figure\
    \ 1b), and each sample plot had five sample sites (Figure 1c). The \nfive water\
    \ treatments are given in Table 1. The total crop water requirement of the full\
    \ watered maize \nfield during the late vegetative, reproductive, and maturation\
    \ stages was 407 mm, which was close \nto the total applied water (402 mm) of\
    \ the control treatment zone (TRT 1). Water for other TRTs was \napplied proportionally\
    \ to that for TRT 1. Since TRTs 1, 2, and 3 represented the three levels of \n\
    irrigation, only these zones were taken for the analysis. Irrigation water was\
    \ applied during the \ngrowing season by using a centered pivot irrigation system\
    \ (Valmont Industries Inc., USA), with the \ncoefficient of uniformity of the\
    \ first span (research field) of 82.7% with a speed of 20%, or at 88.3% \nwith\
    \ a speed of 40%, as calculated by the modified formula of Heermann and Hein [40]\
    \ by using \nR3000 sprinklers. The amount of water applied to each treatment was\
    \ measured and recorded by \nMIK-2000H flow meters (Meacon Automation Technology\
    \ Co. Ltd., Hangzhou, China), and the \naccuracy of the flow meters was better\
    \ than 1%. The actual amount of irrigation and rainfall at each \ngrowth stage\
    \ are shown in Table 1. The soil type is a loamy sand according to the soil taxonomy\
    \ of \nthe United States Department of Agriculture. More detailed information\
    \ about the soil characteristics \nare listed in Table 2. To eliminate the interference\
    \ of nutritional stress and weeds, fertilizer and \nherbicide were applied according\
    \ to the planting experience. \n \nFigure 1. Location and treatment division of\
    \ research field: (a) location of research field in China; (b) \ntreatment zones\
    \ and locations of sampling plots, and (c) sampling sites in a plot. Each treatment\
    \ zone \nhad one sample plot and each sample plot had five sample sites. \nFigure\
    \ 1. Location and treatment division of research ﬁeld: (a) location of research\
    \ ﬁeld in China;\n(b) treatment zones and locations of sampling plots, and (c)\
    \ sampling sites in a plot. Each treatment\nzone had one sample plot and each\
    \ sample plot had ﬁve sample sites.\nRemote Sens. 2019, 11, 2519\n5 of 22\nTable\
    \ 1. Total applied water depth for each experimental treatment in the late vegetative,\
    \ reproductive,\nand maturation stages where (07.04–07.28), (07.29–08.20), and\
    \ (08.21–09.07) are the dates of the diﬀerent\ngrowth stages. The water amount\
    \ includes that of irrigation and precipitation, and the percentage of\nfull treatment\
    \ is shown in parentheses.\nTreatment\nApplied Water Depth/mm\nLate Vegetative\n\
    (07.04–07.28)\nReproductive\n(07.29–08.20)\nMaturation\n(08.21–09.07)\nTotal\n\
    TRT 1\n188 (100%)\n132 (100%)\n82 (100%)\n402\nTRT 2\n158 (84%)\n91 (69%)\n23\
    \ (28%)\n272\nTRT 3\n158 (84%)\n125 (95%)\n43 (52%)\n326\nTRT 4\n158 (84%)\n128\
    \ (97%)\n43 (52%)\n329\nTRT 5\n158 (84%)\n124 (94%)\n82 (100%)\n365\n2.2. Framework\
    \ and Parameters for Assimilating Remote Sensing Data into FAO-56 Crop Coeﬃcient\
    \ Method\nFigure 2 shows the assimilation of remote sensing data into the FAO-56\
    \ dual crop coeﬃcient\nmethod for the estimation of evapotranspiration in this\
    \ study. Unlike the traditional FAO-56 single\ncrop coeﬃcient method, canopy reﬂectance\
    \ was used to reﬂect crop growth and water stress, and then\nthe dual crop coeﬃcient\
    \ was obtained based on the UAV-measured spectral data. Finally, point-scale\n\
    evapotranspiration was extended to the whole ﬁeld through the UAV multispectral\
    \ images under\ndiﬀerent irrigation levels. Table 2 shows the soil characteristics\
    \ and parameters used in the modiﬁed\nFAO-56 dual crop coeﬃcient assimilation\
    \ procedure for maize.\nDear Dr. Li \n \nThe specific revisions as following:\
    \ \n \n1. In the second affiliation, the initial of this the word “semiarid” is\
    \ not capitalized. \n2. We found a spelling mistake in Figure 2, and the following\
    \ picture is correct. \n \nEvapotranspiration estimation based  on combination\
    \ UAV \nmulti-spectral remote sensing data with  FAO-56 dual crop \ncoefficient\
    \ method\nWater balance \nmethod\nKcb-Tab,Ks-FAO\nET-CWSI\nET-ratio\nOptimal method\
    \ \nfor ET estimation\nKcb-NDVI\nReflectance  data \nobtained within each \nsampling\
    \ plot\nSoil water content data\nComparison of crop \ncoefficients based on \n\
    different methods\nMeteorological , LAI, \nplant height\nET-FAO\n Ks, Kcb obtained\
    \ by \nVIs model \nIrrigation output\n UAV images\nComparison\nData acquisition\n\
    CET-WB\nET map  and CET-VIs of \nentire field\nComparison\nKs-CWSI\nKs-Tc ratio\n\
    \ \n \n3. The 0.418 in Equation (2) is wrong and the correct number is 0.408.\
    \ \n4. The correct Equation (14) and (15) are as follows: \n(\n)\n(\n)\n(\n)\n\
    (\n)\n                                                      \n/\n         \n \
    \                                                      \n0\n/\n0.195\n2.41*\n\
    0.47\n0.195\n/\n0.609\n1\n0.609\n/\nTCARI RDVI\nCWSI\nTCARI RDVI\nTCARI RDVI\n\
    TCARI RDVI\n\n\n=\n−\n\n\n\n\n\n\n  (14)  \n(\n)\n(\n)\n(\n)\n1   \
    \                                                        \n/\n0.195\n1 (2.41*\n\
    /\n0.47)      0.195\n/\n0.609\n0                                             \
    \              0.60\ns CWSI\nTCARI RDVI\nK\nTCARI RDVI\nTCARI RDVI\n−\n\n=\n\
    −\n−\n\n\n(\n)\n9\n/\nTCARI RDVI\n\n\n\n\n\n (15) \n \nFigure 2. Hierarchical\
    \ framework integrating the data obtained from an unmanned aerial vehicle\n(UAV)\
    \ remote sensing system and ground measurements into the FAO-56 dual crop coeﬃcient\
    \ method.\nLAI, leaf area index; CWSI, crop water stress index; NDVI, normalized\
    \ diﬀerence vegetation index; Kcb,\nbasal crop coeﬃcient; Ks, water stress coeﬃcient;\
    \ CET, cumulative evapotranspiration; VIs, vegetation\nindices; WB, soil–water\
    \ balance.\nRemote Sens. 2019, 11, 2519\n6 of 22\nTable 2.\nSoil characteristics\
    \ and parameters used in the modiﬁed FAO-56 dual crop coeﬃcient\nassimilation\
    \ procedure for maize.\nParameters\nValue\nSource\nSoil texture\nsand\n80.7%\n\
    observed\npowder\n13.7%\nobserved\nclay\n5.6%\nobserved\nAverage ﬁeld hold capacity\
    \ (θfc)\n0.13 m3/m−3\nobserved\nAverage permanent wilting point (θwp)\n0.056 m3m−3\n\
    observed\nAverage soil bulk density\n1.56 g/m3\nobserved\nMaximum crop height\n\
    2.73 m\nobserved\nMaximum eﬀective root depth (Zr, max)\n0.1 m\nFAO-56 [6]\nMinimum\
    \ eﬀective root depth (Zr, min)\n1 m\nFAO-56 [2]\nThe fraction of available soil\
    \ water (p)\n0.65\nZhao et al. [41]\nThe threshold water content (θj)\n0.084 m3m−3\n\
    observed\ncanopy extinction coeﬃcient for solar radiation (k)\n0.7\nDing et al.\
    \ [42]\nNDVImax (maximum NDVI value at full vegetation cover)\n0.87\nobserved\n\
    NDVImin (minimum NDVI value of bare soil)\n0.07\nobserved\n2.2.1. Meteorological\
    \ Factors and Soil Water Content\nThe weather data were obtained from an automated\
    \ weather station located on a grass reference\nsurface (0.95 ha) that was 1000\
    \ meters away from the research ﬁeld, with observations of rainfall, air\ntemperature\
    \ (Ta), humidity, net solar radiation (Rn), and wind speed (2 m above the reference\
    \ surface).\nExcept for rainfall, the data acquisition interval was 30 minutes.\n\
    Soil water content (SWC) was measured two or three times each week on the day\
    \ before or after\nirrigation within each sampling plot by the traditional gravimetric\
    \ method [43]. At each sampling\nplot, three sampling sites were randomly chosen\
    \ around the center. The samples were collected by soil\naugers at depths of 30\
    \ cm, 60 cm, 90 cm, and 120 cm. Soil samples were put in aluminum boxes to\navoid\
    \ the inﬂuence of evaporation. Basically, the gravimetric method involves taking\
    \ soil samples,\nweighing, oven-drying, and reweighing them, then expressing the\
    \ moisture content (i.e., loss in weight)\nas a percentage of the oven-dry weight.\
    \ This is the weight or mass basis of expressing soil moisture\ncontent. Then,\
    \ by multiplying the bulk density, the results can be expressed in terms of volume\
    \ [44].\nThe average SWC (θ) was estimated by interpolating the soil moisture\
    \ observations of the diﬀerent\ndepths belonging to the root-zone of maize.\n\
    2.2.2. Measurement of Maize Parameters\nMaize canopy temperature (Tc) and UAV\
    \ multispectral data were synchronously collected under\nclear sky at solar noon.\
    \ Tc was collected during the full foliage cover period (6–29 August 2017\nincluding\
    \ the reproductive and maturation stages). A handheld infrared thermometer (Raytek\
    \ ST60+,\nRaytek Inc., Santa Cruz, CA, USA) was used to measure Tc with a measurement\
    \ error of ±1 ◦C or\n±1% of the reading. The larger values were adopted in the\
    \ practical application. The temperature and\nspectral ranges of the Raytek ST60+\
    \ are −32–600 ◦C and 8–14 µm, respectively. The emissivity value\nwas set to 0.97\
    \ [45]. To avoid the interference of soil, the thermometer was used to sweep the\
    \ canopy\n(about 120◦) perpendicular to the row, 30 cm above the canopy, and at\
    \ a 15◦ horizontal angle. At each\nsample site, three measurements were made to\
    \ obtain the Tc. The values averaged over one sampling\nsite or over one plot\
    \ (yellow circle in Figure 1c) were taken to represent their status.\nThe main\
    \ plant parameters needed to run the modiﬁed FAO-56 model (see Section 2.2.3)\
    \ are\ncanopy height (h) and leaf area index (LAI). A random sampling method was\
    \ used to collect the LAI\nand plant height of maize. An LAI-2200C canopy analyzer\
    \ (LI-COR Biosciences, Lincoln, NE, USA)\nwas used to measure the LAI of maize;\
    \ 10 sampling points were randomly selected for each plot and\nthe average value\
    \ was obtained. For each plot plant height of maize, 15 representative maize plants\n\
    were randomly selected and measured by tape measure. Cubic spline interpolation\
    \ is a piecewise\nregression approach that uses third-order polynomials for interpolation\
    \ between a series of paired\nRemote Sens. 2019, 11, 2519\n7 of 22\ndata points\
    \ [14]. Thus, cubic spline was used to process the measured LAI and plant height\
    \ data, and\nthen the daily sequence of maize LAI and plant height data were obtained.\n\
    2.2.3. The Modiﬁed FAO-56 Dual Crop Coeﬃcient Method\nIn FAO-56, the actual ET\
    \ is deﬁned as the product of crop coeﬃcient (Kc) and reference\nevapotranspiration\
    \ (ET0) [26]. In the dual Kc model, Kc is split into two factors that separately\n\
    describe the evaporation (Ke) and transpiration (Kcb) components. The method has\
    \ been widely used\nin scheduling irrigation and improving agricultural production\
    \ [46]. FAO-56 ET is estimated as follows:\nET = ET0 ∗ (KcbKs + Ke),\n(1)\nwhere\
    \ ET is in mm/d; Ke is the evaporation coeﬃcient of the bare soil fraction; Kcb\
    \ is the basal crop\ncoeﬃcient; Ks is the water stress coeﬃcient; and ET0 is the\
    \ grass reference evapotranspiration in\nmm/d. The stages of canopy temperature\
    \ acquisition and ET estimation were in the period of high\ncoverage (i.e., vegetation\
    \ cover ranging from 0.79 to 0.84 as estimated by an empirical equation based\n\
    on NDVI [47]). With Ke = 0.25 × (1 − fc) [26], it had a minor inﬂuence on total\
    \ ET and was ignored.\nThe ET0 of this reference surface was estimated according\
    \ to the following Penman–Monteith\nequation:\nET0 =\n0.408∆(Rn − G) + γ\n900\n\
    T+273u2(es − ea)\n∆ + γ(1 + 0.34u2)\n,\n(2)\nwhere Rn is the net radiation at\
    \ the crop surface; G is the soil heat ﬂux density (as the magnitude of the\n\
    1-day or 10-day soil heat ﬂux beneath the grass reference surface is relatively\
    \ small, it may be ignored,\nthus Gday = 0 [26]); T is the mean daily air temperature\
    \ at 2 m height; u2 is the wind speed at 2 m\nheight; es is the saturation vapor\
    \ pressure; ea is the actual vapor pressure; ∆ is the slope vapor pressure\ncurve;\
    \ and γ is a psychrometric constant.\nThe basal crop coeﬃcient, Kcb, is generally\
    \ obtained from the guidelines of FAO-56 by looking-up\nthe tabulated value at\
    \ every growth stage and then linearly interpolating it to obtain the daily values.\n\
    The approach from the original FAO-56 dual Kc procedures cannot calculate the\
    \ daily actual value\nof Kcb [42]. Feng et al. [48] modiﬁed Kcb with LAI through\
    \ eddy covariance systems near the\nexperimentation site, which illustrated that\
    \ the modiﬁed dual crop coeﬃcient method could estimate\nmaize ET accurately on\
    \ the North China Plain. Therefore, in order to evaluate the dynamic changes of\n\
    ET in the maize ﬁeld more accurately, the canopy height and LAI were used to modify\
    \ the dynamic\nKcb. The modiﬁed FAO-56 Kcb value can be calculated by Equations\
    \ (3) and (4):\nKcb − Tab = Kc,min +\n\x10\nKcb,full − Kc,min\n\x11\n(1 − exp[−kLAI])\
    \ ,\n(3)\nKcb, full = min(1 + 0.1h, Kc,max) + [0.04(u2 − 2) − 0.004(RHmin − 45)]\n\
    \ \nh\n3\n!0.3\n,\n(4)\nwhere Kc,min is the minimum for bare soil (0.15); Kcb,full\
    \ is the estimated basal Kcb for vegetation having\nfull ground cover; Kc,max\
    \ is the maximum Kc (1.2); RHmin is the minimum relative humidity (%); and k\n\
    is the canopy attenuation coeﬃcient of radiation, and the value of k is listed\
    \ in Table 2.\nThe crop water stress coeﬃcient Ks related to the actual root zone\
    \ water content is a key parameter\nfor calculating and simulating soil water\
    \ conditions. Several linear and curvilinear functions have been\nproposed to\
    \ adjust for the eﬀects of decreasing available water on ET or for the Ks used\
    \ in Equation (1).\nThe simple linear model for estimating Ks as described in\
    \ FAO-33 is commonly used and calculated by\nEquation (5) ,which is an equivalent\
    \ expression to the FAO-56 Ks procedure [49].\nKs − FAO =\n\n1,\nθ ≥ θj\n\
    θ−θwp\nθj−θwp =\nθ−θwp\n(1−p)(θ fc−θwp), θwp < θ < θj\n,\n(5)\nRemote Sens. 2019,\
    \ 11, 2519\n8 of 22\nθj = (1 − p)\n\x10\nθfc − θwp\n\x11\n+ θwp ,\n(6)\nwhere\
    \ θ is the mean volumetric soil water in the crop root zone and θj is the threshold\
    \ water content,\nwhere transpiration decreases linearly due to water stress.\
    \ Ks = 1 for θ ≥ θj. p is the fraction of available\nsoil water that can be deleted\
    \ from the root zone before moisture stress. The θfc is the ﬁeld capacity,\nand\
    \ θwp is the permanent wilting point. All θ (m3 m−3) represent averages over the\
    \ eﬀective root zone\n(Zr). The rooting depth Zr (m) is assumed to vary between\
    \ a minimum value (maintained during the\ninitial crop growth stage at 0.1 m)\
    \ and a maximum value (that reached 1 m at the beginning of the\nmid-season stage).\
    \ The maximum value was measured in the ﬁeld and was equal to 1 m, according to\n\
    FAO-56 [6]. When the θ was lower than θj, the crop begins to reach the stress\
    \ period (Ks < 1), and if θ\nis less than θwp, the crop does not absorb water\
    \ from the root zone (Ks = 0). Values for Equations (5)\nand (6) are listed in\
    \ Table 2.\n2.2.4. UAV (Unmanned Aerial Vehicle) Multispectral System, Data Collection,\
    \ and VI (Vegetation\nIndex) Calculation\nIn this study, a hexacopter UAV multispectral\
    \ remote sensing system (Figure 3) was developed\nwith a Pixhawk autopilot (CUAV,\
    \ Guangzhou, China), a RedEdge multispectral camera (MicaSense,\nInc., USA), and\
    \ a MOY brushless gimbal (Moyouzhijia, Huizhou, China). Its maximum load was\n\
    5 kg, and the maximum ﬂight duration was 30 minutes. The RedEdge multispectral\
    \ camera has a\nfocal length of 5.5 mm, a ﬁeld-of-view angle of 47.2◦, and an\
    \ image resolution of 1280 × 960 pixels.\nThe bandwidths and central wavelengths\
    \ for the 5-band RedEdge are 20 nm at 475 nm (blue), 20 nm\nat 560 nm (green),\
    \ 10 nm at 668 nm (red), 10 nm at 717 nm (red edge), and 40 nm at 840 nm (near\n\
    infrared). The camera was equipped with a light intensity sensor and two 3 m ×\
    \ 3 m gray plates\n(Group 8 Technology, Provo, UT, USA). The light intensity sensor\
    \ can correct the inﬂuence of external\nlight changes on spectral images during\
    \ aerial photography. The gray plate has ﬁxed reﬂectivity; it can\ncorrect the\
    \ reﬂectivity of multispectral images, generate reﬂectivity images, and extract\
    \ the VI. The\nmultispectral images of the gray plate (reﬂectivity 58%) collected\
    \ simultaneously at the same height\nwere used to perform radiometric correction.\
    \ In Pix4DMapper a vignetting polynomial was used for\nradiometric correction.\
    \ Then, the spectral reﬂectance of the objects was obtained. Flight planning was\n\
    conducted with Mission Planner ground control station software, which allows the\
    \ user to generate\na route of waypoints as a function of the sensor ﬁeld of view\
    \ (FOV), the degree of overlap between\nimages, and the ground resolution needed.\n\
    \ \nprocedure [49]. \n\n\n\n                                             \
    \  \n  \n1,\n,\n1\nj\nwp\nwp\ns\nwp\nj\nj\nwp\nfc\nwp\nK\nFAO\np\n\n\n\n\n\
    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n ,\
    \ \n(5) \n\n\n\n1\nj\nfc\nwp\nwp\np\n\n\n\n\n\n\n\n\n \n, \n(6) \n\
    where θ is the mean volumetric soil water in the crop root zone and θj is the\
    \ threshold water content, \nwhere transpiration decreases linearly due to water\
    \ stress. Ks = 1 for θ ≥ θj. p is the fraction of \navailable soil water that\
    \ can be deleted from the root zone before moisture stress. The θfc is the field\
    \ \ncapacity, and θwp is the permanent wilting point. All θ (m3 m-3) represent\
    \ averages over the effective \nroot zone (Zr). The rooting depth Zr (m) is assumed\
    \ to vary between a minimum value (maintained \nduring the initial crop growth\
    \ stage at 0.1 m) and a maximum value (that reached 1 m at the beginning \nof\
    \ the mid-season stage). The maximum value was measured in the field and was equal\
    \ to 1 m, \naccording to FAO-56 [6]. When the θ was lower than θj, the crop begins\
    \ to reach the stress period (Ks \n< 1), and if θ is less than θwp, the crop does\
    \ not absorb water from the root zone (Ks = 0). Values for \nEquations (5) and\
    \ (6) are listed in Table 2. \n2.2.4. UAV (Unmanned Aerial Vehicle) Multispectral\
    \ System, Data Collection, and VI (Vegetation \nIndex) Calculation \nIn this study,\
    \ a hexacopter UAV multispectral remote sensing system (Figure 3) was developed\
    \ \nwith a Pixhawk autopilot (CUAV, Guangzhou, China), a RedEdge multispectral\
    \ camera (MicaSense, \nInc., USA), and a MOY brushless gimbal (Moyouzhijia, Huizhou,\
    \ China). Its maximum load was 5 \nkg, and the maximum flight duration was 30\
    \ minutes. The RedEdge multispectral camera has a focal \nlength of 5.5 mm, a\
    \ field-of-view angle of 47.2°, and an image resolution of 1280 × 960 pixels.\
    \ The \nbandwidths and central wavelengths for the 5-band RedEdge are 20 nm at\
    \ 475 nm (blue), 20 nm at \n560 nm (green), 10 nm at 668 nm (red), 10 nm at 717\
    \ nm (red edge), and 40 nm at 840 nm (near \ninfrared). The camera was equipped\
    \ with a light intensity sensor and two 3 m × 3 m gray plates \n(Group 8 Technology,\
    \ Provo, UT, USA). The light intensity sensor can correct the influence of external\
    \ \nlight changes on spectral images during aerial photography. The gray plate\
    \ has fixed reflectivity; it \ncan correct the reflectivity of multispectral images,\
    \ generate reflectivity images, and extract the VI. \nThe multispectral images\
    \ of the gray plate (reflectivity 58%) collected simultaneously at the same \n\
    height were used to perform radiometric correction. In Pix4DMapper a vignetting\
    \ polynomial was \nused for radiometric correction. Then, the spectral reflectance\
    \ of the objects was obtained. Flight \nplanning was conducted with Mission Planner\
    \ ground control station software, which allows the \nuser to generate a route\
    \ of waypoints as a function of the sensor field of view (FOV), the degree of\
    \ \noverlap between images, and the ground resolution needed. \n \nFigure 3. Schematic\
    \ diagram of the UAV multispectral remote sensing system developed in this study.\
    \ \nFigure 3. Schematic diagram of the UAV multispectral remote sensing system\
    \ developed in this study.\nDuring the study period (20 June to 29 August 2017),\
    \ 11 UAV ﬂights were conducted on sunny\ndays between 11:00 and 13:00 local time\
    \ (Chinese standard time, 11:44–13:44) with the RedEdge camera\nlens vertically\
    \ downward, and an 80% heading and side overlap. The ﬂight height, speed, and\
    \ pixel\nresolution were 70 m (relative ﬂying height), 5 m/s, and 4.7 cm, respectively.\
    \ A total of 2185 images (ﬁve\nbands) were collected during a single ﬂight and\
    \ Pix4DMapper software was used for image mosaicking.\nTo establish the regression\
    \ models between UAV-based multispectral VIs and crop coeﬃcients\n(NDVI vs. Kcb\
    \ and TRCAI/RDVI vs. Ks), three VIs were selected: NDVI [50], transformed chlorophyll\n\
    Remote Sens. 2019, 11, 2519\n9 of 22\nabsorption in reﬂectance index (TCARI) [51],\
    \ and the renormalized diﬀerence vegetation index\n(RDVI) [52]. In addition, cubic\
    \ spline interpolation was used to determine the VI values between two\nﬂight\
    \ overpasses. Their calculation equations are as follows:\nNDVI = ρnir − ρred\n\
    ρnir + ρred\n,\n(7)\nTCARI = 3\nh\x10\nρrededge − ρred\n\x11\n− 0.2\n\x10\nρrededge\
    \ − ρgreen\n\x11\x10\nρrededge/ρred\n\x11i\n,\n(8)\nRDVI =\nρnir − ρred\n√ρnir\
    \ + ρred\n,\n(9)\nwhere ρnir, ρred, ρrededge, and ρgreen are the reﬂectance values\
    \ of ground objects in the near-infrared, red,\nred-edge, and green bands, respectively.\n\
    2.2.5. Crop Coeﬃcient Estimation Using Reﬂectance Data\nReﬂectance-based basal\
    \ crop coeﬃcient (Kcb) methods have been used to improve the irrigation\nscheduling\
    \ of maize. NDVI is one of the most widely used indices for estimating crop parameters.\n\
    This index is highly sensitive to variations of LAI and the fraction of the ground\
    \ that is covered by\nvegetation, (fc). The NDVI has a linear relationship with\
    \ fc along the whole range of vegetation cover [47].\nAccordingly in this study,\
    \ Equation (10) was used for fc estimation. In this study, one 12 m × 12 m area\n\
    was selected as the spectral sampling plot in each treatment (yellow box in Figure\
    \ 1b). Studies [53,54]\nshowed that Kcb can be estimated from fc.\nfc =\nNDVI\
    \ − NDVImin\nNDVImax − NDVImin\n,\n(10)\nwhere NDVImin and NDVImax are the minimum\
    \ and the maximum values of the NDVI associated\nwith bare soil and dense vegetation,\
    \ respectively. Once fc has been obtained through Equation (10), the\nKcb can\
    \ be estimated as:\nKcb − NDVI = 1.13 fc + 0.14,\n(11)\nThe two diﬀerent Ks obtained\
    \ from CWSI and Tc ratio were derived from the handheld infrared\nthermometer,\
    \ with daily values taken around local times between 11:00 and 13:00 (local time),\
    \ which\nare approximate times of peak stress.\nJackson et al. [30] showed that\
    \ CWSI is inversely related to the water use of the crop under\nconsideration;\
    \ Ks can also be calculated from CWSI by:\nKs−CWSI = 1 − CWSI,\n(12)\nOne of the\
    \ widely used methods for estimating CWSI is based on measured canopy\ntemperature\
    \ [30,55]. The CWSI is deﬁned in Equation (13).\nCWSI = dTm − dTLL\ndTUL − dTLL\n\
    ,\n(13)\nwhere dTm, dTLL, and dTUL are the actual measurement, lower limit, and\
    \ upper limit of the\ncanopy–air temperature diﬀerence (Tc−Ta), respectively.\n\
    More detailed information about local\nCWSI measurements can be found in Zhang\
    \ et al. [39]. CWSI = 0 indicates no water stress, while\nCWSI = 1 indicates the\
    \ most severe stress.\nZhang et al. [39] established linear regression models\
    \ (R2 = 0.80, p < 0.001) between TRCAI/RDVI\nand CWSI (Equation (14)). The local\
    \ calibration of CWSI performed in [39] was also retained here.\nThus, we could\
    \ integrate the remote sensing data into the Ks model by establishing a stable\
    \ relationship\nbetween VIs and CWSI. According to the relationship between Ks\
    \ and CWSI (i.e., Ks = 1 − CWSI)\nRemote Sens. 2019, 11, 2519\n10 of 22\nand to\
    \ rescale the Ks value between 0 and 1, the linear regression models can been\
    \ shown as per\nEquation (15):\nCWSI =\n\n0\n(TCARI/RDVI ≤ 0.195)\n2.41\
    \ ∗ (TCARI/RDVI) − 0.47\n(0.195 < TCARI/RDVI < 0.609)\n1\n(0.609 ≤ TCARI/RDVI)\n\
    ,\n(14)\nKs−CWSI =\n\n1\n(TCARI/RDVI ≤ 0.195)\n1 − (2.41 ∗ (TCARI/RDVI)\
    \ − 0.47)\n(0.195 < TCARI/RDVI < 0.609)\n0\n(0.609 ≤ TCARI/RDVI)\n,\n(15)\nAn\
    \ alternative method to evaluate water stress that only requires the crop canopy\
    \ temperature\nwas proposed by Bausch et al. [35]. The relationship between Ks\
    \ and Tc ratio is as follows:\nKs−Tc ratio = Tc ratio = TcNS\nTc\n,\n(16)\nwhere\
    \ Tc ratio is a stress coeﬃcient proposed as a surrogate for the water stress\
    \ coeﬃcient Ks from\nFAO-56. Tc is the canopy temperature and TcNS is the temperature\
    \ of a fully irrigated, non-stressed\ncanopy, which was chosen as the lowest canopy\
    \ temperature observed at the given timestamp including\nall treatments [34].\
    \ This temperature ratio was found to be capable of quantitatively monitoring\n\
    water stress and can potentially be used in the place of the water stress coeﬃcient\
    \ when soil water\nmeasurements are not available.\n2.2.6. Evapotranspiration\
    \ Comparison and Statistical Analysis\nDue to the lack of validation information\
    \ from an eddy covariance tower or lysimeter, the ET\nestimated by the modiﬁed\
    \ dual Kc method [42,48] was used to validate the model. Ding et al. [42]\nfound\
    \ good agreement between the predicted ET and transpiration using the modiﬁed\
    \ model and\nthe measurements through the lysimeter for maize in 2010, with a\
    \ slope of linear regression of 0.99\n(R2 = 0.90) and 1.01 (R2 = 0.92). Feng et\
    \ al. [48] also obtained similar results and suggested that the\nmodiﬁed dual\
    \ crop coeﬃcient method was suitable for calculating the actual daily ET of the\
    \ main\ncrops across the North China Plain. Studies [56,57] also used the local\
    \ ET estimated by the FAO-56\nKc method to validate the derived ET from their\
    \ model. Thus, employing the ET data estimated by\nthe modiﬁed FAO-56 dual Kc\
    \ method as the validation set had certain accuracy in this study. The\nsimulated\
    \ daily ET of the maize derived from the two Ks methods and NDVI-based Kcb methods\n\
    (ET-CWSI and ET-ratio) were compared with the values obtained from the modiﬁed\
    \ FAO-56 dual\ncrop coeﬃcient method. The ET-CWSI, ET-ratio, and ET-FAO values\
    \ were compared by using a linear\nregression analysis and the statistical parameters\
    \ of the coeﬃcient of determination (R2), root mean\nsquare error (RMSE), and\
    \ index of agreement (d) were used as a relative measure of the diﬀerence\namong\
    \ variables. Perfect agreement would exist between the observed and modeled values\
    \ if d = 1.\nFinally, we compared the cumulative evapotranspiration (CET) obtained\
    \ by the VI method with\nthe water balance approach to evaluate the ability of\
    \ ET determination by UAV. Cumulative ET\nobtained by the soil–water balance [58]\
    \ was used as the reference ET, and a relatively simple relation is\nexpressed\
    \ as:\n(Pr + I) + U − RO − ET − DP − ∆SW = 0,\n(17)\nwhere Pr is the eﬀective\
    \ precipitation; I is the irrigation depth; U is the ground water replenishment;\n\
    RO is the runoﬀ from the soil surface; and DP is the deep percolation of water\
    \ moving out of the root\nzone. ∆SW is the change between the ﬁrst and last measurements\
    \ of soil water storage within the root\nzone. All terms are expressed in mm.\
    \ As soil water content sensors buried at diﬀerent depths in the\nﬁeld showed\
    \ that the soil moisture at 1.2 m changed little during the study period and the\
    \ terrain\nRemote Sens. 2019, 11, 2519\n11 of 22\ninclination was <5%, the U,\
    \ RO, and DP were also considered as zero. Based on the soil–water balance\n(Equation\
    \ (17)) and the above criteria, the CET was determined as follows:\nCET = Pr +\
    \ I − ∆SW,\n(18)\n3. Results\n3.1. Meteorological Conditions and Maize Status\n\
    The temporal evolution of ET0, daily average air temperature (ATa), and canopy\
    \ temperature\n(Tc) of three diﬀerent treatments for diﬀerent growth periods are\
    \ shown in Figure 4. The ATa and\nother meteorological data for the ET0 calculation\
    \ were obtained from an automatic weather station.\nObservations showed the three\
    \ parameters decreased as the maize growth period progressed. Driven\nby the ATa,\
    \ ET0 presented a similar pattern to ATa, which conformed to the standard Penman–Monteith\n\
    equation. The highest ATa and ET0 reached 28 ◦C and 9.69 mm during the studied\
    \ period. Although\nhigher air temperatures may increase ET0, it can also inﬂuence\
    \ Tc and aﬀect crop transpiration when Tc\nexceeds the suitable canopy temperature\
    \ for maize growth. The Tc of three diﬀerent water treatments\nused for calculating\
    \ the water stress index (CWSI and Tc ratio) showed a certain numeric gradient\
    \ from\n6 to 29 August 2017. Overall, Tc increased with the degree of water deﬁcit.\
    \ Average Tc of TRTs 1 (full\nirrigation), 2 (severe deﬁcit irrigation), and 3\
    \ (light deﬁcit irrigation) were 26.4 ◦C, 28.3 ◦C, and 26.5 ◦C,\nrespectively.\
    \ The highest Tc in TRT 2 reached 34 ◦C.\n \n\n\nr\n, \n(17) \nwhere Pr is the\
    \ effective precipitation; I is the irrigation depth; U is the ground water replenishment;\
    \ \nRO is the runoff from the soil surface; and DP is the deep percolation of\
    \ water moving out of the root \nzone. ΔSW is the change between the first and\
    \ last measurements of soil water storage within the \nroot zone. All terms are\
    \ expressed in mm. As soil water content sensors buried at different depths in\
    \ \nthe field showed that the soil moisture at 1.2 m changed little during the\
    \ study period and the terrain \ninclination was <5%, the U, RO, and DP were also\
    \ considered as zero. Based on the soil–water balance \n(Equation (17)) and the\
    \ above criteria, the CET was determined as follows: \nPr\nCET\nI\nSW\n\n \
    \ \n, \n(18) \n3. Results \n3.1. Meteorological Conditions and Maize Status \
    \ \nThe temporal evolution of ET0, daily average air temperature (ATa), and canopy\
    \ temperature \n(Tc) of three different treatments for different growth periods\
    \ are shown in Figure 4. The ATa and \nother meteorological data for the ET0 calculation\
    \ were obtained from an automatic weather station. \nObservations showed the three\
    \ parameters decreased as the maize growth period progressed. Driven \nby the\
    \ ATa, ET0 presented a similar pattern to ATa, which conformed to the standard\
    \ Penman–\nMonteith equation. The highest ATa and ET0 reached 28 °C and 9.69 mm\
    \ during the studied period. \nAlthough higher air temperatures may increase ET0,\
    \ it can also influence Tc and affect crop \ntranspiration when Tc exceeds the\
    \ suitable canopy temperature for maize growth. The Tc of three \ndifferent water\
    \ treatments used for calculating the water stress index (CWSI and Tc ratio) showed\
    \ a \ncertain numeric gradient from 6 to 29 August 2017. Overall, Tc increased\
    \ with the degree of water \ndeficit. Average Tc of TRTs 1 (full irrigation),\
    \ 2 (severe deficit irrigation), and 3 (light deficit irrigation) \nwere 26.4\
    \ °C, 28.3 °C, and 26.5 °C, respectively. The highest Tc in TRT 2 reached 34 °C.\
    \  \n \nFigure 4. Daily reference evapotranspiration (ET0), average daily air\
    \ temperature (Ta), and canopy \ntemperature (Tc) during the studied period. \n\
    LAI is closely related to canopy structure, leaf number, and size, and has a strong\
    \ effect on crop \ntranspiration. When the crop is under water stress, leaf growth\
    \ is affected (i.e., curl). Variation in the \nLAI can also influence canopy spectral\
    \ information such as the NDVI. Figure 5 shows the changes of \nthe NDVI and LAI\
    \ from the vegetative to maturation stages (20 June to 29 August 2017) under three\
    \ \ndifferent irrigation treatments. The growth variables, NDVI and LAI, exhibited\
    \ comparable seasonal \npatterns (i.e., first increased, and then decreased from\
    \ early crop development to maturation). Due \nto the saturation of the NDVI,\
    \ the maximum value of NDVI appeared faster than that of the LAI. The \nNDVI reached\
    \ its maximum value of 0.84 in the late vegetative stage (DOY 207), while the\
    \ LAI was \nFigure 4. Daily reference evapotranspiration (ET0), average daily\
    \ air temperature (Ta), and canopy\ntemperature (Tc) during the studied period.\n\
    LAI is closely related to canopy structure, leaf number, and size, and has a strong\
    \ eﬀect on crop\ntranspiration. When the crop is under water stress, leaf growth\
    \ is aﬀected (i.e., curl). Variation in the\nLAI can also inﬂuence canopy spectral\
    \ information such as the NDVI. Figure 5 shows the changes of\nthe NDVI and LAI\
    \ from the vegetative to maturation stages (20 June to 29 August 2017) under three\n\
    diﬀerent irrigation treatments. The growth variables, NDVI and LAI, exhibited\
    \ comparable seasonal\npatterns (i.e., ﬁrst increased, and then decreased from\
    \ early crop development to maturation). Due to\nthe saturation of the NDVI, the\
    \ maximum value of NDVI appeared faster than that of the LAI. The\nNDVI reached\
    \ its maximum value of 0.84 in the late vegetative stage (DOY 207), while the\
    \ LAI was\nstill increasing up until the late reproductive stage (DOY 223). The\
    \ average NDVI values for TRT 1,\nTRT 2, and TRT 3 were 0.69, 0.67, and 0.70 from\
    \ the late vegetative to maturation stages, respectively,\nwhich was in line with\
    \ the water stress levels. The NDVIs of TRT 1 and TRT 3 were approximately the\n\
    same during the study stages, even though TRT 3 experienced light drought. The\
    \ maximum diﬀerence\nbetween TRT 1 and TRT 3 was 0.03 on DOY 177. Furthermore,\
    \ responses of diﬀerent crop growth stages\nto crop water stress ere also diﬀerent.\
    \ The diﬀerences in the NDVI among the three treatments during\nthe reproductive\
    \ stage were smaller than those during the vegetative and maturation stages. For\n\
    Remote Sens. 2019, 11, 2519\n12 of 22\nexample, the diﬀerences between the NDVIs\
    \ of TRT 1 and TRT 2 for the vegetation, reproductive, and\nmaturation stages\
    \ were 0.06, 0.01, and 0.08, respectively. The LAI patterns of the diﬀerent treatments\n\
    presented larger diﬀerences than those of the NDVI. Especially from the middle\
    \ vegetative to middle\nreproductive stages, the maximum diﬀerence between the\
    \ LAIs of TRT 2 and TRT 3 was 0.73 on DOY\n207, illustrating that the LAI is more\
    \ sensitive to water stress than the NDVI. On the other hand, the\nabove facts\
    \ show that it is not feasible to estimate ET only from the NDVI under water stress\
    \ condition.\n \ng\ng\np\ny\nwhich was in line with the water stress levels. The\
    \ NDVIs of TRT 1 and TRT 3 were approximately \nthe same during the study stages,\
    \ even though TRT 3 experienced light drought. The maximum \ndifference between\
    \ TRT 1 and TRT 3 was 0.03 on DOY 177. Furthermore, responses of different crop\
    \ \ngrowth stages to crop water stress ere also different. The differences in\
    \ the NDVI among the three \ntreatments during the reproductive stage were smaller\
    \ than those during the vegetative and \nmaturation stages. For example, the differences\
    \ between the NDVIs of TRT 1 and TRT 2 for the \nvegetation, reproductive, and\
    \ maturation stages were 0.06, 0.01, and 0.08, respectively. The LAI \npatterns\
    \ of the different treatments presented larger differences than those of the NDVI.\
    \ Especially \nfrom the middle vegetative to middle reproductive stages, the maximum\
    \ difference between the LAIs \nof TRT 2 and TRT 3 was 0.73 on DOY 207, illustrating\
    \ that the LAI is more sensitive to water stress \nthan the NDVI. On the other\
    \ hand, the above facts show that it is not feasible to estimate ET only \nfrom\
    \ the NDVI under water stress condition. \n \nFigure 5. Seasonal variation of\
    \ NDVI (normalized difference vegetation index) and LAI (leaf area \nindex) under\
    \ different treatments during the vegetation to early maturation stages. V, R,\
    \ and M \nrepresent the vegetative, reproductive, and maturation stages, respectively.\
    \ \n3.2. Kcb and Ks Calculated by Different Methosd \nThe basal crop coefficient,\
    \ Kcb-Tab, calculated by the modified FAO-56 method (Equations (3) \nand (4)),\
    \ was used to assess the capability of the reflectance-based basal coefficient\
    \ model to provide \naccurate estimates of ET over the maize field under three\
    \ treatments. According to the results \ncomputed by two methods in Figure 6,\
    \ Kcb derived from UAV multispectral measurements closely \ntracked modified Kcb-Tab\
    \ over the crop cycle and two Kcb responded well to the LAI (Figure 5) in \ndifferent\
    \ grown stages. They increased fast in the vegetative stage and then entered an\
    \ asymptotic \nregime when the surface was almost covered by leaves (80%) in the\
    \ reproductive stage. During the \nlate reproductive stage, the Kcb values began\
    \ to decline and the slope of the decrease in TRTs 2 and \n3 were higher than\
    \ TRT 1 due to the water stress. The Kcb-Tab and Kcb-NDVI in the three treatments\
    \ \nalso showed certain value differences. In general, the Kcb values increased\
    \ with the irrigation levels. \nFor instance, the average observed Kcb-NDVI were\
    \ 0.86, 0.81, and 0.84 for TRT 1, 2, and 3, \nrespectively.  \nFigure 5. Seasonal\
    \ variation of NDVI (normalized diﬀerence vegetation index) and LAI (leaf area\
    \ index)\nunder diﬀerent treatments during the vegetation to early maturation\
    \ stages. V, R, and M represent the\nvegetative, reproductive, and maturation\
    \ stages, respectively.\n3.2. Kcb and Ks Calculated by Diﬀerent Methosd\nThe basal\
    \ crop coeﬃcient, Kcb-Tab, calculated by the modiﬁed FAO-56 method (Equations\
    \ (3)\nand (4)), was used to assess the capability of the reﬂectance-based basal\
    \ coeﬃcient model to provide\naccurate estimates of ET over the maize ﬁeld under\
    \ three treatments. According to the results computed\nby two methods in Figure\
    \ 6, Kcb derived from UAV multispectral measurements closely tracked\nmodiﬁed\
    \ Kcb-Tab over the crop cycle and two Kcb responded well to the LAI (Figure 5)\
    \ in diﬀerent\ngrown stages. They increased fast in the vegetative stage and then\
    \ entered an asymptotic regime when\nthe surface was almost covered by leaves\
    \ (80%) in the reproductive stage. During the late reproductive\nstage, the Kcb\
    \ values began to decline and the slope of the decrease in TRTs 2 and 3 were higher\
    \ than\nTRT 1 due to the water stress. The Kcb-Tab and Kcb-NDVI in the three treatments\
    \ also showed certain\nvalue diﬀerences. In general, the Kcb values increased\
    \ with the irrigation levels. For instance, the\naverage observed Kcb-NDVI were\
    \ 0.86, 0.81, and 0.84 for TRT 1, 2, and 3, respectively.\nRemote Sens. 2018,\
    \ 10, x FOR PEER REVIEW  \n13 of 22 \n \nFigure 6. Comparison of the Kcb values\
    \ calculated by using two methods in three different treatments: \nTRT 1 (a),\
    \ TRT 2 (b) and TRT 3 (c). The Kcb-NDVI values were retrieved from regression\
    \ model \n(Equations (10) and (11)) of Kcb vs. NDVI, and Kcb-Tab were calculated\
    \ by the modified FAO-56 \nmethod (Equations (4) and (5)).  \nKcb only accounts\
    \ for the potential evapotranspiration and the actual ET should be modified \n\
    with Ks for crops undergoing deficit-irrigation. Two Ks obtained by the water\
    \ stress indices CWSI \nand Tc ratio, which were calculated in turn by Tc, Ta,\
    \ and Tc NS derived from the measurements of the \nhandheld infrared thermometer,\
    \ were used to evaluate the effects of water deficit on crop ET. Figure \n7 shows\
    \ the daily values of irrigation/rainfall events and different Ks values from\
    \ various approaches \nfor TRT 1 (Figure 7a), TRT 2 (Figure 7b), and TRT 3 (Figure\
    \ 7c). The three Ks values increased after \ni i\ni\n/\ni f ll\nd d\nd\ni h\n\
    i i\ni\n/\ni f ll\ndi\nll\ni i\ni\n/\ni f ll\nFigure 6. Comparison of the Kcb\
    \ values calculated by using two methods in three diﬀerent treatments:\nTRT 1\
    \ (a), TRT 2 (b) and TRT 3 (c). The Kcb-NDVI values were retrieved from regression\
    \ model\n(Equations (10) and (11)) of Kcb vs. NDVI, and Kcb-Tab were calculated\
    \ by the modiﬁed FAO-56\nmethod (Equations (4) and (5)).\nRemote Sens. 2019, 11,\
    \ 2519\n13 of 22\nKcb only accounts for the potential evapotranspiration and the\
    \ actual ET should be modiﬁed\nwith Ks for crops undergoing deﬁcit-irrigation.\
    \ Two Ks obtained by the water stress indices CWSI\nand Tc ratio, which were calculated\
    \ in turn by Tc, Ta, and Tc NS derived from the measurements of the\nhandheld\
    \ infrared thermometer, were used to evaluate the eﬀects of water deﬁcit on crop\
    \ ET. Figure 7\nshows the daily values of irrigation/rainfall events and diﬀerent\
    \ Ks values from various approaches\nfor TRT 1 (Figure 7a), TRT 2 (Figure 7b),\
    \ and TRT 3 (Figure 7c). The three Ks values increased after\nirrigation/rainfall\
    \ and decreased with no irrigation/rainfall, responding well to irrigation/rainfall\
    \ events.\nThe Ks values for diﬀerent levels of deﬁcit irrigation in the reproductive\
    \ and maturation stages had\na clear numerical gradient. As TRT 1 was in the full\
    \ irrigation area, the Ks calculated by the soil\nwater content data (Equations\
    \ (5) and (6)) was equal to 1, but a considerable part of the Ks calculated\n\
    by the water stress indices was less than 1 (see Figure 7a). It is probable that\
    \ even a well-watered\ncrop could have a high canopy temperature because of very\
    \ hot day. TRT 2 presented the lowest\nKs values when compared with TRTs 1 and\
    \ 3. The averaged Ks-CWSI, Ks-Tc ratio, and Ks-FAO were\n0.94, 0.89, and 1 for\
    \ TRT 1; 0.72, 0.81, and 0.66 for TRT 2; and 0.91, 0.88, and 0.88 for TRT 3 (see\n\
    Table 3), respectively, indicating that TRTs 1 and 3 had less water stress than\
    \ TRT 2. The daily changes\nof Ks calculated by diﬀerent methods showed similar\
    \ patterns, as depicted in Figure 7, while the\nsensitivity of diﬀerent methods\
    \ to water deﬁcit was diﬀerent, and the speciﬁc values between the three\nmethods\
    \ displayed relatively large diﬀerences in this study. On the whole, Ks-CWSI and\
    \ Ks-FAO had\ngreater variability than Ks-Tc ratio under water stress conditions,\
    \ and the minimum Ks-FAO was as\nlow as 0.38, while Ks-Tc ratio was 0.63 in the\
    \ three treatments. Due to the drought resistance of crops,\na reduction of water\
    \ in the root zone does not immediately lead to crop stress. Thus, the canopy\n\
    temperature may be a more realistic parameter than soil water content to represent\
    \ the stress coeﬃcient\ndue to the complicated physiological processes that plants\
    \ undergo as they encounter water stress and\ncompensate for this stress.\n \n\
    \ \nFigure 6. Comparison of the Kcb values calculated by using two methods in\
    \ three different treatments: \nTRT 1 (a), TRT 2 (b) and TRT 3 (c). The Kcb-NDVI\
    \ values were retrieved from regression model \n(Equations (10) and (11)) of Kcb\
    \ vs. NDVI, and Kcb-Tab were calculated by the modified FAO-56 \nmethod (Equations\
    \ (4) and (5)).  \nKcb only accounts for the potential evapotranspiration and\
    \ the actual ET should be modified \nwith Ks for crops undergoing deficit-irrigation.\
    \ Two Ks obtained by the water stress indices CWSI \nand Tc ratio, which were\
    \ calculated in turn by Tc, Ta, and Tc NS derived from the measurements of the\
    \ \nhandheld infrared thermometer, were used to evaluate the effects of water\
    \ deficit on crop ET. Figure \n7 shows the daily values of irrigation/rainfall\
    \ events and different Ks values from various approaches \nfor TRT 1 (Figure 7a),\
    \ TRT 2 (Figure 7b), and TRT 3 (Figure 7c). The three Ks values increased after\
    \ \nirrigation/rainfall and decreased with no irrigation/rainfall, responding\
    \ well to irrigation/rainfall \nevents. The Ks values for different levels of\
    \ deficit irrigation in the reproductive and maturation \nstages had a clear numerical\
    \ gradient. As TRT 1 was in the full irrigation area, the Ks calculated by \n\
    the soil water content data (Equations (5) and (6)) was equal to 1, but a considerable\
    \ part of the Ks \ncalculated by the water stress indices was less than 1 (see\
    \ Figure 7a). It is probable that even a well-\nwatered crop could have a high\
    \ canopy temperature because of very hot day. TRT 2 presented the \nlowest Ks\
    \ values when compared with TRTs 1 and 3. The averaged Ks-CWSI, Ks-Tc ratio, and\
    \ Ks-FAO \nwere 0.94, 0.89, and 1 for TRT 1; 0.72, 0.81, and 0.66 for TRT 2; and\
    \ 0.91, 0.88, and 0.88 for TRT 3 (see \nTable 3), respectively, indicating that\
    \ TRTs 1 and 3 had less water stress than TRT 2. The daily changes \nof Ks calculated\
    \ by different methods showed similar patterns, as depicted in Figure 7, while\
    \ the \nsensitivity of different methods to water deficit was different, and the\
    \ specific values between the \nthree methods displayed relatively large differences\
    \ in this study. On the whole, Ks-CWSI and Ks-\nFAO had greater variability than\
    \ Ks-Tc ratio under water stress conditions, and the minimum Ks-FAO \nwas as low\
    \ as 0.38, while Ks-Tc ratio was 0.63 in the three treatments. Due to the drought\
    \ resistance of \ncrops, a reduction of water in the root zone does not immediately\
    \ lead to crop stress. Thus, the canopy \ntemperature may be a more realistic\
    \ parameter than soil water content to represent the stress \ncoefficient due\
    \ to the complicated physiological processes that plants undergo as they encounter\
    \ \nwater stress and compensate for this stress. \n \nFigure 7. Ks obtained by\
    \ using CWSI, Tc ratio, and soil moisture data for (a) TRT 1, (b) TRT 2, and (c)\
    \ \nTRT 3 from 6 to 29 August 2017. The depths (mm) of individual irrigation (I)\
    \ and precipitation (P) \nevents are plotted as vertical bars. \nTable 3. Mean\
    \ values of Ks-CWSI, Ks-Tc ratio, and Ks-FAO for each irrigation treatment from\
    \ 6 to 29 \nAugust 2017. \nFigure 7. Ks obtained by using CWSI, Tc ratio, and\
    \ soil moisture data for (a) TRT 1, (b) TRT 2, and (c) TRT\n3 from 6 to 29 August\
    \ 2017. The depths (mm) of individual irrigation (I) and precipitation (P) events\n\
    are plotted as vertical bars.\nTable 3. Mean values of Ks-CWSI, Ks-Tc ratio, and\
    \ Ks-FAO for each irrigation treatment from 6 to 29\nAugust 2017.\nTreatment\n\
    Ks-CWSI\nKs-Tc ratio\nKs-FAO\nTRT 1\n0.94\n0.89\n1\nTRT 2\n0.72\n0.81\n0.66\n\
    TRT 3\n0.90\n0.88\n0.88\n3.3. Model Selection for Estimating Crop ET\nMaize ET\
    \ for the three irrigation treatments during 6–29 August 2017 was calculated by\
    \ various\ntechniques. As the canopy temperature and soil water content (θ) acquisition\
    \ were in the period of\nhigh coverage, and two or three days after the irrigation\
    \ and precipitation. Thus, the minor inﬂuence of\nevaporation on total ET was\
    \ ignored. The derived ET from the combination of two water stress indices\nand\
    \ the combined NDVI-based Kcb (i.e., ET-CWSI and ET-ratio) were validated at the\
    \ ﬁeld scale using\nRemote Sens. 2019, 11, 2519\n14 of 22\nthe modiﬁed FAO-56\
    \ ET (ET-FAO) by using three performance measure criteria (i.e., coeﬃcient of\n\
    determination (R2), root mean square error (RMSE), and index of agreement (d)).\
    \ The value of d, which\nis presented in Figure 8a,b, was greater than 0.9 which\
    \ indicates that ET based on water stress had\na strong ﬁt for the ET-FAO. However,\
    \ ET-CWSI showed the least bias with an acceptable accuracy\nwith an R2 = 0.81\
    \ and RMSE of about 0.95 mm/day (NRMSE = 11.1%), while the ET-ratio had an\noverall\
    \ slightly lower correlation than the CWSI with a lower R2 = 0.68 and RMSE about\
    \ 1.26 mm/day\n(NRMSE = 14.6%). Thus, the validation results from the R2 and RMSE\
    \ viewpoints demonstrated that\nthe CWSI method was better than the Tc ratio and\
    \ could be used as a quantitative index to calculate\nmaize evapotranspiration\
    \ in this study.\n \nTRT 3 \n0.90  \n0.88  \n0.88 \n3.3. Model Selection for Estimating\
    \ Crop ET \nMaize ET for the three irrigation treatments during 6–29 August 2017\
    \ was calculated by various \ntechniques. As the canopy temperature and soil water\
    \ content (θ) acquisition were in the period of \nhigh coverage, and two or three\
    \ days after the irrigation and precipitation. Thus, the minor influence \nof\
    \ evaporation on total ET was ignored. The derived ET from the combination of\
    \ two water stress \nindices and the combined NDVI-based Kcb (i.e., ET-CWSI and\
    \ ET-ratio) were validated at the field \nscale using the modified FAO-56 ET (ET-FAO)\
    \ by using three performance measure criteria (i.e., \ncoefficient of determination\
    \ (R2), root mean square error (RMSE), and index of agreement (d)). The \nvalue\
    \ of d, which is presented in Figure 8a,b, was greater than 0.9 which indicates\
    \ that ET based on \nwater stress had a strong fit for the ET-FAO. However, ET-CWSI\
    \ showed the least bias with an \nacceptable accuracy with an R2 = 0.81 and RMSE\
    \ of about 0.95 mm/day (NRMSE = 11.1%), while the \nET-ratio had an overall slightly\
    \ lower correlation than the CWSI with a lower R2 = 0.68 and RMSE \nabout 1.26\
    \ mm/day (NRMSE = 14.6%). Thus, the validation results from the R2 and RMSE viewpoints\
    \ \ndemonstrated that the CWSI method was better than the Tc ratio and could be\
    \ used as a quantitative \nindex to calculate maize evapotranspiration in this\
    \ study.  \n \nFigure 8. Scatterplots of maize ET obtained by the modified FAO-56\
    \ dual crop coefficient method (ET-\nFAO) compared with (a) stress coefficient\
    \ CWSI (ET-CWSI), and (c) Tc ratio (ET-Tc ratio) methods in three \ntreatments.\
    \ Black dotted line is the 1:1 line from 6 to 29 August 2017. The regression relation,\
    \ \ncoefficient of determination (R2), root mean square error (RMSE), and index\
    \ of agreement (d) are also \nshown. \n3.4. Maize Evapotranspiration Maps Based\
    \ on UAV Multispectral Remote Sensing Imagery \nWe retrieved the maize evapotranspiration\
    \ map by combining the Ks map based on UAV \nTCARI/RDVI (Equation (15)) with the\
    \ Kcb map based on the NDVI, according to the FAO-56 dual \ncrop coefficient method.\
    \ Figure 9 and Table 4 show the results of ET on DOY 217, 221, 231, and 241 \n\
    during the reproductive and maturation stages. ET was seen to decrease with decreasing\
    \ irrigation \namong the three different irrigation levels. On DOY 217, the highest\
    \ value of ET in the study field \nreached approximately 8 mm because of the previous\
    \ day’s rainfall. In addition, different treatments \npresented similar mean ET\
    \ on DOY 217. On DOY 231 and 241, there were relatively less ET because \nFigure\
    \ 8. Scatterplots of ET obtained using two stress coeﬃcient methods vs. ET obtained\
    \ by modiﬁed\nFAO-56 dual crop coeﬃcient method in three treatments from 6 to\
    \ 29 August 2017. Methods include\nCWSI (a), Tc ratio (b). Black dotted line is\
    \ the 1:1 line. The regression relation, coeﬃcient of determination\n(R2), root\
    \ mean square error (RMSE), and index of agreement (d) are also shown.\n3.4. Maize\
    \ Evapotranspiration Maps Based on UAV Multispectral Remote Sensing Imagery\n\
    We retrieved the maize evapotranspiration map by combining the Ks map based on\
    \ UAV\nTCARI/RDVI (Equation (15)) with the Kcb map based on the NDVI, according\
    \ to the FAO-56 dual crop\ncoeﬃcient method. Figure 9 and Table 4 show the results\
    \ of ET on DOY 217, 221, 231, and 241 during\nthe reproductive and maturation\
    \ stages. ET was seen to decrease with decreasing irrigation among\nthe three\
    \ diﬀerent irrigation levels. On DOY 217, the highest value of ET in the study\
    \ ﬁeld reached\napproximately 8 mm because of the previous day’s rainfall. In\
    \ addition, diﬀerent treatments presented\nsimilar mean ET on DOY 217. On DOY\
    \ 231 and 241, there were relatively less ET because of higher\ntemperature and\
    \ less irrigation or rainfall, with maximum values of approximately 5 mm, and\
    \ 4 mm,\nrespectively. On DOY 221, 231 and 241, the minimum ET can be found in\
    \ TRT 2. In these three days,\nthe mean ET of TRT 2 was 5.72 mm, 4.23 mm and 1.33\
    \ mm, respectively. Especially on DOY 241, most\nof the maize was in a state of\
    \ almost no transpiration due to a long-term lack of irrigation/rainfall.\nRemote\
    \ Sens. 2019, 11, 2519\n15 of 22\n \nthe maize growth period in TRTs 2 and 3,\
    \ which illustrated that the prolonged water stress distinctly \ndetected spatial\
    \ fluctuations in field soil heterogeneity via its influences on maize evapotranspiration\
    \ \ncondition. For instance, in the deficit irrigation treatment TRTs 2 and 3,\
    \ CVs increased from 9% to \n34% and 8% to 18% with the accumulation of water\
    \ stress. On the other hand, a higher CV in TRT 2 \ndemonstrated that the dual\
    \ effect of soil heterogeneity and water stress could severely affect maize \n\
    ET. \n \nFigure 9. Maize evapotranspiration maps retrieved by combining CWSI-TCARI/RDVI\
    \ and Kcb-NDVI \nregression models (equation (14) and (15)). (a) and (b) are evapotranspiration\
    \ maps for the \nreproductive (DOY 217 and DOY221) stages. (c) and (d) are the\
    \ evapotranspiration maps for the \nmaturation (DOY 217 and DOY221) stages. \n\
    Table 4. Coefficient of variation (CV; %) and mean ET over each sample area under\
    \ different water \ntreatments on DOY 217, 221, 231, and 241. \nFigure 9. Maize\
    \ evapotranspiration maps retrieved by combining CWSI-TCARI/RDVI (Equation (14)\n\
    and (15)) and Kcb-NDVI (Equation (10) and (11)) regression models. (a) and (b)\
    \ are evapotranspiration\nmaps for the reproductive (DOY 217 and DOY221) stages.\
    \ (c) and (d) are the evapotranspiration maps\nfor the maturation (DOY231 and\
    \ DOY241) stages.\nTable 4. Coeﬃcient of variation (CV; %) and mean ET over each\
    \ sample area under diﬀerent water\ntreatments on DOY 217, 221, 231, and 241.\n\
    Time\nTRT 1\nTRT 2\nTRT 3\nMean (mm)\nCV (%)\nMean (mm)\nCV (%)\nMean (mm)\nCV\
    \ (%)\nDOY 217\n6.72\n10\n6.91\n8\n7.20\n8\nDOY 221\n6.41\n8\n5.72\n12\n6.68\n\
    7\nDOY 231\n5.05\n11\n4.23\n16\n4.94\n10\nDOY 241\n2.59\n13\n1.33\n34\n2.12\n\
    18\nThe diﬀerent soil texture and soil heterogeneity led to diﬀerent water, fertilizer,\
    \ gas, and heat\nconditions and diﬀerent crop growth status. We could even observe\
    \ the diﬀerences of ET in the\nsame treatment through the high spatial resolution\
    \ (4.7 cm) multispectral images. Table 4 shows the\ntreatment values of CV (coeﬃcient\
    \ of variation) and mean ET. The diﬀerent water treatments in spatial\nvariations\
    \ of ﬁeld ET capacity from the reproductive to maturation stage were distinct.\
    \ On the whole,\nCV increased with decreased ET and increased water stress. In\
    \ addition, CV increased over the maize\ngrowth period in TRTs 2 and 3, which\
    \ illustrated that the prolonged water stress distinctly detected\nspatial ﬂuctuations\
    \ in ﬁeld soil heterogeneity via its inﬂuences on maize evapotranspiration condition.\n\
    For instance, in the deﬁcit irrigation treatment TRTs 2 and 3, CVs increased from\
    \ 9% to 34% and 8% to\nRemote Sens. 2019, 11, 2519\n16 of 22\n18% with the accumulation\
    \ of water stress. On the other hand, a higher CV in TRT 2 demonstrated that\n\
    the dual eﬀect of soil heterogeneity and water stress could severely aﬀect maize\
    \ ET.\nNext, the cumulative daily values of ET from 6 to 29 August 2017 for the\
    \ three irrigation treatments\nwere calculated by two techniques. (1) The VIs\
    \ (the average value of the entire treatment zone) method,\nwhere daily crop water\
    \ requirement (ET) was calculated by multiplying the daily crop coeﬃcients of\n\
    daily ET0 (Equation (1)). As above-mentioned, crop coeﬃcients were derived through\
    \ the relationships\nbetween Kcb and NDVI, and between Ks and TRCAI/RDVI. In addition,\
    \ a cubic interpolation was\nused to determine the values of VIs (NDVI, TRCAI,\
    \ and RDVI) between two UAV ﬂights. (2) The water\nbalance approach (Equation\
    \ (18)). As presented in Table 5, the total water consumption of the three\ntreatments\
    \ for the study period were 75 mm, 53 mm, and 67 mm, respectively. The diﬀerence\
    \ between\nthe cumulative ET calculated by the VIs method and water balance approach\
    \ were 2.6 mm, 8.9 mm,\nand 5 mm, respectively. Note that the retrieved ET were\
    \ similar to the crop water consumption.\nTable 5. Cumulative ET from the 6–29\
    \ August 2017 investigative period calculated by the VI (vegetation\nindex) method\
    \ and water balance approach for the three irrigation treatments.\nTreatment\n\
    VIs (mm)\nWB (mm)\nTRT1\n72.4\n75\nTRT2\n61.9\n53\nTRT3\n72\n67\n4. Discussion\n\
    Daily ET represents the most important process for the determination of the surface\
    \ and\nmass-energy interaction for both water resource management and agricultural\
    \ practices. At present,\nthere are mainly two types of models for ET assessment.\
    \ The ﬁrst involves models using thermal band\nbased energy-balance approaches\
    \ (SEB) [59,60]. The second method utilizes the empirical VI model.\nThough the\
    \ surface energy balance models are able to estimate ET with ﬁne accuracy. Deﬁciencies\n\
    in the current suite of thermal data sources (e.g., plenty of data requirements,\
    \ biases, inaccurate\ncalibration, poor spatial or temporal resolution) can strongly\
    \ limit the applicability of such procedures\nfor the continuous monitoring of\
    \ ET at a high spatiotemporal resolution [61]. Due to the longstanding\nfamiliarity\
    \ and widespread use within the irrigation community of crop coeﬃcient approaches\
    \ and\ntheir relative operational simplicity, reﬂectance-based crop coeﬃcients\
    \ might elicit a successful and\nfar-reaching approach for improving irrigation\
    \ management [12]. Multispectral VIs calculated from\ncanopy reﬂectance can be\
    \ used to simulate real-time Kcb. Figure 6 shows that there was a strong\nsimilarity\
    \ between the Kcb-NDVI and Kcb-Table. With the help of UAVs, we can provide more\n\
    sophisticated Kcb information for irrigation management. Studies [29,62] showed\
    \ that the VI-Kcb\nmodel can perform well under well irrigation conditions, but\
    \ that it could be diﬃcult to capture actual\nET under the water stress condition.\
    \ Water stress evaluation (Ks) based on soil water storage in the root\nzone is\
    \ the traditional and common method, but is costly and there is a shortage of\
    \ representation. For\ninstance, Er-Raki et al. [29] reported that the original\
    \ FAO-56 model may overestimate eddy covariance\nmeasurements because of the misrepresentation\
    \ of the soil stress factor.\nTo deal with these defects, Ks estimation is mainly\
    \ divided into direct and indirect methods. In\nindirect methods, they usually\
    \ need to ﬁrst obtain the potential ET (PET) and actual ET, and then\ncalculate\
    \ Ks through the soil–water balance. It is diﬃcult to obtain the actual ET because\
    \ sophisticated\nand costly instruments such as eddy covariance and lysimeters\
    \ are generally limited. On the other\nhand, estimating Ks through the indirect\
    \ method is not only laborious, but is also not time-eﬀective.\nDiarra et al.\
    \ [63] highlighted the uncertainty of indirect assessment in detecting crop water\
    \ stress in\nlight of the decision making process for irrigation planning. Therefore,\
    \ the direct calculation of Ks\nis very important for the application of the FAO-56\
    \ dual Kc method. Some studies have employed\nwater stress indices derived from\
    \ temperature data as the proxy. For instance, Kullberg et al. [33] used\nfour\
    \ canopy temperature–based methods (CWSI, degrees above non-stressed (DANS), degrees\
    \ above\nRemote Sens. 2019, 11, 2519\n17 of 22\ncanopy threshold (DACT), and Tc\
    \ ratio derived from infrared thermal radiometer) to calculate Ks and\nestimate\
    \ ET in a deﬁcit irrigation experiment of corn. A similar observation was made\
    \ by this study\nwhen estimating Ks for maize with the CWSI. Figure 9 shows that\
    \ the Ks derived CWSI was useful to\nestimate ET, with an acceptable accuracy\
    \ of R2 = 0.81 and RMSE about 0.95 mm/day when compared\nwith the modiﬁed FAO-56\
    \ Kc method. Bausch et al. [35] also obtained similar results using Tc ratio.\
    \ The\napplicability of the water stress index may be diﬀerent in diﬀerent areas\
    \ and cultivation conditions,\nso it is necessary to choose the local appropriate\
    \ water stress index. Furthermore, the water stress\nindices based on canopy temperature\
    \ may be a more realistic parameter than soil–water content to\nrepresent the\
    \ stress coeﬃcient due to the complicated physiological processes that plants\
    \ undergo as\nthey encounter water stress [35]. In Figure 7, we can see that the\
    \ Ks values calculated by CWSI are\nnot 1, as are the FAO-56 Ks in full-irrigation\
    \ TRT 1. It is probable that even a well-watered crop could\nhave a high canopy\
    \ temperature because of other changes in microclimate such as air temperature\n\
    and vapor pressure deﬁcit (VPD) [64]. The change in the air temperature surrounding\
    \ the leaf will\nchange the leaf temperature and directly aﬀect the gradient of\
    \ water vapor between the leaf and the\natmosphere. Water deﬁcit stress and heat\
    \ stress may be induced by changes in available water, VPD,\nand increased ambient\
    \ air temperature [65].\nStationary infrared thermometers were mainly used for\
    \ validating the relationship between water\nstress indictors and Ks [33,35],\
    \ which can be greatly constrained by transport and operator costs and it\ncan\
    \ be diﬃcult to obtain large area images of crop. These shortcomings may cause\
    \ signiﬁcant errors\ndue to the diﬃculty of achieving a spatially-homogenous,\
    \ targeted soil, or plant water status. More\nimportantly, it is diﬃcult to obtain\
    \ Kcb and Ks on a large area at the same time. Kcb and Ks from\ndiﬀerent platforms\
    \ and scales will inevitably lead to errors in estimating ET, especially with\
    \ the high\nheterogeneities of soil and crops. Several studies [36,66,67] have\
    \ revealed the feasibility of mapping\ncrop water conditions using spectral vegetation\
    \ indices, taking advantage of the high spatial resolution\ncapabilities that\
    \ are more diﬃcult in the thermal region. The RDVI and TCARI were developed\n\
    to reduce the variability of the photosynthetically active radiation due to the\
    \ presence of diverse\nnon-photosynthetic materials and are useful in plant stress\
    \ monitoring to capture the changes in canopy\nstructures caused by water stress\
    \ [36,68]. Compared to the Ks calculated by on-site measurements, the\nKs based\
    \ on VI-Ks regression models could better reﬂect the water stress conditions of\
    \ maize at the\nﬁeld scale. Taking DOY 231 as an example, the mean ET could well\
    \ reﬂect TRT 2 (69%) and TRT 1\n(100%) in the reproductive stage, with the corresponding\
    \ values of 5.05 mm and 4.23 mm, respectively.\nTable 5 conﬁrmed the utility of\
    \ VIs to help constrain the ET components under three diﬀerent water\ntreatments.\
    \ Cumulative estimated ET diﬀered from the observed by only 2.6 mm, 8.9 mm, and\
    \ 5 mm\nfor TRTs 1, 2, and 3, respectively. The result during the 24-day investigative\
    \ period conﬁrmed that\nthe model may be suitable for clearly distinguishing the\
    \ diﬀerent irrigation schemes. In addition, we\ncould obtain accurate ET only\
    \ through the meteorological and UAV multispectral images.\nPrevious studies have\
    \ reported on combining the FAO-56 Kc model with Landsat [13,57,69],\nSPOT [25,70],\
    \ and Sentinel 2 [71] data to estimate the crop coeﬃcient and map crop water consumption.\n\
    However, with satellite remote sensing, a pixel represents a large area. It is\
    \ diﬃcult to observe the\nvariability in crop status on the ﬁeld scale and to\
    \ formulate precise irrigation plans. In addition, newly\nhigher resolution observation\
    \ platforms may be too costly for crop monitoring. In contrast, UAVs\ncan monitor\
    \ ﬁeld ET information scale up information from the leaf to canopy/ﬁeld levels\
    \ and maybe\nsuitable technology for actual problem scouting within the ﬁeld scale.\
    \ From the ET maps (Figure 9), we\ncan observe that the evapotranspiration of\
    \ crops varied even with the same treatment. Table 4 shows\nthe mean and CV values\
    \ of diﬀerent treatments due to the diﬀerent soil texture and soil heterogeneity\n\
    in the ﬁeld. Explicitly, because of the dual eﬀect of soil heterogeneity and water\
    \ stress, the CV of\nET reached 34% on DOY 241. Acquiring such data for planning\
    \ is probably the role most people\nenvisage when they think of UAV remote sensing\
    \ for precision agriculture. For example, Shi et al. [72]\nproposed a decision\
    \ support system for variable rate irrigation through ﬁeld ET maps acquired by\n\
    multispectral UAV images, which were inputs to the fuzzy inference system and\
    \ were successful in\nRemote Sens. 2019, 11, 2519\n18 of 22\nproviding a duty-cycle\
    \ control map for a central pivot variable rate irrigation system. Compared with\n\
    satellite remote sensing data, using UAV for ﬁeld information management has unique\
    \ advantages,\nbut there are still challenges in its application. UAV remote sensing\
    \ images usually need to be acquired\non-site by researchers, which may lead to\
    \ problems if the research area is remote and diﬃcult to reach,\nand the UAV cannot\
    \ take long-distance photographs due to battery power limitations, so there are\n\
    certain limitations in wider-range crop monitoring. Moreover, using UAVs for planning\
    \ has high costs\nfor data acquisition and analysis. To make monitoring economically\
    \ worthwhile for farmers, new\nmethods of analysis are needed to bring costs down.\
    \ Even so, UAV technology is now available to give\nfarmers the data products\
    \ they have long been requesting from remote sensing [73]. In sum, this study\n\
    demonstrates the feasibility of mapping maize crop ET under the water stress condition\
    \ and monitor\nits spatial variability at a ﬁeld scale by using UAV-based VI-Kcb\
    \ and VI-Ks regression models.\n5. Conclusions\nAs the most widely used approach\
    \ for calculating crop evapotranspiration (ET), the FAO-56 dual\nKc method has\
    \ been increasingly used and improved with remote sensing data. However, the accurate\n\
    estimation of the temporal and spatial variability of crop ET within the ﬁeld\
    \ scale is still a challenge,\nespecially when water stress occurs. To better\
    \ monitor water requirements under water stress and\nprovide a simpler and more\
    \ maneuverable method for farming practices, this study investigated\nwhether\
    \ an UAV-based multispectral remote sensing system could map the evapotranspiration\
    \ of\nmaize under diﬀerent levels of deﬁcit irrigation at the ﬁeld scale as a\
    \ supplement to the dual crop\ncoeﬃcient model. We conﬁrmed that CWSI can be a\
    \ better index assimilated into local maize ET\nestimation under deﬁcit irrigation.\
    \ The comparison results show that the ET derived from Ks-CWSI\nhad a higher correlation\
    \ with the modiﬁed FAO-56 Kc method, with a coeﬃcient of determination\nvalue\
    \ of 0.81, root mean square error value of 0.96 mm/d, and index of agreement value\
    \ of 0.94. Based\non which, a stable relationship between VIs and crop coeﬃcients\
    \ (Kcb and Ks) can be assimilated\ninto the FAO-56 dual Kc method for ﬁeld maize\
    \ ET estimation. Thanks to the UAV system, we could\nobtain high-resolution images\
    \ with higher frequencies for ﬁner irrigation management. In summary,\nthis study\
    \ demonstrates the feasibility of mapping maize crop evapotranspiration and monitoring\
    \ its\nspatial variability within the ﬁeld scale by using UAV-based multispectral\
    \ images under the water\nstress condition. Future experiments will incorporate\
    \ the ground validation (eddy covariance or\nlysimeter) of ET to provide an independent\
    \ assessment of model accuracy and use more convenient\nand reliable water stress\
    \ indices to evaluate crop stress and quantify crop evapotranspiration over a\n\
    longer crop growth period.\nAuthor Contributions: Conceptualization, J.T. and\
    \ W.H.; methodology, J.T. and L.Z.; software, J.T.; validation,\nW.H.; formal\
    \ analysis, J.T.; investigation, J.T. and L.Z.; writing—original draft preparation,\
    \ J.T.; writing—review\nand editing, L.Z.; visualization, J.T.; supervision, W.H;\
    \ project administration, W.H.; funding acquisition, W.H.; All\nauthors read and\
    \ approved the ﬁnal version.\nFunding: This study was supported by the 13th Five-Year\
    \ Plan for the Chinese National Key R&D Project\n(2017YFC0403203), the 111 Project\
    \ (No. B12007) and the Major Project of Industry–Education–Research Cooperative\n\
    Innovation in Yangling Demonstration Zone in China (2018CXY-23).\nAcknowledgments:\
    \ We are grateful to Guomin Shao for the data collection.\nConﬂicts of Interest:\
    \ The authors declare no conﬂicts of interest.\nReferences\n1.\nBelaqziz, S.;\
    \ Khabba, S.; Er-Raki, S.; Jarlan, L.; Le Page, M.; Kharrou, M.H.; Adnani, M.E.;\
    \ Chehbouni, A. A\nnew irrigation priority index based on remote sensing data\
    \ for assessing the networks irrigation scheduling.\nAgric. Water Manag. 2013,\
    \ 119, 1–9. [CrossRef]\n2.\nXu, X.; Zhang, M.; Li, J.; Liu, Z.; Zhao, Z.; Zhang,\
    \ Y.; Zhou, S.; Wang, Z. Improving water use eﬃciency and\ngrain yield of winter\
    \ wheat by optimizing irrigations in the North China Plain. Field Crops Res. 2018,\
    \ 221,\n219–227. [CrossRef]\nRemote Sens. 2019, 11, 2519\n19 of 22\n3.\nFerreira,\
    \ M. Stress Coeﬃcients for Soil Water Balance Combined with Water Stress Indicators\
    \ for Irrigation\nScheduling of Woody Crops. Horticulturae 2017, 3. [CrossRef]\n\
    4.\nAllen, R.G.; Pereira, L.S.; Howell, T.A.; Jensen, M.E. Evapotranspiration\
    \ information reporting: I. Factors\ngoverning measurement accuracy. Agric. Water\
    \ Manag. 2011, 98, 899–920. [CrossRef]\n5.\nDe Oliveira, L.A.; Casaroli, D.; Junior,\
    \ J.A.; Pego Evangelista, A.W. Evapotranspiration: A scientometric\nanalysis.\
    \ Cientiﬁca 2019, 47, 8–14. [CrossRef]\n6.\nAllen, R.; Pereira, L.; Raes, D.;\
    \ Smith, M. FAO Irrigation and drainage paper No. 56. Rome Food Agric. Organ.\n\
    U. N. 1998, 56, 26–40.\n7.\nPereira, L.; Allen, R.; Smith, M.; Raes, D. Crop evapotranspiration\
    \ estimation with FAO56: Past and future.\nAgric. Water Manag. 2015, 147, 4–20.\
    \ [CrossRef]\n8.\nKilic, A.; Allen, R.; Kjaersgaard, J.; Huntington, J.; Kamble,\
    \ B.; Trezza, R.; Ratcliﬀe, I. Operational Remote\nSensing of ET and Challenges.\
    \ Evapotranspiration—Remote Sens. Model. 2012. [CrossRef]\n9.\nGontia, N.K.; Tiwari,\
    \ K.N. Estimation of Crop Coeﬃcient and Evapotranspiration of Wheat (Triticum\
    \ aestivum)\nin an Irrigation Command Using Remote Sensing and GIS. Water Resour.\
    \ Manag. 2009, 24, 1399–1414.\n[CrossRef]\n10.\nBezerra, B.G.; Da Silva, B.B.;\
    \ Bezerra, J.R.C.; Soﬁatti, V.; Dos Santos, C.A.C. Evapotranspiration and crop\n\
    coeﬃcient for sprinkler-irrigated cotton crop in Apodi Plateau semiarid lands\
    \ of Brazil. Agric. Water Manag.\n2012, 107, 86–93. [CrossRef]\n11.\nBausch, W.C.;\
    \ Neale, C. Crop Coeﬃcients Derived from Reﬂected Canopy Radiation: A Concept.\
    \ Trans.\nASAE 1987, 30, 703–709. [CrossRef]\n12.\nHunsaker, D.; Barnes, E.; Clarke,\
    \ T.R.; Fitzgerald, G.; Pinter, P.J., Jr. Cotton irrigation scheduling using\n\
    remotely sensed and FAO-S6 basal crop coeﬃcients. Trans. ASAE 2005, 48, 1395–1407.\
    \ [CrossRef]\n13.\nCampos, I.; Balbontín, C.; González-Piqueras, J.; González-Dugo,\
    \ M.P.; Neale, C.M.U.; Calera, A. Combining\na water balance model with evapotranspiration\
    \ measurements to estimate total available soil water in\nirrigated and rainfed\
    \ vineyards. Agric. Water Manag. 2016, 165, 141–152. [CrossRef]\n14.\nSadler,\
    \ E.J.; Bauer, P.J.; Busscher, W.J. Site-Speciﬁc Analysis of a Droughted Corn\
    \ Crop: I. Growth and Grain\nYield. Agron. J. 2000, 92, 395–402. [CrossRef]\n\
    15.\nCampos, I.; Neale, C.M.U.; Calera, A.; Balbontín, C.; González-Piqueras,\
    \ J. Assessing satellite-based basal\ncrop coeﬃcients for irrigated grapes (Vitis\
    \ vinifera L.). Agric. Water Manag. 2010, 98, 45–54. [CrossRef]\n16.\nEr-Raki,\
    \ S.; Chehbouni, A.; Guemouria, N.; Duchemin, B.; Ezzahar, J.; Hadria, R. Combining\
    \ FAO-56 model\nand ground-based remote sensing to estimate water consumptions\
    \ of wheat crops in a semi-arid region.\nAgric. Water Manag. 2007, 87, 41–54.\
    \ [CrossRef]\n17.\nChoudhury, B.; Ahmed, N.; Idso, S.; Reginato, R.; Daughtry,\
    \ C. Relations between evaporation coeﬃcients\nand vegetation indices studied\
    \ by model simulations. Remote Sens. Environ 1994, 50, 1–17. [CrossRef]\n18.\n\
    Hunsaker, D.J.; Pinter, P.J.; Kimball, B.A. Wheat basal crop coeﬃcients determined\
    \ by normalized diﬀerence\nvegetation index. Irrig. Sci. 2005, 24, 1–14. [CrossRef]\n\
    19.\nBellvert, J.; Adeline, K.; Baram, S.; Pierce, L.; Sanden, B.; Smart, D. Monitoring\
    \ Crop Evapotranspiration\nand Crop Coeﬃcients over an Almond and Pistachio Orchard\
    \ Throughout Remote Sensing. Remote Sens.\n2018, 10. [CrossRef]\n20.\nMulla, D.J.\
    \ Twenty ﬁve years of remote sensing in precision agriculture: Key advances and\
    \ remaining\nknowledge gaps. Biosyst. Eng. 2013, 114, 358–371. [CrossRef]\n21.\n\
    Anderson, K.; Gaston, K.J. Lightweight unmanned aerial vehicles will revolutionize\
    \ spatial ecology. Front.\nEcol. Environ. 2013, 11, 138–146. [CrossRef]\n22.\n\
    Zhang, C.; Walters, D.; Kovacs, J.M. Applications of Low Altitude Remote Sensing\
    \ in Agriculture upon\nFarmers’ Requests—A Case Study in Northeastern Ontario,\
    \ Canada. PLoS ONE 2014, 9, e112894. [CrossRef]\n[PubMed]\n23.\nZhang, C.; Kovacs,\
    \ J.M. The application of small unmanned aerial systems for precision agriculture:\
    \ A review.\nPrecis. Agric. 2012, 13, 693–712. [CrossRef]\n24.\nGago, J.; Douthe,\
    \ C.; Coopman, R.E.; Gallego, P.P.; Ribas-Carbo, M.; Flexas, J.; Escalona, J.;\
    \ Medrano, H. UAVs\nchallenge to assess water stress for sustainable agriculture.\
    \ Agric. Water Manag. 2015, 153, 9–19. [CrossRef]\n25.\nEr-Raki, S.; Chehbouni,\
    \ A.; Duchemin, B. Combining Satellite Remote Sensing Data with the FAO-56 Dual\n\
    Approach for Water Use Mapping In Irrigated Wheat Fields of a Semi-Arid Region.\
    \ Remote Sens. 2010, 2.\n[CrossRef]\nRemote Sens. 2019, 11, 2519\n20 of 22\n26.\n\
    Allan, R.G.; Pereira, L.; Raes, D.; Smith, M. Crop evapotranspiration-Guidelines\
    \ for computing crop water\nrequirements-FAO Irrigation and drainage paper 56.\
    \ Fao Rome 1998, 300, D05109.\n27.\nTasumi, M.; Allen, R.G.A.; Duchemin, B. Satellite-based\
    \ ET mapping to assess variation in ET with timing of\ncrop development. Agric.\
    \ Water Manag. 2007, 88, 54–62. [CrossRef]\n28.\nHan, W.; Shao, G.; Ma, D.; Zhang,\
    \ H.; Wang, Y.; Niu, Y. Estimating Method of Crop Coeﬃcient of Maize\nBased on\
    \ UAV Multispectral Remote Sensing. Nongye Jixie Xuebao/Trans. Chin. Soc. Agric.\
    \ Mach. 2018, 49,\n134–143. [CrossRef]\n29.\nEr-Raki, S.; Chehbouni, A.; Hoedjes,\
    \ J.; Ezzahar, J.; Duchemin, B.; Jacob, F. Improvement of FAO-56 method\nfor olive\
    \ orchards through sequential assimilation of thermal infrared-based estimates\
    \ of ET. Agric. Water\nManag. 2008, 95, 309–321. [CrossRef]\n30.\nJackson, R.D.;\
    \ Idso, S.B.R.J.; Reginato, R.J.; Pinter, P. Canopy Temperature as a Crop Water\
    \ Stress Indicator.\nWater Resour. Res. 1981, 17, 1133–1138. [CrossRef]\n31.\n\
    Li, L.; Nielsen, D.C.; Yu, Q.; Ma, L.; Ahuja, L. Evaluating the Crop Water Stress\
    \ Index and its correlation with\nlatent heat and CO2 ﬂuxes over winter wheat\
    \ and maize in the North China plain. Agric. Water Manag. 2010,\n97, 1146–1155.\
    \ [CrossRef]\n32.\nOlivera-Guerra, L.; Merlin, O.; Er-Raki, S.; Khabba, S.; Escorihuela,\
    \ M.J. Estimating the water budget\ncomponents of irrigated crops: Combining the\
    \ FAO-56 dual crop coeﬃcient with surface temperature and\nvegetation index data.\
    \ Agric. Water Manag. 2018, 208, 120–131. [CrossRef]\n33.\nKullberg, E.G.; DeJonge,\
    \ K.C.; Chávez, J.L. Evaluation of thermal remote sensing indices to estimate\
    \ crop\nevapotranspiration coeﬃcients. Agric. Water Manag. 2017, 179, 64–73. [CrossRef]\n\
    34.\nDeJonge, K.C.; Taghvaeian, S.; Trout, T.J.; Comas, L.H. Comparison of canopy\
    \ temperature-based water\nstress indices for maize. Agric. Water Manag. 2015,\
    \ 156, 51–62. [CrossRef]\n35.\nBausch, W.; Trout, T.; Buchleiter, G. Evapotranspiration\
    \ adjustments for deﬁcit-irrigated corn using canopy\ntemperature: A concept.\
    \ Irrig. Drain. 2011, 60, 682–693. [CrossRef]\n36.\nIhuoma, S.O.; Madramootoo,\
    \ C.A. Recent advances in crop water stress detection. Comput. Electron. Agric.\n\
    2017, 141, 267–275. [CrossRef]\n37.\nBaluja, J.; Diago, M.P.; Balda, P.; Zorer,\
    \ R.; Meggio, F.; Morales, F.; Tardaguila, J. Assessment of vineyard\nwater status\
    \ variability by thermal and multispectral imagery using an unmanned aerial vehicle\
    \ (UAV). Irrig.\nSci. 2012, 30, 511–522. [CrossRef]\n38.\nRoujean, J.-L.; Breon,\
    \ F.-M. Estimating PAR absorbed by vegetation from bidirectional reﬂectance\n\
    measurements. Remote Sens. Environ. 1995, 51, 375–384. [CrossRef]\n39.\nZhang,\
    \ L.; Zhang, H.; Niu, Y.; Han, W. Mapping Maize Water Stress Based on UAV Multispectral\
    \ Remote\nSensing. Remote Sens. 2019, 11. [CrossRef]\n40.\nHeermann, D.F.; Hein,\
    \ P.R. Performance characteristics of self-propelled center-pivot sprinkler irrigation\n\
    system. Trans. ASAE 1968, 11, 11–15.\n41.\nZhao, N.-N.; Liu, Y.; Cai, J.-B. Calculation\
    \ of crop coeﬃcient and water consumption of summer maize. Shuili\nXuebao/J. Hydraul.\
    \ Eng. 2010, 41, 953–959.\n42.\nDing, R.; Kang, S.; Zhang, Y.; Hao, X.; Tong,\
    \ L.; Du, T. Partitioning evapotranspiration into soil evaporation\nand transpiration\
    \ using a modiﬁed dual crop coeﬃcient model in irrigated maize ﬁeld with ground-mulching.\n\
    Agric. Water Manag. 2013, 127, 85–96. [CrossRef]\n43.\nLv, Y.; Li, B. Soil Science;\
    \ China Agriculture Press: Beijing, China, 2006.\n44.\nReynolds, S.G. The gravimetric\
    \ method of soil moisture determination Part I A study of equipment, and\nmethodological\
    \ problems. J. Hydrol. 1970, 11, 258–273. [CrossRef]\n45.\nIdso, S.; Jackson,\
    \ R.; Ehrler, W.; Mitchell, S. A Method for Determination of Infrared Emittance\
    \ of Leaves.\nEcology 1969, 50, 899. [CrossRef]\n46.\nAllen, R. Using the FAO-56\
    \ dual crop coeﬃcient method over an irrigated region as part of an\nevapotranspiration\
    \ intercomparison study. J. Hydrol. 2000, 229, 27–41. [CrossRef]\n47.\nGonzález-Dugo,\
    \ M.P.; Mateos, L. Spectral vegetation indices for benchmarking water productivity\
    \ of irrigated\ncotton and sugarbeet crops. Agric. Water Manag. 2008, 95, 48–58.\
    \ [CrossRef]\n48.\nFeng, Y.; Cui, N.; Gong, D.; Wang, H.; Hao, W.; Mei, X. Estimating\
    \ rainfed spring maize evapotranspiration\nusing modiﬁed dual crop coeﬃcient approach\
    \ based on leaf area index. Nongye Gongcheng Xuebao/Trans.\nChin. Soc. Agric.\
    \ Eng. 2016, 32, 90–98. [CrossRef]\nRemote Sens. 2019, 11, 2519\n21 of 22\n49.\n\
    Jensen, M.; Allen, R. Evaporation, Evapotranspiration, and Irrigation Water Requirements;\
    \ American Society of\nCivil Engineers: Reston, WV, USA, 2016; Volume 2016, pp.\
    \ 1–744.\n50.\nRouse, J.W. Monitoring vegetation systems in the great plains with\
    \ ERTS. In Proceedings of the Third ERTS\nSymposium, NASA, Washington, DC, USA,\
    \ 10–14 December 1973; Volume 1, pp. 309–317.\n51.\nHaboudane, D. Integrated narrow-band\
    \ vegetation indices for prediction of crop chlorophyll content for\napplication\
    \ to precision agriculture. Remote Sens. Environ. 2002, 81, 416–426. [CrossRef]\n\
    52.\nZarco-Tejada, P.J.; González-Dugo, V.; Williams, L.E.; Suárez, L.; Berni,\
    \ J.A.; Goldhamer, D.; Fereres, E.\nA PRI-based water stress index combining structural\
    \ and chlorophyll eﬀects: Assessment using diurnal\nnarrow-band airborne imagery\
    \ and the CWSI thermal index. Remote Sens. Environ. 2013, 138, 38–50.\n[CrossRef]\n\
    53.\nTrout, T.; Johnson, L.; Gartung, J. Remote Sensing of Canopy Cover in Horticultural\
    \ Crops. HortScience\n2008, 43. [CrossRef]\n54.\nJohnson, L.F.; Trout, T.J. Satellite\
    \ NDVI Assisted Monitoring of Vegetable Crop Evapotranspiration in\nCalifornia’s\
    \ San Joaquin Valley. Remote Sens. 2012, 4. [CrossRef]\n55.\nIdso, S.B.; Jackson,\
    \ R.D.; Pinter, P.J.; Reginato, R.J.; Hatﬁeld, J.L. Normalizing the stress-degree-day\
    \ parameter\nfor environmental variability. Agric. Meteorol. 1981, 24, 45–55.\
    \ [CrossRef]\n56.\nElnmer, A.; Khadr, M.; Kanae, S.; Tawﬁk, A. Mapping daily and\
    \ seasonally evapotranspiration using remote\nsensing techniques over the Nile\
    \ delta. Agric. Water Manag. 2019, 213, 682–692. [CrossRef]\n57.\nFrench, N.A.;\
    \ Hunsaker, J.D.; Bounoua, L.; Karnieli, A.; Luckett, E.W.; Strand, R. Remote\
    \ Sensing of\nEvapotranspiration over the Central Arizona Irrigation and Drainage\
    \ District, USA. Agronomy 2018, 8.\n[CrossRef]\n58.\nRana, G.; Katerji, N. Measurement\
    \ and estimation of actual evapotranspiration in the ﬁeld under\nMediterranean\
    \ climate: A review. Eur. J. Agron. 2000, 13, 125–153. [CrossRef]\n59.\nBastiaanssen,\
    \ W.G.M.; Menenti, M.; Feddes, R.A.; Holtslag, A.A.M. A remote sensing surface\
    \ energy balance\nalgorithm for land (SEBAL). 1. Formulation. J. Hydrol. 1998,\
    \ 212, 198–212. [CrossRef]\n60.\nNorman, J.M.; Kustas, W.P.; Humes, K.S. Source\
    \ approach for estimating soil and vegetation energy ﬂuxes\nin observations of\
    \ directional radiometric surface temperature. Agric. For. Meteorol. 1995, 77,\
    \ 263–293.\n[CrossRef]\n61.\nCammalleri, C.; Anderson, M.C.; Gao, F.; Hain, C.R.;\
    \ Kustas, W.P. Mapping daily evapotranspiration at ﬁeld\nscales over rainfed and\
    \ irrigated agricultural areas using remote sensing data fusion. Agric. For. Meteorol.\n\
    2014, 186, 1–11. [CrossRef]\n62.\nGlenn, E.; Neale, C.; Hunsaker, D.; Nagler,\
    \ P. Vegetation Index-Based Crop Coeﬃcients to Estimate\nEvapotranspiration by\
    \ Remote Sensing in Agricultural and Natural Ecosystems. Hydrol. Process. 2011,\
    \ 25,\n4050–4062. [CrossRef]\n63.\nDiarra, A.; Jarlan, L.; Er-Raki, S.; Le Page,\
    \ M.; Aouade, G.; Tavernier, A.; Boulet, G.; Ezzahar, J.;\nMerlin, O.; Khabba,\
    \ S. Performance of the two-source energy budget (TSEB) model for the monitoring\
    \ of\nevapotranspiration over irrigated annual crops in North Africa. Agric. Water\
    \ Manag. 2017, 193, 71–88.\n[CrossRef]\n64.\nAllen, L.H.; Pan, D.; Boote, K.J.;\
    \ Pickering, N.B.; Jones, J.W. Carbon Dioxide and Temperature Eﬀects on\nEvapotranspiration\
    \ and Water Use Eﬃciency of Soybean. Agron. J. 2003, 95, 1071–1081. [CrossRef]\n\
    65.\nHatﬁeld, J.L.; Dold, C. Water-Use Eﬃciency: Advances and Challenges in a\
    \ Changing Climate. Front. Plant\nSci. 2019, 10, 103. [CrossRef]\n66.\nBehmann,\
    \ J.; Steinrücken, J.; Plümer, L. Detection of early plant stress responses in\
    \ hyperspectral images.\nISPRS J. Photogramm. Remote Sens. 2014, 93, 98–111. [CrossRef]\n\
    67.\nWang, X.; Zhao, C.; Guo, N.; Li, Y.; Jian, S.; Yu, K. Determining the Canopy\
    \ Water Stress for Spring Wheat\nUsing Canopy Hyperspectral Reﬂectance Data in\
    \ Loess Plateau Semiarid Regions. Spectrosc. Lett. 2015, 48,\n492–498. [CrossRef]\n\
    68.\nZarco-Tejada, P.J.; González-Dugo, V.; Berni, J.A.J. Fluorescence, temperature\
    \ and narrow-band indices\nacquired from a UAV platform for water stress detection\
    \ using a micro-hyperspectral imager and a thermal\ncamera. Remote Sens. Environ.\
    \ 2012, 117, 322–337. [CrossRef]\n69.\nMokhtari, A.; Noory, H.; Vazifedoust, M.;\
    \ Bahrami, M. Estimating net irrigation requirement of winter wheat\nusing model-\
    \ and satellite-based single and basal crop coeﬃcients. Agric. Water Manag. 2018,\
    \ 208, 95–106.\n[CrossRef]\nRemote Sens. 2019, 11, 2519\n22 of 22\n70.\nCammalleri,\
    \ C.; Ciraolo, G.; Minacapilli, M.; Rallo, G. Evapotranspiration from an Olive\
    \ Orchard using\nRemote Sensing-Based Dual Crop Coeﬃcient Approach.\nWater Resour.\n\
    Manag.\n2013, 27, 4877–4895.\n[CrossRef]\n71.\nVanino, S.; Nino, P.; De Michele,\
    \ C.; Falanga Bolognesi, S.; D’Urso, G.; Di Bene, C.; Pennelli, B.; Vuolo, F.;\n\
    Farina, R.; Pulighe, G.; et al. Capability of Sentinel-2 data for estimating maximum\
    \ evapotranspiration and\nirrigation requirements for tomato crop in Central Italy.\
    \ Remote Sens. Environ. 2018, 215, 452–470. [CrossRef]\n72.\nShi, X.; Han, W.;\
    \ Zhao, T.; Tang, J. Decision Support System for Variable Rate Irrigation Based\
    \ on UAV\nMultispectral Remote Sensing. Sensors 2019, 19. [CrossRef]\n73.\nHunt,\
    \ E.R.; Daughtry, C.S.T. What good are unmanned aircraft systems for agricultural\
    \ remote sensing and\nprecision agriculture? Int. J. Remote Sens. 2018, 39, 5345–5376.\
    \ [CrossRef]\n© 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article\
    \ is an open access\narticle distributed under the terms and conditions of the\
    \ Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: Jiandong Tang 1,2, Wenting Han 3,* and Liyuan Zhang 4
  journal: Remote Sensing
  limitations:
  - Limited to maize crop
  - Requires high-resolution multispectral imagery
  - Framework not applicable to other crops or different growth stages
  main_objective: This study explores the potential of unmanned aerial vehicles (UAVs)
    equipped with multispectral cameras to accurately estimate maize ET under varying
    irrigation regimes.
  pdf_link: https://www.mdpi.com/2072-4292/11/21/2519/pdf?version=1573204980
  publication_year: 2019
  relevance_evaluation:
    credibility_fit: 0.8928571428571428
    insights_fit: 0.7142857142857143
    key_issue_fit: 0.8571428571428571
    overall_fit: 0.8537037037037037
    recency_fit: 0.6428571428571429
    scope_fit: 0.9285714285714286
  relevance_score: 0.8018518518518519
  relevance_score1: 0
  relevance_score2: 0
  study_location: Zhaojun Town, Dalate Banner, Ordos, Inner Mongolia, China (40°26’0.29”N,
    109°36’25.99”E, Elev. 1010 m; Figure 1a)
  title: UAV Multispectral Imagery Combined with the FAO-56 Dual Approach for Maize
    Evapotranspiration Mapping in the North China Plain
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
