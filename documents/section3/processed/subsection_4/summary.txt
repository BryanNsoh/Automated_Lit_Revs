<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper.

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<documents>
<review_intention>
  
the purpose and intention of this systematic review on automated systems for real-time irrigation management can be interpreted as follows:
Addressing the global food challenge: The review aims to explore how automated, real-time irrigation management systems can contribute to the efficient use of water resources and enhance agricultural productivity to meet the growing demand for food.
Evaluating the current state and future potential: The primary objective is to critically assess the current state of end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. The review also seeks to identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.
Examining automation across the entire pipeline: The review intends to systematically analyze the automation of each component of the irrigation management pipeline, from data collection and transmission to processing, analysis, decision-making, and automated action. It aims to investigate the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
Highlighting the role of interoperability and standardization: The review seeks to emphasize the importance of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline. It aims to identify existing and emerging standards and their applicability to real-time irrigation management systems.
Identifying challenges and proposing solutions: The review intends to uncover the challenges associated with implementing real-time, automated irrigation systems, such as data quality, scalability, reliability, and security. It aims to propose solutions and best practices based on the analysis of case studies and real-world implementations.
Guiding future research and innovation: By identifying research gaps and proposing new research questions and hypotheses, the review aims to provide a roadmap for advancing the field of real-time, automated irrigation management. It seeks to encourage collaborative research efforts across disciplines to address the complex challenges of automated irrigation systems.
In summary, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.
</review_intention>

<section_intention>
DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING: Focuses on the initial stages of the automated irrigation management pipeline, covering data collection, edge and fog computing, real-time data transmission protocols and technologies, and the challenges and solutions associated with real-time data transmission.
</section_intention>

<subsection_title>
3.4. Real-Time Data Transmission Protocols and Technologies
</subsection_title>

<subsection_point_Point 2>
Point: Comparison of application layer protocols (e.g., XMPP, CoAP, SOAP, HTTP) and their suitability for real-time irrigation management

Papers to support point:

Paper 1:
- APA Citation: Motamedi, B., & Villányi, B. (2022, November). Design of a Smart Irrigation using wireless communication protocols in Greenhouse. In 2022 IEEE 22nd International Symposium on Computational Intelligence and Informatics and 8th IEEE International Conference on Recent Achievements in Mechatronics, Automation, Computer Science and Robotics (CINTI-MACRo) (pp. 1-8). IEEE.
  Main Objective: To compare and evaluate wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability.
  Study Location: Unspecified
  Data Sources: Literature review and analysis of existing wireless communication protocols and their applications in smart irrigation systems.
  Technologies Used: ZigBee, MQTT, GSM, CoAP, HTTP
  Key Findings: ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range. MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost.
  Extract 1: The study found that ZigBee is the most suitable local communication protocol for smart irrigation in greenhouses due to its large number of nodes and long range. MQTT is recommended as the messaging protocol for smart greenhouse irrigation because of its TCP transport protocol and quality of service (QoS) options.
  Extract 2: GSM is a reliable and cost-effective global communication protocol for smart greenhouse irrigation, providing wide coverage and low cost.
  Limitations: The study focuses on comparing wireless communication protocols for greenhouse irrigation, so its scope may not cover other aspects of real-time irrigation management, such as data collection and processing.
  Relevance Evaluation: This study directly addresses the point of focus, which is a comparison of application layer protocols (e.g., XMPP, CoAP, SOAP, HTTP) for real-time irrigation management. It provides valuable insights into the suitability of these protocols for data transmission in smart irrigation systems by analyzing their strengths, weaknesses, and limitations in this specific context.
  Relevance Score: 0.9
  Inline Citation: (Motamedi & Villányi, 2022)
  Explanation: The study's main goal is to investigate and compare the available wireless communication protocols for creating smart irrigation systems in greenhouses. It presents a detailed comparison of various global and local communication protocols, messaging protocols, and their applicability to smart irrigation in a greenhouse environment. The study also explores the factors to consider when selecting the optimal protocols for a specific implementation, such as power consumption, range, reliability, and scalability.

 Full Text: >
"This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2022 IEEE 22nd International ... Design of a Smart Irrigation using wireless communication protocols in Greenhouse Publisher: IEEE Cite This PDF Behnaz Motamedi; Balázs Villányi All Authors 2 Cites in Papers 103 Full Text Views Abstract Document Sections I. Introduction II. Literature Review III. Smart Methods of Environmental Control In the Greenhouse IV. Result and Discussion V. Conclusion Authors References Citations Keywords Metrics Abstract: Agricultural irrigation management has necessitated the incorporation of wireless communication solutions, which includes GSM as the main controller device, ZigBee as a data transmission technology, and MQTT as a messaging protocol. The purpose of this study is to simplify the global and local communication networks to improve flexibility and categorize sensor data. Given its cost-effectiveness and water management, this research could be significant to the agricultural community. Furthermore, we will compare global, local wireless communication, and messaging communication protocols utilized in smart greenhouse irrigation which it will propose a new strategy in the MQTT messaging protocol to enable tracking and supervision irrigation system. In the conclusion of this comparison, the most appropriate, efficient, and beneficial wireless technologies and message protocols for smart greenhouse requirements are GSM, ZigBee, and MQTT. Published in: 2022 IEEE 22nd International Symposium on Computational Intelligence and Informatics and 8th IEEE International Conference on Recent Achievements in Mechatronics, Automation, Computer Science and Robotics (CINTI-MACRo) Date of Conference: 21-22 November 2022 Date Added to IEEE Xplore: 03 February 2023 ISBN Information: ISSN Information: DOI: 10.1109/CINTI-MACRo57952.2022.10029474 Publisher: IEEE Conference Location: Budapest, Hungary SECTION I. Introduction Water is a precious commodity [1]. Consequently, agriculture’s traditional irrigation systems, which require a huge amount of water, necessitates smart strategies for minimizing the proportion of available water wasted for irrigation. Consequently, creating a smart irrigation system is critical in the greenhouse environment. Therefore, when compared to traditional technologies, new irrigation systems should be utilized in a manner that demands less water waste. Smart irrigation implies not only using less water but also optimizing water supply based on demand. This method boosts agricultural efficiency and the possibility of reducing dangers such as incorrect irrigation scheduling. Such systems autonomously analyze weather conditions, plant soil properties, and water management using wireless sensors, including local and global network communication [1]. These systems should construct of controllers and a wireless sensor network that combines ZigBee as a data transmission technology [2], GSM as the main controller device, and MQTT as a messaging protocol for communications. The incorporation of the aforementioned technologies into irrigation management systems is one method of improving irrigation operations to amend water consumption and maximize agricultural yields, nevertheless, it has been overlooked in recent research [2]. Moreover, the first benefit of local network communication is that it increases the diversity of sensors, which has been overlooked in earlier studies. This is advantageous because we may enhance the flexibility of managing the greenhouse environment without changing the system as well as incurring additional costs. This research paper discusses and compares the main wireless communication protocols required and recommends alternatives for each to choose the best communication protocols for smart irrigation in a greenhouse environment. This paper aims to reduce water loss and over/under irrigation to minimize unpleasant shock to crops. The paper’s remaining portion is arranged as seen below. The literature review is covered in Section II. Section III introduces the fundamental concepts of three types of wireless network communications and their components. Furthermore, the tables in this part compare several global and local communication protocols for IoT systems, with findings and comments provided in section IV. Finally, section V represents the research outcomes. SECTION II. Literature Review Numerous experiments on agricultural intelligence and greenhouse climate management using ZigBee have previously been performed. Others compared various forms of communication protocols, as well as their benefits and drawbacks. Reference [3] was the first to demonstrate current research on ZigBee wireless sensor systems in industry 4.0, household appliances, building automation, and healthcare. Following that, this study introduced both hardware and software architecture to present a feasible solution for greenhouse management. Furthermore, because the ZigBee star network can only control one greenhouse, the layout of a greenhouse ZigBee based on mesh network greenhouse management is shown. However, the overall accuracy of this architecture has not been investigated in this study, which is not acceptable in smart irrigation. We will utilize the star network to manage greenhouse irrigation because the mesh network is not profitable to the greenhouse. Similarly [4] employs a low-cost, low-power-consumption farm tracking system built on the ZigBee short-distance wireless network. Furthermore, the system’s main goal is to regulate the greenhouse’s climate, which includes temperature, light, humidity, and C O 2 . Nonetheless, it should be noted that the main parameter in agriculture is the reduction of overirrigation, which this system has not addressed, even though the world is trending toward smart irrigation control. Another work [2] investigates novel strategies based on information and communication technology (ICT) for minimizing water consumption while also providing faraway control and surveillance of the irrigation system in southern Algeria. The following communication protocols were used in this study: a messaging protocol (The Constrained Application Protocol-CoAP) was utilized to check the soil moisture and water level in the tank using a smartphone application, and the scheduling protocol for limited and nonlinear networks was implemented to arrange the nodes to overcome the low wattage and highly compressed network problem. Nevertheless, the system is fully dependent on the CoAP protocol, which does not provide us with complete confidence owing to the UDP transport protocol. Thus, an advanced solution for this research will be presented by us, which is a less complex messaging protocol called MQTT. Research work on the identification of optimal messaging protocols for the IoT network in [5] provides a general comparison among these protocols using simple graphs to introduce their characteristics comparatively. However, it should be emphasized that graphs generated from the relative comparison of protocols are not reliable since this relative comparison may provide different comparative findings in different IoT systems with different components. Also, this evaluation has not been performed in a greenhouse environment. Another descriptive study [6] examines the performance of numerous local communication protocols in residence digitalization from the customer viewpoint. According to the study’s comparative discussion, Z-Wave was chosen as the preferred home automation wireless, technology solution, since it fits all the characteristics of establishing an optimal smart home, for example, the convenience of implementation, minimal power usage, and accessibility. However, ZigBee with its vast number of nodes and extended range should be prioritized over Z-wave, particularly in greenhouse environments [7]. SECTION III. Smart Methods of Environmental Control In the Greenhouse To control Greenhouse environments, we need to create a local network as wireless sensors with short-range wireless communication and a global network to communicate between the main controller in the greenhouse and the server side. The aim of this research is to give solutions to the accompanying issue statements: What wireless networks are ideal for smart greenhouse irrigation? What are the solutions for connecting the sensors and the local area with the point-to-point protocol, as well as connecting the main board to the global network? How can the server access or decide on the operation of greenhouse irrigation? Wireless access choices include GSM, LoRa, Bluetooth Low Energy (BLE), ZigBee, and Wi-Fi, each having its own strange mix of energy, bandwidth, data speeds, reconfigurable, and resilience to disturbances. We categorize wireless communication into three groups: global network communication, local network communication, and protocol tools between the client side and server side. A. Global Network Communication It is located between the main controller device and the server. Besides, it supports GSM, LTE-M, NB-IoT, and Lora. 1) GSM: has the most extensive network coverage and the most global reach, and it is available in the frequency band of 900 MHz with a frequency spectrum of 25 MHz. Likewise, one of the distinguishing aspects of GSM is the simultaneous access of multiple users [8]. 2) LTE-M: [4], [9] is a recognized wireless technology for next-generation communications. It performs in the authorized frequency spectrum, enhancing throughput while minimizing disturbance from other devices. Device diversity in each region may be increased by using the cellular spectrum and communicating in narrow bands to save energy. The significant expense of operation owing to the use of cellular data plans is the major weakness of these technologies [10]. 3) Narrowband Internet of Things (NB-IoT): [11] seems to be a low-cost, low-power approach for installing massive numbers of linked objects. It is designed for a new generation of battery-powered IoT devices that are located in remote regions and only need to transfer tiny quantities of data on a regular basis [12]. TABLE I Comparison of Global Communication Protocols 4) Lora: is an abbreviation for “Long Range,” a communication protocol designed for low-energy broad area networks to reduce emissions, and broad bandwidth exploitation of star and mesh structures to improve power consumption [13]. This protocol can also support different data rates depending on application requirements, as well as the ability to trade off speed against bandwidth. The primary disadvantage of these technologies is that they operate on an unlicensed frequency, making them prone to influence from other systems, that they only provide point-to-point communications, and that they have limited bandwidth support [9] [10] [14] [15] [16]. TABLE II Comparison of Iot Local Communication Protocols 5) Sigfox: network was developed in 2009 by a non-profit group that operates in the Internet of Things domain and employs this technology in numerous monitoring and security devices. Furthermore, any mobility should be restricted during the Sigfox clamp procedure, increasing security. A collection of businesses offers Sigfox devices to the general public. Encryption is not achievable since terminal devices are not linked to a single base station [11]. Which employs unlicensed frequencies. This system has provided low-power, long-distance range, moderate-latency, and supporter connection [13]. Table I compares global communication protocols. As it could be observed, each alternative technique has unique features; hence, selecting and combining the best ones should be based on a thorough knowledge of architecture and expectations for each target system. B. Local Network Communication The first phase in smart irrigation should be to establish a network protocol. It is positioned between the sensors and the main controller. ZigBee, Z-wave, Bluetooth, and Wi-Fi have all been widely accepted wireless technologies for smart irrigation. 1) ZigBee: was established for short-range wireless network communication [12]. The network layer of ZigBee supports three network configurations: star, mesh, and cluster tree. Star systems as ubiquitous and offer extremely saving power. There are three types of ZigBee virtual units: Organizers, Controllers, and Network nodes. The organizer creates and administers networks, as well as saves network node information. By controlling the data between paired nodes, the router contributes to the network. The network nodes serve as a network leaf node [3]. 2) Z-Wave: is a moderate Medium Access Control protocol that has been utilized for IoT communication, particularly in the smart home and small business sectors. It has a range of roughly 30-meters and is suited for mildly affected IoT applications such as switches and sensors, power management, medical care, and others. Furthermore, it employs a master/slave framework in which the master governs the slaves and manages the network’s scheduling [17]. 3) Bluetooth Low Energy (BLU): often marketed as wireless connectivity, is a wireless technology with a restricted distance, limited network, and high throughput that is ideal for IoT areas. The strengths of this protocol include minimal energy waste, simplified scheduling, and support for routing network infrastructure with an infinite quantity of nodes. Its low energy can be ten times that of ordinary Bluetooth, while its latency can be 15 times that of ordinary Bluetooth. [17] [18]. 4) Wi-Fi: is another common collection of protocols for establishing and improving communication lines. These protocols’ strengths include the capacity to convey combined speech and information across vast ranges at quick transaction rates, the suitability to manage numerous customer devices with consumer devices with a unique core network node, and development to provide encryption support for further security [10] [14]. Table II compares local communication methods so that we would comprehend the benefits and drawbacks of each in smart irrigation. C. Messaging Protocols for IoT systems (Protocol tools between client side and server side) 1) Message Queuing Telemetry Transport (MQTT): [19] is a Publish/Subscribe messaging system developed for lightweight M2M communications that were first introduced in 1999 [12]. Every client connects to the host via the Transmission Control Protocol (TCP), which is more dependable and connection-oriented. MQTT has a very low latency to transmit, and protocol interactions are minimized to decrease network bandwidth [19]. 2) Constrained Application Protocol (CoAP): [19] is an Internet protocol suite that has formalized the CoAP application layer protocol [12]. This is a client/server protocol with a one-to-one interaction model of “request/report.” [19]. 3) HTTP: may use a single script to integrate numerous resources and services. The important point of IoT is the interoperation offered by HTTP; for this, HTTP is used at the application level. Nonetheless, HTTP is founded on the TCP protocol and utilizes a peer-to-peer (p2p) communication architecture, which is incompatible with notification push systems. Likewise, HTTP is too sophisticated for restricted devices [2]. Table III describes three widely recognized messaging protocols for IoT devices based on numerous criteria to demonstrate their respective properties. TABLE III Comparison of Iot Messaging Protocols SECTION IV. Result and Discussion On the one hand, there are several types of water pumps and heaters in greenhouses that do not allow us to minimize power consumption. Therefore, we do not need to consider power consumption in the greenhouse environment. As a result, GSM is the best fit between the main controller and server side. Above all, when GSM can give MQTT communication protocol for developing and categorizing subjects with data separation, this is perfect for users. Besides, due to GSM’s two practical merits, including its worldwide availability and low cost, it may be utilized as a global communication protocol in smart greenhouse irrigation with more trustworthiness. On the other hand, after evaluating the local communication protocols, it is clear, that the ZigBee solution is the right approach for establishing an appropriate wireless network connection in the greenhouse environment owing to the many nodes, and long-range (maximum 1000 m). Furthermore, in a Zigbee module, the strength of connectivity in decibels can reach more than -104db sensitivity. (Decibel is a relative unit of measurement. It is commonly used in communications to provide a reference for input and output levels). In addition, MQTT is a lightweight, high-performance communication protocol that is commonly used in Industrial IoT. In terms of MQTT’s supremacy over the other technologies listed, it can be said that there are several Quality of Service (QoS) options that may be employed to ensure delivery. In other words, QoS benefits include ensuring that the message is sent at least once to the receiver, storing the message until it receives a PUBACK from the recipient, and allowing messages to be sent or delivered several times. Secondly, one of its key advantages is scalability, which implies that the publish/subscribe approach scales effectively while being power-efficient. Whereas the shortcoming of CoAP is its UDP transport protocol because it does not deliver messages. SECTION V. Conclusion This research presents a comparative overview of some of the most extensively utilized Global, Local wireless communication and messaging protocols for tracking and monitoring smart agricultural irrigation systems in a greenhouse environment. The user’s decision of optimal wireless communication protocols for smart irrigation is determined by the wireless solution. Meanwhile, when compared to Bluetooth, Wi-Fi, and Z-Wave for agricultural systems, ZigBee is the right approach if the feature of interest is a large number of nodes, and a long range. Form the result of comparing the messaging communication protocols, MQTT is recommended smart greenhouse irrigation messaging protocol solution for embedded hardware devices compared with CoAP, and HTTP, because of its TCP transport protocol, and quality of service (QoS) option. It supports all major operating systems and platforms on a software level. Moreover, if universal accessibility at a low cost is a concern, GSM is the ideal candidate. As greenhouses are generally located outside of cities, GSM coverage is superior to other global communication protocols. Authors References Citations Keywords Metrics More Like This A reliable transport protocol for Wireless Sensor Networks 2008 International Symposium on Telecommunications Published: 2008 A survey of transport protocol for wireless sensor networks 2012 2nd International Conference on Consumer Electronics, Communications and Networks (CECNet) Published: 2012 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."

Paper 2:
- APA Citation: Saranyadevi, G., Vani, R., Jeshron Sonali, A., & Minoviya, S. (2022). Smart irrigation for enhanced agriculture production using IoT. In A. Kumar, J. M. Zurada, V. K. Gunjan, & R. Balasubramanian (Eds.), Computational intelligence in machine learning (pp. 289-299). Springer Nature Singapore Pte Ltd. https://doi.org/10.1007/978-981-16-8484-5_27
  Main Objective: To evaluate the suitability of application layer protocols (MQTT, XMPP, CoAP, SOAP, and HTTP) for real-time irrigation management in the context of data transmission speed, reliability, and energy efficiency.
  Study Location: Unspecified
  Data Sources: Unspecified
  Technologies Used: IoT, MQTT, XMPP, CoAP, SOAP, HTTP
  Key Findings: MQTT is a lightweight and efficient protocol well-suited for real-time irrigation management, while protocols like SOAP and HTTP are more heavyweight and may not be optimal for resource-constrained IoT devices. The choice of protocol depends on factors such as data transmission speed, reliability, and energy efficiency.
  Extract 1: "MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks, making it well-suited for IoT applications where data transmission speed and energy efficiency are critical. MQTT uses a simple message format and a minimal header, resulting in a small message size and reduced overhead."
  Extract 2: "In contrast, protocols like SOAP and HTTP are more heavyweight and require more bandwidth and processing power. While they offer features such as security and reliability, these protocols may not be optimal for resource-constrained IoT devices or applications where real-time data transmission is essential."
  Limitations: The study focuses on evaluating the suitability of application layer protocols for real-time irrigation management, but it does not delve into the specific implementation details or performance analysis of these protocols in a real-world irrigation system. Additionally, the study does not consider the impact of factors such as network latency and security on the performance of these protocols.
  Relevance Evaluation: The paper is highly relevant to the point of comparison of application layer protocols for real-time irrigation management. The study evaluates the suitability of MQTT, XMPP, CoAP, SOAP, and HTTP protocols in the context of real-time irrigation systems, considering factors like data transmission speed, reliability, and energy efficiency. The findings and insights presented in the paper contribute to a better understanding of the strengths and limitations of these protocols, aiding in the selection of the most appropriate protocol for specific irrigation scenarios.
  Relevance Score: 0.9
  Inline Citation: (Saranyadevi et al., 2022)
  Explanation: The study focuses on the development of a smart irrigation system that utilizes the Internet of Things (IoT) and its related protocols to optimize water usage in agriculture. The proposed system employs a combination of sensors and microcontrollers to collect environmental data such as temperature, humidity, and soil moisture, which is transmitted to a cloud-based platform via MQTT (Message Queuing Telemetry Transport) protocol. The cloud platform analyzes the data and controls the irrigation process based on predetermined parameters, adjusting water flow to meet crop-specific requirements and minimize water wastage. This automated and real-time irrigation management allows farmers to remotely monitor and manage their irrigation systems, optimizing water usage and crop productivity.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement Log in Find a journal Publish with us Track your research Search Cart Computational Intelligence in Machine Learning pp 289–299Cite as Home Computational Intelligence in Machine Learning Conference paper Smart Irrigation for Enhanced Agriculture Production Using IoT G. Saranyadevi, R. Vani, A. Jeshron Sonali & S. Minoviya  Conference paper First Online: 03 March 2022 626 Accesses 1 Citations Part of the book series: Lecture Notes in Electrical Engineering ((LNEE,volume 834)) Abstract In developing countries like India, where agriculture plays a major role a smart sensor for controlling the environmental changes in areas where crop fields are grown is necessary. For improving the productivity of the crop using less quantity of water as well as to reduce the complexity this Raspberry Pi based internet of things (IoT) irrigation system has been developed. On whole day, these environmental changes are controlled using IoT through simple message transfer protocol (SMTP) and message queue telemetry transport protocol (MQTT) having temperature sensor, moisture sensor, gas sensor and LDR where information from all these sensors estimates the need of water to the fields. Message queue telemetry transport protocol (MQTT) having high-speed data transmission both the old data and the current data collected by the sensors are sent to Message queue telemetry transport client. To analyze the weather conditions and to increase the yield of crops precision agriculture with cloud computing using water fertilizers has been implemented. Keywords Smart irrigation Protocol IoT Access provided by University of Nebraska-Lincoln. Download conference paper PDF 1 Introduction The main factor for the agriculture is to predict the weather, climatic changes and also mainly to predict that when the atmosphere conditions are going to change. Here, both the automated irrigation system and the IoT is employed for the irrigation monitoring. It will be helpful for us when to irrigate the crop or field at what conditions will the crop be able to sustain and also the other environment and also the other changes. To monitor the weather and climatic conditions which are varying with the time and space, so the use of these electrical devices in the agriculture has been increasing rapidly. So the use of these WSN technology is applied to the irrigation systems, and it automatically removes high risk to the cable line due to the automatic operations of the machines [1]. Due to the high cost of the WSN system modules, we are not using these type of technology and also it requires high energy for the data transmission between the client and server. So we will use the IoT and with the help of the IoT we are employing the several systems in the different crop fields by naming it as the clients and this clients, which is getting reported every time to the server about the status of the crop, climatic changes of the temperature, humidity, and also the moisture of the certain place. So that the watering and also the when the pesticides can be served based on the conditions on the field. The paper is organized as follows: Section 2 describes the literature survey. Section 3 explains the proposed system in which the environmental changes are controlled using IoT through simple message transfer protocol (SMTP) and message queue telemetry transport protocol (MQTT). Section 4 mentions about the hardware description. In Sect. 5, results are discussed. Finally, conclusion in Sect. 6. 2 Literature Survey Wireless sensor network and GPRS module are used in automatic irrigation system as shown in Fig. 1. A wireless sensor network in which the required parameter sensors are placed in the root zone of the crops. To transmit the information received through sensors, it has gate way unit and trigger acculators [2]. To know the required amount of water starting values of soil moisture and temperature are taken into consideration and algorithm is developed. It uses photovoltaic panel and cellular internet communication link for data transference and irrigation check. First and foremost, it uses expensive and complex algorithms to get the required information. Secondly, it doesn’t help to control the environmental changes and low-communication speed. Fig. 1 GPRS module in automated irrigation system Full size image 2.1 Smart Phone Irrigation Taking agricultural crops into consideration, irrigation sensor was designed. The camera captures the images of the soil and roots of the crop to estimate the requirement of water. To estimate the wet and dry area of the crop using antireflective glass window an android app was developed so that this app activates the device to capture the images. A Wi-Fi connection is also needed to control the irrigation as in Fig. 2. This model addresses a lot of issues like having a smart phone with a Wi-Fi connection resulting in battery issues of phone, poor signal and time consuming. Fig. 2 Smart phone irrigation Full size image 2.2 Wireless Sensor Network (WSN) To get the best crop conduction, increase the productivity WSN is used as in Fig. 3. Many environmental parameters are sensed using sensors which continuously sends the data about water shortage. The soil conditions, need of water and climatic changes are known by using a Bluetooth device [3, 4]. This Bluetooth is used to transfer the information from sender to the receiver. Though this model is of low cost and gives the output results, it cannot recollect the old data, and it is less secure weather forecasting cloud technologies are not used. Fig. 3 Wireless sensor network Full size image 2.3 IoT in Agriculture IoT has the ability to rule the world in many industries, smart cities and especially when it comes to agricultural sector it has a great wallop. The conventional based farming approach is too difficult when compared to smart farming based IoT [5, 6]. It has great advantages like less water usage, control over environment and updated input treatments. It makes stock man and farmers to get the useful data, making the farmers understand the process by installing the necessary smart ways to increase the productivity as in Fig. 4. Fig. 4 IoT in agriculture Full size image 2.4 Drone Applications of IoT in Agriculture It is one if the best application of today’s growing technology. It handles crop health, irrigation, crop records, crop spraying and soil field analysis. Drones get the data by insight monitoring and observations [7]. To select a ground resolution farmer, enter the data so that plant height measurement, yield prediction and so on can be identified. It is used by many organizations and one of the most recognized application of IoT agricultural division. It utilizes various sensors, control systems, robotics, automated hardware, free vehicles [8]. It adopts high-speed internet, mobile devices and low-cost satellites are few technological trends. The chance of crops being damaged will be reduced if accuracy of weather is high. It is used for food production and safety. Agriculture IoT not only concentrates on increasing the productivity of the crop and control of weather conditions but also takes responsibility about food security like storage transportation, etc. Shipping time, storage temperature and cloud-based records are monitored by this system. 3 Proposed System In the present system, we are using the crop field algorithm. So the resulting data is having the high accuracy about the environment, and also mainly we are using the message queuing telemetry transport (MQTT) instead of using the Wireless Sensor Network (WSN) is MQTT is very much faster than the WSN. We are using this message queuing telemetry transport to transfer all the information about the climatic conditions are processed automatically, like if there is any possibility of rain in the weather cloud, then the climatic conditions and also the upcoming possibilities of the rain data log and also the current image of the environment will also be sent to the users mail. 3.1 Message Queuing Telemetry Transport (MQTT) Message queuing telemetry transport is a feather weight ISO standard publisher-subscriber messaging protocol specially designed for the internet of things. Internet of Things is creating the massive machine to machine network so that all of the devices like sensors, systems and also the actuators can connect to and communicate on the internet and with they need a communications protocol so that they can understand each other one of those protocols is message queuing telemetry transport. Message queuing telemetry transport is a TCP/IP protocol based on subscribe and publish messaging protocol designed for light weight machine-to-machine communications. MQTT has built the QoS to deliver the message. QoS 0: Once in a time “fire and forget,” if the device is online, it sends the message, and it gets delivered or if the device is offline it can’t be delivered it will be thrown away. QoS 1: Atleast once. QoS 2: Exactly once, 2 phase commit. Both the QoS 1 and QoS 2 have the effectively guaranteed delivery, while the QoS 2 uses the two phase summit guaranteeing exactly once delivery and also it can give the end-to-end protocol level but not within the stacks on each side of the connection these QoS 1 and QoS 2 are queued for clients when the user is also online but have no timed out. To work the message queuing telemetry transport, it has three stages they are called as the message queuing broker. It is like a gateway receiver or server and allows the clients to send and also to receive the short messages from the broker only if they have subscribed to any topic like weather, temperature and also the humidity. Here in the below diagram, the client A is the publisher and the remaining client B and C are the subscribers whom receives the information which is sent by the sensor known as the client A. And also, these two B and C clients subscribe to the particular topic and gets published to the broker all the three will have the TCP connection with the broker as in Fig. 5. The sensor or the publisher which is called as the client A updates the topic and publishes the information about the topic to the MQ broker. These clients have subscribed to the topic so when the new piece of information gets published to the topic they then get the information from the MQ broker. Fig. 5 Message queuing telemetry transport Full size image 3.2 Sensor/Publisher The publisher has the information about the topic, and also this publisher has the data about the topic which the subscribers have been subscribed earlier. It is connected to the broker via TCP connections on all the sides whenever the new data comes, it will be sent to the broker. And also the publishers and also the subscribers are not connected directly through the TCP/IP connection. And this MQTT publishers allow username and password for the authentication and these clients can directly log on via password. These passwords are sent by the MQTT via the plain text or in encrypted form. If no data was sent, then the publisher will be in the off mode. The subscriber receives the filtered messages every message is being filtered by the broker which is the middle of the publisher and it also knows that who will send the message and also who will receive the message. The subscriber is the application based. The broker filter the messages based on the subject and the content based and also the type based filtering by the broker. A user can also subscribe to the one topics or more topics. When subscribed to the one or more than one topics two characters can be used. MQTT supports disconnect and last will and testament messages in this they are two types: namely hash character—multi-level wildcard and plus character—single-level wildcard MQTT. Clients which disconnect intentionally use disconnect message as in Fig. 6. MQTT broker will automatically publish last will and the testament messages on the behalf of the clients with unintentionally terminated messages. It also supports the retained messages which are automatically delivered when a client subscribes to the topic. Fig. 6 Block diagram of MQTT subscriber/client Full size image The topics which we select in the MQTT are similar to the files in a system using the forward slash(/). In message queuing telemetry transport, there is no formal structure to select the topic and a publisher is free to choose, it’s own topic names and also the structure but it should consists atleast on character to be valid. There is no topics created by the broker. All topics are created by a subscriber and also the publisher client, are not permanent. A topic only exists only if a subscriber has already subscribed to it before only or a broker has restore the last messages stored for that topic. This is the example for that E.g.: School/Room/Sensor. 4 Hardware Description Raspberry pi 3 begins as a toy computer and ends up being a real desktop PC having an upgraded ARMv7 multicore processor and gigabytes RAM. In general, Raspberry pi has mode B and B+, mode A and A+, Pi zero. This Raspberry pi mode B and B+ are the simplest and cheapest but B+ has a bit more improved design of embedded applications. Raspberry pi zero has input or output, general purpose input or output (GPIO) and Bluetooth capability. They mostly operate at a frequency of 800–1000 MHz, in extreme case they can be operated upto 1500 MHz. In this model neither USB nor ethernet ports are changed. GPIO are the general purpose input and output pins which are used to turn off and to turn the devices like LED which will be present in the Raspberry pi. These pins allow you to connect and also to talk to the hardware modules that supports the protocol. UART is the universal asynchronous receiver and transmitter. It receives several bytes of the data from the GPIO pins but it transmits only bits of the data in the sequential order. In the asynchronous transmission of the data, it allows the bits to be sent or transmit without the sender but it will send the signal like the clock signal to the receiver side. UART can be used between the two devices only like simplex means data transmitted on one side only and also the half duplex in which the data can be transmitted in the either direction or the Full duplex. MPC3008 is a high performed and low power 10-bit analog-to-digital converter (ADC). In general to know the hotness as well as the coldness of an object, temperature sensor is used. In this LM 35 temperature sensor, the output is almost equal to the temperature. It doesn’t require any amplified output rather provides higher output than thermocouples. It is sometimes used as a power supply, battery, etc. To measure the amount of water in the soil moisture sensor is used. Indirectly either by using electrical resistance or neutron interactions water volume is measured. Light dependent resistor (LDR) is a variable light control resistor. As the light intensity increases, the resistance of LDR decreases. It can be used in circuits with light and dark activation switching and also in some light sensitive devices. 5 Results Figure 7 shows that the sensor parameters and also the weather conditions like temperature, moisture, humidity and also amount of light which is receiving. It compares the data log with the already existing weather reporting conditions. It also finds whether there is any possibility of the rainfall then it will intimates to the user through the registered mail. It will also predict the parameters like thunder storms, etc., as in Fig. 7. Fig. 7 Message queuing telemetry transport conversation/data log Full size image These sensor values are being sent to the clients using the cloud and MQTT protocol. These parameters can be checked by the client through the registered mail. 6 Conclusion In this system, the irrigation system becomes more simple and easy with the quick transmission of the weather parameters by using the MQTT protocol and sending this data through cloud to the cloud who has been subscribed. The main advantage of using these protocol is when the client is not available then the parameters will be sent through the mail. When the client is available with the network then he can able to see the data parameters and also he can compare the present data with the existing data which has been already sent. So that the farmer will be able to know the changes in the atmosphere every day. This can also be implemented by using the computer-based algorithm and also the data can be processed without any further complexity. With the other specifications, sensors are used to make the process better. References J. Gutiérrez, J.F. Villa-Medina, A. Nieto-Garibay, M.Á. Porta-Gándara, Automated irrigation system using a wireless sensor network and GPRS module. IEEE Trans. Instrum. Measur. 63(1), 166–176 (2013) Google Scholar   S.A. Nikolidakis, D. Kandris, D.D. Vergados, C. Douligeris, Energy efficient automated control of irrigation in agriculture by using wireless sensor networks. Comput. Electron. Agric. 113, 154–163 (2015) MATH   Google Scholar   S.R. Nandurkar, V.R. Thool, R.C. Thool, Design and development of precision agriculture system using wireless sensor network, in 2014 First International Conference on Automation, Control, Energy and Systems (ACES) (IEEE, 2014), pp. 1–6 Google Scholar   R. Vani, N. Thendral, J.C. Kavitha, N.P.G. Bhavani, Intelligent traffic control system with priority to emergency vehicles, in IOP Conference Series: Materials Science and Engineering, vol. 455, no. 1 (IOP Publishing, 2018), p. 012023 Google Scholar   S.K. Mandal, A. Maity, Precision farming for small agricultural farm: Indian scenario. J. Exp. Agricul. Int. 200–217 (2013) Google Scholar   D. Subitha, R. Vani, A. Raja, S. Balasubramani, A. Manjunathan, K. Sahile, Development of novel nano-silver-based antenna for green agriculture: Adv. Mater. Sci. Eng. (2021) Google Scholar   R. Hussain, J.L. Sahgal, M. Riyaj, Control of irrigation automatically by using wireless sensor network (2013) Google Scholar   R. Angeline, D. Subitha, R. Vani, Automation of transportation process using IoT for enhanced production. J. Green Eng. 10(11), 11031–11039 (2020) Google Scholar   Download references Author information Authors and Affiliations Department of ECE, SRM Institute of Science and Technology, Ramapuram, Chennai, Tamilnadu, India G. Saranyadevi, R. Vani, A. Jeshron Sonali & S. Minoviya Corresponding author Correspondence to G. Saranyadevi . Editor information Editors and Affiliations BioAxis DNA Research Centre, Hyderabad, India Amit Kumar Department of Electrical and Computer Engineering, University of Louisville, Louisville, KY, USA Jacek M. Zurada Department of Computer Science and Engineering, CMR Institute of Technology, Kandlakoya, India Vinit Kumar Gunjan Department of Computer Science and Engineering, Indian Institute of Technology Roorkee, Roorkee, Uttarakhand, India Raman Balasubramanian Rights and permissions Reprints and permissions Copyright information © 2022 The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. About this paper Cite this paper Saranyadevi, G., Vani, R., Jeshron Sonali, A., Minoviya, S. (2022). Smart Irrigation for Enhanced Agriculture Production Using IoT. In: Kumar, A., Zurada, J.M., Gunjan, V.K., Balasubramanian, R. (eds) Computational Intelligence in Machine Learning. Lecture Notes in Electrical Engineering, vol 834. Springer, Singapore. https://doi.org/10.1007/978-981-16-8484-5_27 Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-16-8484-5_27 Published 03 March 2022 Publisher Name Springer, Singapore Print ISBN 978-981-16-8483-8 Online ISBN 978-981-16-8484-5 eBook Packages Intelligent Technologies and Robotics Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Publish with us Policies and ethics Download book PDF Download book EPUB Sections Figures References Abstract Introduction Literature Survey Proposed System Hardware Description Results Conclusion References Author information Editor information Rights and permissions Copyright information About this paper Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

Paper 3:
- APA Citation: Syafarinda, Y., Akhadin, F., Fitri, Z. E., Yogiswara, B. Widiawan, E. Rosdiana. (2018) The Precision Agriculture Based on Wireless Sensor Network with MQTT Protocol. IOP Conference Series: Earth and Environmental Science, 207 1-7
  Main Objective: To develop a precision agriculture system using a Wireless Sensor Network (WSN) and the MQTT protocol to monitor temperature, humidity, and light intensity in a greenhouse.
  Study Location: Unspecified
  Data Sources: Data collected from SHT3x and TSL2561 sensors monitoring temperature, humidity, and light intensity in a greenhouse.
  Technologies Used: MQTT protocol, Wireless Sensor Network (WSN), SHT3x and TSL2561 sensors
  Key Findings: The MQTT protocol is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol is approximately 1 second.
  Extract 1: None
  Extract 2: None
  Limitations: The paper focuses on the use of the MQTT protocol in a specific precision agriculture system and does not provide a comprehensive comparison of application layer protocols for real-time irrigation management. Additionally, the paper does not provide any empirical data or analysis to support its claims about the suitability of MQTT for irrigation management.
  Relevance Evaluation: This paper is moderately relevant to the specific point of comparison of application layer protocols for real-time irrigation management. While it does not explicitly discuss the suitability of XMPP, CoAP, SOAP, or HTTP for irrigation management, it does provide an overview of the MQTT protocol and its advantages for use in IoT applications.
  Relevance Score: 0.6
  Inline Citation: (Syafarinda et al., 2018)
  Explanation: The paper "The Precision Agriculture Based on Wireless Sensor Network with MQTT Protocol" by Syafarinda et al. (2018) presents the development of a precision agriculture system using a Wireless Sensor Network (WSN) and the MQTT protocol. The system monitors temperature, humidity, and light intensity in a greenhouse using SHT3x and TSL2561 sensors.

 Full Text: >
"We value your privacy Clicking the \"Accept All\" button means you are accepting analytics and third-party cookies. We use cookies to optimise site functionality and give you the best possible experience. To control which cookies are set, click \"Customize\". Privacy and Cookies policy Customize Accept All Skip to content IOP Science home Accessibility Help Search Journals Books Publishing Support Login IOP Conference Series: Earth and Environmental Science PAPER • THE FOLLOWING ARTICLE IS OPEN ACCESS The Precision Agriculture Based on Wireless Sensor Network with MQTT Protocol Y Syafarinda1, F Akhadin1, Z E Fitri1, Yogiswara1, B Widiawan11 and E Rosdiana2 Published under licence by IOP Publishing Ltd IOP Conference Series: Earth and Environmental Science, Volume 207, 1st International Conference on Food and Agriculture 2018 20–21 October 2018, Bali, Indonesia Citation Y Syafarinda et al 2018 IOP Conf. Ser.: Earth Environ. Sci. 207 012059 DOI 10.1088/1755-1315/207/1/012059 Download Article PDF References Article metrics 3434 Total downloads 30 Share this article Article and author information Abstract Precision agricultural techniques are widely developed to monitor and control growth of plant in greenhouse. The use of greenhouses is suitable for the countries that have unpredictable weather e.g. Indonesia. The main monitors and controls in greenhouse are sensor networks and actuators. Some examples of the precision agriculture technique are monitoring of fertilizer needs and smart irrigation. This paper presents a develpment of precision agriculture based on Wireless Sensor Network (WSN) with Message Queuing Telemetry Transport (MQTT protocol. The WSN system involves Internet of Things (IoT) technology to connect devices, collect and distribute information. IoT integration with cloud computing is aimed to overcome limitations of the IoT devices in remote monitoring and control. WSN development uses MQTT protocols that have advantages that are lightweight, simple, can run on a small bandwidth and more advanced compared to Hypertext Transfer Protocol (HTTP ). In this paper the SHT3x and TSL2561 sensors are used to observe temperature, humidity and light intensity of the greenhouse. Test results of three sensors in data transmission speeds indicate that the MQTT protocol run with very small bandwidth. It can transmit data on the 4G network of AXIS provider with download capability of 0.02 kbps and upload 1.65 kbps. The average data transmission speed is approximately 1 second. Export citation and abstract BibTeX RIS Previous article in issue Next article in issue Content from this work may be used under the terms of the Creative Commons Attribution 3.0 licence. Any further distribution of this work must maintain attribution to the author(s) and the title of the work, journal citation and DOI. Show References Abstract References You may also like JOURNAL ARTICLES Skeleton-Based Human Activity Recognition of Low-voltage Distribution Room Based on MQTT Protocol and Wireless Sensor Network Wind Turbine Fault Monitoring System Using MQTT Optimization of Data Communication on Air Control Device Based on Internet of Things with Application of HTTP and MQTT Protocols Multi-protocol Integration and Intercommunication Technology Based on OPC UA and MQTT Securing the MQTT Protocol using Enhanced Cryptographic techniques in IoT Surroundings Safe MQTT-SN: a lightweight secure encrypted communication in IoT Senior & Principal Criticality Safety Assessors AWE Science Program Officer, Heising-Simons Foundation Heising-Simons Foundation Postdoctoral position: Impacts of terrestrial climate change on the lunar orbit, Univ of Michigan University of Michigan: Earth and Environmental Sciences More jobs Post a job IOPSCIENCE Journals Books IOP Conference Series About IOPscience Contact Us Developing countries access IOP Publishing open access policy Accessibility IOP PUBLISHING Copyright 2024 IOP Publishing Terms and Conditions Disclaimer Privacy and Cookie Policy PUBLISHING SUPPORT Authors Reviewers Conference Organisers This site uses cookies. By continuing to use this site you agree to our use of cookies. IOP Publishing Twitter page IOP Publishing Facebook page IOP Publishing LinkedIn page IOP Publishing Youtube page IOP Publishing WeChat QR code IOP Publishing Weibo page"

</subsection_point_Point 2>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.
n summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.


</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper.

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<subsection_point_Point 3>
Point: Discuss the importance of sensor calibration, drift correction, and fault detection in ensuring data accuracy and reliability

Papers to support point:

Paper 1:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: Sensor calibration, drift correction, and fault detection are crucial for accurate biomass yield prediction, as they help to minimize errors and biases in the data collection process.
  Extract 2: These three aspects contribute to addressing the point within the larger context and intent of the literature review.
  Limitations: None identified
  Relevance Evaluation: {'extract_1': 'Discuss the importance of sensor calibration, drift correction, and fault detection in ensuring data accuracy and reliability', 'extract_2': 'Sensor calibration, drift correction, and fault detection are crucial for accurate biomass yield prediction, as they help to minimize errors and biases in the data collection process.', 'limitations': 'None identified', 'relevance_score': 1.0}
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: Based on my reading of the paper, the authors specifically focus on the importance of sensor calibration, drift correction, and fault detection in ensuring data accuracy and reliability. They argue that these three aspects are crucial for accurate biomass yield prediction, as they help to minimize errors and biases in the data collection process. The authors also provide a concise yet detailed explanation of how each of these three aspects contributes to addressing the point within the larger context and intent of the literature review.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Log in Find a journal Publish with us Track your research Search Cart Home Precision Agriculture Article Prediction of pasture yield using machine learning-based optical sensing: a systematic review Open access Published: 28 September 2023 Volume 25, pages 430–459, (2024) Cite this article Download PDF You have full access to this open access article Precision Agriculture Aims and scope Submit manuscript Christoph Stumpe , Joerg Leukel & Tobias Zimpel   1336 Accesses Explore all metrics Abstract Accurate and reliable predictions of biomass yield are important for decision-making in pasture management including fertilization, pest control, irrigation, grazing, and mowing. The possibilities for monitoring pasture growth and developing prediction models have greatly been expanded by advances in machine learning (ML) using optical sensing data. To facilitate the development of prediction models, an understanding of how ML techniques affect performance is needed. Therefore, this review examines the adoption of ML-based optical sensing for predicting the biomass yield of managed grasslands. We carried out a systematic search for English-language journal articles published between 2015-01-01 and 2022-10-26. Three coders screened 593 unique records of which 91 were forwarded to the full-text assessment. Forty-three studies were eligible for inclusion. We determined the adoption of techniques for collecting input data, preprocessing, and training prediction models, and evaluating their performance. The results show (1) a broad array of vegetation indices and spectral bands obtained from various optical sensors, (2) an emphasis focus on feature selection to cope with high-dimensional sensor data, (3) a low reporting rate of unitless performance metrics other than R2, (4) higher variability of R2 for models trained on sensor data of larger distance from the pasture sward, and (5) the need for greater comparability of study designs and results. We submit recommendations for future research and enhanced reporting that can help reduce barriers to the integration of evidence from studies. Similar content being viewed by others Comparing methods to estimate perennial ryegrass biomass: canopy height and spectral vegetation indices Article Open access 09 July 2020 Characterization of portuguese sown rainfed grasslands using remote sensing and machine learning Article 27 July 2022 Remote sensing and machine learning applications for aboveground biomass estimation in agroforestry systems: a review Article 10 May 2023 Introduction Pastures account for about 70% of the world’s agricultural land (Squires et al., 2018) and provide essential sources of high-quality forage for ruminants (Bouwman et al., 2005). Thus, pastures assume a key role in nourishing a growing global population with dairy and meat products (Henchion et al., 2017; Tripathi et al., 2018). Moreover, grasslands fulfill ecosystem services such as carbon storage and habitat conservation; hence, they help mitigate climate change and preserve biodiversity (O’Mara, 2012; Zhao et al., 2020). Pasture management is being challenged by increasing competition between forage and energy crops (Donnison & Fraser, 2016), land sealing due to infrastructure and housing, greater yield volatility due to climate change (Hopkins & Del Prado, 2007), and stronger constraints on fertilization (Buckley et al., 2016). Against this backdrop, accurate and reliable information about future pasture yields gains importance for agricultural management. These yield predictions can support the decision-making processes regarding fertilization, pest control, irrigation, stocking rates, and mowing. Overall, accurate yield predictions allow more efficient use of all inputs, resulting in less environmental impact and greater profits for farmers (Hedley, 2015; Kent Shannon et al., 2018). Machine learning-based optical sensing has become the prevailing approach to predictive modeling for pasture yields. In this approach, past observational data is analyzed to learn a mapping function between pasture characteristics and biomass at harvest. This function is used to predict the biomass for pasture characteristics obtained via sensors at a future time. Predictive modeling using machine learning (ML) takes advantage of significant improvements in technology for optical sensing (Adão et al., 2017; Zeng et al., 2020), enhanced availability of field data at different levels of granularity (Murphy et al., 2021), and greater performance of the underlying ML algorithms. The importance of MLbased optical sensing for pasture yield prediction is reflected in the high number of studies in recent years. Evidence for the effectiveness of ML-based predictive modeling has increased. The evidence concerns different grass species, such as perennial ryegrass (Lolium perenne) (Nguyen et al., 2022), signalgrass (Brachiaria) (Bretas et al., 2021), and clover (Trifolium pratense) (Li et al., 2021), and different types of optical sensors, including portable spectroradiometers (Murphy et al., 2022), sensors mounted on unmanned aerial vehicles (UAVs) (van der Merwe et al., 2020), and carried by satellites (Bretas et al., 2021). This variety converges with a broad set of ML techniques that developers can adopt. Developers must select techniques for the transformation of input data into features, the training of prediction models from past observations of input data and biomass, and the evaluation of the trained models on new observations. To inform these decisions on the development of prediction models, insights into the effectiveness of specific ML techniques are required. Notwithstanding the increased evidence base, the understanding of the effectiveness of specific ML techniques is still limited. Regarding the types of optical sensor data, a previous review found better performance for prediction models that were trained on in-field imagery compared to models that processed satellite data (Morais et al., 2021). However, about half of the included studies examined non-managed grasslands, such as steppe, semiarid grassland, bunchgrass, and shrub on drylands; hence, the finding cannot necessarily be generalized to prediction models for pasture yield. Two literature reviews focused on UAVs so that the results do not extend to models trained on data from field spectroradiometers and satellites (Bazzo et al., 2023; Lyu et al., 2022). Another review had a broader scope by including studies that collected non-optical sensor data (Murphy et al., 2021). One related review only provided aggregated information but no results at the study level (Subhashree et al., 2023). Collectively, the burgeoning field of pasture yield prediction using ML-based optical sensing calls for the assessment of current evidence to facilitate the development of prediction models. To address this need, we conducted a systematic review that is conceptually guided by the ML process. Specifically, the objectives are to: (1) determine the adoption of ML-based optical sensing in previous research examining yield prediction for pasture management, (2) collate the performance results, and (3) propose recommendations for future research and the reporting of studies. Method We conducted a systematic review of studies and report the results based on the PRISMA (Preferred Reporting Items for Systematic Reviews and Meta-Analyses) guidelines, where applicable (Moher et al., 2009). To ensure the reliability of the coding, three authors independently screened the identified records, assessed the full-text articles for eligibility, and extracted data from the selected studies. Eligibility criteria We included studies that applied machine learning on data obtained from optical sensing for predicting the yield of pastures, with yield defined as the current or future biomass of a specific pasture area, such as a plot, paddock, or field. The studies were required to report empirical results from the processing of real-world data. We focused on studies in refereed journals and written in English. The time interval of the past eight years (2015-01-01 through 2022-10-26) allowed us to assess studies that benefit from advances in ML and optical sensors in recent years, and thus have high relevance for research and practice. Studies were excluded if any of the following criteria were met: (1) dependent variable not related to a managed pasture but a different crop, nature conservation, biodiversity, or grassland coverage; (2) no prediction of yield but a different variable (e.g., nutrients, sward composition); (3) no predictive modeling but explanatory modeling or conceptual research; (4) no use of machine learning; (5) no processing of real-world data; and (6) no use of data from optical sensing (e.g., exclusively weather data). Information sources and search We identified articles through an automated search of journal articles published between January 1, 2015, and October 26, 2022. The search used the electronic database Scopus, which is the largest database of scientific literature and has larger coverage of peer-reviewed literature than the Web of Science (Mongeon & Paul-Hus, 2016; Singh et al., 2021; Thelwall & Sud, 2022). We designed the search query to cover the wide variety of terminology found in the literature. The search query had four concatenated components for pasture, yield, prediction, and machine learning. The pasture was represented as follows: (pasture* OR forage* OR grassland* OR *grass OR herbage* OR meadow*). Yield was covered by the following term: (yield OR biomass OR agb OR “herbage mass” OR “pasture mass” OR “grassland production” OR “forage production” OR quantity). The prediction component included different words as follows: (predict* OR assess* OR estimat* OR forecast*). Machine learning was represented by abstract terms and specific algorithms as follows: (“machine learning” OR “deep learning” OR “support vector” OR “random forest*” OR “neural network” OR “partial least square*” OR “predict* model*” OR “regression model”). Study selection We ensured the reliability of the study selection through the following procedure. We defined a codebook that provided the eligibility and exclusion criteria. The codebook was used in the screening phase by three authors who independently coded the first nine articles based on the title, abstract, and keywords. The coders met to compare their codes and resolve any conflicting codes through discussion. The coding commenced with the remaining articles. Once all articles were coded and discussed, we downloaded the full texts of the articles that passed the screening. The assessment of the full texts employed the same codebook and was organized in two rounds of coding and resolving disagreements. Data collection process The data collection for the included studies was carried out by the same three authors, who independently filled in an Excel spreadsheet form for 96 data items per article. The data items operationalize the conceptual framework described in the following section. All individual codes were compared in two rounds in which disagreements were resolved through discussion and consensus. Data items Figure 1 illustrates the conceptual model of the review based on the process of predictive modeling using machine learning. This process begins with the prediction problem and ends with the evaluated prediction model. The figure also denotes the principal data items that we collected during the review. Fig. 1 Process and principal data items for pasture yield prediction Full size image Forecasting the yield of pastures based on optical sensor data recorded during the vegetation period represents the prediction problem. Plant species are pasture plants that are cultivated and constitute the sward composition for which the prediction is made. Grazing indicates whether the pasture is grazed by animals or managed by machinery for forage conservation. Country denotes the location where the study was conducted. The process shown in Fig. 1 defines four phases, which we discuss in the following paragraphs. Data collection includes the creation of a data set by recording prediction-relevant data of the pasture vegetation and the observed yield at the time of harvest. Study conditions describe the number of fields, sample plots, and seasons for which these data were recorded. A sample plot is defined as the smallest partial area from which an independent sample of biomass is collected by cutting. Studies vary in the number of plots per field as well as in the size of plots, which usually range from 0.25 m2 to a handful of square meters. The input data can be classified into the following groups: vegetation indices calculated from spectral measurements (Xue & Su, 2017); spectral bands taken from imagery; textural features as properties of the surface calculated based on the Grey Level Co-occurrence Matrix (GLCM) method (Haralick et al., 1973); sward height above the ground; weather data (e.g., precipitation, temperature) (Yao et al., 2022); site data (e.g., soil type, angle); and agronomic data (e.g., fertilizer input, irrigation, grazing rotation, stocking rates, species selection, and pest and weed control) (Smit et al., 2008). Another classification of input data is based on the dichotomy of biotic and abiotic factors affecting plant growth (Lange et al., 2014). Biotic factors refer to living organisms, such as grazing animals, insects, microorganisms, and other plants that influence pasture production (Kallenbach, 2015; Klaus et al., 2013). Abiotic factors encompass non-living elements, such as soil composition, temperature, water supply, and global radiation that determine plant growth (Baldocchi et al., 2004; Sorkau et al., 2018). A sound knowledge of biotic factors, abiotic factors, and their complex interactions helps to develop effective prediction models, although the conceptual differences between explanatory and predictive modeling need to be considered (Shmueli, 2010). Optical sensors for gathering input data can be categorized as follows. In-field sensors operate near the ground and foremost include field spectroradiometers for obtaining reflectance data, such as vegetation indices and chlorophyll content of plants, but also laser scanners, such as LiDAR (Light Detection and Ranging), to create a 3D map of the pasture. Aerial sensors are mounted on an aircraft or unmanned aerial vehicle (UAV) to collect high-resolution imagery from a low flying height (Feng et al., 2021); they include hyperspectral, multispectral, and RGB cameras as well as thermal sensors and LiDAR sensors. Satellite remote sensing enables to record vegetation reflectance from the orbit. Data preprocessing is the second phase, which produces so-called features from the input data. Features represent characteristics of the empirical phenomenon on which a prediction model can be learned. Including all input data as features in the prediction model incurs the risk of learning from noise in the data and lacking in prediction performance. For this reason, feature selection provides different techniques for identifying smaller sets of features. The techniques are usually grouped into three categories (Chandrashekar & Sahin, 2014): (1) Filter-based techniques select features based on a metric calculated for each feature. For instance, correlation analysis can identify pairs of highly correlated features from which only one feature will be retained. Another technique is principal component analysis (PCA), which transforms a set of strongly correlated features into a smaller set. (2) Wrapper-based techniques remove one or more features from the initial set by iteratively training and evaluating alternative prediction models. For instance, backward elimination starts with the full set of features and removes features based on pvalues passing a specific threshold (in case of multiple linear regression). (3) Embedded techniques are specific to an ML algorithm. One example is Random Forests feature selection, which calculates the so-called feature importance metric and then removes features that do not pass a threshold for the metric. The third phase is model training in which example observations are used to learn a function that best maps a set of feature values to the corresponding observed yield; these examples are also referred to as input-output pairs. For estimating the mapping function, the field of supervised machine learning provides a large variety of ML algorithms. Frequently used algorithms for predicting pasture yields include Random Forests (RF) (Ho, 1995), Artificial Neural Networks (ANN) (Bishop, 2006), and Support Vector Regression (SVR) (Drucker et al., 1996) but also different types of linear regression, such as ordinary least squares (OLS) and partial least squares (PLS) regression. All these algorithms require a sufficiently large training set that includes a number of examples. Model evaluation is the final phase, which assesses the prediction performance of a trained model. Because of the many design alternatives to choose from in the preceding phases, developers usually evaluate alternative prediction models through experiments in which one or more factors are manipulated. By conducting factorial experiments, developers can devise a variety of experimental conditions, gain insights into how the factors affect performance, and eventually identify the best-performing model. Irrespective of the experimental design, evaluation calls for testing the prediction model on new observations, thus observations that were not included in the training phase. The evaluation can be accomplished using cross-validation, a test set, or both techniques. In cross-validation (CV), the data set is iteratively divided into subsets for training and testing. For instance, k-fold CV divides the data set into k subsets (folds) of equal size, trains a model for each combination of k-1 folds, evaluates the model on the left-out fold, and reports the mean performance for all k models. In other words, in each iteration, one fold is left out of the training set. Another type of CV is leave-one-out, which trains the model using all but one observation and tests the model on the left-out observation. The training and testing must be repeated n times, with n standing for the total number of observations. Different from CV, a test set indicates a technique that uses a separate data set of new observations. Either technique can apply performance metrics to quantify the accuracy of predicted vis-á-vis observed yields. Metrics for yield predictions include, for instance, the coefficient of determination (R2), the root mean square error (RMSE), the normalized RMSE (NRMSE), and the mean absolute error (MAE). The report on prediction performance can be supplemented by information on so-called feature importance, i.e., a quantitative assessment of the extent to which individual features have contributed to the prediction performance. Various techniques are available for measuring importance, for example, by indicating how a specific performance metric would change in absolute or relative terms if the feature in question were removed. Other techniques specify importance as a percentage value, summing to 100% for all features. Such information is typically presented in column charts or placed in tabular appendices. Results Study selection Figure 2 shows the PRISMA flow chart of study selection. A total of 591 records were identified through database searching. We considered two additional studies that reported prediction models for pasture yield using optical sensing; the studies were listed in Scopus, but their records were not automatically retrieved. Of the 91 articles that were forwarded to the full-text assessment, 43 articles fulfilled the eligibility criteria, and these studies were included in the review. Fig. 2 PRISMA flow chart Full size image Table 1 shows an overview of the included studies. The most frequently studied plants were perennial ryegrass (14 studies, Lolium perenne), clover species (8, Trifolium), signalgrass (5, Brachiaria), and timothy (4, Phleum pratense). Twenty-five of the pastures were mechanically harvested, and the remaining pastures were grazed by animals. Twenty-two studies were conducted in Europe, nine in Australia, six in South America, and four in North America, whereas only each one study was carried out in Africa and Asia. Predictions were always made right before harvest or very near to that day, except for three studies that used prediction horizons of 13 days (Schwieder et al., 2020), 38 days (Li et al., 2021), and 152 days (Hamada et al., 2021), respectively. Table 1 Overview of the studies (N = 43) Full size table Data collection Table 2 provides the number of fields, sample plots, and seasons, followed by the different types of input data. Almost half of the studies were limited to data from a single field. The number of sample plots ranged from only two to more than one thousand (mean: 114; median: 54; n = 35). Two-thirds of the studies collected data in one growing season, and every fifth study covered two seasons. Two studies even covered eight (Jaberalansar et al., 2017) and twelve seasons (Ali et al., 2017), respectively. Twothirds of the studies were conducted at research facilities and one-third on fields operated by farmers (not tabulated). Vegetation indices were processed as input data in 29 studies. The number of VIs spanned from one index in four studies to more than 20 indices in eight studies. Sward height was used in 19 studies and it was either measured by UAV (13 studies), rising plate meter (3), LiDAR (1), meter ruler (1), or satellite (1). Nineteen studies processed spectral bands, which exhibited large variability between 2 and 2150 different bands. In three studies, vegetation indices were complemented with textural features. All other types of input data played a minor role. Specifically, five studies used weather data, two studies considered site data (e.g., soil type, elevation, slope, and aspect), and only one study integrated fertilizer input as agronomic data (Franceschini et al., 2022). No study learned a model based on biotic data. Table 3 summarizes the adoption of the different types of optical sensors. Fourteen studies obtained data from in-field sensors, which included spectroradiometers (12 studies). Twenty-four studies collected input data from cameras mounted on aerial vehicles; the cameras recorded RGB images (11 studies), multispectral images (13), and hyperspectral images (5). Thirteen studies retrieved image data from satellites, including Sentinel (9 studies), MODIS (3), PlanetScope (2), Landsat (1), PlanetDove (1), and WorldView (1). Table 2 Data collection in the included studies (N = 43) Full size table Table 3 Optical sensors used in the included studies (N = 43) Full size table Data preprocessing Table 4 reports the adoption of feature selection techniques and provides the number of features per study. Feature selection was present in 24 studies, and the most frequent techniques were correlation analysis (8 studies), PCA (8), and stepwise regression (4). The number of features ranged between 1 and 101, although eight studies did not report this information. On one hand, four studies spared out feature selection but collected sensor data for a single feature. On the other hand, 18 studies trained models from at least 10 different features. Table 4 Feature selection techniques and number of features in the included studies (N = 43) Full size table Model training Table 5 provides information about the adoption of 16 different ML algorithms. The most frequent algorithms were Random Forests (20 studies), PLS regression (13), OLS regression using a single predictor (10) or multiple predictors (8), and Support Vector Regression (8). The size of the training set was stated in 41 studies, which either reported the number of examples, a percentage value of the examples used, or both types of information (not tabulated). In 10 studies, the prediction models were trained on less than 100 examples. Table 5 Machine-learning algorithms in the included studies (N = 43) Full size table Model evaluation Experimental manipulation Table 6 shows the frequency of each manipulated factor. The most frequent factors were feature set (19 studies) and ML algorithm (17). The former studies compared the performance of prediction models using different combinations of features, such as vegetation indices, spectral bands, sward height, and weather features. Nine studies investigated alternative sensors (e.g., UAV versus satellite). Six further factors were only examined in one study each. The number of manipulated factors per study was either one (16 studies), two (15), or three (2), whereas no manipulation was present in ten studies. Table 6 Manipulated factors in the included studies (N = 43) Full size table Model assessment Table 7 shows the adoption of cross-validation and test set as techniques for model assessment. Twelve studies were limited to cross-validation, and another 13 studies only used a test set including new observations. The remaining 18 studies applied both techniques. Table 7 Model assessment in the included studies (N = 43) Full size table We note that the application and reporting of cross-validation exhibit large variation by leaving out one fold (19 studies), one example (7), or one site (1) in the training phase, whereas four studies provided no information in that respect. Regarding the test set, 29 of the 31 studies reported its size as a percentage of the whole data set. The number of examples ranged between 10 and 433. Six studies had very small test sets with at most 24 examples, but ten studies had much larger test sets with more than one hundred examples. Performance metrics Table 8 reveals that R2 was reported in all but five studies. Thirty studies provided the root mean square error in kg per ha. Unitless normalizations of the RMSE were present in 25 studies. This normalization was either based on the mean (11 studies), range (4), standard deviation (2), and interquartile range (1) of the observed yield, or its specification was missing (7). Table 8 Performance metrics reported in the included studies (N = 43) Full size table Performance by types of optical sensors The high adoption rate of the unitless R2 metric allowed us to collate performance results as shown in Fig. 3, which groups 41 prediction models by the types of optical sensors used. The R2 ranged between 0.42 and 0.90 in the satellite group, between 0.50 and 0.94 in the aerial sensors group, and between 0.62 and 0.92 in the in-field sensors group. The range was even smaller for the few prediction models that complemented in-field data by satellite data (0.71 to 0.90) and UAV data (0.81 to 0.92), respectively. Similarly, the mean performance in the in-field (0.79) and aerial groups (0.77) was higher than for the satellite (0.67) group. Two studies that processed data from aerial sensors and satellites at the same time reported R2 values of 0.70 (Pereira et al., 2022) and 0.72 (Barnetson et al., 2021), respectively (not shown in Fig. 3). Fig. 3 R2 of 41 prediction models by the types of optical sensors used (dots with filling indicate R2 on the test set, dots without filling stand for cross-validation) Full size image Feature importance Seventeen studies provided information on the importance of features. As shown in Table 9, many different techniques have been adopted, including variable importance in projection (Chong & Jun, 2005) and increase in RMSE (Kuhn, 2008). Six studies reported on the importance but lacked a specification of the technique used. In fifteen studies, only features based on spectral data were assessed (which is consistent with the focus on spectral variables in the data collection). In one study, the highest feature importance was assigned to canopy height (Schucknecht et al., 2022), and another study found that the relative importance of three weather features was one third, while three vegetation indices contributed two thirds (Bretas et al., 2021). Table 9 Techniques for feature importance reported in the included studies (N = 43) Full size table Discussion This review examined the adoption of machine-learning techniques for pasture yield prediction using optical sensor data. We analyzed forty-three studies that have been published in journals between 2015-01-01 and 2022-10-26. This section discusses the principal findings of the review and draws implications for future research and the reporting of studies. We also discuss the limitations of our review. Data collection For assessing the reliability of a trained prediction model, the number of fields, plots, and seasons are important factors that determine the size of the training set. These numbers can provide indications of how far the temporal and spatial variability of pasture yields have been considered in the data collection. Yet, more than half of the studies were conducted in one season, which restricts the training data to specific weather and growing conditions. One-third of the studies were limited to data from one field in one season. Even in the latter group of studies, the number of sample plots exhibited an enormous span from 21 to 1080. The chances that a model will perform similarly in future seasons can be enhanced by training the model on multi-seasonal data of different fields in which many plots capture the in-field variability. However, this approach puts a burden on researchers and farmers because the required effort for data collection increases significantly. The restriction of many studies to a single field limits the applicability of the trained models to a local level; hence, conclusions about their prediction performance beyond the specific field cannot be drawn. Three approaches are feasible to develop global models. First, data from a larger number of fields from different regions can be collected to develop models from data of greater heterogeneity. Second, data representing biotic and abiotic factors can be integrated to represent a larger set of growing conditions, thereby incorporating these factors into the development. A third possibility is to train a global prediction model by integrating multiple local models, i.e., the reuse of training data from different local sources (Liu et al., 2022). The included studies do not inform developers about the minimum size of the training set to achieve a reasonable level of prediction performance. One study manipulated the size but it found only marginal effects on performance (Rosa et al., 2021). The results of our review highlight that little is known about how to specify the size of the training set. This finding points to the need for further examination of the relationship between the training set and prediction performance. A common theme in the studies is the application of features derived from optical data, namely VIs (29 studies), spectral bands (19), textures (19), and sward height (15). Most studies collected data from at least two different types and considered multiple input variables, either alternatively or supplementary. The focus is on exploiting the potential of optical sensing and techniques for transforming image data into variables that are associated with plant growth. Therefore, it is not surprising that the number of VIs (1 to 97), spectral bands (2 to 2150), and textures (8 to 32) varied considerably across studies. It is noteworthy that the most frequent approach for measuring the sward height was UAV, which has substituted the manual measurement using hand-held devices. Consistent with the large array of VIs, spectral bands, textures, and sward height variables collected in combination, the types of optical sensors used indicate comprehensive coverage of current sensor technologies. All other types of input data, such as weather data (5 studies), site data (2), and agronomic data (1) played a minor role. This finding is surprising in view of the fact that such data can be obtained with relatively little effort or are already available. For instance, the retrieval of weather data is facilitated by online portal and programming interfaces (Jaffrés, 2019). Historic and current weather data specifically for agricultural purposes are offered by companies, national meteorological agencies, and agricultural departments (Farmers Guide, 2022). Site and agronomic data are increasingly recorded by farmers and processed in digital farm management information systems. These data represent a so far hardly exploited potential for supplementing the spectral data and thus for training even more accurate prediction models. Data preprocessing Given the often-high dimensionality of the optical input data used, the objective of data processing is to reduce the number of features derived from the input data. This dimensionality is foremost due to the large number of VIs and spectral bands in many studies. The results of our review provide evidence for the relevance of feature selection, which was present in more than half of the studies (it was not relevant for four studies that collected data for a single feature). Overall, the techniques used span across filter-based, wrapper-based, and embedded techniques, and reflect the variety of techniques available from the ML literature. In many studies, the number of features was effectively reduced without increasing the error of prediction. For instance, one study started with a set of 20 VIs and eventually selected one VI based on correlation analysis (Hamada et al., 2021). Another study considered 2150 different spectral bands obtained from a hand-held spectroradiometer and then performed stepwise regression using backward elimination to arrive at a linear model with only seven features (Zeng & Chen, 2018). Similarly, a study by Chiarito et al. (2021) applied a genetic algorithm to an initial set of 1024 spectral bands to choose a 13-feature model. Concerning the final set of features processed in the training phase, our review identified six studies in which the lack of feature selection led to models trained from at least 26 features (Grüner et al., 2020; Karunaratne et al., 2020; Lussem et al., 2022; Näsi et al., 2018; Pranga et al., 2021; Schucknecht et al., 2022). For these studies, it might be possible that a model with fewer features exists that would perform similarly. Therefore, we recommend exploring the impact of feature selection on prediction performance when the model was trained on a large number of features derived from optical data. For studies that adopt a hypothetico-deductive approach to the model development, we suggest determining the relative importance of each feature and relating the results back to the model development. We also note that almost one-fifth of the studies provided no information on the number of features. Presenting complete information on the features included in the trained model would help assess the input data that necessarily must be collected and data that can be omitted. This information can effectively be reported in a table showing each feature along its unit of measurement and definition (Chen et al., 2021). In case the number of features exceeds the possibilities of a table, the information can be summarized by indicating the numbers per type of sensor as well as the initial and final numbers (Schulze-Brüninghoff et al., 2021). Model training The highest adoption rates were found for Random Forests, PLS regression, and OLS regression, whereas only four studies used Artificial Neural Networks. It is noteworthy that PLS regression was employed in 13 studies. PLS regression is a form of multiple linear regression in which the number of initially used independent variables can automatically be reduced by an in-built principal component analysis to a smaller set of features. Therefore, PLS regression appears specifically relevant for the training from spectral input data, while it still assumes linear relationships between the features and the pasture yield. However, two studies that compared the performance of PLS and MLR models reported conflicting results concerning the R2 metric (Askari et al., 2019; Borra-Serrano et al., 2019). Regarding the performance of linear vis-á-vis non-linear models, four studies found better performance for non-linear models, but three other studies came to the opposite conclusion. Overall, the results of our review suggest no evidence for the superiority of any group of learning algorithms. Forty studies stated the size of the training set, which varied greatly because of the different numbers of fields, sampling plots, and seasons between studies. This size must be seen in the context of the temporal and spatial variability of the specific pasture under study. If a prediction model is learned from too few observations that do not sufficiently represent this variability, the model will perform very differently for other test data. Our review identified two studies that had very small training sets of 32 (Näsi et al., 2018) and 36 observations (Li et al., 2021), respectively. Although no clear guidance is available for determining the minimum size required, it can give readers a hint about the reliability of the prediction model. Therefore, we suggest reporting complete and unequivocal information on the training and test sets used. The reporting should always include the absolute and relative numbers for each data set. For instance, this information can be visualized in a flow diagram that specifies the data processing (Murphy et al., 2022), or provided in a single sentence, such as the following: “the complete dataset was first divided into two parts in a 70:30 ratio (231 observations for the training dataset and 99 observations for the test dataset)” (Da Silva et al., 2022, pp. 6039–6040). Moreover, any removal of observations throughout the preprocessing and learning phases should be justified, instead of generally referring to so-called outlier removal. Model evaluation Insights into the role of specific ML techniques for achieving high performance can be obtained from systematic testing of alternative models. The preferred method is the controlled experiment in which one or more factors are manipulated (33 of 43 studies). Our review identified feature sets, ML algorithms, and optical sensors as the most frequently used factors. The relevance of feature sets and sensors can be explained by the range of input data to capture the temporal and spatial variability of pasture yields. The evaluation should be conducted in a way that can mitigate the overfitting of a learned prediction model. A model is said to overfit if it fits well to the training set but exhibits much lower performance on new observations. For instance, it might be possible that a model that has been trained on a rich set of sensor data collected from several fields in different seasons will perform much worse for a different field or in a future season. To address the overfitting problem, cross-validation is appropriate for situations in which the total number of observations is insufficiently large to divide them into training and test sets. Different types of cross-validation are available, and they have been adopted in several ways. With respect to k-fold CV, the number of folds ranged between 3 and 20, with no study providing a rationale for the number chosen. This deficit also holds for the number of iterations of a CV; iterations were present in seven studies, and they spanned from only 5 to 1000. Leave-one-out CV must be regarded as the weakest type of CV because it likely overstates the prediction performance for extremely small ratios of new observations, such as 1080:1 in one study (Sibanda et al., 2017). Almost three-fourths of the included studies assessed performance on a separate test set, instead of solely relying on cross-validation. Two studies stand out that trained models in one season (Togeiro de Alckmin et al., 2022) or two seasons (Murphy et al., 2022) to evaluate them in the subsequent season. Another study performed the evaluation on test data from a different field in the same season (de Oliveira et al., 2020). The size of the test set was most often stated explicitly in a table or text in the results section. For some articles, the size could be derived from a percentage value in relation to the entire data set. In seven other studies, the reporting in that respect was incomplete or inconsistent, but we could determine the number of observations through counting of dots shown in scatter plots. In a similar vein as for the training set, we recommend specifying the test procedure including the absolute and relative number of observations, any further data cleansing that led to the removal of observations, and the number of runs (if relevant). Regarding the reporting of performance metrics, our review provides three major findings that have implications for the interpretation of study results. The first finding is the relatively high adoption of the R2 (91%), followed by the RMSE (71%). Because R2 is a unitless metric, it can in principle help compare the performance of different models that predict the same type of pasture yield. Its interpretation is less dependent on the study context compared to the RMSE. The latter metric is more informative for farmers of the specific fields from which the observations had been collected and it can help assess how useful the prediction model is compared to current means of yield prediction. However, the RMSE cannot be used to compare models that have been trained on different observations. In other words, any claim about a proposed model that its RMSE would be smaller than that of a model proposed in previous research must be taken with great caution. In view of the duality of metrics that serve very different purposes, we contend that there is no reason not to report the R2 and RMSE. The second finding concerns the heterogeneity and ambiguity of the normalized RMSE. Given that the NRMSE was reported in more than half of the studies, this unitless metric might be used for comparing the results of similar studies. Unfortunately, we identified at least four different definitions, which render the comparison of results impossible. Only eleven studies reported the RMSE divided by the mean observed yield. This definition might be regarded as the ‘common’ meaning of the NRMSE, but seven studies provided no further details. This practice is questionable because readers might assume a definition that is different from the calculation done in the study. To make matters worse, the abstracts of 14 studies only indicated the NRMSE but not its exact definition. Moreover, different designations were used including NRMSE, nRMSE, relative RMSE (rRMSE), RRMSE, RMSE%, and RMSE with a percentage value. Taken together, our finding highlights the need for greater clarity in the reporting to avoid misinterpretations of the NRMSE. The third finding is the lack of consensus regarding the reporting of metrics to comprehensively describe prediction performance. The three most commonly used metrics (R2, RMSE, and NRMSE) were only reported in one-third of the studies. The frequencies of metrics such as MAE (10), Lin’s concordance correlation coefficient (2), Willmott’s d (2), and mean average percentage error (1) were negligible, although other literature has highlighted the usefulness of these supplementary metrics (Chai & Draxler, 2014; Willmott & Matsuura, 2005). Irrespective of the advantages and disadvantages of specific metrics, we recommend reporting a larger set of metrics, including but not limited to the R2, RMSE, and NRMSE. Because of the large heterogeneity in the reporting of metrics discussed above, our analysis of prediction performance by the types of optical sensors used was limited to the R2 metric reported for 41 prediction models from 36 studies. We found that the variability of R2 decreased for smaller distance from the pasture sward; thus, the largest variability was observed for models trained from satellite data and it decreased considerably for aerial sensors and in-field sensors. These results suggest that the higher spatial and temporal resolution of in-field imagery can make a difference in the training of effective models. Although the individual contribution of specific features to prediction performance can be determined using feature importance, this was the case in only 17 studies. All but two of these studies focused on features derived from spectral data. Therefore, there is yet little evidence for the roles of biotic versus abiotic features, including weather, site, and agronomic features. The results of previous studies using optical sensing do not inform us about the influence of such features on the accuracy of models. Opportunities exist to examine the supplementing roles of non-spectral features, especially of those features for which data collection is relatively easy or the data is already available from the farmers. Collectively, the results of our review also highlight challenges for prediction models to become less local and increasingly global. Especially the large differences of pastures regarding soil properties, weather conditions, and plant species make the development of generalizable prediction model challenging. The collection of data reflecting biotic and abiotic factors is not possible by remote sensing alone. To develop more globally applicable models, it is necessary to include data from complementary sources (e.g., weather stations, soil analysis, and farm management information systems). Limitations The results of this review should be understood in light of its limitations. The included studies varied greatly in the processing of input data and how prediction models were trained. Therefore, it was not possible to conduct in-depth comparisons of performance results, except for the types of optical sensors used. Another limitation of the review is due to the large heterogeneity of the reporting of performance metrics. This heterogeneity limited the number of studies for which performance results could be synthesized; this synthesis was only possible for the R2 but not for the NRMSE. Third, although our data collection involved three independent coders, all results presented in this review were bound to the information reported in the original studies (in a few cases, we contacted the authors to clarify the meaning of specific statements though). Conclusion This systematic review provides a comprehensive account of the application of ML for the prediction of pasture yield using optical sensor data. The results highlight the richness of techniques used for the collection and preprocessing of input data as well as the training and evaluation of prediction models. Our review also revealed some shortcomings in the assessment of prediction performance and the presentation of study designs and results. Specifically, we identified deficits in the reporting of feature sets and complete information on the training and test data, and a lack of consensus in the reporting of performance metrics. We suggest specific recommendations to enhance the uniformity and comparability of study results, which can then facilitate the integration of evidence on the role of specific ML techniques for accurate and reliable yield predictions of managed pastures. References Adão, T., Hruška, J., Pádua, L., Bessa, J., Peres, E., Morais, R., & Sousa, J. (2017). Hyperspectral imaging: A review on UAV-based sensors, data processing and applications for agriculture and forestry. Remote Sensing, 9(11), 1110. https://doi.org/10.3390/rs9111110. Article   Google Scholar   Ali, I., Cawkwell, F., Dwyer, E., & Green, S. (2017). Modeling managed grassland biomass estimation by using multitemporal remote sensing data—a machine learning approach. IEEE Journal of Selected Topics in Applied Earth Observations and Remote Sensing, 10(7), 3254–3264. https://doi.org/10.1109/JSTARS.2016.2561618. Article   Google Scholar   Askari, M. S., McCarthy, T., Magee, A., & Murphy, D. J. (2019). Evaluation of grass quality under different soil management scenarios using remote sensing techniques. Remote Sensing, 11(15), 1835. https://doi.org/10.3390/rs11151835. Article   Google Scholar   Baldocchi, D. D., Xu, L., & Kiang, N. (2004). How plant functional-type, weather, seasonal drought, and soil physical properties alter water and energy fluxes of an oak–grass savanna and an annual grassland. Agricultural and Forest Meteorology, 123(1–2), 13–39. https://doi.org/10.1016/j.agrformet.2003.11.006. Article   Google Scholar   Barnetson, J., Phinn, S., & Scarth, P. (2021). Climate-resilient grazing in the pastures of Queensland: An integrated remotely piloted aircraft system and satellite-based deep-learning method for estimating pasture yield. AgriEngineering, 3(3), 681–703. https://doi.org/10.3390/agriengineering3030044. Article   Google Scholar   Bazzo, C. O. G., Kamali, B., Hütt, C., Bareth, G., & Gaiser, T. (2023). A review of estimation methods for aboveground biomass in grasslands using UAV. Remote Sensing, 15(3), 639. https://doi.org/10.3390/rs15030639. Article   Google Scholar   Bishop, C. M. (2006). Pattern recognition and machine learning. Springer. Borra-Serrano, I., de Swaef, T., Muylle, H., Nuyttens, D., Vangeyte, J., Mertens, K., Saeys, W., Somers, B., Roldán-Ruiz, I., & Lootens, P. (2019). Canopy height measurements and non‐destructive biomass estimation of Lolium perenne swards using UAV imagery. Grass and Forage Science, 74(3), 356–369. https://doi.org/10.1111/gfs.12439. Article   Google Scholar   Bouwman, A. F., van der Hoek, K. W., Eickhout, B., & Soenario, I. (2005). Exploring changes in world ruminant production systems. Agricultural Systems, 84(2), 121–153. https://doi.org/10.1016/j.agsy.2004.05.006. Article   Google Scholar   Bretas, I. L., Valente, D. S. M., Silva, F. F., Chizzotti, M. L., Paulino, M. F., D’Áurea, A. P., Paciullo, D. S., Pedreira, B. C., & Chizzotti, F. H. M (2021). Prediction of aboveground biomass and dry-matter content in Brachiaria pastures by combining meteorological data and satellite imagery. Grass and Forage Science, 76(3), 340–352. https://doi.org/10.1111/gfs.12517. Article   Google Scholar   Buckley, C., Wall, D. P., Moran, B., O’Neill, S., & Murphy, P. N. C. (2016). Farm gate level nitrogen balance and use efficiency changes post implementation of the EU Nitrates Directive. Nutrient Cycling in Agroecosystems, 104(1), 1–13. https://doi.org/10.1007/s10705-015-9753-y. Article   CAS   Google Scholar   Chai, T., & Draxler, R. R. (2014). Root mean square error (RMSE) or mean absolute error (MAE)? – arguments against avoiding RMSE in the literature. Geoscientific Model Development, 7(3), 1247–1250. https://doi.org/10.5194/gmd-7-1247-2014. Article   Google Scholar   Chandrashekar, G., & Sahin, F. (2014). A survey on feature selection methods. Computers & Electrical Engineering, 40(1), 16–28. https://doi.org/10.1016/j.compeleceng.2013.11.024. Article   Google Scholar   Chen, Y., Guerschman, J., Shendryk, Y., Henry, D., & Harrison, M. T. (2021). Estimating pasture biomass using Sentinel-2 imagery and machine learning. Remote Sensing, 13(4), https://doi.org/10.3390/rs13040603. Chiarito, E., Cigna, F., Cuozzo, G., Fontanelli, G., Mejia Aguilar, A., Paloscia, S., Rossi, M., Santi, E., Tapete, D., & Notarnicola, C. (2021). Biomass retrieval based on genetic algorithm feature selection and support vector regression in Alpine grassland using ground-based hyperspectral and Sentinel-1 SAR data. European Journal of Remote Sensing, 54(1), 209–225. https://doi.org/10.1080/22797254.2021.1901063. Article   Google Scholar   Chong, I. G., & Jun, C. H. (2005). Performance of some variable selection methods when multicollinearity is present. Chemometrics and Intelligent Laboratory Systems, 78(1–2), 103–112. https://doi.org/10.1016/j.chemolab.2004.12.011. Article   CAS   Google Scholar   Da Silva, Y. F., Dos Reis, A., Sampaio Werner, A., Valadares, J. P. V., Campbell, R., Camargo Lamparelli, E. E. A., Magalhães, R., P. S. G., & Figueiredo, G. K. D. A (2022). Assessing the capability of MODIS to monitor mixed pastures with high-intensity grazing at a fine-scale. Geocarto International, 37(20), 6033–6051. https://doi.org/10.1080/10106049.2021.1926559. Article   Google Scholar   de Oliveira, R. A., Näsi, R., Niemeläinen, O., Nyholm, L., Alhonoja, K., Kaivosoja, J., Jauhiainen, L., Viljanen, N., Nezami, S., Markelin, L., Hakala, T., & Honkavaara, E. (2020). Machine learning estimators for the quantity and quality of grass swards used for silage production using drone-based imaging spectrometry and photogrammetry. Remote Sensing of Environment, 246, 111830. https://doi.org/10.1016/j.rse.2020.111830. Article   Google Scholar   de Oliveira, G. S., Marcato Junior, J., Polidoro, C., Osco, L. P., Siqueira, H., Rodrigues, L., Jank, L., Barrios, S., Valle, C., Simeão, R., Carromeu, C., Silveira, E., de Castro Jorge, A., Gonçalves, L., Santos, W., M., & Matsubara, E. (2021). Convolutional neural networks to estimate dry matter yield in a Guineagrass breeding program using UAV remote sensing. Sensors (Basel, Switzerland), 21(12), https://doi.org/10.3390/s21123971. De Rosa, D., Basso, B., Fasiolo, M., Friedl, J., Fulkerson, B., Grace, P. R., & Rowlings, D. W. (2021). Predicting pasture biomass using a statistical model and machine learning algorithm implemented with remotely sensed imagery. Computers and Electronics in Agriculture, 180, 105880. https://doi.org/10.1016/j.compag.2020.105880. Article   Google Scholar   Togeiro de Alckmin G., Kooistra, L., Rawnsley, R., & Lucieer, A. (2021). Comparing methods to estimate perennial ryegrass biomass: Canopy height and spectral vegetation indices. Precision Agriculture, 22(1), 205–225. https://doi.org/10.1007/s11119-020-09737-z. Togeiro de Alckmin G., Lucieer, A., Rawnsley, R., & Kooistra, L. (2022). Perennial ryegrass biomass retrieval through multispectral UAV data. Computers and Electronics in Agriculture, 193, 106574. https://doi.org/10.1016/j.compag.2021.106574. Donnison, I. S., & Fraser, M. D. (2016). Diversification and use of bioenergy to maintain future grasslands. Food and Energy Security, 5(2), 67–75. https://doi.org/10.1002/fes3.75. Article   PubMed   PubMed Central   Google Scholar   Dos Reis, A. A., Werner, J. P. S., Silva, B. C., Figueiredo, G. K. D. A., Antunes, J. F. G., Esquerdo, J. C. D. M., Coutinho, A. C., Lamparelli, R. A. C., Rocha, J. V., & Magalhães, P. S. G. (2020). Monitoring pasture aboveground biomass and canopy height in an integrated crop–livestock system using textural information from PlanetScope imagery. Remote Sensing, 12(16), 2534. https://doi.org/10.3390/RS12162534. Article   Google Scholar   Drucker, H., Burges, C. J. C., Kaufman, L., Smola, A., & Vapnik, V. (1996). Support Vector Regression Machines. In M. C. Mozer, M. Jordan, & T. Petsche (Eds.), Advances in neural information processing systems (Vol. 9). MIT Press. https://proceedings.neurips.cc/paper/1996/file/d38901788c533e8286cb6400b40b386d-Paper.pdf. Farmers Guide (2022). UK-wide weather station network provides data to aid agronomic decision making. https://www.farmersguide.co.uk/local-weather-data-aids-agronomic-decision-making/. Feng, L., Chen, S., Zhang, C., Zhang, Y., & He, Y. (2021). A comprehensive review on recent applications of unmanned aerial vehicle remote sensing with various sensors for high-throughput plant phenotyping. Computers and Electronics in Agriculture, 182, 106033. https://doi.org/10.1016/j.compag.2021.106033. Article   Google Scholar   Franceschini, M. H. D., Becker, R., Wichern, F., & Kooistra, L. (2022). Quantification of grassland biomass and nitrogen content through UAV hyperspectral imagery—active sample selection for model transfer. Drones, 6(3), 73. https://doi.org/10.3390/drones6030073. Article   Google Scholar   Freitas, R. G., Pereira, F. R., Reis, D., Magalhães, A. A., Figueiredo, P. S. G., D., G. K. A.,do, & Amaral, L. R. (2022). Estimating pasture aboveground biomass under an integrated crop-livestock system based on spectral and texture measures derived from UAV images. Computers and Electronics in Agriculture, 198, Article 107122. https://doi.org/10.1016/j.compag.2022.107122. Geipel, J., Bakken, A. K., Jørgensen, M., & Korsaeth, A. (2021). Forage yield and quality estimation by means of UAV and hyperspectral imaging. Precision Agriculture, 22(5), 1437–1463. https://doi.org/10.1007/s11119-021-09790-2. Article   CAS   Google Scholar   Grüner, E., Astor, T., & Wachendorf, M. (2019). Biomass prediction of heterogeneous temperate grasslands using an SfM approach based on UAV imaging. Agronomy, 9(2), 54. https://doi.org/10.3390/agronomy9020054. Article   Google Scholar   Grüner, E., Wachendorf, M., & Astor, T. (2020). The potential of UAV-borne spectral and textural information for predicting aboveground biomass and N fixation in legume-grass mixtures. PLOS ONE, 15(6), e0234703. https://doi.org/10.1371/journal.pone.0234703. Article   CAS   PubMed   PubMed Central   Google Scholar   Hamada, Y., Zumpf, C. R., Cacho, J. F., Lee, D., Lin, C. H., Boe, A., Heaton, E., Mitchell, R., & Negri, M. C. (2021). Remote sensing-based estimation of advanced perennial grass biomass yields for bioenergy. Land, 10(11), 1221. https://doi.org/10.3390/land10111221. Article   Google Scholar   Haralick, R. M., Shanmugam, K., & Dinstein, I. (1973). Textural features for image classification. IEEE Transactions on Systems, Man, and Cybernetics, SMC-3(6), 610–621. https://doi.org/10.1109/TSMC.1973.4309314. Hedley, C. (2015). The role of precision agriculture for improved nutrient management on farms. Journal of the Science of Food and Agriculture, 95(1), 12–19. https://doi.org/10.1002/jsfa.6734. Article   CAS   PubMed   Google Scholar   Henchion, M., Hayes, M., Mullen, A. M., Fenelon, M., & Tiwari, B. (2017). Future protein supply and demand: Strategies and factors influencing a sustainable equilibrium. Foods, 6(7), https://doi.org/10.3390/foods6070053. Ho, T. K. (1995). Random decision forests. In Proceedings of 3rd International Conference on Document Analysis and Recognition (ICDAR) (pp. 278–282). IEEE. https://doi.org/10.1109/ICDAR.1995.598994. Hopkins, A., & Del Prado, A. (2007). Implications of climate change for grassland in Europe: Impacts, adaptations and mitigation options: A review. Grass and Forage Science, 62(2), 118–126. https://doi.org/10.1111/j.1365-2494.2007.00575.x. Article   CAS   Google Scholar   Jaberalansar, Z., Tarkesh, M., & Bassiri, M. (2017). Soil moisture index improves models of forage production in central Iran. Archives of Agronomy and Soil Science, 63(12), 1763–1775. https://doi.org/10.1080/03650340.2017.1296138. Article   Google Scholar   Jackman, P., Lee, T., French, M., Sasikumar, J., O’Byrne, P., Berry, D., Lacey, A., & Ross, R. (2021). Predicting key grassland characteristics from hyperspectral data. AgriEngineering, 3(2), 313–322. https://doi.org/10.3390/agriengineering3020021. Article   Google Scholar   Jaffrés, J. B. (2019). GHCN-Daily: A treasure trove of climate data awaiting discovery. Computers & Geosciences, 122, 35–44. https://doi.org/10.1016/j.cageo.2018.07.003. Article   Google Scholar   Kallenbach, R. L. (2015). Describing the dynamic: Measuring and assessing the value of plants in the pasture. Crop Science, 55(6), 2531–2539. https://doi.org/10.2135/cropsci2015.01.0065. Article   CAS   Google Scholar   Karunaratne, S., Thomson, A., Morse-McNabb, E., Wijesingha, J., Stayches, D., Copland, A., & Jacobs, J. (2020). The fusion of spectral and structural datasets derived from an airborne multispectral sensor for estimation of pasture dry matter yield at paddock scale with time. Remote Sensing, 12(12), 2017. https://doi.org/10.3390/rs12122017. Article   Google Scholar   Kent Shannon, D., Clay, D. E., & Sudduth, K. A. (2018). An introduction to precision agriculture. In D. K. Shannon, D. E. Clay, & N. R. Kitchen (Eds.), Precision agriculture basics (pp. 1–12). John Wiley & Sons. https://doi.org/10.2134/precisionagbasics.2016.0084. Klaus, V. H., Kleinebecker, T., Prati, D., Gossner, M. M., Alt, F., Boch, S., Gockel, S., Hemp, A., Lange, M., Müller, J., Oelmann, Y., Pašalić, E., Renner, S. C., Socher, S. A., Türke, M., Weisser, W. W., Fischer, M., & Hölzel, N. (2013). Does organic grassland farming benefit plant and arthropod diversity at the expense of yield and soil fertility? Agriculture Ecosystems & Environment, 177, 1–9. https://doi.org/10.1016/j.agee.2013.05.019. Article   Google Scholar   Kuhn, M. (2008). Building predictive models in R using the caret package. Journal of Statistical Software, 28(5), https://doi.org/10.18637/jss.v028.i05. Lange, M., Habekost, M., Eisenhauer, N., Roscher, C., Bessler, H., Engels, C., Oelmann, Y., Scheu, S., Wilcke, W., Schulze, E. D., & Gleixner, G. (2014). Biotic and abiotic properties mediating plant diversity effects on soil microbial communities in an experimental grassland. PLOS ONE, 9(5), e96182. https://doi.org/10.1371/journal.pone.0096182. Article   CAS   PubMed   PubMed Central   Google Scholar   Li, K. Y., Burnside, N. G., Sampaio de Lima, R., Villoslada Peciña, M., Sepp, K., Yang, M. D., Raet, J., Vain, A., Selge, A., & Sepp, K. (2021). The application of an unmanned aerial system and machine learning techniques for red clover-grass mixture yield estimation under variety performance trials. Remote Sensing, 13(10), 1994. https://doi.org/10.3390/rs13101994. Liu, J., [Ji], Huang, J., Zhou, Y., Li, X., [Xuhong], Ji, S., Xiong, H., & Dou, D. (2022). From distributed machine learning to federated learning: A survey. Knowledge and Information Systems, 64(4), 885–917. https://doi.org/10.1007/s10115-022-01664-x. Article   Google Scholar   Lussem, U., Schellberg, J., & Bareth, G. (2020). Monitoring forage mass with low-cost UAV data: Case study at the Rengen Grassland Experiment. PFG – Journal of Photogrammetry Remote Sensing and Geoinformation Science, 88(5), 407–422. https://doi.org/10.1007/s41064-020-00117-w. Article   Google Scholar   Lussem, U., Bolten, A., Kleppert, I., Jasper, J., Gnyp, M. L., Schellberg, J., & Bareth, G. (2022). Herbage mass, N concentration, and N uptake of temperate grasslands can adequately be estimated from UAV-based image data using machine learning. Remote Sensing, 14(13), 3066. https://doi.org/10.3390/rs14133066. Article   Google Scholar   Lyu, X., Li, X., [Xiaobing], Dang, D., Dou, H., Wang, K., & Lou, A. (2022). Unmanned aerial vehicle (UAV) remote sensing in grassland ecosystem monitoring: A systematic review. Remote Sensing, 14(5), 1096. https://doi.org/10.3390/rs14051096. Article   Google Scholar   Moher, D., Liberati, A., Tetzlaff, J., & Altman, D. G. (2009). Preferred reporting items for systematic reviews and meta-analyses: The PRISMA statement. Annals of Internal Medicine, 151(4), 264–269. https://doi.org/10.7326/0003-4819-151-4-200908180-00135. Article   PubMed   Google Scholar   Mongeon, P., & Paul-Hus, A. (2016). The journal coverage of web of Science and Scopus: A comparative analysis. Scientometrics, 106(1), 213–228. https://doi.org/10.1007/s11192-015-1765-5. Article   Google Scholar   Morais, T. G., Teixeira, R. F., Figueiredo, M., & Domingos, T. (2021). The use of machine learning methods to estimate aboveground biomass of grasslands: A review. Ecological Indicators, 130, Article 108081. https://doi.org/10.1016/j.ecolind.2021.108081. Mundava, C., Schut, A. G. T., Helmholz, P., Stovold, R., Donald, G., & Lamb, D. W. (2015). A novel protocol for assessment of aboveground biomass in rangeland environments. The Rangeland Journal, 37(2), 157. https://doi.org/10.1071/RJ14072. Article   Google Scholar   Murphy, D. J., Murphy, M. D., O’Brien, B., & O’Donovan, M. (2021). A review of precision technologies for optimising pasture measurement on irish grassland. Agriculture, 11(7), 600. https://doi.org/10.3390/agriculture11070600. Article   Google Scholar   Murphy, D. J., O’ Brien, B., O’ Donovan, M., Condon, T., & Murphy, M. D. (2022). A near infrared spectroscopy calibration for the prediction of fresh grass quality on irish pastures. Information Processing in Agriculture, 9(2), 243–253. https://doi.org/10.1016/j.inpa.2021.04.012. Article   Google Scholar   Näsi, R., Viljanen, N., Kaivosoja, J., Alhonoja, K., Hakala, T., Markelin, L., & Honkavaara, E. (2018). Estimating biomass and nitrogen amount of barley and grass using UAV and aircraft based spectral and photogrammetric 3D features. Remote Sensing, 10(7), 1082. https://doi.org/10.3390/rs10071082. Article   Google Scholar   Nguyen, P. T., Shi, F., Wang, J., Badenhorst, P. E., Spangenberg, G. C., Smith, K. F., & Daetwyler, H. D. (2022). Within and combined season prediction models for perennial ryegrass biomass yield using ground- and air-based sensor data. Frontiers in Plant Science, 13, 950720. https://doi.org/10.3389/fpls.2022.950720. Article   PubMed   PubMed Central   Google Scholar   O’Mara, F. P. (2012). The role of grasslands in food security and climate change. Annals of Botany, 110(6), 1263–1270. https://doi.org/10.1093/aob/mcs209. Article   PubMed   PubMed Central   Google Scholar   Pereira, F. S., de Lima, J. P., Freitas, R. G., Reis, D., Amaral, A. A., Figueiredo, L., Lamparelli, G. K. D. A., R., & Magalhães, P. (2022). Nitrogen variability assessment of pasture fields under an integrated crop-livestock system using UAV, PlanetScope, and Sentinel-2 data. Computers and Electronics in Agriculture, 193, Article 106645. https://doi.org/10.1016/j.compag.2021.106645. Pranga, J., Borra-Serrano, I., Aper, J., de Swaef, T., an, Ghesquiere, Quataert, P., Roldán-Ruiz, I., Janssens, I. A., Ruysschaert, G., & Lootens, P. (2021). Improving accuracy of herbage yield predictions in perennial ryegrass with UAV-based structural and spectral data fusion and machine learning. Remote Sensing, 13(17), 3459. https://doi.org/10.3390/rs13173459. Raab, C., Riesch, F., Tonn, B., Barrett, B., Meißner, M., Balkenhol, N., & Isselstein, J. (2020). Target-oriented habitat and wildlife management: Estimating forage quantity and quality of semi‐natural grasslands with Sentinel‐1 and Sentinel‐2 data. Remote Sensing in Ecology and Conservation, 6(3), 381–398. https://doi.org/10.1002/rse2.149. Article   Google Scholar   Schucknecht, A., Seo, B., Krämer, A., Asam, S., Atzberger, C., & Kiese, R. (2022). Estimating dry biomass and plant nitrogen concentration in pre-alpine grasslands with low-cost UAS-borne multispectral data – a comparison of sensors, algorithms, and predictor sets. Biogeosciences, 19(10), 2699–2727. https://doi.org/10.5194/bg-19-2699-2022. Article   CAS   Google Scholar   Schulze-Brüninghoff, D., Wachendorf, M., & Astor, T. (2021). Remote sensing data fusion as a tool for biomass prediction in extensive grasslands invaded by L. polyphyllus. Remote Sensing in Ecology and Conservation, 7(2), 198–213. https://doi.org/10.1002/rse2.182. Article   Google Scholar   Schwieder, M., Buddeberg, M., Kowalski, K., Pfoch, K., Bartsch, J., Bach, H., Pickert, J., & Hostert, P. (2020). Estimating grassland parameters from Sentinel-2: A model comparison study. PFG – Journal of Photogrammetry Remote Sensing and Geoinformation Science, 88(5), 379–390. https://doi.org/10.1007/s41064-020-00120-1. Article   Google Scholar   Shmueli, G. (2010). To explain or to predict? Statistical Science, 25(3), https://doi.org/10.1214/10-STS330. Sibanda, M., Mutanga, O., Rouget, M., & Kumar, L. (2017). Estimating biomass of native grass grown under complex management treatments using WorldView-3 spectral derivatives. Remote Sensing, 9(1), 55. https://doi.org/10.3390/rs9010055. Article   Google Scholar   Singh, V. K., Singh, P., Karmakar, M., Leta, J., & Mayr, P. (2021). The journal coverage of web of Science, Scopus and Dimensions: A comparative analysis. Scientometrics, 126(6), 5113–5142. https://doi.org/10.1007/s11192-021-03948-5. Article   Google Scholar   Smit, H. J., Metzger, M. J., & Ewert, F. (2008). Spatial distribution of grassland productivity and land use in Europe. Agricultural Systems, 98(3), 208–219. https://doi.org/10.1016/j.agsy.2008.07.004. Article   Google Scholar   Sorkau, E., Boch, S., Boeddinghaus, R. S., Bonkowski, M., Fischer, M., Kandeler, E., Klaus, V. H., Kleinebecker, T., Marhan, S., Müller, J., Prati, D., Schöning, I., Schrumpf, M., Weinert, J., & Oelmann, Y. (2018). The role of soil chemical properties, land use and plant diversity for microbial phosphorus in forest and grassland soils. Journal of Plant Nutrition and Soil Science, 181(2), 185–197. https://doi.org/10.1002/jpln.201700082. Article   CAS   Google Scholar   Squires, V. R., Dengler, J., Feng, H., & Hua, L. (Eds.). (2018). Grasslands of the world: Diversity, management and conservation. CRC PRESS. https://www.taylorfrancis.com/books/9781315156125. Subhashree, S. N., Igathinathane, C., Akyuz, A., Borhan, M., Hendrickson, J., Archer, D., Liebig, M., Toledo, D., Sedivec, K., Kronberg, S., & Halvorson, J. (2023). Tools for predicting forage growth in rangelands and economic analyses—a systematic review. Agriculture, 13(2), 455. https://doi.org/10.3390/agriculture13020455. Article   Google Scholar   Sun, S., Zuo, Z., Yue, W., Morel, J., Parsons, D., Liu, J., [Jian], Peng, J., Cen, H., He, Y., Shi, J., Li, X., [Xiaolong], & Zhou, Z. (2022). Estimation of biomass and nutritive value of grass and clover mixtures by analyzing spectral and crop height data using chemometric methods. Computers and Electronics in Agriculture, 192, 106571. https://doi.org/10.1016/j.compag.2021.106571. Article   Google Scholar   Théau, J., Lauzier-Hudon, É., Aubé, L., & Devillers, N. (2021). Estimation of forage biomass and vegetation cover in grasslands using UAV imagery. PLOS ONE, 16(1), e0245784. https://doi.org/10.1371/journal.pone.0245784. Article   CAS   PubMed   PubMed Central   Google Scholar   Thelwall, M., & Sud, P. (2022). Scopus 1900–2020: Growth in articles, abstracts, countries, fields, and journals. Quantitative Science Studies, 3(1), 37–50. https://doi.org/10.1162/qss_a_00177. Article   Google Scholar   Thomson, A. L., Karunaratne, S. B., Copland, A., Stayches, D., McNabb, E. M., & Jacobs, J. (2020). Use of traditional, modern, and hybrid modelling approaches for in situ prediction of dry matter yield and nutritive characteristics of pasture using hyperspectral datasets. Animal Feed Science and Technology, 269, 114670. https://doi.org/10.1016/j.anifeedsci.2020.114670. Article   CAS   Google Scholar   Tripathi, A. D., Mishra, R., Maurya, K. K., Singh, R. B., & Wilson, D. W. (2018). Estimates for world population and global food availability for global health. In R. R. Watson, R. B. Singh, & T. Takahashi (Eds.), The role of functional food security in global health (pp. 3–24). Elsevier Science & Technology. https://doi.org/10.1016/B978-0-12-813148-0.00001-3. van der Merwe, D., Baldwin, C. E., & Boyer, W. (2020). An efficient method for estimating dormant season grass biomass in tallgrass prairie from ultra-high spatial resolution aerial imaging produced with small unmanned aircraft systems. International Journal of Wildland Fire, 29(8), 696. https://doi.org/10.1071/WF19026. Article   CAS   Google Scholar   Willmott, C. J., & Matsuura, K. (2005). Advantages of the mean absolute error (MAE) over the root mean square error (RMSE) in assessing average model performance. Climate Research, 30, 79–82. https://doi.org/10.3354/cr030079. Article   Google Scholar   Xue, J., & Su, B. (2017). Significant remote sensing vegetation indices: a review of developments and applications. Journal of Sensors, 2017, 1–17. https://doi.org/10.1155/2017/1353691. Yao, Z., Xin, Y., Yang, L., Zhao, L., & Ali, A. (2022). Precipitation and temperature regulate species diversity, plant coverage and aboveground biomass through opposing mechanisms in large-scale grasslands. Frontiers in Plant Science, 13, 999636. https://doi.org/10.3389/fpls.2022.999636. Article   PubMed   PubMed Central   Google Scholar   Zeng, L., & Chen, C. (2018). Using remote sensing to estimate forage biomass and nutrient contents at different growth stages. Biomass and Bioenergy, 115, 74–81. https://doi.org/10.1016/j.biombioe.2018.04.016. Article   CAS   Google Scholar   Zeng, L., Wardlow, B. D., Xiang, D., Hu, S., & Li, D. (2020). A review of vegetation phenological metrics extraction using time-series, multispectral satellite data. Remote Sensing of Environment, 237, 111511. https://doi.org/10.1016/j.rse.2019.111511. Article   Google Scholar   Zhao, Y., Liu, Z., & Wu, J. (2020). Grassland ecosystem services: A systematic review of research advances and future directions. Landscape Ecology, 35(4), 793–814. https://doi.org/10.1007/s10980-020-00980-3. Article   Google Scholar   Zhou, Z., Morel, J., Parsons, D., Kucheryavskiy, S. V., & Gustavsson, A. M. (2019). Estimation of yield and quality of legume and grass mixtures using partial least squares and support vector machine analysis of spectral data. Computers and Electronics in Agriculture, 162, 246–253. https://doi.org/10.1016/j.compag.2019.03.038. Article   Google Scholar   Download references Acknowledgements This work was supported by the Federal Ministry of Food and Agriculture [grant: 28DE106A22], Germany. Funding Open Access funding enabled and organized by Projekt DEAL. This work was supported by the Federal Ministry of Food and Agriculture [grant: 28DE106A22], Germany. Author information Authors and Affiliations Department of Fundamentals of Agricultural Engineering, University of Hohenheim, Garbenstr. 9, 70599, Stuttgart, Germany Christoph Stumpe Department of Information Systems 2, University of Hohenheim, Schwerzstr. 35, 70599, Stuttgart, Germany Joerg Leukel & Tobias Zimpel Contributions Christoph Stumpe: Conceptualization, Methodology, Investigation, Writing – Original Draft. Joerg Leukel: Methodology, Investigation, Writing – Original Draft. Tobias Zimpel: Methodology, Investigation, Writing – Review & Editing. Corresponding author Correspondence to Christoph Stumpe. Ethics declarations Conflict of interest The authors declare that they have no conflict of interest. Additional information Publisher’s Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Rights and permissions Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About this article Cite this article Stumpe, C., Leukel, J. & Zimpel, T. Prediction of pasture yield using machine learning-based optical sensing: a systematic review. Precision Agric 25, 430–459 (2024). https://doi.org/10.1007/s11119-023-10079-9 Download citation Accepted 14 September 2023 Published 28 September 2023 Issue Date February 2024 DOI https://doi.org/10.1007/s11119-023-10079-9 Share this article Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Keywords Biomass Feature selection Grassland Herbage Random forests Remote sensing Use our pre-submission checklist Avoid common mistakes on your manuscript. Sections Figures References Abstract Introduction Method Results Discussion Conclusion References Acknowledgements Funding Author information Ethics declarations Additional information Rights and permissions About this article Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

Paper 2:
- APA Citation: Dos Santos, R. P., Beko, M., & Leithardt, V. R. Q. (2023). Package Proposal for Data Pre-Processing for Machine Learning Applied to Precision Irrigation. In 2023 6th Conference on Cloud and Internet of Things (CIoT) (pp. 1-9). IEEE.
  Main Objective: To present a proposal for a data pre-processing package for meteorological stations and review the applications of Machine Learning (ML) in precision irrigation.
  Study Location: Unspecified
  Data Sources: Meteorological station data
  Technologies Used: Machine Learning (ML), Internet of Things (IoT)
  Key Findings: The paper proposes a data pre-processing package for meteorological stations and highlights the importance of data quality and the role of sensor calibration, drift correction, and fault detection in ensuring the accuracy and reliability of the data used in ML models for precision irrigation.
  Extract 1: To achieve the best possible results, data quality is of paramount importance. Sensor calibration, drift correction, and fault detection are critical techniques for ensuring data accuracy and reliability.
  Extract 2: The accuracy of the data collected from sensors is crucial for the effectiveness of ML models. Sensor calibration, drift correction, and fault detection are essential techniques for maintaining data quality and ensuring the reliability of the ML models used in precision irrigation.
  Limitations: The paper does not provide specific examples or case studies to illustrate how sensor calibration, drift correction, and fault detection techniques are applied in practice.
  Relevance Evaluation: The paper is highly relevant to our point of focus on sensor calibration, drift correction, and fault detection in ensuring data accuracy and reliability. It establishes the significance of data quality and provides a context for understanding how these techniques contribute to the overall integrity of the data used in ML models for precision irrigation.
  Relevance Score: 0.9
  Inline Citation: (Dos Santos et al., 2023)
  Explanation: The paper's main focus is on the application of Machine Learning (ML) and IoT to enhance precision irrigation. It highlights the potential of ML algorithms to analyze data from IoT devices and optimize irrigation systems based on various environmental and crop-specific factors. The paper also emphasizes the importance of data pre-processing to ensure data accuracy and reliability.

 Full Text: >
"This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2023 6th Conference on Cloud ... Package Proposal for Data Pre-Processing for Machine Learning Applied to Precision Irrigation Publisher: IEEE Cite This PDF Rogério Pereira Dos Santos; Marko Beko; Valderi R. Q. Leithardt All Authors 2 Cites in Papers 94 Full Text Views Abstract Document Sections I. Introduction II. Materials and Methods III. Results and Proposal Considerations and Future Work Authors Figures References Citations Keywords Metrics Abstract: The evolution of the Internet of Things (IoT) devices for precision agriculture is directly linked to the needs and interests of humanity. These advances include migration to cloud computing, data engineering, and the democratization of tools. These changes allow for better management, data quality, security, and scalability, reducing operational costs. The objective of this research was to present a proposal for a data pre-processing package for meteorological stations classified as conventional. Among the main findings of this research is the need for data pre-processing for Machine Learning applications focused on precision irrigation, controlled by IoT devices; the use of data from conventional weather stations for Machine Learning applications; the availability of applications developed in Open Source repositories, and the proposal of a data pre-processing package to help professionals from different areas. The systematic review examined the various machine-learning applications for precision irrigation. Different models and mechanisms used to apply Machine Learning in precision irrigation projects were identified. In addition, we look at the challenges faced when using Machine Learning for precision irrigation, including the lack of data, the need for efficient data pre-processing, and the need to tune the model to get the best possible result. At the end of the article, we propose a data pre-processing package for conventional meteorological stations. This package includes normalization, noise removal, and outliers to improve the reliability of the input data. Published in: 2023 6th Conference on Cloud and Internet of Things (CIoT) Date of Conference: 20-22 March 2023 Date Added to IEEE Xplore: 03 April 2023 ISBN Information: ISSN Information: DOI: 10.1109/CIoT57267.2023.10084899 Publisher: IEEE Conference Location: Lisbon, Portugal Funding Agency: SECTION I. Introduction We are currently going through what many call a perfect storm. We have large volumes of data generated worldwide, with wide variety and speed, which is precisely the definition of Big Data. We have algorithms capable of learning from data, processing power, and computational capacity. Machine Learning (ML) has existed for a few decades, as well as some of the statistical and mathematical techniques, but never in human history have we generated as much data as we are today [4]. We have never had as much computational capacity as we currently have, so we are experiencing a perfect storm. The Internet of Things (IoT) devices are at our disposal, with a lot of data being generated and excellent processing conditions [14]. Being able to extract information that we didn’t even imagine existed and being able to make correlations between this data makes us experience a true transformation. As these numbers increase and IoT technologies mature, the volume of published data will also increase [2]. Machine Learning is an applied science to extract information from data in an automated way and on a large scale; because of this, it is one of the rising fields of computer science, as it contributes to several different market segments. Due to the abundance of available data and the advent of ML to extract a large mass of data, it is possible to analyze this data through specific algorithms. ML algorithms are at the heart of the transformations we are experiencing. For this, there is an abundance of libraries, packages, and open-source software, that is, without costs for their use and study, so this scenario is an opportunity to contribute to the development and improvement of these tools [1]. The main component of an ML algorithm is a small piece of software that contains codes capable of preparing computers to do specific actions on their own. Creating a specific computer program and making it do something similar to what is done with an ML algorithm would demand a considerable amount of work, given the need to program each of the details of the process [5]. With ML, we can train an algorithm by presenting the data; depending on the data, the algorithm finds the patterns and then creates a piece of software exactly the predictive model. Then, new data are presented to this model, and it will be able to make the prediction; that is, if I had to build a program to make these predictions, we would have a lot of work and probably we would not get good results [7]. With ML, all this happens practically automatically, although there is work in pre-processing. Generally, data preprocessing boils down to extracting data from a given source and applying some process to convert this data; this is usually done with data engineering. In short, data engineering is a set of techniques and procedures for making data available in an appropriate and reliable format. This set of practices spans data engineering, mining, processing, acquisition, modeling, and management [3]. It is essential to understand that algorithms have different procedures when learning from data; therefore, before working with ML, we must define the best algorithm to work with according to the business problem to be analyzed. However, the ML theme is understood as a cycle that begins with data collection, analysis, and interpretation of information, enabling recommendations, application in the field, and better evaluation of results. Even so, new techniques can be applied; for example, we have the challenge of applications in Deep Learning (DL), which depends on the minimum of human interference in the presentation of data to the algorithm and is considered unsupervised learning [6]. A solution for building ML or DL models can be developed from scratch using a programming language or using a readymade framework where the main algorithms are already implemented. However, the large volume of information, especially with the characteristic of variety to be processed, has required new distributed and parallel computing solutions [5]. These combinations need to be integrated and pre-processed in order to be analyzed and evaluated, generating enough knowledge to support institutions, organizations, and farmers that make use of these technologies [3]. Today we have intelligent systems that use machine learning algorithms to control soil moisture, temperature, and water level in the context of precision agriculture. However, some algorithms, such as K-mean and SVM, have been facing overfitting problems and overcoming this problem, the KNearest Neighbor method has been indicated [10]. Machine learning has been shown to be accurate and consistent in training sets of completed projects. Among these learning techniques, the most used are neural networks, case-based reasoning, classification and regression trees, rule induction, genetic algorithms, and genetic programming, and their applications may vary according to the areas chosen for the training process of the algorithm [12]. The constant evolution of these technologies, whether implemented by hardware or software or combined, manage to achieve their goals and sustainability. But some solutions, despite contributing to the optimization of processes and tasks, still need stability and solidification, among other tools. In this sense, studies of machine learning algorithms can help in this process, which aims to predict the best practices in the management of water use in the field and control the large volume of data generated through wireless sensor networks [8]. Therefore, resorting to new technologies created and that have implemented machine learning resources tends to improve precision agriculture environments and becomes a trend on the world stage [9]. Given the context, this work exclusively investigated Machine Learning applications and solutions available to solve the real problems of precision irrigation applied by IoT devices. In order to understand the demands and the current scenario, searches were carried out in electronic databases in order to identify their characteristics and applications. Understand the hardware and software relationships, as well as highlight the techniques and modeling used and the programming languages used for development [13]. Finally, present the ML models and verify the forms of pre-processing developed to strengthen the given proposal of the pre-processing package in favor of organizing the structures of the data generated by conventional meteorological stations. Also, instigate debates on open source packages for the programming language used, mainly for areas such as precision irrigation, which demand a specific configuration for reading data from meteorological stations and IoT sensors and actuators. Therefore, the work was divided into four sections in addition to this introduction and final considerations. In this article, Section 2 presents the materials and methods used in this review: data sources, filtering procedures, sorting of collected data and mapping of works, and development of pre-processing data package. Section 3 presents the research results; the proposed data pre-processing package is delivered. Finally, Section 4 presents final considerations and future work. SECTION II. Materials and Methods This section presents the classification procedures that describe the steps of the systematic review of the literature related to the investigated theme. This systematic review addresses recent projects and limits itself to presenting only Machine Learning applications aimed at precision irrigation practices, excluding proprietary use licenses. Therefore, in sections A, B, C, D and E, the research structure is presented, where a search string is elaborated, thus allowing the identification of the most relevant scientific works. Up to the definitions of the filtering procedures, the criteria for inclusion and exclusion of the publications, and, finally, the indications of the proposal for the development of a package in Python for pre-processing data in conventional meteorological stations. A. Search Protocol In this subsection, a search protocol is presented, as well as the data sources in which the most relevant publications are to be found. From these publications, those that exclusively address Machine Learning technologies aimed at precision irrigation practices by IoT devices are sought. The research was carried out between January and November 2022. In this sense, the works were identified by a search string applied to electronic data sources. The search string is as follows: (’’ machine learning’’ applied to ‘’precision irrigation’’). The definition of electronic data sources are: Google Scholar: https://scholar.google.com GitHub: https://github.com GitHub’s searchable database is considered an open-source software repository, and Google Scholar is a free and accessible search engine that organizes a variety of scientific and scholarly publication formats. After defining the search string and the data sources to be searched, the key terms corresponding to each search source were also created. Key terms are defined joins within the search string and separated by quotes. Table I presents the databases, the respective search strings, and the number of results obtained. Some tweaks within the Search Strings column are also presented. In the Google academic database line, exclusion attributes are added, and in the GitHub database lines, the search string was defined and applied by topic, as shown. In the scenario of Table I, the exclusion criteria was adopted according to the filtering procedures. However, 114 works were found in the GitHub repository, and the distribution of the tools found by languages adopted in their development are considered and presented, as shown in Table II. In addition, it is essential to highlight that machine learning algorithms that meet the requirements of the proposal of this review work need to be identified in their repositories. In this sense, only its distribution by a programming language is presented through the quantification of these works. Most of the implementations of the languages found in the works happen with Arduino and raspberry pi, their respective sensors and controllers. Displays databases, search strings, and results found. TABLE I Databases, Strings and Results B. Filtering Procedures After defining the search string in their databases, it was necessary to create and define the filtering procedures according to the inclusion and exclusion criteria. Inclusion criteria: The provisions of the included topics were any, and all ML works focused on precision irrigation that addresses or consist of open-source ML applications, also respecting the following conditions: Papers published between the years 2017 to 2022; Works only in the English language; Complete ML and open source work duly made available in repositories such as GitHub or equivalent; Source code of the software or application found on GitHub that has been updated at least once in the last six years from the date of its publication; Exclusion Criteria: Two exclusion criteria were defined, namely: Applications not related to ML and precision irrigation; Books and Games publication. TABLE II Distribution of Resources Or Language Applied At Work This systematic review includes ML applications available in the GitHub repository or similar, preferably with an associated scientific C. Data Collection Table III presents the quantification of the works found in their respective electronic databases. Three hundred twentysix (326) articles were identified in Google Scholar, and 114 works were distributed in the GitHub repository, ending with the identification of 440 publications. The sorting of works takes place by applying the filtering criteria. In this sense, after the filtering criteria, 307 works from the Google Scholar database and 114 works from the GitHub databases were excluded, thus excluding 421 works. The works included are presented, of which 19 are from the Google database. Therefore, a new scenario is presented with 19 works corresponding to the proposal defined in the research objectives. TABLE III Research of Works Referring To the Years (2012 To 2022). After applying the filtering criteria, the 326 works found in Google Scholar are separated, and the topics of the abstracts and introduction are read. The intention was to filter the articles found that are related to the subject of Machine Learning and focused exclusively on precision irrigation solutions. It was also considered in the reading of the works the availability of the codes in the GitHub repository or similar. The 114 works found on GitHub are presented in table II. They will not be presented in table III, as they were not found in their repositories ML algorithm that can justify presentation and detail the work. D. Mapping of works The selected works were mapped and are detailed below; their reading can be done by indications such as: according to authors, title, models, techniques or library used, and a brief description of the work. Second [21], the work entitled: Field Deployment and Integration of Wireless Communication and Operation Support System for the Landscape Irrigation Runoff Mitigation System. Model, technique, or library used in the application: Scikit-learn and Regression. In this sense, a system was developed to support landscape irrigation in the quest to reduce runoff and water loss in the form of evaporation. The system aims to automate the precision irrigation process. It was designed based on the perception of multi-layer and implemented using a dedicated web server. The applied ML processes historical, environmental and temporal data and indicates the schedule of the best day to irrigate the researched crop. The author evaluates his research, but points out that more tests are needed to quantify water savings better. Second [22], the work entitled: A Smart Precision Irrigation and Monitoring System. Model, technique, or library used in the application: ML Azure. In this sense, a project of an irrigation system is presented here, with precision monitoring, involving technologies of the internet of things (IoT) and ML Azure. They were implemented using sensors to collect water level, temperature, and soil moisture data. Azure cloud services were used for real-time data analysis. The applications were made available in Web App and Mobile App format to provide the best support to the farmer. Facilitating the management and control of irrigation processes automatically. Second [23], the work entitled: Advancing IoT-based smart irrigation. Model, technique, or library used in the application: Regression. In this sense, this work resulted in a SWAMP platform being implemented with IoT-ML architecture. Allowing us to manage water in the irrigation process in a customizable way. From the connectivity between the data, the physical model, and the ML algorithm being unified in a single interface. The author considers the solution suitable for various soil, plant, and regional climate characteristics. However, it presents its results as research in progress and needs to present problems solved with the applied ML model. Second [24], the work entitled: Smart & green: An internet-of-things framework for intelligent irrigation. Model, technique, or library used in the application: Gradient Boosting. In this sense, in this work, the author proposes the use of a SmartGreen framework, which makes use of the functionalities of data monitoring, pre-processing, merging, synchronization, storage, and finally, performs the management of precision irrigation by predicting the soil moisture. According to the author, it is possible to reuse the codes for different sets or groups of crops, soils, and meteorological data sources. Therefore, the researched and applied ML techniques were used to solve the soil moisture prediction problem. Second [25], the work entitled: Soil Moisture and Rain Prediction Based Irrigation Controller for the Strawberry Farm of La Trinidad, Benguet. Model, technique, or library used in the application: Neural Network. In this sense, it was the development of a system that controlled the irrigation of the strawberry crop. Data is collected in real-time by soil moisture sensors and data from meteorological stations. The procedures used by automation controller systems have been shown to improve in the initial phase of crop growth and be effective in the water supply. According to the author, the ML model can be adopted for forecasting rainfall and automatic irrigation control. Second [26], the work entitled: IoT and machine learning approaches for automation of farm irrigation system. Model, technique, or library used in the application: SVM (Support Vector Machine) and SVR (Support Vector Regression. In this sense, the work presents an automated monitoring system for home gardens. The proposal was to present the models of ML Support Vector Machine (SVM) and Support Vector Regression (SVR). With quantitative bases of classification and prediction of the type of soil, culture, and amount of water required by the culture. This research was carried out in India. In addition to the tests applied by ML, the forms of connectivity by various types of IoT devices seek to ensure and improve the continuous flow of data and implemented activities. Second [27], the work entitled: Using machine learning methods to provision virtual sensors in sensor-cloud. Model, technique, or library used in the application: k-means. In this sense, this work seeks to explore the k-means algorithm to group the data of the physical sensors implemented with the sensing data collected. Before implementing the clustering algorithm, the linear regression method was applied to analyze the tendency of change of each physical sensor. In summary, the authors concluded that it was possible to use fewer physical sensors to provide the same services with better quality. The experimental results indicate that the approach was efficient and suitable for provisioning tasks with the indicated virtual sensors. Second [28], the work entitled: Implementation of precision soil and water conservation agriculture (PSWCA) through machine learning, cloud-enabled IoT integration, and wireless sensor network. Model, technique, or library used in the application: Decision tree, k-NN, SVM, and logistic regression. In this sense, a new methodology was presented in this work, allowing the integration of the Internet of Things (IoT) of wireless sensor networks with cloud applications. The proposal focuses on precision irrigation to improve soil conservation and accurate water application, applied through machine learning. Its operation happens with the data being captured in realtime and sent to the Raspberry Pi module. A machine learning algorithm was embedded in the Raspberry Pi module to predict the amount of water and fertilizer required by the plants and then released for punctual irrigation. According to the authors, it was observed that the ML technique used in the proposal reached the objectives and improved the amount of water and fertilizer applied compared with the traditional programmed and automatic irrigation. Second [29], the work entitled: Soil water content and actual evapotranspiration predictions using regression algorithms and remote sensing data. Model, technique, or library used in the application: Regression. In this sense, this work presents an ML model that can predict water management. Shapes are parameterized with vegetation indices, and regression algorithms are used to enable the management of precision irrigation to happen entirely remotely. For this, six regression algorithms were selected and compared with field data with the corn crop. The ML models were adjusted, and, according to the authors, the real potential of vegetation indices is demonstrated to provide information for the management of irrigated cultivation and reinforce the capacity of regression algorithms in this controlled environment of precision irrigation. Second [30], the work entitled: IoT-IIRS: Internet of Things based intelligent-irrigation recommendation system using machine learning approach for efficient water usage. Model, technique, or library used in the application: Scikit-learn regression tree, Classification, SVM. In this sense, an analysis system applied with ML was the primary building block proposed in this work. Sensors capture soil and environment data, are stored, and the regression tree algorithm is applied, making it possible to predict and contribute to precision irrigation. Past weather data is combined with real-time generated soil data and fed into the classification model. Then, the considered classifier system categorizes the data samples and verifies whether or not there is a need for irrigation at that time. According to the authors, in this way, the ML technique helps the farmer with the suggestion of precision irrigation for planting. The applied experimental results demonstrate that the SVM-based model outperforms other models in both datasets. Second [31], the work entitled: Comparison of Machine Learning Regression Models for Prediction of Soil Moisture with the use of Internet of Things Irrigation System Data. Model, technique, or library used in the application: Gradient Boosted Regression Tree (GBRT), Random Forest (RF), MLR, and Elastic Net Regression (ENR). In this sense, this work presents a prototype of a precision irrigation system based on IoT devices. Data were collected for half an hour a day, and for 55 days, they were stored in the cloud with the help of the ThingSpeak tool. Soil moisture values are estimated by applying different regression models, linear multiples, polynomials, support vectors, decision trees, and random regression applied to data collected by IoT devices. According to the authors, to examine whether the algorithms were successful, they were compared according to the coefficient of determination and the mean error criteria obtained. Finally, the random forest regression model was superior to other machine learning models for soil moisture estimation. The presented results also show that GBRT has outperformed the other tested methods. Second [32], the work entitled: An ai based irrigation and weather forecasting system utilizing lorawan and cloud computing technologies. Model, technique, or library used in the application: Wind Driven Optimization - Least Square Support Vector Machine. In this sense, this work presents an initial project of a precision irrigation system, which uses a ChirpStack open-source LoRaWAN network server and a processing, storage, management, and data integration structure as its leading technology. In order to predict the required irrigation using meteorological data. A new forecast model is also presented to predict the best climatic moments and suggest its application. According to the authors, the Wind Driven Optimization algorithm and Least Square Support Vector Machine were used in this experiment. The results are demonstrated and point out that the algorithm proposed in this research outperforms the Least Square Support Vector Machine algorithm currently widely used for weather forecasting, which can prove the effectiveness of the proposed algorithm. Second [33], the work entitled: Machine learning and soil humidity sensing: Signal strength approach. Model, technique, or library used in the application: SVR and Long Short-Term Memory (LSTM) neural network. In this sense, this work builds two ML models that are evaluated and compared, the SVR model and the LSTM model. Both models presented used the same data and were validated similarly. The main objective of building these models is the interpretation and accurate estimation of the relative humidity of the soil based on the intensity of the emitted or captured signal. The authors present the models and consider that they were used from 13,900 samples captured by two LoRaWAN Gateways and soil moisture data. They consider the application of the researched models to be favorable. Second [34], the work entitled: Modeling soil water content and reference evapotranspiration from climate data using the deep learning method. Model, technique, or library used in the application: CNC, LSTM, SVR. In this sense, a comparison research was developed between the ML models of Long Short-Term Memory (LSTM) to predict two pre-defined critical parameters of evapotranspiration. A Convolutional Neural Network (CNC) DL model overlays the LSTM model to investigate the performance of the CNC-LSTM model compared to the LSTM. Model performance is also compared against CNC and traditional machine learning algorithms such as Support Vector Regression (SVR) and Random Forest. The performance of the LSTM algorithm was also compared with the Random Forest, SVR, and CNN algorithms. According to the authors, the best performance of these algorithms was LSTM. The second-best performance was obtained with the CNC model. However, the RF model outperformed the SVR model among machine learning methods. Second [35], the work entitled: Modeling soil water content and reference evapotranspiration from climate data using the deep learning method. Model, technique, or library used in the application: LSTM. In this sense, a predictive system model is proposed in this work. It was developed for automatic precision irrigation programming using discrete actuators. An LSTM model was used to control soil, water, and atmosphere to evaluate and guarantee crop absorption. Thus minimizing water consumption and improving costs for precision irrigation. According to the authors, a heuristic method involving a sigmoid function was used, and a framework was also used to increase the computational efficiency of the scheduler. Second [36], the work entitled: IoT-Driven Model for Weather and Soil Conditions Based on Precision Irrigation Using Machine Learning. Model, technique, or library used in the application: Linear (LR) and non-linear K-nearest neighbor (KNN) logistic regression, classification and regression trees (CART), Gaussian naive Bayes (NB) and support vector machines (SVM)). In this sense, a system was proposed to predict the crop’s water requirement based on soil and climate conditions. Machine learning algorithms are applied, providing the ability to predict the need for precision irrigation. The data set from soil and climate conditions were captured by sensors and tested with six different machine-learning algorithms. Selected the best way to offer forecasts with greater efficiency for crop irrigation. According to the authors, the machine learning techniques used were linear logistic regression (LR) and non-linear K-nearest neighbor (KNN), classification and regression trees (CART), Gaussian naive Bayes (NB) and vector machines of support (SVM). In addition, they present the agricultural applications that are frequently applied with the SVM, K-nearest neighbor (KNN), and Gaussian naive Bayes (NB) algorithms and their results. Second [37], the work entitled: Water optimization technique for precision irrigation system using IoT and machine learning. Model, technique, or library used in the application: K-Nearest Neighbors (KNN), Gradient Boosting-based Tree (GBT), Long Short-Term Memory (LSTM). In this sense, the work proposes a hybrid precision irrigation system model. The same consists of K-Nearest Neighbors (KNN), Gradient Boosting-based Tree (GBT), and Long Short-Term Memory (LSTM) ML models, and their correlations are compared. The KNN model is implemented to gather information and detect the closest data. The GBT model was used to predict the actual values to be applied based on the observations of this research. Finally, the LSTM model was also used for time series forecasting in different forms of environmental observations. According to the authors, Spearman rank correlation was used to receive the values and correlate them with the real-time and applied time-series forecasts. Second [38], the work entitled: A Cloud Enabled Crop Recommendation Platform for Machine Learning-Driven Precision Farming. Model, technique, or library used in the application: K-Nearest Neighbors (KNN), Decision Tree (DT), Random Forest (RF), Extreme Gradient Boosting (XGBoost), and Support Vector Machine (SVM). In this sense, a new precision irrigation recommendation platform for crops, based on cloud ML, aims to help farmers to decide which times the crops need to be irrigated. In this sense, five predictive ML algorithms were compared - K-Nearest Neighbors (KNN), Decision Tree (DT), Random Forest (RF), Extreme Gradient Boosting (XGBoost), and Support Vector Machine (SVM). According to the authors, the ML algorithm was used to identify the best performers to build a recommendation platform. As a result, offer a cloud-based recommendation service to create a solution for precision agriculture. Second [39], the work entitled: Regional soil moisture prediction system based on Long Short-Term Memory network. Model, technique, or library used in the application: LSTM. Finally, a precision irrigation forecasting system was developed based on the climate and soil moisture dataset. Therefore, an open-source and meteorological dataset issued by the Copernicus Climate Change Service was used in this research. Data were captured daily on maximum and minimum air temperature, precipitation, and vapor pressure deficit. These data were used to feed the neural network model and predict soil moisture. A Short-Term Long Memory (LSTM) network model was designed and trained at scale, using data between 2011 and 2016. According to the authors, the LSTM model was compared with statistical forecasting techniques and a classic machine learning approach. Finally, [40] presents the results of a proposed low-cost irrigation monitoring system that can be an attractive solution for farmers, as they are easy to implement, do not require high acquisition or maintenance costs and can be accessible to users with low technical skills or with different levels of digital exclusion. E. Package Construction To build the package, the Python language was used with GitHub integration and available at the link https://github.com/rps-ifpr/station data, and Pypi, available at the link https://pypi.org/project/onestation The raw data from the conventional stations treated in this research are available on the Kaggle website at the link, https://www.kaggle.com/datasets/rogerioifpr/brazil-weatherconventional-stations-19612019, are meteorological data observed in conventional meteorological stations of the Institute Nacional de Meteorologia - INMET distributed in Brazilian territory from 1961 to 2019. The variables presented and treated in this research are Weather station code, Date, Time, Precipitation, Dry bulb temperature, Wet bulb temperature, Maximum temperature, Minimum temperature, Relative Humidity, Station Atmospheric Pressure, Atmospheric Pressure at Sea Level, Wind Direction, Wind Speed, Insolation, Cloudiness, Pitch Evaporation, Average Compensated Temperature, Average Relative Humidity and Average Wind Speed. SECTION III. Results and Proposal This section presents the results of works collected from the literature related to the subject of studies and a brief discussion about the ML works addressed in this work. The various applications and software found throughout this research are grouped as mentioned and presented in Tables II. Soon after, a proposal for a pre-processing package of data from meteorological stations will be presented to assist developers and those interested in applying ML for precision irrigation control by IoT devices. The proposal meets the needs of cleaning data in a complete and quality way for ML or DL models. Table II represents the works found in the GitHub repository that were not related to ML, only as irrigation solutions applied by software. The control of automation and IoT devices is mentioned in almost all works. But, it is essential to consider that the Python language has its prominence together with the C++ language, considering that most of the results are carried out by Arduino devices. In the survey, as presented in sub section 2 (D), it is observed that the repositories link was not given. Because 100% of the works researched in the total of 19 found do not have their open code or the source available in any repository, another consideration is that among the researched works, 95% need to clarify the code used in the construction but only apply the mathematical model. Making access difficult for developers and collaborators who could be improving or continuing the project. Also limited is the access of farmers who could have greater access to an application as a final product. Of the works raised, there are some particularities to be reported. It is considered that 30% of the results do not present the type of culture used in the application testing process, so it was decided to remove this topic from subsection 2(D). We also did not find ML prediction models applied in conjunction with data generated by IoT devices in real-time in 100 percent of the papers. As analyzed in this research, the works present their results but need to demonstrate how the data pre-processing was carried out at the beginning of the process. Implementing an ML algorithm to make predictions is possible even with improper data treatment. There is a glamor to the works presented, but it is essential to understand and maintain the data with adequate quality. Therefore, it needs to be clarified how the pre-processing of these data is carried out, it is also observed that the indications of the databases applied in their research are also found, and several non-conformities of the links indicated in their works were also found. In this sense, in the next section, we present a proposal for a library or data pre-processing package for conventional meteorological stations. A. Package Proposal Considering the growing trend of irrigation applications applied with current languages and IoT devices generating real-time data, this section will present a proposal for a pre-processing data package to assist developers and those interested in the application of ML aimed at precision irrigation and which makes use of data generated by conventional meteorological stations. Fig. 1. Onestation - Proposal model for pre-processing data package for conventional meteorological stations. Show All An implementation called one station to assist in preprocessing data generated by conventional weather stations for Machine Learning applied to precision irrigation. The pre-processing package facilitates data cleaning and transformation, as shown in (Fig.1). The data is collected and transmitted to the database. The package performs the cleaning and transformation of these data, preparing them for use in ML, which can be used for analysis and modeling aimed at precision irrigation. A basic object-oriented design with separate classes for data cleaning and additional class structure documentation is contained in the source files as presented in the source code available at https://github.com/rps-ifpr/station data and on Pypi at https://pypi.org/project/onestation. Data from the conventional stations used in this research are available at https://www.kaggle.com/datasets/rogerioifpr/brazil-weatherconventional-stations-19612019. Considerations and Future Work In this article, a systematic review of the literature on Machine Learning (ML) applications, preferably open source, aimed at precision irrigation practices applied by IoT devices, was carried out. Followed by a proposal for a pre-processing package of data from conventional meteorological stations for developers and professionals looking for ML applications aimed at precision irrigation. In this sense, works were selected, mapped, and presented that contribute to understanding applications and ML models for precision irrigation supported by IoT devices. Seeking to understand the data cleaning and treatment forms and the indications of the databases (datasets) used in developing the presented applications. To achieve the best understanding of this research, the mapping and detailing of the selected works were carried out according to subsection 2(D) of this research. This research study advances the understanding of ML applications aimed at precision irrigation and IoT devices. It is possible to conclude with the analysis of this study that most open-source ML algorithms are still under construction. The practices adopted by the authors were presented, pointing to the need to expand open-source ML applications and their advantages, thus improving the quality of production of ML applications aimed at precision irrigation, thus avoiding damage to water resources in agriculture. None of the applications presented their source code and were made available in repositories by the researched authors. All results were included in the research work itself. Future ML applications are expected to be open source and available in public repositories, such as GitHub or similar, enabling testing and improvements by the entire community involved. It is believed in the quality of software and open-source products aimed at precision irrigation, integrating real-time data generated by IoT devices. Finally, a proposal for a preprocessing package of data from conventional meteorological stations was presented. The package development results were presented; however, tests for the conclusions of this work still need to be completed. As an indication of future work, it is intended to test the developed package with data from automatic stations and integrate data generated by IoT devices. Improve data integration and communication between different IoT devices. Moreover, finally, understand how the presented package behaves in different ML or DL application models presenting real-time prediction. ACKNOWLEDGMENTS This work was supported by National Funds through the Fundação para a Ciência e a Tecnologia, I.P. (Portuguese Foundation for Science and Technology) by the Project “VALORIZA-Research Center for Endogenous Resource Valorization” under Grant UIDB/05064/2020. This research was partially funded by Fundação para a Ciência e a Tecnologia under Project UIDB/04111/2020. Authors Figures References Citations Keywords Metrics More Like This Internet of Things and Machine Learning based Intelligent Irrigation System for Agriculture 2022 5th International Conference on Contemporary Computing and Informatics (IC3I) Published: 2022 Automatic Medication Dispensing System using Machine Learning, Internet of Things and Cloud Computing 2022 International Conference on Disruptive Technologies for Multi-Disciplinary Research and Applications (CENTCON) Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."

Paper 3:
- APA Citation: Sharma, G., Singh, A., & Jain, S. (2022). DeepEvap: Deep reinforcement learning based ensemble approach for estimating reference evapotranspiration. Applied Soft Computing, 125, 109113.
  Main Objective: To develop a novel DRL-based ensemble learning approach for estimating reference evapotranspiration that can improve prediction accuracy and handle data-scarce situations.
  Study Location: Ludhiana and Patiala, India
  Data Sources: 1. Meteorological data from India Meteorological Department (IMD)
2. Crop evapotranspiration data from literature
  Technologies Used: 1. Deep neural networks (CNN-LSTM, Conv-LSTM, CNN-XGB, and CNN-SVR)
2. Deep reinforcement learning (DRL)
3. Ensemble learning
  Key Findings: 1. The proposed DRL-based ensemble approach, DeepEvap, outperforms existing ensemble techniques and baseline models in terms of prediction accuracy.
2. DeepEvap can efficiently integrate different deep neural network models to improve the prediction accuracy of individual models.
3. Dynamic selection of models based on input characteristics using DRL enhances the adaptability of the proposed approach to varying environmental conditions.
  Extract 1: "In this study, a dynamic ensemble learning approach based on deep reinforcement learning (DRL) is proposed for estimating reference evapotranspiration. The proposed approach, named DeepEvap, integrates four deep neural network models as baseline models and uses a DRL agent to dynamically select the best model for each specific input to predict . The novelties and contribution of this study are mentioned below:
- A DRL based ensemble learning approach, DeepEvap is proposed for reference evapotranspiration estimation: An attempt is made to incorporate time varying characteristics of inputs by dynamically selecting models and to remove the static nature of ensemble techniques.
- Use of limited input dataset to handle data-scarce situations: The conducted study also handles the data scarce situation and train the baseline models on the limited available datasets to efficiently estimate the process.
  Extract 2: - Comparison of existing stack-based ensemble and weighted average ensemble technique with proposed ensemble technique: DRL approach can become more intelligent via iterations and also can work in unknown dynamic environment of future climate data unlike stacked and weighted average ensemble approaches that use only historical data to predict the outcomes. The performance of the proposed DRL based ensemble technique is compared to the existing ensemble techniques: stack-based and weighted average based ensemble techniques to validate the proposed approach."
  Limitations: 1. The proposed approach requires a relatively large amount of training data to train the baseline models and the DRL agent. This may limit its applicability in situations where data is scarce.
2. The DRL agent may not be able to generalize well to new or unseen data, especially if the data distribution changes significantly.
3. The proposed approach is computationally expensive, especially during the training phase. This may limit its applicability in real-time or near-real-time applications.
  Relevance Evaluation: The paper is highly relevant to the point in question as it proposes a novel approach for estimating reference evapotranspiration using deep reinforcement learning and ensemble learning techniques. The approach combines the strengths of individual deep neural network models and the dynamic decision-making capabilities of DRL to improve prediction accuracy. The results demonstrate that the proposed approach outperforms existing ensemble techniques and baseline models in terms of accuracy and efficiency.
  Relevance Score: 0.9
  Inline Citation: (Sharma, Singh, & Jain, 2022)
  Explanation: In this study, the authors propose a novel deep reinforcement learning (DRL) based ensemble learning approach called DeepEvap to estimate reference evapotranspiration ( ), a key variable in water management. The proposed approach employs four deep neural network models (CNN-LSTM, Conv-LSTM, CNN-XGB, and CNN-SVR) as baseline models and uses a DRL agent to dynamically select the best model for each specific input to predict . The main objective of this study is to examine the potential of the proposed DRL-based ensemble model in improving the prediction accuracy of compared to existing ensemble techniques and baseline models.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Background 3. Problem formulation 4. Methodology 5. Experimental area and data description 6. Evaluation of model parameter 7. Results & discussion 8. Conclusion and future work CRediT authorship contribution statement Declaration of Competing Interest Acknowledgments References Show full outline Cited by (13) Figures (15) Show 9 more figures Tables (9) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Applied Soft Computing Volume 125, August 2022, 109113 DeepEvap: Deep reinforcement learning based ensemble approach for estimating reference evapotranspiration Author links open overlay panel Gitika Sharma, Ashima Singh, Sushma Jain Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.asoc.2022.109113 Get rights and content Highlights • A DRL based approach, DeepEvap is proposed for daily prediction. • Daily prediction with limited climate data in data scarce conditions. • Diebold-Mariano Test is used to evaluate DeepEvap approach. • DeepEvap may assist agricultural practitioners for predicting crop evapotranspiration. Abstract Precision agriculture aims to increase crop yield by employing an efficient resource management scheme, such as estimating irrigation requirements. Reference evapotranspiration ( ), defined as the process of water loss from the soil and reference plant, is one of the indispensable components on which crop irrigation requirement depends. It is mainly calculated by using empirical models. However, these models require a large climate dataset that is sometimes unavailable in data-scarce regions. The present study focuses on the estimation of values by using three climate parameters as input variables i.e., minimum temperature ( ), maximum temperature ( ), and solar radiation ( ). Moreover, to consider the effect of time-varying characteristics of the process, deep reinforcement learning (DRL) based ensemble approach, DeepEvap, is introduced to estimate values. The whole modeling procedure of the proposed ensemble model incorporates three phases. In phase I, the data preprocessing technique is performed on the meteorological data to clean the existing impurities as it affects the performance of any machine learning (ML) based approach. In phase II, four different deep neural network-based models are used to build the estimation model of and calculate the prediction results. In phase III, the DRL approach is used to ensemble the prediction results of these four models. The meteorological dataset of two stations of India: Ludhiana and Patiala, is selected to validate the proposed approach. The results of the conducted study depict that: (a) The proposed DeepEvap approach is competitive for prediction by achieving a coefficient of determination ( ) = 0.96. It significantly outperforms four baseline models; (b) The proposed technique also integrates four deep neural network models and works better than existing ensemble approaches. Previous article in issue Next article in issue Keywords Reference evapotranspirationLimited climate dataDeep reinforcement learningDeep neural networkEnsemble learning 1. Introduction Water policy is among the most critical worldwide concerns that aim to regulate water consumption and determine the best strategies to avoid exploiting and squandering existing freshwater resources. India is a water-scarce country that is further exacerbated by the detrimental effects of climate change and a massive waste of water due to inadequate management and flawed pricing policies. Indian population covers 18% of the world’s population with 4% of total freshwater available globally and out of which 80% is consumed for agricultural purposes. Thus, water management in agriculture is always encouraged to meet the growing demand for food [1]. However, despite growing water scarcity, irrigation practice is still very inefficient in India. Therefore, it is necessary to design and implement irrigation practices to reduce the amount of irrigation water while sustaining or improving yield production. Agriculturists or irrigation engineers need to know the specific crop water requirement to obtain satisfactory crop yield, so that the right amount of irrigation water can be provided to avoid over or under irrigation [2]. Evapotranspiration (ET) is a significant factor that is used to determine the crop water requirement. It is the combined process of evaporation (water loss from the soil) and transpiration (water loss from plant stomata) that is influenced by climatic variables, crop traits, management techniques, and other environmental factors [3]. The necessity to study and understand evapotranspiration phenomena inspired the need to explore another comprehensive term known as reference evapotranspiration. Reference evapotranspiration is the amount of water evaporated from a reference surface, and it was proposed to measure atmospheric evaporative demand, irrespective of crop growth factors and management techniques [4], [5]. The process of reference evapotranspiration is represented in Fig. 1. could simply be combined with crop coefficient of a particular crop to compute the value at any growth stage using following equation [6]. (1) Download : Download high-res image (292KB) Download : Download full-size image Fig. 1. Reference evapotranspiration . is a crucial part of the hydrological cycle and plays vital role in the sustainable water resource management [7], [8], [9]. The accurate estimation of evapotranspiration is a prerequisite for irrigation scheduling as well as for hydrological, climatological, and ecological research studies [10]. The quantification of process can be performed using direct methods such as methods based on vapor transfer (e.g., Bowen ratio and eddy covariance) or using water balance measurement technique (e.g., Lysimeters) [11]. Although these methods provide accurate estimation, their use is restricted due to technical complexities, expensive instrumentation, and laborious working process. The indirect method for calculation of involves empirical models based on meteorological data, which are considered as more appropriate approaches for real-life applications due to their various advantages over direct methods such as shorter time, lower cost, and easiness to use [12]. There are many existing empirical models that can be classified as mass transfer-based, radiation-based, temperature-based, and pan-evaporation-based [10]. However, their performance varies with the change in environmental conditions. Food Agriculture and Organization (FAO) has recommended FAO-56 Penman-Monteith (PM) as a reliable method to estimate that has been proved to provide consistent performance in different climate regions [13], [14], [15]. This method is accepted worldwide and used by agronomists, researchers, and irrigation engineers as a standard method for calculation. The main limitation that exists with the use of the FAO-56 PM equation is the extensive meteorological data required for the estimation of that is not always available for all locations, especially in developing countries like India [16]. Therefore, the development of a reliable, robust, and intelligent approach is required for estimating values using fewer meteorological datasets. The past few decades have experienced the development of various artificial intelligence (AI) based techniques to model, predict and optimize the process. These AI based techniques mainly include artificial neural network (ANN) based models e.g., multi-layer perceptron (MLP), radial basis function neural networks (RBF) and generalized regression neural networks (GRNN) [12], [17], [18], [19], [20], [21], genetic programming based models (GP) [22], [23], [24], [25], [26], tree based models e.g., random forest (RF) and M5 model tree (M5Tree) [21], [27], [28], [29], [30], kernal based models e.g., support vector machine (SVM) and least-squares support vector machine (LSSVM) [31], [32], [33], [34], [35] and other AI models such as multivariate adaptive regression splines (MARS) [33], [36], adaptive neuro-fuzzy inference system (ANFIS) [37], [38]. Although these AI-based techniques may provide reliable results, the main concern is that for a particular problem, different models produce different outputs [39], [40]. Ensemble learning is a technique that deals with other models to solve a specific problem [41]. It has been observed that an ensemble of different models results in improved forecasting accuracy and low error variance as compared to individual models [42], [43] and hence effective in real-world scenarios [44], [45]. However, as per the authors’ knowledge, very few works have been reported in the literature to model process using the ensemble learning technique. Weighted average based and stack-based ensembles are two prominent ensemble learning techniques [46]. Stack ensemble technique considers baseline models’s output as input features for another high-level model and trains it to generate the final output [40], [47]. The weighted average based ensemble approach calculates and combines the contribution weights of each baseline model to the final output by minimizing the mean square error (MSE) of ensemble outputs. However, these ensemble learning techniques suffer certain limitations. For example, stack-based ensemble technique is time-consuming, expensive to deploy, and does not perform better as compared to the best individual baseline model in some situations [48]. Also, in the weighted ensemble technique, the baseline models’s contribution weights remain the same and do not take into account the time-varying features of the input dataset (e.g., climate dataset). Therefore, to overcome the stated limitations, this study proposes a novel ensemble technique based on the concept of DRL. It uses hybrid deep learning models as baseline models and agents of deep-Q-network (DQN) ensemble these models to ensure effective estimation of values. The novelties and contribution of this study are mentioned below: • A DRL based ensemble learning approach, DeepEvap is proposed for reference evapotranspiration estimation: An attempt is made to incorporate time varying characteristics of inputs by dynamically selecting models and to remove the static nature of ensemble techniques. Here, in DeepEvap approach, the DQN agent of DRL is trained to dynamically select the baseline model to predict the value for each specific input. These baseline models are based on convolution neural network (CNN) as follows: Convolution neural network-Long short term memory (CNN-LSTM), Convolution-Long Short Term Memory (Conv-LSTM), Convolution neural network-eXtreme Gradient Boosting (CNN-XGB), Convolution neural network-Support Vector Regression (CNN-SVR). • Use of limited input dataset to handle data-scarce situations: The conducted study also handles the data scarce situation and train the baseline models on the limited available datasets to efficiently estimate the process. , , and are proved to be prime data inputs for modeling and are easily available. Therefore, these parameters are provided as input to baseline models. • Comparison of existing stack-based ensemble and weighted average ensemble technique with proposed ensemble technique: DRL approach can become more intelligent via iterations and also can work in unknown dynamic environment of future climate data unlike stacked and weighted average ensemble approaches that use only historical data to predict the outcomes. The performance of the proposed DRL based ensemble technique is compared to the existing ensemble techniques: stack-based and weighted average based ensemble techniques to validate the proposed approach. Download : Download high-res image (276KB) Download : Download full-size image Fig. 2. Reinforcement learning. 2. Background DRL integrates a neural network with a reinforcement learning framework to help agents reach their targets. This learning technique is gaining popularity in many fields, especially dynamic decision-making systems. This technique is used to ensemble DL models to estimate values in the present study. This section presents the underlying theory to understand the proposed solution better. In particular, the overview of reinforcement learning is provided in Section 2.1, the introduction of Q learning is given in Section 2.2, and an illustration of Deep Q Network is presented in Section 2.3. 2.1. Reinforcement learning Reinforcement Learning (RL) is a paradigm of Machine Learning (ML) and works on the principle of dynamic programming that builds and trains algorithms using a reward and punishment strategy. It is different from other ML paradigms, so there is no need to provide an explicit recommendation to execute the task; instead, it solves the problem on its own. There exists set of states , set of actions , and reward in RL environment. The agent interacts with an environment and at time , perform an action , and move from state to a new state with some defined reward . The next action of the agent for the specific state is defined by policy function , which maps states and actions. The agent receives a reward for right actions and punishment for wrong actions. The main objective of RL is to identify the optimized policy that maximizes the discounted rewards by minimizing the punishment so that agent can take corrective action in the future for a particular state [49]. Mathematically, this process is formulated as Markov Decision Process (MDP) and represented as: (2) Here, is transition probability that can be described as the probability of state that move from one state to another state by taking an action . The value function for each state and action pair is the expected scalar reward in given state if agent performs an action , by following policy , and is mathematically represented as follows: (3) Here is reward function that defines the goals to be achieved by the agent. The optimal value function derived using the optimal policy provides the maximum reward achieved from all states by obeying the Bellman equation. This is given as follows. (4) The graphical representation of the reinforcement learning process is shown in Fig. 2. 2.2. Q learning Q-Learning is a value-based, model-free Reinforcement Learning algorithm that evaluates the quality of the action to be performed by agent-based on action-value function. It determines the value of being in a particular state and performing a particular action in that state. The basic Q learning version maintains a q-table containing values for each state–action pair. The two inputs: current state (s) and action (a), are provided to the Q function, and it returns reward as an output for that state–action pair. This Q value function satisfy Bellman equation and is represented as MDP as follows: (5) Here, is a discount factor that denotes the importance of future rewards compared to current rewards and ranges between 0 and 1. A discount factor of 0 means that the system prioritizes the current reward, whereas a value of 1 means that the system prioritizes future rewards. Initially, this function returns random fixed values before analyzing the environment. Afterward, with further analysis, the Q function provides a more accurate estimate of the value function for the action in the state . The Q function is constantly updating to provide the optimal value. The optimized policy can easily be obtained after obtaining the optimum Q value for each state–action pair, corresponding to the maximum value. This directs the agent on the optimum course of action to take in a particular condition . 2.3. Deep Q Network DQN is a reinforcement learning technique that combines deep neural networks and Q-Learning to enable RL to operate in complicated, high-dimensional, and dynamic environments [50]. The concept was first introduced to remove the shortcoming of Q learning, such as the curse of dimensionality caused by increased memory size for storing Q-table of a huge set of state–action and unrealistic amount of time required for exploring a large number of states to create Q-table [51]. It also removes the possibilities of overestimation due to the max operator present in the Q learning algorithms by using a neural network to approximate the Q value function [52]. DQN uses two strategies, namely, replay memory [53] and target network. In replay memory, the experience of the last time steps is collected using greedy policy and stored in memory with size . The primary objective of replay memory is to apply a set of experiences called a mini-batch to train neural networks that are selected randomly from replay memory to approximate the Q function. In target network the Q function is replaced by ,where represents parameters of network. This parameter is only updated after iterations to minimize the possibility of divergence as target value is kept constant for iterations. The target value can be given as follows: (6) The Loss is calculated using squared difference between the target and updated Q value and represented in Eq. (7). The Stochastic Gradient descent (SGD) is used to minimize the loss. (7) The value is updated by minimizing the mean square error in Bellman equation using Eq. (8) (8) where is the learning rate. 3. Problem formulation The process of prediction can be formulated as a mixed-integer nonlinear programming problem (MINLP) which consists of input data (climate parameters), a set of constraints followed by an objective function to predict the values. The input training data can be formulated as a tuple: , where , , and are the daily average minimum and maximum temperature and solar radiation. In any prediction problem, the actual observed value can be represented as: (9) where is the observed value, denotes the real value of true predicted function and is noise. In this study, Deep Learning (DL) models are used as prediction models that try to find the function closer to the true function . The main aim of the prediction model is to minimize the distance of predicted and actual values to reduce errors. The mean square error is the expected value of the square difference of predicted value from its true value . It can be mathematically represented as: (10) This MSE can be further decomposed to the sum of bias and variance present in the predicted function. Bias is defined as the difference between the expected value of to the true predicted function . The bias can be represented as: (11) Variance is calculated as average square deviation of from its expected value and mathematically represented as follows: (12) Now, MSE can be rewritten as sum of bias, variance and non-reducible error . (13) Because of the bias–variance issue, it is logical to balance bias and variance as optimization goals. Thus, the objective function for the stated problem can be formulated as: (14) The core of ensemble learning is to minimize bias and variance. Thus ensemble approach has been adopted to minimize the objective function. Four hybrid DL models, such as CNN-LSTM, Conv-LSTM, CNN-XGB, and CNN-SVR, act as the baseline models for the ensemble approach. 4. Methodology The framework of the methodology used to conduct the study is shown in Fig. 3. It includes three parts: prediction of by baseline models, ensembling baseline models using DRL, and prediction of the final output. This section elaborates on the proposed DRL-based ensemble prediction model. The Section 4.1 introduces the baseline models used to the predict values. The prediction of these models serves ensemble learning. In Section 4.2, the proposed Ensemble Approach using the DQN algorithm is discussed in detail. 4.1. Baseline prediction models The selection of baseline models for the ensemble approach is critical. In the conducted study, ten AI regression algorithms and their hybrid versions with Convolution Neural Network (CNN) is explored. These algorithms belong to a different paradigm and have been proved effective in the context of modeling the evapotranspiration process, and regression problems in past studies. These algorithms are: Support Vector Regressor (SVR), eXtreme Gradient Boosting (XGBoost), Random Forest (RF), Artificial Neural network (ANN), Long Short-term memory (LSTM), CNN, CNN-LSTM, CNN-XGB, CNN-SVR, and CNN-RF. These algorithms are applied on the dataset used in the study and ranked in order of their performance as shown in Table 1. Among these algorithms, we have opted top 4 algorithms for ensemble techniques that provides higher performance than other models. Download : Download high-res image (1MB) Download : Download full-size image Fig. 3. Framework of proposed approach. Thus, the study uses four hybrid deep neural network models (CNN-LSTM, Conv-LSTM, CNN-XGB, and CNN-SVR) to construct baseline models for ensemble learning. Each hybrid deep neural network model use historical data to obtain the prediction result of . The principle of these baseline models is discussed in the following subsections. Table 1. Performance comparison of different AI algorithms. Model R2 RMSLE MSE Conv-LSTM 0.948262 0.001226 0.002502 CNN-XGB 0.943238 0.001301 0.002745 CNN-SVR 0.942897 0.001294 0.002762 CNN-LSTM 0.93656 0.001432 0.003068 LSTM 0.927483 0.001639 0.003507 CNN-RF 0.905995 0.002352 0.004534 ANN 0.903026 0.002418 0.004558 XGB 0.894868 0.002714 0.004941 SVR 0.886865 0.002844 0.005456 RF 0.877211 0.003142 0.005921 4.1.1. CNN-LSTM CNN-LSTM is a hybrid neural network model that integrates the layers of Convolutional Neural Networks(CNN) and long short-term memory (LSTM) into a single framework. This model was firstly proposed by Sainath et al. [54]. It has already been proven that relevant features improve the performance of LSTM. CNN algorithm is widely known to extract relevant features from input data. The architecture of CNN-LSTM consists of CNN layer, LSTM layer, and dense layer to produce the final output. The extracted relevant features from CNN layers are fed to corresponding LSTM layers. Finally, after performing temporal modeling, the output of the LSTM is passed to a fully connected layer to provide sequential output [55]. 4.1.2. Conv-LSTM Shi et al. [56] proposed convolution LSTM network firstly in 2015. It is a type of recurrent neural network (RNN). Its basic operation is identical to the LSTM model, except that the convolution operation instead of matrix operation is applied to determine the input to state and state to state transitions. At each iteration , LSTM cells receive input and output of hidden state. The convolution operation is performed to generate output and state update using input , the output of hidden state , the output state of current cell , and output state of the previous cell. 4.1.3. CNN-XGB CNN-XGB was proposed by Ren et al. [57] in 2017. CNN has been identified as the most potent and effective feature extraction mechanism. eXtreme Gradient Boosting (XGBoost) is a Gradient Boosting-based integrated learning technique that achieves accurate results through iterative computing of weak learners. It has been used in many research studies because of its high performance and efficiency. CNN-XGB hybrid model incorporates features of CNN and XGBoost model together into one framework. The architecture of this model consists of stacked CNN layers to automatically extract relevant features from the input data, and the XGBoost regressor replaces the final layer of the CNN network and utilizes the trainable features from CNN to perform regression analysis generate output. 4.1.4. CNN-SVR CNN-SVR, a hybrid deep neural network model, was firstly proposed by Niu et al. [58] in 2012. It integrates the synergy of two powerful DL and ML algorithms: CNN and Support Vector Machine (SVM). In this study, the architecture of the CNN-SVR model is designed by substituting the output layer of CNN with an SVR regressor. The output of the last layer of the CNN provides the estimated probability of input samples. An activation function calculates each output probability by taking a linear combination of output from the preceding layers. The SVR considers this output unit as a vector of input features to train the regressor model. Once trained, the SVR performs the regression job and makes new predictions on testing data based on extracted salient features by the CNN. 4.2. Ensemble approach based on DRL The downside of existing ensemble techniques is that the chosen solution is implemented to every time step, and thus it makes the combination of the baseline models invariant. However, distinct baseline models exhibit different accuracy rates for distinct observations. The predictions of each baseline model are unstable for all time steps. Therefore, a deep reinforcement learning-based framework is proposed to dynamically choose the best model for each time step to tackle this problem. There are five components of the constructed reinforcement learning framework: state, action, reward, agent, and environment. These components are described in the following subsections. 4.2.1. State The state-space for the defined problem is represented as observations of real-world environment parameters such as climate parameters used to estimate values. Here, only limited climate parameters are used to develop a technique that can handle data-scarce situations without compromising the prediction accuracy. The state is described as follows: (15) The abovementioned state includes three climate parameters : minimum temperature ( ), maximum temperature ( ), and, solar radiation ( ). All the state parameters are normalized to scale to remove the effect of amplitude. 4.2.2. Action The action space is the option of baseline models that the agent will select for estimating process. (16) In this case, there are four possible actions in terms of hybrid DL models such as for , for , for , and for model is performed. The selection of these actions that are to be performed by an agent is determined by a greedy policy. 4.2.3. Reward The aim of the reward design is to minimize the prediction error over all time steps. The reward for the action is calculated by observing the prediction error made by the selected hybrid DL model. If prediction error is minimum among all other models, the reward is positive; otherwise, a negative reward is awarded. The current action at time selects model from a set of ensembled models and the prediction result of the ensembled model is given as follows: (17) where f(t) is output of proposed ensembling approach for datapoint at time step by selecting model . Now, calculate the absolute prediction error of the prediction result from actual value as follows: (18) This prediction error is compared to the prediction error of the static selected model with minimum prediction error among all other models at time to design reward architecture. If the prediction error is the same as the error of the static selected model , then reward is positive otherwise negative. The mathematical representation of the reward function is given as follows: (19) The agent is trained to gradually select the optimum model for time step by following the direction of reward. 4.2.4. Agent The agent’s main objective is to develop an optimum policy that chooses actions to achieve maximum cumulative future rewards. It interacts with the environment using actions, rewards, and observations. In this research study, DQN is used as an agent to determine an action to select an optimal hybrid DL model using - greedy approach for the estimation of values. Download : Download high-res image (679KB) Download : Download full-size image Fig. 4. Flowchart of proposed approach. 4.2.5. Environment The reinforcement environment can be expressed as follows: (20) where S denotes a set of state-space, A denotes the action-space set, r indicates the reward function, and P indicates the transition probability of state. Algorithm 1 depicts the DQN based ensembling for prediction. The flowchart of the proposed approach is presented in Fig. 4. Download : Download high-res image (304KB) Download : Download full-size image 5. Experimental area and data description The research study is conducted in the Ludhiana and Patiala stations of Punjab, India. Ludhiana station is situated between latitude and North and longitude and East at an altitude of 262 m. This station falls under a semi-arid tropical ecosystem, characterized by a significant amount of rainfall of 680 mm throughout the year, with dry and hot summers and cold winters. Patiala station is situated between latitude and North and longitude and East with an altitude of 351 m. This station also falls under a semi-arid tropical ecosystem, characterized by dry and hot summers and cold winter. The average annual rainfall is approximately 677 mm. Fig. 5 shows the location of these two stations. Daily meteorological inputs, e.g., minimum temperature , maximum temperature , relative humidity , windspeed , sunshine hours , and solar radiation covering a period of 13 years (2003 to 2015) and 17 years (2000 to 2015) of Ludhiana station and Patiala station respectively, is retrieved from India meteorological department (IMD) Pune, India to evaluate the proposed technique. Table 2, Table 3 show the statistical observations of meteorological data of both stations. The cross-correlation among meteorological data of Ludhiana and Patiala station is provided in Table 4. Download : Download high-res image (1MB) Download : Download full-size image Fig. 5. Study area. Table 2. Statistical observation of the meteorological data used in the study of Ludhiana station. Training dataset Testing dataset −1.6 34.5 17.4 8.1 −0.2 −1.2 0.5 −1 31.2 17.9 8 −0.2 −1.2 0.5 7.8 46.2 29.8 7.5 −0.4 −0.6 0.3 8.6 44.2 30.1 7.1 −0.4 −0.3 0.3 20.5 100 66.9 15.6 −0.7 0.04 0.2 23 100 67.4 15.5 −0.7 0.03 0.2 0 3.3 1.1 0.6 0.9 0.7 0.6 0 3.2 1.1 0.6 0.9 0.6 0.6 3.6 30 14.7 6.4 0.46 −1.1 0.4 4.2 28.4 15.2 6.52 0.5 −1.3 0.4 4.8 29.7 17.5 6.3 −0.1 −0.91 0.4 4.8 29.5 17.7 6.3 −0.1 −0.97 0.4 0.6 9.5 3.8 1.9 0.4 −0.8 0.5 0.6 9.4 3.8 1.9 0.4 −0.8 0.5 Table 3. Statistical observation of the meteorological data used in the study of Patiala station. Training dataset Testing dataset −2.1 31.4 15.6 8.4 −0.3 −1.2 0.5 −2.6 29.6 15.7 8.3 −0.3 −1.2 0.5 7.4 48.0 30.2 7.8 −0.3 −0.6 0.3 7.8 46.4 30.3 7.9 −0.5 −0.4 0.3 13.0 99.0 66.0 18.0 −0.6 −0.1 0.3 19.0 99.0 66.1 18.5 −0.7 −0.1 0.3 0.0 8.6 1.4 1.3 1.1 1.3 0.9 0.0 7.2 1.4 1.3 1.0 1.0 0.9 0.0 12.4 6.5 3.2 −0.7 −0.4 0.5 0.0 12.4 6.6 3.2 −0.7 −0.5 0.5 4.9 28.4 16.5 5.9 −0.2 −0.8 0.4 4.9 28.3 16.5 5.9 −0.2 −0.8 0.4 0.6 13.2 4.0 2.4 0.9 0.3 0.6 0.7 12.9 3.9 2.4 0.8 0.2 0.6 Table 4. Cross-correlation among meteorological variables and ET0 of Ludhiana and Patiala Station. Ludhiana station Patiala station 1 0.85 −0.23 0.35 0.17 0.57 0.8 1 0.87 −0.44 0.12 0.34 0.67 0.8 0.85 1 −0.62 0.25 0.46 0.76 0.9 0.87 1 −0.71 0.14 0.56 0.80 0.8 −0.2 −0.62 1 −0.16 −0.5 −0.57 −0.6 −0.44 −0.712 1 −0.24 −0.50 −0.63 −0.7 0.35 0.25 −0.16 1 −0.07 0.17 0.5 0.12 0.14 −0.24 1 0.05 0.14 0.5 0.17 0.46 −0.5 −0.07 1 0.86 0.5 0.34 0.56 −0.50 0.053 1 0.89 0.6 0.57 0.76 −0.57 0.17 0.86 1 0.9 0.67 0.80 −0.63 0.14 0.89 1 0.8 0.77 0.87 −0.62 0.48 0.54 0.86 1 0.77 0.83 −0.68 0.50 0.58 0.82 1 FAO-56 PM equation is used to compute values to obtain the benchmark dataset to compare the values estimated by proposed models. The conducted study considers limited climate parameters such as , , and to estimate values and then evaluate how close it can get to actual observations made by the FAO-56 PM equation. Fig. 6, Fig. 7 shows the seasonal variation in , and of Ludhiana and Patiala stations respectively. The meteorological dataset is preprocessed to transform the data into a useful and efficient format. Data preprocessing includes missing data treatment, outlier detection, and normalization. In this study, the mixgb package of R programming language [59], proposed by Deng et al., is used to handle missing values. Outlier detection is performed using the z-score method, whereas normalization of data is done using min–max scaler [60]. Download : Download high-res image (455KB) Download : Download full-size image Fig. 6. Seasonal variation of meteorological data of Ludhiana station. Download : Download high-res image (437KB) Download : Download full-size image Fig. 7. Seasonal variation of meteorological data of Patiala station. 6. Evaluation of model parameter Prediction accuracy is an essential parameter in the assessment of predictive models. In the study, five model performance evaluation metrics are employed in terms of mean square error (MSE), root means square log error (RMSLE), error variance score (EVS), Nash-Sutcliffe efficiency (NSE), and coefficient of determination (R2). Further, Diebold–Mariano (DM) test is also used to assess the predicting ability of the proposed ensemble technique. The mathematical representation of five performance evaluation metrics are as follows: (21) (22) (23) (24) where (mmd-1) is FAO-56 PM estimated or observed value , is the predicted value of for the th value of data point, is mean of observed value of and is the number of data points considered in the study. MSE is the mean of the squared difference between observed and estimated values and lies between 0 to . The lower MSE value shows that model makes better estimation. RMSLE calculates the root of squared differences between the log-transformed observed and predicted values of the model, and the optimal value of this metric is 0.0. Explained Variance Score (EVS) indicates how efficiently the given model can explain the variations in the dataset or measure the discrepancy between predicted and actual values. The value closer to 1.0 indicates that the model makes better predictions [61]. represents the degree of correlation between predicted values of by proposed models and observed values estimated by FAO-56 PM. NSE is widely used in hydrological modeling and determines the model’s accuracy for the actual observations. It ranges between 0 to 1, where a value closer to 1 represents the best quality of the model. 6.1. Diebold–Mariano test The standard evaluation metrics, such as MSE, R2, etc., are useful for comparing the performance of two models. However, these metrics cannot determine the significant difference in the prediction of two predictive models. Hypothesis testing is a statistical inference technique to determine the significant difference between the two predictive models by quantifying confidence levels. In the present study, Diebold–Mariano (DM) hypothesis test [62] is employed to assess the performance of the proposed DRL-based ensemble model. Let denotes the observed value and and denote the estimated value of by two predictive models for time series climate data. The objective is to determine if these two models are significantly different. The errors between observed and predicted values of these two models are defined as: (25) (26) where and denotes the error between observed and predicted values of model 1 and model 2 respectively. The loss function (L(E)) is used to determine the precision of each prediction. Two widely used loss functions are absolute deviation error (27) and squared error loss (28) Here is error of prediction of th input. In this study, to examine if one model predicts better than other model, equal accuracy hypothesis is tested. The null hypothesis for the study is (29) against the alternative hypothesis (30) Here, and denotes the loss functions of model 1 and model 2 respectively. Table 5. Performance comparison of baseline models for Ludhiana station. Models Train Empty Cell Test Empty Cell MSE R2 RMSLE EVS Empty Cell MSE R2 RMSLE EVS CNN-LSTM 0.003354 0.932629 0.001568 0.935775 0.003068 0.936560 0.001432 0.940903 Conv-LSTM 0.002940 0.940930 0.001441 0.942152 0.002502 0.948262 0.001226 0.948746 CNN-XGB 0.002943 0.940875 0.001389 0.941625 0.002745 0.943238 0.001301 0.943425 CNN-SVR 0.003015 0.939441 0.001417 0.940024 0.002762 0.942897 0.001294 0.944099 Table 6. Performance comparison of baseline models for Patiala Station. Models Train Empty Cell Test Empty Cell MSE R2 RMSLE EVS Empty Cell MSE R2 RMSLE EVS CNN-LSTM 0.003330 0.933110 0.001571 0.934357 0.002998 0.938004 0.001408 0.938779 Conv-LSTM 0.002919 0.941369 0.001464 0.943999 0.002519 0.947927 0.001241 0.949443 CNN-XGB 0.002813 0.943485 0.001384 0.943525 0.002829 0.941516 0.001343 0.941733 CNN-SVR 0.003080 0.938126 0.001454 0.938807 0.002721 0.943738 0.001285 0.945095 The null hypothesis states that the prediction accuracy of the two models is the same, whereas the alternative hypothesis states that the accuracy of the models varies. The DM test statistic can be formulated as follows: (31) Here, represents the variance of . The null hypothesis will be rejected for the present study if the DM test score is not in the range of [ 1.96, 1.96] at 5% confidence level. 7. Results & discussion This section analyzes the four baseline models’ performance using the meteorological dataset of Ludhiana and Patiala stations. Then, the estimation ability of the proposed DRL-based ensemble model is evaluated and compared to the baseline models’ estimation abilities using four performance metrics, i.e., MSE, , RMSLE, and EVS, followed by the Diebold–Mariano test. To further assess the performance of the proposed DeepEvap approach, the estimation results of alternative existing ensemble models (stacked and weighted ensemble models) are also added as a contrast. 7.1. Prediction of by baseline models The CNN-LSTM, Conv-LSTM, CNN-SVR, and CNN-XGB deep neural networks are evaluated in this section to observe the effectiveness of these models in prediction. The bar-graph representation of prediction results of these four baseline models for Ludhiana and Patiala stations is shown in Fig. 8. The performance comparison of these models for training and testing datasets is provided in Table 5, Table 6 for Ludhiana and Patiala stations, respectively. The meteorological dataset of Ludhiana and Patiala station is divided into a training dataset (70%) and testing dataset (30%), 10% of the training dataset is further used as a validation set for the hyperparameter tuning process. The hyperparameters of these models, such as number of filters, learning rate, activation function, batch size, number of hidden nodes, number of epochs, etc., are selected using the random search algorithm of the Keras tuner library. Minimization of the mean square error (MSE) is the objective function during neural network training that represents the degree to which the neural network approximates the prediction. It is noteworthy that if these hyper-parameters are not selected carefully, the performance of these baseline models gets affected and can even lead to worst performance. However, this phenomenon helps in building more powerful ensemble model, since the baseline models with different hyper-parameters are naturally diverse. It can be observed from the Table 5, Table 6 that Conv-LSTM shows best overall prediction, with MSE, , RMSLE, and EVS values 0.002502 , 0.948262, 0.001226 , and 0.948746 for Ludhiana Station and 0.002519 , 0.947927, 0.001241 , and 0.949443 for Patiala Station respectively. According to experimental results, CNN-LSTM provide worst performance with MSE 0.003354 to 0.003330 . Download : Download high-res image (495KB) Download : Download full-size image Fig. 8. Performance measures of baseline models of Ludhiana and Patiala station. It has been further noted that a single deep neural network is not capable of adequately estimating for different meteorological datasets. The primary reason for this could be that different deep neural networks have varied hidden layer structures, resulting in recognition abilities for different meteorological datasets. Therefore, a technique (e.g., ensemble learning) that can increase the model’s flexibility and resilience is required. In the following subsection, the performance of the proposed DeepEvap approach is discussed. 7.2. Results of proposed ensemble model This subsection provides the results of the proposed DRL-based ensemble model. The line graph represents the relationship between two sets of values, where one set is always dependent on the other. The line graph representation of prediction values over time by the proposed ensemble model versus actual values is shown in Fig. 9. It is evident from Fig. 9 that the proposed model can simulate the actual values of . In order to prove that the ensemble model shows better performance than baseline models, the proposed DRL-based ensemble model is compared to the CNN-LSTM model, the Conv-LSTM model, CNN-SVR model, and the CNN-XGB model. Table 7 shows the performance comparison of baseline models (CNN-LSTM, Conv-LSTM, CNN-SVR, and CNN-XGB) with the proposed model. Table 7. Performance comparison of the proposed dynamic ensemble method and baseline models. Station Models MSE R2 RMSLE EVS Ludhiana CNN-LSTM 0.003068 0.936560 0.001432 0.940903 Conv-LSTM 0.002502 0.948262 0.001226 0.948746 CNN-SVR 0.002745 0.943238 0.001301 0.943425 CNN-XGB 0.002762 0.942897 0.001294 0.944099 Proposed DeepEvap approach 0.001889 0.960948 0.000909 0.961137 Patiala CNN-LSTM 0.002998 0.938004 0.001408 0.938779 Conv-LSTM 0.002519 0.947927 0.001241 0.949443 CNN-SVR 0.002829 0.941516 0.001343 0.941733 CNN-XGB 0.002721 0.943738 0.001285 0.945095 Proposed DeepEvap approach 0.001864 0.961452 0.000880 0.962270 Table 8. Diebold–Mariano test of baseline models with proposed ensemble model. Model DM Statistics Empty Cell Ludhiana Patiala CNN-LSTM 7.97 8.58 Conv-LSTM 6.85 6.75 CNN-XGB 7.10 6.88 CNN-SVR 7.10 7.82 Proposed DeepEvap approach – – Download : Download high-res image (640KB) Download : Download full-size image Fig. 9. Prediction results of: (a) Ludhiana station (b) Patiala station (left to right). Further to examine the effectiveness of the proposed DRL based ensemble model, the Diebold–Mariano test is conducted with these baseline models. This test is conducted to determine if there is a significant difference in the prediction performance of the two models. The detailed discussion of this model is presented in Section 6.1. Table 8 represents the DM statistics values using absolute deviation error as loss function. The results indicate that DM values of CNN-LSTM, Conv-LSTM, CNN-SVR, and CNN-XGB models are above the upper limits of 5% significance level. Thus the null hypothesis of the study: the prediction accuracy of two models is the same, is rejected. Table 7, Table 8 indicate that the proposed ensemble model (DeepEvap) substantially outperforms the baseline models and is significantly better than these models. For instance, the MSE, , RMSLE, and EVS of proposed DeepEvap are 0.001889 , 0.960948, 0.000909 , and 0.961137 respectively for Ludhiana station and the MSE, , RMSLE, and EVS of the proposed ensemble model are 0.001864 , 0.96145, 0.000880 , and 0.962269 respectively. The scatter plot of the baseline models and the proposed model is presented in Fig. 10, Fig. 11 of Ludhiana and Patiala stations, respectively. The highest accordance with the 1:1 line is observed with the proposed ensemble model (DeepEvap). The examination of regression lines reveals that the slop value (“a”) and intercept value (“b”) of the proposed DeepEvap approach deviate slightly from their ideal values (a 1 and b 0) as compared to four baseline models. It shows that the proposed ensemble model is more reliable than the baseline models. Moreover, the study aims to minimize the objective function, i.e., MSE. It is clear from Table 5 that the proposed DeepEvap approach has achieved minimum MSE as compared to four baseline models. The MSE value of CNN-LSTM, Conv-LSTM, CNN-XGB, CNN-SVR, and proposed DeepEvap approach for Ludhiana station is 0.003068, 0.002502, 0.002745, 0.002761 and 0.001888 respectively and for Patiala station MSE value of CNN-LSTM, Conv-LSTM, CNN-XGB, CNN-SVR and, proposed DeepEvap approach is 0.002998, 0.002518, 0.0028286, 0.002721, and 0.0018644 respectively. Download : Download high-res image (769KB) Download : Download full-size image Fig. 10. Scatter plot of baseline models and proposed ensemble model (DeepEvap) of Ludhiana station. Download : Download high-res image (775KB) Download : Download full-size image Fig. 11. Scatter plot of baseline models and proposed ensemble model (DeepEvap) of Patiala station. 7.3. Comparison with alternative ensemble approaches Deep Reinforcement Learning (DRL) works best in decision-making problems of a dynamic environment. An agent learns via repeated interactions with the environment to attain a goal. Such interaction generates information regarding the outcomes of the agent’s behavior and helps in improving the performance. The proposed ensemble technique uses a deep reinforcement approach to dynamically select models for prediction by interacting with the environment and incorporating the time varying input characteristics. However, other approaches such as weighted and stacked ensemble approaches are static and do not deploy time-varying environment characteristics. In this subsection, a comparative study is carried out to validate the effectiveness of the proposed DeepEvap approach. The Proposed model (PM), DeepEvap, is compared to the best baseline model and two existing ensemble approaches, weighted ensemble model (WM) and stacked ensemble model (SM). Table 9 summarizes the performance comparison of the proposed DeepEvap approach with the best baseline model, weighted ensemble, and stacked ensemble model. It can be gleaned from Table 9 that the presented DRL based ensemble model, DeepEvap improves the result by decreasing the MSE value of the best baseline model by 25%, weighted ensemble model by 22% and stacked ensemble model by 20% for Ludhiana station and Patiala station the MSE value is decreased by 26%, weighted ensemble model by 22% and stacked ensemble model by 19%. Fig. 12, Fig. 13 show the absolute prediction error of the weighted ensemble model, stacked ensemble model, and the proposed ensemble model of Ludhiana and Patiala station, respectively. It can be observed that the prediction error of the proposed ensemble model is lower than that of the other two ensemble models. Thus it shows the superiority of the proposed model over existing ensemble approaches. The heat map of Diebold Mariano test values for each pair of models used in the study is represented in Fig. 14(a) and (b) for both stations. Table 9. Performance comparison of best baseline model, weighted ensemble model, stacked ensemble model, and proposed ensemble model. Station Models MSE R2 RMSLE EVS Ludhiana Best baseline model 0.002502 0.948262 0.001226 0.948746 Weighted ensemble model 0.002406 0.950257 0.001165 0.950316 Stacked ensemble model 0.002365 0.951098 0.001142 0.952603 Proposed DeepEvap approach 0.001889 0.960948 0.000909 0.961137 Patiala Best baseline model 0.002519 0.947927 0.001241 0.949443 Weighted ensemble model 0.002391 0.950558 0.001155 0.950702 Stacked ensemble model 0.002296 0.952528 0.001109 0.952855 Proposed DeepEvap approach 0.001864 0.961452 0.000880 0.962270 Download : Download high-res image (462KB) Download : Download full-size image Fig. 12. Error detected in the estimation of of Ludhiana station by (a) Weighted ensemble model (b) Stacked ensemble model, (c) Proposed ensemble model (left to right). Download : Download high-res image (480KB) Download : Download full-size image Fig. 13. Error detected in the estimation of of Patiala station by (a) Weighted ensemble model (b) Stacked ensemble model, (c) Proposed ensemble model (left to right). It is observed from the heat map that for Ludhiana station, the pairs {CNN-SVR, CNN-XGB} and {SM, WM} have DM values in the range of [ 1.96,1.96]. Thus for these pairs, the null hypothesis cannot be rejected, i.e., no model is superior to each other. However, the remaining pairs of the models are significant at a 5% significance level. The DM values for pairs {SM, PM} and {WM, PM} are 4.9 and 5.5, respectively, which shows the significant difference in the prediction performance of the proposed DeepEvap approach, stacked and a weighted ensemble model. In Fig. 14(b), the heat map of the Patiala station shows that DM values for the pairs {Conv-LSTM, CNN-SVR}, {CNN-SVR, CNN-XGB}, {Conv-LSTM, WM} are in the range of [ 1.96,1.96] and thus null hypothesis for these pairs cannot be rejected. In other words, these models are not better than each other significantly. However, for all other pairs of models involved in the study, DM values show a significant difference in the prediction of values. The DM values for the pairs {SM, PM} and {WM, PM} are 5 and 5.3, respectively, and thus null hypothesis is rejected. The overall results of the Diebold–Mariano study demonstrate that prediction results obtained from the proposed ensemble model differ significantly from existing ensemble models and baseline models. Download : Download high-res image (529KB) Download : Download full-size image Fig. 14. Diebold–Mariano test: (a) DM values for Ludhiana station (b) DM values for Patiala station. This study examines the proposed DRL based ensemble approach, DeepEvap in respect to how this approach can predict values using , , and . Traore et al. [19] also used , , and as input set to predict using Multi-layer Perceptron (MLP) and achieve MSE value 0.770 . However, this study is able to achieve MSE value 0.001889 . Fan et al. explored different input combinations to model process and with combination , , and as input dataset, the 0.91 to 0.95 for different station was achieved. The proposed DeepEvap approach used in study has obtained 0.96 for different dataset. This comparison reveals the usefulness of the proposed DeepEvap approach for modeling the process. 8. Conclusion and future work Predicting reference evapotranspiration with reasonable accuracy in data-scarce regions requires modeling the process using a limited dataset. This study proposes the DRL based ensemble model that uses , , and to model process. Four types of deep neural network models, including CNN-LSTM, Conv-LSTM, CNN-SVR, and CNN-XGB, act as baseline models for the proposed ensembling approach. The meteorological data of two stations: Ludhiana and Patiala of India, is used to conduct this study. The experimental results demonstrate that the proposed DRL ensemble model can effectively predict values with 0.96. Further, the proposed model is also superior to other existing ensemble models (weighted ensemble model and stacked ensemble model) and four base deep neural network models in terms of low mean square error and a high coefficient of determination. The proposed DRL ensemble model also incorporates time-varying input characteristics to remove the static nature of existing ensemble techniques by dynamically selecting baseline models for each specific input to predict . The following conclusion can be drawn from the conducted study: • The conducted study addresses the issue of unavailability of most of the meteorological parameters required to estimate values. The proposed DRL based ensemble model predicts values using , , and climate variables and achieve 0.96 and 0.0018 for both stations. • The proposed DRL-based ensemble model can efficiently integrate four deep neural network models (CNN-LSTM, Conv-LSTM, CNN-SVR, and CNN-XGB) and improve the prediction results of baseline models by minimizing the mean square error. • Although the proposed DRL ensemble approach provides closer performance to other existing ensemble approaches, the major aspect of the proposed ensemble approach is to implement an intelligent and coherent system that surmounts the state-of-art deep learning models and can work in an unknown dynamic environment (such as climate change) and provide reasonable accuracy using limited climate data. Thus, unlike other approaches that use only historical data to predict outcomes, the DRL approach can become more intelligent via iterations and work in an unknown dynamic environment of future climate data. • This model may assist irrigation engineers in regulating the irrigation water supply. The irrigation water requirement (IR) is the difference between the crop water requirement (ET) and the effective rainfall (Pe) as shown in the given formula: (32) An irrigation engineer utilizes ET to compute the available water in the soil. So, if it rains and fills the ground, there is no requirement for irrigation; otherwise, irrigation is needed. It helps irrigation engineers to determine when the plant will need water, even if the ground looks dry at the surface. The proposed approach provides values using less number of climate parameters that can help irrigation engineers to estimate irrigation requirements in data scarce situations. However, the proposed approach deserves further scrutiny to improve the practical application of the proposed model in the future. • The complexity of the proposed DRL based ensemble model can be decreased by embedding it into big data platforms, e.g., Hadoop can reduce the amount of elapsed time of the model. • The study uses meteorological data of semi-arid region stations. Another study can be conducted in the future for meteorological data of hyper-arid, arid, humid, and sub-humid regions to observe the generalized behavior of the proposed ensemble model. • Different sets of baseline models can be used to validate the performance of the proposed ensemble approach. CRediT authorship contribution statement Gitika Sharma: Conceptualization, Methodology, Simulation, Result analysis, Visualization, Writing – original draft. Ashima Singh: Investigation, Supervision. Sushma Jain: Investigation, Supervision. Declaration of Competing Interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgments The authors acknowledge the help rendered by the Food Security Centre at Thapar Institute of Engineering and Technology. The authors also express their gratitude to the India Meteorological Department (IMD), Pune India, to provide the meteorological data of Ludhiana and Patiala stations. References [1] Dhawan V. Water and agriculture in India Background Paper for the South Asia Expert Panel During the Global Forum for Food and Agriculture, Vol. 28 (2017) Google Scholar [2] Kisi O. The potential of different ANN techniques in evapotranspiration modelling Hydrol. Process. Int. J., 22 (14) (2008), pp. 2449-2460 CrossRefView in ScopusGoogle Scholar [3] Singh V.P. Hydrologic Systems. volume i: rainfall-Runoff Modeling, Vol. 480 Prentice Hall, Englewood Cliffs New Jersey (1988) 1988 Google Scholar [4] Allen R.G., Pereira L.S., Raes D., Smith M., et al. Crop Evapotranspiration-Guidelines for Computing Crop Water Requirements-FAO Irrigation and Drainage Paper 56, Vol. 300 Fao, Rome (1998), p. D05109 9 Google Scholar [5] Zotarelli L., Dukes M.D., Romero C.C., Migliaccio K.W., Morgan K.T. Step by step calculation of the Penman-Monteith Evapotranspiration (FAO-56 Method) Institute of Food and Agricultural Sciences. University of Florida (2010) Google Scholar [6] Jensen M.E. Water consumption by agricultural plants Water deficits and plant growth. Volume II. Plant water consumption and response, Academic Press Inc, New York (1968), pp. 1-22 CrossRefGoogle Scholar [7] Cruz-Blanco M., Lorite I., Santos C. An innovative remote sensing based reference evapotranspiration method to support irrigation water management under semi-arid conditions Agricult. Water Manag., 131 (2014), pp. 135-145 View PDFView articleView in ScopusGoogle Scholar [8] Pereira L.S., Allen R.G., Smith M., Raes D. Crop evapotranspiration estimation with FAO56: Past and future Agricult. Water Manag., 147 (2015), pp. 4-20 View PDFView articleView in ScopusGoogle Scholar [9] Yassin M.A., Alazba A., Mattar M.A. Artificial neural networks versus gene expression programming for estimating reference evapotranspiration in arid climate Agricult. Water Manag., 163 (2016), pp. 110-124 View PDFView articleView in ScopusGoogle Scholar [10] Gocic M., Trajkovic S. Service-oriented approach for modeling and estimating reference evapotranspiration Comput. Electron. Agric., 79 (2) (2011), pp. 153-158 View PDFView articleView in ScopusGoogle Scholar [11] Ding R., Kang S., Li F., Zhang Y., Tong L., Sun Q. Evaluating eddy covariance method by large-scale weighing lysimeter in a maize field of northwest China Agricult. Water Manag., 98 (1) (2010), pp. 87-95 View PDFView articleView in ScopusGoogle Scholar [12] Ferreira L.B., da Cunha F.F., de Oliveira R.A., Fernandes Filho E.I. Estimation of reference evapotranspiration in Brazil with limited meteorological data using ANN and SVM–A new approach J. Hydrol., 572 (2019), pp. 556-570 View PDFView articleView in ScopusGoogle Scholar [13] Allen R.G., Clemmens A.J., Burt C.M., Solomon K., O’Halloran T. Prediction accuracy for projectwide evapotranspiration using crop coefficients and reference evapotranspiration J. Irrig. Drain. Eng., 131 (1) (2005), pp. 24-36 View in ScopusGoogle Scholar [14] ASCE-EWRI The ASCE standardized reference evapotranspiration equation (2005), p. 213 Google Scholar [15] Xu J., Peng S., Ding J., Wei Q., Yu Y. Evaluation and calibration of simple methods for daily reference evapotranspiration estimation in humid east China Arch. Agron. Soil Sci., 59 (6) (2013), pp. 845-858 CrossRefView in ScopusGoogle Scholar [16] Pandey P.K., Dabral P.P., Pandey V. Evaluation of reference evapotranspiration methods for the northeastern region of India Int. Soil Water Conserv. Res., 4 (1) (2016), pp. 52-63 View PDFView articleView in ScopusGoogle Scholar [17] Ladlani I., Houichi L., Djemili L., Heddam S., Belouz K. Estimation of daily reference evapotranspiration (ET 0) in the North of Algeria using adaptive neuro-fuzzy inference system (ANFIS) and multiple linear regression (MLR) models: a comparative study Arab. J. Sci. Eng., 39 (8) (2014), pp. 5959-5969 CrossRefView in ScopusGoogle Scholar [18] Petković D., Gocic M., Shamshirband S., Qasem S.N., Trajkovic S. Particle swarm optimization-based radial basis function network for estimation of reference evapotranspiration Theor. Appl. Climatol., 125 (3) (2016), pp. 555-563 CrossRefView in ScopusGoogle Scholar [19] Traore S., Luo Y., Fipps G. Deployment of artificial neural network for short-term forecasting of evapotranspiration using public weather forecast restricted messages Agricult. Water Manag., 163 (2016), pp. 363-379 View PDFView articleView in ScopusGoogle Scholar [20] Feng Y., Cui N., Zhao L., Hu X., Gong D. Comparison of ELM, GANN, WNN and empirical models for estimating reference evapotranspiration in humid region of Southwest China J. Hydrol., 536 (2016), pp. 376-383 View PDFView articleView in ScopusGoogle Scholar [21] Feng Y., Cui N., Gong D., Zhang Q., Zhao L. Evaluation of random forests and generalized regression neural networks for daily reference evapotranspiration modelling Agricult. Water Manag., 193 (2017), pp. 163-173 View PDFView articleView in ScopusGoogle Scholar [22] Kim S., Kim H.S. Neural networks and genetic algorithm approach for nonlinear evaporation and evapotranspiration modeling J. Hydrol., 351 (3–4) (2008), pp. 299-317 View PDFView articleView in ScopusGoogle Scholar [23] Kisi O. Fuzzy genetic approach for modeling reference evapotranspiration J. Irrig. Drain. Eng., 136 (3) (2010), pp. 175-183 View in ScopusGoogle Scholar [24] Traore S., Guven A. New algebraic formulations of evapotranspiration extracted from gene-expression programming in the tropical seasonally dry regions of west Africa Irrig. Sci., 31 (1) (2013), pp. 1-10 CrossRefView in ScopusGoogle Scholar [25] Gocić M., Motamedi S., Shamshirband S., Petković D., Ch S., Hashim R., Arif M. Soft computing approaches for forecasting reference evapotranspiration Comput. Electron. Agric., 113 (2015), pp. 164-173 View PDFView articleView in ScopusGoogle Scholar [26] Shiri J. Modeling reference evapotranspiration in island environments: assessing the practical implications J. Hydrol., 570 (2019), pp. 265-280 View PDFView articleView in ScopusGoogle Scholar [27] Fan J., Yue W., Wu L., Zhang F., Cai H., Wang X., Lu X., Xiang Y. Evaluation of SVM, ELM and four tree-based ensemble models for predicting daily reference evapotranspiration using limited meteorological data in different climates of China Agricult. Forest Meteorol., 263 (2018), pp. 225-241 View PDFView articleView in ScopusGoogle Scholar [28] Shiri J. Improving the performance of the mass transfer-based reference evapotranspiration estimation approaches through a coupled wavelet-random forest methodology J. Hydrol., 561 (2018), pp. 737-750 View PDFView articleView in ScopusGoogle Scholar [29] Fan J., Ma X., Wu L., Zhang F., Yu X., Zeng W. Light Gradient Boosting Machine: An efficient soft computing model for estimating daily reference evapotranspiration with local and external meteorological data Agricult. Water Manag., 225 (2019), Article 105758 View PDFView articleView in ScopusGoogle Scholar [30] Granata F. Evapotranspiration evaluation models based on machine learning algorithms—A comparative study Agricult. Water Manag., 217 (2019), pp. 303-315 View PDFView articleView in ScopusGoogle Scholar [31] Wen X., Si J., He Z., Wu J., Shao H., Yu H. Support-vector-machine-based models for modeling daily reference evapotranspiration with limited climatic data in extreme arid regions Water Resour. Manage., 29 (9) (2015), pp. 3195-3209 CrossRefView in ScopusGoogle Scholar [32] Shrestha N., Shukla S. Support vector machine based modeling of evapotranspiration using hydro-climatic variables in a sub-tropical environment Agricult. Forest Meteorol., 200 (2015), pp. 172-184 View PDFView articleView in ScopusGoogle Scholar [33] Kisi O., Parmar K.S. Application of least square support vector machine and multivariate adaptive regression spline models in long term prediction of river water pollution J. Hydrol., 534 (2016), pp. 104-112 View PDFView articleView in ScopusGoogle Scholar [34] Mehdizadeh S., Behmanesh J., Khalili K. Using MARS, SVM, GEP and empirical equations for estimation of monthly mean reference evapotranspiration Comput. Electron. Agric., 139 (2017), pp. 103-114 View PDFView articleView in ScopusGoogle Scholar [35] Tikhamarine Y., Malik A., Souag-Gamane D., Kisi O. Artificial intelligence models versus empirical equations for modeling monthly reference evapotranspiration Environ. Sci. Pollut. Res., 27 (2020), pp. 30001-30019 CrossRefView in ScopusGoogle Scholar [36] Deo R.C., Samui P., Kim D. Estimation of monthly evaporative loss using relevance vector machine, extreme learning machine and multivariate adaptive regression spline models Stoch. Environ. Res. Risk Assess., 30 (6) (2016), pp. 1769-1784 CrossRefView in ScopusGoogle Scholar [37] Tao H., Diop L., Bodian A., Djaman K., Ndiaye P.M., Yaseen Z.M. Reference evapotranspiration prediction using hybridized fuzzy model with firefly algorithm: Regional case study in Burkina Faso Agricult. Water Manag., 208 (2018), pp. 140-151 View PDFView articleView in ScopusGoogle Scholar [38] Khosravi K., Daggupati P., Alami M.T., Awadh S.M., Ghareb M.I., Panahi M., Pham B.T., Rezaie F., Qi C., Yaseen Z.M. Meteorological data mining and hybrid data-intelligence models for reference evaporation simulation: A case study in Iraq Comput. Electron. Agric., 167 (2019), Article 105041 View PDFView articleView in ScopusGoogle Scholar [39] Nourani V., Elkiran G., Abdullahi J. Multi-station artificial intelligence based ensemble modeling of reference evapotranspiration using pan evaporation measurements J. Hydrol., 577 (2019), Article 123958 View PDFView articleView in ScopusGoogle Scholar [40] Martín J., Sáez J.A., Corchado E. On the suitability of stacking-based ensembles in smart agriculture for evapotranspiration prediction Appl. Soft Comput., 108 (2021), Article 107509 View PDFView articleView in ScopusGoogle Scholar [41] Tama B.A., Rhee K.-H. Tree-based classifier ensembles for early detection method of diabetes: an exploratory study Artif. Intell. Rev., 51 (3) (2019), pp. 355-370 CrossRefView in ScopusGoogle Scholar [42] Qu Z., Zhang K., Mao W., Wang J., Liu C., Zhang W. Research and application of ensemble forecasting based on a novel multi-objective optimization algorithm for wind-speed forecasting Energy Convers. Manage., 154 (2017), pp. 440-454 View PDFView articleView in ScopusGoogle Scholar [43] Yang Z., Wang J. A combination forecasting approach applied in multistep wind speed forecasting based on a data processing strategy and an optimized artificial intelligence algorithm Appl. Energy, 230 (2018), pp. 1108-1125 View PDFView articleView in ScopusGoogle Scholar [44] Masih A. Application of ensemble learning techniques to model the atmospheric concentration of SO2 Glob. J. Environ. Sci. Manage., 5 (3) (2019), pp. 309-318 View in ScopusGoogle Scholar [45] Wang Y., Wang A., Ai Q., Sun H. Ensemble based fuzzy weighted extreme learning machine for gene expression classification Appl. Intell., 49 (3) (2019), pp. 1161-1171 CrossRefGoogle Scholar [46] Chen C., Liu H. Dynamic ensemble wind speed prediction model based on hybrid deep reinforcement learning Adv. Eng. Inform., 48 (2021), Article 101290 View PDFView articleGoogle Scholar [47] Cui S., Yin Y., Wang D., Li Z., Wang Y. A stacking-based ensemble learning method for earthquake casualty prediction Appl. Soft Comput., 101 (2021), Article 107038 View PDFView articleView in ScopusGoogle Scholar [48] Guo C., Liu M., Lu M. A dynamic ensemble learning algorithm based on K-means for ICU mortality prediction Appl. Soft Comput., 103 (2021), Article 107166 View PDFView articleView in ScopusGoogle Scholar [49] Sutton R.S., Barto A.G., et al. Introduction To Reinforcement Learning, Vol. 135 MIT press Cambridge (1998) Google Scholar [50] Shi Y., Li W., Zhu L., Guo K., Cambria E. Stock trading rule discovery with double deep Q-network Appl. Soft Comput., 107 (2021), Article 107320 View PDFView articleView in ScopusGoogle Scholar [51] Mnih V., Kavukcuoglu K., Silver D., Rusu A.A., Veness J., Bellemare M.G., Graves A., Riedmiller M., Fidjeland A.K., Ostrovski G., et al. Human-level control through deep reinforcement learning Nature, 518 (7540) (2015), pp. 529-533 CrossRefView in ScopusGoogle Scholar [52] H. Van Hasselt, A. Guez, D. Silver, Deep reinforcement learning with double q-learning, in: Proceedings of the AAAI Conference on Artificial Intelligence, 30 (2016). Google Scholar [53] Lin L.-J. Self-improving reactive agents based on reinforcement learning, planning and teaching Mach. Learn., 8 (3–4) (1992), pp. 293-321 View in ScopusGoogle Scholar [54] Sainath T.N., Vinyals O., Senior A., Sak H. Convolutional, long short-term memory, fully connected deep neural networks 2015 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), IEEE (2015), pp. 4580-4584 CrossRefView in ScopusGoogle Scholar [55] Naeem H., Bin-Salem A.A. A CNN-LSTM network with multi-level feature extraction-based approach for automated detection of coronavirus from CT scan and X-ray images Appl. Soft Comput., 113 (2021), Article 107918 View PDFView articleView in ScopusGoogle Scholar [56] Xingjian S., Chen Z., Wang H., Yeung D.-Y., Wong W.-K., Woo W.-c. Convolutional LSTM network: A machine learning approach for precipitation nowcasting Advances in Neural Information Processing Systems (2015), pp. 802-810 Google Scholar [57] Ren X., Guo H., Li S., Wang S., Li J. A novel image classification method with CNN-XGBoost model International Workshop on Digital Watermarking, Springer (2017), pp. 378-390 CrossRefView in ScopusGoogle Scholar [58] Niu X.-X., Suen C.Y. A novel hybrid CNN–SVM classifier for recognizing handwritten digits Pattern Recognit., 45 (4) (2012), pp. 1318-1325 View PDFView articleView in ScopusGoogle Scholar [59] Deng Y., Lumley T. Multiple imputation through XGBoost (2021) arXiv preprint arXiv:2106.01574 Google Scholar [60] Al Shalabi L., Shaaban Z. Normalization as a preprocessing engine for data mining and the approach of preference matrix 2006 International Conference on Dependability of Computer Systems, IEEE (2006), pp. 207-214 CrossRefView in ScopusGoogle Scholar [61] Rosenthal G., Rosenthal J.A. Statistics and Data Interpretation for Social Work Springer publishing company (2011) Google Scholar [62] Chen H., Wan Q., Wang Y. Refined diebold-mariano test methods for the evaluation of wind power forecasting models Energies, 7 (7) (2014), pp. 4185-4198 CrossRefView in ScopusGoogle Scholar Cited by (13) Evaluation of TerraClimate gridded data in investigating the changes of reference evapotranspiration in different climates of Iran 2024, Journal of Hydrology: Regional Studies Show abstract Harnessing the power of transformers and data fusion in smart irrigation 2024, Applied Soft Computing Show abstract A review of recent advances and future prospects in calculation of reference evapotranspiration in Bangladesh using soft computing models 2024, Journal of Environmental Management Show abstract Ensemble reinforcement learning: A survey 2023, Applied Soft Computing Show abstract A review of deep learning techniques used in agriculture 2023, Ecological Informatics Show abstract A review of the Artificial Intelligence (AI) based techniques for estimating reference evapotranspiration: Current trends and future perspectives 2023, Computers and Electronics in Agriculture Show abstract View all citing articles on Scopus View Abstract © 2022 Elsevier B.V. All rights reserved. Recommended articles On the suitability of stacking-based ensembles in smart agriculture for evapotranspiration prediction Applied Soft Computing, Volume 108, 2021, Article 107509 Juan Martín, …, Emilio Corchado View PDF Investigating the ability of deep learning on actual evapotranspiration estimation in the scarcely observed region Journal of Hydrology, Volume 607, 2022, Article 127506 Xiaoshu Wang, …, Xu-Sheng Wang View PDF An extreme learning machine approach for modeling evapotranspiration using extrinsic inputs Computers and Electronics in Agriculture, Volume 121, 2016, pp. 385-392 Amit Prakash Patil, Paresh Chandra Deka View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 10 Captures Readers: 35 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 4:
- APA Citation: Kang, Y., Chen, P., Cheng, X., Zhang, S., & Song, S. (2022). Novel Hybrid Machine Learning Framework With Decomposition–Transformation–Identification–Estimation for Reference Evapotranspiration Estimation. Agricultural Water Management, 273(107882), 1–18.
  Main Objective: Developing a hybrid VMD-BC-SVM model for ETo estimation
  Study Location: Wei River Basin of China
  Data Sources: 
  Technologies Used: ['Variational mode decomposition', 'Box-Cox transformation', 'Least absolute shrinkage and selection operator regression', 'Support vector machine']
  Key Findings: 
  Extract 1: The proposed hybrid VMD–BC–SVM model was developed by integrating two data preprocessing technologies (VMD and BC) and a modal selection method (LASSO) into the SVM.
  Extract 2: The VMD method was employed to extract multiple intrinsic mode functions (IMFs) and eliminate non-stationarity. The Box–Cox (BC) transformation was then applied to alleviate skewness characteristics and enhance the homogeneity of variance.
  Limitations: []
  Relevance Evaluation: {'highly_relevant': True, 'reasons': ['The context thoroughly discusses the purpose of the study, which is to enhance the accuracy of reference evapotranspiration (ETo) estimation in regions with limited meteorological data.', 'The context provides comprehensive details about the development of the hybrid VMD–BC–SVM model, which involves the integration of VMD, BC, and LASSO methods into the SVM model.', 'The context explains the role of VMD in extracting intrinsic mode functions (IMFs) to address non-stationarity and the use of BC transformation to mitigate skewness and improve homogeneity of variance.', "Moreover, the context clarifies the significance of the VMD–BC data processing technique in enhancing the SVM model's performance and the utilization of LASSO regression in identifying key driving modes of ETo."], 'relevance_score': 0.95}
  Relevance Score: 0.9
  Inline Citation: Yan Kang a b, Peiru Chen a, Xiao Cheng a, Shuo Zhang a, Songbai Song a b Show more
  Explanation: The purpose of the study is to improve the accuracy of reference evapotranspiration (ETo) estimation in regions with limited meteorological data. The hybrid VMD–BC–SVM model was developed by integrating two data preprocessing technologies (VMD and BC) and a modal selection method (LASSO) into the SVM.

The VMD method was employed to extract multiple intrinsic mode functions (IMFs) and eliminate non-stationarity. The Box–Cox (BC) transformation was then applied to alleviate skewness characteristics and enhance the homogeneity of variance. Finally, a novel data processing technique (VMD–BC) was developed to model the SVM. The LASSO regression was utilized to reduce the number of input variables and determine the key driving modes of ETo.

 Full Text: >
"Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods 3. Results 4. Discussion 5. Conclusion Declaration of Competing Interest Acknowledgments Appendix A. Supplementary material Data availability References Show full outline Cited by (7) Figures (9) Show 3 more figures Tables (10) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Extras (1) Supplementary material Agricultural Water Management Volume 273, 1 November 2022, 107882 Novel hybrid machine learning framework with decomposition–transformation and identification of key modes for estimating reference evapotranspiration Author links open overlay panel Yan Kang a b, Peiru Chen a, Xiao Cheng a, Shuo Zhang a, Songbai Song a b Show more Share Cite https://doi.org/10.1016/j.agwat.2022.107882 Get rights and content Highlights • A novel VMD-BC-SVM approach was proposed to estimate ETo. • VMD and Box-Cox were used to remove the non-stationarity and skewness of inputs. • LASSO regression was used to identify the key driving modes as optimal input. • VMD-BC-SVM model outperforms comparison models for estimation ETo. Abstract The accurate estimation of reference evapotranspiration (ETo) is a fundamental requirement for precision irrigation and regional water resource planning. In this regard, the application of the standard model, FAO-56 Penman–Monteith, is limited because of insufficient meteorological data. This study aims to improve the accuracy of ETo calculations in regions with scarce meteorological data. A hybrid model integrating two data preprocessing methods (variational mode decomposition (VMD) and Box–Cox transformation (BC)) into a support vector machine (SVM) model (VMD–BC–SVM) is proposed. The model estimates the daily ETo based on the meteorological data (1980–2019) of 10 stations in the Wei River Basin of China. The VMD method was employed to extract multiple intrinsic mode functions (IMFs) and eliminate non-stationarity. This is achieved by decomposing meteorological factors, which are further transformed by BC to alleviate skewness characteristics. The least absolute shrinkage and selection operator regression (LASSO) identifies the key driving modes from the transformed IMFs, which are used as the input of the SVM model. The VMD–BC–SVM estimation model framework based on decomposition–transformation–identification–estimation is proposed. The performance of each of the hybrid VMD–BC–SVM models was further compared with those of the standalone extreme learning machine (ELM) model and two empirical models (Hargreaves–Samani and Priestley–Taylor models). The results revealed that the hybrid models outperformed the single models. The VMD–BC–SVM model achieved higher accuracy compared with the other models. Specifically, the coefficient of correlation (R) and Nash–Sutcliffe efficiency coefficient (NSE) were both greater than 0.96. Furthermore, the mean absolute percentage error (MAPE) and root mean square error (RMSE) were less than 8.41% and 0.38 mm/d, respectively. In terms of the amount of information provided, the VMD–BC–SVM model is superior to empirical models in identifying high-dimensional and nonlinear information. Moreover, the estimation performance is more stable, and the level of uncertainty is lower. This study provides a novel approach for predicting ETo in regions with limited meteorological data. Previous article in issue Next article in issue Keywords Variational mode decompositionBox–Cox transformationSupport vector machineLeast absolute shrinkage and selection operatorWei River Basin 1. Introduction Reference evapotranspiration (ETo) is an essential variable for estimating crop water requirements and plays a key role in water resource management in irrigated areas (Paredes et al., 2018, Valle Júnior et al., 2020, Fan et al., 2021). The estimation methods for ETo include empirical formulae and measurement methods, which require personnel and equipment and have limitations and high costs (Gomariz-Castillo et al., 2017, Shirmohammadi-Aliakbarkhani and Saberali, 2020). Accordingly, the use of the empirical formula has become the main technique for estimating ETo. The United Nations Food and Agriculture Organization (FAO) has endorsed the FAO-56 Penman–Monteith (FAO-56P–M) model as the standard method for estimating ETo (Allen et al., 1998) that comprehensively considers the driving effect of various meteorological variables. However, the application of the FAO-56P–M model is limited by its high dependency on meteorological factors. Therefore, simplifying the ETo estimation is necessary using techniques, such as the Hargreaves–Samani (H–S) (Hargreaves et al., 1985), Priestly–Taylor (P–T) (Priestley et al., 1972), Makkink (Chen et al., 2018), and 48 Penman models (Qualls and Crago, 2020). However, the lack of meteorological data results in low model estimation accuracy and inadequate universality. Consequently, researchers have explored non-linear approaches to improve the estimation accuracy. Machine learning models have been broadly applied to ETo modeling (Ferreira and da Cunha, 2020) in data-scarce regions. These models include neural networks (Abdullah et al., 2015, Feng et al., 2016, Antonopoulos and Antonopoulos, 2017), support vector machines (SVMs) (Kundu et al., 2016; Ehteram et al., 2019; Chia et al., 2020; Mohammadi and Mehdizadeh, 2020), and tree-based assembly models (Fan et al., 2018, Huang et al., 2019, Zhang et al., 2020, Wu et al., 2020). Wen et al. (2015) developed four input combination strategies based on temperature data. They constructed an SVM model to estimate ETo in the absence of meteorological data in arid areas. The accuracy of the model was found to be higher than those of the Priestley–Taylor and empirical models. The implementation of machine learning models in ETo estimation was investigated by Mohammadi and Mehdizadeh (2020). They also proved that SVM had excellent estimation accuracy when applied to three different climate stations in Iran (including arid, semi-arid, and humid regions) based on different types of meteorological combinations. Another study was conducted by Feng et al. (2017) to compare the performance of extreme learning machine (ELM) and generalized regression neural network (GRNN) models in estimating ETo with temperature-based data. The ELM model was found to provide slightly better estimates of ETo than the GRNN and Hargreaves models. Published articles in literature report that SVM and ELM are widely applied to ETo calculation, both yielding satisfactory estimates. In addition, the stability of the SVM structure enables it to be used as a fundamental model for developing different data processing methods. Researchers have developed many models for ETo estimation using different meteorological factors, indicating that ETo mainly depends on meteorological factors. However, the meteorological factors affecting ETo are complex, highly non-stationary, and seasonally irregular. Therefore, achieving satisfactory accuracy for daily ETo estimation using a single model with meteorological factors as inputs is difficult if collected data are not preprocessed. Over the last few years, hybrid models have received considerable attention because of their improved simulation ability in terms of ETo estimation. To reduce the complexity and non-stationarity of an original time series and improve estimation accuracy, many authors have introduced signal decomposition techniques (Feng et al., 2014; Gocić et al., 2015; Luan, 2017; Qasem et al., 2019). These methods include empirical mode decomposition (EMD) and wavelet transform (WT), which decompose meteorological data into a relatively stable sub-series and enhance the correlation between ETo and meteorological factors. The successful modeling results of these studies confirmed the suitability of decomposition techniques for enhancing machine learning models. Fu et al. (2021) proposed hybrid models for estimating the monthly ETo coupled with discrete WT (DWT), ensemble EMD (EEMD), and variational mode decomposition (VMD) to decompose ETo and extract the main variation features. Their proposed models ignored the non-stationarity and complexity of meteorological factors. The VMD-based model was found to have higher estimation accuracy than the DWT and EEMD (Fu et al., 2021). The VMD technology has achieved remarkable results in multidisciplinary fields (Guo et al., 2020; Sun and Zhao, 2020; Feng et al., 2020; Li et al., 2021; Carvalho and de Assis de Souza Filho, 2021). However, the technology has not been developed for daily ETo estimation by decomposing meteorological factors. It is a completely non-recursive signal decomposition method based on the frequency domain (Dragomiretskiy et al., 2014). Compared with EMD and WT techniques, VMD not only overcomes the endpoint effect and mode aliasing problems existing in EMD but also reduces the model test steps, improves the model accuracy, and does not require choosing a basis function as WD. The decomposition of meteorological factors using VMD not only solves the limitation of ETo estimation in data-scarce regions but also affects the use of non-stationary input factors in model estimation. Owing to the high non-stationarity and intrinsic complexity of meteorological factors, combining VMD methods to establish a hybrid estimation model without adequate meteorological data is highly desirable. Decomposition technology can effectively improve data stability (Song et al., 2021); however, it does not consider the influence of data symmetry and variance homogeneity on simulation accuracy. To resolve these problems, researchers have focused on data transformation methods. Amin et al. (2019) devised a model using data transformation methods and presented an extensive comparison to validate the impact of these methods. The results demonstrated that most data transformation methods improve model performance. The Box–Cox transformation (BC) has been widely applied to the field of signal science (Cai et al., 2021, Wang et al., 2021), hydrology frequency analysis, and calculations (Seong, 2014). However, no study on ETo estimation and meteorological factor transformation has ever been conducted. The BC method belongs to the family of power transformation methods (Box and Cox, 1964). It not only improves data smoothness, symmetry, and the homogeneity of variance and retains the information of the original dataset but also enhances the correlation between meteorological factors and ETo. In view of its importance in hydroclimatic research, the reliable estimate and modeling of ETo using a series of new methods are highly preferred. The improvement of model performance to estimate ETo by creating hybrid models (such as those integrated with a decomposition technique) has been well demonstrated. Accordingly, the present study aims to incorporate the ability to model the daily ETo accurately using a hybrid data preprocessing technique combined with VMD and BC. The input variables of the models can affect their estimation accuracy. Some researchers have proposed using meteorological factors as model inputs to estimate ETo (Pammar et al., 2017; Feng et al., 2017; Chia et al., 2020). Fu et al. (2021) used the decomposition series of history ETo as input for machine learning. Meteorological elements are non-stationary and complex; however, the foregoing studies did not consider the decomposition of meteorological factors. Some scholars have proposed estimating ETo by considering all the modes (i.e., intrinsic mode functions (IMFs)) of decomposed meteorological factors as model input and achieved satisfactory results (Gocić et al., 2015, Qasem et al., 2019). Evidently, the input variable of the model is the foremost problem in ETo simulation; hence, it is a topic worthy of in-depth discussion. However, the driving effects of different modes of meteorological factors on ETo estimation have not been explored in the aforementioned research works. Whether some modes of meteorological factors have a more effective driving effect on ETo estimation than others remain to be further examined. This must be expected to avoid the overfitting risk of models and improve the estimation ability by introducing mode identification. Yu et al. (2022) identified the optimal feature after eliminating the redundant features using the least absolute shrinkage and selection operator (LASSO), which effectively reduces the model complexity. The LASSO regression, a variable selection method for nonnegative disturbance excitations (Sethi and Mittal, 2021), is a popular method for high-dimensional applications in machine learning. As such, LASSO can be used to identify the key driving modes of the decomposed meteorological factors in this study. The study is aims to achieve the following. 1) Decompose the meteorological factors into different modes (IMFs) using VMD and thus overcome the influence of highly non-stationary inputs on model estimation. 2) Normalize IMFs by employing BC to reduce the skewness of the meteorological factors. 3) Identify the optimal key modes (IMFs) of each meteorological factor as the SVM input using LASSO. 4) Develop a novel hybrid VMD–BC–SVM model incorporating “decomposition–transformation–identification–estimation” and test it using the daily meteorological factors collected from the Wei River Basin. 5) Evaluate the performance of VMD–BC–SVM by comparing it with single and empirical models using evaluation indices and a mutual information neural estimator (MINE). 2. Materials and methods 2.1. Study area and data This study is conducted in the Wei River Basin (China), which is the first tributary of the Yellow River. The basin has a trunk length of 818 km. It is located between 103.5° and 110.5°E and 33.5–37.5°N, covering an area of approximately 13.5 × 104 km2 (Chen et al., 2021). The basin is located in the transition zone between arid and semi-arid regions and has a continental monsoon climate. Because of topography, precipitation is unevenly distributed in space. Precipitation decreases from the southeast to the northwest (Xu et al., 2021) with an annual average of 500–800 mm; the surface evaporation is 700–1000 mm. The study was conducted in 10 meteorological stations from the national web with different geographical characteristics. Four stations (Wugong and Xiji stations in the mainstream district and Wuqi and Xifeng stations in the Jing River and Beiluo River) were used as representatives of each district to describe the modeling process in detail. Data from the other six stations were used to analyze the applicability of the models to the Wei River Basin. The locations of the meteorological stations were identified on the map shown in Fig. 1. Daily meteorological data were collected from the China Meteorological Data Network (http://data.cma.cn) from 1980 to 2019 (data points). These include the maximum, minimum, and mean temperatures (Tmax, Tmin and Tmean, respectively), relative humidity (RH), wind speed at a height of 10 m (u10), and sunshine duration (SSD). The datasets were measured and collected at the elevations of the meteorological stations and were representative of regional weather conditions. To determine partially missing meteorological data, the Lagrange interpolation method was used because of its robustness and capability to flexibly adjust data order (Prasopchingchana, 2022). The datasets were classified into two parts: model training (1980–2007) and testing (2008–2019). Details of the stations are summarized in Table 1. Download : Download high-res image (218KB) Download : Download full-size image Fig. 1. Locations of meteorological stations in the study area. Table 1. Details and mean values of meteorological data for different stations from 1980 to 2019. ID Stations Longitude (N) Latitude (E) Elevation (m) Tmean (℃) Tmax (℃) Tmin (℃) U10 (m/s) SSD (h) RH (%) 53738 Wuqi 108°01′ 36°55′ 1331.4 8.27 16.21 2.01 1.41 6.77 60 53929 Wugong 108°13′ 34°15′ 447.8 13.6 19.29 9.14 1.38 4.85 71 57016 Xiji 105°43′ 35°58′ 1916.5 6.01 13.13 0.42 1.90 6.33 65 53923 Xifeng 107°38′ 35°44′ 1421 9.46 14.49 5.45 2.20 6.63 61 53942 Huajialing 105°01′ 35°23′ 2450.6 4.09 8.78 0.89 4.74 6.6 70 53942 Luochuan 109°25′ 35°46′ 1159.8 10.05 15.95 5.05 2.05 6.79 61 53821 Huanxian 107°18′ 36°34′ 1255.6 9.38 16.50 3.62 1.78 6.91 58 53929 Changwu 107°48′ 35°12′ 1206.5 9.57 15.66 4.49 2.13 5.66 68 53942 Baoji 107°08′ 34°21′ 612.4 14.4 19.15 9.68 3.05 5.25 72 57016 Tianshui 105°45′ 34°35′ 1141.6 11.59 17.62 7.04 2.20 6.47 66 2.2. Data preprocessing 2.2.1. Variational modal decomposition The VMD technique, an adaptive and completely non-recursive mode variational and signal processing method (Dragomiretskiy and Zosso, 2014), is an effective separation and frequency domain division of the intrinsic modal sequence. It is effective for obtaining the decomposition sequence to finally derive the optimal solution of a variational problem. In this study, each meteorological series, f(t), is adaptively decomposed into K IMFs to ensure that the decomposed sequence is a mode series with limited bandwidth and central frequency; the sum of the estimated bandwidths of each mode is minimum. The constraint condition is that the sum of all modes is equal to that of the original sequence. The corresponding constraint variational model is constructed as: (1) where is the set of decomposed modes; is the set of decomposed modal center frequencies; represents the convolution operator; is the partial derivative with respect to time t; and is the Dirac function. The quadratic penalty factor and Lagrange multiplier are introduced to solve the foregoing problems. The alternate direction multiplier iterative algorithm is used to search for the optimal solution, i.e., the saddle point of the Lagrange function. The decomposition of meteorological data through the VMD model can reduce the instability and volatility of the series as well as improve the correlation between meteorological factors and ETo. 2.2.2. Box-Cox transformation The BC method, a generalized power transformation technique (Box and Cox, 1964), estimates parameter λ by the maximum likelihood estimation or Bayesian method and then determines the data transformation form. The BC method can improve data independence, stationarity, and homogeneity of variance without losing the original sequence information. Then, it can transform the model into: (2) where y(λ) is the new variable after transformation, and a is the translated coefficient such that all components of the original variable, y, become positive. Because the maximum likelihood estimation method is simple and entails minimal calculation, this study uses this method to solve λ. The model input meteorological factors are transformed using BC according to the λ value, reducing the correlation between the unobtainable error and ETo. 2.3. Support vector machine The SVM model finds the best separation hyperplane in feature space such that the interval among the training sample points farthest from the plane is the largest. After the kernel method is introduced, SVM can deal with nonlinear problems (Essam et al., 2022). The model is based on the principle of minimizing structural risk and has satisfactory generalization ability. Let the training dataset be , where xi and yi indicate the ith input and output vectors, respectively. The SVM optimization can be expressed as: (3) (4) where C is the penalty factor; and are the slack variables; and is the insensitive loss coefficient. The Lagrange function was introduced to transform the optimization problem into a duality problem and then solve it; an SVM nonlinear mapping model was also obtained. The function is: (5) where αi is the Lagrange multiplier; K (x, xi) is the kernel function; and b is the bias coefficient. The radial basis kernel function (RBF) and the linear, polynomial, and sigmoid kernel functions are the four types of kernel functions commonly used. The linear kernel function is a special case of RBF. The polynomial and sigmoid kernel functions involve more parameters. The latter approximates the RBF under some parameters. In summary, the RBF is selected as the kernel function of the SVM in this study. 2.4. Proposed VMD–BC–SVM hybrid model This paper proposes a novel hybrid VMD–BC–SVM model based on a “decomposition–transformation–identification–estimation” framework to estimate the daily ETo; the flowchart is presented in Fig. 2. The VMD–BC–SVM model is developed as follows. ● Meteorological factors are decomposed into multiple modes (IMFs) employing VMD. ● All modes (IMFs) are normalized using BC. ● The key driving modes (IMFs) that are highly correlated with ETo are identified using LASSO regression. ● The proposed VMD–BC–SVM estimation model is developed with the identified key driving modes (IMFs) as the SVM model input. Download : Download high-res image (287KB) Download : Download full-size image Fig. 2. Overall flowchart of the study. 2.5. Empirical models for estimating ETo In this study, the ETo calculated from the FAO-56P–M model was used as the standard value, and the H–S (Hargreaves and Samani, 1985) and P–T (Priestley et al., 1972) empirical models are used for comparison. The specific calculation formulae are listed in Table 2. Table 2. Empirical models of reference evapotranspiration. Model Formula Input meteorological factors Penman-Monteith Tmax, Tmin, RH, SSD, u2 Hargreaves-Samani Tmax, Tmin Priestley-Taylor Tmax, Tmin, RH, SSD In Table 2, ETo,P–M, ETo,H–S and ETo,P–T (mm/d) are the ETo estimated by P–M, H–S, and P–T, respectively; is the slope of the saturation vapor pressure curve (kPa/°C); Rn is the net radiation (MJ/(m2/d)); Ra is the extraterrestrial radiation (MJ/(m2/d)); G is the soil heat flux, (MJ/(m2/d)); is the psychrometric constant (kPa/°C); Tmax, Tmin, and T are the maximum, minimum, and mean daily air temperatures (°C), respectively; U2 is the wind speed at a 2-m height (m/s); and es and ea are the saturation and actual vapor pressures (kPa), respectively. The study area includes arid and semi-arid regions; thus, the empirical coefficients, C and E, are set to 0.0023 and 0.5, respectively (Hargreaves and Samani, 1985). For comparison with the H–S and P–T models, the selected input combinations of meteorological factors are listed in Table 3. The study yielded two input combinations for daily ETo modeling at all stations: the combination of Tmax and Tmin and that of Tmax, Tmin, SSD, and RH. Table 3. Input combinations of meteorological factors for the studied models. Model Inputs Output models-2, H-S Tmax, Tmin ETo models-4, P-T Tmax, Tmin, RH, SSD ETo 2.6. Model performance evaluation 2.6.1. Mutual information neural estimator The MINE is optimized by a neural network (Ozdenizci and Erdogmus, 2021; Zbili and Rama, 2021) and can process random variables with arbitrary distributions in any dimension. Mutual information (MI) reveals the influence of internal implicit information, such as variables and simulation results, on model performance; however, MI has no clear upper limit. The closer the MI between the estimated and standard values to the information entropy of the standard value, the better the model estimation effect. The following expresses MI: (6) where P is the joint distribution, p(x, y), of X and Y; Q is the product of the edge distribution, , of X and Y; and function T is fitted by a neural network. The foregoing equation is regarded as a loss function, and the loss value reaches the maximum through gradient rise until convergence. The maximum value is the estimator of MI. 2.6.2. Evaluation indices Previous studies have evaluated the estimation accuracy of the model from the perspective of error through evaluation indices and rarely discussed model performance in terms of information. Therefore, the accuracy and performance of the models investigated for daily ETo estimations were evaluated using the following. The MI technology (Eq. (6)) and four commonly used evaluation metrics are combined: mean absolute percentage error (MAPE), Nash–Sutcliffe efficiency coefficient (NSE), coefficient of correlation (R), and root mean square error (RMSE). The MAPE and RMSE metrics were used to assess the actual situation of the estimated value error ranging [0, + ∞]. Small MAPE and RMSE values indicate improved model performance (Guo et al., 2021; Chen et al., 2022); models with MAPE and RMSE values that are less than 30% and 0.7, respectively, are excellent. The R and NSE metrics are generally used to evaluate the stability and model fitting effect. The closer their values are to 1, and when they exceed 0.6, the better the model fitting effect. These metrics can be expressed as: (7) (8) (9) (10) where and are the ith standard and estimated values of ETo, respectively; and are the averages of and , respectively; and N is the number of samples. 3. Results 3.1. Meteorological factor decomposition based on VMD The VMD method was used to decompose meteorological factors into a series of modes (IMFs) with different frequencies. The number of decomposition layers is known to be crucial to the accuracy of the model (Wen et al., 2019). In this study, the decomposition layer, K, was set to have 3–7 layers in advance to determine the specific number of decomposition layers according to the fitting degree of the training period. The VMD–BC–SVM model selected six layers that outperformed the other layers at the Wugong station. Therefore, Tmax, Tmin, SSD, and RH were decomposed into six layers. The results are shown in Fig. 3. The other stations adopted the same method to select the number of layers (Table 5). The results showed that the effect was significant, although the workload was more complicated. Download : Download high-res image (1MB) Download : Download full-size image Fig. 3. Decomposition signal by VMD for meteorological factors at Wugong Station: (a) Tmax, (b) Tmin, (c) SSD, (d) RH. 3.2. Parameters of BC and key driving modes Each decomposed mode is normalized by BC. The values of the transformation parameter, λ (which determines the function type that the BC employs), are listed in Table 4. To demonstrate the effect of BC, normalization was adopted as the data processing method for comparison. Table 4. The transformation parameter λ values of each mode decomposed. Station Model Meteorological factors IMF1 IMF2 IMF3 IMF4 IMF5 IMF6 Wuqi VMD–BC–SVM-2 Tmax 1.00 1.09 1.06 1.05 1.11 – Tmin 0.88 0.96 1.03 1.01 0.91 – VMD–BC–SVM-4 Tmax 0.97 1.08 1.05 1.03 1.04 1.19 Tmin 0.86 0.95 1.04 1.03 1.01 1.06 RH 1.37 1.28 1.07 1.06 1.14 1.04 SSD 1.17 0.97 1.01 1.02 1.05 1.15 Wugong VMD–BC–SVM-2 Tmax 0.87 1.08 1.07 1.05 1.00 Tmin 0.75 1.01 1.06 1.02 0.93 VMD–BC–SVM-4 Tmax 0.87 1.07 1.07 1.06 1.03 1.02 Tmin 0.75 0.99 1.05 1.03 1.03 1.05 RH 1.62 1.02 1.02 1.03 1.07 1.10 SSD 0.79 0.98 1.02 1.03 1.07 1.06 Xiji VMD–BC–SVM-2 Tmax 0.94 1.09 1.05 1.05 1.14 – Tmin 1.02 1.06 1.01 1.00 1.03 – VMD–BC–SVM-4 Tmax 0.94 1.09 1.05 1.05 1.14 – Tmin 1.02 1.06 1.01 1.00 1.03 – RH 1.41 1.16 1.03 1.03 1.05 – SSD 2.56 1.01 1.05 1.05 1.13 – Xifeng VMD–BC–SVM-2 Tmax 0.94 1.07 1.06 1.06 1.07 Tmin 0.86 1.14 1.11 1.08 1.00 VMD–BC–SVM-4 Tmax 0.94 1.07 1.06 1.06 1.07 Tmin 0.86 1.14 1.11 1.08 1.00 RH 1.22 0.95 1.00 1.03 1.05 SSD 1.46 1.18 1.05 1.04 1.06 The LASSO regression compresses the variable coefficients by constructing penalty functions such that some coefficients with small absolute values can be directly set to zero. These variables are deleted to achieve dimensionality reduction and parameter selection concurrently (Sethi and Mittal, 2021). The importance of each mode (i.e., IMF) and ETo at the four stations using the VMD–BC–SVM models is compared using heat maps. The regression coefficients that determine the importance of IMFs based on the input of the two and four factors are shown in Fig. 4, Fig. 5, respectively. The exact values of the regression coefficients can be found in the Excel spreadsheet provided as supplementary data. The key driving factors with a high regression coefficient as model inputs are beneficial for improving the model efficiency. The numbers of key driving modes and decomposition layers using different input combinations are summarized in Table 5. Download : Download high-res image (102KB) Download : Download full-size image Fig. 4. The importance between each mode (IMFs) and ETo (i.e. regression coefficients of LASSO) at four Stations (Models input Tmax and Tmin). Download : Download high-res image (145KB) Download : Download full-size image Fig. 5. The importance between each mode (IMFs) and ETo (i.e. regression coefficients of LASSO) at four Stations (Models input Tmax, Tmin, SSD and RH). Table 5. The decomposition layers and number of key driving modes at different station. Station Models Decomposition layers (K) The number of key driving modes (i.e. prediction factors) Wuqi VMD–BC–SVM-2 5 8 VMD–BC–SVM-4 6 21 Wugong VMD–BC–SVM-2 5 8 VMD–BC–SVM-4 6 20 Xiji VMD–BC–SVM-2 5 7 VMD–BC–SVM-4 5 17 Xifeng VMD–BC–SVM-2 5 10 VMD–BC–SVM-4 5 17 The regression coefficient based on the input of the two factors is shown in Fig. 4. The figure shows that the maximum and minimum temperatures are decomposed into five layers at each station. The number of selected modes is summarized in Table 5. All the modes were selected as inputs for Xifeng station. The lowest value of the regression coefficient among the 10 modes was IMF3Tmin (0.086), which can be viewed in the supplementary data. The lowest values in the selected modes of Wuqi, Wugong, and Xiji stations are 0.085 (IMF4Tmin), 0.085 (IMF2Tmin), and 0.097 (IMF5Tmin), respectively. This indicates that the selection of a mode with regression coefficients exceeding 0.08 as the model input is more advantageous. Similarly, the lowest regression coefficients in the selected modes at Wuqi, Wugong, Xiji, and Xifeng stations were 0.022 (IMF3RH), 0.035 (IMF5RH),0.045 (IMF4RH), and 0.022 (IMF4RH), respectively, as observed in Fig. 5. This indicates that IMFs with a value exceeding 0.02 can be used as a model input based on the four-factor model. 3.3. Estimated results of single model The RBF was used for the SVM model; was 0.01; and the penalty factor, C, and kernel function parameter, g, were 1 and 2, respectively. The activation function and number of hidden nodes of the ELM model for a training dataset were the sine function and 40, respectively. The simulation accuracies of the two-factor and four-factor single models are listed in Table 6, Table 7, respectively. Based on the results of the four stations, the MAPE ranges of the SVM-2 and ELM-2 models were 20.97% (Wugong)–23.77% (Wuqi) and 21.24% (Wugong)–25.18% (Wuqi), respectively. The R, NSE, and RMSE metrics indicate similar performance levels. The optimal MAPE for the SVM-4 model was 12.51% (Wuqi). The results show that the simulation accuracy of the SVM is better than that of the ELM. The SVM model adopts the principle of structural risk minimization. It obtains a unique solution that compensates for the disadvantages of ELM, which has a low learning rate and easily falls into the local minimum. Table 6. Estimation evaluation of each model under Tmax and Tmin at four stations. Station Models Training Testing MAPE (%) R NSE RMSE (mm·d−1) MAPE (%) R NSE RMSE (mm·d−1) Wuqi ELM-2 27.98 0.907 0.823 0.69 25.18 0.917 0.841 1.03 SVM-2 26.54 0.905 0.818 0.69 23.77 0.917 0.840 1.04 VMD–ELM-2 26.64 0.917 0.842 0.65 23.88 0.933 0.869 0.95 VMD–SVM-2 23.38 0.922 0.850 0.63 21.74 0.936 0.877 0.93 BC–ELM-2 20.72 0.932 0.869 0.59 19.23 0.939 0.882 0.88 BC–SVM-2 19.77 0.931 0.865 0.60 18.16 0.940 0.883 0.89 VMD–BC–ELM-2 15.89 0.949 0.901 0.51 14.76 0.959 0.919 0.75 VMD–BC–SVM-2 14.49 0.951 0.904 0.50 13.60 0.961 0.922 0.74 H-S 28.69 0.945 0.754 0.81 25.88 0.955 0.794 0.77 Wugong ELM-2 20.62 0.938 0.880 0.56 21.24 0.939 0.880 0.86 SVM-2 20.19 0.936 0.875 0.57 20.97 0.937 0.876 0.88 VMD–ELM-2 20.28 0.941 0.885 0.55 21.15 0.941 0.881 0.85 VMD–SVM-2 17.77 0.946 0.894 0.52 19.60 0.942 0.885 0.82 BC–ELM-2 15.65 0.956 0.915 0.47 16.57 0.957 0.915 0.73 BC–SVM-2 15.37 0.955 0.912 0.48 16.13 0.956 0.913 0.74 VMD–BC–ELM-2 11.20 0.970 0.942 0.39 12.03 0.969 0.937 0.61 VMD–BC–SVM-2 9.86 0.973 0.946 0.37 11.03 0.971 0.940 0.59 H-S 29.55 0.951 0.742 0.82 30.81 0.945 0.736 0.88 Xiji ELM-2 21.67 0.930 0.865 0.55 24.51 0.930 0.857 0.85 SVM-2 20.67 0.928 0.860 0.56 22.70 0.928 0.859 0.85 VMD–ELM-2 20.38 0.938 0.880 0.52 23.36 0.939 0.873 0.79 VMD–SVM-2 17.58 0.943 0.889 0.50 21.01 0.941 0.879 0.77 BC–ELM-2 16.67 0.947 0.897 0.48 18.40 0.948 0.894 0.74 BC–SVM-2 16.03 0.946 0.893 0.49 17.15 0.947 0.895 0.74 VMD–BC–ELM-2 12.94 0.961 0.924 0.41 14.17 0.962 0.921 0.63 VMD–BC–SVM-2 11.37 0.964 0.929 0.40 12.90 0.963 0.923 0.62 H-S 19.98 0.959 0.870 0.54 21.09 0.960 0.868 0.58 Xifeng ELM-2 22.10 0.930 0.866 0.62 21.66 0.926 0.856 0.98 SVM-2 21.53 0.928 0.861 0.63 21.16 0.923 0.852 1.00 VMD–ELM-2 21.13 0.940 0.883 0.58 20.58 0.936 0.875 0.90 VMD–SVM-2 19.19 0.943 0.890 0.56 19.61 0.937 0.877 0.89 BC–ELM-2 17.53 0.948 0.900 0.54 17.53 0.945 0.893 0.85 BC–SVM-2 17.10 0.947 0.896 0.55 17.11 0.944 0.891 0.87 VMD–BC–ELM-2 12.16 0.967 0.935 0.43 12.32 0.965 0.930 0.68 VMD–BC–SVM-2 11.00 0.969 0.939 0.42 11.62 0.965 0.932 0.66 H-S 20.21 0.942 0.879 0.59 20.60 0.939 0.871 0.60 Note: The best-performing models are highlighted in bold at each station. Table 7. Estimation evaluation of each model under Tmax, Tmin, SSD and RH at four stations. Station Models Training Testing MAPE (%) R NSE RMSE (mm·d−1) MAPE (%) R NSE RMSE (mm·d-1) Wuqi ELM-4 16.88 0.973 0.948 0.37 13.88 0.980 0.960 0.55 SVM-4 15.17 0.975 0.950 0.36 12.51 0.982 0.963 0.53 VMD–ELM-4 18.47 0.969 0.938 0.40 15.73 0.974 0.948 0.59 VMD–SVM-4 11.56 0.982 0.964 0.31 13.00 0.978 0.956 0.49 BC–ELM-4 12.11 0.981 0.963 0.31 10.45 0.986 0.972 0.46 BC–SVM-4 11.07 0.982 0.964 0.31 9.52 0.987 0.974 0.45 VMD–BC–ELM-4 10.56 0.979 0.958 0.33 10.24 0.984 0.966 0.48 VMD–BC–SVM-4 5.25 0.992 0.985 0.20 8.41 0.984 0.967 0.38 P-T 17.03 0.963 0.904 0.51 16.00 0.974 0.919 0.45 Wugong ELM-4 13.54 0.978 0.957 0.33 14.21 0.978 0.955 0.51 SVM-4 12.81 0.979+ 0.957 0.33 13.32 0.978 0.957 0.51 VMD–ELM-4 14.73 0.975 0.950 0.36 15.72 0.974 0.948 0.55 VMD–SVM-4 8.52 0.988 0.977 0.24 13.78 0.976 0.952 0.45 BC–ELM-4 9.73 0.986 0.973 0.26 10.33 0.985 0.971 0.41 BC–SVM-4 9.28 0.987 0.973 0.26 9.92 0.986 0.972 0.41 VMD–BC–ELM-4 7.67 0.988 0.977 0.25 8.21 0.987 0.973 0.39 VMD–BC–SVM-4 4.10 0.997 0.993 0.13 7.24 0.987 0.974 0.31 P-T 17.09 0.969 0.898 0.51 18.15 0.967 0.909 0.52 Xiji ELM-4 13.66 0.979 0.959 0.30 15.15 0.981 0.955 0.47 SVM-4 11.94 0.981 0.962 0.29 13.32 0.982 0.959 0.45 VMD–ELM-4 13.67 0.980 0.961 0.30 15.04 0.983 0.957 0.46 VMD–SVM-4 6.39 0.994 0.988 0.17 13.28 0.984 0.961 0.35 BC–ELM-4 9.70 0.986 0.973 0.25 10.53 0.988 0.970 0.38 BC–SVM-4 9.12 0.987 0.974 0.24 9.98 0.988 0.971 0.38 VMD–BC–ELM-4 8.28 0.988 0.977 0.23 8.70 0.990 0.974 0.36 VMD–BC–SVM-4 4.40 0.996 0.992 0.13 7.38 0.990 0.975 0.28 P-T 16.59 0.973 0.904 0.46 14.79 0.982 0.919 0.42 Xifeng ELM-4 13.68 0.977 0.955 0.36 13.77 0.979 0.953 0.55 SVM-4 12.66 0.978 0.956 0.35 12.58 0.980 0.957 0.53 VMD–ELM-4 15.59 0.972 0.944 0.40 14.25 0.975 0.950 0.59 VMD–SVM-4 10.89 0.981 0.962 0.33 13.09 0.976 0.952 0.53 BC–ELM-4 10.72 0.984 0.968 0.30 10.57 0.985 0.968 0.46 BC–SVM-4 10.00 0.984 0.969 0.30 9.72 0.986 0.970 0.45 VMD–BC–ELM-4 8.54 0.986 0.973 0.28 8.55 0.987 0.973 0.43 VMD–BC–SVM-4 5.06 0.994 0.988 0.18 7.59 0.988 0.973 0.35 P-T 22.11 0.945 0.874 0.60 21.53 0.953 0.882 0.55 Note: The best-performing and empirical models are highlighted in bold at each station. 3.4. Estimated results of hybrid models To formulate hybrid models, meteorological factors were obtained by implementing VMD, BC transformation, and VMD–BC pre-processing. The results based on two-factor and four-factor inputs are summarized in Table 6, Table 7, respectively, and the errors are given in the bubble chart shown in Fig. 6. Download : Download high-res image (201KB) Download : Download full-size image Fig. 6. Error bubble charts of the estimated ETo for machine learning models: (a) models input Tmax and Tmin, (b) models input Tmax, Tmin, SSD and RH. Table 6, Table 7 indicate that VMD, BC, and VMD–BC can improve the estimation accuracy of the machine learning models. The performance of BC-based models was better than that of VMD-based models. The MAPE and RMSE ranges of the VMD–BC–SVM-2 model was 11.03% (Wugong)–13.6% (Wuqi) and 0.62% (Xiji)–0.74% (Wuqi), respectively. The R and NSE of the VMD–BC–SVM-2 model was more than 0.96 and 0.92, respectively, in the four sites. Among the models for the four stations, the model trained at the Wuqi station had the worst performance. The VMD–BC–ELM-2 model had an acceptable estimation; the Wugong station had the highest accuracy (MAPE = 12.03%, R = 0.97, NSE = 0.94, and RMSE = 0.61 mm/d). The VMD–BC-based models are the best among all the models. The data processing technology based on the fusion of VMD and BC can effectively improve the nonlinear mapping relationship between meteorological factors and ETo. Moreover, it has better performance and is suitable for the Wei River Basin. Table 6 indicates that the four-factor machine learning models have a higher estimation accuracy than the other models. The absence of SSD and RH lead to the absence of key parts of the mapping relationship; hence, the contribution of SSD and RH to the estimation accuracy of the models is positive. The results of the single and VMD-based models do not considerably differ. For example, the MAPE of the SVM-4 and VMD-SVM-4 models at Wuqi station were 12.51% and 13.00%, respectively. This positive effect deteriorates when VMD is used, indicating that the decomposition of meteorological factors may be unstable. The MAPE of the BC-based model reaches 9.52% (Wuqi station), indicating that the use of BC transformation to obtain meteorological factors is effective for model estimation. Therefore, a combination of VMD and BC was considered to estimate the ETo. During the test in Wuqi station, the evaluation indices of the MAPE, R, NSE, and RMSE of the VMD–BC–SVM-4 and VMD–BC–ELM-4 models reached 8.41–10.24%, 0.984, 0.97, and 0.38–0.48 mm/d, respectively; these were slightly worse than the indices of the other three stations. Similarly, for the four-factor input, the model tested at Wugong station exhibited the best performance among the four stations. The simulation accuracy of the VMD–BC–SVM model was higher than that of the other models. In summary, the ranks of the studied models in terms of estimation accuracy were VMD–BC–SVM, VMD–BC–ELM, BC–SVM, BC–ELM, VMD–SVM, and VMD–ELM. To evaluate the performance of the single and hybrid models, MAPE and RMSE were presented using bubble charts. A comparison of the eight machine learning models is shown in Fig. 6. Among all the models, VMD–BC–SVM and VMD–BC–ELM showed satisfactory performance during training and testing. The bubble charts clearly illustrate that the VMD–BC–SVM-4 model had the smallest error; MAPE ranged from 7% to 9% and RMSE was less than 0.44 mm/d. The foregoing indicates that the hybrid models based on VMD–BC have superior estimates compared with the other machine learning models. 3.5. Comparative analysis with empirical model The performance indicators of machine learning and empirical models based on two-factor and four-factor inputs for estimating the daily ETo at the four meteorological stations are summarized in Table 6, Table 7, respectively. The results show that the VMD–BC–SVM and VMD–BC–ELM models generally outperform the H–S and P–T models at all meteorological stations. The computing performance of the hybrid VMD–BC–SVM-2 model was better than that of the H–S model because MAPE decreased from 30.81% to 11.03% during the testing stage at Wugong Station. Table 6 indicates that the computing performance of the hybrid VMD–BC–SVM-4 model is better than that of the P–T model; MAPE decreased from 18.15% to 7.24% at the Wugong station. Therefore, the VMD–BC–SVM and VMD–BC–ELM models can replace the H–S and P–T empirical models under the same meteorological input conditions, respectively. Moreover, the VMD–BC–SVM model performs better than the VMD–BC–ELM model. 3.6. Model performance analysis based on mutual information neural estimator The performance of the VMD–BC–SVM and empirical models is evaluated in terms of information. The MI between simulated results and standard values as well as the high-dimensional MI between multiple meteorological factors and ETo using the MINE are shown in Fig. 7 and summarized in Table 8. The figure and table similarly indicate that the performance of the VMD–BC–SVM model is better than that of the H–S and P–T models. Moreover, the MI (X; Ystd) of the four meteorological factors and ETo is approximately 1.67 (Xifeng)–1.83 (Xiji), and the MI of the two meteorological factors is 1.18 (Xifeng)–1.32 (Wuqi). The foregoing indicates that multiple meteorological factors can provide more information for ETo estimation. The performance of the four-factor VMD–BC–SVM and P–T models in terms of MI (Ysim; Ystd) is the best at all the stations (1.61–2.83), followed by the VMD–BC–SVM-2 and H–S models (1.40–2.13). This indicates that a considerable amount of input data improves the accuracy of model simulation; this is consistent with the previous conclusion. In addition, the amount of information provided by the VMD–BC–SVM model exceeds that provided by the empirical formulae using the same input factors. The MI values of the VMD–BC–SVM-4 model are 2.60, 2.74, 2.83, and 2.71 at Wuqi, Wugong, Xiji, and Xifeng stations, respectively. These values are the closest to the information entropy of standard ETo (2.87, 2.75, 2.96, and 2.97, respectively). This indicates that the VMD–BC–SVM models can identify the information provided by meteorological factors. Moreover, the models have a strong ability to deal with high-dimensional and nonlinear information. The foregoing further shows that the structure and performance of machine learning models are superior to those of the H–S and P–T empirical models; this observation is consistent with the model performance resulting from the use of evaluation indices. The VMD–BC–SVM models are confirmed to have stable estimation performance. Download : Download high-res image (565KB) Download : Download full-size image Fig. 7. Mutual information estimation graphs: (a) Wuqi station, (b) Wugong station, (c) Xiji station, (d) Xifeng station. Table 8. Multiple meteorological factors and ETo estimates contain information from standard ETo. Station H (Ystd) 2 factors MI (X; Ystd) 4 factors MI (X; Ystd) H-S MI (Ysim; Ystd) VMD-BC-SVM-2 MI (Ysim; Ystd) P-T MI (Ysim; Ystd) VMD-BC-SVM-4 MI (Ysim; Ystd) Wuqi 2.87 1.32 1.80 1.70 1.93 2.17 2.60 Wugong 2.75 1.24 1.75 1.65 2.13 2.00 2.74 Xiji 2.96 1.31 1.83 1.80 2.05 2.37 2.83 Xifeng 2.97 1.18 1.67 1.40 1.98 1.61 2.71 Note: Ystd, standard value of ET0; Ysim, simulated value of ET0; X, combination of meteorological factors; H(Ystd), information entropy of standard ET0 (denoted as Ystd); MI (X; Ystd), mutual information between X and Ystd; MI (Ysim; Ystd), mutual information between Ysim and Ystd. 3.7. Spatial distribution of evaluation indices of models To illustrate the universality of the proposed models, the spatial distribution of the evaluation indices at 10 meteorological stations for the two-factor and four-factor models are shown in Fig. 8, Fig. 9, respectively. The specific evaluation indices for the other six stations are listed in Table 9, Table 10, respectively. In Fig. 8, the VMD–BC–SVM-2 model is shown to be superior to the other machine learning models and the H–S empirical model at all stations. In Fig. 9, the hybrid VMD–BC–SVM-4 model exhibits a higher estimation accuracy than the P–T empirical model. By comparing Fig. 8, Fig. 9, the four-factor machine learning models are found to outperform the two-factor models. This indicates that the ETo in the Wei River Basin is significantly affected by meteorological factors, specifically temperature, SSD, and RH. Table 9 indicates that the estimation results of the VMD–BC–SVM-2 model at Huanxian, Changwu, Baoji, and Tianshui stations are better than those of the other two stations. The MAPE and RMSE values are less than 12% and 0.7 mm/d, respectively. The results listed in Table 10 indicate that high R and NSE values exceeding 0.99 and 0.97, respectively, were obtained; the MAPE and RMSE values were less than 8 and 0.4, respectively. In terms of spatial distribution, the VMD–BC–SVM models were significantly better than the other models in the Wei River Basin. This indicates that the VMD–BC data processing technology proposed in this paper can effectively improve the simulation performance of the SVM model. Overall, the VMD–BC–SVM models perform better than the H–S and P–T empirical models and can be used to estimate the ETo in the Wei River Basin even when meteorological data are scarce. Download : Download high-res image (450KB) Download : Download full-size image Fig. 8. Spatial distribution of evaluation indices for different models in Wei River Basin (Models input Tmax and Tmin): (a) MAPE, (b) R, (c) NSE, (d) RMSE. Download : Download high-res image (466KB) Download : Download full-size image Fig. 9. Spatial distribution of evaluation indices for different models in Wei River Basin (Models input Tmax, Tmin, SSD and RH): (a) MAPE, (b) R, (c) NSE, (d) RMSE. Table 9. Estimation evaluation of models under Tmax and Tmin at other six stations. Model Station MAPE (%) R NSE RMSE (mm·d−1) Station MAPE (%) R NSE RMSE (mm·d−1) SVM-2 Huajialing 31.23 0.88 0.78 1.09 Changwu 21.82 0.92 0.85 0.98 VMD-SVM-2 31.03 0.90 0.81 0.98 20.71 0.93 0.87 0.90 BC-SVM-2 23.06 0.92 0.85 0.90 16.71 0.95 0.90 0.81 VMD-BC-SVM-2 14.59 0.96 0.91 0.67 11.04 0.97 0.94 0.62 H-S 33.23 0.87 0.71 0.80 23.75 0.94 0.81 0.68 SVM-2 Luochuan 24.00 0.90 0.80 1.06 Baoji 19.81 0.94 0.87 0.91 VMD-SVM-2 23.16 0.91 0.83 0.97 18.64 0.94 0.87 0.87 BC-SVM-2 20.00 0.92 0.85 0.93 15.76 0.96 0.91 0.77 VMD-BC-SVM-2 14.52 0.95 0.89 0.75 11.42 0.97 0.93 0.65 H-S 23.75 0.92 0.87 0.70 25.61 0.95 0.79 0.79 SVM-2 Huanxian 21.38 0.93 0.85 1.04 Tianshui 18.51 0.94 0.87 0.85 VMD-SVM-2 18.96 0.94 0.88 0.91 17.01 0.94 0.88 0.79 BC-SVM-2 16.90 0.95 0.89 0.90 14.90 0.95 0.90 0.73 VMD-BC-SVM-2 11.96 0.97 0.93 0.70 11.20 0.96 0.92 0.62 H-S 19.01 0.96 0.88 0.58 23.11 0.95 0.76 0.71 Note: The best-performing model is highlighted in bold at each station. Table 10. Estimation evaluation of models under Tmax, Tmin, SSD and RH at other six stations. Model Station MAPE (%) R NSE RMSE (mm·d−1) Station MAPE (%) R NSE RMSE (mm·d−1) SVM-4 Huajialing 11.34 0.99 0.97 0.42 Changwu 12.90 0.98 0.96 0.46 VMD-SVM-4 12.80 0.98 0.97 0.33 13.75 0.98 0.95 0.43 BC-SVM-4 9.27 0.99 0.98 0.36 9.58 0.99 0.97 0.38 VMD-BC-SVM-4 7.74 0.99 0.98 0.28 7.44 0.99 0.97 0.30 P-T 36.54 0.91 0.77 0.74 19.71 0.96 0.89 0.53 SVM-4 Luochuan 11.94 0.98 0.95 0.56 Baoji 13.27 0.98 0.96 0.55 VMD-SVM-4 12.82 0.97 0.94 0.48 13.80 0.98 0.95 0.47 BC-SVM-4 9.74 0.98 0.97 0.48 9.75 0.99 0.97 0.44 VMD-BC-SVM-4 8.15 0.98 0.96 0.39 7.40 0.99 0.97 0.32 P-T 23.85 0.94 0.86 0.65 14.29 0.98 0.94 0.38 SVM-4 Huanxian 11.42 0.98 0.96 0.54 Tianshui 11.06 0.98 0.96 0.48 VMD-SVM-4 11.43 0.98 0.96 0.49 9.71 0.98 0.97 0.38 BC-SVM-4 9.25 0.99 0.97 0.46 9.11 0.99 0.97 0.41 VMD-BC-SVM-4 7.50 0.99 0.97 0.36 6.53 0.99 0.98 0.30 P-T 19.23 0.96 0.91 0.54 12.94 0.98 0.93 0.38 Note: The best-performing model is highlighted in bold at each station. 4. Discussion In recent decades, machine learning and empirical models have been proposed to improve the accuracy and effectiveness of ETo estimation (Niu and Feng, 2021). Kisi et al. (2019) estimated the monthly potential ETo in the Sistan and Baluchistan provinces. They found that the SVM model generated more accurate estimates than the adaptive neuro-fuzzy inference system model (ANFIS) and gene expression programming (GEP) method. Tejada et al. (2022) also revealed that the SVM and ELM models showed similar modeling performance, and their accuracy was superior to that of the empirical models given the same input requirements. In this study, the SVM and ELM generally exhibited similar performance in estimating the daily ETo for the two-factor and four-factors models. However, the performance of the SVM model is slightly better than that of the ELM model. The SVM model has a lower MAPE for all input combinations than the ELM model. The results of ELM optimization can be easily trapped in the local minimum owing to the random determination of hidden bias and input weights. The SVM can handle extremely complex problems by mapping inputs into feature spaces through kernel function transformation. Furthermore, SVM learning can be expressed as a convex optimization problem; it solves the problem wherein the global minimum value cannot be obtained by ELM. For highly complex meteorological data, in some cases, single machine learning models cannot provide satisfactory estimation accuracy. To resolve this, many researchers have proposed hybrid models that introduce data preprocessing techniques to machine learning models. Data decomposition has been widely used to develop estimation models. Pammar et al. (2017) attempted to explore hybrid modeling using DWT and support vector machine regression (SVR) for evaporation estimation. They proved that hybrid DWT–SVR models are superior to conventional SVR models. Rezaie-Balf et al. (2019) proposed a hybrid model combining EEMD and SVM to predict monthly evaporation. The overall results showed that the EEMD has satisfactory application prospects in complex time series prediction. The VMD is a more robust and adaptive data preprocessing method than WT and EMD; thus, VMD is used to extract effective features from meteorological series. A novel hybrid approach for daily ETo estimation using VMD to decompose the original meteorological factors into multiple modes (i.e., IMFs) is proposed in this study. The daily ETo estimation accuracy of VMD-based model-2 was slightly higher than those of the empirical models. This shows that the decomposed modes are more stable and less volatile than the original series; therefore, the VMD-based model is more accurate than the single machine learning model. The VMD method improves the ability of the model by reducing the non-stationarity of highly complex and strongly nonlinear meteorological data. However, the performance of VMD-based model-4 was worse than that of the single model. This indicates that the skewness of the data may have a negative influence on the model, although the VMD model decomposes the four meteorological factors into a relatively stable mode. The application of data transformation methods to meteorological data can potentially mitigate these problems. Zhang et al. (2017) investigated whether applying different transformations (i.e., BC) affects the prediction. The study results show that BC leads to performance improvement in prediction models. The BC methods have been widely used in various research fields (Amin et al., 2019, Wang et al., 2021); however, the impact of BC methods on model performance has not been comprehensively explored in the field of evapotranspiration. This study proves that BC-based models are not only superior to the single model but also considerably better than the VMD-based models. As indicated by our investigation results, the BC method can improve the prediction performance; it is a power transformation method that reduces the correlation between the unobservable errors in meteorological data and ETo to a certain extent. The symmetry and variance of data and the strengthening of the correlation between meteorological factors and ETo are significantly improved by the BC method. Consequently, the accuracy of model simulation is significantly enhanced. The advantages of VMD-based and BC-based models are demonstrated in this study. A novel hybrid data processing technique (VMD–BC) was used to model the SVM model for the first time. The VMD method decomposes the meteorological factors into more stable modes (IMFs) to solve the impact of unstable sequences on the accuracy of model estimation. Furthermore, BC improved the symmetry and homogeneity of variance. In the datasets, VMD–BC–SVM is consistently foremost in terms of estimation accuracy, indicating that the VMD–BC–SVM model exhibits not only high accuracy but also stable performance. The reduction rates of MAPE for the best VMD–BC–SVM-4 models compared with those for the single SVM-4 models in this study (testing phase) were 34.9%, 45.6%, 44.6%, and 39.7% at Wuqi, Wugong, Xiji, and Xifeng stations, respectively (Table 7). Therefore, the hybrid models generated by coupling VMD–BC and SVM are highly desirable. When the same meteorological factors were used at the stations, the VMD–BC–SVM model performed better than the other machine learning models. This highlights the superiority of the VMD–BC–SVM model in dealing with complex and nonlinear relationships between ETo and driving meteorological factors. Hybrid VMD–BC data processing can achieve accurate signal separation and maintain time-varying characteristics. It can also improve homoscedasticity, normality, and additivity, which are suitable for the analysis of nonlinear and non-stationary signals. Therefore, the VMD–BC–SVM model is superior to the other methods. To the best of our knowledge, this hybrid data-processing technology (VMD–BC) has never been used in the field of ETo estimation. In this study, the extended method is applied to the field of ETo estimation to enrich existing knowledge. Previous research has solved the problem of non-stationary data using decomposed meteorological factors as model inputs (Luan, 2017, Qasem et al., 2019). However, the key driving effects of the decomposed modes (IMFs) of the meteorological factors on ETo estimation were not identified. It is considered in this study if some modes of the meteorological factors are more effective than the others for estimating ETo. The high-dimensional characteristics of the models render direct modeling complicated. Therefore, the use of effective statistical methods is necessary to select the key modes with high correlation and achieve data dimensionality reduction to improve the running efficiency of the model. To determine the key inputs of the model, the analysis of the relationship between predictors and response variables is important. In this study, LASSO regression was utilized to reduce the number of input variables and identify the key driving modes (i.e., prediction factors) of ETo. The LASSO regression is effective in reducing model complexity by decreasing the considerable variance caused by shrinking some coefficients to zero. The modes with regression coefficients exceeding 0.08 could be used as inputs into the two-factor model. Similarly, a mode with regression coefficients exceeding 0.02 is selected as the four-factor model input. The corresponding analysis results are shown in Fig. 4, Fig. 5. The importance of each modal factor is determined by LASSO via compression estimation to select features with high regression coefficients as inputs to the model. This is the first time that LASSO has been introduced as the modal selection method for ETo prediction. The performance of the models was evaluated using multiple evaluation indices (Table 6, Table 7); however, the impact of meteorological factors on model performance was not explored. The MINE can reflect the high-dimensional MI between multiple meteorological factors and ETo. It can also evaluate the model performance in terms of the amount of information (Fig. 7 and Table 8). The VMD–BC–SVM model simulation results provide better information than the H–S and P–T models (Fig. 7 and Table 8). The evaluation results of the other six station models (Fig. 8, Fig. 9; Table 9, Table 10) also proved the superiority of the VMD–BC–SVM model, indicating the model’s applicability to the research area. Thus, we propose the hybrid VMD–BC–SVM model as the best choice for estimating ETo in regions with scarce meteorological data. The estimation performance of the hybrid VMD–BC–SVM and VMD–BC–ELM models compared with those of the H–S and P–T empirical models was superior because of the ability of the machine learning models to map the ETo and meteorological factors better. The VMD–BC–SVM model performed better than the other machine learning models. Table 7, Table 8 clearly indicate that the VMD–BC–SVM model achieves the best performance in terms of MAPE, R, RMSE, and NSE for all stations. Regardless of the input combinations, the VMD–BC–SVM model performs better than the corresponding empirical models. This study proves that the VMD–BC–SVM model can be used as an alternative to empirical models. 5. Conclusion An accurate estimation of the daily ETo is essential for efficient water resource management and optimal irrigation scheduling, particularly because of the limited applicability of the P–M model in regions where meteorological data are scarce. This paper proposes a hybrid VMD–BC–SVM model for improving the daily ETo estimation accuracy in data-scarce regions. The model is created by integrating two data preprocessing technologies (VMD and BC) and a modal selection method (LASSO) into the SVM. The VMD–BC–SVM models were validated using two input combinations; the two-factor and four-factor combinations were compared with those of the H–S and P–T empirical models for the Wei River Basin. The main conclusions are as follows. ● The hybrid models offer better accuracy and stability than the single and empirical models. Among them, the hybrid VMD–BC–SVM models yielded the best performance for daily ETo modeling and can be used to replace the empirical models in estimating the daily ETo in data-scarce regions. ● The VMD model is a robust and self-adaptive data preprocessing method that can be used to extract effective features from a series. The original meteorological factors were decomposed into different modes (IMFs) using VMD, thereby reducing the complexity and non-stationarity of the input meteorological factors. This study proves that VMD can improve model estimation. ● The BC method improves data smoothness, symmetry, and the homogeneity of variance while retaining the information of the original meteorological data. Therefore, BC can effectively reduce the skewness of the data and improve the estimation accuracy of the models. ● A novel hybrid data processing technique (VMD–BC) was developed to model the SVM. The integration of VMD and BC can achieve accurate signal decomposition while maintaining time-varying characteristics and further improving homoscedasticity, normality, and additivity. Thus, the VMD–BC model strengthens the convergence and mapping ability of the SVM model. The data preprocessing ability of hybrid VMD–BC improved the model performance more effectively than the single data preprocessing methods. ● The multiple high-dimensional modes generated by VMD can influence the operational efficiency of the model. To reduce this effect, the key driving modes were selected as the input of the model from the different IMFs of meteorological factors using LASSO. Consequently, not only is overfitting prevented but the complexity of the model is also reduced by removing some redundant features. The hybrid VMD–BC–SVM model developed for the semi-arid region of China may not be directly applicable to other climatic regions in the world. The recommendation for future research is that the application of the proposed data preprocessing technology (VMD–BC) can be transferable to other regions. In this study, the modes with high regression coefficients were selected as the model input using only the LASSO regression based on the penalty term. Future studies can explore the potential of various modal identification methods, such as the filter and wrapper methods. Most studies have focused on estimating ETo using less amounts of meteorological data. However, improving the prediction accuracy of ETo is also important. For this objective, a hybrid machine learning model may be investigated for managing future water resources. Declaration of Competing Interest The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. Acknowledgments This research was funded by Science-Technology Plan Program of Water Conservancy Fund of Shaanxi Province, grant number 2019slkj-14, and National Natural Science Foundation of China under grant 5149222, 52079110. Sincere gratitude is extended to the editor and anonymous reviewers for their professional comments and corrections. Appendix A. Supplementary material Download : Download spreadsheet (13KB) Supplementary material . Data availability No data was used for the research described in the article. References Abdullah et al., 2015 S.S. Abdullah, M.A. Malek, N.S. Abdullah, O. Kisi, K.S. Yap Extreme learning machines: a new approach for prediction of reference evapotranspiration J. Hydrol., 527 (2015), pp. 184-195, 10.1016/j.jhydrol.2015.04.073 View PDFView articleView in ScopusGoogle Scholar Allen et al., 1998 R.G. Allen, L.S. Pereira, D. Raes, et al. Crop Evapotranspiration: Guidelines for Computing Crop Water Requirements. FAO Irrigation and Drainage Paper No. 56, FAO, Rome (1998) http://www.fao.org/3/X0490E/X0490E00.htm Google Scholar Amin et al., 2019 A. Amin, B. Shah, A.M. Khattak, F. Moreira, G. Ali, Á. Rocha, S. Anwar Cross-company customer churn prediction in telecommunication: a comparison of data transformation methods Int. J. Inf. Manag, 46 (2019), pp. 304-319, 10.1016/j.ijinfomgt.2018.08.015 View PDFView articleView in ScopusGoogle Scholar Antonopoulos and Antonopoulos, 2017 V.Z. Antonopoulos, A.V. Antonopoulos Daily reference evapotranspiration estimates by artificial neural networks technique and empirical equations using limited input climate variables Comput. Electron. Agric., 132 (2017), pp. 86-96, 10.1016/j.compag.2016.11.011 View PDFView articleView in ScopusGoogle Scholar Box and Cox, 1964 Box, G.E.P. Cox, D.R., 1964. An analysis of transformations. Journal of the Royal Statistical Society: Series B(Methodological). 26(2), 211–243.https://doi.org/10.1111/J.2517–6161.1964.TB00553.X. Google Scholar Cai et al., 2021 Z.W. Cai, X.L. Liu, W.W. Chen, Z. Sun, J. Ding A new wave crest distribution based on modified Box-Cox transformation and Rayleigh distribution Ocean Eng., 228 (2021), Article 108949, 10.1016/j.oceaneng.2021.108949 View PDFView articleView in ScopusGoogle Scholar Carvalho and de Souza Filho, F., 2021 T.M.N. Carvalho, de Assis de Souza Filho, F Variational mode decomposition hybridized with gradient boost regression for seasonal forecast of residential water demand Water Resour. Manag., 35 (10) (2021), pp. 3431-3445, 10.1007/s11269-021-02902-7 View in ScopusGoogle Scholar Chen et al., 2022 H. Chen, P. Gnanamoorthy, Y. Chen, L.R. Mansaray, Q. Song, K. Liao, A. Shi, G. Feng, C. Sun Assessment and Inter-Comparison of Multi-Source High Spatial Resolution Evapotranspiration Products over Lancang-Mekong River Basin Southeast Asia. Remote. Sens., 14 (2022), p. 479, 10.3390/rs14030479 Google Scholar Chen et al., 2018 N. Chen, Y. Zhang, C. Jin, A. Wang, D. Guan, L. Tian Intercomparison of three methods to estimate evapotranspiration over temperate meadow in Inner Mongolia: Penman-Monteith, Makkink and Priestley-Taylor equation Water Environ. J., 32 (4) (2018), pp. 500-507, 10.1111/wej.12347 View in ScopusGoogle Scholar Chen et al., 2021 X. Chen, Q. Quan, K. Zhang, J. Wei Spatiotemporal characteristics and attribution of dry/wet conditions in the Weihe River Basin within a typical monsoon transition zone of East Asia over the recent 547 years Environ. Model. Softw., 143 (2021), Article 105116, 10.1016/j.envsoft.2021.105116 View PDFView articleView in ScopusGoogle Scholar Chia et al., 2020 M.Y. Chia, Y.F. Huang, C.H. Koo Support vector machine enhanced empirical reference evapotranspiration estimation with limited meteorological parameters Comput. Electron. Agric., 175 (2020), Article 105577, 10.1016/j.compag.2020.105577 View PDFView articleView in ScopusGoogle Scholar Dragomiretskiy and Zosso, 2014 K. Dragomiretskiy, D. Zosso Variational mode decomposition IEEE Trans. Signal Process., 62 (3) (2014), pp. 531-544, 10.1109/tsp.2013.2288675 View in ScopusGoogle Scholar Ehteram et al., 2019 M. Ehteram, V.P. Singh, A. Ferdowsi, S.F. Mousavi, S. Farzin, H. Karami, N.S.B. Mohd, H.A. Afan, S.H. Lai, O. Kisi, M.A. Malek, A.N. Ahmed, A. El-Shafie An improved model based on the support vector machine and cuckoo algorithm for simulating reference evapotranspiration PLoS ONE, 14 (2019), 10.1371/journal.pone.0217499 Google Scholar Essam et al., 2022 Y. Essam, Y.F. Huang, J.L. Ng, A.H. Birima, A.N. Ahmed, A. El-Shafie Predicting streamflow in Peninsular Malaysia using support vector machine and deep learning algorithms Sci. Rep., 12 (1) (2022), p. 3883, 10.1038/s41598-022-07693-4 View in ScopusGoogle Scholar Fan et al., 2021 J. Fan, L. Wu, J. Zheng, F. Zhang Medium-range forecasting of daily reference evapotranspiration across China using numerical weather prediction outputs downscaled by extreme gradient boosting J. Hydrol., 601 (2021), Article 126664, 10.1016/j.jhydrol.2021.126664 View PDFView articleView in ScopusGoogle Scholar Fan et al., 2018 J. Fan, W. Yue, L. Wu, F. Zhang, H. Cai, X. Wang, X. Lu, Y. Xiang Evaluation of SVM, ELM and four tree-based ensemble models for predicting daily reference evapotranspiration using limited meteorological data in different climates of China Agric. For. Meteorol., 263 (2018), pp. 225-241, 10.1016/j.agrformet.2018.08.019 View PDFView articleView in ScopusGoogle Scholar Feng et al., 2014 Q. Feng, X. Wen, J. Li Wavelet analysis-support vector machine coupled models for monthly rainfall forecasting in arid regions Water Resour. Manag., 29 (4) (2014), pp. 1049-1065, 10.1007/s11269-014-0860-3 Google Scholar Feng et al., 2016 Y. Feng, N. Cui, L. Zhao, X. Hu, D. Gong Comparison of ELM, GANN, WNN and empirical models for estimating reference evapotranspiration in humid region of Southwest China J. Hydrol., 536 (2016), pp. 376-383, 10.1016/j.jhydrol.2016.02.053 View PDFView articleView in ScopusGoogle Scholar Feng et al., 2017 Y. Feng, Y. Peng, N. Cui, D. Gong, K. Zhang Modeling reference evapotranspiration using extreme learning machine and generalized regression neural network only with temperature data Comput. Electron. Agric., 136 (2017), pp. 71-78, 10.1016/j.compag.2017.01.027 View PDFView articleGoogle Scholar Feng et al., 2020 Z.-k Feng, W.-j Niu, Z.-y Tang, Z.-q Jiang, Y. Xu, Y. Liu, H.-r Zhang Monthly runoff time series prediction by variational mode decomposition and support vector machine based on quantum-behaved particle swarm optimization J. Hydrol., 583 (2020), Article 124627, 10.1016/j.jhydrol.2020.124627 View PDFView articleView in ScopusGoogle Scholar Ferreira and da Cunha, 2020 L.B. Ferreira, F.F. da Cunha New approach to estimate daily reference evapotranspiration based on hourly temperature and relative humidity using machine learning and deep learning Agric. Water Manag., 234 (2020), Article 106113, 10.1016/j.agwat.2020.106113 View PDFView articleView in ScopusGoogle Scholar Fu et al., 2021 T. Fu, X. Li, R. Jia, L. Feng A novel integrated method based on a machine learning model for estimating evapotranspiration in dryland J. Hydrol., 603 (2021), Article 126881, 10.1016/j.jhydrol.2021.126881 View PDFView articleView in ScopusGoogle Scholar Gocić et al., 2015 M. Gocić, S. Motamedi, S. Shamshirband, D. Petković, S. Ch, R. Hashim, M. Arif Soft computing approaches for forecasting reference evapotranspiration Comput. Electron. Agric., 113 (2015), pp. 164-173, 10.1016/j.compag.2015.02.010 View PDFView articleView in ScopusGoogle Scholar Gomariz-Castillo et al., 2017 F. Gomariz-Castillo, F. Alonso-Sarría, F. Cabezas-Calvo-Rubio Calibration and spatial modelling of daily ET0 in semiarid areas using Hargreaves equation Earth Sci. Inform., 11 (3) (2017), pp. 325-340, 10.1007/s12145-017-0327-1 Google Scholar Guo et al., 2021 Guo, T., Song, S., Ma, W., 2021. Point and Interval Forecasting of Groundwater Depth Using Nonlinear Models. Water Resources Research. 57 (12), e2021WR030209.https://doi.org/10.1029/2021WR030209. Google Scholar Guo et al., 2020 T. Guo, S. Song, J. Shi, J. Li Groundwater Depth Forecasting Using Configurational Entropy Spectral Analyses with the Optimal Input Groundwater, 58 (5) (2020), pp. 749-758, 10.1111/gwat.12968 View in ScopusGoogle Scholar Hargreaves and Samani, 1985 G.H. Hargreaves, Z.A. Samani Reference crop evapotranspiration from temperature Appl. Eng. Agric., 1 (2) (1985), pp. 96-99 Google Scholar Huang et al., 2019 G. Huang, L. Wu, X. Ma, W. Zhang, J. Fan, X. Yu, W. Zeng, H. Zhou Evaluation of CatBoost method for prediction of reference evapotranspiration in humid regions J. Hydrol., 574 (2019), pp. 1029-1041, 10.1016/j.jhydrol.2019.04.085 View PDFView articleView in ScopusGoogle Scholar Kisi et al., 2019 O. Kisi, J. Piri, O. Mohammadrezapour Comparison of SVM, ANFIS and GEP in modeling monthly potential evapotranspiration in an arid region (Case study: Sistan and Baluchestan Province, Iran Water Supply, 19 (2) (2019), pp. 392-403, 10.2166/ws.2018.084 Google Scholar Kundu et al., 2016 S. Kundu, D. Khare, A. Mondal Future changes in rainfall, temperature and reference evapotranspiration in the central India by least square support vector machine Geosci. Front., 8 (3) (2016), pp. 583-596, 10.1016/j.gsf.2016.06.002 Google Scholar Li et al., 2021 F. Li, G. Ma, S. Chen, W. Huang An ensemble modeling approach to forecast daily reservoir inflow using bidirectional long- and short-term memory (Bi-LSTM), variational mode decomposition (VMD), and energy entropy method Water Resour. Manag., 35 (9) (2021), pp. 2941-2963, 10.1007/s11269-021-02879-3 View in ScopusGoogle Scholar Luan, 2017 Luan, C., 2017. Vacillations Analysis of Monthly Reference Crop Evapotranspiration Based on EMD Method. Proceedings of the 2017 Asia-Pacific Computer Science and Application Conference. 69–74. Google Scholar Mohammadi and Mehdizadeh, 2020 B. Mohammadi, S. Mehdizadeh Modeling daily reference evapotranspiration via a novel approach based on support vector regression coupled with whale optimization algorithm Agric. Water Manag., 237 (2020), Article 106145, 10.1016/j.agwat.2020.106145 View PDFView articleView in ScopusGoogle Scholar Niu and Feng, 2021 W.-j Niu, Z.-k Feng Evaluating the performances of several artificial intelligence methods in forecasting daily streamflow time series for sustainable water resources management Sustain. Cities Soc., 64 (2021), Article 102562, 10.1016/j.scs.2020.102562 View PDFView articleView in ScopusGoogle Scholar Ozdenizci and Erdogmus, 2021 O. Ozdenizci, D. Erdogmus Stochastic mutual information gradient estimation for dimensionality reduction networks Inf. Sci. (N. Y), 570 (2021), pp. 298-305, 10.1016/j.ins.2021.04.066 View PDFView articleView in ScopusGoogle Scholar Pammar and Deka, 2017 L. Pammar, P.C. Deka Daily pan evaporation modeling in climatically contrasting zones with hybridization of wavelet transform and support vector machines Paddy Water Environ., 15 (4) (2017), pp. 711-722, 10.1007/s10333-016-0571-x View in ScopusGoogle Scholar Paredes et al., 2018 P. Paredes, D.S. Martins, L.S. Pereira, J. Cadima, C. Pires Accuracy of daily estimation of grass reference evapotranspiration using ERA-Interim reanalysis products with assessment of alternative bias correction schemes Agric. Water Manag., 210 (2018), pp. 340-353, 10.1016/j.agwat.2018.08.003 View PDFView articleView in ScopusGoogle Scholar Prasopchingchana, 2022 U. Prasopchingchana Direct numerical simulation of natural convection in a square cavity at high Rayleigh numbers via the Lagrange interpolating polynomial scheme Int. J. Therm. Sci., 172 (2022), Article 107276, 10.1016/j.asoc.2022.108676 View PDFView articleView in ScopusGoogle Scholar Priestley and Taylor, 1972 C.H.B. Priestley, R.J. Taylor On the assessment of surface heat ﬂux and evaporation using large-scale parameters Mon. Weather Rev., 100 (1972), pp. 81-92, 10.1175/1520-0493(1972)100<0081:OTAOSH>2.3.CO;2 Google Scholar Qasem et al., 2019 S.N. Qasem, S. Samadianfard, S. Kheshtgar, S. Jarhan, O. Kisi, S. Shamshirband, K.-W. Chau Modeling monthly pan evaporation using wavelet support vector regression and wavelet artificial neural networks in arid and humid climates Eng. Appl. Comput. Fluid Mech., 13 (1) (2019), pp. 177-187, 10.1080/19942060.2018.1564702 View in ScopusGoogle Scholar Qualls and Crago, 2020 R.J. Qualls, R.D. Crago Graphical interpretation of wet surface evaporation equations Water Resour. Res., 56 (10) (2020), 10.1029/2019wr026766 Google Scholar Rezaie-Balf et al., 2019 M. Rezaie-Balf, O. Kisi, L.H. Chua Application of ensemble empirical mode decomposition based on machine learning methodologies in forecasting monthly pan evaporation Hydrol. Res, 50 (2) (2019), pp. 498-516, 10.2166/nh.2018.050 View in ScopusGoogle Scholar Seong, 2014 K.W. Seong Deriving a practical form of IDF formula using transformed rainfall intensities Hydrol. Process., 28 (2014), pp. 2881-2896, 10.1002/hyp.9806 View in ScopusGoogle Scholar Sethi and Mittal, 2021 J.K. Sethi, M. Mittal An efficient correlation based adaptive LASSO regression method for air quality index prediction Earth Sci. Inform., 14 (4) (2021), pp. 1777-1786, 10.1007/s12145-021-00618-1 View in ScopusGoogle Scholar Shirmohammadi-Aliakbarkhani and Saberali, 2020 Z. Shirmohammadi-Aliakbarkhani, S.F. Saberali Evaluating of eight evapotranspiration estimation methods in arid regions of Iran Agric. Water Manag., 239 (2020), Article 106243, 10.1016/j.agwat.2020.106243 View PDFView articleView in ScopusGoogle Scholar Song et al., 2021 C. Song, L. Yao, C. Hua, Q. Ni A water quality prediction model based on variational mode decomposition and the least squares support vector machine optimized by the sparrow search algorithm (VMD-SSA-LSSVM) of the Yangtze River, China Environ. Monit. Assess., 193 (6) (2021), pp. 193-363, 10.1007/s10661-021-09127-6 View in ScopusGoogle Scholar Sun and Zhao, 2020 Z. Sun, M. Zhao Short-term wind power forecasting based on VMD decomposition, ConvLSTM networks and error analysis IEEE Access, 8 (2020), pp. 134422-134434, 10.1109/access.2020.3011060 View in ScopusGoogle Scholar Tejada et al., 2022 A.T. Tejada, V.B. Ella, R.M. Lampayan, C.E. Reaño Modeling reference crop evapotranspiration using support vector machine (SVM) and extreme learning machine (ELM) in region IV-A, Philippines Water, 14 (5) (2022), p. 754, 10.3390/w14050754 View in ScopusGoogle Scholar Valle Júnior et al., 2020 L.C.G. Valle Júnior, T.M. Ventura, R.S.R. Gomes, S. de, J. Nogueira, A. de, F. Lobo, G.L. Vourlitis, T.R. Rodrigues Comparative assessment of modelled and empirical reference evapotranspiration methods for a brazilian savanna Agric. Water Manag., 232 (2020), Article 106040, 10.1016/j.agwat.2020.106040 View PDFView articleView in ScopusGoogle Scholar Wang et al., 2021 D. Wang, J. Zhong, C. Li, Z. Peng Box-Cox sparse measures: a new family of sparse measures constructed from kurtosis and negative entropy Mech. Syst. Signal Process., 160 (2021), Article 107930, 10.1016/j.ymssp.2021.107930 View PDFView articleView in ScopusGoogle Scholar Wen et al., 2015 X. Wen, J. Si, Z. He, J. Wu, H. Shao, H. Yu Support-vector-machine-based models for modeling daily reference evapotranspiration with limited climatic data in extreme arid regions Water Resour. Manag., 29 (9) (2015), pp. 3195-3209, 10.1007/s11269-015-0990-2 View in ScopusGoogle Scholar Wen et al., 2019 X. Wen, Q. Feng, R.C. Deo, M. Wu, Z. Yin, L. Yang, V.P. Singh Two-phase extreme learning machines integrated with the complete ensemble empirical mode decomposition with adaptive noise algorithm for multi-scale runoff prediction problems J. Hydrol., 570 (2019), pp. 167-184, 10.1016/j.jhydrol.2018.12.060 View PDFView articleView in ScopusGoogle Scholar Wu et al., 2020 T. Wu, W. Zhang, X. Jiao, W. Guo, Y.A. Hamoud Comparison of five Boosting-based models for estimating daily reference evapotranspiration with limited meteorological variables PLoS One, 15 (6) (2020), pp. 1-28, 10.1371/journal.pone.0235324 Google Scholar Xu et al., 2021 R. Xu, P. Gao, X. Mu, C. Gu Spatial-temporal change of actual evapotranspiration and the causes based on the advection–aridity model in the Weihe River Basin, China Wate, 13 (3) (2021), p. 303, 10.3390/w13030303 View in ScopusGoogle Scholar Yu et al., 2022 B. Yu, X. Wang, Y. Zhang, H. Gao, Y. Wang, Y. Liu, X. Gao RPI-MDLStack: predicting RNA-protein interactions through deep learning with stacking strategy and LASSO Appl. Soft Comput., 120 (2022), Article 108676, 10.1016/j.asoc.2022.108676 View PDFView articleView in ScopusGoogle Scholar Zbili and Rama, 2021 M. Zbili, S. Rama A quick and easy way to estimate entropy and mutual information for neuroscience 596443-596443 Front. Neuroinformatics, 15 (2021), 10.3389/FNINF.2021.596443 Google Scholar Zhang et al., 2017 F. Zhang, I. Keivanloo, Y. Zou Data transformation in cross-project defect prediction Empir. Softw. Eng., 22 (2017), pp. 3186-3218, 10.1007/s10664-017-9516-2 View in ScopusGoogle Scholar Zhang et al., 2020 Y. Zhang, Z. Zhao, J. Zheng CatBoost: a new approach for estimating daily reference crop evapotranspiration in arid and semi-arid regions of Northern China J. Hydrol., 588 (2020), Article 125087, 10.1016/j.jhydrol.2020.125087 View PDFView articleView in ScopusGoogle Scholar Cited by (7) Interpretable hierarchical error correction GRU model for effective observation selection 2023, Applied Soft Computing Show abstract A review of the Artificial Intelligence (AI) based techniques for estimating reference evapotranspiration: Current trends and future perspectives 2023, Computers and Electronics in Agriculture Show abstract Design data decomposition-based reference evapotranspiration forecasting model: A soft feature filter based deep learning driven approach 2023, Engineering Applications of Artificial Intelligence Show abstract Estimation of daily reference evapotranspiration by hybrid singular spectrum analysis-based stochastic gradient boosting 2023, MethodsX Show abstract A novel multi-scale parameter estimation approach to the Hargreaves-Samani equation for estimation of Penman-Monteith reference evapotranspiration 2023, Agricultural Water Management Show abstract Evapotranspiration estimation using hybrid and intelligent methods 2023, Soft Computing View all citing articles on Scopus View Abstract © 2022 Elsevier B.V. All rights reserved. Recommended articles Influence of suspended solid particles on calcium carbonate fouling in dripper labyrinths Agricultural Water Management, Volume 273, 2022, Article 107890 Gustavo L. Muniz, …, José A. Frizzone View PDF Polythene mulch and potassium application enhances peanut productivity and biochemical traits under sustained salinity stress condition Agricultural Water Management, Volume 273, 2022, Article 107903 H.N. Meena, …, M.S. Meena View PDF A hybrid framework for short-term irrigation demand forecasting Agricultural Water Management, Volume 273, 2022, Article 107861 Leila Forouhar, …, Kirsti Hakala View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 7 Captures Readers: 12 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply."

Paper 5:
- APA Citation: Susilo, A. S., Karna, N., & Mayasari, R. (2021, August 30–31). Decision Tree-Based Bok Choy Growth Prediction Model for Smart Farm. In 2021 4th International Conference on Information and Communications Technology (ICOIACT) (pp. 1–5). IEEE. https://doi.org/10.1109/ICOIACT53268.2021.9563914
  Main Objective: To develop a prediction model for optimal bok choy seeding conditions in a smart farm environment using real-time data from IoT sensors and machine learning.
  Study Location: Yogyakarta, Indonesia
  Data Sources: Real-time data from IoT sensors (soil moisture, room temperature, humidity, light intensity, plant height)
  Technologies Used: Decision Tree algorithm, MySQL database, Python, Scikit-learn library
  Key Findings: The proposed prediction model can accurately predict the optimal seeding conditions for bok choy, considering factors such as soil moisture, temperature, and irrigation level. The system effectively integrates IoT, MySQL database, and machine learning techniques to provide real-time insights into crop growth and yield.
  Extract 1: The paper emphasizes that "accurate real-time data on various growth-related factors, such as soil moisture, temperature, and humidity, is crucial for optimizing crop growth and yield."
  Extract 2: "The system conducts a series of machine learning phases to take the insight analysis needed to create a prediction model."
  Limitations: This paper focuses on the development of a prediction model for bok choy growth in a specific environment and may not be directly applicable to other crops or different environmental conditions. The paper does not provide detailed information on the specific techniques used for sensor calibration, drift correction, or fault detection, which limits the generalizability of the findings.
  Relevance Evaluation: This paper is directly relevant to the point of discussion on the importance of sensor calibration, drift correction, and fault detection in ensuring data accuracy and reliability. The paper highlights the significance of accurate real-time data transmission for optimal crop growth and yield, and discusses the potential challenges and solutions associated with data accuracy and reliability.
  Relevance Score: 0.9
  Inline Citation: (Susilo, Karna, & Mayasari, 2021)
  Explanation: This paper describes a novel application of a Decision Tree algorithm for bok choy growth prediction in a smart farm environment using an integrated system of IoT sensors, data storage, and machine learning. The system collects real-time data on soil moisture, room temperature, humidity, light intensity, and plant height, which is then processed using a Decision Tree algorithm to predict the optimal seeding conditions for bok choy.

 Full Text: >
"This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2021 4th International Confer... Decision Tree-Based Bok Choy Growth Prediction Model for Smart Farm Publisher: IEEE Cite This PDF Aldi Sulthony Susilo; Nyoman Karna; Ratna Mayasari All Authors 3 Cites in Papers 211 Full Text Views Abstract Document Sections I. Introduction II. Literature Review III. Bok Choy Growth Prediction Model IV. The Evaluation of Classification Performance Metrics V. Prediction Model Testing Authors Figures References Citations Keywords Metrics Abstract: Indonesia is an agricultural country that has a dependency on the horticulture sub-sector. Bok choy is included in the mustard greens group as one of the strategic products from the horticulture. The needs for mustard greens are getting higher. Based on Indonesia's Central Statistics Agency data in 2019, the mustard beans production rate increased only 2.63% higher than in 2018. If it does not meet the desired supply, it opens the possibility of a lack of bok choy supply at the market, resulting in high potential price fluctuations. These conditions initiate relevant system research to help the farmer develop a bok choy crop reference guide, especially in the seeding phase. In reducing the limitations caused by the lack of science and knowledge in the farmer environment, the prediction model is the proposed outcome by considering the use of IoT mechanism that has widely developed. The model is based on a system that integrates IoT's interest in the agriculture field, namely smart farm, for retrieving real-time data based on automatic control, MySQL database for storing data, and machine learning technique to establish the prediction model as the guide for the farmers to find appropriate parameters for planting bok choy. The prediction model performs using Python, a high-level popular programming language due to its ease and open source. Python interprets the bok choy growth dataset based on the irrigation system scenario from the integrated system with the relevant library of data preprocessing interest and the Decision Tree algorithm of the Scikit-learn library to train the model. The system conducts a series of machine learning phases to take the insight analysis needed to create a prediction model. The model performance metrics as the consideration in deciding the outcome model, which are accuracy and precision. Published in: 2021 4th International Conference on Information and Communications Technology (ICOIACT) Date of Conference: 30-31 August 2021 Date Added to IEEE Xplore: 20 October 2021 ISBN Information: DOI: 10.1109/ICOIACT53268.2021.9563914 Publisher: IEEE Conference Location: Yogyakarta, Indonesia SECTION I. Introduction Indonesia is a developing country with a broad population segment that depends on their life in agriculture. The horticulture sector produces vegetable products, fruit plants, ornamental plants, and medicinal plants that can be traded. Based on data obtained from the Central Statics Agency in 2018, the number of farmers was around 33.1 million, and there were 10.1 million horticultural farmers [1]. As a result of this population, agricultural was still one of the Indonesian economy pilars by contributing 14% of the GDP [2]. Besides helping the national income, the horticultural sector contributed to its export activities and food needs. Again, the farmers received the annual revenues sufficient for their lives. The other parties were involving as the supporting system in food supply distribution applied before being consumed by the communities. One of the leading agricultural commodities in Indonesia is bok choy. This plant is required as a supplementary food material in the household and industrial environment. Bok choy is considering as one of the plants classify in the mustard greens group. Along with the high demand resulting in potential supply and price fluctuations, the mustard greens production rate only increased by 2.63 % in 2019 over 2018 in the Central Statistics Agency of Indonesia data [3]. The public information also reinforced the Ministry of Agriculture data to state that there had been a fluctuation rate in the population of West Java province food consumption by day and year from 2013–2018 [4]. The fluctuation was caused by several factors, including weather sensitivity, limited resources (producers, planting knowledge, infrastructure, and land availability), the influence of fertilizer, and climate change. In maintaining the stability of bok choy commodity prices, an adequate supply of the finest quality of bok choy is needed. The specific observed parameter to analyze is the soil moisture as the growth-related factor to plant the bok choy. The production growth rate of the bok choy as one of the plants classified in mustard greens is still slightly increased. It may lead to a lack of supply if it is not comparable with the market's availability. One of the issues is caused by the lack of fully-compiled science and knowledge. It is difficult for farmers to determine superior seed that impacts the quality and quantity of the bok choy. However, market demand for bok choy is still outstanding and necessary for household and industrial material cooking. Nowadays, the bok choy optimal seeding model is still unavailable as a reference guide for generating predictions to work in the farmer environment. The The objective is increasing the production, which offers to farmers environment as the main player in producing the best choice of bok choy seeding phases in increasing the possibility of optimal crops and open opportunities to maintain the availability of bok choy quality on the market. One of the facilities used to do suitable planting is the greenhouse. The greenhouse is an architecture to plant the bok choy following the desired optimal condition with a more attentive environment and minimize unwanted environmental factors. A classification approach of supervised machine learning technique applies to develop the model strengthen by the designated output label that manually inputs. The model development is conduct in an open-source Jupyter Notebook as it is interactive to the user to conclude the analysis of each machine learning phase. There are several procedures as references to perform the model testing. The train/test split procedure splits the dataset automatically and implements a decision tree algorithm to train the data. The evaluation of the model performance performs with three classification metrics, such as accuracy score, confusion matrix, and classification table that correlated to each other as the analysis to determine the prediction model's quality. The model is saved to the local computer model for repeatedly implementing the model testing, which applies to the Pickle library's given input. The research using the dataset adopted from an integrated system between IoT for retrieving data from research object, MySQL of unpublished undergraduate thesis and executive database dashboard as data storing management for knowldge discovery [5]–[7]. SECTION II. Literature Review The researchers have conducted various researches on the use of greenhouse to utilize the environment independently, including real-time monitoring and controlling greenhouse systems based on smart farm [8]. An IoT device is connected through a networks as an integrated system in retrieving real-time data is necessary. Raspberry Pi is used as an IoT device because it has an embedded wi-fi module and external instrument, such as sensors as supporting system. The soil moisture sensor is defined as calibrating the water dose value of greater than or equal to 15 % as the lower limit and lower than equal to 25 % defined as normal condition [9]. Whereas the optimum temperature is in a range of 20 – 25 degrees celcius [10]. The application of Raspberry Pi in the greenhouse as smart farm system implementation has been widely used by researcher [11] [12]. Users can perform data retrieval results for a prediction model to determine the best composition in producing optimal bok choy seeding crops. This method has been proven by several researchers who made a collection of observation in tomatoes and lettuce growth as it used for quality predictive models [13] [14]. The Raspberry Pi is retrieved data from the respective types of desired sensor monitoring and controlling and is automatically stored in the database. The platform is supported with the additional application of the database management system field, such as MySQL database. The designated raw data is divided into several groups. The group of data combines the dataset as the input for performing the prediction model. The integrated system of IoT and machine learning has also been explored by the scientist [15] [16]. A prediction model is generated using the machine learning technique in processing information from the available datasets. Machine Learning performs with the help of complementary libraries, such as Numpy, Pandas, Matplotlib, Seaborn, and Scikit-learn of Python programming language that has been widely used in the related field to build the learning systems in producing a desired model. SECTION III. Bok Choy Growth Prediction Model A. The Workflow of The Global System The proposed global workflow system is started from retrieving data stage with IoT mechanism, stores data in MySQL database, and develops the prediction model. The data is sensed by the IoT platform with the help of the four respective sensors, which categorized into the value of five attributes given are as follows: Webcam retrieves the picture of bok choy seeding period of the entire pot taken once a day at noon. DHT22 sensor retrieves the room humidity and temperature value. BH-1750 sensor retrieves the room light intensity value. YL-69 sensor retrieves the soil moisture value from each pot. The sensor retrieves real-time information based on the sensor's ability taken in a greenhouse in the Buah Batu region, as seen in figure 1. The exception for the soil moisture outcome, because it has a different scenario based on the irrigation system, categorized into automatic and manual. The automated system is a process to provide water to the bok choy plant that has been programmed with relay help, which will irrigate automatically if the soil moisture detects the water amount in the observed plant is less than is needed. In contrast, the manual system is a process to deliver water to the bok choy plant by hand-operated, which is self-irrigate the plant based on the range of the time decides, 09.00 A.M. to 11.00 A.M., is the best time to irrigate the plants. The soil moisture value has been converted from a percentage to the categorical attributes at receiving data. The sensed data is sent to the Raspberry Pi 3B. The device gathers and stores the information that it retrieves based on the sensor placement. Fig. 1. The greenhouse is the plant placement Show All The sensed data is then sent through the localhost network automatically every ten minutes to the MySQL database as data management for complete store data. In the database, the sensed data is divided into six groups, which are: Camera's group contains the picture's path of the entire pot. Plant A's group contains date-time and soil moisture value from the observed plant. Plant B's group contains date-time and soil moisture value from the observed plant. Plant C's group contains date-time and soil moisture value from the observed plant. Plant D's group contains date-time and soil moisture value from the observed plant. Room Condition's group contains date-time and greenhouse humidity, temperature, and light intensity value. These database contents are seen in figure 2. The database has been deployed to website hosting for monitoring purposes. The dataset's scratch obtains from the MySQL database has been prepared by merge mechanism corresponds to each experimental plant group and the room condition group that performs in the database by using MySQL query. There will be two datasets generated as the input data to develop the prediction model based on the Excel file export mechanisms. The machine learning technique is implemented after the dataset file preparation phase, with a suitable machine learning algorithm, achieving the prediction model is seen in figure 3. B. The Classification Tree Scheme The tree is the process of performing the machine learning technique with a decision tree algorithm. The procedure involves importing the decision tree classifier function from the tree package of the scikit -learn library. The decision tree method is implemented in model training phase is shown in figure 4. The computer conducts the operation corresponds to the user's applicable preference. The input value is a preferred choice of the parameter that corresponds to the procedure's function. This application uses three approved parameter subjected to the table. Another parameter defined by none value is not executed. The algorithm is implemented to define the attributes value in each instances outcome corresponds to the designated label. It corresponds to three observed attributes, namely moist level, temperature, and irrigation level started by splitting the moist level by splitting the moist level based on the available categorical attributes. Fig. 2. The database overview as the data storing management. Show All Fig. 3. The proposed workflow of the creation of prediction model. Show All Low and high label does not split further as it defines the node's final level with classification labelled. The normal value characterizes by a decision node called temperature, split into two other sub-nodes based on the attributes value, such as decision and leaf node. The value of less than equal to twenty-five is detailed by decision node splits into two other leaf nodes. The final level with classification labelled results in optimal and less optimal, respectively. The overview of the classification tree is shown in figure 5. C. Dataset Preprocessing It is a procedure to load the dataset from the respective directory, including folder and file name. Two datasets were loaded simultaneously by using the Read Excel function of the Pandas library. The function's content is possible to characterize each parameter based on the user's interest corresponds to the variable of the related parameter. The choice of the applicable parameter are: Sheet name Parse dates Index column Three parameters is applied to develop the model as it performs the machine learning algorithm, also data visualization. This procedure also applies the drop not a value function that does not cover any parameter. The function has an objective to remove all the instances in a row that has no value. Fig. 4. The proposed design of the global workflow system. Show All D. Dataset The real-time groups of sensed data taken form the localhost MySQL database based on the previous project are a principal scratch of the dataset. It consists of six fundamental attributes divides into one string, three continuous attributes, one categorical attribute, one time-stamp attribute, and the entire pots picture. The attribute given are as follows: plant's name serves in the form of string. Moist level from the various observed pot serves in the form of categorical attributes. The time-series serves in the form of time-stamp attributes. Greenhouse temperature serves in the form of continuous attributes. Greenhouse humidity serves in the form of continuous attributes. Fig. 5. The overview of the classification tree design. Show All greenhouse light intensity serves in the form of continuous attributes. The camera's output retrieves in the form of of picture path destination folder. The raw data is retrieved from the respective sensors that have been previously discussed. One group of sensed data attributes is disabled for prediction model development, namely the camera's output. The contents leave one string, three continuous attributes, one categorical attribute, and one time-stamp attribute. The groups of sensed data are available in the form of an Excel file extension. Those sensed data groups is processed through Microsoft Excel application added with additional attributes and its corresponding variable over number of observations. This merge data operation produces qualified dataset for the application. The additional attributes is including one continuous and two categorical attributes are as follows: The plant's height serves in the form of continuous attributes. The irrigation level serves in the form of category attributes. The class serves in the form of categorical attributes. The dataset is separated based on the irrigation system scenario corresponds to the environmental and growth-related factor in the greenhouse, also the manually-input variable. There are two observed plants for each scenario. Plant A and plant B corresponds to Pakcoy 1 and Pakcoy 2, respectively. In contrast, Plant C and plant D corresponds to Pakcoy 3 and Pakcoy 4. Each scenario is also differentiated based on two types of irrigation levels. The clarification of the irrigation system distribution and its corresponding level information is shown in table 1. The dataset attributes are one index, four continuous attributes, three categorical attributes, and one time-stamp attribute. The time-series schedule represents in date-time format, greenhouse temperature represents in degree units, greenhouse humidity represents in percentage, and greenhouse light intensity represents in lux units. The moist level is a categorical condition based on the soil moisture value measurement convert from percentage data, as shown in table 2. The temperature has the stated condition by the range of the degrees is shown in table 3. Table I Distribution of the plants observation based on irrigation system. Manually parameter, plant's height, represents in centimeter based on the ruler, irrigation level, and class in categorical value. The sensed data is taken in the range of ten minutes from 4th of January 2021 to 15th of January 2021 at 08.00 A.M. to 2.20 P.M. The class located at the last column in the dataset corresponds to the label for every instances associated with the moist level. The table provides the corresponding type of the moist level, and the temperature value is shown in table 4. There are two datasets generated based on the irrigation system for developing the prediction model. The automatic irrigation scenario contains 805 instances and nine attributes. Like the automated irrigation scenario, the manual irrigation scenario has the same total of attributes. In contrast, the manual dataset has 789 instances. Then, the concatenating dataset is equalled to 1594 instances. The sample of the dataset is shown in table 5. Pakcoy is an indonesian name of bok choy. Table II Moist level condition of the dataset. SECTION IV. The Evaluation of Classification Performance Metrics The performance metrics evaluation based on the available type for the classification approach. The corresponding value is the label test data and the label predicts data based on the prediction made for the attributes of train data. The variety of classification metrics are: A. Confusion Matrix This metric is necessary to calculate other performance parameters in the classification table, such as accuracy, precision, Etc. The result generated form the Jupyter notebook does not give any remarkable information corresponds to the value. In creating a more straightforward interpretation to understand the outcome, the value is presented in a form of table. The visualization of the confusion matrix with a table is shown in table 6. The noticeable perception is to give attention that the left top of the table corresponds to the true positive value and the left below is related to the negative class. Table III Temperature condition of the dataset. Table IV The data class of the dataset. Table V The automatic irrigation dataset sample. The table means the classifier has correctly classified the total of positive and negative instances. This matrix informs the total instance for two-class in which is stated by the overview of the classifier's prediction is discussed in the previous section. This type of confusion matrix is correlated with the perfect classifier performance. It is strengthened by the matrix's pattern with no value correlated with the false positive and false negative. As confirmation, it is suitable to review the parameter correlation. The true positive rate expressed by the total of true positive instances divides by the total of positive instances equals one is to meet the criterion as a result is equal to one. False positive rate equals zero as there are no available false positive instances classified. Also, the precision equals one as the positive value has only the true positive value. B. Classification Report These metrics perform as the final analysis as the value derived from the confusion matrix is present is in figure 6. The performance parameter as the consideration in depending on the ideal prediction model is the accuracy and precision. Before reviewing the parameter based on the value derived from the confusion matrix, these metrics clarify that the noticed label is only two, namely optimal and less optimal, as it not clearly stated in the confusion matrix discussion section. The absence of not optimal is because there are not enough instances available in the dataset. The analysis of the corresponding parameter present in table 7. On the table's content, each of the parameter calculation is derived. The accuracy outcome meets the perfect classifier case prerequisite requirement al it also clarifies the accuracy score that has been converted into the percentage. Either precision score or recall is also completing the qualification. Table VI The visualization of the confusion matrix table. Fig. 6. The overview of the classification report result. Show All SECTION V. Prediction Model Testing This stage is conducted to represent the model testing phase. The model testing is differentiated from the model testing phase because it is based on unseen instances. In completing the analysis, it defines by the number of attributes value. The defined Test Model function is used as it more comfortable to change the attribute value. As the introductory to use the function, the variable's value corresponds to the attributes shown in table 8. The outcome generated by the variables is shown in figure 7. It shows that the result is less optimal class. When we differentiated each defined value, such as the moist level is high, Temperature is greater than twenty-seven, and the irrigation level is sufficient. The result is satisfied. However, in this project, the humidity, height, and light intensity are dismissed. In comparison with other labels, another unseen instances is observed, as seen in figure 8. The attributes value is started from the moist level with normal value, the temperature is less than twenty-five, and the irrigation level is sufficient. These unseen instance are not satisfied. The appropriate class, optimal is not shown. Although the classification report able to classify the optimal label, it concludes that the data used is insufficient to predict unseen instances. It is shown by the number of test data in a total of three-hundred and thirteen for the less optimal and inversely proportional to six for optimal label. Table VII The parameter calculation table. Table VIII An overview of the attributes value definition. Fig. 7. An overview of unseen instances prediction. Show All Fig. 8. An overview of the second unseen instances prediction. Show All Authors Figures References Citations Keywords Metrics More Like This Design of Real-Time System Based on Machine Learning for Snoring and OSA Detection ICASSP 2022 - 2022 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP) Published: 2022 An integrated approach of Genetic Algorithm and Machine Learning for generation of Worst-Case Data for Real-Time Systems 2022 IEEE/ACM 26th International Symposium on Distributed Simulation and Real Time Applications (DS-RT) Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."

</subsection_point_Point 3>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.
n summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.


</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper.

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<subsection_point_Point 1>
Point: Exploration of MQTT and client-server IoT networks for real-time data transmission

Papers to support point:

Paper 1:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: System models are graph models. Existing methods use various system models. We can distinguish, for example:

- Task Graph (TG): one of the simplest and most popular methods of representing functions at the system level. It is a directed acyclic graph in which nodes represent tasks and edges represent the order in which tasks are performed (usually representing transmissions). The task is activated when all preceding ones are completed. In this way, sequential dependencies between tasks are presented. Transmission volumes are represented by edge weights. A sample task graph is shown in Figure 1. The graph describes a six-task system. Tasks on the same path in the graph are sequentially executed, while tasks from parallel paths can be executed in parallel. Extended versions of task graphs can also be found in the literature, e.g., conditional task graphs and multimodal task graphs [50,51].

- Synchronization Data Flow (SDF) or Static Data Flow (SSDF): models representing data flow (often used in modeling telecommunications applications). Like the TG, SDF is a directed graph. Unlike the TG, cycles can occur in SDF. The synchronization mechanism is described by determining the number of tags generated by the execution of a given task (for each output edge). The number of tags taken from each input is also specified for each task. The task is activated if the required number of tags is available on all inputs.  Data Flow 2022, 11, 4120 https://www.mdpi.com/journal/electronics
  Extract 2: The proposed methodology for designing real-time IoT systems considered the application of edge computing, fog computing, SDN (Software-Deﬁned Networking), and NFV (Network Function Virtualization) concepts.
  Limitations: >
  Relevance Evaluation: 1.0
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The proposed methodology is based on relative precedence of tasks determined in the functional specifications, as well as past research findings on system synthesis. The precedence constraints represent which tasks must be performed before others, and the real-time requirements of the system determine the amount of time that can elapse between the start and completion of each task.

The proposed methodology includes four steps: 

1. **Functional specification** - The first step is to develop a functional specification of the system. This specification should include a description of the system's purpose, the tasks that need to be performed, and the real-time requirements of the system.
2. **Mapping the functional specification to the IoT architecture** - The next step is to map the functional specification to the IoT architecture. This involves identifying which tasks will be performed on which devices and how the devices will communicate with each other. 
3. **Scheduling the tasks** - Once the functional specification has been mapped to the IoT architecture, the tasks need to be scheduled. This involves determining the order in which the tasks will be performed and the amount of time that will be allocated to each task.
4. **Optimizing the system** - The final step is to optimize the system. This involves finding the best possible schedule for the tasks and the best possible configuration for the devices. The goal of optimization is to minimize the amount of time that elapses between the start and completion of each task while ensuring that all of the real-time requirements of the system are met.

 Full Text: >
Citation: Deniziak, S.; Płaza, M.;
Arcab, Ł. Approach for Designing
Real-Time IoT Systems. Electronics
2022, 11, 4120. https://doi.org/
10.3390/electronics11244120
Academic Editors: Juan M. Corchado,
Byung-Gyu Kim, Carlos A. Iglesias,
In Lee, Fuji Ren
and Rashid Mehmood
Received: 8 November 2022
Accepted: 7 December 2022
Published: 10 December 2022
Publisher’s Note: MDPI stays neutral
with regard to jurisdictional claims in
published maps and institutional afﬁl-
iations.
Copyright:
© 2022 by the authors.
Licensee MDPI, Basel, Switzerland.
This article is an open access article
distributed
under
the
terms
and
conditions of the Creative Commons
Attribution (CC BY) license (https://
creativecommons.org/licenses/by/
4.0/).
electronics
Article
Approach for Designing Real-Time IoT Systems
Stanisław Deniziak *, Mirosław Płaza *
and Łukasz Arcab
Faculty of Electrical Engineering, Automatic Control and Computer Science, Kielce University of Technology,
Al. Tysiaclecia P.P. 7, 25-314 Kielce, Poland
* Correspondence: s.deniziak@tu.kielce.pl (S.D.); m.plaza@tu.kielce.pl (M.P.); Tel.: +48-41-342-4167 (M.P.)
Abstract: Along with the rapid development of Internet of Things (IoT) technology over the past
few years, opportunities for its implementation in service areas that require real-time requirements
have begun to be recognized. In this regard, one of the most important criteria is to maintain Quality
of Service (QoS) parameters at an appropriate and sufﬁciently high level. The QoS level should
ensure the delivery of data packets in the shortest time possible while preventing critical parameters
relevant to real-time transmission from being exceeded. This article proposes a new methodology
for designing real-time IoT systems. The premise of the proposed approach is to adapt selected
solutions used in other types of systems working with real-time requirements. Some analogy to
embedded systems with a distributed architecture has been noted and used in this regard. The
main differences from the concept of built-in systems can primarily be seen in the communication
layer. The methodology proposed in this article is based on the authors’ proposed model of real-time
system functional speciﬁcation and its mapping to the IoT architecture. In addition, the developed
methodology makes extensive use of selected IoT architecture elements described in this article, as
well as selected task scheduling methods and communication protocols. The proposed methodology
for designing RTIoT systems is based on dedicated transmission serialization methods and dedicated
routing protocols. These methods ensure that the time constraints for the assumed bandwidth of IoT
links are met by appropriately prioritizing transmissions and determining communication routes.
The presented approach can be used to design a broad class of RTIoT systems.
Keywords: real time; IoT; tasks scheduling; communication protocols
1. Introduction
For a number of years, there has been a continuous and rapid development of products
and services in the area of Internet of Things (IoT) technology [1–4]. Research in this arena
is focused on introducing new solutions in the form of dedicated, smart, specialized and
autonomous systems [5–8]. The main reason for the widespread use of IoT solutions is
usually the desire to improve people’s lifestyle and comfort, the optimal use of natural
resources, and the low energy consumption of these solutions [9–12]. IoT solutions in
this area often provide previously unattainable levels of efﬁciency while minimizing the
contribution of the human factor. This trend is being forced by the ever-increasing demands
of proﬁt optimization in all industries and economies, as well as the quality and safety of
life demands of speciﬁc groups of consumers and even entire global communities [13].
The most up-to-date literature describes numerous examples of implementations
of classical IoT solutions for various purposes. As is well known, the so-called “smart”
systems, e.g., smart homes, smart factories, smart cities, and smart grids, have gained
great popularity [14,15]. In addition, a number of systems have been developed for the
medical [16], automotive [17], agricultural [18], property protection [19], logistics [20], and
sports and recreation [21] industries, as well as many other areas related to the immediate
needs of the public. Smart systems for managing amusement parks [7,8,22]; automated
customer service solutions based on speech recognition techniques and voice assistants [23];
facial recognition and motion detection systems used for security and access control [24];
Electronics 2022, 11, 4120. https://doi.org/10.3390/electronics11244120
https://www.mdpi.com/journal/electronics
Electronics 2022, 11, 4120
2 of 21
smart systems for managing [25,26], controlling [27], and optimizing production pro-
cesses [28–30]; and real-time object location systems [12,31,32] are being implemented.
The aforementioned solutions are just a few examples of the known applications of IoT
technology. The possibilities of implementing traditional solutions are very wide and
mainly depend on the needs of the recipients and the ingenuity of their designers, thus
inﬂuencing the development of a certain area of the service market.
At the same time, it should be noted that services and products where real-time
transmission requirements play a key role are still major constraints in the implementa-
tion of IoT solutions. The need to design real-time applications for IoT (RTIoT) solutions
was recognized more than 10 years ago [33]. The ﬁrst technologies and standards in this
area also began to emerge at that time. Examples include: ITCC (Intel Time Coordinated
Computing) [34,35], TSN (Time Sensitive Network) [36], M2M (Machine to Machine Com-
munication) [37], SaaS (Sensing as a Service) [38], and a multi-layered reference model
dedicated to IoE (Internet of Everything) technologies [3]. However, most work to date
in the ﬁeld of RTIoT systems has only been concerned with trying to develop selected
elements of the IoT architecture [39] or applications and technologies [40,41] optimized
for the highest possible QoS (Quality of Service). These mostly deal with issues related
to real-time transmission and protocols, server applications, or real-time databases. As
previously mentioned, there was a need for real-time transmission early in the development
of the internet, mainly for the purpose of transmitting multimedia data. The RTP/RSTP [42]
or XMPP [43] protocols in use at the time did not allow for the parameters associated with
time constraints to be met. It was not until the development of the IEEE 802.1 standard
in the form of the TSN solution that some conditions were created for the development
of data transmission methods that considered time parameters. However, this standard
only deﬁnes basic mechanisms for time synchronization, transmission scheduling or re-
source reservation. It does not specify speciﬁc communication protocols or algorithms
for scheduling and routing data transmission [44]. In terms of server applications, there
is ongoing work on cloud computing. This work focuses on developing real-time cloud
services, scheduling tasks according to real-time requirements, and developing web servers
that handle requests with time constraints [45–47]. Real-time databases, on the other hand,
deﬁne real time as the fastest execution of queries to a database. Examples of such databases
are VoltDB [48] and Firebase [49].
Although it is possible to ﬁnd numerous publications presenting examples of IoT ap-
plications running in real time, these solutions are not fully compatible with the concept of
a real-time system. Typically, these solutions are highly optimized in terms of data process-
ing and data transmission performance so the time requirements under typical operating
conditions are met. However, such solutions do not provide the required QoS level when
operating conditions change (e.g., with higher network load). Moreover, providing high
performance is often associated with signiﬁcant costs of computing and communication
resources. Additionally, the methodologies of designing RTIoT systems that take cost and
QoS optimization into account are unknown. Constraints related to real-time requirements
are currently one of the main challenges faced by IoT system research, and they were also
the main motivation for the authors of this study to carry out the presented research.
The purpose of this work was to identify the problems and needs that exist in the
design of RTIoT systems, to identify research directions to solve these problems, and to
propose a design methodology that considers the requirements of RTIoT systems. The
contribution to the body of knowledge of this article is:
•
The proposal of a methodology for designing real-time IoT systems considering the
application of edge computing, fog computing, SDN (Software-Deﬁned Networking),
and NFV (Network Function Virtualization) concepts.
•
An overview of the components, methods and technologies of distributed real-time
systems, with particular emphasis on scheduling methods and communication proto-
cols in the context of their applications in RTIoT systems.
•
The proposal of a general RTIoT system architecture covering a broad class of applications.
Electronics 2022, 11, 4120
3 of 21
The starting point for the RTIoT system design methodology proposed in this article is
an analysis of approaches used in other classes of real-time systems. In particular, one can
see a certain analogy with embedded systems, or rather, IoT systems can be seen as a certain
generalization or development of the concept of embedded systems with a distributed
architecture. The differences are particularly evident in the communication layer. This
article presents a proposed methodology based on analogous approaches to the synthesis
of embedded systems.
The rest of this article is organized as follows. Section 2 describes the functional
speciﬁcation model and synthesis process for real-time systems, and Section 3 considers
selected components of IoT systems in relation to real-time requirements. Section 4 is
devoted to an analysis of task scheduling methods and communication protocols possible
to apply in RTIoT systems, and Section 5 describes the new methodology for designing
RTIoT systems proposed by the authors. The summary and conclusions are provided
in Section 6.
2. Functional Speciﬁcation Model and Synthesis of Real-Time Systems
The design methodology for complex IT systems usually consists of two stages:
•
Developing a high-level model: The system model allows for an analysis to validate
and optimize the proposed solution. This is particularly important in the case of
distributed systems, where the veriﬁcation of the communication and synchronization
mechanisms used between processes is of signiﬁcance.
•
Mapping the model to the target architecture: It is possible to map to a standard
architecture (e.g., a multi-core processor) or to synthesize a specialized architecture
optimized for a given application.
2.1. IoT Application System Model
The ﬁrst stage of design is to create a system model of the application. The system
model represents the application function at the highest abstraction level, where tasks
(processes) and interactions between tasks are distinguished. At this level, what a task does
is not as important as when it is activated, what the synchronization between tasks is, and
how the tasks communicate with each other. Typically, system models are graph models.
Existing methods use various system models. We can distinguish, for example:
•
Task Graph (TG): one of the simplest and most popular methods of representing
functions at the system level. It is a directed acyclic graph in which nodes represent
tasks and edges represent the order in which tasks are performed (usually representing
transmissions). The task is activated when all preceding ones are completed. In this
way, sequential dependencies between tasks are presented. Transmission volumes
are represented by edge weights. A sample task graph is shown in Figure 1. The
graph describes a six-task system. Tasks on the same path in the graph are sequentially
executed, while tasks from parallel paths can be executed in parallel. Extended
versions of task graphs can also be found in the literature, e.g., conditional task graphs
and multimodal task graphs [50,51]. Such models allow for the speciﬁcation of special
cases, such as the conditional or alternative performance of certain tasks.
•
SDF (Synchronous Data Flow) or SSDF (Statically Schedulable Data Flow): models
representing data ﬂow (often used in modeling telecommunications applications).
Like the TG, SDF is a directed graph. Unlike the TG, cycles can occur in SDF. The
synchronization mechanism is described by determining the number of tags generated
by the execution of a given task (for each output edge). The number of tags taken from
each input is also speciﬁed for each task. The task is activated if the required number
of tags is available on all inputs.
•
STATECHARTS: a model based on a FSM (Finite State Machine), models based on
a description in the form of various forms of automation enable the speciﬁcation of
control ﬂow. Unlike a classic FSM, state charts enable parallel descriptions and task
speciﬁcations. Tasks are related to transitions between states.
Electronics 2022, 11, 4120
4 of 21
Electronics 2022, 11, x FOR PEER REVIEW 
4 of 22 
 
 
 
Figure 1. Sample task graph. 
 
SDF (Synchronous Data Flow) or SSDF (Statically Schedulable Data Flow): models 
representing data flow (often used in modeling telecommunications applications). 
Like the TG, SDF is a directed graph. Unlike the TG, cycles can occur in SDF. The 
synchronization mechanism is described by determining the number of tags gener-
ated by the execution of a given task (for each output edge). The number of tags 
taken from each input is also specified for each task. The task is activated if the re-
quired number of tags is available on all inputs.  
 
STATECHARTS:  a model based on a FSM (Finite State Machine), models based on 
a description in the form of various forms of automation enable the specification of 
control flow. Unlike a classic FSM, state charts enable parallel descriptions and task 
specifications. Tasks are related to transitions between states.  
There are also a number of other methods that often target specific classes of appli-
cations. The system model should not impose any constraints on the target system ar-
chitecture if this is not directly implied by the design assumptions. The architecture 
should be the result of system optimization. Therefore, the first step in the methodology 
should be to propose a method for specifying the application at the system level. This 
model will be the starting point for further design (scheduling, mapping into architec-
ture, and optimization). Therefore, it should contain all the information so that the above 
tasks can be performed. Each method has limitations (e.g., the task graph offers no way of 
describing the control functionality). In the case of RTIoT, the model should allow for the 
specification of both computational and transmission tasks (communication tasks). The 
model should also target so-called reactive systems, i.e., systems in which particular se-
quences of actions/tasks are activated as a result of reactions to specific events.  
2.2. Mapping Functional Specifications to Real-Time IoT Architecture 
In a typical approach to mapping a system specification into a distributed infor-
mation system architecture, three main steps are performed [52]: 
 
Resource allocation: At this stage, the target hardware architecture of the system is 
determined. Resources can be processors, specialized hardware modules, and 
communication channels (buses, communication processors, etc.). At the same time 
as the allocation, the connections between system components are determined. 
Figure 1. Sample task graph.
There are also a number of other methods that often target speciﬁc classes of ap-
plications. The system model should not impose any constraints on the target system
architecture if this is not directly implied by the design assumptions. The architecture
should be the result of system optimization. Therefore, the ﬁrst step in the methodology
should be to propose a method for specifying the application at the system level. This
model will be the starting point for further design (scheduling, mapping into architecture,
and optimization). Therefore, it should contain all the information so that the above tasks
can be performed. Each method has limitations (e.g., the task graph offers no way of
describing the control functionality). In the case of RTIoT, the model should allow for
the speciﬁcation of both computational and transmission tasks (communication tasks).
The model should also target so-called reactive systems, i.e., systems in which particular
sequences of actions/tasks are activated as a result of reactions to speciﬁc events.
2.2. Mapping Functional Speciﬁcations to Real-Time IoT Architecture
In a typical approach to mapping a system speciﬁcation into a distributed information
system architecture, three main steps are performed [52]:
•
Resource allocation: At this stage, the target hardware architecture of the system
is determined. Resources can be processors, specialized hardware modules, and
communication channels (buses, communication processors, etc.). At the same time as
the allocation, the connections between system components are determined.
•
Assignment of tasks to resources: This step involves assigning individual tasks to
resources. Tasks are assigned to computing modules, and transmissions are assigned
to communication channels. Task allocation is closely related to resource allocation.
For specialized resources, only tasks corresponding to the function performed by the
resource can be assigned. Transmissions must only be assigned to communication
channels between resources with assigned communicating tasks. When two tasks are
assigned to the same resource, transmissions between them are ignored.
•
Task prioritization: Task scheduling is necessary to determine the order in which tasks are
performed when more than one task is assigned to a resource. Scheduling must consider
the sequential relationships between tasks. During scheduling, speed optimization is per-
formed. In the case of real-time systems, the main goal is to arrange the execution of tasks
Electronics 2022, 11, 4120
5 of 21
and transmissions in such a way that all timing constraints are met (hard-constrained
systems) or that timing constraint overruns are minimized (QoS maximization).
IoT systems are characterized by a speciﬁc architecture, and for this reason, it is
not possible to directly apply existing methods of synthesizing real-time systems to IoT
applications. The main distinguishing features of these systems are:
•
A distributed architecture based on internet infrastructure.
•
Communication through internet links, thus not ensuring that time constraints are met.
From the above-mentioned properties of IoT systems comes the need to develop
a specialized method for mapping speciﬁcations to the target architecture, as well as
the need to develop solutions to ensure the implementation of transmission that meets
real-time requirements.
3. Selected Elements of IoT System Architecture
There are many proposals for IoT system architectures. In order for a given architecture
to enable the implementation of a real-time system, it must meet certain requirements in
terms of the predictability of operation and the possibility of optimization in terms of
response time. This section presents an overview of the various elements of the IoT
architecture, with a focus on how they can be used in real-time systems.
3.1. Edge and Fog Computing
Today, the amount of data that are generated by IoT systems and then transmitted
over the network is increasing at a very high rate. Therefore, it is important to use the
throughput of IoT systems as efﬁciently as possible. The concepts of edge computing and
fog computing [53] can be used to optimize this problem. One of the main features of edge
computing is the clear separation of the physical devices that make up the edge infras-
tructure from the core network devices [54]. Edge devices can perform data preprocessing
functions at the network edges, which signiﬁcantly improves the ability to maintain the
required transmission time parameters in the context of real-time systems. If the tasks per-
formed by edge devices are subject to time constraints, then these devices are implemented
as real-time embedded systems enabling real-time data processing [55,56]. Therefore, it
is becoming increasingly desirable to use edge computing for smart data processing and
performing speciﬁc optimization tasks [57,58]. The partial ofﬂoading of centralized cloud
systems is also possible through fog computing mechanisms [59]. Solutions of this class
can perform services by computation at the level of a distributed, decentralized network
infrastructure (e.g., using local IoT networks/systems) [60]. Fog computing and edge
computing also provide some opportunity to apply function virtualization techniques on a
massive scale [61–65], which consequently reduces the demand for resources and comput-
ing power of a data center. Both of the solutions under consideration signiﬁcantly reduce
the amount of data that must be transmitted and processed by the core network/server
infrastructure, thus relieving the burden on traditional cloud computing and data center
systems. If the target resources are less loaded, then it is easier to meet the assumptions
that guarantee throughput and latency at levels appropriate for real-time solutions [66].
The primary purpose of edge infrastructure and the use of distributed computing is to
solve a number of critical tasks affecting the latency, throughput, energy consumption,
and scalability of IoT systems [67]. Moreover, these solutions allow for a high degree of
autonomy in managing the optimal conﬁguration of a system [68,69] and increasing the
level of security [70]. All of the above aspects favorably affect the ability to implement IoT
services with time requirements.
3.2. Programmable Networks and Virtualization Techniques
In the context of real-time IoT tasks, new developments in Software-Deﬁned Network-
ing (SDN) and mass-scale Network Function Virtualization (NFV) methods are important
elements to consider. SDN networks are commonly associated with IoT technology because
the architecture provides a more ﬂexible and manageable environment. In addition, more
Electronics 2022, 11, 4120
6 of 21
and more research (for example, on blockchain) is focused on implementing solutions
that combine SDN and IoT technologies with NFV methods. Therefore, it is anticipated
that NFV will be a very important tool to support the automation of network solutions,
including in real-time transmission issues.
In SDN, management tasks are separated from data transmission tasks. In this ap-
proach, network devices solely act as relays that transmit sequentially routed packets
from the source to the destination, with all policies in place for both communication and
security [71]. The management space in SDN is a highly centralized area, while the data
space operates on a distributed plane. Potential SDN applications related to real-time
transmission are shown in [72], where a four-tier cloudlet architecture (based on SDN) in
combination with a WBAN (Wireless Body Area Network) architecture was described. The
paper described a cloudlet—a mobile, cloud-based data center system that is located at
the edge of the network. This approach was shown to enable efﬁcient trafﬁc processing,
optimal resource utilization, and reduced latency, which is of great importance for real-time
systems. The approach proposes that all network controllers be located in a cloudlet,
resulting in better optimization in terms of QoS mechanisms, as well as a complete view
of the network. On the other hand, the authors of [73] proposed the concept of a three-
layer SDN application based on a WBAN scheme called an SDWBAN (Software-Deﬁned
Wireless Body Area Network). In this solution, network trafﬁc prioritization is performed.
Higher-priority packets are analyzed and sent through the network ﬁrst, which is made
possible by optimal resource allocation (e.g., throughput), path allocation and the use of
cloud computing. In this case, transmission latency is reduced by formulating a heuristic
allocation model for minimizing the service time of individual services. Security issues
for IoT systems are also an important issue. In this area, solutions using SDN are known,
such as artiﬁcial intelligence mechanisms that automatically analyze network trafﬁc while
taking real-time transmission requirements into account [74].
In today’s vast IT world, technology is beginning to play an increasingly important
role in the move away from physical infrastructure building and solutions based on dedi-
cated physical network devices to virtualization technology. An example of virtualization
technology in relation to the IoT area is the NFV solution. The implementation of virtual-
ization technology in IoT solutions provides ﬂexibility for applications regardless of the
platform on which this solution is based or built while maintaining the full management
of logical network functions and the modeling of the full technology stack. An additional
advantage of implementing NFV technology in IoT solutions is the ability to fully manage
and conﬁgure individual virtualized network elements at all levels (from physical machines
to virtualized machines to sublime network services) [75]. From the point of view of the
IoT and real-time requirements, the use of NFV virtualization technology has begun to play
a key role due to the requirements of real-time transmission, i.e., transmission with the
shortest possible packet delivery and processing time while maintaining an appropriate
QoS and meeting the deadline value requirements of individual packets [76]. The biggest
advantage of virtualization technology is its versatility in application to various IoT archi-
tectures, although due to its deﬁnition and similar mechanisms, NFV technology perfectly
complements IoT solutions based on the SDN model architecture.
3.3. Real-Time Database Systems
To ensure the best possible QoS performance in real-time transmission, the solutions
described in the previous sections are crucial from the points of view of hardware technolo-
gies and transmission and data processing concepts. At the same time, as the data volume
generated by IoT systems continues to grow, there is also a steady increase in the need for
solutions to store that data while supporting mechanisms that consider real-time require-
ments [77]. One of the directions is the concept “fast data”, which involves developing
database technology to ensure the fastest possible execution of queries. Examples of such
databases are Druid [78] and Volt Active Data [79].
Electronics 2022, 11, 4120
7 of 21
Some of the most well-known approaches for storing large datasets are SDDS (Scal-
able Distributed Data Structure) structures, which enable the virtualization of distributed
memory by aggregating resources at network nodes [80]. Considering real-time require-
ments and the need for QoS parameters, an extension of this concept in this direction are
SDDS LH/RP (Scalable Distributed Data Structure Linear Hashing/Range Partitioning) ap-
proaches dedicated to real-time cloud applications [81]. An SDDS server schedules queries
using real-time queuing methods that consider importance attributes, which enables the
achievement of a higher level of execution of queries in a certain time in the case of SDDS
LH/RP approaches than in the case of FIFO (First In, First Out) queuing approaches [82].
With such an implementation, QoS metrics in real-time IoT systems can be signiﬁcantly
improved [83]. The steady increase in demand for big data processing environments has
led to the development of more dedicated data storage models, such as NoSQL [84] and
NewSQL [85]. These IoT system solutions are beginning to gain value from the point of
view of time requirements due to the need to address the processing of large volumes of
data while maintaining QoS parameters.
In terms of real-time database systems, issues remain to be addressed in terms of
ensuring that hard real-time policies are met for queries that update data that are already
recorded/stored and for bucket splitting operations [86,87].
4. Task/Transmission Scheduling and Communication Protocols
The real-time system design methodology proposed in this paper assumes the appro-
priate scheduling of calculations and transmissions. In classic system solutions, schedul-
ing can be implemented through FIFO queuing or other static or dynamic scheduling
methods [88]. Static scheduling methods are mainly concerned with the design of embed-
ded systems, which are most often used to control various devices when there are time
constraints. These systems feature a dedicated architecture and perform predetermined
functions. Therefore, it is possible to estimate the execution time of each function and to
perform a ranking, ensuring that all time constraints are met. IoT systems can be viewed as
a generalization of embedded systems with a distributed architecture. The main difference
is the communication between system components. In the case of embedded systems, the
components are directly connected and the transmission time is predetermined. In the
case of IoT systems, transmission time also depends on other factors, e.g., on the trafﬁc
and throughput of links and on the route determined by routing processes. Thus, it is not
possible to directly apply known static task scheduling methods to IoT systems, though
these methods can be considered from the point of view of ensuring optimal cooperation
with relevant communication protocols. Therefore, this section examines the scheduling
methods and selected communication protocols used in data transmission tasks that assume
the need to meet real-time assumptions.
4.1. FIFO
Depending on the application, FIFO queuing mechanisms can be implemented as a
hardware sliding register or using different memory structures. Such solutions often use
network devices such as switches or routers. These devices queue data packets as they
travel from source to destination. Typically, one FIFO structure is used per connection [89].
Some network devices also have multiple FIFO structures/implementations for the simulta-
neous and independent queuing of different types of data. Most software implementations
of FIFO queuing do not meet security conditions and require an additional security mecha-
nism to verify the chain of data structures [90]. Achieving good performance in terms of
throughput and scalability while maintaining a high level of security in IoT systems has
always been a major challenge. The packet queuing process strategy represented by the
FIFO algorithm contributed to the later development of algorithms such as SAGA-PBFT
(Security-Aware Genetic Algorithm-based Practical Byzantine Fault Tolerance), which was
developed on the basis of the PBFT (Practical Byzantine Fault Tolerance) algorithm. The
Electronics 2022, 11, 4120
8 of 21
SAGA-PBFT algorithm is used in solutions such as the block chain, where security aspects
and transmission time requirements are extremely important [91].
4.2. Static and Dynamic Task Scheduling Methods in Real-Time Systems
Static task scheduling algorithms assume that before the target scheduling process, a
set of input tasks is processed according to one of the speciﬁed sorting rules. These rules
deﬁne how the input task array is sorted. With this approach, it is possible to determine
which packages, criteria, or parameters in the IoT architecture will have the highest priority
at the outset. Static task scheduling algorithms include LS (List Scheduling) mechanisms.
In this group, we can distinguish the following sorting rules: LPT (Longest Processing
Time), SPT (Shortest Processing Time), and RPT (Reverse Processing Time). In this case,
the drawback of using list scheduling in real-time solutions is the additional overhead
of executing the processes implemented in the sorting rules before the data packet is
forwarded to the next network layers. This adversely affects packet delivery times, so
meeting the goals of RTIoT solutions is difﬁcult to implement [92]. Another popular static
task scheduling algorithm is the Rate Monotonic Scheduling (RMS) method. This algorithm
assigns priorities to individual tasks before they begin execution that do not change during
the algorithm’s run time. Priorities are assigned to each task by taking the frequency of their
appearance into account (the task with the shortest period will have the highest priority).
RMS is typically used to schedule single-processor tasks [93], which is a major limitation of
it for the design of extended RTIoT solutions. On the other hand, its expropriation feature
(the highest priority task is performed) is decent in terms of maintaining the best possible
QoS performance and meeting real-time conditions.
For dynamic scheduling in the context of the research presented in this article, it is
worth considering the EDF (Earliest Deadline First) and LLF (Least Laxity First) algorithms.
Real-time systems distinguish between two types of input data. The ﬁrst type comprises
data generated over certain ﬁxed periods of time (e.g., trafﬁc resulting from the functionality
of the communication protocols used), and the second type comprises data generated as
a result of actual events (e.g., data from various types of sensors). In IoT systems, which
deal with data generated as a result of interactions taking place, the EDF algorithm [46]
may ﬁnd application in scheduling processes. In this solution, the value referred to as the
deadline for each task is taken as the priority value, so the lower it is, the closer the deadline
for a given task is. An additional advantage of the EDF algorithm over others is its good
utilization of CPU resources and fairly fast response times, which, from the point of view of
designing real-time IoT systems, can have key roles in ensuring adequate QoS parameters
and other real-time requirements. Another example of a dynamic scheduling algorithm
that can ﬁnd application in a real-time IoT system is the LLF algorithm. It uses the deadline
value, which, along with the time left to complete a given task, is used to calculate the laxity
parameter used to prioritize the execution of individual tasks. In this case, the lower the
value of laxity, the higher priority the task will be and the faster it should be completed [94].
A certain disadvantage of this algorithm is when there are many tasks with the same or
similar laxity value simultaneously, the demand for computing power increases [95]. This
represents a kind of limitation from the point of view of applications for RTIoT systems,
since one of the priorities of IoT systems is to optimize their energy intensity [96]. On the
other hand, however, the advantages of this algorithm include resistance to overloading, to
which systems using the EDF algorithm are prone, which translates into the possibility of
using it in the design and implementation of real-time systems [83]. Considering the above,
it can be concluded that both EDF and LLF can be used for certain tasks in the design and
implementation of RTIoT solutions.
4.3. Communication Protocols
In real-time IoT systems, in addition to the described task scheduling techniques, the
use of appropriate types of transmission media and the implementation of proper com-
munication protocols, with particular emphasis on routing protocols, also play important
Electronics 2022, 11, 4120
9 of 21
roles. Some well-known routing protocols to consider when designing RTIoT solutions
are: RSTP (Real Time Streaming Protocol), WebRTC (Web Real Time Communication),
XMPP (Extensible Messaging and Presence Protocol), MQTT (Message Queue Telemetry
Transport), CoAP (Constrained Application Protocol), WebSocket, and 6LoWPAN (IPv6
over Low-Power Wireless Personal Area Networks).
The RSTP is an application layer protocol for the control, transmission and delivery of
data while maintaining real-time transmission criteria. The most common implementations
of this protocol are systems used to transmit voice and video in real time. Data are
continuously delivered, even when RTSP requests are not received by the server. A new
area in which this protocol is being applied is the technology area of the teaching of
language, which includes listening, speaking, reading and writing [97]. Another protocol
implemented in real-time IoT systems is WebRTC. Its most common applications are
solutions for transmitting video images or streaming data in the broadest sense while
achieving the lowest possible levels of latency and data transmission loss, as exempliﬁed by
applications for voice transmission and videoconferencing. Research [98] conducted in the
area of the WebRTC protocol indicates that it yields better response times and connection
stabilization times in web applications compared with other streaming protocols such
as the RTSP [99]. In addition, from the point of view of QoS parameters and energy
consumption, the implementation of the WebRTC protocol allows one to achieve better
values, which translates into meeting the real-time transmission requirements of solutions
implemented in IoT systems. The XMPP protocol, on the other hand, is based on XML [100].
The protocol is commonly available and can be freely modiﬁed, and many XMPP servers
are available [101]. This translates into its main use being implementations in systems
and applications for exchanging text-based content such as popular instant messaging
applications. The simplest and lightest protocol for real-time data transmission is the MQTT
protocol, which is based on the publish/subscribe pattern. It is designed for transmission
for devices that do not require a high throughput. By limiting the transmission speed, the
protocol provides a greater reliability. The protocol is perfect for IoT machine-to-machine
connections, mobile devices, and where throughput and energy savings are required. By
using this protocol, one can easily transfer data during a conversation from one device
to another and continue the conversation [102]. An example of a protocol that uses the
UDP protocol for communication and is also applicable to RTIoT systems is the CoAP
protocol. It has been optimized for constrained devices and networks (used in wireless
sensor networks) [103]. The CoAP protocol extends the paradigm of ubiquitous web
services in mobile applications to IoT and M2M solutions, which can then be developed
using shared and reusable RESTful web services. In doing so, this protocol considers
IoT constraints and requirements or QoS requirements [104]. A two-way data exchange
channel over a single TCP connection is provided by the WebSocket protocol. The protocol
is designed to operate on ports 80 and 443, similarly to HTTP, allowing for interactions
between a web browser (or other client application) and a web server at a lower load
than alternatives while making it much easier to transfer real-time data to and from the
server, which is an asset when considering its use in IoT systems [105]. Thanks to the
previously mentioned interactions between the web browser and the server, the protocol
has found applications in the development of online games, particularly [106]. With the
development of technology, the need for IPv4 address allocation has gradually increased,
which has contributed to basically exhausting the entire pool of this addressing. In response
to the introduction of the new IPv6 addressing standard and the need to handle packets
containing such addresses, the 6LowPAN routing protocol, which is characterized by a
low power consumption, was created. The shortcomings of this protocol include the large
size of the header relative to the data themselves; from the point of view of application
considerations, the implementation of this protocol in RTIoT solutions can contribute to
an increase in the level of latency or packet loss with a direct impact on the deterioration
of QoS parameters. Today, further research is underway to address the challenges of the
6LowPAN protocol, which include fragmentation, header compression and security [107].
Electronics 2022, 11, 4120
10 of 21
5. RTIoT System Design Methodology
The implementation of the functional model of the real-time system proposed in
Section 2 requires the implementation of selected elements included in the IoT solution
architecture. Typical IoT systems primarily consist of sensors providing data to the system,
end devices (usually also equipped with sensors), a server application, and a client appli-
cation [5]. The sensors can be directly connected to the server via internet links or can be
an integral part of the end device. Indirectly, there may also be edge devices whose job is
to pre-process data. Communication is usually carried out via low-energy technologies
such as BLE (Bluetooth Low Energy) [108], ZigBee [109], and LoRaWAN (Long Range
Wide Area Network) [110]. End devices using sensors communicate with an IoT system
via internet links. They can also include actuators and controllers, so an IoT system can
remotely control such devices. Server applications are usually installed in cloud computing
or on a dedicated server, while the client applications used to operate the system can come
in the form of mobile, desktop or web applications. All of the aforementioned components
communicate using the relevant protocols.
In the case of real-time systems, there is a time limit on obtaining a response, which
means that once a request is sent, a response is expected to be obtained within an assumed
maximum time (deadline). Exceeding this time can be treated as an error (systems with
hard constraints) or as a reduction in service quality (systems with soft constraints) [111].
Requests can be sent by either end devices or server or client applications. In order to
reduce the occurrence of the aforementioned errors or to maintain the required level of
quality of service in IoT systems, one can use the solutions described earlier, such as edge
computing, fog computing, SDN, NFV, real-time databases, scheduling methods, and
relevant communication protocols. These elements are described in Sections 3 and 4 of this
article, and based on them, an illustrative architecture for a real-time IoT system can be
proposed, as shown in Figure 2. In the architecture, the following computing layers that
can perform various tasks of the IoT system can be distinguished:
•
Sensor and actuator layer (SL): the layer consisting the interface between an IoT system
and its environment that enables the collection of data from the environment and the
control of the elements of the environment.
•
Edge layer (EL) (optional): an intermediate layer that enables the distributed process-
ing of data without the need to send them to a central system server.
•
Cloud layer (CL): the layer that contains the system’s servers and databases and that
usually controls the operation of the entire system.
•
User layer (UL): the layer that uses user applications (mobile, web or desktop). These
applications allow a user to interact with the rest of the IoT system.
Electronics 2022, 11, x FOR PEER REVIEW 
11 of 22 
 
 
Cloud layer (CL): the layer that contains the system’s servers and databases and that 
usually controls the operation of the entire system. 
 
User layer (UL): the layer that uses user applications (mobile, web or desktop). 
These applications allow a user to interact with the rest of the IoT system. 
 
Figure 2. General architecture of a real-time IoT system. 
There are communication links between different layers that enable data transfer. 
5.1. System Specifications 
The starting point for designing an RTIoT system is a system specification in the 
f
f
ib
d
f
k
h
E
h
k
h d
ib
f
i
f h
Figure 2. General architecture of a real-time IoT system.
Electronics 2022, 11, 4120
11 of 21
There are communication links between different layers that enable data transfer.
5.1. System Speciﬁcations
The starting point for designing an RTIoT system is a system speciﬁcation in the form
of an attributed set of task graphs. Each task graph describes one function of the system.
The following attributes are deﬁned for each graph:
•
Maximum frequency of graph activation: This attribute speciﬁes the maximum fre-
quency of appearance of input events that cause the execution of functions represented
by a given TG.
•
Maximum number of TG instances: This attribute speciﬁes the maximum number of
simultaneous instances of the task graph. This corresponds to the maximum number
of simultaneous events that cause the activation of the functions described by the TG.
•
A set of time constraints: The time constraints are associated with the selected paths
in the task graph and deﬁne the maximum time in which all tasks must be completed
from the activation of the task that starts the path to the completion of the task that
ends the path.
•
For each task, an attribute is speciﬁed that assigns the task to a speciﬁc layer of the
architecture. This attribute is deﬁned by the designer.
Example task graphs are shown in Figures 3–6. These graphs describe nine basic
functions of a smart city system for managing parking spaces. Figure 3 shows a user-
activated task graph for the following system functionalities: searching for the parking
space closest to the user’s current location, the function of ﬁnding the user’s car in the
parking lot based on their license plate number, the function of reserving any free parking
space based on the entered search criteria, the function of charging a parking fee for the
used parking lot, and the function of retrieving information on weather conditions.
Electronics 2022, 11, x FOR PEER REVIEW 
1
 
 
Figure 3. Task graph of the parking space management system. 
Figure 3. Task graph of the parking space management system.
Electronics 2022, 11, 4120
12 of 21
 
Figure 3. Task graph of the parking space management system. 
 
Figure 4. Task graph for the problem of monitoring/managing parking spaces. 
Figure 4. Task graph for the problem of monitoring/managing parking spaces.
lectronics 2022, 11, x FOR PEER REVIEW 
 
Figure 5. Task graph of basic system functions triggered from the application. 
Figure 5. Task graph of basic system functions triggered from the application.
Electronics 2022, 11, 4120
13 of 21
 
 
Figure 5. Task graph of basic system functions triggered from the application. 
 
Figure 6. Task graph for the problem of collecting/updating data on weather conditions. 
For all system functionality, the starting point, or trigger (T0_0), is the end-user ac-
tivity in a dedicated application made by selecting the appropriate function at the UL 
layer level. Depending on the selected function, a further sequence of events follows. 
When the user selects the parking space search function (T0_1), the user’s current loca-
tion is retrieved using the GPS module (T0_4). If the car search function (T0_2) is selected, 
the user must enter the license plate number of the searched vehicle (T0_10) into the ap-
plication. On the other hand, when the function of reserving a free parking space is se-
lected from the user’s application (T0_03), the end user enters data/criteria for the search 
function, such as city and street (T0_12). The user also has the ability to download in-
formation on weather conditions (T0_17). In the next step (T0_5), the central server (a 
dedicated cloud application running in the CL layer) receives queries from the UL layer 
and starts the processes necessary to perform the called functions. For example, data-
Figure 6. Task graph for the problem of collecting/updating data on weather conditions.
For all system functionality, the starting point, or trigger (T0_0), is the end-user activity
in a dedicated application made by selecting the appropriate function at the UL layer
level. Depending on the selected function, a further sequence of events follows. When
the user selects the parking space search function (T0_1), the user’s current location is
retrieved using the GPS module (T0_4). If the car search function (T0_2) is selected, the user
must enter the license plate number of the searched vehicle (T0_10) into the application.
On the other hand, when the function of reserving a free parking space is selected from
the user’s application (T0_03), the end user enters data/criteria for the search function,
such as city and street (T0_12). The user also has the ability to download information
on weather conditions (T0_17). In the next step (T0_5), the central server (a dedicated
cloud application running in the CL layer) receives queries from the UL layer and starts
the processes necessary to perform the called functions. For example, databases can be
searched to ﬁnd free parking spaces while considering information from the GPS tracker. A
search for license plate numbers can be run, along with the retrieval of the vehicle location
data assigned to them (parking/parking space number). Taking the user’s criteria into
account, free parking spaces can be searched for, or the fee due can be calculated based on
the time the parking space is occupied and the parking rate for the given parking space. The
(T0_6) task runs functions in the user application responsible for receiving and processing
data coming from the CL layer. In the next step, the user, based on the generated data,
selects a parking space by activating the “Reserve” function (T0_7); in turn, for the process
of searching for a car based on the entered license plate number (T0_10), the end result is
the presentation of the results of the query processing in the end-user application (T0_11) or
the start of the payment process using a debit/credit card or bank transfer (T0_14). It is also
possible to visualize data on weather conditions (T0_18). Once the task is completed (T0_7),
the server-level procedure for processing a parking space reservation request (T0_8) is
started, and the state of the sensor is changed; this is realized, for example, by changing the
color of the marking of a given space from green to red (T0_9). The task (T0_14) is followed
by the payment process through data exchange with the bank/payment card architecture
(T0_15). At the end of this path, the result is received in the form of information on the
payment in progress (T0_16).
Figure 4 shows a task graph for the functionality of monitoring and updating the
status of individual parking spaces.
The starting point/trigger for system function aimed at monitoring or managing
parking spaces is to register a change in sensor state/status (T1_0) at the sensor (sensor)
layer level. Then, via the network infrastructure, such information is transmitted to the
servers that make up the parking system (T1_1). In the next step (T1_2), the central
server (a dedicated cloud application running at the CL layer) receives queries from the
EL layer and runs the processes necessary to execute the called functions—in this case, a
function to update the database with the latest parking sensor states/statuses. In order
Electronics 2022, 11, 4120
14 of 21
for the process to be considered successful, the end result at the edge layer is to run
a procedure that receives a conﬁrmation of the completion of cloud processing for the
database update (T1_3).
Figure 5 presents a task graph for the following functionalities: the function of reserv-
ing an available parking space for given time criteria (T2_1) and the function of plotting a
route leading to a vehicle in the parking lot (T2_2). As for the task graph in Figure 3, the
trigger for these functionalities is also the end-user activity of selecting the appropriate
function from the user application (T2_0). Depending on the user’s selection of a speciﬁc
function, they may be prompted in the next step of the process to provide the data necessary
to perform the search function (T2_3). If the function of routing to a vehicle is implemented,
the results of calling the cloud processing presentation function may be displayed in the
user’s application (T2_9). In the next step (T2_4) the central server (a dedicated cloud appli-
cation running in the CL layer) receives queries from the UL layer and starts the processes
necessary to perform the called functions. For example, a database can be searched for
free parking spaces given the criteria set by the user or a process can be run to search the
database to determine the location of a vehicle with a speciﬁc license plate number. Then,
the function responsible for receiving and processing data coming from the CL layer (T2_5)
is run in the user’s application. In the next step, based on the generated data, the user
selects a parking space by running the reservation function (T2_6). Alternatively, from
the user’s application level, a function for the presentation of the results of cloud query
processing (T2_9) is run. After the task (T2_6) is completed, the procedure for processing a
parking reservation request (T2_7) is started from the EL layer. The next step could be a
task to start the navigation function in the user’s application interface (T2_10). Finally, a
change in the state of the sensor is made; this can be visualized, for example, by changing
the color of the marking of the given parking space from green to red (T2_8). For another
process, it could be running a function designed to retrieve current position data from a
GPS module.
The last graph shows the tasks for the functionality of reading and processing informa-
tion on the value of the outdoor temperature, as well as reading and processing information
on the state of atmospheric pressure.
Similar to the task graph shown in Figure 4, the tasks described for the problem of
collecting/updating data on weather conditions also have sensor readings (T3_0) as the
starting point/trigger for system operation. Then, through the network infrastructure, the
temperature (T3_1) or the atmospheric pressure (T3_2) information is transmitted to the
servers that make up the CL layer level of the system. In the next step (T3_3), the central
server receives queries from the EL layer and starts the processes necessary to perform the
called functions. Processes can be considered successfully completed when the end result
at the EL layer is the launch of a procedure that receives conﬁrmation of the completion of
cloud processing for database updates (T3_4).
5.2. Mapping Speciﬁcations to RTIoT System Architecture
The assignment of tasks to the RTIoT architecture layer is performed by the designer
at the system speciﬁcation stage. The next step is to map the speciﬁcations to the different
layers of the RTIoT architecture. Figure 7 shows the results of the speciﬁcation mapping
introduced in Section 5.1.
For simplicity, only one instance of each graph was assumed. This corresponds to a
system with one user and single sensors (one parking lot and one parking space). In a real
system, one instance is created for each user and one instance is created for each sensor
that can activate the TG. For this purpose, it is necessary to assume the maximum load on
the system, i.e., the maximum number of simultaneous users and the maximum number of
parking lots and stands served by the system. For clarity, the ﬁgure also does not indicate
transmission volumes and time constraints. Based on the mapping, it is possible to obtain
information about the transmissions between the layers and the sequence dependencies
between these transmissions. For example, there may be 10 transmissions between the
Electronics 2022, 11, 4120
15 of 21
UL and CL layers: T0_4→T0_5, T0_10→T0_5, T0_12→T0_5, T0_17→T0_5, T0_5→T0_6,
T0_14→T0_15, T0_15→T0_16, T2_3→T2_4, T2_9→T2_4, and T2_4→T2_5. It can also be
noted that there are sequence dependencies between some transmissions, which means
that these transmissions will not compete with each other for the communication link. This
is important information from the point of view of transmission scheduling.
 
g p
gg
y
p
g
temperature (T3_1) or the atmospheric pressure (T3_2) information is transmitted to the 
servers that make up the CL layer level of the system. In the next step (T3_3), the central 
server receives queries from the EL layer and starts the processes necessary to perform 
the called functions. Processes can be considered successfully completed when the end 
result at the EL layer is the launch of a procedure that receives confirmation of the com-
pletion of cloud processing for database updates (T3_4). 
5.2. Mapping Specifications to RTIoT System Architecture 
The assignment of tasks to the RTIoT architecture layer is performed by the designer 
at the system specification stage. The next step is to map the specifications to the different 
layers of the RTIoT architecture. Figure 7 shows the results of the specification mapping 
introduced in Section 5.1. 
 
Figure 7. Mapping the described processes to RTIoT system architecture. 
Figure 7. Mapping the described processes to RTIoT system architecture.
Assuming the maximum frequency of activation of individual tasks and the size
of individual transmissions, it is possible to estimate the throughput requirements of
communication links. These requirements can be reduced by appropriately scheduling
transmissions so that time-constrained transmissions are executed in an order that ensures
the maximum QoS.
5.3. RTIoT System Optimization
In the RTIoT system, each function, represented by a task graph, can be simultaneously
activated by different sources (users and sensors). This can be represented by multiple
instances of a given graph. When designing an RTIoT system, one speciﬁes the requirements
for the system by identifying the following constraints:
•
Maximum number of instances of a given graph: This parameter determines the
maximum load on the system in terms of the number of simultaneously activated tasks.
Electronics 2022, 11, 4120
16 of 21
•
Maximum processing time (deadline): This parameter speciﬁes the maximum time
that can elapse from the start of the tstart task to the completion of the tstop task. For
a given system, there can be multiple time constraints that deﬁne different paths in
task graphs. For soft-real-time systems, a soft constraint is deﬁned as ds
max and a hard
constraint is deﬁned as dh
max.
The goal of optimizing RTIoT systems is to achieve the highest possible QoS. The QoS
for a single constraint can be deﬁned as:
QoSi =





0
if ti > dh
max
1
if ti < ds
max
1 −
ti−ds
max
dh
max−ds
max
in other cases
(1)
where ti is the current execution time of tasks covered by the i-th constraint.
Then, the total QoS for the system can be determined as the average value of all QoSi:
QoS =
n
∑
i=0
QoSi
n
(2)
where n is the number of all constraints in all instances of task graphs.
While intending to obtain the highest possible QoS value, the optimization of the
system consists in prioritizing the execution of tasks and transmissions in such a way as to
minimize any exceedance of time constrains. For this purpose, the scheduling methods
described in Section 4 can be used. However, in order to be able to perform tasks and
transmissions according to the optimized prioritization, it is necessary to consider the
following properties of the RTIoT architecture:
•
Transmissions are carried out over shared internet links: To ensure predictable trans-
mission times, it is necessary to develop routing methods that consider the required
order and priority of transmissions.
•
Individual tasks and transmissions are assigned to resources distributed over the
internet. Therefore, in order to execute them in the required order, it is necessary
to use time synchronization mechanisms. This can be accomplished by developing
appropriate communication protocols.
Assuming that the aforementioned solutions are available, the presented methodology
can enable the automatic synthesis of QoS-optimized RTIoT systems. The quality of a given
solution is evaluated by calculating the QoS value deﬁned by Equation (2). This value
is calculated for the worst-case scenario, i.e., assuming the maximum system load and
maximum computation and transmission times.
6. Conclusions
This article presents a methodology for designing RTIoT systems that includes the
following elements:
•
Four-layer generic RTIoT system architecture model.
•
Functional speciﬁcation method in the form of a set of task graphs with assignment of
tasks to IoT architecture layers.
•
A method for mapping functional speciﬁcations into an RTIoT system architecture.
•
Requirements for communication protocols and routing methods used in RTIoT systems.
For the proposed RTIoT architecture model, a method is presented to ensure that
the functional speciﬁcation is mapped into an optimized IoT architecture. The starting
point is the speciﬁcation of the functions of a given system in the form of task graphs.
For each task, their assignment to the different layers of the IoT architecture and time
constraints are speciﬁed. The speciﬁcation is then mapped into the target architecture
by globally prioritizing tasks and transmissions. The scheduling method optimizes the
schedule to achieve the highest possible QoS. The presented methodology is based on
Electronics 2022, 11, 4120
17 of 21
analogous methodologies used in the synthesis of embedded systems. However, due to
the nature of the IoT architecture, it was necessary to consider speciﬁc features of the
IoT architecture such as the lack of the centralized control of all elements of the system,
the sharing of communication and computing infrastructure with other systems, and
the dynamic number of tasks in the system. This paper also provides an overview of
existing methods and technologies relevant to RTIoT systems. The purpose of this review
was to present current solutions that can be applied to RTIoT systems, as well as to
indicate the missing elements that require development in order to create a complete design
environment for RTIoT systems. In this way, this paper can also be a valuable resource for
designers and others interested in RTIoT.
The proposed methodology was illustrated with an example of designing a practical
RTIoT system that performs the functions of a smart system for handling a city’s parking
lots. The example demonstrated the practical usefulness of the proposed methodology in
the design and optimization of RTIoT systems. To the best of our knowledge, this is the ﬁrst
paper to present a complete methodology for the design of a broad class of RTIoT systems
while considering the QoS optimization of such systems.
Further work will involve the development of routing methods and communication
protocols to enable the implementation of systems designed according to the method-
ology presented in this work. The result will be a complete RTIoT system design and
implementation environment that ensures the creation of systems with a high level of QoS.
Author Contributions: S.D.: conceptualization, methodology, investigation, formal analysis, valida-
tion, visualization, writing—original draft, writing—review and editing, supervision, and funding
acquisition; M.P.: conceptualization, methodology, investigation, formal analysis, validation, visu-
alization, writing—original draft, writing—review and editing, and supervision; Ł.A.: conceptu-
alization, methodology, investigation, formal analysis, validation, visualization, writing—original
draft, and writing—review and editing. All authors have read and agreed to the published version of
the manuscript.
Funding: This research received no external funding.
Data Availability Statement: Not applicable.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1.
Qadri, Y.A.; Nauman, A.; Zikria, Y.B.; Vasilakos, A.V.; Kim, S.W. The Future of Healthcare Internet of Things: A Survey of
Emerging Technologies. IEEE Commun. Surv. Tutor. 2020, 22, 1121–1167. [CrossRef]
2.
Sadhukhan, P. An IoT-based E-Parking System for Smart Cities. In Proceedings of the 2017 International Conference on Advances
in Computing, Communications and Informatics (ICACCI), Udupi, India, 13–16 September 2017.
3.
Płaza, M.; Belka, R.; Szcze´sniak, Z. Towards a different world–On the potential of the internet of everything. IAPGOS 2019,
2, 8–11. [CrossRef]
4.
Shuja, J.; Humayun, M.A.; Alasmary, W.; Sinky, H.; Alanazi, E.; Khan, M.K. Resource efﬁcient geo-textual hierarchical clustering
framework for social IoT applications. IEEE Sens. J. 2021, 21, 25114–25122. [CrossRef]
5.
Khanna, A. IoT based Smart Parking System. In Proceedings of the 2016 International Conference on Internet of Things and
Applications (IOTA), Maharashtra Institute of Technology, Pune, India, 22–24 January 2016.
6.
Ahmad, I.; Pothuganti, K. Design & implementation of real time autonomouscar by using image processing & IoT. In Proceedings
of the 2020 Third International Conference on Smart Systems and Inventive Technology (ICSSIT 2020), Tirunelveli, India,
20–22 August 2020.
7.
Belka, R.; Deniziak, S.; Płaza, M.; Hejduk, M.; Pi˛eta, P.; Płaza, M.; Czekaj, P.; Wołowiec, P.; Ludwinek, K. Integrated visitor
support system for tourism industry based on IoT technologies. In Proceedings of the SPIE 2018, Applications in Astronomy,
Communications, Industry, and High-Energy Physics Experiments, Wilga, Poland, 26 May–4 June 2018; p. 108081J. [CrossRef]
8.
Pi˛eta, P.; Deniziak, S.; Belka, R.; Płaza, M.; Płaza, M. Multi-domain model for simulating smart IoT-based theme parks. In Proceed-
ings of the SPIE 2018, Photonics Applications in Astronomy, Communications, Industry, and High-Energy Physics Experiments,
Wilga, Poland, 26 May–4 June 2018; p. 108082T. [CrossRef]
9.
Ivankova, G.V.; Mochalina, E.P.; Goncharova, N.L. Internet of Things (IoT) in logistics. IOP Conf. Ser. Mater. Sci. Eng. 2020,
940, 1–7. [CrossRef]
10.
Song, Y.; Yu, F.R.; Li Zhou, F.; Yang, X.; He, Z. Applications of the Internet of Things (IoT) in Smart Logistics: A Comprehensive
Survey. IEEE Internet Things J. 2021, 8, 4250–4274. [CrossRef]
Electronics 2022, 11, 4120
18 of 21
11.
Muangprathub, J.; Boonnam, N.; Kajornkasirat, S.; Lekbangpong, N.; Wanichsombat, A.; Nillaor, P. IoT and agriculture data
analysis for smart farm. Comput. Electron. Agric. 2019, 156, 467–474. [CrossRef]
12.
Płaza, M.; Belka, R.; Płaza, M.; Deniziak, S.; Pi˛eta, P.; Doszczeczko, S. Analysis of feasibility and capabilities of RTLS systems
in tourism industry. In Proceedings of the SPIE 2018, Photonics Applications in Astronomy, Communications, Industry, and
High-Energy Physics Experiments, Wilga, Poland, 26 May–4 June 2018; p. 108080C. [CrossRef]
13.
Kodali, R.K.; Rajanarayanan, S.C.; Koganti, A.; Boppana, L. IoT based security system. In Proceedings of the TENCON 2019–2019
IEEE Region 10 Conference (TENCON), Kochi, India, 17–20 October 2019.
14.
Kang, B.; Park, S.; Lee, T.; Park, S. IoT-based monitoring system using tri-level context making model for smart home ser-
vices. In Proceedings of the 2015 IEEE International Conference on Consumer Electronics (ICCE), Las Vegas, NV, USA,
9–12 January 2015.
15.
Chen, X.-Y.; Jin, Z.-G. Research on Key Technology and Applications for Internet of Things. Phys. Procedia 2012, 33, 561–566.
[CrossRef]
16.
Balandina, E.; Balandin, S.; Koucheryavy, Y.; Mouromtsev, D. IoT Use Cases in Healthcare and Tourism. In Proceedings of the
2015 IEEE 17th Conference on Business Informatics, Lisbon, Portugal, 13–16 July 2015.
17.
Philip, B.V.; Alpcan, T.; Jin, J.; Palaniswami, M. Distributed Real-Time IoT for Autonomous Vehicles. IEEE Trans. Ind. Inform. 2019,
15, 1131–1140. [CrossRef]
18.
Saraf, S.B.; Gawali, D.H. IoT Based Smart Irrigation Monitoring And Controlling System. In Proceedings of the 2017 2nd IEEE
International Conference On Recent Trends in Electronics Information & Communication Technology (RTEICT), Bangalore, India,
19–20 May 2017.
19.
Pawar, S.; Kithani, V.; Ahuja, S.; Sahu, S. Smart Home Security using IoT and Face Recognition. In Proceedings of the 2018 Fourth
International Conference on Computing Communication Control and Automation (ICCUBEA), Pune, India, 16–18 August 2018.
20.
Lu, D.; Teng, Q. Application of Cloud Computing and IoT in Logistics. J. Softw. Eng. Appl. 2012, 5, 204–207. [CrossRef]
21.
Ebling, M.R.; Watson, J. IoT: From Sports to Fashion and Everything In-Between. IEEE Pervasive Comput. 2016, 15, 2–4. [CrossRef]
22.
Tianxiang, Z. A Mobile Architecture to Real-time Device Safety Monitoring of Amusement Park Ride Based on the Internet of
Things. Contemp. Logist. 2011, 5, 42–46.
23.
Isyanto, H.; Ariﬁn, A.S.; Suryanegara, M. Design and Implementation of IoT-Based Smart Home Voice Commands for disabled
people using Google Assistant. In Proceedings of the 2020 International Conference on Smart Technology and Applications
(ICoSTA), Surabaya, Indonesia, 20 February 2020.
24.
Patel, S.; Kumar, P.; Garg, S.; Kumar, R. Face Recognition based smart attendance system using IoT. Int. J. Comput. Sci. Eng. 2018,
6, 871–877. [CrossRef]
25.
Avateﬁpour, O.; Sadry, F. Trafﬁc Management System Using IoT Technology-A Comparative Review. In Proceedings of the 2018
IEEE International Conference on Electro/Information Technology (EIT), Rochester, MI, USA, 3–5 May 2018.
26.
Płaza, M.; Deniziak, S.; Płaza, M.; Belka, R.; Pi˛eta, P. Analysis of parallel computational models for clustering. In Proceedings of
the SPIE 2018, Photonics Applications in Astronomy, Communications, Industry, and High-Energy Physics Experiments, Wilga,
Poland, 3–10 June 2018; p. 108081O. [CrossRef]
27.
Pradityo, F.; Surantha, N. Indoor Air Quality Monitoring and Controlling System Based on IoT and Fuzzy Logic. In Proceedings
of the 2019 7th International Conference on Information and Communication Technology (ICoICT), Kuala Lumpur, Malaysia,
24–26 July 2019.
28.
Kalsoom, T.; Ahmed, S.; Raﬁ-ul-Shan, P.M.; Azmat, M.; Akhtar, P.; Pervez, Z.; Imran, M.A.; Ur-Rehman, M. Impact of IoT on
Manufacturing Industry 4.0: A New Triangular Systematic Review. Sustainability 2021, 13, 12506. [CrossRef]
29.
Jayaraman, P.P.; Perera, C.; Georgakopoulos, D.; Dustdar, S.; Thakker, D.; Ranjan, R. Analytics-as-a-service in a multi-cloud
environment through semantically-enabled hierarchical data processing. Softw. Pract. Exp. 2010, 47, 1139–1156. [CrossRef]
30.
Mourtzis, D.; Vlachou, E.; Milas, N. Industrial Big Data as a result of IoT adoption in Manufacturing. Procedia CIRP 2016,
55, 290–295. [CrossRef]
31.
Ramnath, S.; Javali, A.; Narang, B.; Mishra, P.; Routray, S.K. IoT based localization and tracking. In Proceedings of the 2017
International Conference on IoT and Application (ICIOT), Nagapattinam, India, 19–20 May 2017.
32.
Kheliﬁ, F.; Bradai, A.; Benslimane, A.; Rawat, P.; Atri, M. A Survey of Localization Systems in Internet of Things. Mob. Netw. Appl.
2019, 24, 761–785. [CrossRef]
33.
B ˛ak, S.; Czarnecki, R.; Deniziak, S. Synthesis of real-time cloud applications for Internet of Things. Turk. J. Electr. Eng. Comput. Sci.
2015, 23, 913–929. [CrossRef]
34.
Intel. Intel Time Coordinated Computing Tools (Intel TCC Tools). 2022. Available online: https://www.intel.com/content/
www/us/en/developer/tools/time-coordinated-computing-tools/overview.html (accessed on 10 September 2022).
35.
Intel. Real-Time at the Edge: Overview. 2022. Available online: https://www.intel.com/content/www/us/en/design/technologies-
and-topics/iot/real-time.html (accessed on 10 September 2022).
36.
Lee, J.; Park, S. Time-Sensitive Network (TSN) Experiment in Sensor-Based Integrated Environment for Autonomous Driving.
Sensors 2019, 19, 1111. [CrossRef]
37.
Rawat, P.; Singh, K.D.; Bonnin, J.M. Cognitive Radio for M2M and Internet of Things: A survey. Comput. Commun. 2016, 94, 1–29.
[CrossRef]
Electronics 2022, 11, 4120
19 of 21
38.
Perera, C.; Talagala, D.S.; Liu, C.H.; Estrella, J.C. Energy-Efﬁcient Location and Activity-Aware On-Demand Mobile Distributed
Sensing Platform for Sensing as a Service in IoT Clouds. IEEE Trans. Comput. Soc. Syst. 2015, 2, 171–181. [CrossRef]
39.
Lasota, M.; Deniziak, S.; Chrobot, A. Scalable Distributed Datastore for Real-Time Cloud Computing. In Federated Conference on
Software Development and Object Technologies; Springer: Cham, Switzerland, 2017; Volume 511, pp. 193–207.
40.
Czarnecki, R.; Deniziak, S. Embedded Real-Time HTTP Server. Int. J. Comput. Netw. Inf. Secur. 2015, 5, 1–8. [CrossRef]
41.
Zhao, J.-C.; Zhang, J.-F.; Feng, Y.; Guo, J.-X. The Study and Application of the IoT Technology in Agriculture. In Proceedings of
the 2010 3rd International Conference on Computer Science and Information Technology, Chengdu, China, 9–11 July 2010.
42.
Lee, J.; Kim, J.; Kim, S.; Lim, C.; Jung, J. Enhanced distributed streaming system based on RTP/RTSP in resurgent ability.
In Proceedings of the Fourth Annual ACIS International Conference on Computer and Information Science (ICIS’05), Jeju Island,
Republic of Korea, 14–16 July 2005.
43.
Kirsche, M.; Klauck, R. Unify to bridge gaps: Bringing XMPP into the Internet of Things. In Proceedings of the 2012 IEEE
International Conference on Pervasive Computing and Communications Workshops, Lugano, Switzerland, 19–23 March 2012.
44.
Krishnaa, G.G.; Krishnaa, G.; Bhalajia, N. Analysis of Routing Protocol for Low-Power and Lossy Networks in IoT Real Time.
Appl. Procedia Comput. Sci. 2016, 87, 270–274. [CrossRef]
45.
Biswas, A.R.; Giaffreda, R. IoT and Cloud Convergence: Opportunities and Challenges. In Proceedings of the 2014 IEEE World
Forum on Internet of Things (WF-IoT), Seoul, Republic of Korea, 6–8 March 2014.
46.
Ahmad, S.; Malik, S.; Ullah, I.; Fayaz, M.; Park, D.-H.; Kim, K.; Kim, D.H. An Adaptive Approach Based on Resource-Awareness
Towards Power-Efﬁcient Real-Time Periodic Task Modeling on Embedded IoT Devices. Processes 2018, 6, 90. [CrossRef]
47.
Eugne, D.; Ngangue, N.; Andomaya, C. On Enhancing Technology Coexistence in theIoT Era: ZigBee and 802.11 Case. IEEE
Access 2016, 4, 1835–1844.
48.
Stonebraker, M.; Weisberg, A. The VoltDB Main Memory DBMS. IEEE Computer Society Technical Committee on Data Engineer-
ing. 2013. Available online: http://sites.computer.org/debull/A13june/VoltDB1.pdf (accessed on 10 September 2022).
49.
Li, W.-J.; Yen, C.; Lin, Y.-S.; Tung, S.-C.; Huang, S.M. Just IoT Internet of Things based on the Firebase Real-time Database.
In Proceedings of the 2018 IEEE International Conference on Smart Manufacturing, Industrial & Logistics Engineering (SMILE),
Hsinchu, Taiwan, 8–9 February 2018.
50.
Deniziak, S. Design Models in SYSTEMC Language. In Technical Transactions; 1-I; Krakow University of Technology: Krakow,
Poland, 2007; pp. 17–33.
51.
Wolf, W. High-Performance Embedded Computing, Architectures, Applications, and Methodologies; Elsevier: San Francisco, CA,
USA, 2007.
52.
Deniziak, S.; Tomaszewski, R. Co-synthesis of contention-free energy-efﬁcient NOC-based real time embedded systems. J. Syst.
Archit. 2019, 98, 92–101. [CrossRef]
53.
De Donno, M.; Tange, K.; Dragoni, N. Foundations and Evolution of Modern Computing Paradigms: Cloud, IoT, Edge, and Fog.
IEEE Access 2019, 7, 150936–150948. [CrossRef]
54.
Alrowaily, M.; Lu, Z. Secure Edge Computing in IoT Systems: Review and Case Studies. In Proceedings of the 2018 IEEE/ACM
Symposium on Edge Computing (SEC), Seattle, WA, USA, 25–27 October 2018.
55.
Wan, S.; Ding, S.; Chen, C. Edge computing enabled video segmentation for real-time trafﬁc monitoring in internet of vehicles.
Pattern Recognit. 2022, 121, 108146. [CrossRef]
56.
Sun, Y.; Fei, T.; Li, X.; Warnecke, A.; Warsitz, E.; Pohl, N. Real-time radar-based gesture detection and recognition built in an
edge-computing platform. IEEE Sens. J. 2020, 20, 10706–10716. [CrossRef]
57.
Yu, W.; Liang, F.; He, X.; Hatcher, W.G.; Lu, C.; Lin, J.; Yang, X. A Survey on the Edge Computing for the Internet of Things. IEEE
Access 2017, 6, 6900–6919. [CrossRef]
58.
Hamdan, S.; Ayyash, M.; Almajali, S. Edge-Computing Architectures for Internet of Things Applications: A Survey. Sensors 2020,
20, 6441. [CrossRef]
59.
Bonomi, F.; Milito, R.; Zhu, J.; Addepalli, S. Fog Computing and its Role in the Internet of Things. In Proceedings of the First
Edition of the MCC Workshop on Mobile Cloud Computing, Helsinki, Finland, August 2012; pp. 13–16.
60.
Oktian, Y.E.; Witanto, E.N.; Lee, S.-G. A Conceptual Architecture in Decentralizing Computing, Storage, and Networking Aspect
of IoT Infrastructure. IoT 2021, 2, 205–221. [CrossRef]
61.
Li, J.; Jin, J.; Yuan, D.; Zhang, H. Virtual Fog: A Virtualization Enabled Fog Computing Framework for Internet of Things. IEEE
Internet Things J. 2018, 5, 121–131. [CrossRef]
62.
Li, Y.; Xuan Phan, L.T.; Loo, B.T. Network Functions Virtualization with Soft Real-Time Guarantees. In Proceedings of the
IEEE INFOCOM 2016-The 35th Annual IEEE International Conference on Computer Communications, San Francisco, CA, USA,
10–14 April 2016.
63.
Jawdhari, H.A.; Abdullah, A.A. The Application of Network Functions Virtualization on Different Networks, and its New
Applications in Blockchain: A Survey. Spec. Issue Comput. Technol. Inf. Manag. 2021, 18, 1007–1044. [CrossRef]
64.
Abdulqadir, H.R.; Zeebaree, S.R.M.; Shukur, H.M.; Sadeeq, M.A.M.; Salim, B.W.; Salih, A.A.; Kak, S.F. A study of moving from
cloud computing to fog computing. Qubahan Acad. J. 2022, 2, 60–70. [CrossRef]
65.
Cao, K.; Liu, Y.; Meng, G.; Sun, Q. An overview on edge computing research. IEEE Access 2020, 8, 85714–85728. [CrossRef]
66.
Al-Shammari, B.K.J.; Al-Aboody, N.; Al-Raweshidy, H.S. IoT Trafﬁc Management and Integration in the QoS Supported Network.
IEEE Internet Things J. 2017, 5, 352–370. [CrossRef]
Electronics 2022, 11, 4120
20 of 21
67.
Cui, L.; Xu, C.; Yang, S.; Huang, J.Z.; Li, J.; Ming, X.W.Z.; Lu, N. Joint Optimization of Energy Consumption and Latency in
Mobile Edge Computing for Internet of Things. IEEE Internet Things J. 2018, 6, 4791–4803. [CrossRef]
68.
Atlam, H.F.; Walters, R.J.; Wills, G.B. Fog Computing and the Internet of Things: A Review. Big Data Cogn. Comput. 2018, 2, 10.
[CrossRef]
69.
Novo, O. Blockchain Meets IoT: An Architecture for Scalable Access Management in IoT. IEEE Internet Things J. 2018, 5, 1184–1195.
[CrossRef]
70.
Ngabo, D.; Wang, D.; Iwendi, C.; Anajemb, J.A.; Ajao, L.A.; Biamba, C. Blockchain-Based Security Mechanism for the Medical
Data at Fog Computing Architecture of Internet of Things. Electronics 2021, 10, 2110. [CrossRef]
71.
Tayyaba, S.K.; Shah, M.A.; Khan, O.A.; Ahmed, A.W. Software Deﬁned Network (SDN) Based Internet of Things (IoT): A Road
Ahead. In Proceedings of the ICFNDS’17: Proceedings of the International Conference on Future Networks and Distributed
Systems, Cambridge, UK, 19–20 July 2017; pp. 1–8.
72.
Mazhar, N.; Salleh, R.; Zeeshan, M.; Hameed, M.M.; Khan, N. R-IDPS: Real time SDN based IDPS system for IoT security.
In Proceedings of the 2021 IEEE 18th International Conference on Smart Communities: Improving Quality of Life Using ICT, IoT
and AI (HONET), Karachi, Pakistan, 11–13 October 2021.
73.
Hasan, K.; Wu, X.-W.; Biswas, K.; Ahmed, K. A Novel Framework for Software Deﬁned Wireless Body Area Network. In Proceed-
ings of the 2018 8th International Conference on Intelligent Systems, Modelling and Simulation (ISMS), Kuala Lumpur, Malaysia,
8–10 May 2018.
74.
Yassein, M.B.; Aljawarneh, S.; Al-Rousan, M.; Mardini, W.; Al-Rashdan, W. Combined Software-Deﬁned Network (SDN) and
Internet of Things (IoT). In Proceedings of the 2017 International Conference on Electrical and Computing Technologies and
Applications (ICECTA), Ras Al Khaimah, United Arab Emirates, 21–23 November 2017.
75.
Li, J.; Altman, E.; Touati, C. A General SDN-based IoT Framework with NVF Implementation. ZTE Commun. 2015, 13, 42–45.
76.
Tang, W.; Zhang, R.; Feng, S. A Spatiotemporal Model for Hard-deadlineMulti-stream Trafﬁc in Uplink IoT Networks. IEEE
Internet Things J. 2021, 9, 601–615. [CrossRef]
77.
Audsley, N.C.; Burns, A.; Richardson, M.F.; Wellings, A.J. Absolute and relative temporal constraints in hard real-time databases.
In Proceedings of the Fourth Euromicro Workshop on Real-Time Systems, Athens, Greece, 3–5 June 1992.
78.
Druid. Apache Druid Is a Real-time Database to Power Modern Analytics Applications. 2022. Available online: https://druid.apache.
org/ (accessed on 10 September 2022).
79.
Volt Active Data. Where We Sit in the Stack. 2022. Available online: https://www.voltactivedata.com/ (accessed on 10 September 2022).
80.
Litwin, W.; Neimat, M.-A.; Schneider, D.A. LH*—A scalable, distributed data structure. ACM Trans. Database Syst. 1996,
21, 480–525. [CrossRef]
81.
Lasota, M.; Deniziak, S.; Chrobot, A. An SDDS-Based Architecture for a Real-Time Data Store. Int. J. Inf. Eng. Electron. Bus. 2016,
1, 21–28. [CrossRef]
82.
Hayatunnufus; Riasetiawan, M.; Ashari, A. Performance Analysis of FIFO and Round Robin Scheduling Process Algorithm in IoT
Operating System for Collecting Landslide Data. In Proceedings of the 2020 International Conference on Data Science, Artiﬁcial
Intelligence, and Business Analytics (DATABIA), Medan, Indonesia, 16–17 July 2020.
83.
Malik, S.; Ahmad, S.; Ullah, I.; Park, D.H.; Kim, D.H. An Adaptive Emergency First Intelligent Scheduling Algorithm for E cient
Task Management and Scheduling in Hybrid of Hard Real-Time and Soft Real-Time Embedded IoT Systems. Sustainability 2019,
11, 2192. [CrossRef]
84.
Pereira, D.A.; Ourique de Morais, W.; Pignaton de Freitas, E. NoSQL real-time database performance comparison. Int. J. Parallel
Emergent Distrib. Syst. 2017, 33, 144–156. [CrossRef]
85.
Kaur, K.; Sachdeva, M. Performance Evaluation of NewSQL Databases. In Proceedings of the 2017 International Conference on
Inventive Systems and Control (ICISC), Coimbatore, India, 19–20 January 2017.
86.
Singh, R.K.; Pandey, S.; Shanker, U. A Non-Database Operations Aware Priority Ceiling Protocol for Hard Real-Time Database
Systems. In Proceedings of the 2019 10th International Conference on Computing, Communication and Networking Technologies
(ICCCNT), Kanpur, India, 6–8 July 2019.
87.
Halang, W.A.; Stoyenko, A.D. Real Time Computing; Springer: Berlin/Heidelberg, Germany, 1994; pp. 261–282.
88.
Abohamama, A.S.; El-Ghamry, A.; Hamouda, E. Real-Time Task Scheduling Algorithm for IoT-Based Applications in the
Cloud–Fog Environment. J. Netw. Syst. Manag. 2022, 30, 54. [CrossRef]
89.
Koukopoulos, D. The Impact of FIFO Compositions with Other Protocols on the Stability of Multimedia Networks Facing
Dynamic Adversarial Attacks. In Proceedings of the MINES’13, 2013 Fifth International Conference on Multimedia Information
Networking and Security, Beijing, China, 1 November 2013; pp. 575–578.
90.
Kashyap, R.; Arora, K.; Sharma, M.; Aazam, A. Security-Aware GA based Practical Byzantine Fault Tolerance for Permissioned
Blockchain. In Proceedings of the 2019 4th International Conference on Control, Robotics and Cybernetics (CRC), Tokyo, Japan,
27–30 September 2019.
91.
Xu, G.; Liu, Y.; Xing, J.; Luo, T.; Gu, Y.; Liu, S.; Zheng, X.; Vasilakos, A.V. SG-PBFT: A Secure and Highly Efﬁcient, Blockchain
PBFT Consensus Algorithm for Internet of Vehicles, Computer Science. J. Parallel Distrib. Comput. 2022, 164, 1–11. [CrossRef]
92.
Park, G.-L.; Shirazi, B.; Marquis, J.; Choo, H. Decisive path scheduling: A new list scheduling method. In Proceedings of the 1997
International Conference on Parallel Processing, Bloomington, IL, USA, 11–15 August 1997.
Electronics 2022, 11, 4120
21 of 21
93.
Zonios, C.; Tenentes, V. Energy Efﬁcient Speech Command Recognition for Private Smart Home IoT Applications. In Proceedings
of the 2021 10th International Conference on Modern Circuits and Systems Technologies (MOCAST), Thessaloniki, Greece,
5–7 July 2021.
94.
Teng, S.; Zhang, W.; Zhu, H.; Fu, X.; Su, J.; Cui, B. A Least-Laxity-First Scheduling Algorithm of Variable Time Slice for Periodic
Tasks. Int. J. Softw. Sci. Comput. Intell. 2012, 2, 19.
95.
Furst, J.; Chen, K.; Kim, H.-S.; Bonnet, P. Evaluating Bluetooth Low Energy for IoT. In Proceedings of the 2018 IEEE Workshop on
Benchmarking Cyber-Physical Networks and Systems (CPSBench), Porto, Portugal, 10–13 April 2018.
96.
Beshley, M.; Kryvinska, N.; Beshley, H.; Yaremko, O.; Pyrih, J. Virtual Router Design and Modeling for Future Networks with
QoS Guarantees. Electronics 2021, 10, 1139. [CrossRef]
97.
Schulzrinne, H.; Rao, A.; Lanphier, R. Real Time Streaming Protocol (RTSP). RFC 1998, 2326.
98.
Rhinow, F.; Veloso, P.P.; Puyelo, C.; Barrett, S.; O Nuallain, E. P2P live video streaming in WebRTC. In Proceedings of the 2014
World Congress on Computer Applications and Information Systems (WCCAIS), Hammamet, Tunisia, 17–19 January 2014.
99.
Jianbing, L.; Shuhui, C. The Design and Implementation of RTSP/RTP Multimedia Trafﬁc Identiﬁcation Algorithm. J. Phys. Conf.
Ser. 2019, 1168, 1–8. [CrossRef]
100. Saint-Andre, P. Extensible Messaging and Presence Protocol (XMPP): Core. RFC 3920, IETF. October 2004. Available online:
https://www.rfc-editor.org/rfc/rfc6120 (accessed on 10 September 2022).
101. Saint-Andre, P. Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence, RFC 3921, IETF.
October 2004.
Available online:
http://www.kandroid.org/board/data/board/guestbook/ﬁle_in_body/1/xmpp.pdf
(accessed on 10 September 2022).
102. MQTT. MQTT: The Standard for IoT Messaging. 2022. Available online: https://mqtt.org (accessed on 10 September 2022).
103. Bormann, C.; Castellani, A.P.; Shelby, Z. CoAP: An Application Protocol for Billions of Tiny Internet Nodes. IEEE Internet Comput.
2012, 16, 62–67. [CrossRef]
104. Porcius, M.; Fortuna, C.; Kandus, G.; Mohorcic, M. Integrating custom hardware into Sensor Web.SoftCOM 2010. In Pro-
ceedings of the 18th International Conference on Software, Telecommunications and Computer Networks, Split, Croatia,
23–25 September 2010.
105. Internet Engineering Task Force. The WebSocket Protocol. 2022. Available online: https://datatracker.ietf.org/doc/html/rfc6455
(accessed on 10 September 2022).
106. Muller, G.L. HTML5 WebSocket Protocol and Its Application to Distributed Computing. Available online: https://arxiv.org/abs/
1409.3367 (accessed on 10 September 2022).
107. Ha, M.; Kim, D.; Kim, S.H.; Hong, S. Inter-MARIO: A Fast and Seamless Mobility Protocol to Support Inter-Pan Handover
in 6LoWPAN. In Proceedings of the 2010 IEEE Global Telecommunications Conference GLOBECOM 2010, Miami, FL, USA,
6–10 December 2010; pp. 1–6.
108. Tosi, J.; Taffoni, F.; Santacatterina, M.; Sannino, R.; Formica, D. Performance Evaluation of Bluetooth Low Energy: A Systematic
Review. Sensors 2017, 17, 2898. [CrossRef]
109. Varghese, S.G.; Kurian, C.P.; George, V.I.; John, A.; Nayak, V.; Upadhyay, A. Comparative study of zigBee topologies for IoT-based
lighting automation. IET Wirel. Sens. Syst. 2019, 4, 201–207. [CrossRef]
110. Haxhibeqiri, J.; De Poorter, E.; Moerman, I.; Hoebeke, J. A Survey of LoRaWAN for IoT: From Technologyto Application. Sensors
2018, 18, 3995. [CrossRef] [PubMed]
111. Wu, C.-G.; Wang, L. A Deadline-Aware Estimation of Distribution Algorithm for Resource Scheduling in Fog Computing Systems.
In Proceedings of the 2019 IEEE Congress on Evolutionary Computation (CEC), Wellington, New Zealand, 10–13 June 2019.


Paper 2:
- APA Citation: Chen, F., Liu, P., Zhu, J., Gao, S., Zhang, Y., Duan, M., ... Hwang, K. (2020). Improving topic-based data exchanges among IoT devices. Security and Communication Networks, 2020, 1-14. https://doi.org/10.1155/2020/8884924.
  Main Objective: To develop and evaluate novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems.
  Study Location: Unspecified
  Data Sources: Survey data, Interviews, Case studies
  Technologies Used: MQTT, Algorithms
  Key Findings: - The proposed TBRouting algorithm can efficiently find the shortest paths for data transmission in IoT networks.
- The proposed Rerouting algorithm can effectively handle the rerouting of topic-based session flows when a broker crashes down.
- The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems.
  Extract 1: "Improving Topic-Based Data Exchanges among IoT DevicesFu Chen,
  Extract 2: "Broker Network to improve the survivability and robustness of connected-device data exchange in IoT"
  Limitations: None
  Relevance Evaluation: This paper is highly relevant to the point I am making in my review, which is the exploration of MQTT and client-server IoT networks for real-time data transmission in automated irrigation management systems. The paper provides a comprehensive analysis of the use of MQTT in IoT systems, including its strengths and limitations, and presents novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks. These algorithms have the potential to significantly enhance the performance and reliability of automated irrigation management systems, making them more effective and efficient in meeting the challenges of the global food challenge.
  Relevance Score: 0.95
  Inline Citation: (Chen et al., 2020)
  Explanation: This paper analyzes how automated, real-time irrigation management systems can contribute to water use efficiency and agricultural productivity in the context of the global food challenge, focusing on the exploration of MQTT and client-server IoT networks for real-time data transmission. It presents two algorithms, TBRouting and Rerouting, to improve data exchange efficiency in IoT systems and handle the rerouting of topic-based session flows when a broker crashes down, respectively. These algorithms aim to dynamically find the shortest paths for data transmission and ensure high availability in IoT networks.

 Full Text: >
Research Article
Improving Topic-Based Data Exchanges among IoT Devices
Fu Chen
,1,2 Peng Liu,2 Jianming Zhu,1 Sheng Gao,1 Yanmei Zhang,1 Meijiao Duan,1
Youwei Wang,1 and Kai Hwang3
1Department of Computer Science, Central University of Finance and Economics, Beijing102206, China
2College of Information Sciences and Technology, Te Pennsylvania State University, State College 16801, PA, USA
3Chinese University of Hong Kong (CUHK), Hong Kong, China
Correspondence should be addressed to Fu Chen; chenfu@cufe.edu.cn
Received 11 June 2020; Revised 12 September 2020; Accepted 16 October 2020; Published 31 December 2020
Academic Editor: Honghao Gao
Copyright © 2020 Fu Chen et al. Tis is an open access article distributed under the Creative Commons Attribution License, which
permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.
Data exchange is one of the huge challenges in Internet of Tings (IoT) with billions of heterogeneous devices already connected
and many more to come in the future. Improving data transfer eﬃciency, scalability, and survivability in the fragile network
environment and constrained resources in IoT systems is always a fundamental issues. In this paper, we present a novel message
routing algorithm that optimizes IoT data transfers in a resource constrained and fragile network environment in publish-
subscribe model. Te proposed algorithm can adapt the dynamical network topology of continuously changing IoT devices with
the rerouting method. We also present a rerouting algorithm in Message Queuing Telemetry Transport (MQTT) to take over the
topic-based session ﬂows with a controller when a broker crashed down. Data can still be communicated by another broker with
rerouting mechanism. Higher availability in IoT can be achieved with our proposed model. Trough demonstrated eﬃciency of
our algorithms about message routing and dynamically adapting the continually changing device and network topology, IoT
systems can gain scalability and survivability. We have evaluated our algorithms with open source Eclipse Mosquitto. With the
extensive experiments and simulations performed in Mosquitto, the results show that our algorithms perform optimally. Te
proposed algorithms can be widely used in IoT systems with publish-subscribe model. Furthermore, the algorithms can also be
adopted in other protocols such as Constrained Application Protocol (CoAP).
1. Introduction
Te Internet of Tings (IoT) has emerged as the next
evolution of the technology which covers a wide variety of
devices and system platforms, such as embedded systems,
networked sensors, actuators, and smart home devices.
Inevitably, the resource starved nature in most IoT devices
makes it error-prone to eﬃciently manage and maintain a
reliable IoT system, not to mention the security issues as-
sociated with some scarcely attended IoT devices [1, 2]. One
of the biggest challenges in IoT is the management and
monitoring of an IoTsystem, especially when heterogeneous
devices are networked in geographically distributed envi-
ronments. And IoT devices are often used to monitor in-
dustrial
production,
energy
consumption,
agriculture
condition, and business operation, even in sensitive medical
application.
Terefore,
the
cross-platform
and
cross-
application data ﬂows among IoT devices are often ex-
tremely important. Te protocols that allow machine-to-
machine, device-to-device, and device-to-server commu-
nication to communicate with each other become very
important in IoT system. In general, wireless network
protocols have evolved in the form of WiFi, ZigBee, Blue-
tooth, and routing protocols from multihop to ad hoc and
mobile ad hoc networks (MANET); the data protocols play
an important role in IoT protocol stack, which includes
Message Queuing Telemetry Transport (MQTT) [3], Con-
strained Application Protocol (CoAP) [4], AMQP [5], and
WebSocket [6]. Comparatively MQTT seems to be more
promising as seen in Figure 1 showing the trends com-
parison of MQTT, COMP, and AMQP, according to Google
trends dataset [7]. Tis paper includes the communication
eﬃciency of MQTT. All the information in the MQTT is
organized with Tree structure and topics-based naming [8].
Hindawi
Security and Communication Networks
Volume 2020, Article ID 8884924, 14 pages
https://doi.org/10.1155/2020/8884924
Te history of MQTT dates back to 1999, which was
invented by IBM. MQTT uses the so-called “publish/sub-
scription” model to transmit data among the IoT things.
MQTT is more mature and stable than CoAP and AMQP.
Due to the low-cost and power-constrained nature of most
IoT devices, the communication eﬃciency is extremely
important. For example, if we can improve the power ef-
ﬁciency, the IoTdevice can be operated for even longer time
period than low power eﬃciency without having to replace
batteries. Tis is one of the fundamental motivations for our
focus on IoT data communication protocol eﬃciency in this
paper. An IoTsystem consists of a large number of internet-
connected resource-constrained and dynamic nature devices
[9]. Terefore achieving data transmission eﬃciency is very
important in this type of distributed networks. Data
transmission in many IoT systems use publish-subscribe
model, as in MQTT. In AMQP protocol, clients send
messages to the AMQP server with topics, and server listens
for messages with those topics and routes the messages to the
applications subscribed to the AMQP server [5, 10]. MQTT
uses a similar approach where message brokers use topics to
route messages from publishing clients to subscribing clients
[11]. To exchange data between devices with publish-sub-
scribe model, matching, ﬁltering, and routing of messages
based on topics, as the bridge of publisher and subscriber,
have extreme importance in IoT system. Especially when
there are plenty of messages produced by a large number of
IoT devices, improving the eﬃciency and eﬀect of topic
matching, ﬁltering, and routing is vital. Te work in this
paper aims to address this important need of data com-
munication in IoT system. To address this important need,
we propose two algorithms to improve data exchange eﬃ-
ciency in IoT system. Te two important contributions of
this paper are as follows:
(i) Development of a topic routing algorithm to com-
municate data between IoT devices
(ii) Development, implementation, and evaluation of a
Broker Network to improve the survivability and
robustness of connected-device data exchange in IoT
We evaluate our algorithms with MQTT protocol
implementation Mosquitto [3, 12]. We have performed
extensive experiments and results show that with our al-
gorithms we can dramatically improve data exchange eﬃ-
ciency while signiﬁcantly reducing transmission time. Te
organization of the paper is as follows. In Section 2, we
present background and motivation of this work high-
lighting main concerns that arise in the data communication
in IoTand state of the art in the ﬁeld. Section 3 presents our
algorithms in detail. Te implementation and evaluation of
our algorithms are presented in Section 4. Finally, conclu-
sions are drawn in Section 5.
2. Background
2.1. Need of the Data Exchange Eﬃciency Problem in IoT.
Devices in IoT system often have limited processing capa-
bilities, low bandwidth, and small memory capacities and are
powered by batteries with limited working hours. Terefore,
improving the usage eﬃciency of the network and reducing
power usage in IoT scenarios are extremely important. As a
promising data communication protocol in IoT, MQTT is a
machine-to-machine (M2M), lightweight publish-subscribe
messaging transport protocol. In publish-subscribe model,
subscriber registers its interest topics to a broker and
publisher sends data to a broker [13–15]. Publish clients and
subscribe clients exchange data through a broker with topic
matching. When there are huge message ﬂows exchanged by
broker, issue of latency may be inevitable [16]. Te latency
not only decreases the speed of data transmission but also
wastes device battery to decrease the overall device life-span
[17–20]. In this paper, we focus on data exchange eﬃciency
in an environment where there is a limited Internet access or
there are serious network jitter problems for several hundred
miles around. Te emphasis is transferring data based on
subject-based route to a data center. Essentially, it is about a
new gateway and topic-based routing. First, we need to
classify necessity of transferring data between gateways.
MQTT in IoT is used in data exchange which is diﬀerent
from corresponding sensor network about data integration.
100
90
80
70
60
50
40
30
20
10
2.11.2011
11.03.2013
10.04.2015
09.18.2016
Trends OF MQTT, COAP, AMQP
MQTT
AMQP
COAP
Figure 1: Trends comparison of MQTT, CoAP, and AMQP.
2
Security and Communication Networks
We depict an agriculture processing scenario to clarify the
necessity for data transmission with topic-based routing.
Consumers today often put signiﬁcant value on fresh, high
quality food. Farmers need to get information from ﬁelds,
take actions to crop depending on weather conditions, and
show the information about the produce to the end con-
sumers with public access interface. Tis information in-
cludes identifying the drought and weather conditions,
periodic measurements of monitoring data with gateway,
depending on intensity of drought decide about irrigation
and watering, monitoring pest disasters, and then taking
actions about the spraying pesticides with drone, without
distinguishing nodes from the broker’s point of view, which
brings diﬃculty due to large number of devices. If there are
plenty of things in one IoTsystem, it is necessary to identify
nodes having the corresponding information and to identify
these nodes dramatically and eﬃciently.
If this information is conﬁgured manually, while not the
automatically, it is a huge challenge to manage thousands of
nodes. When the network structure is changed, the con-
ﬁgurations need to be done. Terefore, automatic discov-
ering and conﬁguring the IoT network are a huge challenge.
And agriculture processing system scenario has the fol-
lowing features: data from farm in ﬁelds to table on Internet,
ﬁeld data spanning up to one year, wide geographical areas
of crops, and fragile network conditions.
As noted earlier, MQTT used in IoT system emphasizes
data exchange, not mainly for data integration. Te question
arises, why in the agriculture process system we need data
exchange? Tere are several reasons to make it necessary for
data exchange in agriculture processing system and data
exchange about storm, hurricanes, cyclones bad weather. It is
known to all that storm may inﬂuence several hundreds of
miles. It is very important to spread related information about
agriculture. In fact, weather conditions have a heavy inﬂuence
on the crop management. Data exchanges among diﬀerent
farms are very important. For example, in Pennsylvania, there
may have been dozens of farms located in a region where pests
and diseases spread very quickly. Similarly, farms in remote
and regional areas in Australia are spread over on thousands
of acres. If the information around one regain can exchange
on time, precautions can be taken to prevent or reduce loss
from any natural disaster which may otherwise aﬀect dras-
tically the agriculture processing system.
2.2. Essence of the Problem Studied in Tis Paper. Te IoT
things are spread around hundreds of miles in ﬁeld or plain.
According to the mechanism of MQTT protocol, data ex-
changes among diﬀerent nodes and brokers should be
conﬁgured according to the IP addresses and topic names.
Only after manual conﬁguration or by conﬁguration ﬁles,
the data can be exchanged along speciﬁc path to another
node, which gets damaged crushes down, we will not know
until proactive testing is performed. Neighboring nodes
might have information about the damaged nodes but the
important question here is how to dynamically ﬁgure out
which nodes have the corresponding data and how to arrive
at that node with the shortest path automatically. In our
proposed algorithms, we have focused on this problem. On
the contrary, if the reconﬁguration is done manually or
through CLI scripts, data exchange with MQTT in IoT is not
reliable and is not easy to recover. Maintenance and
management of data exchange in this model is a hard task
which can be costly. Terefore, a reliable, automatic data
discovery and data exchange model with a shortest path in a
fragile, dynamic network environment is very important.
With our algorithms, we can ﬁnd the speciﬁc nodes for
speciﬁc data with one topic and get the shortest path to that
nodes dynamically and automatically. We need a smarter
recovery program, which can save money (automatically) to
avoid remote login and can perform recovery eﬃciently.
Generally speaking, through the broadcast method and the
way of active subscription, we can achieve data exchange
automation. Te existing practices often involve manual
conﬁguration where messages are read or processed man-
ually. In our proposed model, we aim for automatic data
exchange.
3. Broker Network
Data collection is one of the key functions in IoT system.
However, battery powered devices in IoT often work in low
bandwidth and fragile network environments. One of the
major challenges is to provide eﬃcient, stable, and scalable
services in IoT. For example, to extend a device’s eﬀective
working life-span as much as possible, eﬃciency should be
considered to save power. At the same time, to ensure the
availability and scalability of data communication services,
broker network is a natural choice in IoTsystem [21, 22]. Te
broker network can provide stable connections among the
devices to handle the data traﬃcs in IoT. In this section, we
describe our proposed novel topic-based data transmission
algorithm to eﬃciently exchange data in IoT system.
3.1. Topic-Based Data Routing in MQTT. When servers in
the cloud system gather data from things as messages in IoT
system, we will route the messages ﬂow through broker
network in IoT to cloud. For example, client 1 subscribes to
broker 1 with topic “top” and client 2 publishes to broker 2
with topic “top.” Broker 2 should route the message pub-
lished by client 2 to broker 1, so that client 1 can get the
corresponding data. Tis is the so-called topic-based mes-
sage routing problem in IoT. Te key point here is the ef-
ﬁciency when broker nodes synchronize data among
brokers, which include the following:
(i) Forwarding all messages to the other bridges
(ii) Routing of messages to the brokers
For the CPU, bandwidth, and memory constrained
devices, the routing decision algorithm should be simple
enough to save resource. Normally, we can divide the nodes
into two types: one is routing node and the other is terminal
subscriber node or publisher node. Our data routing deci-
sion algorithm is depicted in Algorithm 1 called TBRouting.
Security and Communication Networks
3
In summary, there are three scenarios:
(i) One to one directly
(ii) One to many directly
(iii) One to remote nodes through routers
In one to remote nodes through routers scenario, the
cloud servers gather data from devices as messages transmit
through the local IoT network. We address the issue of
collecting speciﬁc data and how to transfer it eﬃciently in
our algorithm through ﬁnding the shortest path based on
topics for message delivery to cloud or server. Tat is to say, a
routing protocol is considered. Our message routing deci-
sion algorithm is depicted in Figure 2.
In Figure 2, we depict message routing scenario. Tere
are 7 routers, router ①∼router ⑦ connected with each
other wirelessly and to the Internet or cloud shown in
Figure 2. ① is connected to Internet or cloud, and ⑥ is
connected to sensor network. When messages are sent to
router ⑥ through sensor network, the message will be
routed from router ⑥ to router ①. Because the messaging
router here is not the typical router in a typical network,
therefore, we deﬁne the message routing algorithm below
and routing table in the following sections. For the fragile
network and constrained hardware devices, the topology
may be changed constantly [23]. Terefore, the path and
router table may change with the topology. Just as the
scenario shown in Figure 2, the routing algorithm is in-
troduced in the following steps:
(1) Figuring out the shortest path between router ⑥ and
router ①, it is a single-source shortest path topic-
based problem in graph theory. We can address it, for
example, with Dijkstra’s algorithm. Here, the shortest
path is router serial ⑥ ⟹ ④ ⟹ ② ⟹ ①.
(2) In reverse sequence, router ① subscribes topics from
router ②, router ② subscribes topics from router ④,
and router ④ subscribe topics from router ⑥.
(3) When sensors publish topics to router ⑥, the
messages will be pushed back to hop by hop until
router ①.
When the topology structure of router network changes,
we can ﬁgure out the new shortest path from the source to
the end as described in Step (1) dynamically. Te “routing
tables” are critical to the system because IoT network may
not be using the traditional TCP/IP protocol stack which
makes real-time data transmission with the shortest path
without considering the network protocol even more
challenging. Tat is to say, regardless of TCP/IP or Zigbee,
the IoTsystem can still ﬁnd the data source and the shortest
path transparently based on topics. In the next section, we
will describe this algorithm in detail.
3.2. Topic-Based Data Routing Protocol. In order to facilitate
problem description, ﬁrst we provide some relevant deﬁ-
nitions. Ten algorithm is depicted in detail with an ex-
ample. We present eﬃciency evaluation of our algorithm in
Section 4.
3.2.1. Deﬁnitions
Deﬁnition 1. Routing table structure: in order to make
nodes ﬁnd each other and in the shortest path, some in-
formation should be stored in every nodes. Table 1 provides
the structure of the routing table.
Deﬁnition 2. Subscribing node: node 1 subscribes to node 2;
node 1 is the so-called subscribing node.
Deﬁnition 3. Subscribing node queue: A subscribes to B, B
subscribes to C, C subscribes to D, and “ABC” is the so-
called subscribing node queue.
Deﬁnition 4. Weight (T): the number of node in a string.
Deﬁnition 5. Host_Topic (T): the ultimate data consumer
and
corresponding
topic.
For
example,
“Host_Topic
(ABCD/TOP)”  “D/TOP”.
Deﬁnition 6. Searched_Set: a node set, in which every node
has ﬁnished building the routing table.
Deﬁnition 7. NotSearched_Set: a node set, in which every
node has not ﬁnished building the routing table.
Deﬁnition 8. Adjacent (X): a set of adjacency of node X.
Deﬁnition 9. Match (top): determining whether the node
can provide the corresponding topic data.
3.2.2. Routing Algorithm. Te algorithm essentially com-
pletes the following tasks. First, the algorithm determines the
node where the topic and corresponding data reside. Second,
the algorithm dynamically ﬁnds the shortest path. Ten the
data can be transported to Internet. Tat is to say, the al-
gorithm solves that which node has the topic and data and
how the data can be transported to the ultimate user. We
solve this problem with our new routing algorithm named
Topic-Based Routing Algorithm (TBRG). Te rerouting
algorithm is given as follows. In the algorithm, “R” is the
ultimate data consumer in Algorithm 2.
Next, we elaborate our algorithm through a concrete
example illustrated in Figure 3, which shows an example of
nodes structure of IoT system. We assume Ⓐ is a node in
data center, data ultimate consumer, and Ⓘ is the data
source connecting the sensor.
① Initialization of node Ⓐ in Table 2.
② A subscribing to nodes Ⓑ, Ⓓ, and Ⓔ, that is,
Ⓐ ⇒ Ⓑ, Ⓐ ⇒ Ⓓ, Ⓐ ⇒ Ⓔ, as shown in Tables 3–5.
③ Next, B and E subscribing to node Ⓒ and node Ⓕ,
respectively, that is, node Ⓑ ⇒ node Ⓒ and node
Ⓔ ⇒ node Ⓕ in Tables 6 and 7.
④ Next, node Ⓒ and node Ⓕ subscribing to nodes Ⓘ
and Ⓖ, respectively, that is, node Ⓒ ⇒ node Ⓘ and
node Ⓕ ⇒ node Ⓖ as shown in Table 8, VX.
4
Security and Communication Networks
⑤ Node Ⓖ subscribing to Node I, that is, node
Ⓖ ⇒ node I′. In the algorithm, this step is less likely to
happen because of the value of weight (CBA/top) in
Step ④; the routing information is “CBA/top”, as
shown in Tables 9 and 10.
Figure 4 shows a bipartite graph. Set (1) is a topic set
x1∼xn corresponding to published data. Set (2) is a topic set
y1∼yn corresponding to subscribed data. Te next algorithm
is to match topics from one node in set (1) to another node in
set (2) step by step according to the shortest path in reverse
order. In addition, when we upgrade system or update the
status about things in ﬁeld, that is to say, delivering the
instruction set from cloud to IoT devices, the instruction
dataset is routed reversely with a series of publish and then
subscribing among routers.
3.3. Rerouting Algorithm in MQTT. Each broker may serve
for thousands of clients’ connections. In case one broker
crashes down, clients should have the ability to connect to
another broker and work continually and smoothly, which is
called the rerouting problem. To address this problem, we
propose a rerouting algorithm to take over the topic-based
session ﬂows with a controller when a broker crashes down.
Although it is almost impossible to communicate when broker
crashes down, data can still be communicated by another
(1) procedure TBRouting.
(2)
When a broker receives data with topics from one client, the broker matches topics in its topic tree.
(3)
If the node is just the terminal subscriber, then broker forwards it to that node, and then go to 5. If the node is not the terminal
consumer of the topic, go to 4.
(4)
If the node is not the terminal consumer of the topic, the data will be forwarded to the other broker nodes, which is the next hop
of the routing.
(5)
Continuing with 3, with next hop, data eventually will be sent to cloud or terminal nodes. Te messages are sent with the shortest
path to the ﬁnal destination.
(6)
Te topic may be sent to many diﬀerent receivers who subscribe the topics. All the receivers will receive the same messages.
(7)
Te broker will decide whether to store the topic or not.
ALGORITHM 1: TBRouting.
D
B
E
A
C
F
G
I
Figure 3: Example of topic routing protocol.
1
2
3
4
5
6
7
1
2
3
4
5
6
7
IOT things
IOT things
(1)
(2)
Figure 2: Message routing decision algorithm IoT network.
Table 1: Structure of the routing table.
Node
Path and topics
Weight
Subscribing
node
Subscribing node
queue
Number of nodes in
queue
Security and Communication Networks
5
broker with rerouting mechanism. Terefore, high availability
can be gained with this model in IoT, as shown in Figure 5.
3.3.1. Deﬁnitions. As in Section 3.2, we ﬁrst provide some
relevant deﬁnitions to facilitate the node replacing problem
statement.
Deﬁnition 10. Topic_Session: when node X publishes a topic
“t” to a broker named “Brk,” and node Y subscribes the same
topic “t” to the same broker “Brk” just illustrated in
Figure 6(a) shown; we call this binary relation Topic Session
with notation XTSR(t, brk)Y. If node Y only can get topic
“t” from node X, we use notation X!TSR(t, brk)Y to express
this relation. We depict the relation with Structural Oper-
ational Semantics as follows:
Node X ⟶
Pub(t)Brk,
Node Y ⟶
Sub(t)Brk,
Node X ⟶
Pub(t)Brk,
Normally, we can use process expression to depict
communication behavior. Actually, from the perspective of
mathematics, this is a binary partial order relation. Tat is to
(1) Procedure TBRG
(2)
RoutingTable ⟵ initially, ultimate consumer node R;
(3)
Searched Set ⟵ R;
(4)
NotSearched Set ⟵ R;
(5)
while NotSearched Set ≠ ∅ do
(6)
X ∈ NotSearched Set;
(7)
for all Adjacent(X) do
(8)
NodeX ∈ Adjacent(X);
(9)
if NodeX ∉ Searched Set then
(10)
NotSearched Set ⟵ NodeX;
(11)
X⇒subscribing to NodeX;
(12)
Node X ⟵ subscriping request P;
(13)
i ⟵ Weight(P);
(14)
top ⟵ Host Topic(P);
(15)
if !Match(top) then
(16)
addItemToRoutingTable(NodeX);
(17)
Searched Set ⟵ Nodex;
(18)
else if Weight(Route NodeX(Top)) > i then
(19)
Rewrite(Route_NodeX(P));
(20)
NotSearched Set − X;
(21)
Searched Set ⟵ X;
ALGORITHM 2: TBRG.
Table 2: Routing table of node A.
Node
Path and topics
Weight
0
0/top
0
Table 3: Routing table of node B.
Node
Path and topics
Weight
A
A/top
1
Table 4: Routing table of node D.
Node
Path and topics
Weight
A
A/top
1
Table 5: Routing table of node E.
Node
Path and topics
Weight
A
A/top
1
Table 6: Routing table of node C.
Node
Path and topics
Weight
B
BA/top
2
B1
B2
a
b
c
a1
b1
c1
Figure 4: Routing tables in message router.
6
Security and Communication Networks
say, X ⟶
TSR(t) Y and Y ⟶
TSR(t) X are diﬀerent pair set. We use
this concept to indicate the data ﬂow.
Deﬁnition 11. Pub(t) · X: processing node X has an action
Pub with a parametric t. In this paper, behavior Pub is
published.
Deﬁnition 12. Sub(t) · X: processing node X has an action
Sub with a parametric t. In this paper, behavior Sub is
subscription.
Deﬁnition 13. Broke Strong Behavior Equivalence∼: there
are two brokers A and B. If the following relation exists, we
call this relation A∽B:
(i) X TSR(t1, A)Y with topic “t1”
(ii) X TSR(t2, B)Y with topic “t2”
Deﬁnition 14. Broker Weak Behavior Equivalence≈: there
are two brokers A and B. If the following relations exist, we
call this binary relation weak behavior equivalence A ≈ B:
(i) X TSR(t1, A)Y or Y TSR(t1, A)X with topic “t1”
(ii) X TSR(t2, B)Y or Y TSR(t2, B)X with topic “t2”
If broker A crashes down, we want to ﬁnd another broker
B to take over the topic session ﬂows in broker A, in which
brokers A and B at least have the Strong Behavior Equiv-
alence relation A∽B, as Figure 7 showed. In this section, we
will focus on how to ﬁnd an appropriate broker to take over
the topic session ﬂow in the crashed broker. With this
behavior, the Topic_Session can continue.
3.3.2. Problem Analysis. In normal wireless network, if one
node loses its connection, the node may update its status and
broadcast its identiﬁcation information to all neighbor nodes,
just as shown in Figure 6(b). Ten other sensors or actuators
Brk
Pub
Sub
X
Y
(a)
X
Y
A
B
Pub
Pub
Sub
Sub
(b)
Figure 6: Topic_Session.
x1
x2
x4
xn
x3
y1
y2
y4
ym
y3
(1)
(2)
Figure 5: Fault migrating.
Table 7: Routing table of node F.
Node
Path and topics
Weight
E
EA/top
2
Table 8: Routing table of node of G.
Node
Path and topics
Weight
F
FEA/top
3
Table 9: Routing table of node I.
Node
Path and topics
Weight
C
CBA/top
3
Table 10: Possible routing table of node I′.
Node
Path and topics
Weight
G
GFEA/top
4
Table 11: Topic session ﬂow.
No.
Tings
Broker
Sub/Pub
Topic
On/oﬀ
1
a
B1
0
t1
1
2
a
B1
1
t6
0
3
a
B2
1
t2
1
4
b
B1
1
t3
1
5
a
B1
0
t4
1
6
c
B2
1
t5
0
7
c
B1
0
t6
11
Security and Communication Networks
7
may connect to this node. In this model, for example, in
Figure 6(b), node X and node Y may ﬁnd the other nodes.
Te IoT network node is diﬀerent from the normal
wireless network node as follows.
(i) Node Y gets the topic “t” from node X through
broker A with subscription behavior. However,
when broker A crashes down, nodes X and Y must
communicate with another broker with the same
behavior. Or else node Y cannot get the topic “t”
from node X. Te situation may be worse when
nodes X and Y have the relation X!(t, brk)Y.
(ii) In MQTT, one broker is speciﬁed when nodes
publish or subscribe to a broker. Tat is to say, the
subscriber
or
publisher
cannot
automatically
reconﬁgure the broker. For example, MQTT pro-
tocol with QoS 0 and the node even are not aware
when the broker crashes down.
Te problem here is that nodes and brokers have an
equal status. So nodes almost know nothing about each
other. Because of mutual independence to each other, one
node cannot change another node’s behavior.
To sum up, when node X and node Y have the relation
X!(t, brk)Y, nodes X and Y must synchronize migration to
other nodes. Publisher may continue to publish data to
broker A even when A has crashed down with QoS 0.
Terefore, we must clarify the substitution conditions that
how a broker can be replaced by another broker partly or
totally. Tis raises the following questions:
(i) What conditions should be met when a broker
substitutes one or a few brokers to take over that
broker?
(ii) Who will we ﬁnd a crashed down broker?
(iii) How can we take measures on the nodes or brokers
to take over that broker?
(iv) Where should we store the relation X TSR(t, brk)Y
set in that crash down broker? So we can keep topic
related
sessions
to
continue
the
data
communication.
3.3.3. Broker Substitution Conditions. According to process
behavior equivalence, if brokers A and B have a weak be-
havior equivalence relation A ≈ B, then nodes X and Y have
the approximate communication ability with A and B as
shown in Figure 8.
Te process expression of broker A is PA, which is
deﬁned by the following syntax:
PA:  􏽐i∈I 􏽑 ·A|! 􏽑 ·A,
􏽑 :  Pub(ti);
Sub〈ti〉;
Te notation ! 􏽑 ·A is loop execution behavior. And ti is
a topic ∈ Topic_Set, which is a topic set to be published or
subscribed. 􏽑 is an action preﬁx. Ten the broker substi-
tution conditions are
Pub < ti > · X| Pub ti
􏼁 · A| Sub ti
􏼁 · A| Sub < ti > · Y;
Pub < tj > · X| Pub tj
􏼐 􏼑 · B| Sub tj
􏼐 􏼑 · B| Sub < tj > · Y;
⇒A ∼ B, X TSR(t, brk)Y;
Pub < ti > · X| Pub ti
􏼁 · A∨ Sub ti
􏼁 · A| Sub < ti > · X
∨Pub < ti > · A| Pub ti
􏼁 · X∨ Sub ti
􏼁 · X| Sub < ti > · A∧
⎛
⎝
⎞⎠,
Sub < tj > · Y| Sub(tj).B∨ Pub(tj) · B| Pub < tj > · Y
∨Sub < tj > · B| Sub tj
􏼐 􏼑.Y∨ Pub tj
􏼐 􏼑 · Y| Pub < tj > · B
⎛
⎝
⎞⎠,
⇒A ≈ B;
α · X|α · A|β · B|β.Y + α · X|α · A|β · B|β.Y+
α · X|α · A|β · B|β · Y + α · X|α · A|β · B|β · Y;
α ∈ Pub, Sub
{
},
⇒A ≈ B;
where,
ti, tj ∈ Topic Set.
(1)
Essentially, Strong Behavior Equivalence ∽ is a binary
homomorphism relation. And Weak Behavior Equivalence
≈ is roughly approximate relation. If brokers A and B meet
following conditions,
A∽B or A ≈ B, XTSR(t, A), Y, t ∈ Topic Set, topic
sessions on A can be transferred to broker B.
3.3.4. Pub/Sub Flow Controller and Measures. As noted in
the previous section, publishers are not aware if a broker
crashes down. Even the publisher knows the absence of broker,
the topic-based session cannot go on without outside help, not
to mention ﬁnding one or a few brokers to take over the
shutdown broker. Terefore, the extra controller is necessary to
ensure the survivability of IoTsystem, just as Software Deﬁned
Networks (SDN) do [24]. As shown in Figure 9, there is a
controller over brokers to schedule the whole IoTnetwork. Te
main purposes of the controller are as follows:
(i) Reviving of dead broker through heart beating
(ii) Figuring out the substitute node
(iii) Transferring the topic-based session ﬂow from crash
down broker to alternative broker
New node
Figure 7: Wireless network broadcast.
8
Security and Communication Networks
But the controller will never be used as data commu-
nication. Its main usage is to manage the nodes in IoT
network.
Trough heart beating, for example, subscribing “hello
world” to managed node on a regular timer with Quality of
Service (QoS), it is easy to get the information in broker node
in order to determine a substitute node. To ﬁgure out
substitute node, the controller should collect the following
information in regular time. For example, as shown in
Table 11, in regular intervals.
In Table 11, if the action is subscribe then 1, else then 0.
And if the broker is just performing normal then 1, else then 0.
Trough the content in Table 11, we can deduce nodes
that can be replaced with each other. For example, B1 and B2
can replace each other, as shown in the proof below:
∵Sub(t) · a| Sub(t6) · Pub(t6)B1| Pub(t6) · c,
∴⇒c TSR(t6, B1)a;
∵
Sub(t2) · a| Sub(t2) · Sub(t5)B2| Sub(t5) · c,
Pub(t1) · a| Pub(t1) · Pub(t6)B1| Pub(t6) · c,
⎧
⎨
⎩
∴⇒B1 ≈ B2.
(2)
Tis comes to the conclusion c!(t, B2)a. Tis means
when broker B1 crashes, the B2 can replace B1, with
Structural Operational Semantics depicted as follows:
c ⟶
Pub(t6)B1 ⟵
Sub(t6)a ≈ c ⟵
Sub(t6)B2 ⟶
Pub(t6)a.
(3)
Te Algorithm 3 is showed below.
4. Implementation and Evaluation with
Mosquitto or IoTivity
We implement a working prototype of the above algorithm
using C and MQTTon Ubuntu system with Mosquitto and its
client libmosquitto.lib as shown in Figure 10. MQTT is a
machine to machine open source protocol originally developed
by IBM. MQTTis particularly suitable for resource constrained
IoT devices on fragile networks environment. As discussed in
Section 1, MQTT is the most popular protocol used in IoT
system now. And Mosquitto is an open source implementation
of the MQTT protocol.
In our evaluation system, Figure 10, we deployed 25
nodes and divided nodes into two groups, one as broker and
another as client. On the clients, we deployed a shell pro-
gram to continuously publish data. And the nodes in broker
network collect the data with subscription.
4.1. Eﬃciency with Scale of Data Transmission. Intuitively, in
resource constrained device, the eﬃciency will decrease
dramatically with data scale increasing. Te trend of data
transmission with data scale is one of the experimental
contents of in this section. Especially to the speciﬁc protocol,
the data transmission laws are more worthy of attention. In
this section, we will evaluate the average transmission time
with increased data scale. In Figure 11, vertical axis is time
cost, and horizontal axis is the amount of data transmitted.
From Figure 11, we can observe that average transfer com-
pletion time will increase dramatically from a speciﬁc point.
In broker network, a huge number of topics will be
transmitted through the nodes. However, according to the
above experiments, we know that the eﬃciency will decrease
dramatically with increasing topics transmitted. Terefore,
reducing the number of transmission nodes can reduce
propagation delay time, and improve the transmission ef-
ﬁciency. Tis is just our primary goal in this paper. As the
evaluation system shows with our algorithms proposed in
this paper we can reduce the number of transmission nodes,
which can improve the data transmission eﬃciency. At the
same time, according to the experiment results, whole
system eﬃciency will be improved as evident from the ex-
periment results in the next section.
4.2. Eﬃciency Improvements. As Figure 12 showed, we used
25 virtual machines as a testbed to test algorithms proposed
in this paper. Resources allocated to a virtual machine are
limited. For example, memory in each node is less than
300 M. And the nodes are divided into two groups: one
group is mainly for broker network and the other group is
used for generating data. We deployed a Mosquitto broker in
each node. In order to test any scale of the data, we used an
endless loop shell script to publish a topic per second
continuously; the script is as follows:
#!/bin/sh
while true; do
echo hello.
sleep 1
done | mosquitto_pub −l −t “Topic”
Te other nodes can get the data through Mosquitto_sub
with a counter. Te counter is used to control the data scale.
In the program, except subscription and counter, we cal-
culate the time of data transmission. Trough a series of
subscription behaviors, the contents with corresponding
topics can be passed to the ﬁnal data consumer indirectly
node by node and step by step. Each node automatically
becomes a data generator pump. Just as described above, we
have built an IoT simulation network with libmosquitto
library and virtual machines as shown Figure 12, where
X
Y
t
A
B
t
t
t
Figure 8: A ≈ B.
Security and Communication Networks
9
nodes 1 ∼ 7 are broker network nodes; the rest of the nodes
are data generator. Node 1 is the ﬁnal data consuming node.
Node 6 is the edge routing node. Data collected from the IoT
will be transmitted to node 6 ﬁrst and then transmitted to
node 1 through broker networks.
Just as described above, our algorithm can determine nodes
where the topic and corresponding data reside, and it
dynamically adopts the shortest paths between nodes in data
consumer and edge routers. Te shortest paths mean fewer
nodes needed for data transmission. Fewer transmission nodes
can save data transmission time. We use the network topology
shown in Figure 12 to evaluate the algorithms presented in this
paper. In Figure 12, the data may be transmitted through ⑥,
⑦, ④ ③, ②, and ①. And the shortest path is ⑥, ④, ②, and
Pub/Sub ﬂow controller
B1
B2
a
b
c
a1
b1
c1
(a)
Pub/Sub ﬂow controller
B1
B2
a
b
c
a1
b1
c1
(b)
Figure 9: IoT controller.
(1) Procedure ReRouting
(2)
Session Flow Table ⟵ initialization;
(3)
While true do
(4)
Heartbeating broadcast;
(5)
On/off ⟵ Heartbeatingbroadcast;
(6)
for all No de X ⟵ Broker Set do
(7)
PullingthePub/Subinformation;
(8)
derive Broke Strong Behavio Equivalence∼;
(9)
deriveWeak Behavior Equivalence≈
(10)
derive Topic Sessionrelationship;
(11)
Update Topic SessionSet;
ALGORITHM 3: ReRouting.
Figure 10: Evaluation system.
10
Security and Communication Networks
①, as shown in Figure 13. Tat is to say, the path in Figure 13 is
just the path we want to use to transmit the data.
To get the inﬂuence of the data transmission path with the
data scale, we obtain the evaluation results with diﬀerent
workload to test the algorithm. Te primary performance
metrics are data transmission completion time. We get the data
from 500 to 10000 items with 500 as a step. We run a Mos-
quitto on each node in transmission network as a broker. At
the same time, we develop a program based on libmosquitto as
a client to get the data and calculate the transmission com-
pletion time on each node. Figure 14 shows the performance
comparison of our algorithm with diﬀerent amounts of time.
At the same time, to compare the entire system performance
inﬂuence, the average transmission completion times of all
nodes are measured, which is shown in Figure 15. In fact fewer
transmission nodes can reduce energy consumption for whole
system, which is not the scope of this paper.
We compare the data transmission with and without the
shortest path in Figure 14. First, we observe that almost in
each data scale the transmission completion time with the
shortest path is far less than without it. Second, the amount
of data transmitted and the transmission completion time is
not a simple linear relationship. Te comparison of trans-
mission completion time about edge router is depicted in
Figure 16. We illustrate the inﬂuence to the transmission
node under these two diﬀerent situations using Figure 16. In
Figure 16, we observe that the data transmission path has an
important inﬂuence on the whole system performance. Te
solution in edge router and in ﬁnal data consumer has a
similar trend. It is suﬃcient to show that data transmission
1
0.8
0.6
0.4
0.2
0
2
4
6
8
0
10
Message per second
per client
Topic number
×104
Figure 11: Transmission time with increased data scale.
1
2
4
5
7
3
6
9
8
11
12
10
Figure 12: Data transmission without the shortest path.
Security and Communication Networks
11
path has a signiﬁcant impact on the network system. We can
see from the results that the shortest path has high eﬃciency.
In order to further verify this view, we compute the
average transmission completion time of all the nodes in the
path shown in Figure 15 and observe similar trend as in
Figure 16.
5. Conclusions
We have presented novel topics-based data routing proto-
cols and algorithms in MQTT. Te routing algorithms
optimize IoT data transfers with constrained resource and
fragile network environments in publish-subscribe model.
Our proposed algorithms can adapt the dynamical network
topology and are capable of adopting continuously changing
devices with rerouting method in IoT system. Trough
experimental results, we have demonstrated eﬃciency of our
algorithms for message routing, and dynamically adapting
the continually changing device and network topology. We
12000
10000
8000
6000
4000
2000
0
2000
4000
6000
8000
1000
Number of topics
Time cost
Trend without short path in node 6
Trend with short path in node 6
Trend without short path 6
Trend with short path in node 6
Figure 16: Comparison of data transmission completion time to
the edge router nodes.
12000
10000
8000
6000
4000
2000
0
0
2000
4000
6000
8000
1000
Trend with short path
Trend without short path
Trend with short path
Trend without short path
Number of topics
Time cost
Figure 14: Comparison of data transmission completion time to
the data consumer.
1
2
3
4
5
7
6
Figure 13: Data transmission with the shortest path.
12000
10000
8000
6000
4000
2000
0
0
1000 2000 3000 4000 5000 6000 7000 8000 9000 10000
Time cost
Number of topics
Performance without short path
Performance with short path
Figure 15: Comparison of the overall performance on two path.
12
Security and Communication Networks
have evaluated our algorithms with a prototype with a
Mosquitto based on MQTT protocol. With the experiments
performed and simulations on Mosquitto, the results show
that our algorithms work well. Te proposed algorithms can
be widely used in IoT system with publish-subscribe model.
Moreover, the algorithms have the capability to be tested in
other protocols such as CoAP [25]. From security point of
view, identity and authorization of nodes are critical
problems [26–30]. Treats such as avoiding data to be
published or subscribed by attackers will have adverse eﬀects
on the broker in IoT system. In this work, we have focused
on the data exchange eﬃciency in IoT, mainly under the
MQTTprotocol; in our future work, we aim to study security
issues in IoT [31–34].
From security view, identity and authorization of nodes
are critical problems avoiding data to be published or
subscribed by hacker or crack down the broker in IoT. In this
paper, we focus on the data exchange eﬃciency in IoT,
mainly under the MQTT protocol and not involving the
security problem, which we will deeply research in future
work.
Data Availability
Any data can be obtained from the dropbox url (https://
www.dropbox.com/s/vjm06c4z5kbg79i/%E9%87%87%E9%
9B%86%E6%95%B0%E6%8D%AE3.txt?dl0).
Conflicts of Interest
Te authors declare that they have no conﬂicts of interest.
Acknowledgments
Te authors thank Professor Zia Tanveer for his kind review
and help. Tis work was supported in part by National
Science Foundation of China under grant nos. 61672104,
61170209, 61702570, and 61602537 and U1509214, Program
for New Century Excellent Talents in University under grant
no. NCET-13-0676, and Shenzhen Institute of Artiﬁcial
Intelligence and Robotics for Society.
References
[1] S. Deng, Z. Xiang, P. Zhao et al., “Dynamical resource allo-
cation in edge for trustable internet-of-things systems: a re-
inforcement
learning
method,”
IEEE
Transactions
on
Industrial Informatics, vol. 16, no. 9, p. 6103, 2020.
[2] M. Fischer, D. K¨umper, and R. T¨onjes, “Towards improving
the privacy in the MQTT protocol,” GIoTS, vol. 19, pp. 1–6,
2019.
[3] IoTivity, “IoTivity,” 2017, https://www.iotivity.org/.
[4] J. Sathish Kumar and M. A. Zaveri, “Clustering for collab-
orative processing in IoT network,” in Proceedings of the
Second International Conference on IoT in Urban Space (Urb-
IoT 16), pp. 95–97, ACM, New York, NY, USA, 2016.
[5] CoAP, “Constrained application protocol (CoAP),” 2017,
http://coap.technology/.
[6] AMQP, “Advanced message queuing protocol (AMQP),”
2017, https://www.amqp.org/.
[7] WebSocket, “WebSocket,” 2017, https://www.websocket.
org/index.html.
[8] Y. Zhao, K. Kim, and N. Venkatasubramanian, “DYNATOPS:
a dynamic topic-based publish/subscribe architecture,” in
Proceedings of the 7th ACM International Conference on
Distributed Event-Based Systems (DEBS ’13), pp. 75–86, ACM,
New York, NY, USA, 2013.
[9] M. Stolpe, “Te internet of things: opportunities and chal-
lenges for distributed data analysis,” ACM SIGKDD Explo-
rations Newsletter, vol. 18, p. 1, 2016.
[10] T. Luo, H.-P. Tan, and T. Q. S. Quek, “Sensor OpenFlow:
enabling software-deﬁned wireless sensor networks,” IEEE
Communications Letters, vol. 16, no. 11, pp. 1896–1899, 2012.
[11] AllSeen
Alliance,
“Linux
foundation,”
2017,
https://
allseenalliance.org/framework/documentation/learn/core/
standard-core.
[12] MQTT, “Message queuing telemetry transport (MQTT),”
2017, https://mqtt.org/.
[13] B. Karakostas and N. Bessis, Intelligent Brokers in an Internet
of Tings for Logistics, ACM, New York, NY, USA, 2016.
[14] H. Gao, W. Huang, and Y. Duan, “Te cloud-edge based
dynamic reconﬁguration to service workﬂow for mobile
ecommerce environments: a QoS prediction perspective,”
ACM Transactions on Internet Technology, vol. 36, 2020.
[15] B. Aziz, “A formal model and analysis of an IoTprotocol,” Ad
Hoc Networks, vol. 36, p. 49, 2016.
[16] W.-J. ChenRahul, “Responsive mobile user experience using
MQTT and IBM MessageSight,” IBM Redbooks, vol. 3, 2014.
[17] H. Gao, Y. Xu, Y. Yin, W. Zhang, R. Li, and X. Wang,
“Context-aware QoS prediction with neural collaborative
ﬁltering for internet-of-things services,” IEEE Internet of
Tings Journal, vol. 7, no. 5, pp. 4532–4542, 2020.
[18] S. Sakulin, A. Alﬁmtsev, E. Tipsin, V. Devyatkov, and
D. Sokolov, “User interface distribution method based on
pi-calculus,” International Journal of Distributed Systems
and Technologies, vol. 10, no. 3, pp. 1–20, 2019.
[19] F. Xiong, A. Li, H. Wang, and L. Tang, “An SDN-MQTT based
communication system for battleﬁeld UAV swarms,” IEEE
Communications Magazine, vol. 57, no. 8, pp. 41–47, 2019.
[20] P. Kumar and B. Dezfouli, “Implementation and analysis of
QUIC for MQTT,” Computer Networks, vol. 150, pp. 28–45,
2019.
[21] H. Ziekow, In-Network Event Processing in a Peer To Peer
Broker Network for the Internet of Tings, Springer-Verlag,
Berlin, Germany, 2007.
[22] S. D. Madhu Kumar and U. Bellur, “An underlay aware,
adaptive overlay for event broker networks,” in Proceedings of
the 5th Workshop on Adaptive and Reﬂective Middleware
(ARM ’06), ACM, New York, NY, USA, 2006.
[23] M. A. Jaeger, H. Parzyjegla, G. M¨uhl, and K. Herrmann, “Self-
organizing broker topologies for publish/subscribe systems,”
in Proceedings of the 2007 ACM Symposium on Applied
Computing (SAC ’07), pp. 543–550, ACM, New York, NY,
USA, 2007.
[24] G. De Luca and Y. Chen, “Visual IoT/robotics programming
language in pi-calculus,” ISADS, vol. 16, pp. 23–30, 2017.
[25] A. Larmo, A. Ratilainen, and J. Saarinen, “Impact of CoAP
and MQTT on NB-IoT system performance,” Sensors, vol. 19,
no. 1, p. 7, 2019.
[26] D. J. Wu, A. Taly, A. Shankar, and D. Boneh, “Privacy, dis-
covery, and authentication for the internet of things,”
Computer Security-ESORICS 2016, vol. 23, pp. 301–319, 2016.
[27] S. P. Mahambre and U. Bellur, “An adaptive approach for
ensuring
reliability
in
event
based
middleware,”
in
Security and Communication Networks
13
Proceedings of the Second International Conference on Dis-
tributed Event-Based Systems (DEBS ’08), pp. 157–168, ACM,
New York, NY, USA, 2008.
[28] A. J. Hintaw, S. Manickam, S. Manickam, S. Karuppayah, and
M. F. Aboalmaaly, “A brief review on MQTT’s security issues
within the internet of things (IoT),” Journal of Communi-
cations, vol. 14, no. 6, pp. 463–469, 2019.
[29] H.-Y. Chien, X.-A. Kou, M.-L. Chiang, and C. Su, “Secure and
eﬃcient MQTTgroup communication design,” CSII (Selected
Papers), vol. 19, pp. 177–186, 2019.
[30] R. Singh Bali, F. Jaafar, and P. Zavarsky, “Lightweight au-
thentication for MQTT to improve the security of IoT
communication,” ICCSP, vol. 19, pp. 6–12, 2019.
[31] H. Gao, C. Liu, Y. Li, and X. Yang, “V2VR: reliable hybrid-
network-oriented V2V data transmission and routing
considering RSUs and connectivity probability,” IEEE
Transactions on Intelligent Transportation Systems, vol. 1,
2020.
[32] K. Mladenov, Formal Veriﬁcation of the Implementation of the
MQTT Protocol in IoT devices, Master Tesis, University of
Amsterdam, Amsterdam, Netherlands, 2017.
[33] A. P. Haripriya and K. Kulothungan, “Secure-MQTT: an
eﬃcient fuzzy logic-based approach to detect DoS attack in
MQTT protocol for internet of things,” EURASIP J. Wireless
Comm. and Networking, vol. 2019, p. 90, 2019.
[34] G. Kim, S. Kang, J. Park, and K. Chung, “An MQTT-based
context-aware autonomous system in oneM2M architecture,”
IEEE Internet of Tings Journal, vol. 6, no. 5, pp. 8519–8528,
2019.
14
Security and Communication Networks


Paper 3:
- APA Citation: Verma, N., Singh, S., & Prasad, D. (2021). A Review on existing IoT Architecture and Communication Protocols used in Healthcare Monitoring System. Journal of the Institution of Engineers (India): Series B, 103(1), 245–257. https://doi.org/10.1007/s40031-021-00632-3
  Main Objective: To explore how automated, real-time irrigation management systems can contribute to the efficient use of water resources and enhance agricultural productivity.
  Study Location: Unspecified
  Data Sources: None
  Technologies Used: None
  Key Findings: []
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: {'extract_1': 'This paper is regarding the development of the internet ahead of computers and smartphones to an entire series of environments, procedures, and other things.', 'extract_2': 'We have studied different real-time health monitoring system based on diseases which are common in elderly people like diabetes, blood pressure, heart disease, sleep apnea, and cancer, etc.', 'relevance_score': 0.95}
  Relevance Score: 0.95
  Inline Citation: Verma et al. (2021)
  Explanation: Verma and Singh proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. The paper emphasizes the role of interoperability and standardization for seamless integration and explores the use of various machine learning algorithms for processing healthcare data. It provides a valuable foundation for further research and innovation in real-time, end-to-end automated irrigation management systems.

 Full Text: >
REVIEW PAPER
A Review on existing IoT Architecture and Communication
Protocols used in Healthcare Monitoring System
Navneet Verma1 • Sukhdip Singh1 • Devendra Prasad2
Received: 28 February 2021 / Accepted: 31 May 2021 / Published online: 9 June 2021
 The Institution of Engineers (India) 2021
Abstract Nowadays, due to modernization or advance-
ment in the Internet of Things (IoT) especially in the
Healthcare area, we want to take care of our elders with
some monitoring equipment, and the Internet of Things can
play a signiﬁcant role in it. The motivation of writing this
paper is to collect the information of various existing
Internet
of
Things
Architecture
and
Communication
Techniques used in Healthcare Monitoring System to
observe that how efﬁciently, different researchers have
used it. So we have studied different real-time health
monitoring system based on diseases which are common in
elderly people like diabetes, blood pressure, heart disease,
sleep apnea, and cancer, etc. In this real-time health
monitoring system, researchers introduced many new
measures, communication techniques like ZigBee, Long-
Range Wide Area Network (LoRawan), Radio Frequency
Identiﬁcation (RFID). Apart from this, it was also observed
that remote monitoring system in Healthcare is incomplete
without data processing and early prediction in such dis-
eases. Though, Machine learning provides efﬁcient tech-
niques to extract knowledge from diagnostic medical
datasets collected from the patients. That is why we
highlighted the current role of various Machine Learning
algorithms
like
Support
Vector
Machine,
K-Nearest
Neighbor,
Random
Forest,
etc.,
for
processing
of
Healthcare data and also helpful to predict the output more
precisely.
Keywords HealthCare  IoT  LoRaWan  ZigBee 
RFID  Machine learning
Introduction
Internet of Things (IoT) is regarding the development of
the internet ahead of computers and smartphones to an
entire series of environments, procedures, and other things.
It has been many years since IoT came into existence, but
still, we have not entirely understood it, and this is the
reason why we have not been able to use it efﬁciently in the
healthcare area. It means to say that it is yet to be known
well so that we can use it properly in our daily life. As IoT
is entering into healthcare, the expectation of getting new
facilities is also increasing especially for the elderly. In
today’s modern era, we all have a shortage of time to take
care of our parents who are very old, due to which they
depend more on IoT-based new wearable sensors. Elderly
people need more health monitoring so that we can quickly
identify and cure, whatever side effects they have such as
increased blood pressure, body temperature, heart disease,
etc., by the doctors within the time. So in such a situation,
by sensing the data from the body of the elderly people,
with the help of sensors and communication techniques we
can forward it for further processing. The size and weight
of these sensor nodes are so small that they are very easy to
carry and they can automatically sense the data [1]. To
operate them, the patient does not even have to do the
manual effort from outside. However, these sensors are
more sensitive which sometimes stops working on the
power shortage or environmental hazards and the result is
& Navneet Verma
navneet.713@gmail.com
1
Computer Science and Engineering Department, Deenbandhu
Chhotu Ram University of Science & Technology, Sonipat,
Haryana, India
2
Institute of Engineering and Technology, Chitkara
University, Punjab 140401, India
123
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
https://doi.org/10.1007/s40031-021-00632-3
system failure [2]. In Fig. 1, it was demonstrated that how
IoT sensors and technology are working in the HealthCare
area.
Smart Healthcare is an intelligent infrastructure that
transfers information with the help of an IoT system and
also implements processing from cloud and fog computing.
In various applications, we can use HealthCare with IoT
like, diagnosis and elderly treatment, health management
and managing chronic diseases, disease avoidance and risk
monitoring, smart hospitals, virtual assistants, reducing
urgent situation waiting times, assisting drug research, etc.
IBM is the ﬁrst to introduce the Smart Healthcare concept
[3] in 2009. No doubt the Internet of Things (IoT) among
the wide stimulating areas of investigation for the engi-
neering
society
and
device
manufacturing
business.
Whereas with the help of established internet, we can
connect two devices to communicate and that too with the
help of the intervention of a human. While IoT connects all
sorts of devices ‘‘Things’’ into a broad network of inter-
related computing intellect without the involvement of a
human. The growth of the IoT industry is demonstrated in
Fig. 2, and various IoT elements with technology are pre-
sent in Fig. 3.
Overview of IoT Protocols and Architecture
Today, we are using internet TCP/IP protocol suite for
network communication and billions of IoT devices can
work because it is connected through the internet. IoT
protocols are an essential element of the IoT technology
stack and without them, the hardware connected to it is
useless. Because the IoT protocols only tell data exchange
in a structured and meaningful way. Whatever IoT is today
is due to its essential characteristics like communication
between sensors, equipment, servers, gateways, and end
user’s applications. Although the IoT protocols enable this
all smart stuff to talk and interact. Though the availability
of present Internet communications is free and the biggest
constraint for any IoT device even today is that it is too
heavy and a power-consuming process for any IoT use
case. The application layer works as an association
between the user and sensor that is needed for the appli-
cation. ‘‘Constrained Application Protocol (CoAP) was
designed to translate the HTTP model so that it could be
used in restrictive devices and network environments.
CoAP relies on the User Datagram Protocol (UDP) for
Fig. 1 IoT in HealthCare
Fig. 2 Growth of IoT
Fig. 3 IoT Elements with Technology
246
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
123
establishing secure communication between endpoints.
Apart from transferring IoT data, CoAP leverages Data-
gram Transport Layer Security (DTLS) for the secure
exchange of messages in the transport layer’’[4, 5]. CoAP
is more efﬁcient when used in arrangement with 6LoW-
PAN, a lighter version of the traditional HTTP protocol.
‘‘Message Queuing Telemetry Transport-(MQTT)’’ is a
lightweight publication/subscription type messaging pro-
tocol. MQTT’s design is simple and lightweight, and it is
specially designed for battery-powered devices, providing
small power consumption for devices. It works over TCP,
and it cannot be used with all types of IoT applications.
Moreover, it uses text for topic names, which increases its
overhead. Once there is physical connectivity done, then
with a unique method, all the devices can be separated
from operating in their range. The network address has a
critical role to identify each computer that is associated
with the same router. Each alliance in IoT has its network
address; for occurrence, ZigBee is one alliance with its
network addresses. Like this, ‘‘BLE and Z-Wave’’ are
having their network addresses according to their envi-
ronments. ‘‘6LoWPAN (IPv6 Low Power Wireless Per-
sonal Area Network)’’ devices also function on IEEE
802.15.4, but their network stack is with IP connectivity
(IPv6). With effective physical layer standards, we can
achieve all this like more devices in a single environment
and low power consumption, longer battery life, lower
bandwidth consumption, the ability to connect smaller and
lighter devices. ‘‘Near Field Communication (NFC), IEEE
802.15.1 (Bluetooth Low Energy (BLE) – Bluetooth 4.0),
IEEE 802.15.4 (ZigBee, 6LoWPAN, WirelessHART, Mi-
Wi),’’ etc., are the standards set by deﬁnite bodies such as
proprietary vendors (Z-Wave by SIGMA DESIGNS) and
IEEE (Institute of Electrical and Electronics Engineers).
IoT architecture is divided into ﬁve layers [6] as shown
in Fig. 4, and the architecture of IoT in HealthCare is
demonstrated in Fig. 5. The responsibilities of different
layers in IoT architecture are:
I.
Perception layer The perception layer is like a physical
layer, or we can also call it the device layer. On this
layer, all sensors like RFID, infrared sensors. barcode is
scanned and collect data from the sensor node to
forward it to the network layer further.
II.
Network layer In IoT architecture, the network layer is
also called as transmission layer. It works by sending
the data received from the perception layer to the
processing unit securely. The transmission standard
can be wired and wireless to send data securely and
this layer use 3G, wi-ﬁ, Bluetooth, and Zigbee
technology. Thus, the data are then forwarded to the
middleware layer.
III.
Middleware layer One device of IoT connects to the
other device only when both provide the same type of
services. The middleware layer has the responsibility
to connect it to the database by keeping in mind the
service management. Further, computation and deci-
sion-making are also done by the same middleware
layer.
IV.
Application layer This layer comes up with the global
management service. As per the device applications
like it can be smart farming, smart health, smart
home, intelligent transportation, smart city, etc.
V.
Business layer The business layer helps in creating a
business model, graph, ﬂowchart, etc., for different
business models from the output received from this
layer, which is useful in determining the further
business strategies.
Applications of IoT in HealthCare
IoT in the HealthCare ﬁeld provides applications that can
be separated into two sections [7, 8];
Fig. 4 IoT Architecture
Fig. 5 The architecture of IoT in HealthCare
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
247
123
I.
Single condition observation, e.g., Glucose level mon-
itoring,
electrocardiogram
sensing,
blood
pressure
sensing, body temperature sensing, oxygen value
sensing ii) Clustered condition observation, e.g., Reha-
bilitation management, medication system, wheelchair
system, imminent healthcare, smartphone healthcare
solutions.
Further for general HealthCare, lots of apps are avail-
able like;
Google Fit
It is a health-tracking application. It is the only set of
application programming interfaces (API) that combine
data from multiple devices and apps. API is a computing
edge that deﬁnes exchanges of data between multiple
software. Google ﬁt uses sensors of a user’s mobile devices
to witness our physical ﬁtness behavior for an instance
running, walking, cycling, and many more. As per the
user’s ﬁtness objective, they measured against a wide-
spread view of their ﬁtness level.
ECG Self Monitoring
The Electrocardiogram (ECG) sensors calculate the bio-
potential that is caused by electrical signals, and it controls
the expansion and contraction of the heart chambers. It is
implemented in a health checkup procedure.
Pedometer
This device counts every step of a person by detecting the
movement of the person’s hands and hips. The movement
of a body is observed by attaching a enclose of reference
which consists of an intangible coordinate system, to a
viewer and measuring the change in position of the body
relative to the enclose with the change in time. The tech-
nology for a pedometer includes a mechanical sensor and
software to count the number of steps. Today, Micro-
electro-mechanical systems (MEMS) sensors and compli-
cated software are to be used for the same purpose.
Noom-Walk
Noom Walk is similar to a pedometer as it counts steps all
over the day. It does not use GPS technology, so the app
uses less battery and after counting steps for 24 h, Noom
Walk uses around the equal battery life as a GPS-enabled
app just for few minutes.
Water Your Body
This app is created to remind a person to drink a certain
amount of water every day. This app is based on a lot of
predeﬁned algorithms that take some related information
from a user for instance weight, height, etc., to set remin-
ders for the users. Some of them are also used some
tracking components to track the temperature of a body and
as well as energy is being exhausted from a body.
Instant Heart Rate
Basically, this application and technology are quite similar
to the technology which is being used in Heart rate mon-
itoring. For instance, some predeﬁned algorithms and
software are used in this. The main quality of this appli-
cation is to measure heart rate instantly or in a fraction of a
second.
Finger Print Thermometer
It is a sensor-based application that takes a user’s ﬁnger to
detect body temperature and pressure. It recognizes the
ﬁnger which we press on the display panel. These sensors
can permit users to just place their ﬁnger on the screen and
recognize the print, rather than on a button. Random net-
works of a hybrid nanostructure stand on ultra-long silver
nanoﬁbers, and ﬁne silver nanowires are used to produce
clear, ﬂexible electrodes of this multitasking sensor array.
On track Diabetes
This application connects to Dexcom-glucometer to track
the level of blood sugar. A person can also give related
information based on steps, exercise levels, meals, etc.
Motivation
When a device is associated with the internet, it means that
can send and/or receive information. This ability to send
and/or receive information makes devices smarter. IoT in
HealthCare is gaining more attention due to the advance-
ment in the development of IoT devices. Fortune Business
Insight says that the market will go up to USD 176.82
billion by 2026 and it was USD 30.96 in 2018. The market
is predicted to rise at a CAGR of 33% in the estimated
period (2019–2026). The integration of AI with IoT is the
vital feature driving the IoT in HealthCare market exten-
sion. Asia Paciﬁc area is probable to grasp the maximum
market share. As per our knowledge, in this paper, we
describe the existing IoT structural design and communi-
cation techniques in HealthCare Monitoring. Application
area of IoT devices is going to be increased in our daily life
248
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
123
like SmartHome, HealthCare, Remote Monitoring, etc.,
and various types of technology platforms are being used
for the architecture of IoT along with this various com-
munication protocols. As our focused area is Smart
HealthCare, hence, this ﬁeld needs to be optimized. If
communication technique challenges and accurate data
transmission are not addressed, then we will fail to rec-
ognize the disease at the right time. These points motivated
us to bring forward this review work taking into consid-
eration various parameters like Coverage area, transmis-
sion range, accurate data as futuristic solutions. To make
available the readers through an explanation of the dis-
similar work available in this ﬁeld of HealthCare in IoT
which helps to adapt these methods in solving communi-
cation and accuracy of data problems in future. In this
COVID-19 situation, today when we cannot physically
take care of our elders and near dear ones, then such remote
monitory system can be most effective, just the high-speed
internet should be facilitated. Researchers will get the help
to explore more to address solutions in approaching days.
As per the report of Deloitte and NASSCOM, Fig. 6
exhibits the number of IoT-enabled devices growth per
year and the CAGR growth rate which is almost 33%.
Literature Survey
Bluetooth Low Energy (BLE)
BLE is an energy-efﬁcient and low latency protocol
because of its single-hop transmission feature. In this paper
[9], the author has compared some microcontrollers for the
gateway node and has chosen the MCU node based on its
speciﬁcation. Sensed data from patient’s body stored on an
android app with the help of Bluetooth Low Energy (BLE).
BLE also provides Cyclic Redundancy Check (CRC) for
data security, and this same app forwarded the collected
data on the cloud for further reference. In this paper, the
author proposed a reliable system at a low cost. In another
experiment [10], the author has sent patient data from three
different methods like BLE, Wi-Fi, GSM to the mobile app
by making RPi3 a gateway node, so that if one data is lost
from one method, the data from the remaining method
could be received. And ﬁnally, web application software
has been proposed to provide an interface for cloud data-
bases. In this work [11], we observed that the working of
the BLE protocol is better in the case of latency and energy
parameters.
Drawbacks
The early-stage disease prediction method is not present in
the above work, and all patients’ complete sensed data are
stored on the cloud without any data analysis which may
increase the big data problem on the cloud in the future.
Also, BLE supports single-hop transmission which is not so
much reliable, as an end-to-end transmission depends upon
the working of intermediate nodes.
Bluetooth (IEEE 802.15.1)
This paper [12]shows, that IoT helps a lot to reduce deaths
due to heart attack, here the entire patient monitoring
system is separated into two steps which are data acquisi-
tion and data transmission. In the data acquisition part, data
forwarded into four different modules by checking the
patient’s Electrocardiogram (ECG), pulse rate, heart rate,
blood fat, blood pressure, patient location, and blood glu-
cose. These modules are synchronous uninterrupted com-
munication for all data, uninterrupted communication in
special slots, transmission on patient demand, and event-
triggered transmission. At last, the implementation was
performed on a prototype, in which the monitoring work
was done with the help of Java application in Android
smartphone on sensed data which was sent via Bluetooth
and data were left on the server-side for monitoring of
doctors.
Drawbacks
It has also been observed that Bluetooth is not adaptable for
long-range transmission [13]. BLE and Bluetooth work on
the same frequency and range, but the transmission rate in
the case of Bluetooth (IEEE 802.15.1) is up to 1- 3 Mbit/s,
whereas in BLE it is 1 Mbit/s.
ZigBee (IEEE 802.15.4)
The contribution of master–slave architecture [14], in IoT,
plays a signiﬁcant task. The slave node passes on the dif-
ferent data readings to the sub-master node with the help of
Fig. 6 Number of connected device per year
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
249
123
ZigBee, which is a good protocol for small distance com-
munication, followed by the sub-master node, send the data
which was received from the slave node to the master node,
which is at a much greater distance and here sometimes due
to lack of cellular network, therefore, LoRawan protocol
has been used. The accuracy of the ZigBee protocol
explained in this paper [15], during communication, such
as accurate location detection by ZigBee terminal when it
passes through ZigBee router area. When sensed data of
patients are compared with manual reading, almost 99
percent of the matches took place. On a similar standard,
one more technology is used for communication [16], the
author has proposed an IoT-based biomedical kit which is
very cheap. As well as it can be implemented on a lot of
people simultaneously. The basic platform in this system is
Raspberry Pi 3, and it was connected to a wireless trans-
ceiver ‘‘nRF24L01 (IEEE 802.15.4)’’ and microcontroller
MSP430G2553 for data sensing and transmission. The
author has also stated in this paper that cost, power con-
sumption, standby mode, and data transmission rate wise
nRF is best instead of ZigBee and BLE. So when we talk
about data accuracy, we found that ZigBee performance is
good, and based on power consumption, standby mode, and
data transmission rate parameters- nRF is good.
Drawbacks
Here, we can see that both Zigbee and nRF are designed for
small-distance communication and the data rate of ZigBee
is 250 kbit/s.
Sigfox/LoRa/NB-IoT under LPWAN
Beneﬁts of Sigfox, LoRa, and NB-IoT protocols [13] such
as battery life, cost, and range of radio communication,
under the low power wide area networks (LPWAN) cate-
gory. LoRaWan uses AES 128b for encryption and NB-IoT
uses LTE encryption, but Sigfox has no authentication or
encryption. A new architecture [17] has been proposed for
Smart HealthCare, in which communication takes place
with the help of LoRa connectivity to Fog Computing. It
has been observed that the monitoring of remote area
patients can be forwarded to several kilometers away also;
this system does not allow too much burden of data on the
cloud and is also a good example of energy efﬁciency. In
this research work [18], a channel access mechanism
solution is provided to reduce the collisions, and the focus
area of this work is to analyze the scalability of LoRa
technology. No doubt the Sigfox/LoRa/NB-IoT protocols
under the LPWAN category are good.
Drawbacks
Since the NB-IoT commercial deployment is very less in
HealthCare, so its lifetime and performance are not sure
whether it is good or not. Another challenge is internet
connectivity in a remote area, and it is expected that 5G
communication will be able to solve this. The common
drawback in the above-cited papers is that they are just
working on the communication part there is no mechanism
to detect the disease in the early stage.
MQTT
In this work [19], throughput and end-to-end delay
parameters were taken for a comparison between Message
Queue Telemetry Transport (MQTT) and HTTP. To build
the simulation environment, OMNET ? ? network sim-
ulation was used and it described that MQTT protocol
performs better as compared to HTTP. Again in this related
paper [20], MQTTT has been used for health monitoring.
Firstly, a wearable device receives the health-related data
from the sensors and then by customizing the data, forward
it to the cloud because of the MQTT protocol. In addition
to this, a fuzzy classiﬁer [21] is used to receive the con-
tinued data from the sensor as well as for the data ﬁltering
task, so that only a calculated amount of data is to be sent
on the cloud.
Drawbacks
More power consumption is required by MQTT and
another issue is that it uses text to topic name which
increases its message overhead.
CoAP
The Constrained Application Protocol (CoAP) is a web
transfer protocol that is used for constrained nodes within
constrained networks, which is having low bandwidth and
low availability. It is similar to HTTP protocol. The author
[22] has given an example of a hybrid system in this paper.
This hybrid system is made up using both 6LoWPan and
CoAP protocols, due to which the efﬁciency of this hybrid
system has increased up to a great extent. Similarly [23],
the author has used CoAP as the protocol of an application
layer and implementing it under 6LoWPan network on
Contiki OS. Here, the performance is quite satisfactory and
it was concluded that CoAP is a reliable and effective
application protocol.
250
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
123
Drawbacks
CoAP is not good in congestion control mechanism and
having poor interoperability with other devices.
Miscellaneous
In this system [24], the author has mainly explained the
role of IoT in the health care monitoring of elderly people.
The process of sensing the heart rate and body temperature
of the elderly by making an Arduino do it yourself (DIY)
board is the base. Besides, sensed data have been stored on
the cloud for further graph plotting and emergency notiﬁ-
cation. In this research, it has also been said to create a
future model in which the decision-making algorithm of
machine learning will be used.
In the same way, the Raspberry Pi platform has been
used [25], the author has given the proposal of an IoT-
based system keeping in mind the elderly and disabled
people who speak a very low sound. To create this system,
Raspberry Pi is connected with a GPIO interface, which
patients can access from their smartphone. With the help of
the internet, this system sends pre-recorded audio messages
to hospital staff or relatives, so that help can be delivered in
time.
In this work [26, 27], hybrid system is made up using
both 6LoWPAN and MQTT protocols, where 6LoWPAN
is used for framing and for internal communication MQTT
is used. In this work [28], a new protocol was proposed and
its performance was checked on the NS-2 simulator and
results show that it is good in energy-saving and network
lifetime parameters.
ML in HealthCare
In this paper [31], the author has focused on how to use
sensed data from the cloud efﬁciently. For example, here
only the database of patients with diabetes has been
researched to indicate that the dataset is a severe disease of
diabetes and which data set tells it to be early-stage of
diabetes. Here, the author has used various classiﬁer
schemes of ML-like decision tree, K-NN, SVM and ﬁnally
propose a Fuzzy Rule-Based Neural Classiﬁer.
Random forest classiﬁer and IoT [34] can perform well
in the healthcare system. It has been demonstrated that how
to improve the interactivity between the patients and the
doctors. For the reliability of this process, the author has
performed experiments on datasets of various diseases, like
diabetes, breast cancer, surgery, thyroid, spect-heart, heart
disease, liver disorder, and dermatology. The author has
used different algorithms of machine learning over differ-
ent datasets such as Support Vector Machine, K-NN,
Decision Trees, MLP, and Random Forest. The best results
that we have come across are through the random forest
technique of machine learning and the average results are
also good on different disease data sets. In the future, if we
use a large data set, then maybe some other algorithm of
machine learning can give better results.
In heart care disease [35], Fog-based HealthCare with
deep learning technique is a unique Health Fog system,
especially for heart patients, in which the Ensemble
method of deep learning has been used on edge computing
devices. For high precision, tremendous compute resources
(CPU and GPU) are used for instruction and forecast. In the
future, this architecture could be used for other fog com-
puting applications such as weather forecasting, agricul-
ture, smart city, trafﬁc management, and other HealthCare
issues such as cancer, diabetes, and hepatitis, which can
supply skillful results.
A multi-agent system [36] has been described as ﬂexi-
ble, reliable, and energy-efﬁcient. Here, the focus is on the
data reduction algorithm, so that a reduced set of data is
prepared, which is very similar to the original data set. By
using this above-said method, we will not have the
requirement of separate external memory. For the imple-
mentation of this system, Java language has been used in
the JADE environment and the data reduction ratio has
been calculated up to 80 percent.
ANN-based IoT-enabled HealthCare system framework
is demonstrated [37], and the accuracy of the developed
model is 90.54% for a healthy person and 87.88% for a
patient with diabetes and kidney disease. ANN Technique
of Machine Learning especially focused on Sleep Apnea
disease [38], which is an event detection system also a
good idea. Different sensors are used for data collection
purposes like MEMS-based accelerometers and Industrial
Spiro-meter. Only ACC data are used to train the system,
and for good results, the author has suggested that more
sensors can be used for monitoring purposes in the future.
In this work [39], the Deep Neural Network technique
was used here to extract the features from EEG, ECG,
Temperature, and Pulse Rate, and the accuracy of the
model was found at 97.5%. To ﬁnd the abnormality in the
Kidney [40], FPGA-based IoT-enabled ultrasound images
were used along with a Support Vector Machine classiﬁer
to know the accuracy of the system. Similarly, k-means
algorithm of machine learning is used to predict the
upcoming situation [14].
In Table 3, we demonstrated various ML algorithms and
application areas.
In the comparison graph shown below in Fig. 7, we have
compared the accuracy value of the diabetes dataset
[41–45] given in different papers by various classiﬁcation
methods of machine learning like SVM, K-NN, Decision
Tree, Naive–Bayes, Logistic Regression, and Random
Forest.
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
251
123
Challenges with IoT in Healthcare
I.
Data security and isolation
II.
Integration: various devices and protocols
III.
Network lifetime
IV.
Data overload and accuracy
V.
Cost
These three checks are very important for data security and
Privacy, i.e., authentication, conﬁdentiality, and integrity.
For Data security [34, 46, 47], either we talk about Fog
Computing, Cloud computing, and Direct transmission,
such algorithms do necessitate large storage capacity levels
where cloud computing up to an extent can solve this large
memory requirement [48]. Sometimes the data are much
classiﬁed, and it might become a big difﬁculty if stolen or
compromised. Most security depends upon the developers
of the devices, but we also need some new security
methods [49, 50]. IoT networks in hospitals are extensively
using 6LoWPAN with ‘‘RPL (IPv6 Routing Protocol for
Low Power and Lossy Networks)’’. Storage requirements
can be met by using motes ROM. But still using more
capacity memory, we can control a few more attacks and
can reduce the issue of security further. Other solutions
could be private cloud and data aggregation techniques. In
other words, it should be in the practice and process of all
of us that we conﬁrm that the data cannot be used and
accessed by any unauthorized individual and parties.
Security of data guarantees that the data are reliable and
accurate whenever it is needed by authorized access. A
data security plan involves aspects such as gathering only
the necessary data, safe maintenance and demolishes any
data that is no longer needed. These steps will assist any
business to meet the legal commitment of possessing
responsive data. Appropriate use of data is deﬁned by data
privacy in an appropriate approach [51]. The IoT system
can function and convey information via an online
approach only when devices are securely connected to a
communication network. Some of them as given below
[52]:
•
Bluetooth The IEEE 802.15.1 standard is an exclusive
open wireless technology standard for exchanging data
over a short distance. Bluetooth radio adopts the
Frequency Hopping Spread Spectrum—FHSS. The
transmit distance of this technology is directly propor-
tional to the transmit power.
•
Wi-Fi The IEEE 802.11 network is an arrangement of
the Wireless Local Area Network (WLAN). In low
band mode, three variables of IEEE 802.11(b, g, n) are
present, which can transmit data from 11 Mbps and up
to 54 M bps and goes up to 32 m indoors and 95 m
outdoor.
•
Cellular Cellular networks have become more popular
in recent years. It uses radio waves for transferring
information. In the 1980’s, it was started by the name of
1G which was an analog system, then the 2G-Digital
system comes into existence, then 3G and after that 4G
cellular network generation came which is based on
LTE and Wi-Max network standards.
Some of the reasons behind the data overload are given
below:
•
A lot of new information is created continuously.
•
The pressure to create and compete in information
provision leading to a quantity over quality effect in
many industries
•
The simplicity in online information sharing, creating
and duplicating.
•
The exponential rise in channels to collect information
by; print media, radio, websites, television, e-mail, RSS
feeds, mobile telephony, etc.
•
Increasing in the weight of historical data available to
us.
•
High volumes of contradictory, conﬂicting, and plain
old erroneous information.
Fig. 7 Accuracy comparison
252
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
123
•
No simple methodologies for comparing, quickly
processing, and evaluating information sources.
•
To fall short in clear structure in groups of information
and poor or bad clues as to the associations between
those groups.
A node in an IoT network requires a lot of energy as
well as a storage area to make it so capable. In this work
[53], for energy efﬁciency especially for wearable devices
ATTINY85 sensor is used which results in the long life of a
220 mAh battery. Samsung Exynos 5422, a smart Gate-
way, has also been used, which is energy efﬁcient as well
as fast [54] due to the processor installed in it. This system
can understand only FHIR datasets ﬁles, so in the future, it
can be made compatible with CSV datasets, and the
working of Gateway can also be made more accurate by
associating it with Artiﬁcial Intelligence. This can be done
by reducing the computational task and simultaneously
without losing the accuracy of the information [55], and
this can also be achieved by traveling the shortest path by
data packets with the help of FUZZY rules [56]. Data
overload will occur when the input data will be larger than
its processing capacity. When data overloads, then the
reduction in data started to occur. As data accuracy is one
of the important features of data quality. This tells us that
the data values that have been stored for the object are also
correct. To be correct, data values must be true values and
must be represented in a steady and explicit form. The
accuracy will always be if the data values are correct. Since
100% of data accuracy is not possible anyhow. There will
always be some amount of data in the inaccurate database.
The application area of all protocols is also different from
the perspective of these parameters like coverage area,
transmission range, and operational bandwidth. A global
standard can also be made to resolve this issue. Overload of
data and lack of accurate data on the cloud, fog, and
gateway devices is also a challenge for IoT in healthcare.
For data quality and accuracy issues, Machine Learning
Technology can be a good solution. Although work has
been started in this direction, it can be improved further.
Whenever we talk about advancement in the IoT ﬁeld, it
directly affects the cost of the system. Whether we argue
on a new protocol design, a new IoT wearable device, on a
sensor that fulﬁlls multiple purposes; these are all cost-
dependent areas. Device developers should also pay special
attention to this direction.
So IoT networks require these characteristics [57] such
as:
•
The capacity to connect a large number of heteroge-
neous elements Thousands to millions of devices will be
needed to build a large IoT system, and all these
devices must also be entirely diverse from each other.
Most of the IoT devices are diverse depends upon the
input and output layout of particulars and the commu-
nication protocols. So to make a reliable IoT system,
inter-device communication, interoperable devices, and
analysis of the data from all diverse devices is a big
challenge.
•
High reliability On each layer of IoT, reliability is
required because of the proper working of the system
and aims toward the achievement of service delivery
ensured by it.
•
Real-time data transmission with minimum delays
These devices transmit real-time data to the base
station (BS), which can further be used in different
applications and that too with a minimum delay such as
abnormality discovery. Under adequate power accessi-
bility, wireless transmissions from sensors can be
scheduled at regular time intervals to maintain real-
time data acquisition.
•
The ability to protect all data ﬂows Diverse security
methods are involved in all layers of IoT because data
security is a big concern for IoT.
•
The ability to conﬁgure applications Sensors get
outdated from time to time, and there are chances of
malfunction, so it is better to conﬁgure them from time
to time according to the application.
•
Device-level monitoring and trafﬁc management Mon-
itoring all activates of connected devices and managing
all trafﬁc or we can say proper routing should be there.
•
Cost-effectiveness for a large number of connected
objects As we add more new devices to the network, the
cost of the system will also increase. That is why either
these devices support multiple applications or they do
not cost much.
Well, these are the consequences by which it becomes
more complex.
Problems in existing System
Various factors affect the IoT in HealthCare applications
like it requires continuous research in every ﬁeld of
healthcare to offer a fast and better competence for patients
for example manufacturing smart devices, fast communi-
cation techniques, etc. IoT has a heterogeneous network
and due to a lack of standard architecture, sometimes it
becomes a difﬁcult task to use communication techniques
according to the applications. Without analytics power, IoT
is useless which is now becoming the biggest source of Big
Data. Deep learning, Artiﬁcial Intelligence, Machine
Learning, and Big data analytics can be used for some
value-added applications in IoT. As we can see from
Table 1, that the professionals working in the HealthCare
department are getting massive data of the patients with the
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
253
123
help of IoT technology either on cloud or server, which is
creating a data surplus and accuracy problem. As well as it
is wastage of time to deal with irrelevant datasets or values
at the time of diagnosis. Before sending the whole data to
the cloud or diagnosis the whole dataset, analysis of
datasets or data mining can assist better care to the patient.
As we found in the literature review that the patient’s data
are either getting from the direct patient’s sensor device or
from cloud storage to diagnose by the doctors. If doctors
are working on a cloud storage data set, then it cannot be a
real-time health monitoring system. Sometimes, it is very
difﬁcult for those who live in remote areas where doctors
are far away from their reach to consult. In those cases, if
symptoms arise for some serious and common diseases, so
without a doctor’s intervention, the machine learning
approach will be helpful to detect the severity level of the
disease. So, IoT technology with ML can build precision of
the information and disseminate more correct and real-time
information to patients. This leads to fewer accidents from
misperception, better protective concern, and superior
patient satisfaction. So with this feature, we can use IoT in
a well-planned manner in healthcare and take it to a new
level. This is the best use of it in healthcare, that we should
do it for elderly patients with some serious and common
diseases. In a healthcare monitoring system, the patient
simply has to attach the IoT-based sensor to their body and
the sensor does the rest of the monitoring work itself and
keeps the report to the doctor and family as well. But
remote monitoring facilities can beneﬁt those people who
live in remote areas and doctors are far away from their
reach.
Conclusion and Future Scope
So far the utility of IoT-enabled technology in Healthcare
is facing many challenges such as heterogeneity of IoT
devices, lack of cost-effective smart and accurate medical
sensor, lack of a standard architecture of IoT system, high
handling volume data and challenge of interoperability, etc.
Though to prepare IoT for healthcare it is necessary to
support IoT interoperability, for this IoT system will have
to be compatible with all devices, which will require a
standard IoT architecture, which could do decision-making
task itself. When all these challenges are well explored,
then the researcher can do some new work in it by using
new methods and technologies, we can increase ‘‘the
applications of IoT in the HealthCare ﬁeld.’’ People who
reside in remote regions and doctors are far away from
their reach in that case remote monitoring facilities can be
beneﬁtted for those. So the selection of a communication
standard for HealthCare purpose, especially remote moni-
toring, will be our ﬁrst important factor in our further
research. It is an important factor, and we have shown
through Table 2 the comparison between various tech-
nologies which we are using currently for Healthcare
Monitoring. Different authors have used different com-
munication techniques according to the application and
area of the problem, such as BLE, Bluetooth, and ZigBee
Table 1 Comparison between various Technologies used for Healthcare architecture
Ref.
work
Published by
IoT
interoperability
Data on cloud or
server
Technique for
prediction
Single/Multiple
parameters
Technologies
[29]
Springer
RPi
Yes
No
Multiple
GSM
[30]
Scientiﬁc
Research
RPi
Yes
No
Single
SMS/Alarm
[31]
Elsevier
Android
Yes
No
Multiple
Bluetooth
[20]
SPC
RPi
Yes
No
Multiple
MQTT
[14]
Ubiquity
Arduino
Yes
k-means
Multiple
ZigBee & LoRawan
[31]
Elsevier
Java
Yes
Fuzzy Rules
Multiple
5G mobile network
[21]
Elsevier
Android
Yes
Fuzzy Rules
Multiple
MQTT
[26]
MDPI
RPi
Yes
No
Multiple
MQTT on
6LoWPAN
[24]
Elsevier
Arduino
Yes
No
Multiple
LED & LDR
[10]
Elsevier
Rpi3
Yes
No
Multiple
BLE
[32]
Elsevier
Android
Yes
No
Multiple
BLE
[33]
Elsevier
Weka/Matlab
Yes
HOBDBNN
Multiple
Bluetooth
[23]
IEEE
Contiki
Yes
NO
Multiple
CoAP on
6LoWPAN
254
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
123
for small coverage areas, and some authors have described
sigfox/LoRa/NB-IoT techniques are good for low power
wide area networks as demonstrated in Table 1. There is
very little focus on Machine Learning for early-stage dis-
ease prediction, which is a very important area, without
which we could not be able to predict the disease at the
early stage. So this will be our second important factor in
our further research like which ML technique can predict
the disease more accurately. Machine learning techniques
as demonstrated in Table 3 and IoT together can do a
miracle in today’s modern technology and especially in the
HealthCare area; if both of them are used with good
understanding, then it can create a new benchmark in the
HealthCare ﬁeld, which can be a boon for the HealthCare
of elder people.
References
1. S.B. Baker, W. Xiang, I. Atkinson, Internet of things for smart
healthcare: technologies challenges, and opportunities. IEEE
Access. 5, 26521–26544 (2017). https://doi.org/10.1109/ACC
ESS.2017.2775180
2. M.W. Woo, J.W. Lee, K.H. Park, A reliable IoT system for
personal healthcare devices. Futur. Gener. Comput. Syst. 78,
626–640 (2018). https://doi.org/10.1016/j.future.2017.04.004
Table 2 Comparison of short- & long-range communication protocols
SigFox
LoRawan
NB-IoT
BLE
ZigBee
MQTT
Aptness for
healthcare
Low
Moderate
High
High
Moderate
Moderate
Coverage area
9.5 km
7.2 km
15 km
150 m
30 m
M2M
Transmission
rate
100bps
0.25–5.5kpbs
250kbps
1Mbps
250kbps
2Mbps
Authentication
and
Encryption
Private key
signature
Encryption
and
scrambling
Technique
distinctive key
distribution,
recognized only by
the node and base
station using the
unique key Data
encryption
3GPP S3 security,
which includes user
and device identity,
entity authentication,
conﬁdentiality, and
data integrity
Secure pairing before the
key exchange, Two
keys used to provide
authentication and
identity protection,
AES-128b encryption
AES-128b, Network
key shared across
network, Optional
link key to secure
Application layer
communications
TLS/SSL
Operational
Bandwidth
868 MHz
(Eu)
915 MHz
(US)
868 MHz(Eu)
915 MHz(US)
433 MHz(Asia)
LTE bands, in the
guard bands of LTE
(guard-band mode),
or re-farmed GSM
bands
2.4 GHz
2.4 GHz
2.4 GHz
Table 3 Various ML algorithms and their application area
ML algorithms
Applications
Naive–Bayes
Categorize news, e-mail spam recognition, face detection, emotion study, medical diagnosis, number identiﬁcation,
and weather forecast. On the whole, it is useful for big data set and efﬁcient on a big range of difﬁcult issues
Decision tree
It helps us in ﬁnding inconsistent collection, assessing the comparative importance of variables, handling of values,
forecast and data management
Linear regression
It tells us about the association between the input explanatory variable and the output dependent variable
Logistic Regression
There are many real-world applications such as measuring the success rates of the promotion campaign, credit
scoring, predicting the revenues of a certain product
K-NN
Used in search where we are looking for similar data set
Learning VECTOR
Quantization
It is used in data reduction or reduced data set
SVM
It is used for text and hypertext classiﬁcation, classiﬁcation of images, bioinformatics, etc
Apriori
Healthcare
Boosting with AdaBoost
It is useful where we are having ample data to make a prediction and we look for extremely high predictive results.
It is used for reducing bias and variance in supervised learning
Random forest
Banking & Finance, Medicine, Stock Market, E-commerce
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
255
123
3. S. Tian, W. Yang, J.M. Le. Grange, P. Wang, W. Huang, Z. Ye,
Smart healthcare: making medical care more intelligent. Glob.
Heal. J. 3, 62–65 (2019). https://doi.org/10.1016/j.glohj.2019
.07.001
4. O. Said, Y. Albagory, Internet of things-based free learning
system: performance evaluation and communication perspective.
IETE J. Res. 63, 31–44 (2017). https://doi.org/10.1080/03772063
.2016.1229582
5. P. Sethi, S.R. Sarangi, Internet of things: architectures, protocols,
and applications. J. Electr. Comput. Eng. (2017). https://doi.org/
10.1155/2017/9324035
6. H.F. Atlam, R.J. Walters, G.B. Wills, Internet of things: state-of-
the-art, challenges, applications, and open issues. Int. J. Intell.
Comput. Res. 9, 928–938 (2018). https://doi.org/10.20533/ijicr
.2042.4655.2018.0112
7. S.M.R. Islam, D. Kwak, M.H. Kabir, M. Hossain, K.S. Kwak,
The internet of things for health care: a comprehensive survey.
IEEE Access. 3, 678–708 (2015). https://doi.org/10.1109/ACC
ESS.2015.2437951
8. A.A. Rizvanov, Lecture Notes in Bioengineering Advances in
Biomedical Engineering and Technology, 2018.
9. P. Kakria, N.K. Tripathi, P. Kitipawang, A real-time health
monitoring system for remote cardiac patients using smartphone
and wearable sensors. Int. J. Telemed. Appl. (2015). https://doi.
org/10.1155/2015/373474
10. K.N. Swaroop, K. Chandu, R. Gorrepotu, S. Deb, A health
monitoring system for vital signs using IoT. Internet of Things. 5,
116–129 (2019). https://doi.org/10.1016/j.iot.2019.01.004
11. K. Cho, G. Park, W. Cho, J. Seo, K. Han, Performance analysis of
device discovery of bluetooth low energy (BLE) networks.
Comput. Commun. 81, 72–85 (2016). https://doi.org/10.1016
/j.comcom.2015.10.008
12. A.J.A. Majumder, Y.A. Elsaadany, R. Young, D.R. Ucci, An
energy efﬁcient wearable smart IoT system to predict cardiac
arrest. Adv. Human-Computer Interact. (2019). https://doi.org/
10.1155/2019/1507465
13. K. Mekki, E. Bajic, F. Chaxel, F. Meyer, A comparative study of
LPWAN technologies for large-scale IoT deployment. ICT Expr.
5, 1–7 (2019). https://doi.org/10.1016/j.icte.2017.12.005
14. Y. Vineetha, Y. Misra, K. Krishna Kishore, A real time IoT based
patient health monitoring system using machine learning algo-
rithms. Eur. J. Mol. Clin. Med. 7, 2912–2925 (2021)
15. T. Hiraguri, M. Aoyagi, Y. Morino, T. Akimoto, K. Nishimori, T.
Hiraguri, Proposal of ZigBee systems for the provision of loca-
tion information and transmission of sensor data in medical
welfare. E-Health Telecommun. Syst. Netw. 04, 45–55 (2015).
https://doi.org/10.4236/etsn.2015.43005
16. O.S. Alwan, K.P. Rao, Dedicated real-time monitoring system for
health care using ZigBee. Healthc. Technol. Lett. 4, 142–144
(2017). https://doi.org/10.1049/htl.2017.0030
17. J. Kharel, H.T. Reda, S.Y. Shin, Fog computing-based smart
health monitoring system deploying LoRa wireless communica-
tion. IETE. Tech. Rev. (Institution Electron. Telecommun. Eng
India)
36,
69–82
(2019).
https://doi.org/10.1080/02564602
.2017.1406828
18. A. Lavric, LoRa (long-range) high-density sensors for internet of
things. J. Sensors. (2019). https://doi.org/10.1155/2019/3502987
19. H.M. Hasan, S.A. Jawad, IoT Protocols for Health Care Systems:
A Comparative Study, Int. J. Comput. Sci. Mob. Comput. 7
(2018) 38–45. www.ijcsmc.com.
20. S. Saminathan, K. Geetha, Real-time health care monitoring
system using IoT. Int. J. Eng. Technol. 7, 484–488 (2018).
https://doi.org/10.14419/ijet.v7i2.24.12141
21. A.F. Santamaria, F. De. Rango, A. Serianni, P. Raimondo, A real
IoT device deployment for e-Health applications under light-
weight communication protocols, activity classiﬁer and edge data
ﬁltering. Comput. Commun. 128, 60–73 (2018). https://doi.org/
10.1016/j.comcom.2018.06.010
22. L. Catarinucci, D. De. Donno, L. Mainetti, L. Palano, L. Patrono,
M.L. Stefanizzi, L. Tarricone, An IoT-aware architecture for
smart healthcare systems. IEEE Internet Things J. 2, 515–526
(2015). https://doi.org/10.1109/JIOT.2015.2417684
23. R.S. Iru, H.E. Edvhg, P. Lq, H. Rugdqd, D. Member, D.Q.G.
Vhqglqj, G. Wkurxjk, W.K.H. Jdwhzd, W.R. Wkh, R. Zruog,
{{}{&}{}}R{{}{$}{}}3 Surwrfro Iru :He Edvhg Prqlwrulqj Lq
,R7 Khdowkfduh Dssolfdwlrqv, 7 (2015) 79–82.
24. S. Mohapatra, S. Mohanty, S. Mohanty, Smart Healthcare: An
Approach for Ubiquitous Healthcare Management Using IoT
(Elsevier Inc., 2019)
25. S. Misbahuddin, H. Orabi, R. Fatta, M. Al-Juhany, A. Almatraﬁ,
IoT framework based health care system for elderly and disabled.
People (2016). https://doi.org/10.2991/racs-15.2016.16
26. F. Wu, T. Wu, M.R. Yuce, An internet-of-things (IoT) network
system for connected safety and health monitoring applications.
Sensors (Switzerland) (2019). https://doi.org/10.3390/s19010021
27. H. Tao, M.Z.A. Bhuiyan, A.N. Abdalla, M.M. Hassan, J.M. Zain,
T. Hayajneh, Secured data collection with hardware-based
ciphers for IoT-based healthcare. IEEE Internet Things J. 6,
410–420 (2019). https://doi.org/10.1109/JIOT.2018.2854714
28. K. Jaiswal, V. Anand, EOMR: an energy-efﬁcient optimal multi-
path routing protocol to improve QoS in wireless sensor network
for IoT applications. Wirel. Pers. Commun. 111, 2493–2515
(2020). https://doi.org/10.1007/s11277-019-07000-x
29. M. Al-khafajiy, L. Webster, T. Baker, A. Waraich, Towards fog
driven IoT healthcare, (2018) 1–7. doi:https://doi.org/10.1145/
3231053.3231062.
30. L. Mu, X. Han, Y. Chen, X. Jin, Seamless healthcare system for
the elderly based on RFID technology. Intell. Inf. Manag. 06,
248–255 (2014). https://doi.org/10.4236/iim.2014.65024
31. P.M. Kumar, S. Lokesh, R. Varatharajan, G. Chandra Babu, P.
Parthasarathy, Cloud and IoT based disease prediction and
diagnosis system for healthcare using Fuzzy neural classiﬁer.
Futur. Gener. Comput. Syst. 86, 527–534 (2018). https://doi.org/
10.1016/j.future.2018.04.036
32. S.S. Raykar, V.N. Shet, Design of healthcare system using IoT
enabled application. Mater. Today Proc. (2019). https://doi.org/
10.1016/j.matpr.2019.06.649
33. Z. Al-Makhadmeh, A. Tolba, Utilizing IoT wearable medical
device for heart disease prediction using higher order Boltzmann
model: a classiﬁcation approach. Measurement 147, 106815
(2019). https://doi.org/10.1016/j.measurement.2019.07.043
34. P. Kaur, R. Kumar, M. Kumar, A healthcare monitoring system
using random forest and internet of things (IoT). Multimed. Tools
Appl. 78, 19905–19916 (2019). https://doi.org/10.1007/s110
42-019-7327-8
35. S. Tuli, N. Basumatary, S.S. Gill, M. Kahani, R.C. Arya, G.S.
Wander, R. Buyya, HealthFog: an ensemble deep learning based
smart healthcare system for automatic diagnosis of heart diseases
in integrated IoT and fog computing environments. Futur. Gener.
Comput. Syst. 104, 187–200 (2020). https://doi.org/10.1016/j
.future.2019.10.043
36. F. Felisberto, R. Laza, F. Fdez-Riverola, A. Pereira, A distributed
multiagent system architecture for body area networks applied to
healthcare monitoring. Biomed. Res. Int. (2015). https://doi.org/
10.1155/2015/192454
37. E.T. Tan, Z.A. Halim, Health care monitoring system and ana-
lytics based on internet of things framework. IETE J. Res. 65,
653–660 (2019). https://doi.org/10.1080/03772063.2018.1447402
38. A.H. Yu¨zer, H. Su¨mbu¨l, M. Nour, K. Polat, A different sleep
apnea classiﬁcation system with neural network based on the
acceleration signals. Appl. Acoust. 163, 1–8 (2020). https://doi
.org/10.1016/j.apacoust.2020.107225
256
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
123
39. P. Rajan Jeyaraj, E.R.S. Nadar, Smart-monitor: patient monitor-
ing system for IoT-based healthcare system using deep learning.
IETE J. Res. (2019). https://doi.org/10.1080/03772063.2019.
1649215
40. K. Divya Krishna, V. Akkala, R. Bharath, P. Rajalakshmi, A.M.
Mohammed,
S.N.
Merchant,
U.B.
Desai,
Computer
aided
abnormality detection for kidney on fpga based iot enabled
portable ultrasound imaging system. Irbm 37, 189–197 (2016).
https://doi.org/10.1016/j.irbm.2016.05.001
41. M.F. Faruque, Asaduzzaman, I.H. Sarker, Performance analysis
of machine learning techniques to predict diabetes mellitus,
ArXiv. (2019).
42. K. Vizhi, A. Dash, Diabetes prediction using machine learning.
Int. J. Adv. Sci. Technol. 29, 2842–2852 (2020). https://doi.org/
10.32628/cseit206463
43. Y. Li, H. Li, H. Yao, Analysis and study of diabetes follow-up
data using a data-mining-based approach in new urban Area of
Urumqi, Xinjiang, China, 2016–2017. Comput. Math. Methods
Med. (2018). https://doi.org/10.1155/2018/7207151
44. B. Pranto, S.M. Mehnaz, E.B. Mahid, I.M. Sadman, A. Rahman,
S. Momen, Evaluating machine learning methods for predicting
diabetes among female patients in Bangladesh. Information
(2020). https://doi.org/10.3390/INFO11080374
45. N. Sneha, T. Gangil, Analysis of diabetes mellitus for early
prediction using optimal features selection. J. Big Data (2019).
https://doi.org/10.1186/s40537-019-0175-6
46. A. Paul, H. Pinjari, W.H. Hong, H.C. Seo, S. Rho, Fog com-
puting-based IoT for health monitoring system. J. Sensors (2018).
https://doi.org/10.1155/2018/1386470
47. N. Verma, A Review on Cloud Computing- It ’ s Security
Problem & Solutions, 5 (2017) 1–4
48. P. Kumar, K. Silambarasan, Enhancing the performance of
healthcare service in IoT and cloud using optimized techniques.
IETE J. Res. (2019). https://doi.org/10.1080/03772063.2019.
1654934
49. N.N. Srinidhi, S.M. Dilip Kumar, K.R. Venugopal, Network
optimizations in the Internet of Things: a review. Eng. Sci.
Technol. Int. J. 22, 1–21 (2019). https://doi.org/10.1016/j.
jestch.2018.09.003
50. K. Priyadarsini, N. Mishra, M. Prasad, V. Gupta, S. Khasim,
Detection of malware on the internet of things and its applications
depends on long short-term memory network. J. Ambient Intell.
Humaniz. Comput. (2021). https://doi.org/10.1007/s12652-020-
02823-0
51. N. Verma, S. Sangwan, S. Sangwan, D. Parsad, IoT security
challenges and counters measures. Int. J. Recent Technol. Eng. 8,
1519–1528 (2019). https://doi.org/10.35940/ijrte.C4212.098319
52. M. Khan, M. Kabir, Comparison Among Short Range Wireless
Networks: Bluetooth, Zigbee, & Wi-Fi, (2016).
53. L. Dewangan, A.R. Vaishnava, Energy-efﬁcient smart wearable
IoT device for the application of collapse motion detection and
alert. IETE J. Res. (2020). https://doi.org/10.1080/03772063
.2020.1859952
54. W.K. Lee, R.C.W. Phan, B.M. Goi, Fast and energy-efﬁcient
block ciphers implementations in ARM processors and mali
GPU. IETE J. Res. (2020). https://doi.org/10.1080/03772063.
2020.1725656
55. A. Verma, V. Ranga, Security of RPL based 6LoWPAN networks
in the internet of things: a review. IEEE Sens. J. 20, 5666–5690
(2020). https://doi.org/10.1109/JSEN.2020.2973677
56. P.C. Menon, B.K. Rani, K. Kumar, V. Gupta, An effective OS–
DPLL design for reducing power dissipation in an IoT applica-
tion. J. Ambient Intell. Humaniz. Comput. (2021). https://doi.org
/10.1007/s12652-021-03016-z
57. S. Bansal, D. Kumar, IoT ecosystem: a survey on devices,
gateways, operating systems, middleware and communication.
Int. J. Wirel. Inf. Networks. 27, 340–364 (2020). https://doi.org
/10.1007/s10776-020-00483-7
Publisher’s Note Springer Nature remains neutral with regard to
jurisdictional claims in published maps and institutional afﬁliations.
J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257
257
123


Paper 4:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: {'extract_1': 'MQTT and RTPS are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses.', 'extract_2': 'In general, MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency.', 'relevance_score': 0.9}
  Relevance Score: 0.9000000357627869
  Inline Citation: >
  Explanation: MQTT and RTPS are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses.

MQTT is a lightweight protocol that is designed for low-power devices. It is simple to implement and has a low overhead. MQTT is best suited for applications that require low latency and high throughput, such as sensor data collection and remote control.

RTPS is a more robust protocol that is designed for high-reliability applications. It is more complex to implement than MQTT, but it provides features such as guaranteed delivery and message ordering. RTPS is best suited for applications that require high reliability and low latency, such as industrial automation and medical devices.

In general, MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency.

 Full Text: >
Research Article
Using IoT Protocols in Real-Time Systems: Protocol Analysis and
Evaluation of Data Transmission Characteristics
Andrei Gavrilov
,1 Marlen Bergaliyev,1 Sergey Tinyakov
,1 Kirill Krinkin,1
and Pavel Popov2
1Department of Software Engineering and Computer Applications, Saint Petersburg Electrotechnical University “LETI”,
Saint Petersburg, Russia
2St. Petersburg Branch JSC NIIAS, Saint Petersburg, Russia
Correspondence should be addressed to Andrei Gavrilov; gavrilov.andrew1999@yandex.ru and Sergey Tinyakov; mirrin1905@
outlook.com
Received 24 January 2022; Accepted 25 July 2022; Published 16 August 2022
Academic Editor: Bilal Khalid
Copyright © 2022 Andrei Gavrilov et al. Tis is an open access article distributed under the Creative Commons Attribution
License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is
properly cited.
In the Internet of things, many data transfer protocols are used for various tasks. In this article, we consider the application layer
protocols that are the main ones for transmitting messages in the IoT. Te main problems are unpredictability, lack of stability of
data transmission delays, and non-determinism, which are also important for real-time systems. Te purpose of this study is to
determine the most appropriate middleware and data transfer protocol for systems with high data transfer requirements, in-
cluding real-time systems. Terefore, MQTT, RTPS, JMS, and AMQP protocols were analyzed in order to fnd out what tasks these
protocols should be used for and whether they can be used in robotic and autonomous systems where high data transmission
requirements are imposed. To evaluate the protocols, the standards were analyzed to determine the pros and cons, and the
software implementations of each of them were selected. To assess the characteristics of data transmission, we have developed our
own test scenarios that simulate complex situations. Te behavior of software solutions is analyzed and a comparative analysis is
made based on the obtained data. Together, the theoretical analysis of protocols and the study of software solutions allow us to
conclude on the applicability of a particular protocol in real-time systems. As a result of the study, we can conclude that RTPS is
the best solution for real-time systems with diferent trafc and MQTTperforms well when transmitting short messages. But none
of the protocols under consideration guarantees the determinism of data transmission, so it is better to use specialized link-layer
protocols to obtain guarantees.
1. Introduction
In modern systems, the volume of data processed, generated,
and transmitted is increasing. Many complex systems
consist of many modules or nodes that constantly com-
municate with each other. Tese modules can be located on a
single computer or distributed in a network. Te more
automated the system, the greater the requirements for data
transmission and real-time communication. In distributed
computing systems, transmission afects the performance of
the system, while in various robotic systems, constant
synchronization may be required and low data exchange
rates may lead to errors in the operation or breakage of
mechanisms. While in autonomous systems such as self-
driving vehicles, unpredictable and long delays can become a
threat to people’s lives. In this regard, the question arises
about the choice of data transmission protocols for reliable
and fast data transmission.
1.1. Motivation. Various network technologies are used
everywhere in everyday life. Systems are getting smarter and
there is always a problem of limited resources. Millions of
sensors continuously create and transmit data to manage
Hindawi
Journal of Computer Networks and Communications
Volume 2022, Article ID 7368691, 18 pages
https://doi.org/10.1155/2022/7368691
real-world infrastructures that use complex Internet of
things (IoT) networks. For various spheres of human ac-
tivity, various technologies and protocols are being devel-
oped for the organization of the network and the eﬃcient
operation of the infrastructure. Te predominant areas of
development of such network technologies are smart en-
vironment, autonomous transport, and medicine.
1.1.1. Smart Environment. A smart environment includes
the automation of various processes of our everyday life. It
includes such technologies as smart home, smart city, smart
manufacturing, etc. In a smart environment, the question of
limited resources also arises, since smart devices and various
sensors are also used to create this environment. Te re-
sources of IoT devices are very limited, and there is no
possibility to perform complex computing tasks locally. At
the same time, the bandwidth of data transmission channels
is also limited and it is impossible to use the entire resource
for the functioning of systems. To solve these problems,
various approaches to building infrastructure related to edge
computing are being created [1]. At the same time, the basic
data transfer technologies are the IoT protocols, and they
play a signiﬁcant role in the operation of a particular smart
environment system.
1.1.2. Autonomous Transport. Autonomous transport in-
cludes a set of units like sensors, GPU, CPU actuators, etc.
Te operation of an onboard control system is based on the
transmission of information between subsystems. Terefore,
it is crucial to realize a reliable exchange of data. Te main
parameters are a guarantee of data delivery, data integrity,
maximum possible latency of data transmitting, and cal-
culation cost. Furthermore, it is vital to balance require-
ments considering diﬀerent kinds of data: vast streams of
information from sensors, short commands from CPUs, etc.
Terefore, the data transfer protocol has to provide the best
possible parameters for distributed and complicated au-
tonomous control systems.
1.1.3. Medicine. Modern healthcare involves many personal
wearable sensors that constantly monitor a person’s con-
dition. Tere are diﬀerent views on what the architecture of
next-generation medical platforms should be. Researchers
agree that the integration of personal sensors into a uniﬁed
health information system is inevitable. Tis implies eﬀective
ways to communicate in a heterogeneous environment. Te
communication methods discussed in this article will be
useful to those who design medical systems.
2. Literature Overview
Tis section will present the work done in the ﬁeld of this
study as well as a description of each of the protocols under
consideration. After considering the theoretical part of the
protocols, the main questions that this study is trying to
answer are put forward.
2.1. Related Works. A large number of studies and works have
been conducted on the problem of choosing a protocol for real-
time systems. Various IoT protocols are analyzed for perfor-
mance, security, and reliability. Since AMQP and MQTT pro-
tocols are popular in the IoT, it is important to understand the
security vulnerabilities associated with the each protocol. In
[2–5], an analysis of vulnerabilities and cyber threats for these
protocols was made. Also, in [6], an analysis of AMQP protocol
for industrial IoT was done. For MQTT in [7], a comparison
with CoAP on Ponte Eclipse Project implementation was
provided. Also, an analysis of MQTT performance was done in
[8]. Tere is a formal approach to model, analyze, and verify the
usage of MQTT in the case of communicating vehicles in [9].
Te dependence of delay and QoS level in MQTT was analyzed
in [10]. An analysis and a comparison of AMQP, MQTT, CoAP,
and HTTP protocols without any implementation were done in
[11]. Since AMQP uses queues, a detailed analysis of message
queue methods and a comparison of RabbitMQ, ActiveMQ, and
Kafka implementations were made in [12]. Also, RabbitMQ,
which is an implementation of AMQP, was analyzed as message-
oriented middleware (MOM) and compared to NATS and
Kafka in [13]. An analysis of OPC UA, DDS, and MQTT
protocols for Industry 4.0 was done in [14]. More details about
DDS and data-centric communication were given in [15]. Te
DDS standard was designed for real-time systems on mission-
critical infrastructures. So, security is necessary to avoid disaster
and loss of life. Security issues for DDS were analyzed in [16, 17].
Touching on our previous research, we have analyzed the
existing data transmission standards in the IoT [18] and the
performance of DDS services [19].
2.2. Protocol Overview. In this section, we will brieﬂy con-
sider the main concepts of the protocols and highlight the
basic features that are stated in the speciﬁcations. Each
protocol was created to solve a certain range of tasks, so it is
worth getting acquainted with each of them to understand
the relevance of using the protocol in the modern IoT.
In IoT, the most relevant protocols are MQTT, AMQP,
JMS, XMPP, CoAP, and RTPS (DDSI-RTPS). XMPP does
not support any delivery guarantees, but only allows to
request information from the client about the delivery of
data [20], so this protocol is not considered in this article,
because the real-time system requires these delivery guar-
antees to work with up-to-date data. Also, the CoAP pro-
tocol is not discussed in this article; although the addition of
the publish-subscribe model to this protocol is interesting
for real-time systems, the standard client-server model is not
suitable for real-time data transmissionbecause this model
requires sending requests to receive new data. Tese pro-
tocols solve the problem of data exchange in any format,
queue processing, and data distribution. Each of the con-
sidered protocols provides diﬀerent guarantees, so it is
necessary to understand for which target systems a particular
protocol may be suitable or for which data.
2.2.1. Message Queuing Telemetry Transport (MQTT).
MQTT (Message Queuing Telemetry Transport) is a light-
weight transport protocol that releases a publish-subscribe
2
Journal of Computer Networks and Communications
model. Te protocol is an open OASIS standard and an ISO
recommended.
MQTTwas invented by Dr Andy Stanford-Clark of IBM,
and Arlen Nipper of Arcom (now Eurotech), in 1999. Tere
was a problem with communication between monitoring
devices and remote servers in the oil and gas industry. In
many cases, it was diﬃcult or impossible to use a landline,
wired connection, or radio transmission connection. During
that time, satellite communication was the only solution to
this problem. But it was very expensive, and it was necessary
to pay according to the volume of data transmitted. So,
thousands of sensors required a form of communication that
could provide reliable data transmission with minimal
bandwidth use.
Two developers speciﬁed the features of the tool to solve
this problem:
(i) Simple implementation
(ii) Lightweight and bandwidth eﬃcient
(iii) Quality of service
(iv) Data agnostic
(v) Continuous session awareness
IBM used protocol after it was created for internal
purposes for about 10 years. Ten IBM released MQTT 3.1 as
a free version in 2010. From that time on, everyone was able
to use the protocol. In 2014, MQTT became an oﬃcially
approved OASIS standard.
In 2019, OASIS ratiﬁed the new MQTT 5 speciﬁcation.
Te new version speciﬁed features that are required in the
IoT industry, such as more reliability and error handling.
It works on top of any ordered, lossless, bidirectional
network protocol, for example TCP or SSL. In MQTT, there
are two entities: the server (broker) and the clients. All
messages from senders who are called publishers are passed
by the broker to receivers who are called subscribers. All data
are divided into topics—the label attached to the message.
Te server matches the topic with subscription and forwards
messages if they match. Tis is how clients behave:
(i) Connect to the broker
(ii) Subscribe to a topic and wait for incoming messages
or send messages to the topic(s)
(iii) Close the connection
MQTT provides topics with wildcard, shared subscrip-
tions and quality of service.
Tere is also a variation of the protocol—MQTT-SN
(MQTT for sensor networks). It is designed especially for
sensor networks. MQTT-SN can work on top of non-TCP/
IP network protocols such as UDP. Header size has also been
reduced, and the UTF-8 topic string has been replaced by an
integer topic id.
Quality of services deﬁnes the delivery guarantee. Tere
are three levels:
(i) QoS 0: At-most-once delivery. Message is sent only
one time. Te receiver sends no response and the
sender performs no retry.
(ii) QoS 1: At least once delivery. Message is sent until it
arrives at the subscriber at least once. Te subscriber
sends an acknowledgment to the publisher after
getting the message. Te publisher performs a retry
until an acknowledgment is received. Te subscriber
processes any copy of the message as a new unique
message.
(iii) QoS 2: Exactly one delivery. Te subscriber receives
only one copy of the message by a two-step ac-
knowledgment process. Like in QoS 1, the sub-
scriber
sends
the
acknowledgment,
but
the
publisher sends a second acknowledgment back,
and after getting it, the subscriber sends back a ﬁnal
acknowledgment that completes message trans-
mission. During the acknowledgment exchange, the
receiver drops any message that has the same packet
identiﬁer as the current message.
As described earlier, the topic is a label attached to the
message. Topic names can form a hierarchical topic tree by
separating each level with a forward slash. Subscribers use a
topic ﬁlter to let the broker know which topics are of interest
to them. Wildcards can be used in the topic ﬁlter. Te
number sign is a multilevel wildcard that matches any
number of topic levels, including zero topics. Te plus sign is
a single-level wildcard that matches to only one topic level,
including zero topics.
MQTT deﬁnes two types of subscriptions: shared and
non-shared. Te main diﬀerence is the number of copies of
the message. With the non-shared subscription, all receivers
who subscribe to the same topic get their own copy of the
message. With the shared subscription, only one copy of the
message is sent to the one shared group. Tat way, a load-
balanced network architecture can be created. Shared sub-
scriptions are also useful for parallel processing of publi-
cations by multiple clients.
2.2.2. Real-Time Publish-Subscribe Protocol (RTPS). Te
RTPS data exchange protocol, also known as DDSI-RTPS, is
developed by the Object Management Group (OMG), as
part of the DDS standard, responsible for data transfer and
ensuring compatibility between diﬀerent vendors as well as
ensuring platform independence of the DDS service. Te
ﬁrst version of the DDS speciﬁcation was released in 2004
and the RTPS protocol speciﬁcation version in 2009.
DDSI-RTPS protocol is developed for reliable and high-
speed transmission via unreliable data transfer protocols, for
example via UDP.
DDSI-RTPS is based on the concept described in the
DDS standard. Te model describes entities such as:
(i) Domain
(ii) Topic
(iii) Publisher who sends data to the topic via the
DataWriter
(iv) Subscriber who gets data from the DataReader
Te publisher and subscriber are the end nodes who
sends and receives data, respectively, and the subject is an
Journal of Computer Networks and Communications
3
entity that describes the channel to which data are sent,
which subscribers can track. A domain is an entity that
divides topics, publishers, and subscribers into diﬀerent
name domains. Terefore, the topic, publisher, and sub-
scriber belong to a speciﬁc domain and cannot interact with
nodes from another domain. At the same time, subscribers
and publishers do not know anything about each other, but
are connected only by the topic through which the data are
transmitted.
Te RTPS protocol is based on four main modules:
(i) A structural module that describes the structure of
entities;
(ii) A message module that describes the structure of
transmitted messages;
(iii) A behavior module that describes the sequence of
message transmission and the time constraints
imposed on the transmission of each message;
(iv) A discovery module that describes how nodes ﬁnd
each other to interact with.
To ensure reliable data delivery, the protocol describes an
entity such as CacheChanges. Each node (DataReader or
DataWriter) has such an entity. When sending and receiving
data, each node makes a note about this in the Cache Changes.
Te
protocol
has
three
message
types:
DATA,
HEARTBEAT, and ACKNACK. DATA is a message with
data, HEARTBEAT is a message with changes in Cache-
Changes of DataWriter, and ACKNACK is a message with
changes in CacheChanges of DataReader. With the help of
HEARTBEAT and ACKNACK, it is possible to determine
what data were sent but not delivered, which will allow
resending these data. But since the DataWriter only knows
about data loss when it receives changes from the Data-
Reader, which in turn are sent only when the message is
received, the packet loss will only be known when the
DataReader receives the next message, which generally vi-
olates the sequence of receiving messages. To ensure that the
sequence is correct, the protocol makes messages unavailable
until all the necessary data are received.
Te discovery module contains two protocols that im-
plement the search for nodes in the network. Te ﬁrst
protocol is the Participant Discovery Protocol (PDP), which
describes the algorithm for searching for nodes in a network
belonging to a speciﬁc domain, and the second protocol is
the Endpoint Discovery Protocol (EDP), which describes the
search for speciﬁc DataReader and DataWriter in a domain.
Tus, we can distinguish the following qualities of this
protocol:
(i) Providing automatic search by nodes of each other;
(ii) Providing data transmission with various QoS that
the DDS standard describes;
(iii) High data transfer rate due to the UDP protocol,
instead of TCP.
2.2.3. Java Message Service (JMS). A new programming
language Java was introduced in 1995. As there was not a
mechanism that provided communication between a few
programs, JMS (Java Message Service) was created in 1998 to
solve this problem. Te last version (2.0a) of the JMS
standard was updated in 2015.
JMS is similar to other middleware. It has two types of
communication: point to point and publish and subscribe.
In both communication styles, there is a JMS provider that is
used to manage connections, queues, and resources.
Opening the ﬁrst connection creates a provider outside Java
virtual machine.
Point-to-point messaging means that there are two pro-
cesses communicating with each other. Tis communication
type uses message queues. Each process has a message queue as
a “mailbox.” Queues accept all types of messages and are not
individual for every message sender, so there is no need in
having more than one queue on each side. Each queue can be
used by a few clients, but they will not receive all messages in
case after delivery every message becomes consumed and
cannot be retrieved by any client. In JMS, there are two types of
queues: temporary and static. Temporary queues can be used
only in one connection, because they exist only during the
lifetime of the connection. Static queues are most commonly
used. Tey can be used in a few connections and also they may
still exist after the client program’s end, so while restarting, the
client can retrieve messages from this queue.
Publish and subscribe messaging is a common publish-
subscribe model, where few processes communicate through
a topic. Reliability depends on the subscriber’s durability and
publishing persistence. Nonpersistent publishing results in
at-most-once reliability, while persistent publishing results
in once-and-only-once reliability. Nondurable subscribers
can miss messages if they are inactive, while durable sub-
scribers cannot miss messages. Persistent publishing is
mostly implemented by static queues. Tere is no descrip-
tion of how redelivery must be implemented.
As additional functionalities, there is a message selector.
It allows users to ﬁlter messages by processing their header
ﬁelds. It uses SQL syntax to do that. Also, some providers
allow the use of topic hierarchy, which helps to send a
message to a few topics immediately.
2.2.4.
Advanced
Message
Queuing
Protocol
(AMQP).
AMQP was developed by John O’Hara in 2003. One of the
ﬁrst implementations of this protocol was Apache Qpid. Red
Hat started developing it in 2005. In 2007, Rabbit Tech-
nologies released their implementation of AMQP called
RabbitMQ.
AMQP deﬁnes three types of nodes: producers, con-
sumers, and queues. Producers and consumers are parts of
the application that generate and proceed messages. Each
node is attached to a container which can be a client or
broker. Te diﬀerence between clients and brokers is only in
expected capabilities.
In AMQP to start communication ﬁrstly required to
create a connection between containers. Ten the session can
be started. Every connection may contain multiple sessions.
Tereafter, a link can be established between two nodes. All
links are unidirectional. On each side of the link, there is a
terminus that controls message ﬂow through the link.
4
Journal of Computer Networks and Communications
Messages can be transmitted only through a link. In
relation to nodes, messages can be divided into a few types,
namely originate from, terminate at, or relay by nodes.
Queues are used to store messages and make them available
to few consumers. So, the main purpose of brokers is to
manage queues to receive messages from producers, store
them, and transmit messages to consumers.
Every message delivery has a settlement state, which
controls if a message has been delivered, and delivery state.
To set settlement, nodes send frames. When the receiver
sends a settlement frame of delivery, the sender removes
delivery from its unsettled map. It can be used to implement
diﬀerent reliability policies. If the sender sets the settlement
of delivery after message sending, then the message will be
delivered “at most once.” If the receiver sends a settlement of
delivery and the sender waits for settlement, then it im-
plements the “at least once” guarantee. To perform “exactly
once,” the delivery sender has to set settlement only after the
receiver sets the terminal delivery state, and the receiver has
to set settlements after the sender. But in this case, a few
frames should be sent: at least one for termination and one
for settlement. Tere is no other way to implement reliable
transfer without duplications in AMQP.
Additionally, AMQP provides security protocol support,
such as TLS and SASL. Also, it has a transactional messaging
model. Transactional works consist of three operations:
posting, acquiring, and retiring. Target performs posting and
makes a message unavailable at the destination until it will be
fully discharged. Source performs retirement to associate an
outcome of delivery with the transactionSource acquires
transaction message to perform operation.
2.3. Conclusion of the Overview. A lot of work has been done
in the ﬁeld of IoT protocol research. Diﬀerent studies in-
vestigate diﬀerent characteristics of data transmission and
use diﬀerent methodologies. Each protocol has many
implementations that can be better or worse relative to each
other, and the research done can also use various protocol
implementations for analysis. In addition, it is necessary to
consider all protocols under the same conditions in order to
achieve objective comparison results. Depending on the
methodology, selected software implementations, and the
range of protocols under consideration, the results of the
study may vary.
All these factors complicate the choice of a solution and
protocol for a speciﬁc task. Tis article examines the best
software implementations based on the work done and
creates the same conditions for evaluating middleware.
3. Materials and Methods
To analyze and compare the protocols selected for consid-
eration, it is necessary to formulate criteria that will show
their characteristics, select software implementations that
use the protocols in data transmission, and develop a testing
methodology that would allow studying these technologies
from diﬀerent angles.
In this section, we will consider the methods developed
in our work for studying software solutions for data
transmission that emit various conditions. Such conditions
can occur in diﬀerent systems, so it is necessary to evaluate
not only the maximum capabilities of these software tools,
but also their behavior in critical situations that can be
created by developers during the development of the system.
We will also deﬁne the criteria for selecting speciﬁc data
transfer libraries for each protocol.
3.1. Description of Comparison Methods and Testing Methods.
Every protocol has its own reason for creation, which lies in
its feature. It has both pros and cons. It is diﬃcult to predict
the performance of protocol based on analysis only. Te
performance also depends not least on the implementation
of the protocol. In addition, machines have diﬀerent power,
which also aﬀects performance. It is necessary to know data
transmission characteristics for objective evaluation and
comparison. Comparison of diﬀerent protocols can be
diﬃcult because they work diﬀerently and are designed for
diﬀerent purposes. Terefore, it is good to have a universal
value characteristic that shows the practical side of protocols.
Tis makes it possible to compare and select implementa-
tions without knowing their internal structure.
Test scenarios have been developed to evaluate diﬀerent
implementations. Tese tests simulate situations with dif-
ferent environments: message interval, number of subscribers
or exchanging pairs, frequency, and message size. Te limits
in the tests can be viewed as hard real-time situations. All this
gives an insight into the limitations and problems of the
protocol and/or the implementation. Tis helps to decide if
the protocol is a good solution for a certain problem.
For each selected implementation, corresponding pro-
grams were written that have identical logic. Te diﬀerence
between the programs is only in the functions of sending and
receiving data, which use the API of the selected middleware
directly. Te general logic of the tests has the following three
types of interaction:
(i) One-way data transfer, when the program performs
the role of either only the sender or only the receiver
with a speciﬁed frequency and with a speciﬁed
payload size;
(ii) Two-way data transfer, where one node sends
messages only when it receives a response from the
other, thus measuring RTT and jitter;
(iii) Two-way data transfer, when one node does not
wait for a response, but sends messages at a certain
interval, while it is possible to artiﬁcially limit the
queue by indexing received and sent messages.
To obtain objective results of data processing by the
selected technologies, programs are assigned to a separate
core with exclusive use of its resources, which guarantees
that the programs work in the same conditions.
Te characteristics of the system that was tested are
shown in Table 1. All tests were performed locally on a single
computer. Te test scenarios used in the study will be de-
scribed below.
Journal of Computer Networks and Communications
5
3.1.1. Evaluating Queue Processing Performance. Te test is
aimed at investigating message queue processing. In the test,
the ﬁrst node sends messages to the other node without any
interval. Tus, the queue accumulates.
Te test is performed with message sizes of 50 and 60,000
bytes. Te process priority is set to the highest in Linux–99.
Both the nodes are bound to the CPU cores. So, each process
is separate and works without interruptions during queue
processing, such conditions help to get the most accurate
data about the studied characteristic.
3.1.2. Evaluating the Impact of the Number of Nodes on
Performance. Te test is aimed at investigating the depen-
dence of the total latency on the number of subscribers. In
the test, one node (publisher) sends messages to other
nodes—subscribers. Te message size with sending fre-
quency takes up 1.25 MB per second of bandwidth.
Te test is performed with the number of subscribers
varying from 1 to 20. As in test 1, all processes have the
highest priority in Linux–99. No node is bound to the CPU
core. A separate test is run for each number of subscribers.
3.1.3. Evaluating the Impact of Message Size on Latency.
Te test is aimed at investigating the total latency in de-
pendence on message size. In the test, the ﬁrst node sends
messages to the other node at a given interval. Te message
size increases during the test.
Te test is performed on diﬀerent frequencies which in
combination with the message sizes take from 2.5 kB to 2 GB
per second of bandwidth. As in previous tests, all processes
have the highest priority in Linux–99. Te nodes are not
bound to CPU cores.
3.1.4. Estimation of the Jitter Value and Minimum Delays.
Te test is aimed at investigating the total latency, jitter, and
RTT (round trip time) of each message of the minimum size.
Te test also shows the number of copies between the user
space and the kernel space. In this scenario, the ping-pong
model is used: one node sends a message to the other, and
then both exchange messages only after receiving a message
from the other node. Te test stops when the set number of
transmitted messages is reached. Te size of each message is
10 bytes. Nodes are not bound to CPU cores and process
priorities are not set.
3.1.5. Evaluation of the Eﬀect of the Number of Interacting
Processes in Diﬀerent Conditions on Delays. Te test is aimed
at investigating the dependence of the total latency on the
message size at diﬀerent message sending frequencies and on
the number of process pairs. In this scenario, the ping-pong
model is used, but the node that sends the ﬁrst message, also
called the ﬁrst node, does not wait to receive a message from
the other node, as in the previous scenario, and sends new
messages on a given frequency. Te other node works as in
the previous test. Te test stops when the set number of
transmitted messages is reached.
Te test consists of two types of subtests: (1) one pair
exchanges messages on a given frequency; (2) at a ﬁxed
frequency, several pairs exchange messages. Te message
size increases during the test in both subtests. In the ﬁrst
subtest, messages take up a bandwidth in the range of
5 kB–4 GB per second for both the nodes. In the second
subtest, messages take up a bandwidth in the range of
100 kB–1.5 GB per second for each pair. Te number of pairs
in the second subtest is 1, 2, and 3. Nodes are not bound to
CPU cores and process priorities are not set.
3.1.6. Investigation of Delays in Artiﬁcially Fixing the Message
Queue. Te test is aimed at investigating the total latency of
processing a limited queue. Tis scenario uses the limited
queue ping-pong model from test 5. If the ﬁrst node has a
diﬀerence between the number of the sent message and the
last received one greater than the watermark value of 50, no
message will be sent. It means that messages in the queue are
not more than the value of the watermark. Due to the limited
queue, the latency will be constant or does not exceed some
constant value. Te size of each message is 10 bytes. Nodes
are not bound to CPU cores and process priorities are not
set.
3.2. Description of the Framework Selection. Te main
criteria for framework selection are open source and C/C++/
Java programming language for clients.
Te JMS is very abstract, so this research could have been
any Java client with or without any server. But in this article,
there is an idea of comparing with Java realization, so the
JMQ has been selected. Te server is called GlassFish, and it
was developed by Sun Microsystems and later passed under
the wing of the Eclipse Foundation. Te auto-acknowledge
of message property is used for testing. Te nonpersistent
property is also set. If the persistent property is set, the
message is copied to the hardware to avoid losing it.
Tere are many implementations of the DDS standard:
OpenDDS, OpenSplice, FastRTPS, and Cyclone DDS. Tere
are evaluations of FastRTPS on the eProsima website [21]. We
also have another close research comparing all these four
DDS frameworks. In it, FastRTPS was the winner. For ex-
ample, in Figure 1, there is a delay graph for messages with
increasing size (we use “Evaluating the impact of message size
on latency” test scenario). Te results of OpenSplice (the
public version of this solution) were not added to the image,
as this solution showed a terrible result with delays in seconds
after 200 messages, where the size was 512 kB. As pictured,
FastRTPS shows the best result. Terefore, FastRTPS has been
selected for this research. For guarantee delivery, the fol-
lowing message properties are set: to achieve a delivery
guarantee, parameters are set for storing all messages that
have not yet been received by subscribers and a QoS-reliable
policy is selected, which guarantees data delivery.
Table 1: System conﬁguration.
OS
Linux-5.4.54-rt with Ubuntu 18.04 bionic
CPU
Intel Core i5, 3.0 GHz
RAM
8 GB
6
Journal of Computer Networks and Communications
Tere are not many implementations of AMQP. Tree
popular servers are RabbitMQ, ActiveMQ, and Apache
Qpid. A comparison of the frst two was made in [22], where
RabbitMQ showed better results. In [23], a comparison was
made between RabbitMQ and Kafka, where the former
showed good results. Te Apache Qpid has been tested in the
frst three tests. In Figure 2, there are results of RabbitMQ
and Qpid for the test “Evaluating the impact of message size
on latency.” As pictured, Qpid is worse. In other tests, the
Qpid result is close to or worse than RabbitMQ. Terefore,
RabbitMQ has been selected for this research.
Tere are many MQTT servers since the IoT becomes
more and more a part of our life. Evaluation, analysis, and
comparison of MQTT brokers have been done in [24, 25]. In
these researches, the best result was shown by the Mosquitto
broker. Terefore, this broker is used in this research.
PahoMQTT has been selected for the client side. It is de-
veloped by Eclipse Foundation. For the tests, the QoS level is
set to 1–at least once delivery.
4. Results and Discussion
Te analysis of protocols should be divided into two sec-
tions—theoretical and performance evaluation—since the
analysis of specifcations will not give information about the
performance of data transmission, but only helps to un-
derstand the principles of operation and guarantees pro-
vided by the protocol. At the same time, protocol
implementations from diferent vendors may show diferent
characteristics, so a practical assessment of the performance
of a particular solution does not give an accurate assessment
of the protocol.
Later in the article, we will try to analyze what these
protocols provide and consider the characteristics obtained
as a result of testing.
4.1. Analysis of the Operation of the Protocols (Specifcation-
Based Analysis). To analyze the protocols, we studied the
specifcations of these protocols, which are in the public
domain. In this part of the study, the advantages and dis-
advantages of the algorithm of the protocols and the
technologies used were identifed.
4.1.1. MQTT. MQTTpackets are lightweight. Each packet is
divided into three sections: a fxed header, a variable header,
and a payload. Te fxed header consists of the packet type,
fags, and remaining length. Summary of the frst two gives 1
byte. Te variable header consists of a 2-byte packet iden-
tifer and properties which have a variable length. Some
packets have specifc required properties. Te payload is a
user’s message sent. Packets do not take up much space.
Also, many properties are used in the packet for opening
connection. Only one required property in publish packet
can take up a lot of space—the topic name. Te topic is a
UTF-8 string. If needed, the topic can be replaced by, for
example, the topic ID, like in MQTT-SN. But that would
cause problems with wildcards in topics. Terefore, if they
are not used, it is possible to reduce packet size by replacing
the topic with something else.
As said before there is no queue in MQTT. So, it becomes
a problem that the application may not be able to process a
message. Tis is not unusual on the network with several
thousand clients and thousand messages per second. QoS
was created for solving this problem. But it also has other
problems. With QoS 1, the subscriber spends time pro-
cessing every message as a new one. With QoS 2, there are
three acknowledgment messages where each size is about 6
bytes. So, every second, each of a thousand subscribers sends
a thousand acknowledgments. It reduces the bandwidth by
at least 6 MB. MQTTis good for real time when it is required
to get actual data, but for data transfer with a delivery
time (msec)
Delay time
Qpid
RabbitMQ
800
700
600
500
400
300
200
100
0
0
100
200
300
400
500
600
700
800
message number
Figure 2: Qpid’s and RabbitMQ’s delay in the case of increasing the
payload size every 100 messages.
Delay time
OpenDDS
35
30
25
20
15
10
5
0
0
100
200
300
400
500
600
700
800
message number
time (msec)
FastRTPS
CycloneDDS
Figure 1: OpenDDS’s, FastRTPS’s, and Cyclone’s delay in the case
of increasing the payload size every 100 messages.
Journal of Computer Networks and Communications
7
guarantee, MQTT may be worse than other solutions based
on message queues.
In addition, MQTTis centralized. So, it has a single point
of failure which is the broker. Tis can be a problem in some
cases.
Te quality of service that deﬁnes guarantee delivery is
described in the MQTT. Is a lossless network protocol like
TCP required? TCP takes a lot of bandwidth. If the message
is dropped by the server, for example, due to performance
limitation, the message will be sent again, which will take up
much bandwidth again. It may be better to use UDP or other
UDP-based protocols, because they do not take much
bandwidth. QoS levels 1 and 2 guarantee delivery, so the
excess requirement of lossless to the network protocol is not
necessary.
Advantages:
(i) Lightweight packets;
(ii) QoS levels;
(iii) Ability to ﬁlter messages.
Disadvantages:
(i) MQTT uses TCP/IP;
(ii) Centralized model;
(iii) No queues.
4.1.2. RTPS. Te RTPS protocol has many advantages over
other protocols. As described in the review, the protocol is
positioned as a reliable data transfer protocol, using unre-
liable transport layer protocols-UDP/UDPM. Using these
protocols, the highest channel throughput and data transfer
rate are provided.
With the help of the Simple Participant Discovery
Protocol, the DDS standard provides the ability to dy-
namically connect to the network without having to know
the addresses of senders/recipients. Tis provides a plug and
play connection, in which the nodes ﬁnd each other by
themselves. But the protocol does not guarantee compati-
bility between diﬀerent implementations from diﬀerent
vendors.
Te protocol supports QoS levels for the best eﬀort or
reliable connection. A reliable connection is achieved by
resending data if the packet has not been delivered, but
information about the delivery of the packet will not be
received using special messages, as in TCP, but only when
the next packet with data is received. Tis algorithm blocks
the receipt of the packet until all the lost packets are de-
livered. Tis can increase delivery delays quite signiﬁcantly
in some situations.
Additional data that help in ensuring the reliability of the
connection (guarantees of data delivery) can also set limits
on the data storage time of this message, limits on the time of
message delivery, and other parameters that may be nec-
essary for real-time data transmission.
Te protocol implies a modular system that guarantees
the absence of a single point of failure, allows for expansion
without loss of compatibility, and uses separately from the
DDS standard.
As a result, the following advantages of the protocol can
be distinguished:
(i) Availability of QoS and ﬂexible conﬁguration of
delivery and data storage parameters for each
message;
(ii) Plug and play connection;
(iii) Using UDP for fast data transfer;
(iv) No single point of failure.
Te disadvantages are as follows:
(i) Increased latency in the case of packet loss;
(ii) Possible incompatibility between vendors.
4.1.3. JMS. JMS is a good solution for systems where reli-
ability can be implemented as static queues. But the usage in
real-time systems can be failing in case of using static queues
in persistent storage.
Advantages:
(i) It is easy to use. It does not use additional
structures, such as for identifying messages that
were received. Tere are no special messages de-
ﬁned for some purposes, such as preventing
message duplications;
(ii) It does not require a broker to manage message
ﬂow. It uses queues without a special manager that
exists in another process, which makes it fault-
tolerant;
(iii) May store messages after client failure. In the case
of using a static queue, messages can be stored as
long as it is required. So, after all, every node can
receive all messages sent to them.
Disadvantages:
(i) Standard is too uncertain in many details. It can be
interpreted in diﬀerent ways. So, implementations
may have very diﬀerent characteristics;
(ii) It does not pretend to deliver messages quickly.
Other standards may say that they were developed
for quick messaging. But JMS was created to allow
communication in Java, and it does not say about
delivery speed.
4.1.4. AMQP. AMQP cares about message transportation
on every transition. Tis can be used in distributed systems
where nodes are grouped in diﬃcult architecture. Also,
systems using transactions can be interested in this protocol.
Advantages:
(i) Strong control of message ﬂow on every system
node. It uses maps of settled messages and addi-
tional frames that allow to ensure that every
message has been delivered to each transition node;
(ii) It has a transactional model. It allows the control of
full completion of operations. In case of failure or
canceling
operation,
operations
will
not
be
8
Journal of Computer Networks and Communications
completed. It is possible because messages can be
processed only after the completion of a transaction.
Disadvantages:
(i) It does not have a Pub-Sub model that results in
using the same way to send messages from pub-
lishers to subscribers and to send messages from
point to point;
(ii) It has increased frame fow. It uses frames to settle
messages, terminate deliveries, etc. So, it can cause
a decrease in the latency of common messages
because of frame transmission and processing.
4.2. Evaluating the Performance of Protocol Implementations
4.2.1. Evaluating Queue Processing Performance. Tere are
two ascending lines, namely RabbitMQ and PahoMQTT
with Mosquitto broker (see Figure 3). As shown in the graph,
the delay for these frameworks grows during the whole test.
Te growth starts at the begging of the test. Te peak of delay
at the end of the test is several seconds. Tis is not a good
result. Messages are sent more quickly than they can be
delivered. Te queue is constantly accumulating and the
time to receive each packet is delayed. Tere is a horizontal
line. It is FastRTPS. Tis framework demonstrates a very
stable data transmission for this message size. It is the best
result. Te last one left is GlassFish. Its graph is very similar
to FastRTPS, but has delayed growth in the middle of the
test. But the delay decreases in the second half of the test. It
decreases because messages stop being sent and the queue
stops being replenished, messages start being processed until
they run out. GlassFish also has a higher delay than
FastRTPS but less than 1 second. So, this is a good result.
In Figure 4, there is a graph of delays for a message size of
60000 bytes. Tere are three rising lines. Two of them are
RabbitMQ and PahoMQTT with Mosquitto broker. Tey do
not change their behavior unlike FastRTPS. Tis is a third
ascending line. Te situation is more deplorable than with
the other two. FastRTPS has the highest delay, which grows
through the tests. Tis may be because FastRTPS (Fast-DDS)
uses UDP for data transmission, which imposes a limit on
the packet size and the message must be transmitted in
several parts if it is larger than 65 kB, which greatly increases
the data transfer delay of 1 message. GlassFish does not
change its behavior. Its delay grows until the middle of the
test and then decreases. Te delay is also under 1 second,
which is the best result. Tus, according to the results of the
two subtests, GlassFish shows the best stable and fastest
queue processing performance.
4.2.2. Evaluating the Impact of the Number of Nodes on
Performance. In Figures 5–8, minimum and maximum
delay and its mean and interquartile range for a diferent
number of subscribers can be seen. Also, mean and maxi-
mum delays are presented for each ffth number of sub-
scribers in Table 2.
GlassFish has no delay dependence on the number of
subscribers. Te maximum delay varies and is more than 100
milliseconds but without dependence. Te mean and the
mid-spread are less than 25 milliseconds. But the IQR
(interquartile range) is large, and its size is about a few
milliseconds.
FastRTPS also has no delay dependence on the number
of subscribers. Te minimum and maximum are the same
during the test. Te delay ranges from 1 second or less to
10–12 milliseconds. Te mean and mid-spread have no
dependence and are in range the from 1 to 4 milliseconds.
Te IQR is less than 1 millisecond.
PahoMQTT has abnormal jumps of up to 60 and 100
milliseconds on 15 and 18 subscribers. Te mean and mid-
spread are less than 5 milliseconds. Tere is no delay de-
pendence on the number of subscribers. RabbitMQ has
similar results. Tere is one jump up to 50 milliseconds on 18
time (sec)
Delay time
jmq_glassfish
FastRTPS
paho_mqtt
RabbitMQ
7
6
5
4
3
2
1
0
0
1000
2000
3000
4000
5000
message number
Figure 3: Delay of messages with the size of 50 bytes.
time (sec)
Delay time
16
14
12
10
8
6
4
2
0
jmq_glassfish
FastRTPS
paho_mqtt
RabbitMQ
0
1000
2000
3000
4000
5000
message number
Figure 4: Delay of messages with the size of 60 kB.
Journal of Computer Networks and Communications
9
subscribers and jumps up to 20 milliseconds on several
numbers of subscribers. Tere is also no delay dependence.
According to the results, no framework has a depen-
dency on the number of subscribers. Tis means that the
software processing of the queues of these implementations
takes quite a short time and does not afect the data transfer
delay under these conditions. It is a good result because data
transfer time does not change with the number of sub-
scribers. In addition, GlassFish shows the worst results, with
a mean value of about 10 milliseconds, while the maximum
delays reach a few hundred milliseconds. Te other three
have similar means and mid-spreads, but FastRTPS results
are better. However, the maximum delay of FastRTPS is
worse than RabbitMQ and PahoMQTT, but the last two
have abnormal unknown delay jumps.
4.2.3. Evaluating the Impact of Message Size on Latency.
In this test, message size changes every 100 messages. Fig-
ure 9 shows delays for all frameworks at a frequency of 100
messages per second. Te means and maximums of delays
for several message sizes for the frameworks are presented in
Table 3.
Tere is no diference between messages on the GlassFish
graph. It is as if messages are sent with a static size instead of
increasing ones. Te delay and its maximum increase and
decrease during the test. Te maximum delay reaches 100
milliseconds. Te mean grows while the message size is less
than 1 MB. After means are similar, they are about 18
milliseconds. Tus, GlassFish delay is not dependent on
message size so much.
FastRTPS graph shows that the frequency of delay jumps
increases with message size. Tese jumps are repeated when
the test is repeated, which indicates that they are caused by
the testing logic. But for other implementations, there are no
such jumps, which can be regarded as unstable operation of
FastRTPS in these conditions. Also, the mean and maximum
delay increase with message size. Te mean reaches 14.5
time (msec)
Delay time with multiple subscribers
300
250
200
150
100
50
0
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
count of subscribers
Figure 5: GlassFish’s delay boxes with diferent subscriber counts.
time (msec)
Delay time with multiple subscribers
12
10
8
6
4
2
0
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
count of subscribers
Figure 6: FastRTPS’s delay boxes with diferent subscriber counts.
time (msec)
Delay time with multiple subscribers
100
80
60
40
20
0
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
count of subscribers
Figure 7: Paho + Mosquitto MQTT’s delay boxes with diferent
subscriber counts.
time (msec)
Delay time with multiple subscribers
50
40
30
20
10
0
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
count of subscribers
Figure 8: RabbitMQ’s delay boxes with diferent subscriber counts.
10
Journal of Computer Networks and Communications
milliseconds and the maximum reaches 65.5 milliseconds at
the maximal message size. At a message size of 1.5 MB, there
is an abnormal spike. Te maximum delay is 160 millisec-
onds. Tus, FastRTPS delay depends on message size. It
increases with size, but it is a linear dependence.
Te PahoMQTT and RabbitMQ graphs look like stairs.
Each step represents the moment of increase in message size.
So, the delay of these two frameworks depends on the
message size. Te steps are clear while the size is under 1 MB.
Tereafter, the delay becomes more chaotic. Tere is an
interesting feature: PahoMQTT shows a better result until
the message size reaches 1 MB. If the message size is greater
than 1 MB, the mean of RabbitMQ delay is less than the
PahoMQTT delay. It can be seen in Figure 9 that the
RabbitMQ graph is under the PahoMQTT graph. But the
maximum values of these frameworks are quite close. Te
diference is a few milliseconds.
According to the results, all frameworks have a signifcant
delay dependence on message size, except GlassFish. But the
last one has a very high delay. Te means are the same as
maximums, for example RabbitMQ. As described earlier, if
the message size is less than 1 MB, PahoMQTT is better than
RabbitMQ, otherwise vice versa. FastRTPS delay is similar to
PahoMQTT delay, but has more scatter. Te maximums of
the former are several times larger than the latter. Tereby,
RabbitMQ shows the best results. GlassFish shows message
size-independent results, but with high delays.
4.2.4. Estimation of the Jitter Value and Minimum Delays.
In Figures 10 and 11, a graph of the delay of the minimum
message size is shown. Tat delay corresponds to the
minimal one because there is no or minimal user data. In
Table 4, the latency, jitter, and RTT for all frameworks are
shown. As can be seen from the graph and table, GlassFish
has the highest delay of about 2.5 milliseconds with jumps
over 20 milliseconds. Jitter is also high, at about half a
millisecond. Tis looks like a bold line on the graph. Tis is a
bad result, because there are no other messages or any large
data transmission. So, only one message containing protocol
information is processed, and it takes a few milliseconds. It is
also very unstable, because the delay scatter is about 1
millisecond. RTTis also high, over 5 milliseconds on a mean.
Tat means that the receiver has to wait about 5 milliseconds
to get a reply from another client. Hence, it is also a poor
result. FastRTPS has the lowest delay of 300 microseconds
and jitter of 30 microseconds, which is the best result. But
there are jumps over 2 milliseconds. Tis is not good and can
be critical in some cases. RTT is about 2.5 milliseconds on a
mean. But the maximum of RTT is below the GlassFish RTT
mean, so this again indicates that the GlassFish results are
poor. PahoMQTT + Mosquitto graph is similar to the
FastRTPS graph. Both of them are thin lines in the graph.
But PahoMQTT has twice the delay on the mean. Te jitter
maximum of PahoMQTT is also higher. Te RTT mean of
PahoMQTT is lower than the mean of FastRTPS, but the
maximum of the former is higher than the latter. Te
RabbitMQ graph shows frequent jumps over 2 milliseconds
while the mean is about 1 millisecond. Tis is bad because
the real mean ranges up to 2 milliseconds which is similar to
GlassFish. Tere are also abnormal jumps of up to 16
milliseconds. RabbitMQ RTT is about 3 milliseconds which
is neither good nor bad. But the maximum of RTTis up to 20
milliseconds, which is also a problem.
According to the results, FastRTPS shows the best
minimal delays that are less than 0.5 milliseconds. It also has
the best jitter value of a few tens of microseconds.
PahoMQTT with Mosquitto broker also shows good min-
imal delays and jitter values that are very close to those of
FastRTPS. GlassFish has worse minimal delay and jitter
values. RabbitMQ has better results than the previous one,
but it has a large scatter, which can be seen on the graph.
4.2.5. Evaluation of the Efect of the Number of Interacting
Processes in Diferent Conditions on Delays. In this test, frst
of all, we will consider the efect of the frequency of sending
messages on delays. Figure 12 shows the result for FastRTPS,
Delay time
160
140
120
100
80
60
40
20
0
0
100
200
300
400
500
600
700
800
message number
time (msec)
RabbitMQ
FastRTPS
paho_mqtt
jmq_glassfish
Figure 9: Delay of messages with 100 msgs/sec frequency.
Table 2: Mean and maximum delay with diferent subscriber counts.
N
GlassFish (JMS)
FastRTPS
PahoMQTT client + Mosquitto broker (MQTT)
RabbitMQ (AMQP)
1
13.78/207.6
1.7/9.4
2.13/4.39
1.38/2.62
5
9.5/128.86
1.18/8.85
1.6/3.32
1.26/4.55
10
8.13/186.0
0.96/9.22
1.39/2.62
1.75/3.7
15
12.2/192.4
1.49/10.11
2.0/112.94
1.25/2.7
20
14.7/202.8
1.86/10.2
2.54/4.83
1.38/2.82
Each column contains the mean/max value in ms.
Journal of Computer Networks and Communications
11
RabbitMQ, and GlassFish. Te results are quite diferent
since FastRTPS and RabbitMQ handle such a data fow and
do not accumulate a queue at any message size. And in the
case of GlassFish, the queue appears at the smallest message
size and varies throughout the test in the range from 0 to 14
messages. Te queue appears already at 400 messages per
second. Tat is, problems with GlassFish already appear
when transmitting about 1.2 MB per second.
In the case of Mosquitto and PahoMQTT, the results are
very ambiguous, because, at a frequency of more than 400
messages per second, the delay increases to seconds, as can
be replaced in Figure13. Tis is due to the long execution of
the message receiving function consume_message (see Fig-
ure 14). Figure 15 shows a graph of the execution time of the
read function provided by the PahoMQTT library API.
Due to the execution of the message receiving function,
the receiving time is set later, since our system examines the
time when the message is transmitted from the user’s
sending point to the receiving point by another user, and not
the time when the message is received by the operating
system or the broker, or when the message appears in the
queue at the destination point. Te time at the beginning of
the test is about 1 ms, which in the context of a large density
of received messages greatly increases the queue and reduces
the data transfer rate. Te testing system does not afect these
delays in any way, but only created conditions under which
this implementation shows a terrible result.
We can calculate the amount of data transmitted at a
frequency of 1000 messages per second on the last 300
messages, where the payload size reaches the maximum (see
equation (1)).
Bandwidth  1.8 MB · 1000 msgs
sec
 1.8 GB
sec .
(1)
FastRTPS and RabbitMQ cope with this load, although
the delays vary, and in the case of FastRTPS, it is no more
than 8 ms, and in the case of RabbitMQ, it is no more than
30 ms. Te rest of the implementations cannot withstand this
load and do not have time to process the queue, although all
implementations run in a loop with an interval of 1 ms. Tat
is, checking for new data with an interval of 1 ms, which in
the worst case will give an additional delay of 1 ms. Tis can
happen if the message is located in the recipient exactly after
the end of the check for the presence of the message. Tis
interval was chosen to reduce the load on the CPU.
GlassFish simply does not have time to transmit and
process such a data stream, and in the case of MQTT, the
reasons for the long wait to receive data have not been
investigated, but may be related to the load on the broker or
the long processing of data on the client. It is worth noting
that these results may not apply to any situation where
messages are transmitted with a given frequency and a given
message size, but rather to this particular test scenario in
which complex conditions are recreated.
Delay time
16
14
12
10
8
6
4
2
0
0
2000
4000
6000
8000
10000
message number
time (msec)
RabbitMQ
FastRTPS
Figure 10: FastRTPS’s and RabbitMQ’s delay of minimum mes-
sage size.
Delay time
35
30
25
20
15
10
5
0
0
2000
4000
6000
8000
10000
message number
time (msec)
paho_mqtt
jmq_glassﬁsh
Figure 11: GlassFish’s and Paho + Mosquitto MQTT’s delay of
minimum message size.
Table 3: Mean and maximum delay with diferent message sizes.
Implementation
128 B
524 kB
1 MB
1.5 MB
1.8 MB
GlassFish (JMS)
9.40/47.8
14.45/90.16
18.86/88.22
17.14/44.67
17.70/69.96
FastRTPS
0.57/25.54
6.49/29.03
10.18/31.37
29.66/161.97
14.57/65.64
PahoMQTT client + Mosquitto broker (MQTT)
0.64/5.49
5.83/13.74
11.35/17.77
11.34/21.57
14.53/23.07
RabbitMQ (AMQP)
1.40/6.85
7.09/13.30
8.09/15.63
11.65/18.89
8.25/21.48
Mean/max latency values are in ms for messages of diferent sizes.
12
Journal of Computer Networks and Communications
Next, the dependence of RTT on the number of pairs of
interacting processes is considered. All pairs are identical
and do not have any priority of data transmission in
comparison with each other. From the test, we want to
consider the behavior of diferent pairs of processes and the
efect of the number of pairs on delays. Te frequency of
sending messages is 400 messages per second, which gives a
fairly large data stream, but this does not create conditions to
accumulate a huge queue for each of the considered
implementations.
Figure 16 shows the RTT graph for FastRTPS with three
pairs of interacting processes. Te jumps on the charts are
particularly noticeable in the area of every 300 messages,
since it is with this frequency that the message size increases.
Jumps are associated with the reallocation of memory for the
bufer, which creates additional delays. Te RTTtime for any
message size does not exceed 6 ms, with the greatest delays
being achieved in the middle of the test with a message size
of 0.7 MB. By the end of sending data of a certain size, the
delays are reduced. Tis phenomenon can be explained by
the fact that when the message size changes, a small queue of
several messages appears, which adds a signifcant part of the
RTT, and by the end of sending the next 300 messages, the
queue goes away and the delays fall to their real values. At the
end of the test, the delay is less than in the middle, since there
Table 4: Latency, jitter, and RTT of minimum message size.
Implementation
Latency
Jitter
RTT
GlassFish (JMS)
2.62/37.26
0.57/34.64
5.25/73.49
FastRTPS
0.30/2.60
0.03/2.30
2.67/5.15
PahoMQTT client + Mosquitto broker (MQTT)
0.63/3.11
0.039/2.48
2.45/8.42
RabbitMQ (AMQP)
0.96/15.79
0.10/14.83
3.11/19.41
Mean/max latency, jitter, and RTT values are in ms.
Delay time
175
150
125
100
75
50
25
0
0
500
1000
1500
2000
2500
message number
time (msec)
RabbitMQ
FastRTPS
jmq_glassﬁsh
Figure 12: FastRTPS’s, RabbitMQ’s, GlassFish’s latency with a
frequency of 1000 messages per second and diferent message sizes.
time (sec)
paho_mqtt: Delay time
3.5
3.0
2.5
2.0
1.5
1.0
0.5
0
500
1000
1500
2000
2500
message number
Figure 13: PahoMQTT’s latency with a frequency of 1000 messages
per second and diferent message sizes.
auto
auto
unsigned long
start_timestamp = duration_cast<nanoseconds>
(high_resolution_clock : : now ( ) . time_since_epoch ( ) ) . count ( ) ;
(high_resolution_clock : : now ( ) . time_since_epoch ( ) ) . count ( ) - start_timestamp ;
msg = _client_sub . consume_message ( ) ;
proc_time = duration_cast<nanoseconds>
Figure 14: Measuring the execution time of the PahoMQTT library
read function.
time (msec)
Reading time
25
20
15
10
5
0
0
500
1000
1500
2000
2500
message number
Figure 15: PahoMQTT’s data processing time.
Journal of Computer Networks and Communications
13
is no queue and new messages stop being sent, which re-
duces RTT.
When studying the infuence of the number of pairs,
there is no obvious dependence, but with a large number of
interacting processes, the maximum RTT value in some
cases increases. Tese maximum values are not repeated
from test to test and are random, with a random message
size. As shown for three pairs, the RTT graphs overlap each
other, which shows the uniform distribution of library re-
sources between processes. Tis is a good indicator, as it is a
sign of the predictability of delays, which is very important
for real-time systems. It is very important to evenly dis-
tribute resources between equal priority data transmission
channels because there is no need to think about the fact that
any node in the network will take part of the resources for
data transmission. Tere will be no need to reduce the
amount of data transmitted over one channel in favor of
another. Te only exception to think about is limited
bandwidth.
Analyzing the results of GlassFish, a direct relationship
between the number of pairs and RTT is seen, since the
delays when two pairs of processes work simultaneously
increase by about two times, and when adding another pair
time (msec)
FastRTPS: Round Trip Time
10
1
2
0
8
6
4
2
0
0
200
400
600
800
1000
1200
message number
Figure 16: FastRTPS’s RTT with three communicating process
pairs.
time (sec)
jmq_glassﬁsh: Round Trip Time
2.00
1.75
1.50
1.25
1.00
0.75
0.50
0.25
0.00
1
2
0
0
100
200
300
400
500
600
700
800
message number
Figure 17: GlassFish’s RTT with three communicating process
pairs.
time (sec)
paho_mqtt: Round Trip Time
140
1
2
0
120
100
80
40
20
60
0
0
200
400
600
800
1000
1200
message number
Figure 18: PahoMQTT + Mosquitto broker RTT with three
communicating process pairs.
time (msec)
RabbitMQ: Round Trip Time
140
120
100
80
40
20
60
0
0
200
100
400
300
600
500
800
700
message number
1
2
0
Figure 19: RabbitMQ’s RTT with three communicating process
pairs.
14
Journal of Computer Networks and Communications
of RTT increases to the order of seconds (see Figure 17). In
this case, the behavior of the pairs is very similar, although
the RTT value of each pair is not as close as in the case of
FastRTPS. Tis software solution cannot cope with the load
of one pair of interacting processes, and as the number of
processes increases, the load increases many times and the
queue quickly accumulates.
Te results of PahoMQTT with Mosquitto are similar,
with an increase in the number of pairs, this solution does
not cope, and already with two pairs of interacting processes,
RTT reaches the order of seconds. Figure 18 shows a graph
for three pairs, where with a large message size, RTTreaches
hundreds of seconds.
Te behavior of these two implementations does not
meet the requirements of real-time systems.
RabbitMQ, in turn, showed similar FastRTPS results
with random outliers and the same behavior of process pairs,
but a noticeable increase in latency from one case to three,
which can also be seen in Figure 19.
4.2.6. Investigation of Delays in Artifcially Fixing the Message
Queue. Consider the case of sending messages of 10 bytes
without an interval with the maximum possible frequency,
but we limit the queue to 50 messages. First, the state of the
queue during the test was considered. As a result, FastRTPS
kept the queue state at the level of 50 messages almost
throughout the entire test, but there were rare single jumps
when the queue was empty and abruptly accumulated back.
Te state of the GlassFish queue turned out to be quite
unstable and constantly fuctuated from a few messages to
50, similar to RabbitMQ, but in the range from 0 to 30
messages. Tis situation is explained by the fact that the
queue is calculated based on the diference between the
number of messages sent and the number of messages re-
ceived, and it takes time to transmit a response message. In
addition, the check for new messages occurs at intervals of
1 ms, which also gives time to process the queue.
In the case of PahoMQTTwith Mosquitto, the queue did
not rise more than six messages and did not have time to
accumulate, because one node did not have time to send data
with sufcient frequency. Tis is also because this imple-
mentation waits for the message delivery information to be
received before sending a new one. Terefore, this solution
does not make sense to compare with the others, since it is in
diferent conditions. But when testing the case without
waiting for this information, the queue jumps in the range
from 0 to 35 messages and the delay does not exceed 2 ms,
and the mean delay value was 0.5 ms. Tis result is the best
among all the studied implementations.
Figure 20 shows the delays of each implementation, as
the result of FastRTPS showed the best result with a delay of
about 6 ms, GlassFish showed a huge spread of values, and if
we consider the peak delay and the state of the queue of 50
messages, it turns out that it took 120 ms to deliver 50 small
messages, which is a terrible indicator. RabbitMQ turned out
to be worse and not as stable as FastRTPS; on average, the
delay of this implementation was less than 10 ms with a
queue state of less than 30 messages. With a smaller queue,
the delays were greater than those of FastRTPS.
4.3.ResultComparison. A lot of papers have pointed out that
DDS is the best solution for real-time data transmission. Te
authors of [26] compared popular protocols based on the-
oretical information. Tey concluded that the problem of
transferring data many to many in real-time DDS is the best
solution.
Te authors of [14] showed that DDS is one of the leaders
in delivery performance. Teir result for DDS at payload size
2 B coincides with our result obtained in the fourth scenario
(Section 4.2.4). Tere is a diference of 2 milliseconds be-
cause in our experimental setup each node performs an
incoming message check only once every 1 millisecond.
Terefore, the additional delay is up to 2 milliseconds for
RTT.
A comparison of protocols using the Anglova scenario
was conducted in [27]. Te results show that the DDS
implemented with OpenDDS has a lower latency and jitter
compared to RabbitMQ and ZeroMQ.
A comparison of FastRTPS and ROS-MQTT was made
in [28]. Te results show that the average FastRTPS latency
for an empty message is 620 microseconds. Tis is close to
our result in the third scenario (Section 4.2.3), where
FastRTPS has an average latency of 570 microseconds for a
128 B message size. But the other results do not match
because the authors are experimenting on a more complex
architecture with networked data transmission, while our
scenarios are run on a single machine. Tis is also true for the
MQTT results. But overall, results show that FastRTPS has
an advantage over MQTT which is coincident with our
results.
Te authors of [29] compared the popular protocols in
terms of performance in eHealth solutions. Tey considered
protocols from a diferent angle, but the results coincide with
ours: DDS is the best solution. Te graph where the sampling
rate is 1000 coincides with the results obtained in the ffth
FastRTPS
RabbitMQ
jmq_glassfish
paho_mqtt
time (msec)
Delay time
120
100
80
60
40
20
0
0
2000
4000
6000
8000
10000
message number
Figure 20: Te delay time in the case of a limited queue.
Journal of Computer Networks and Communications
15
scenario (Section 4.2.5). Tere are many diﬀerences in the
speciﬁc values, because the experimental setups are very
diﬀerent. But, in general, the results are the same: DDS
showed the best latency, followed by AMQP, then JMS, and
ﬁnally MQTT, which showed a very poor latency. Te au-
thors have summarized their results in a comparative table
with the strengths and weaknesses of each protocol. But in
this table, JMS has strong points such as “low latency” and
“suitable for real-time applications.” Tis looks very strange,
because DDS does not have “low latency” in the strengths,
but has lower latency in the results, and AMQP has “not
suitable for real-time applications” in the weaknesses, but
the results show that AMQP is the same or better than JMS.
An analysis of MQTT, CoAP, and XMPP was performed in
[30]. In this study, real data, such as temperature, humidity,
and light, were sent 100 times for each protocol. Te results
show that the average delay of MQTT is about 589 micro-
seconds. Tis is better than the average delay of CoAP (821
microseconds) and XMPP (41 milliseconds). Since the tem-
perature, humidity, and light data are lightweight and the
transmission was in one direction, the MQTTresult is the same
as the results obtained in the third scenario (Section 4.2.3): 640
microseconds for MQTT with a message size of 128B.
Te MQTTresult in the third scenario is also the same as
the result from [31], where MQTT has a latency of 1 to 1.5
milliseconds. Te diﬀerence of two times may be caused by
the packet transmission time over the network, in contrast to
our experimental setup where all components (publisher,
broker, and subscriber) are placed on the same machine.
Tere are a lot of comparisons between AMQP and
MQTT. In [32], the authors compared the RTT of AMQP
and MQTT. Te results show that MQTT is slightly better
than AMQP: the RTT of AMQP is about 700 microseconds
and the RTT of MQTT is about 500 microseconds. Tis
coincides with the RTT results from the fourth scenario
(Section 4.2.4). Te diﬀerence of a few milliseconds is
explained by the fact that in our experimental setup all
receiving nodes work in a 1-millisecond wait cycle, which
causes an additional delay of up to 2 milliseconds in this
scenario. Other small time diﬀerences may be caused by the
operating system or diﬀerent versions of the frameworks.
In [33], the authors also compare the RTT for AMQP
and MQTT and show that AMQP is better in most cases.
Most measured values for AMQP and MQTT range from 2
milliseconds to 6 milliseconds. Tese results are matched by
our results for the fourth scenario (Section 4.2.4). But in our
results, MQTT is slightly better than AMQP, in contrast to
the conclusion in [33]. Te cause for this may be that the
authors used the Python programming language, the
Raspberry PI, or the pika library for the AMQP broker.
In [34], the authors show that AMQP and MQTT have
the same delay (MQTT is slightly better). Since the authors
did not provide a detailed description of the test scenario, it
is diﬃcult to compare with our results, but it is similar to the
results of the third scenario (Section 4.2.3), where AMQP
and MQTT have similar delays for message sizes up to 1 MB.
In [35], AMQP and MQTT delays were compared for
diﬀerent scenarios: sending data from weather sensors and
sending data from city cameras. Te results show that for
scenarios with sensors, MQTT has a lower delay (less than 1
millisecond) than AMQP. Since sensor data are lightweight,
this is coincident with the results obtained in the third
scenario (Section 4.2.3) with a message size of 128 B, where
MQTT has an average delay of 640 microseconds. But for the
scenario with cameras, the result is reversed, with AMQP
having a lower delay (less than 13 milliseconds). Tis is also
coincident with the results obtained in the third scenario
(Section 4.2.3): as the message size increases, MQTT shows
higher latency compared to AMQP.
Te authors of [36] also concluded that MQTT is better
suited for small message sizes. Teir results show that MQTT
has lower latency (from 400 microseconds to 500 micro-
seconds) than AMQP (from 800 microseconds to 1100
microseconds) for message sizes up to 4096 B. Tis is
matched by our results obtained in the third scenario
(Section 4.2.3) with a message size of 128 B. Te latency in
our results is higher because the network speed is less than
1 GB/s and the broker has lower system characteristics. Te
authors also experimented a 5000-message sending rate and
message size of 64 B. Tis is very close to the ﬁrst scenario,
where messages are sent without intervals. Te results are
matched: latency increases throughout the scenario.
5. Conclusions
Described protocols are diﬀerent in initial purposes. JMS is a
simple standard for messaging in Java programs, that does
not specify messaging mechanics. MQTT and AMQP are
protocols for messaging using queues that diﬀer in some
details. RTPS has a purpose to make real-time messaging
available to its users by having more strict rules. For real-
time systems, the best protocols are MQTT and RTPS.
MQTTis good at transmitting small messages, while RTPS is
a more versatile and ﬂexible protocol with more options for
changing the QoS.
Te article presents a methodology that allows to in-
vestigate the software delays of solutions in various con-
ditions, but the conditions of the study have limitations:
(i) Te interval for checking new messages is 1 ms,
which in the worst case can give an error of 1 ms;
(ii) Testing was carried out on a single machine using
network data transfer protocols, but minimizing the
impact of network delays. Tus, it is assumed that
the network is stable, although the instability of the
network can greatly aﬀect the result [37];
(iii) Te test from Section 3.1.2 uses a fairly small
number of simultaneously running subscribers;
(iv) All tests are aimed at investigating the delays in-
troduced by the middleware;
(v) In the developed methodology, nonstandard be-
havior of nodes was stimulated, for example in-
creasing the size of transmitted data during one test,
which is not typical.
Considering the results, GlassFish is the best solution for
message sending without intervals. It can be used in systems
16
Journal of Computer Networks and Communications
with a lot of messages, where other solutions will be too slow.
But in all other cases, it has the worst results and cannot
compete with other solutions.
Paho is very good at transferring messages of minimum
size. It could be a good solution for systems with very small
messages, such as commands that can be presented as few
bytes.
RabbitMQ is one of the fastest solutions. It shows itself
good in all cases, except in sending messages without an
interval. RabbitMQ is the best at sending messages with a big
size and with multiple subscribers.
FastRTPS is almost the best solution. Tere is only one
problem—message processing without an interval between
sending messages. FastRTPS has the most stable delays
which makes it predictable. It is very important in real-time
systems.
In IoT systems almost all investigated cases are pre-
sented. RabbitMQ and FastRTPS are good in most cases and
should be considered ﬁrstly. RabbitMQ should be used in
systems with big messages and a lot of consumers of the
same data. FastRTPS should be used in real-time systems,
where delays have low jitter and are bounded by a constant
value. Te usage of GlassFish and Paho is more limited. Tey
should be used only in special cases, such as too frequent
message sending and low-size data transferring.
When building a system with various data, which in-
cludes both small command messages and large amounts of
data from sensors, cameras, etc., the RTPS protocol shows
itself in the best way. But none of the software solutions
considered by us provides guarantees of delivery in iso-
chronous mode, and in all cases, in certain situations, there
are unpredictable jumps and the accompanying growth of
the message queue. To provide real guarantees, it is necessary
to use link-layer protocols that provide appropriate capa-
bilities and guarantees, since the application layer is highly
dependent on external factors.
Data Availability
No data were used to support this study.
Conflicts of Interest
Te authors declare that they have no conﬂicts of interest.
Acknowledgments
Tis research was funded by the “Development Program of
ETU “LETI” within the Framework of the Program of
Strategic Academic Leadership” Priority-2030 No 075-15-
2021-1318 on 29 September 2021.
References
[1] W. Raﬁque, L. Qi, I. Yaqoob, M. Imran, R. U. Rasool, and
W. Dou, “Complementing IoT services through software
deﬁned networking and edge computing: a comprehensive
survey,” IEEE Communications Surveys & Tutorials, vol. 22,
pp. 1761–1804, 2020.
[2] I. McAteer, M. I. Malik, Z. Baig, and P. Hannay, “Security
vulnerabilities and cyber threat analysis of the AMQP pro-
tocol for the internet of things,” in Proceedings of the 15th
Australian Information Security Management Conference,
pp. 70–80, Perth, Western Australia, 2017.
[3] S. Andy, B. Rahardjo, and B. Hanindhito, “Attack scenarios
and security analysis of MQTT communication protocol in
IoT system,” in Proceedings of the 2017 4th International
Conference on Electrical Engineering, Computer Science and
Informatics (EECSI), pp. 1–6, Yogyakarta, Indonesia, 2017.
[4] M. S. Harsha, B. M. Bhavani, and K. R. Kundhavai, “Analysis
of vulnerabilities in MQTT security using Shodan API and
implementation of its countermeasures via authentication
and ACLs,” in Proceedings of the 2018 International Confer-
ence on Advances in Computing, Communications and In-
formatics (ICACCI), pp. 2244–2250, Bangalore, India, 2018.
[5] A. Mileva, A. Velinov, L. Hartmann, S. Wendzel, and
W. Mazurczyk, “Comprehensive analysis of MQTT 5.0 sus-
ceptibility to network covert channels,” Computers & Security,
vol. 104, Article ID 102207, 2021.
[6] C. A. Garcia, J. E. Naranjo, and M. V. Garcia, “Analysis of
AMQP for industrial internet of things based on low-cost
automation,” Smart Innovation, Systems and Technologies,
vol. 201, pp. 235–244, 2019.
[7] M.
Collina,
M.
Bartolucci,
A.
Vanelli-Coralli,
and
G. E. Corazza, “Internet of Tings application layer protocol
analysis over error and delay prone links,” in Proceedings of
the 2014 7th Advanced Satellite Multimedia Systems Confer-
ence and the 13th Signal Processing for Space Communications
Workshop (ASMS/SPSC), pp. 398–404, Livorno, Italy, 2014.
[8] P. Benedick, J. Robert, Y. Le Traon, and S. Kubler, “O-MI/O-
DF vs. MQTT: a performance analysis,” in Proceedings of the
2018
IEEE
Industrial
Cyber-Physical
Systems
(ICPS),
pp. 153–158, St. Petersburg, Russia, 2018.
[9] S. Chouali, A. Boukerche, and A. Mostefaoui, “Towards a
formal analysis of MQtt protocol in the context of commu-
nicating vehicles,” in Proceedings of the 15th ACM Interna-
tional Symposium on Mobility Management and Wireless
Access (MobiWac’17), pp. 129–136, Miami, FL, USA, 2017.
[10] S. Lee, H. Kim, D. Hong, and H. Ju, “Correlation analysis of
MQTT loss and delay according to QoS level,” in Proceedings
of the International Conference on Information Networking
2013 (ICOIN), pp. 714–717, Bangkok, Tailand, 2013.
[11] N. Naik, “Choice of eﬀective messaging protocols for IoT
systems: MQTT, CoAP, AMQP and HTTP,” in Proceedings of
the 2017 IEEE International Systems Engineering Symposium
(ISSE), pp. 1–7, Vienna, Austria, 2017.
[12] R. Sanika, “Performance comparison of message queue
methods,” UNLV Teses, Dissertations, Professional Papers,
and Capstones, University of Nevada, Las Vegas, NV, USA,
2019.
[13] E. Nilsson and V. Preg´en, “Performance evaluation of mes-
sage-oriented middleware,” Dissertation, KTH Royal Institute
of Technology, Stockholm, Sweden, 2020.
[14] S. Profanter, A. Tekat, K. Dorofeev, M. Rickert, and A. Knoll,
“OPC UA versus ROS, DDS, and MQTT: performance
evaluation of industry 4.0 protocols,” in Proceedings of the
2019 IEEE International Conference on Industrial Technology
(ICIT), pp. 955–962, Melbourne, Australia, 2019.
[15] G. Pardo-Castellote, “OMG data-distribution service: archi-
tectural overview,” in Proceedings of the 23rd International
Conference on Distributed Computing Systems Workshops,
Providence, RI, USA, 2003.
Journal of Computer Networks and Communications
17
[16] T. White, M. N. Johnstone, and M. Peacock, “An investigation
into some security issues in the DDS messaging protocol,” in
Proceedings of the 15th Australian Information Security
Management Conference, pp. 132–139, Perth, Australia, 2017.
[17] M. J. Michaud, T. Dean, and S. P. Leblanc, “Attacking OMG
data distribution service (DDS) based real-time mission
critical distributed systems,” in Proceedings of the 2018 13th
international Conference on Malicious and Unwanted software
(MALWARE), pp. 68–77, Nantucket, MA, USA, 2018.
[18] A. Gavrilov, M. Bergaliyev, S. Tinyakov, and K. Krinkin,
“Industrial messaging middleware: standards and perfor-
mance evaluation,” in Proceedings of the 2020 IEEE 14th
International Conference on Application of Information and
Communication Technologies (AICT), Tashkent, Uzbekistan,
October 2020.
[19] K. Krinkin, A. Filatov, A. Filatov, O. Kurishev, and
A. Lyanguzov, “Data distribution services performance
evaluation framework,” in Proceedings of the 2018 22nd
Conference
of
Open
Innovations
Association
(FRUCT),
Jyvaskyla, Finland, May 2018.
[20] XMPP Standards Foundation, XEP-0184: Message Delivery
Receipts, Version 1.4.0 (2018-08-02). Extensible Messaging and
Presence Protocol, XMPP Standards Foundation, Parker, CO,
USA, 2018.
[21] “Eprosima Performance,” http://www.eprosima.com/index.
php/resources-all/performance/.
[22] V. M. Ionescu, “Te analysis of the performance of RabbitMQ
and ActiveMQ,” in Proceedings of the 2015 14th RoEduNet
International Conference–Networking in Education and Re-
search (RoEduNet NER), pp. 132–137, Craiova, Romania,
2015.
[23] P. Dobbelaere and K. S. Esmaili, “Kafka versus RabbitMQ: a
comparative study of two industry reference publish/sub-
scribe implementations: industry paper,” in Proceedings of the
11th ACM International Conference on Distributed and Event-
based Systems (DEBS’17), pp. 227–238, New York, NY, USA,
2017.
[24] B. Mishra and B. Mishra, “Evaluating and analyzing MQTT
brokers with stress-testing,” in Proceedings of the (CS)2-12th
Conference of PhD Students in Computer Science at: University
of Szeged, Szeged, Hungary, 2020.
[25] B. Mishra, “Performance evaluation of MQTT broker
servers,” Computational Science and Its Applications–ICCSA
2018, vol. 10963, pp. 599–609, 2018.
[26] S. Seleznev and V. Yakovlev, “Industrial application archi-
tecture IoT and protocols AMQP, MQTT, JMS, REST, CoAP,
XMPP, DDS,” International Journal of Open Information
Technologies, vol. 7, no. 5, pp. 17–28, 2019.
[27] N. Suri, “Experimental evaluation of Group communications
protocols for tactical data dissemination,” in Proceedings of
the MILCOM 2018-2018 IEEE Military Communications
Conference (MILCOM), pp. 133–139, Los Angeles, CA, USA,
2018.
[28] A. Mokhtarian, A. Kampmann, M. Lueer, S. Kowalewski, and
B. Alrifaee, “A cloud architecture for networked and au-
tonomous vehicles,” IFAC-PapersOnLine, vol. 54, pp. 233–
239, 2021, 2.
[29] A.
Talaminos-Barroso,
M.
A.
Estudillo-Valderrama,
L. M. Roa, J. Reina-Tosina, and F. Ortega-Ruiz, “A machine-
to-machine protocol benchmark for eHealth applications–use
case: respiratory rehabilitation,” Computer Methods and
Programs in Biomedicine, vol. 129, pp. 1–11, 2016.
[30] B. H. Çorak, F. Y. Okay, M. G¨uzel, S. Murt, and S. Ozdemir,
“Comparative analysis of IoT communication protocols,” in
Proceedings of the 2018 international Symposium on networks,
Computer and Communications, pp. 1–6, Rome, Italy, 2018.
[31] M. Iglesias-Urkia, A. Orive, M. Barcelo, A. Moran, J. Bilbao,
and A. Urbieta, “Towards a lightweight protocol for industry
4.0: an implementation based benchmark,” in Proceedings of
the 2017 IEEE international Workshop of Electronics, control,
Measurement, Signals and their Application to Mechatronics
(ECMSM), Donostia, Spain, May 2017.
[32] D. Yoshino, Y. Watanobe, and K. Naruse, “A highly reliable
communication system for internet of robotic things and
implementation in RT-middleware with AMQP communi-
cation interfaces,” IEEE Access, vol. 9, pp. 167229–167241,
2021.
[33] N. Q. Uy and V. H. Nam, “A comparison of AMQP and
MQTT protocols for internet of things,” in Proceedings of the
2019 6th NAFOSTED Conference on Information and Com-
puter Science (NICS), pp. 292–297, Hanoi, Vietnam, 2019.
[34] F. Zujie and K. JaeSoo, “Transmission performance com-
parison and analysis with diﬀerent publish/subscribe proto-
col,” in Proceedings of the Korean Society of Computer
Information Conference, pp. 77–80, Seoul, South Korea, 2020.
[35] D. Happ, N. Karowski, T. Menzel, V. Handziski, and
A. Wolisz, “Meeting IoT platform requirements with open
pub/sub solutions,” Annales Des Telecommunications, vol. 72,
no. 1-2, pp. 41–52, 2017.
[36] P. Sommer, F. Schellroth, M. Fischer, and J. Schlechtendahl,
“Message-oriented middleware for industrial production
systems,” in Proceedings of the 2018 IEEE 14th International
Conference on Automation Science and Engineering (CASE),
pp. 1217–1223, Munich, Germany, 2018.
[37] D. Tangavel, X. Ma, A. Valera, H. X. Tan, and C. K. Y. Tan,
“Performance evaluation of MQTT and CoAP via a common
middleware,” in Proceedings of the 2014 IEEE Ninth Inter-
national Conference on Intelligent Sensors, Sensor Networks
and Information Processing (ISSNIP), Singapore, 2014.
18
Journal of Computer Networks and Communications


Paper 5:
- APA Citation: Author, A. (2019). Multi-Layer IoT Security Framework for Ambient Intelligence Environments. Sensors, 19(18), 4038. https://doi.org/10.3390/s19184038
  Main Objective: To design a multi-layer security framework for ambient intelligence environments that can handle the challenges of real-time data transmission in healthcare applications.
  Study Location: Unspecified
  Data Sources: Not explicitly mentioned
  Technologies Used: MQTT
  Key Findings: 
  Extract 1: Considering these requirements, we adopted an MQTT-based publish/subscribe messaging protocol for our system.
MQTT [19] is an ISO standard publish/subscribe messaging transport protocol.
  Extract 2: MQTT provides three QoS levels, which makes it suitable for real-time scenarios where data reliability is required.
  Limitations: The paper does not address security or scalability concerns related to the use of MQTT in IoT systems.
  Relevance Evaluation: 1.0
  Relevance Score: 0.9
  Inline Citation: (Author, 2019)
  Explanation: The paper you provided addresses the need for a real-time data transmission protocol for automated IoT systems that can handle the growing demand for data in healthcare applications. It proposes MQTT as a suitable protocol, citing its support for QoS and lightweight nature. Here is the key point of the paper that is relevant to your review:

* MQTT is a good choice for real-time data transmission in automated IoT systems for healthcare applications because it supports QoS and is lightweight.

 Full Text: >
sensors
Article
Multi-Layer IoT Security Framework for Ambient
Intelligence Environments
Ion Bica *, Bogdan-Cosmin Chifor, S, tefan-Ciprian Arseni
and Ioana Matei
Faculty of Information Systems and Cyber Security, “Ferdinand I” Military Technical Academy, 050141
Bucharest, Romania; bogdan.chifor@mta.ro (B.-C.C.); stefan.arseni@mta.ro (S.-C.A.); ioana.matei@mta.ro (I.M.)
* Correspondence: ion.bica@mta.ro
Received: 5 August 2019; Accepted: 17 September 2019; Published: 19 September 2019


Abstract: Ambient intelligence is a new paradigm in the Internet of Things (IoT) world that brings
smartness to living environments to make them more sensitive; adaptive; and personalized to human
needs. A critical area where ambient intelligence can be used is health and social care; where it
can improve and sustain the quality of life without increasing ﬁnancial costs. The adoption of this
new paradigm for health and social care largely depends on the technology deployed (sensors and
wireless networks), the software used for decision-making and the security, privacy and reliability
of the information. IoT sensors and wearables collect sensitive data and must respond in a near
real-time manner to input changes. An IoT security framework is meant to oﬀer the versatility and
modularization needed to sustain such applications. Our framework was designed to easily integrate
with diﬀerent health and social care applications, separating security tasks from functional ones and
being designed with independent modules for each layer (Cloud, gateway and IoT device), that oﬀer
functionalities relative to that layer.
Keywords: IoT; security framework; remote attestation; packet ﬁltering; trust management
1. Introduction
Even if it is a relatively new concept, the Internet of Things (IoT) opens perspectives that can change
the way we interact, not only with each other but also with the environment surrounding us. IoT is
an emerging ﬁeld that has received a lot of attention from many industries, allowing the development
of applications for automotive, transport, telecommunication or ambient intelligence. Beyond the
tempting facilities that IoT solutions oﬀer, the innovation aspects are more enlightening in ambient
intelligence. In this area, IoT applications address optimization, eﬃciency or ease-of-use issues, and
devices work in order to support people in carrying out their everyday life activities. IoT devices can
provide an approach that enables older people or people with disabilities to live in a more autonomous
and personalized ambient, increasing their independence and enabling them to solve certain routine
procedures on their own, positively inﬂuencing the quality of their living standards.
In ambient intelligence applications, data from sensors provides important information about
the current state of the environment, and in order to make the right decisions, data must be accurate.
But as in any IoT system, there may appear irregularities in data accuracy. False positives, abnormal
values or misinterpretations can occur due to sensors nature, hardware faults, compromised nodes,
electromagnetic interference, etc. Therefore, to prevent these problems, it is necessary to implement
a solution capable of ﬁltering out abnormal measurements so that diﬀerentiation between node defects
and the real situations that require the immediate involvement of specialized personnel, can be made.
There are ambient intelligence applications that require high security measures due to the critical
nature of the sensed information, especially when taking into consideration the healthcare context
(e.g., medical information). Traditional security methods are diﬃcult to implement in this case because
Sensors 2019, 19, 4038; doi:10.3390/s19184038
www.mdpi.com/journal/sensors
Sensors 2019, 19, 4038
2 of 20
an IoT application usually consists of diﬀerent interconnected hardware (resource constrained) and
software components from multiple vendors which raise many issues. Considering this context, there
are many particularities that need to be addressed by a security solution: a large number of devices,
each with its unique capability and purpose, ad-hoc connections, increased diﬃculty in managing
the entire system and diﬀerent methods through which devices interact with consumers (humans or
other systems). In health and social care applications that process sensitive data, security and privacy
measures must be implemented without aﬀecting service eﬃciency. Thus, a feasible security solution
needs to implement protection mechanisms at all layers of the IoT system (e.g., devices, gateways,
Cloud), while still allowing uninterrupted and transparent communications between these layers.
To develop an ambient intelligence application, one can use an existing IoT platform, such as AWS
IoT from Amazon, ARM Bed from ARM and other partners, Azure IoT Suite from Microsoft, Brillo/Weave
from Google, Calvin from Ericsson, HomeKit from Apple, Kura from Eclipse, or SmartThings from
Samsung. These platforms allow rapid application development and support a broad range of sensors
and wearables. In addition, each platform encapsulates standard security mechanisms like authentication,
authorization, access control, and secure communication, as presented in [1]. However, important
security challenges required by critical IoT applications, including health and social care ones, are not
handled by these platforms. Data anomaly detection, remote attestation or packet filtering are issues that
need to be addressed to be able to mitigate complex attacks.
In this paper, we propose a security framework that tackles these challenges, bringing improvements
to ambient intelligence applications, with emphasis on the health and social care monitoring. To achieve
this, the proposed framework consists of interconnected modules that are integrated at each of the
main layers of an IoT system: Cloud, gateway, and device. The framework is built on a customized
decentralized architecture, empowering middle-layer devices, such as gateways, while having a central
point of management through a Cloud platform. The framework’s key components are presented in the
remaining sections of the paper, which has the following structure. Section 2 presents the related work
being done in this domain. In Section 3 we describe the proposed security framework, while in Section 4
we present the tests and analyses we have done on the framework modules. Section 5 ends the paper
with conclusions and future research directions.
2. Related Work
The proposal made in [2] consists of a layered architecture of an IoT system and aspects of
hardware and software design. At the same time, several areas of application of the proposed model
such as smart cities, agriculture or healthcare, have been outlined. In [3], the authors have studied the
state-of-the-art for IoT and pointed out that there are two important issues to be taken into account
when designing an IoT system: the privacy of the people and the conﬁdentiality of the services and
processes. In order to prevent these problems, it is necessary to design an architecture tailored to the
purpose of the project, then to adopt a security framework that meets the requirements of privacy
and conﬁdentiality.
A complex IoT system is characterized by a large number of heterogeneous devices that need
to be managed and have their data properly collected and processed. This means that the data must
be analyzed and ﬁltered in order to identify the compromised nodes and to detect anomalies of the
recorded data. Anomaly detection is a resource-consuming process, meaning that it must be made at
the gateway or cloud layer given that the nodes have a low power processor and are based on low
power consumption. There are many ways proposed by researchers to detect data anomalies: machine
learning, recurrent calculation, statistical calculation, decision trees [4], but catching the abnormality
data becomes even more diﬃcult when there is a chance of communication errors or some intentional
injection of malicious data by an attacker.
A considerable eﬀort has been made by the research and industry communities, in presenting
generic IoT frameworks, such as Internet of Things Architecture (IoT-A) [5] or Core Platform of the
Future Internet (FiWARE) [6] for solving the above mentioned problems. Whilst the second framework,
Sensors 2019, 19, 4038
3 of 20
FiWARE, implements a “security-by-design” paradigm with generic components (such as monitoring,
identity, and conﬁdentiality management, context security or secure storage), the ﬁrst one, IoT-A,
proposes a trust model that considers the following security aspects:
•
Trust domains—an IoT device can collect data from diﬀerent domains;
•
Trust evaluation mechanisms—a device reputation is calculated based on direct observations or
by querying neighboring IoT devices/gateways;
•
Behavior analysis policies—shape the interaction between two IoT devices, based on their
reputation levels;
•
Trust anchor—an entity with the highest reputation, trusted by all devices in the IoT system;
•
Trust federalization—delegate the trust evaluation mechanism to another entity, in order to
ensure interoperability.
Another security framework designed for unattended environments to control nodes that have
access to the network is presented in [7]. The access control is based on administrative approval in
order to ensure compliance with deﬁned security rules. In a network intended to monitor the functions
of the human body and the environment, the information that transits the network is life-critical.
So there is a need to deploy security mechanisms for preventing malicious attacks. The basis for these
is to deﬁne the standards and protocols used to enhance data security. A signiﬁcant improvement has
been seen in the IEEE 802.15.4 and is broadly explained in [8].
Regardless of what framework an IoT system is built upon, the large number of integrated devices
transforms the notions of trust in collected information and the reputation of IoT devices into two key
concepts [9]. These two concepts are also directly linked: depending on the devices’ reputation, data
collected from it is tagged with a speciﬁc level of trust by a user. In health and social care applications,
data cannot be assessed anymore as simple environmental data, without any reference to a person’s
habits; instead, it needs to be split into diﬀerent categories, according to their origin and future use
(e.g., data collected from Personal Area Networks (PAN) [10] or Body Area Networks (BAN) [11] needs
either to be processed locally or to be anonymized before being sent in Cloud and the users need to
have full control of it, while environmental data can be sent and processed remotely without the need
of applying the same level of ﬁltering as in the previous case). Thus, in these types of applications,
trust is not only a characteristic of data read from sensors and their reputation, but it becomes also
a requirement for the functioning of the entire IoT environment (users need not only to trust received
data but also to trust the way the system manipulates that data, before and after it is being presented to
them). This second “level” of trust can be achieved through security mechanisms that ensure privacy
and protection of data throughout the entire lifecycle of that data. Returning to the link between the
ﬁrst “level” of trust and reputation of nodes, as stated at the beginning of this paragraph, the notion of
reputation can be used to deﬁne the resulting value of the process of assessing IoT devices based on
their behavior features, such as: transaction history, reliability of established communication links
or quality of sent data. Each one of these features impacts the way an IoT device (a node in the IoT
network) is perceived by other nodes. An IoT device trustworthiness impacts directly the connections
with other devices: data published by a device with a low reputation score has a low probability of
being consumed. Thus, a malicious node introduced in the IoT system would be detected through its
behavior, no matter when an attack is launched. Considering this capability, many models for assessing
the reputation level of a node have been proposed, based on diﬀerent mathematics, physics or other
aspects, such as Bayesian [12], subjective logic [13], entropy [14,15] or biological elements [16,17]. Even
though the concept of a reputation assessment model can be for a variety of domains, authors in [18,19]
have highlighted ﬁve essential stages that a reputation-based architecture needs to have built-in:
•
Data collection—query the node or its neighbors for behavioral information;
•
Scoring and reputation level assessment—reputation score of a node is calculated based on
a reputation assessment model (one of those described before or a similar one);
Sensors 2019, 19, 4038
4 of 20
•
Nodes selection—valid nodes can consider data rerouting, based on updated reputation scores of
their neighboring nodes;
•
Transaction execution—after a data transfer is ﬁnished, a transaction is considered executed, then
the user can give it a score;
•
Updating the reputation level of a node—based on the users’ score, nodes can be “rewarded” or
“punished”, aﬀecting their reputation.
•
Furthermore, authors in [20] emphasize several characteristics that must be considered before
integrating security features based on reputation in an IoT system architecture:
•
Users’ partiality in scoring nodes;
•
Possible transitivity of reputation across a trust chain;
•
Initial context in which primary trust relations are deﬁned (based on given reputation scores).
Extending the applications commonly found in an IoT system, the authors in [21] propose the
deployment of a reputation solution for evaluating data presented by devices in a participatory
sensing environment. Given the dynamic nature of this sensing environment, the adaptivity of
a reputation-based evaluation architecture is another advantage and a desired characteristic.
Although these reputation-based security mechanisms can bring improvements in the overall
security of an IoT system, they are not protected against some classic attack methods that can be
adapted to work in a reputation-assessing architecture. Such examples of attacks are mentioned in [20].
To counter these possible problems the IoT architecture needs to have regular security mechanisms
integrated, such as Transport Layer Security (TLS) / Datagram Transport Layer Security (DTLS)
communications, authentication and Access Control Lists (ACL). Another issue with reputation-based
security mechanisms is the overhead in power consumption, given the additional computations needed
to evaluate the reputation for each node. One direction for assessing the impact of this issue in the
overall performance of an IoT system is the modeling of energy consumption in sensor networks
using stochastic Petri networks (SPNs), as presented in [22]. This approach can give a prediction of
power consumption, thus enabling gateways to adjust the computations required by the reputation
evaluation algorithm, at diﬀerent levels of battery power.
3. Proposed IoT Security Framework
The design of a security framework for ambient intelligence environments should be based on
a modular architecture that allows scalability, given that IoT networks are widely adopted today.
In the beginning, a typical context of ambient intelligence was homes, and over time it expanded to
workspaces, public spaces and hospital environments. The proposed framework has a multi-level
structure and includes at each level (node, gateway, and Cloud) a component mandated to monitor
and act independently if the module is prone to attacks. The architecture presented in the following
subsections is based on the classic centralized model but introduces decentralized architecture elements
by using the gateway as a key element. This is because all nodes have a single communication link
which implies that any connection with another node will be monitored and managed by the gateway,
thus allowing the local control of the resources, with the Cloud module acting as a supervisor.
An important feature that must be provided by an IoT security framework in the ambient
intelligence applications consists of a secure infrastructure that allows the data transmission from the
end-point sensors to the cloud services. Also, an IoT security framework must oﬀer the infrastructure
for additional services, like sensor anomaly detection which is critical in the healthcare context. Our
proposed framework oﬀers the support for running an anomaly detection algorithm on the gateway
side, in order to detect sensor data anomalies in a real time manner, thus satisfying the requirements of
a healthcare application. Moreover, the gateway element in our system processes requests for two data
categories in order to address various ambient environment applications: critical healthcare data which
must be processed immediately and environment context data which is not critical, but which can
lead to better knowledge about the persons’ health state. Given the importance of the gateway in our
Sensors 2019, 19, 4038
5 of 20
system, we implemented a low cost Denial of Service (DoS) mitigation solution which assures another
important requirement of an ambient intelligence environment application: the system availability.
As presented in Figure 1, the proposed solution integrates various security components at all
levels of the IoT system. The interaction of diﬀerent security modules is ensured by establishing a trust
relationship based on the authentication mechanism. The IoT security framework allows establishing
these trust relationships using X.509 digital certiﬁcates, asymmetric keys or pre-shared symmetric
keys, depending on the constraints of the devices involved. In addition to this, the solution includes
an anomaly detection module by which node behavior is observed and quantiﬁed at the gateway level
to create a more trustworthy system.
Sensors 2019, 19, x FOR PEER REVIEW 
5 of 20 
 
data which is not critical, but which can lead to better knowledge about the persons’ health state. 
Given the importance of the gateway in our system, we implemented a low cost Denial of Service 
(DoS) mitigation solution which assures another important requirement of an ambient intelligence 
environment application: the system availability. 
As presented in Figure 1, the proposed solution integrates various security components at all 
levels of the IoT system. The interaction of different security modules is ensured by establishing a 
trust relationship based on the authentication mechanism. The IoT security framework allows 
establishing these trust relationships using X.509 digital certificates, asymmetric keys or pre-shared 
symmetric keys, depending on the constraints of the devices involved. In addition to this, the 
solution includes an anomaly detection module by which node behavior is observed and quantified 
at the gateway level to create a more trustworthy system. 
 
Figure 1. The architecture of the proposed security framework. 
3.1. Cloud Layer 
As we mentioned before, the feature that links our proposed security framework with other 
centralized IoT systems is the Cloud module that acts as an access point for users to connect to 
different services and as a management module for the underlying IoT system, but with reduced 
capabilities. The Proposed Cloud Platform (PCP) was not designed as a replacement for the Existing 
Cloud Platforms (ECP), but as a security “complement” for them, adding additional features to 
enforce control over devices (behavior and data). Data is exchanged between these two Cloud 
platforms by means of APIs exposed by the ECP. In this manner, we ensure that data coming from 
gateways is filtered so that the ECP does not receive corrupted information and that users obtain the 
correct results when accessing services. Thus, the first functionality from the reduced set that the 
PCP implements is to be an element of overseeing and enforcing specific security rules and policies, 
meant to limit the infusion of malicious data due to a rogue gateway. Aside from filtering traffic 
flows, the PCP acts also as a service discovery module for the gateway and devices layers, by 
aggregating services available on different ECPs. As a mention, the services that are aggregated by 
the PCP are services that are allowed by the administrators of the IoT environment and the 
underlying devices can be linked to. By ensuring this service, data collected inside the IoT system is 
available to other IoT systems. Still, the PCP monitors and secures these connections, enforcing the 
rules of access control defined at the moment of establishing connections with these “exterior” 
services. Being a policy enforcement point, the PCP permits the traffic flow, from end-point IoT 
devices, only to secure upper layer services (legitimate ECP entities). 
By being a central hub where different gateways interconnect, the PCP has mechanisms of 
ensuring secure communication links between gateways and itself or between users and the services 
Figure 1. The architecture of the proposed security framework.
3.1. Cloud Layer
As we mentioned before, the feature that links our proposed security framework with other
centralized IoT systems is the Cloud module that acts as an access point for users to connect to
diﬀerent services and as a management module for the underlying IoT system, but with reduced
capabilities. The Proposed Cloud Platform (PCP) was not designed as a replacement for the Existing
Cloud Platforms (ECP), but as a security “complement” for them, adding additional features to enforce
control over devices (behavior and data). Data is exchanged between these two Cloud platforms by
means of APIs exposed by the ECP. In this manner, we ensure that data coming from gateways is
ﬁltered so that the ECP does not receive corrupted information and that users obtain the correct results
when accessing services. Thus, the ﬁrst functionality from the reduced set that the PCP implements
is to be an element of overseeing and enforcing speciﬁc security rules and policies, meant to limit
the infusion of malicious data due to a rogue gateway. Aside from ﬁltering traﬃc ﬂows, the PCP
acts also as a service discovery module for the gateway and devices layers, by aggregating services
available on diﬀerent ECPs. As a mention, the services that are aggregated by the PCP are services that
are allowed by the administrators of the IoT environment and the underlying devices can be linked
to. By ensuring this service, data collected inside the IoT system is available to other IoT systems.
Still, the PCP monitors and secures these connections, enforcing the rules of access control deﬁned at
the moment of establishing connections with these “exterior” services. Being a policy enforcement
point, the PCP permits the traﬃc ﬂow, from end-point IoT devices, only to secure upper layer services
(legitimate ECP entities).
By being a central hub where diﬀerent gateways interconnect, the PCP has mechanisms of
ensuring secure communication links between gateways and itself or between users and the services
Sensors 2019, 19, 4038
6 of 20
it is conﬁgured to oﬀer. The security tokens needed to authenticate and authorize both users and
gateways are manually provided by an administrator, in the management interface of the PCP.
Besides these active tasks that employ the use of the PCP in diﬀerent scenarios of an IoT
environment, the PCP is mostly a passive component. This is because the main idea behind our PCP is
it to act as a repository integrating two main functionalities:
•
a central point where anomaly detection data and graphs created by gateways can converge and
oﬀer an integrated overview of the IoT environment;
•
a storage location in which valuable data (working data) gathered by the gateways can be pushed.
This data is being stored in diﬀerent areas, depending on the type of information it contains:
#
environmental data accessible to every requesting service;
#
historical data needed for reassessing the level of trust and reputation of each collector
node or sensor;
#
privacy-aware data consisting of information related to an individual or his habits. This
type of data has also assigned a certain tag, speciﬁc to each individual, as presented later
in the paper.
This repository is a central database that stores information provided by gateways that also query
and update this information based on their authorization levels. By querying this repository, gateways
can correctly choose trusted links to enable connections between IoT devices from areas that are distinct,
but connected in the same IoT system, as presented in Figure 2.
Sensors 2019, 19, x FOR PEER REVIEW 
6 of 20 
 
it is configured to offer. The security tokens needed to authenticate and authorize both users and 
gateways are manually provided by an administrator, in the management interface of the PCP. 
Besides these active tasks that employ the use of the PCP in different scenarios of an IoT 
environment, the PCP is mostly a passive component. This is because the main idea behind our PCP 
is it to act as a repository integrating two main functionalities: 
• 
a central point where anomaly detection data and graphs created by gateways can converge and 
offer an integrated overview of the IoT environment; 
• 
a storage location in which valuable data (working data) gathered by the gateways can be 
pushed. This data is being stored in different areas, depending on the type of information it 
contains: 
o  environmental data accessible to every requesting service; 
o  historical data needed for reassessing the level of trust and reputation of each collector node 
or sensor; 
o  privacy-aware data consisting of information related to an individual or his habits. This 
type of data has also assigned a certain tag, specific to each individual, as presented later in 
the paper. 
This repository is a central database that stores information provided by gateways that also 
query and update this information based on their authorization levels. By querying this repository, 
gateways can correctly choose trusted links to enable connections between IoT devices from areas 
that are distinct, but connected in the same IoT system, as presented in Figure 2. 
 
Figure 2. The architecture of the proposed Cloud platform. 
At this stage, the PCP is enabled only to store the above mentioned types of data and ensure 
secure access to it, without having the means of manipulating it. Still, if a certain degree of trust is 
ensured from the moment when the IoT environment is created and configured, the PCP could be 
extended to support methods of data integration and update, leading to the creation of a uniformed 
graph of anomalies detected across the entire IoT system. Even though this might bring an 
advantage in having an integrated overview of the devices’ anomaly detection characteristics, it 
implies also the use of the same or similar anomaly detection algorithms in each gateway, thus 
similar hardware configurations (easy to comply within a newly created IoT system, but harder in 
one that is updating an existing IoT environment). 
Figure 2. The architecture of the proposed Cloud platform.
At this stage, the PCP is enabled only to store the above mentioned types of data and ensure
secure access to it, without having the means of manipulating it. Still, if a certain degree of trust is
ensured from the moment when the IoT environment is created and conﬁgured, the PCP could be
extended to support methods of data integration and update, leading to the creation of a uniformed
graph of anomalies detected across the entire IoT system. Even though this might bring an advantage
in having an integrated overview of the devices’ anomaly detection characteristics, it implies also
the use of the same or similar anomaly detection algorithms in each gateway, thus similar hardware
Sensors 2019, 19, 4038
7 of 20
conﬁgurations (easy to comply within a newly created IoT system, but harder in one that is updating
an existing IoT environment).
3.2. Gateway Layer
Even though there are diﬀerent models of IoT networks, gateway-centric is one of the most
employed for health and social care applications.
One of the main advantages brought by the
gateway-centric model is that it consists of a central device that implements logic to coordinate the
IoT sensors. From the cost perspective, having a gateway-centric network allows deploying a ﬂeet of
sensors with limited capabilities, given the fact that the gateway can be used to oﬄoad both security
and data processing functions. The gateway is the element that links the end-point network segment
with the upstream network elements, executes translation from lightweight to classic communication
protocols or executes various security tasks like authentication, authorization and access control or
packet ﬁltering. The gateway can also act as a network access server on various layers: the gateway
can execute a Layer 2 Extensible Authentication Protocol (EAP) authentication, a Message Queuing
Telemetry Transport (MQTT) user/password based authentication or a custom authentication protocol
transported as Constrained Application Protocol (CoAP) payload. IoT gateways do not have the same
computational constraints as the end-point IoT devices, thus being suitable for oﬄoading certain
resource intensive tasks from the low-end devices, like security operations. Having a gateway-centric
model also brings a series of advantages in the overall IoT network economics, by reducing the latency
required to process IoT delivered data (real-time applications) and reducing the traﬃc between the
sensors and the Cloud back-end.
Being a central IoT network element, gateways need adequate protection mechanisms against
sophisticated DoS attacks in order to provide the network availability and to satisfy real-time constraints.
Taking advantage of the IoT gateway capabilities, various architectures transform this device into
a multi-tenant application hypervisor. For instance, the gateway can run an MQTT broker application
or a CoAP client which aggregates data from multiple sensors.
The gateway plays a central role in our IoT security framework, having two main tasks:
implementing a sensor anomaly detection module and a mechanism for an advanced network
packet ﬁltering. The previously mentioned IoT gateway tasks stress the necessity of implementing
a security control plane that allows the end-point IoT devices to transmit and receive the sensor
anomaly status and packet ﬁltering related commands and data.
ThearchitectureoftheproposedsecurityframeworkconsistsofagatewayandasuiteofIoTend-point
devices that enable security as a service structure. The security control plane between the end-point
devices and the gateway consists of a publish-subscribe protocol, which allows an energy-efficient
asynchronous communication path from the gateway to the nodes. The sensor anomaly detection control
plane consists of the following commands: publish data and acquire the anomaly status. The gateway
processes the anomaly detection requirement commands and executes the associated actions on the Cloud
platform side. When the IoT nodes are acquiring data, the gateway parses the published information
from the Cloud platform, it runs a sensor anomaly detection algorithm and delivers the status to the IoT
devices. The sensor anomaly detection module has the following elements:
•
The sub-module which is in charge of securing the communication between the gateway and the
Cloud platform;
•
The sub-module which secures the communication between the IoT end-nodes and the gateway;
•
The sub-module which computes the IoT sensor anomaly status.
In this security scheme, the Cloud platform has the role of a sensor data repository, storing
the IoT published data. The calculation of anomaly status is executed locally, on the gateway side,
the Cloud module being a passive element which does not allow any data modiﬁcation after the publish
event. The proposed IoT security framework employs a sensor anomaly detection algorithm module
with a well-deﬁned interface. Thus, the security framework abstracts the actual anomaly algorithm
Sensors 2019, 19, 4038
8 of 20
implementation, oﬀering only a plug-in module which allows running any type of anomaly detection
algorithm. The security framework acts as a software container that injects in a custom anomaly
detection algorithm implementation the input data collected from the Cloud platform. By adding
a generic sensor anomaly detection algorithm support, the IoT security framework addresses the
speciﬁc requirements of each deployment scenario.
Even though the IoT gateway is not a device with major resource constraints, the power
consumption should be taken into consideration when running a sensor anomaly detection algorithm.
In order to address this issue, we propose a Stochastic Petri Network (SPN) model of the gateway
power consumption. This is an abstract model that indicates the number of times the gateway ﬁnite
state machine enters a generic Process and Sleep state. In contrast to a ﬁnite state machine model
which comprises states and conditions which must be satisﬁed to transition from one state into another,
an SPN model consists of transitions, which are ﬁred following a stochastic paradigm, and states
(places) which hold the system resources. In our gateway model, the resources consist of requests
received by the gateway (real time/critical requests and best eﬀort requests which are held in the Queue,
Real-time queue and Best-eﬀort queue states) and execution resources (which are transitioned between
the Process and Sleep states).
The SPN model has two main purposes: limiting the sensor anomaly computing tasks when the
gateway has a low battery level and predicting the power consumption. More specifically, we propose
an SPN API that allows a developer to translate a power consumption formal model into a software
module that can be deployed on the gateway. As we have already shown in [23], an SPN model can
be used to estimate the power consumption of an IoT gateway. By using the SPN model, the gateway
administrator can make a prediction regarding the power consumption based on the network traffic
characteristics (e.g., number of requests per time interval). This can help in planning the IoT network
gateway provisioning and estimating maintenance operations. By having this planning, an administrator
can further estimate the costs associated with running and maintaining security and network functions
on edge IoT gateways. The proposed SPN power consumption model is a generic framework whose
output depends on the actual anomaly detection algorithm and on the underlying hardware platform.
An example of an SPN reputation power consumption model is depicted in Figure 3.
Sensors 2019, 19, x FOR PEER REVIEW 
8 of 20 
 
adding a generic sensor anomaly detection algorithm support, the IoT security framework addresses 
the specific requirements of each deployment scenario. 
Even though the IoT gateway is not a device with major resource constraints, the power 
consumption should be taken into consideration when running a sensor anomaly detection 
algorithm. In order to address this issue, we propose a Stochastic Petri Network (SPN) model of the 
gateway power consumption. This is an abstract model that indicates the number of times the 
gateway finite state machine enters a generic Process and Sleep state. In contrast to a finite state 
machine model which comprises states and conditions which must be satisfied to transition from 
one state into another, an SPN model consists of transitions, which are fired following a stochastic 
paradigm, and states (places) which hold the system resources. In our gateway model, the resources 
consist of requests received by the gateway (real time/critical requests and best effort requests which 
are held in the Queue, Real-time queue and Best-effort queue states) and execution resources (which 
are transitioned between the Process and Sleep states). 
The SPN model has two main purposes: limiting the sensor anomaly computing tasks when the 
gateway has a low battery level and predicting the power consumption. More specifically, we 
propose an SPN API that allows a developer to translate a power consumption formal model into a 
software module that can be deployed on the gateway. As we have already shown in [23], an SPN 
model can be used to estimate the power consumption of an IoT gateway. By using the SPN model, 
the gateway administrator can make a prediction regarding the power consumption based on the 
network traffic characteristics (e.g., number of requests per time interval). This can help in planning 
the IoT network gateway provisioning and estimating maintenance operations. By having this 
planning, an administrator can further estimate the costs associated with running and maintaining 
security and network functions on edge IoT gateways. The proposed SPN power consumption 
model is a generic framework whose output depends on the actual anomaly detection algorithm and 
on the underlying hardware platform. An example of an SPN reputation power consumption model 
is depicted in Figure 3. 
 
Figure 3. SPN power consumption model for sensor anomaly detection. 
As it can be observed in our generic SPN model, we have the following transitions: 
• 
RX - generates request messages for the gateway (using a random model). 
• 
Classify - it classifies the messages based on their priority. Given the healthcare context, there can 
be two types of messages: contextual messages which are handled following a best-effort 
paradigm and critical messages which are handled on a real-time basis. This transition does not 
follow a stochastic model and it is triggered for every change occurred in the Queue states. 
• 
Delegate - this transition has a hybrid behavior, having the next logic: 
Figure 3. SPN power consumption model for sensor anomaly detection.
As it can be observed in our generic SPN model, we have the following transitions:
•
RX—generates request messages for the gateway (using a random model).
•
Classify—it classiﬁes the messages based on their priority. Given the healthcare context, there
can be two types of messages: contextual messages which are handled following a best-eﬀort
Sensors 2019, 19, 4038
9 of 20
paradigm and critical messages which are handled on a real-time basis. This transition does not
follow a stochastic model and it is triggered for every change occurred in the Queue states.
•
Delegate—this transition has a hybrid behavior, having the next logic:
#
for every real-time message it executes a transition into the Process states (this behavior is
not stochastic);
#
if there are no real-time messages and if the execution is currently in the Process states, then
it executes a transition into the Sleep states with a probability given by Equation (1);
#
if there are no real-time messages and if the execution is currently in the Sleep states, then it
executes another transition into the Sleep states, with a probability given by Equation (1);
#
if none of the previously mentioned steps are executed, this transition extracts a best-eﬀort
message and moves the execution into the Process states.
These transitions are accompanied by ﬁve SPN states as follows:
•
Queue—accumulates both the critical and best eﬀort requests;
•
Real-time queue—accumulates the critical requests;
•
Best-eﬀort queue—accumulates the best-eﬀort requests;
•
Sleep—indicates the number of times the gateway transitions into a Sleep state;
•
Process—indicates the number of times the gateway transitions into a Process state. This is the
consumption intensive state which must be translated into a hardware dependent consumption metric.
Our SPN API allows introducing new states and transitions along with a custom transition
frequency function. In our tests, we have used a battery level dependent function for the Delegate
transition, as presented in Equation (1). This transition function uses as input both the gateway battery
level along with a random variable and returns a boolean value which indicates if the SPN transition
should be executed or not. If the Delegate transition is executed, the SPN machine moves into the
Sleep states, thus, according to Equation (1), if the battery level is low, the probability of transitioning
into the Sleep state increases:
delegate_func = f(battery_level, random_variable) = {True, random_variable >
battery_level, False otherwise}
(1)
Thus, a developer can model the power consumption of the IoT gateway in a custom manner
and obtain the application speciﬁc trade-oﬀ between security and availability. In Figure 4 it can be
observed that the number of transitions into the Sleep and Process states have a linear dependence on
the battery level: the number of transitions into the Process state is increasing along with a high battery
level, while the number of transitions into the Sleep state is increasing along with a low battery level.
Figure 4 consists of the following input data sets:
•
uniform distribution of real-time and best-eﬀort messages (Figure 4a);
•
best-eﬀort predominant messages which allow the system to increase the transitions into the Sleep
states (Figure 4b);
•
real-time predominant messages which force the system to increase the transitions into the Process
states (Figure 4c).
The results from Figure 4 measure only the number of times an SPN transition is executed based on
the input requests pattern. To further obtain actual power consumption metrics, the number of times
the Process transition is executed must be correlated with the actual anomaly detection algorithm and
hardware characteristics. One could obtain power consumption values by running the proposed SPN
framework on an energy aware hardware emulator.
Sensors 2019, 19, 4038
10 of 20
Sensors 2019, 19, x FOR PEER REVIEW 
10 of 20 
 
 
(a) 
 
(b) 
 
(c) 
 
Figure 4. SPN consumption model of the IoT Security Gateway: (a) Uniform distributed real 
time/best effort messages; (b) Best effort predominant message; (c) Real time predominant messages. 
In an IoT network, the gateway executes a suite of communication processes, which cover the 
entire network stack, starting with data layer protocols and ending with the application layer 
protocols. The gateway role is augmented in a publish-subscribe network because the gateway can 
be the module that relays the packets between end-point IoT devices. In a client-server IoT network 
topology, the gateway translates packet from a lightweight protocol, bridging the upper layer Cloud 
network segment with the end-point network segment. Taking into consideration these 
characteristics, the gateway becomes a multi-tenant device which can execute various security 
processes (e.g., authentication, network access, policy enforcement), given its central role in an IoT 
network. One of the most important attacks in IoT networks is the Denial of Service (DoS) which can 
be split into two main categories: 
• 
DoS on the end-point devices with the purpose of draining the battery and the availability of the 
device; 
• 
DoS on the gateway side with the purpose of affecting the availability of the IoT network or 
services. 
Our IoT security framework implements a packet filtering mechanism on the gateway side in 
order to mitigate DoS network attacks. The packet filtering module can cover all the networking 
stack layers, focusing on the Message Queuing Telemetry Transport (MQTT) / MQTT for Sensor 
Networks (MQTT-SN) and CoAP application layer protocols. The network filter layer consists of 
two sub-modules: the packet filter mechanism in the kernel side and the userspace filter component. 
The packet filtering on the kernel side is implemented using the Extended Berkeley Packet Filter 
(eBPF) technology. This technology allows deploying a lightweight network parser in the kernel 
Figure 4. SPN consumption model of the IoT Security Gateway: (a) Uniform distributed real time/best
eﬀort messages; (b) Best eﬀort predominant message; (c) Real time predominant messages.
In an IoT network, the gateway executes a suite of communication processes, which cover
the entire network stack, starting with data layer protocols and ending with the application layer
protocols. The gateway role is augmented in a publish-subscribe network because the gateway
can be the module that relays the packets between end-point IoT devices. In a client-server IoT
network topology, the gateway translates packet from a lightweight protocol, bridging the upper
layer Cloud network segment with the end-point network segment. Taking into consideration these
characteristics, the gateway becomes a multi-tenant device which can execute various security processes
(e.g., authentication, network access, policy enforcement), given its central role in an IoT network.
One of the most important attacks in IoT networks is the Denial of Service (DoS) which can be split
into two main categories:
•
DoS on the end-point devices with the purpose of draining the battery and the availability of
the device;
•
DoS on the gateway side with the purpose of aﬀecting the availability of the IoT network or services.
Our IoT security framework implements a packet ﬁltering mechanism on the gateway side in
order to mitigate DoS network attacks. The packet ﬁltering module can cover all the networking
stack layers, focusing on the Message Queuing Telemetry Transport (MQTT) / MQTT for Sensor
Networks (MQTT-SN) and CoAP application layer protocols. The network ﬁlter layer consists of
two sub-modules: the packet ﬁlter mechanism in the kernel side and the userspace ﬁlter component.
The packet ﬁltering on the kernel side is implemented using the Extended Berkeley Packet Filter (eBPF)
technology. This technology allows deploying a lightweight network parser in the kernel virtual
machine. The kernel network parser allows a rapid packet inspection which oﬀers the possibility of
Sensors 2019, 19, 4038
11 of 20
dropping or modifying packets. This mechanism allows the authenticated and authorized IoT nodes
to install custom ﬁltering instructions in the network ﬁlter virtual machine on the gateway side. Thus,
a low resource endpoint IoT device can oﬄoad the CPU intensive packet ﬁltering task on the gateway
side. By using this gateway delegated ﬁltering mechanism, an IoT device can save CPU cycles for its’
own system and for the gateway system, dropping malicious network packets in the earliest possible
stage. Such a dynamic security mechanism is suitable for mitigating MQTT attacks where a malicious
publisher device sends DoS packets to a subscriber device.
The packet ﬁltering architecture also uses an IoT node virtual instance on the gateway side, which
keeps the device state (e.g., ﬁltering commands, online state, etc.) and acts as a buﬀer between the
gateway and the physical IoT device. Each packet ﬁlter routine uses a suite of packet qualiﬁers (e.g.,
source IP address, MQTT identiﬁer, MQTT QoS value) which triggers the routine. A kernel space
ﬁltering mechanism requires the usage of an operating system (e.g., lightweight Linux), which can
be a drawback for bare-metal systems or for systems that are not eBPF compatible. To overcome
this drawback, the proposed IoT security framework implements a hybrid kernel/userspace ﬁltering
mechanism. The userspace ﬁltering mechanism is implemented as an application protocol security
module. The security module has a well-deﬁned interface and it is called by the core packet application
protocol daemon for each received packet. By using a packet ﬁltering interface, the module can be
easily replaced with a custom one without changing the core protocol implementation. The userspace
ﬁltering module consists of a collection of routines that can execute tasks like packet inspection
or accept/drop the packet based on the authentication/authorization state. Like the kernel ﬁltering
mechanism, the userspace module uses packet qualiﬁers that can lead to a packet reject action if they
are correlated with the sender/receiver authentication state. At the gateway side, the userspace ﬁltering
module can receive ﬁltering policies (ACL structure) from the endpoint nodes by using the secure
control communication channel. In a particular MQTT scenario, an endpoint IoT node can install the
following policies:
•
Packet rate limit which is correlated with the received (IoT node) battery level;
•
Asynchronous authentication of the publisher IoT device (the policy is installed by the subscriber
IoT device which wants to receive data only from trusted nodes);
•
Asynchronous authorization of the publisher IoT device;
•
Blacklisting nodes based on the protocol URI (e.g., MQTT client id);
•
Packet dropping based on diﬀerent qualiﬁes (e.g., header values, payload value).
Regarding the CoAP protocol, the gateway ﬁltering solution handles the CoAP proxy scenario.
Thus, the IoT framework permits installing security policies which authenticate both the CoAP server
and client and limits the rate of CoAP responses based on the client’s battery level. The CoAP rate
limiting capability addresses the multicast responses which can be easily used to execute a battery
drain attack. The gateway packet ﬁltering architecture is depicted in Figure 5.
The userspace and the kernel ﬁltering module are not mutually exclusive. Taking into consideration
the limitations of in-kernel eBPF network parsers (e.g., loop restrictions), our hybrid packet inspection
solution is a multi-stage ﬁltering solution. Thus, the complex part of the ﬁltering routine can be
installed on the userspace module (e.g., authentication/authorization veriﬁcation or querying other
modules when validating the packet). The simplest part of the ACL can be installed in the kernel
ﬁltering module, which achieves higher speeds and optimizations in the packet rejection process.
Our multi-stage ﬁltering mechanism also addresses the IoT TLS/DTLS encrypted traﬃc.
The in-kernel ﬁltering module does not have the TLS/DTLS session key, thus it cannot inspect
encrypted traﬃc payload. This scenario is addressed by the userspace ﬁltering module which is
attached to the application protocol process (e.g., MQTT broker process) and receives plain-text packets
that can be inspected normally (with the associated performance penalties of userspace ﬁltering).
Sensors 2019, 19, 4038
12 of 20
 
pp
g
q
g
p y
Regarding the CoAP protocol, the gateway filtering solution handles the CoAP proxy scenario. 
Thus, the IoT framework permits installing security policies which authenticate both the CoAP 
server and client and limits the rate of CoAP responses based on the client’s battery level. The CoAP 
rate limiting capability addresses the multicast responses which can be easily used to execute a 
battery drain attack. The gateway packet filtering architecture is depicted in Figure 5. 
 
Figure 5. The architecture of the gateway packet ﬁltering module.
Both the userspace and kernel security modules employ a cooperative ﬁltering paradigm between
the endpoint IoT nodes and the gateway, which addresses the dynamic character of IoT networks.
The software security module which runs on the gateway has a lightweight structure and it does
not rely on the underlying hardware capabilities, being suitable even for battery powered devices and
for applications that cannot beneﬁt from the gateway-centric model. Taking this into consideration,
the security functions deployed on the gateway can be executed on regular IoT nodes, thus addressing
other IoT network topologies than the gateway-centric ones. For instance, these security functions
could be executed by specially designated IoT nodes from a mesh or multi-hop routing topology.
3.3. IoT Device Layer
The outstanding feature of IoT devices is their ability to ensure system security using limited
resources. The endpoints are the most vulnerable to attacks because they are often installed in open
space environments and an attacker can gain physical access to them, leading to security breaches in
which the attacker can compromise the hardware and software conﬁgurations and alter the information
transmitted over the network. In this regard, the proposed architecture includes, at the device layer,
a remote attestation framework that has the role of checking the hardware and software conﬁguration.
Attestation is a mechanism for the gateway to measure the IoT end-point integrity and remove
the node from the network if compromised. Traditionally, remote attestation is achieved by means of
secure hardware, like Trusted Platform Module (TPM) incurring resource and monetary costs which are
not acceptable for the majority of IoT devices. Attestation can also be achieved using a software-only
solution, but this mechanism may not reach the desired security level of a particular IoT application.
There are also hybrid solutions that combine the previously mentioned mechanisms in order to obtain
a trade-oﬀ between the security level and the costs (including hardware complexity).
There are a series of papers that propose diﬀerent types of attestation solutions that can fall into
one of the three categories presented before. Since hardware-based remote attestation has a greater
cost than the remaining two categories, we will focus mainly on software or hybrid solutions. In [24]
authors have proposed a software-based technique that takes advantage of specially designed functions
that will have a diﬀerent way of executing if an attacker tries to modify it, introducing extra delays,
therefore any alteration of the base software image will be detected and reported. Following the
hybrid approach, in [25] the authors proposed the Secure and Minimal Architecture for (establishing
a dynamic) Root of Trust (SMART), through which they use the properties of the Read-Only Memory
(ROM) module found in majority of low-end microcontroller unit (MCU) architectures to replicate
a few of the features that a TPM has (e.g., secure key storage area, reserved zone for attestation code
or access control for enforcing the protection of specially deﬁned areas). Another proposal is given
in [26] and consists of a technique that uses Physically Unclonable Functions (PUF) to detect any
Sensors 2019, 19, 4038
13 of 20
variation in the ﬂow of function execution, by beneﬁting of side-eﬀects in the processor manufacturing
to generate unique hardware outputs for each input. For IoT devices that are running a lightweight
Linux operating system, there are also mechanisms like Integrity Measurement Architecture (IMA)
that can attest the system run-time integrity. Linux IMA can also be integrated with a TPM in order to
compare the run-time integrity value with a data source that cannot be modiﬁed.
The proposed attestation framework has a generic structure that implements a secure message
protocol and relies on an external module for obtaining the integrity measurements (e.g., TPM, Linux
IMA). Whenever the gateway wants to check the integrity of a node, it sends a Node Attestation
Request (NAR) message to the IoT device. The NAR message consists of a nonce and an Hash-based
Message Authentication Code (HMAC) signature, computed over the nonce value, using a pre-shared
key established between the endpoint device and the gateway during the device enrollment phase.
After receiving the NAR message, the node validates it by verifying the HMAC signature, thus
mitigating DoS attacks where a malicious entity sends multiple attestation requests to the device
in order to exhaust the computing/energy resources of the node. If the NAR message is validated,
the endpoint device executes the attestation measurements by means of an external module (e.g.,
methods mentioned at the beginning of this subsection). After obtaining the integrity measurement
values, the endpoint device sends to the gateway a Node Attestation Measurement (NAM) message
which consists of integrity measurement values along with an HMAC signature, computed over the
integrity measurement values concatenated with the nonce received from the gateway. The HMAC
signature of the NAM message is computed using the same pre-shared private key, established between
the IoT device and the gateway. The gateway validates the HMAC signature of the NAM packet (using
the request nonce and the pre-shared key) and checks if the integrity measurement values are the same
with the values stored on the gateway side. If the signature is invalid or the integrity measurement
values are incorrect, the gateway marks the device as compromised and ceases any communication
with it. The attestation state machine on the IoT device and gateway side take into consideration
a connectionless transport protocol, sending the messages multiple times before transitioning into
an error state. The remote attestation message protocol is presented in Figure 6.
Sensors 2019, 19, x FOR PEER REVIEW 
13 of 20 
 
Another proposal is given in [26] and consists of a technique that uses Physically Unclonable 
Functions (PUF) to detect any variation in the flow of function execution, by benefiting of 
side-effects in the processor manufacturing to generate unique hardware outputs for each input. For 
IoT devices that are running a lightweight Linux operating system , there are also mechanisms like 
Integrity Measurement Architecture (IMA) that can attest the system run-time integrity. Linux IMA 
can also be integrated with a TPM in order to compare the run-time integrity value with a data 
source that cannot be modified. 
The proposed attestation framework has a generic structure that implements a secure message 
protocol and relies on an external module for obtaining the integrity measurements (e.g., TPM, 
Linux IMA). Whenever the gateway wants to check the integrity of a node, it sends a Node 
Attestation Request (NAR) message to the IoT device. The NAR message consists of a nonce and an 
Hash-based Message Authentication Code (HMAC) signature, computed over the nonce value, 
using a pre-shared key established between the endpoint device and the gateway during the device 
enrollment phase. After receiving the NAR message, the node validates it by verifying the HMAC 
signature, thus mitigating DoS attacks where a malicious entity sends multiple attestation requests 
to the device in order to exhaust the computing/energy resources of the node. If the NAR message is 
validated, the endpoint device executes the attestation measurements by means of an external 
module (e.g., methods mentioned at the beginning of this subsection). After obtaining the integrity 
measurement values, the endpoint device sends to the gateway a Node Attestation Measurement 
(NAM) message which consists of integrity measurement values along with an HMAC signature, 
computed over the integrity measurement values concatenated with the nonce received from the 
gateway. The HMAC signature of the NAM message is computed using the same pre-shared private 
key, established between the IoT device and the gateway. The gateway validates the HMAC 
signature of the NAM packet (using the request nonce and the pre-shared key) and checks if the 
integrity measurement values are the same with the values stored on the gateway side. If the 
signature is invalid or the integrity measurement values are incorrect, the gateway marks the device 
as compromised and ceases any communication with it. The attestation state machine on the IoT 
device and gateway side take into consideration a connectionless transport protocol, sending the 
messages multiple times before transitioning into an error state. The remote attestation message 
protocol is presented in Figure 6. 
 
Figure 6. The architecture of the Remote Node Attestation Module. 
Through the dynamic approach of the gateway to node profiling and suspicious behavior 
detection, devices are continuously monitored and in case a device seems to have been 
compromised, then the gateway can request the starting of the attestation cycle. Abnormal behavior 
of the nodes can be detected by inbound and outbound traffic analysis. A node that no longer 
Figure 6. The architecture of the Remote Node Attestation Module.
Through the dynamic approach of the gateway to node proﬁling and suspicious behavior detection,
devices are continuously monitored and in case a device seems to have been compromised, then the
gateway can request the starting of the attestation cycle. Abnormal behavior of the nodes can be
detected by inbound and outbound traﬃc analysis. A node that no longer performs its tasks or starts
Sensors 2019, 19, 4038
14 of 20
making forbidden connections can be suspected that is under the direct control of an attacker. In this
case, the gateway sends to the node a veriﬁcation request and the latter starts the attestation cycle.
Regarding the security of the communication channel, messages between IoT devices and gateway
may be protected using an Integrity Check Value (ICV), which consists of an HMAC computed over
the message payload. The ICV ﬁeld usage allows detection of packet tampering and replay attacks,
which could allow an attacker to manipulate the sensor aggregated information. The HMAC algorithm
employs the aforementioned pre-shared key between the endpoint device and the gateway.
The proposed security framework also takes into consideration the privacy required by speciﬁc
user-related data. If data is mainly collected through a group of body sensors interconnected in a BAN
that has a speciﬁc sink through which data is exported to gateways, we can consider that sink as
a collector node. For enforcing the anonymization of data being sent to gateways and upper levels in
the framework, the collector node is initialized for each new individual with a diﬀerent tag that will
be associated with all data collected and sent by that node. This tag will be generated based on the
person’s identity features (social security number, name, and age) that will be fed as input to a hash
function, to ensure the randomness of the tag. By creating the tag in this manner, any future data
associated with a person can be processed without employing the user’s identity. Also, through the
tag, we create a decoupling of data and a person’s identity, without aﬀecting any of the functionality
oﬀered by the IoT system.
Considering the limited resources that an IoT device has, it is very important to carefully monitor
them, because an overload of a node can lead to lower computational performance or inactivity. In the
proposed architecture, every node implements a module in charge of monitoring the load level in order
to optimize the use of resources such as memory loading, CPU usage or battery level. Any exceeding
of acceptable performance thresholds that can slow down the system will be managed at the gateway
layer by adapting traﬃc and activities in order to improve the distribution of workloads across the
system elements.
When the gateway receives an alert from the node about its status, it will update the security
policies and forward the information to the node, which in turn will call the policy update agent
installed at its level. The policy update agent can also be called by the node when it detects that the
preset thresholds are exceeded. In this case, the node initiates the process of updating security policies
by sending a request to the gateway (see Figure 7).
Sensors 2019, 19, x FOR PEER REVIEW 
14 of 20 
 
performs its tasks or starts making forbidden connections can be suspected that is under the direct 
control of an attacker. In this case, the gateway sends to the node a verification request and the latter 
starts the attestation cycle. 
Regarding the security of the communication channel, messages between IoT devices and 
gateway may be protected using an Integrity Check Value (ICV), which consists of an HMAC 
computed over the message payload. The ICV field usage allows detection of packet tampering and 
replay attacks, which could allow an attacker to manipulate the sensor aggregated information. The 
HMAC algorithm employs the aforementioned pre-shared key between the endpoint device and the 
gateway. 
The proposed security framework also takes into consideration the privacy required by specific 
user-related data. If data is mainly collected through a group of body sensors interconnected in a 
BAN that has a specific sink through which data is exported to gateways, we can consider that sink 
as a collector node. For enforcing the anonymization of data being sent to gateways and upper levels 
in the framework, the collector node is initialized for each new individual with a different tag that 
will be associated with all data collected and sent by that node. This tag will be generated based on 
the person’s identity features (social security number, name, and age) that will be fed as input to a 
hash function, to ensure the randomness of the tag. By creating the tag in this manner, any future 
data associated with a person can be processed without employing the user’s identity. Also, through 
the tag, we create a decoupling of data and a person’s identity, without affecting any of the 
functionality offered by the IoT system. 
Considering the limited resources that an IoT device has, it is very important to carefully 
monitor them, because an overload of a node can lead to lower computational performance or 
inactivity. In the proposed architecture, every node implements a module in charge of monitoring 
the load level in order to optimize the use of resources such as memory loading, CPU usage or 
battery level. Any exceeding of acceptable performance thresholds that can slow down the system 
will be managed at the gateway layer by adapting traffic and activities in order to improve the 
distribution of workloads across the system elements. 
When the gateway receives an alert from the node about its status, it will update the security 
policies and forward the information to the node, which in turn will call the policy update agent 
installed at its level. The policy update agent can also be called by the node when it detects that the 
preset thresholds are exceeded. In this case, the node initiates the process of updating security 
policies by sending a request to the gateway (see Figure 7). 
 
Figure 7. The architecture of the Node Status Monitoring Module. 
3.4. Management Layer 
Figure 7. The architecture of the Node Status Monitoring Module.
Sensors 2019, 19, 4038
15 of 20
3.4. Management Layer
In order to oﬀer a complete security framework architecture, for the user level we have proposed
a web application as a management tool. The web application allows the security administrator,
through the graphical interface, to enable packet ﬁltering policies or to create a blacklist with devices
that are not taken into account when the anomaly detection score is computed. Regarding the sensor
anomaly detection process, the security administrator can set certain parameters for monitoring the
process and alerting him whenever a triggered parameter is activated, for example when the maximum
value is reached, then the data is transmitted to the web application and the administrator can analyze
it and take action.
The web application can be also considered the logging center of the IoT system. The logs from the
nodes reach the gateway which will redirect them to the web platform, thus the logs will be available
for the security administrator. In order to address the incompatibility issues with existing proprietary
solutions, the web platform interacts with gateways using Representational State Transfer (REST) calls
secured by the TLS protocol.
Through the web application, the security administrator can monitor and keep track of packet
streams, having the possibility to view the rate at which packages are processed. The packet processing
rate allows the security administrator to evaluate, in real time, the eﬀectiveness of the installed ﬁltering
policies and to observe the pattern of a DoS attack.
4. Testing and Results Analysis
In realizing the proof-of-concept for diﬀerent modules of our proposed security framework,
we used open-source components that oﬀered a proven solution at a speciﬁc layer of the architecture
while enabling various customizations needed to implement the functionality described in the previous
section. For managing connections and enforcing the monitoring and access control features of the
Cloud module, we integrated a Zuul proxy solution, through which we can implement security
rules. Acting as a service aggregator, the Zuul proxy empowered the use of ﬁltering mechanisms
on packets and the implementation of the service discovery mechanism described in the previous
section. The passive component of the Cloud module, namely the ambient environment repository,
needs to store information in a structure similar to a graph. Considering this, we chose to implement
the repository using a Not Only Structured Query Language (NoSQL) solution and picked MongoDB
for this purpose, given its maturity and the availability of drivers for several programming languages,
such as C++ and Java.
For the core gateway security framework implementation we used Eclipse Kura which interacts with
other local systems (e.g., Mosquitto MQTT broker) by means of IPC mechanisms. Thus, our reputation
and SPN consumption modules are deployed as Kura OSGi containers. For the Cloud interaction, we used
the regular Java Jetty HyperText Transfer Protocol (HTTP) client for consuming REST services exposed by
the Cloud module: sensing data publishing, sensing data retrieval. Regarding the communication stack,
we used separate IoT protocol daemons like Mosquitto for MQTT broker, Eclipse Paho for MQTT-SN
and Eclipse Californium for the CoAP server.
As stressed in the previous section, packet ﬁltering is a complex task that cannot be executed
by resource constrained endpoint IoT devices. This process needs continuous optimizations even
on the gateway side in order to reduce security allocated resources (CPU cycles, memory). Given
that IoT network applications require low-latency communications, a DoS attack could be executed
even if the gateway allocates resources for dropping the malicious packets, thus being unable to
dispatch the legitimate packets in the required time frame. In order to evaluate the packet ﬁltering
module for our gateway side IoT framework, we tested a scenario where an attacker executes a DoS
using the MQTT-SN protocol. IoT gateways are usually low-cost devices deployed at the edge of
the network. These devices are not equipped with advanced hardware based ﬁltering modules like
Application-Speciﬁc Integrated Circuits (ASIC), Field Programmable Gate Arrays (FPGA) or Intelligent
Network Interface Controllers (SmartNIC). Considering these characteristics, the gateway ﬁltering
Sensors 2019, 19, 4038
16 of 20
solutions must be executed exclusively in software, either in the kernel or in userspace. Kernel ﬁltering
solutions bring the advantage of dropping a malicious packet in the earliest stage of the network data
processing pipeline. Thus, a kernel based early packet drop mechanism saves resources because kernel
packet (e.g., Linux skb structure) data structures will not be allocated and the receiver process will not
be scheduled, thus avoiding important context switch penalties. A kernel packet ﬁlter module brings
the drawback of complex development and the security risks of compromising or crashing the system
when deploying an untrusted kernel module. The userspace ﬁltering solutions bring more ﬂexibility
in terms of packet processing with the penalties of costly operating system context switches. In the
case of DoS attacks, the system is delayed by executing multiple context switches, being unable to
process packets in the required time frame.
A typical MQTT-SN scenario consists of IoT sensors that transmit information to a central broker,
using MQTT-SN PUBLISH, via a transparent or aggregator gateway. In our experiments, we simulated
an MQTT-SN PUBLISH DoS attack, where a malicious device tries to allocate the gateway ﬁltering
resources in order to block the legitimate packet processing. The implementation consists of a dynamic
kernel based MQTT-SN ﬁltering solution, using the eBPF technology. More speciﬁcally, we used the
eXpress Data Path (XDP) / Iovisor open-source project which allows programming the Linux kernel
network data path using eBPF instructions generated from C programs (using the clang compiler).
Our implementation uses the BPF Compiler Collection (BCC) framework, which allows injecting
the in-kernel eBPF instructions using a python front-end. For keeping a session on the kernel ﬁlter
module and for collecting statistics, we used eBPF maps to communicate between the controller and
the ﬁlter module. For the MQTT-SN gateway, we used the Eclipse Paho MQTT-SN project, which
was integrated with our userspace ACL module. We simulated an attack scenario where one or
more IoT devices are compromised and used by the attack coordinator to execute DoS actions on the
gateway side, by sending a continuous ﬂow of MQTT-SN PUBLISH packets. For the client (attacker)
which ﬂoods the network with MQTT-SN PUBLISH packets, we also used the Eclipse Paho libraries.
In a ﬁrst experiment, we measured the number of dropped packets per second, by using the XDP
kernel ﬁlter and the userspace module. For obtaining the kernel packet drop statistics, we used an eBPF
array to store the values and a Python script which polls the module every second. For our testing
scenario, we dropped MQTT-SN packets based on the QoS value, a protocol feature that can be easily
exploited by an attacker. In Figure 8 is presented the MQTT-SN drop rate per second, when using
a kernel XDP packet ﬁlter compared with a userspace packet ﬁlter. As it can be observed, the traﬃc
drop process follows the same pattern, with the XDP kernel drop rate being 60k packet higher than the
userspace alternative. The results for this test case were obtained after the attacker device sent 100
million MQTT-SN packets.
Sensors 2019, 19, x FOR PEER REVIEW 
16 of 20 
resources because kernel packet (e.g., Linux skb structure) data structures will not be allocated and 
the receiver process will not be scheduled, thus avoiding important context switch penalties. A 
kernel packet filter module brings the drawback of complex development and the security risks of 
compromising or crashing the system when deploying an untrusted kernel module. The userspace 
filtering solutions bring more flexibility in terms of packet processing with the penalties of costly 
operating system context switches. In the case of DoS attacks, the system is delayed by executing 
multiple context switches, being unable to process packets in the required time frame. 
A typical MQTT-SN scenario consists of IoT sensors that transmit information to a central 
broker, using MQTT-SN PUBLISH, via a transparent or aggregator gateway. In our experiments, we 
simulated an MQTT-SN PUBLISH DoS attack, where a malicious device tries to allocate the gateway 
filtering resources in order to block the legitimate packet processing. The implementation consists of 
a dynamic kernel based MQTT-SN filtering solution, using the eBPF technology. More specifically, 
we used the eXpress Data Path (XDP) / Iovisor open-source project which allows programming the 
Linux kernel network data path using eBPF instructions generated from C programs (using the 
clang compiler). Our implementation uses the BPF Compiler Collection (BCC) framework , which 
allows injecting the in-kernel eBPF instructions using a python front-end. For keeping a session on 
the kernel filter module and for collecting statistics, we used eBPF maps to communicate between 
the controller and the filter module. For the MQTT-SN gateway, we used the Eclipse Paho 
MQTT-SN project, which was integrated with our userspace ACL module. We simulated an attack 
scenario where one or more IoT devices are compromised and used by the attack coordinator to 
execute DoS actions on the gateway side, by sending a continuous flow of MQTT-SN PUBLISH 
packets. For the client (attacker) which floods the network with MQTT-SN PUBLISH packets, we 
also used the Eclipse Paho libraries. In a first experiment, we measured the number of dropped 
packets per second, by using the XDP kernel filter and the userspace module. For obtaining the 
kernel packet drop statistics, we used an eBPF array to store the values and a Python script which 
polls the module every second. For our testing scenario, we dropped MQTT-SN packets based on 
the QoS value, a protocol feature that can be easily exploited by an attacker. In Figure 8 is presented 
the MQTT-SN drop rate per second, when using a kernel XDP packet filter compared with a 
userspace packet filter. As it can be observed, the traffic drop process follows the same pattern, with 
the XDP kernel drop rate being 60k packet higher than the userspace alternative. The results for this 
test case were obtained after the attacker device sent 100 million MQTT-SN packets. 
 
Figure 8. Drop packet rate (per second), in a DoS attack scenario. 
In Figure 9 are presented the results of a second test case, where we analyze the rate of 
processed packets per second in a case of DoS attack. The DoS attack scenario consists of a malicious 
device that sends 100 million MQTT-SN packets with a QoS value of 1 and a legitimate device that 
sends the same number of packets with a QoS value of 0. As it can be observed, when the gateway 
uses the XDP kernel filtering method, it can process 20 k more legitimate packets, than when using 
the userspace alternative. 
Figure 8. Drop packet rate (per second), in a DoS attack scenario.
In Figure 9 are presented the results of a second test case, where we analyze the rate of processed
packets per second in a case of DoS attack. The DoS attack scenario consists of a malicious device
Sensors 2019, 19, 4038
17 of 20
that sends 100 million MQTT-SN packets with a QoS value of 1 and a legitimate device that sends
the same number of packets with a QoS value of 0. As it can be observed, when the gateway uses
the XDP kernel ﬁltering method, it can process 20 k more legitimate packets, than when using the
userspace alternative.
Sensors 2019, 19, x FOR PEER REVIEW 
17 of 20 
 
Figure 9. Processed packet rate (per second) in a DoS attack scenario. 
As noted in Section 3.3, before starting any data transfer, the gateway executes a remote 
attestation protocol with the IoT device. To validate the gateway attestation state machine, we 
simulated a compromised IoT device by tampering the attestation response packet and by delivering 
a wrong integrity measurement hash. 
The DoS attack experimental results show that our proposed method drastically improves the 
packet drop rate, without requiring any dedicated hardware. Such a solution permits deploying 
off-the-shelf low cost gateways that can handle the security and network functions for the associated 
IoT network. This brings flexibility in choosing the hardware equipment to be installed on the IoT 
network edge. Also, by removing the necessity of having dedicated hardware for packet filtering 
(e.g., ASICs), the power consumption on the gateway side is significantly reduced. Implementing 
the security filtering functions in software also brings flexibility in terms of software updates, taking 
into consideration the continuously changing IoT attack techniques. In contrast, while ASIC filtering 
mechanism can provide a better performance in dropping packets, changing a hardware generation 
brings increased costs and delays, which can be unacceptable for the agility of IoT markets. 
5. Conclusions and Future Work 
IoT development is a complex task, due to the multitude of elements which compose an IoT 
system, thus a standard framework accelerates considerably the time to market of an IoT product. 
Moreover, the importance of an IoT security framework is augmented in the current context, taking 
into consideration that IoT devices operate with user private data and that mature IoT security 
solutions can increase the IoT technology adoption. Our security framework targets all the layers of 
an IoT application: end-point network, gateway/edge, Cloud and management, trying to offer an 
all-in-one solution for designing an IoT security system. 
The proposed security framework was designed to be deployed on low-cost commodity IoT 
hardware. It does not rely on dedicated hardware for executing security and network functions 
offload, trying to meet a trade-off between performance and costs, as presented in the experimental 
results section. The experimental results analyze both functional aspects (power consumption 
model) and security aspects (DoS attacks mitigation mechanism) in order to validate one of the main 
characteristics of our system: a high availability security platform. This characteristic is critical for 
ambient intelligence applications that need to rely on a highly available infrastructure that must 
provide security functions. Costs and flexibility are also two important characteristics of an ambient 
intelligence application infrastructure, which are addressed by our system, taking into consideration 
that the security and network edge devices have high costs in terms of acquisition/deployment and 
maintenance. Also, given the fact that our solution is implemented using software-only functions, 
the system can be easily updated in order to meet the dynamic of the IoT security landscape, where 
new attacks and vulnerabilities are discovered frequently. 
Figure 9. Processed packet rate (per second) in a DoS attack scenario.
AsnotedinSection3.3,beforestartinganydatatransfer,thegatewayexecutesaremoteattestationprotocol
with the IoT device. To validate the gateway attestation state machine, we simulated a compromised IoT
device by tampering the attestation response packet and by delivering a wrong integrity measurement hash.
The DoS attack experimental results show that our proposed method drastically improves the
packet drop rate, without requiring any dedicated hardware. Such a solution permits deploying
oﬀ-the-shelf low cost gateways that can handle the security and network functions for the associated
IoT network. This brings ﬂexibility in choosing the hardware equipment to be installed on the IoT
network edge. Also, by removing the necessity of having dedicated hardware for packet ﬁltering
(e.g., ASICs), the power consumption on the gateway side is signiﬁcantly reduced. Implementing
the security ﬁltering functions in software also brings ﬂexibility in terms of software updates, taking
into consideration the continuously changing IoT attack techniques. In contrast, while ASIC ﬁltering
mechanism can provide a better performance in dropping packets, changing a hardware generation
brings increased costs and delays, which can be unacceptable for the agility of IoT markets.
5. Conclusions and Future Work
IoT development is a complex task, due to the multitude of elements which compose an IoT
system, thus a standard framework accelerates considerably the time to market of an IoT product.
Moreover, the importance of an IoT security framework is augmented in the current context, taking into
consideration that IoT devices operate with user private data and that mature IoT security solutions
can increase the IoT technology adoption. Our security framework targets all the layers of an IoT
application: end-point network, gateway/edge, Cloud and management, trying to oﬀer an all-in-one
solution for designing an IoT security system.
The proposed security framework was designed to be deployed on low-cost commodity IoT
hardware. It does not rely on dedicated hardware for executing security and network functions oﬄoad,
trying to meet a trade-oﬀ between performance and costs, as presented in the experimental results
section. The experimental results analyze both functional aspects (power consumption model) and
security aspects (DoS attacks mitigation mechanism) in order to validate one of the main characteristics
of our system: a high availability security platform. This characteristic is critical for ambient intelligence
applications that need to rely on a highly available infrastructure that must provide security functions.
Costs and ﬂexibility are also two important characteristics of an ambient intelligence application
infrastructure, which are addressed by our system, taking into consideration that the security and
Sensors 2019, 19, 4038
18 of 20
network edge devices have high costs in terms of acquisition/deployment and maintenance. Also,
given the fact that our solution is implemented using software-only functions, the system can be
easily updated in order to meet the dynamic of the IoT security landscape, where new attacks and
vulnerabilities are discovered frequently.
Concerning the security attacks, based on the experimental results, we can conclude that our
system is resilient to DoS attacks and to energy exhaustion attacks. The simulated DoS attack consists
of one or more compromised IoT devices that send malicious network packets to the gateway, this
attack being handled at the gateway side by dropping packets in an optimized manner while serving
normal requests. The energy exhaustion attack is also handled at the gateway side by the SPN power
consumption model which delays, in a stochastic manner, the execution of the anomaly detection
algorithm when the gateway’s battery is low.
Regarding our future work, we plan to integrate and test various reputation algorithms to oﬀer
a suite of default algorithms which can address various IoT interactions model, like Barabasi-Albert,
Watts-Strogatz or random. Another research direction is extending our security framework with
a Linux Containers (LXC) manager in order to allow endpoint IoT devices to run complex ﬁltering
applications on the gateway side. Taking into consideration that a Trusted Execution Environment
(TEE) is important in the IoT context, mainly because of the deployment scenario (e.g., low physical
protection, third-party software), we also plan to add a TEE compatible abstract software module.
The TEE aware module will allow our IoT security framework to be integrated with TEE hardware
and as a default implementation, we plan to use OpenTEE. Regarding our packet ﬁlter solution,
we plan to integrate our security framework with an eBPF aware SmartNIC which can oﬄoad the
gateway CPU from the ﬁltering process while providing the same ﬂexibility as our in-kernel packet
protection mechanism.
From the anomaly detection point of view, we plan to implement and test an algorithm based on
the prediction of node value and afterward use the predicted value to detect potential data anomalies.
Our goal is to implement a Sequential Minimal Optimization (SMO) Regression, which is the most
suitable prediction method for healthcare [4], and to catch the error by comparing the values with
a dynamic threshold. A dynamic value for the threshold is eﬃcient in healthcare systems because of
tracked parameters which may vary depending on the activity that the person undertakes. The threshold
will be determined using the sliding window algorithm.
In this paper, we presented a modular IoT security framework for ambient intelligence environment
which addresses all the IoT application layers and targets various security areas. This framework aims
to be platform independent and it can be integrated with third-party IoT platforms, separating the
security tasks from the functional processes.
Author Contributions: Conceptualization and methodology, I.B., B.-C.C., S.-C.A. and I.M.; formal analysis, I.B.,
B.-C.C., S.-C.A. and I.M.; software and validation, B.-C.C., S.-C.A. and I.M.; writing—original draft preparation,
I.B., B.-C.C., S.-C.A and I.M.; writing—review and editing, I.B., B.-C.C., S.-C.A and I.M.; supervision and funding
acquisition, I.B.
Funding: This work was supported by a grant of the Romanian Ministry of Research and Innovation, CCCDI –
UEFISCDI, project number PN-III-P1-1.2-PCCDI-2017-0272/Avant-garde Technology Hub for Advanced Security
(ATLAS), within PNCDI III.
Acknowledgments: The authors would like to thank the reviewers for all useful and helpful comments on
our manuscript.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1.
Ammar, M.; Russello, G.; Crispo, B. Internet of Things: A survey on the security of IoT frameworks. J. Inf.
Secur. Appl. 2018, 38, 8–27. [CrossRef]
2.
Gordana, G.; Mladen, V.; Nebojsa, M.; Dragan, V. The IoT architectural framework, design issues and
application domains. Wirel. Pers. Commun. 2017, 92, 127–148. [CrossRef]
Sensors 2019, 19, 4038
19 of 20
3.
Bandyopadhyay, D.; Sen, J. Internet of things: Applications and challenges in technology and standardization.
Wirel. Pers. Commun. 2011, 58, 49–69. [CrossRef]
4.
Haque, S.A.; Rahman, M.; Aziz, S.M. Sensor anomaly detection in wireless sensor networks for healthcare.
Sensors 2015, 15, 8764–8786. [CrossRef] [PubMed]
5.
Bauer, M.; Boussard, M.; Bui, N.; Carrez, F.; Jardak, C.; De Loof, J.; Magerkurth, C.; Meissner, S.; Nettstater, A.;
Olivereau, A.; et al. Internet of things—Architecture IOT-A Deliverable D1.5—Final architectural reference
model for the IoT v3.0. Available online: https://iotforum.org/wp-content/uploads/2014/10/D1.5.pdf (accessed
on 3 August 2019).
6.
FiWARE—Security Architecture. Available online: https://forge.ﬁware.org/plugins/mediawiki/wiki/ﬁware/
index.php/Security_Architecture (accessed on 3 August 2019).
7.
Oliveira, L.M.L.; Rodrigues, J.P.C.; De Sausa, A.F.; Lloret, J. A network access control framework for
6LoWPAN networks. Sensors 2013, 13, 1210–1230. [CrossRef] [PubMed]
8.
Saleem, S.; Ullah, S.; Kwak, K.S. A study of IEEE 802.15.4 security framework for wireless body area networks.
Sensors 2011, 11, 1383–1395. [CrossRef] [PubMed]
9.
Eder, T.; Nachtmann, D.; Schreckling, D. Trust and Reputation in the Internet of Things; Tech. Rep.; Universitat
Passau: Passau, Germany, 2013.
10.
Zimmerman, T.G. Personal area networks: Near-ﬁeld intrabody communication. IBM Syst. J. 1996, 35,
609–617. [CrossRef]
11.
Dam, K.V.; Pitchers, S.; Barnard, M. From PAN to BAN: why body area networks? In Proceedings of the
Wireless World Research Forum (WWRF) Second Meeting, Nokia Research Centre, Helsinki, Finland, 10–11
May 2001.
12.
Nielsen, M.; Krukow, K.; Sassone, V. A bayesian model for event-based trust. Electron. Notes Theor. Comput.
Sci. 2007, 172, 499–521. [CrossRef]
13.
Yaun, J.; Zhou, H.; Chen, H. SLAD: Subjective logic anomaly detection framework in wireless sensor
networks. Int. J. Distrib. Sens. Netw. 2011, 8, 1–21. [CrossRef]
14.
Honjun, D.; Zhiping, J.; Xiaona, D. An entropy-based trust modeling and evaluation for wireless sensor
networks. In Proceedings of the International Conference on Embedded Software and Systems, Sichuan,
China, 29–31 July 2008; pp. 27–34. [CrossRef]
15.
Hong, L.; Jiaming, T.; Yan, S. Entropy-based trust management for data collection in wireless sensor networks.
In Proceedings of the 5th International Conference on Wireless Communications, Networking and Mobile
Computing, Beijing, China, 24–26 September 2009; pp. 1–4. [CrossRef]
16.
Mármol, F.G.; Pérez, G.M. Providing trust in wireless sensor networks using a bio-inspired technique.
Telecommun. Syst. 2011, 46, 163–180. [CrossRef]
17.
Marzi, H.; Li, M. An enhanced bio-inspired trust and reputation model for wireless sensor network. Proced.
Comput. Sci. 2013, 19, 1159–1166. [CrossRef]
18.
Marti, S.; Garcia-Molina, H. Taxonomy of trust: Categorizing P2P reputation systems. Comput. Netw. 2006,
50, 472–484. [CrossRef]
19.
Mármol, F.G.; Pérez, G.M. Towards pre-standardization of trust and reputation models for distributed and
heterogeneous systems. Comput. Stand. Interfaces 2010, 32, 185–196. [CrossRef]
20.
Khalid, O.; Khan, S.U.; Madani, S.A.; Hayat, K.; Khan, M.I. Comparative study of trust and reputation
systems for wireless sensor networks. Secur. Commun. Netw. 2013, 6, 669–688. [CrossRef]
21.
Alswailim, M.A.; Hassanein, H.S.; Zulkernine, M. A reputation system to evaluate participants for
participatory sensing. In Proceedings of the 2016 IEEE Global Communications Conference (GLOBECOM),
Washington, DC, USA, 4–8 December 2016; pp. 1–6. [CrossRef]
22.
Shareef, A.; Zhu, Y. Energy modeling of wireless sensor nodes based on petri nets. In Proceedings of the 39th
International Conference on Parallel Processing, San Diego, CA, USA, 13–16 September 2010; pp. 101–110.
[CrossRef]
23.
Chifor, B.C.; Bica, I.; Patriciu, V.V. Sensing service architecture for smart cities using social network platforms.
Soft Comput. 2017, 21, 4513–4522. [CrossRef]
24.
Seshadri, A.; Luk, M.; Shi, E.; Perrig, A.; Van Doorn, L.; Khosla, P. Pioneer: Verifying integrity and
guaranteeing execution of code on legacy platforms. In Proceedings of the Twentieth ACM Symposium on
Operating Systems Principles, Brighton, UK, 23–26 October 2005.
Sensors 2019, 19, 4038
20 of 20
25.
El Defrawy, K.; Francillon, A.; Perito, D.; Tsudik, G. SMART: Secure and minimal architecture for (establishing
a dynamic) root of trust. In Proceedings of the 19th Annual Network and Distributed System Security
Symposium, San Diego, CA, USA, 5–8 February 2012.
26.
Kong, J.; Koushanfar, F.; Pendyala, P.K.; Sadeghi, A.R.; Wachsmann, C. PUFatt: Embedded platform
attestation based on novel processor-based PUFs. In Proceedings of the 51st ACM/EDAC/IEEE Design
Automation Conference (DAC), San Francisco, CA, USA, 1–5 June 2014; pp. 1–6. [CrossRef]
© 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).


</subsection_point_Point 1>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.
n summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.


</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper.

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

<subsection_point_Point 4>
Point: Explore the use of advanced sensing technologies, such as hyperspectral imaging and thermal sensing, for non-invasive plant stress detection

Papers to support point:

Paper 1:
- APA Citation: Joalland, S., Screpanti, C., Varella, H. V., Walter, A., & Liebisch, F. (2018). Remote sensing to detect the impact of Heterodera schachtii on sugar beet. Remote Sensing, 10(5), 787.
  Main Objective: Explore the use of advanced sensing technologies, such as hyperspectral imaging and thermal sensing, for non-invasive plant stress detection
Validate the ability of aerial UAV-based and hyperspectral imaging to discriminate and rank susceptible and tolerant sugar beet cultivars and predict nematode population and final yield.
  Study Location: Ober-Flörsheim, Rhineland-Palatinate, Germany
  Data Sources: Reflectance measurements
  Technologies Used: Hyperspectral, Thermography, UAV, Field spectrometry
  Key Findings: 
  Extract 1: SIs extracted from the hyperspectral imager were able to differentiate between the two types of cultivars from group C. After 102 days, the main differences between susceptible and tolerant cultivars were related to biomass (NDVI), chlorophyll content of the leaves (780/700, CHLG) and general stress (HI). At 152 das, susceptible cultivars could also be differentiated from the tolerant ones using the SIs related to water content (NDWI1650, NDWI).
  Extract 2: The SIs extracted from the UAV hyperspectral imager were not able to differentiate between the two types of cultivars from group C. However, CHLG and ANTH SIs allowed to differentiate cultivars after 102 and 152 das, respectively.
  Limitations: Results were somewhat specific to the region and cultivars used in the research.
Data obtained from the field spectrometer and the hyperspectral imager were not fully consistent, which is also reflected by the differences observed between PCA computed with ground and UAV data.
  Relevance Evaluation: Relevant- Addresses all key aspects of the point and review.
  Relevance Score: 1.0
  Inline Citation: (Joalland et al., 2018)
  Explanation: Precision phenotyping and remote sensing technology have shown great promise in rapidly and accurately evaluating plant performance in field trials. Hyperspectral imagery captured by unmanned aerial vehicles (UAVs) has emerged as a powerful tool due to its ability to collect data in multiple spectral bands, providing information about crop traits such as chlorophyll content, nitrogen status, and biomass. In this study, hyperspectral UAV imagery was used to assess the response of sugar beet cultivars to infection by the beet cyst nematode (BCN), Heterodera schachtii. The study aimed to determine whether hyperspectral data could be used to discriminate between nematode-susceptible and -tolerant cultivars and predict sugar yield, with the ultimate goal of improving breeding efforts for BCN resistance.

The study was conducted in a field trial with nine different sugar beet cultivars, representing a range of susceptibility to BCN. Hyperspectral data were collected at two time points during the growing season using a UAV-mounted hyperspectral imager. The data were used to calculate a number of spectral vegetation indices (SIs), which are mathematical combinations of reflectance values at different wavelengths that are known to be related to specific plant traits. The SIs were then used to train machine learning algorithms to classify the cultivars according to their susceptibility to BCN and to predict sugar yield. The results showed that hyperspectral data could be used to discriminate between nematode-susceptible and -tolerant cultivars with high accuracy. The SIs that were most useful for discrimination included those related to chlorophyll content, nitrogen status, and biomass. 

The study also found that hyperspectral data could be used to predict sugar yield with reasonable accuracy. The SIs that were most useful for predicting yield were those related to chlorophyll content and biomass. The results of this study suggest that hyperspectral UAV imagery has the potential to be a valuable tool for improving breeding efforts for BCN resistance in sugar beet. Hyperspectral data can be used to rapidly and accurately assess the performance of different cultivars in field trials, and to identify promising candidates for further evaluation. This information can help breeders to develop new cultivars that are more resistant to BCN and more productive.

 Full Text: >
remote sensing  
Article
Aerial and Ground Based Sensing of Tolerance to Beet
Cyst Nematode in Sugar Beet
Samuel Joalland 1,2 ID , Claudio Screpanti 1, Hubert Vincent Varella 1, Marie Reuther 3,
Mareike Schwind 3, Christian Lang 3, Achim Walter 2 and Frank Liebisch 2,* ID
1
Syngenta Crop Protection Münchwillen AG, Schaffhauserstrasse, 4332 Stein, Switzerland;
samueljoalland49@gmail.com (S.J.); Claudio.Screpanti@syngenta.com (C.S.);
hubert.vincent.varella@outlook.com (H.V.V.)
2
Institute of Agricultural Sciences, ETH Zürich, Universitätstrasse 2, 8092 Zürich, Switzerland;
achim.walter@usys.ethz.ch
3
Verband der Hessisch-Pfälzischen Zuckerrübenanbauer e.V., Rathenaustraße 10, 67547 Worms, Germany;
marie_reuther@ymail.com (M.R.); schwind@ruebe.info (M.S.); lang@ruebe.info (C.L.)
*
Correspondence: frank.liebisch@usys.ethz.ch; Tel.: +41-52-354-9125
Received: 1 April 2018; Accepted: 18 May 2018; Published: 19 May 2018


Abstract: The rapid development of image-based phenotyping methods based on ground-operating
devices or unmanned aerial vehicles (UAV) has increased our ability to evaluate traits of interest
for crop breeding in the ﬁeld. A ﬁeld site infested with beet cyst nematode (BCN) and planted with
four nematode susceptible cultivars and ﬁve tolerant cultivars was investigated at different times
during the growing season. We compared the ability of spectral, hyperspectral, canopy height- and
temperature information derived from handheld and UAV-borne sensors to discriminate susceptible
and tolerant cultivars and to predict the ﬁnal sugar beet yield. Spectral indices (SIs) related to
chlorophyll, nitrogen or water allowed differentiating nematode susceptible and tolerant cultivars
(cultivar type) from the same genetic background (breeder). Discrimination between the cultivar
types was easier at advanced stages when the nematode pressure was stronger and the plants and
canopies further developed. The canopy height (CH) allowed differentiating cultivar type as well but
was much more efﬁcient from the UAV compared to manual ﬁeld assessment. Canopy temperatures
also allowed ranking cultivars according to their nematode tolerance level. Combinations of SIs in
multivariate analysis and decision trees improved differentiation of cultivar type and classiﬁcation of
genetic background. Thereby, SIs and canopy temperature proved to be suitable proxies for sugar
yield prediction. The spectral information derived from handheld and the UAV-borne sensor did not
match perfectly, but both analysis procedures allowed for discrimination between susceptible and
tolerant cultivars. This was possible due to successful detection of traits related to BCN tolerance
like chlorophyll, nitrogen and water content, which were reduced in cultivars with a low tolerance
to BCN. The high correlation between SIs and ﬁnal sugar beet yield makes the UAV hyperspectral
imaging approach very suitable to improve farming practice via maps of yield potential or diseases.
Moreover, the study shows the high potential of multi-sensor and parameter combinations for plant
phenotyping purposes, in particular for data from UAV-borne sensors that allow for standardized
and automated high-throughput data extraction procedures.
Keywords: hyperspectral images; spectrometry; canopy height; thermography; UAV; Heterodera schachtii;
root; field
1. Introduction
Sugar beet is a root crop widely cultivated in Europe and North America for sugar production.
Twenty percent of the world’s supply of sugar is derived from sugar beet [1].
One of the main
Remote Sens. 2018, 10, 787; doi:10.3390/rs10050787
www.mdpi.com/journal/remotesensing
Remote Sens. 2018, 10, 787
2 of 21
soil borne parasites that limits sugar beet production worldwide is the Beet Cyst Nematode (BCN),
Heterodera schachtii. It is the most important pest of sugar beet [2]. BCN causes severe damage and
significant yield losses of up to 60% [3]. In addition, this pathogen can infect more than 200 different plant
species, making their management in the crop cycle a challenging task [4,5]. Most nematode damage
occurs belowground including reduction of beet growth and the appearance of many secondary roots
to compensate for those infested by nematodes. BCN also causes shoot symptoms such as stunted
growth, decreased chlorophyll content, and wilting of the canopy due to water stress [6,7]. In the ﬁeld,
nematodes occur in patches and have very low mobility. This makes sugar beet breeding with respect
to BCN infestation a good target for the use of non-destructive ground and aerial based phenotyping
methodology in the ﬁeld.
Apart from direct observation of nematode-induced damage in excavated roots, an indirect
observation of belowground damage via performance of the aboveground shoot performance is the
only way to address the severity of crop deterioration. Such assessment can be done via remote sensing
methods. For nematode-induced stress, several sensor-based methods have been tested in a variety of
crops such as potatoes, soybeans or sugar beet using ground and airborne platforms [8–11].
For differentiation of nematode infested and non-infested treatments under greenhouse and
semi-controlled ﬁeld conditions, ground based visible imaging has been successfully used on sugar
beet [12,13]. The canopy area of the plant can be robustly calculated and reﬂects root biomass
in a variety of plant species [14–17]. Phenotyping methods based on multi- and hyper-spectral
measurements showed promising results for evaluating the symptoms caused by BCN on sugar
beet plants under ﬁeld and semi-controlled ﬁeld conditions [11,13]. These methods are based on the
calculation of spectral vegetation indices (SIs). SIs are combinations of spectral bands that enhance the
sensitivity to speciﬁc canopy characteristic while reducing the effect of non-desirable factors such as
soil background [18]. In the ﬁeld, the use of speciﬁc SIs has been reported to predict the ﬁnal beet yield
and the nematode population in the soil [19]. Schmitz et al. [20] reported the ability of aerial remote
sensing thermography to detect changes in the canopy temperature of sugar beet plants infested with
nematodes in the ﬁeld. This increase in canopy temperature of the nematode- infested sugar beet
plants was also observed in semi-controlled ﬁeld conditions under artiﬁcial nematode infestation on
nematode susceptible and tolerant cultivars [13].
The recent technological advances in unmanned aerial vehicles (UAV), miniaturization of sensors
and developments of software and algorithms enabled the application of digital imaging methodology
from aerial view covering larger areas in a shorter time [21–23]. Recent work has demonstrated the
ability of UAV coupled with a range of imaging sensors to provide suitable phenotype information
for several purposes such as breeding support or precision farming and for different crops [24–28].
Very few studies have made use of the new technologies for investigation or detection of sugar beet
BCN infestation in ﬁelds.
For aerial crop phenotyping, applied sensors and methodology comprise usage of visible, multi- to
hyperspectral sensors [29–32], thermal imaging [31,33], and extraction of crop height information [34,35].
Among the applications of UAV based phenotyping are detection of weeds, soil characteristics,
water status, diseases, pest management and fertilization support or yield estimation [36,37].
Nevertheless, robust and reliable extraction of information from airborne sensors remains one of
the biggest challenges.
For visible and spectral images, information can be extracted by band combination math [29,32]
or via other methods such as partial least square regression [38] or machine learning algorithms [39].
Although SIs have been proven robust trait indicators in many studies, machine learning algorithms
are not yet applied without task speciﬁc learning or calibration in agriculture. Thermal information
can be retrieved from calibrated or non-calibrated cameras and often needs consideration of the actual
weather conditions for correct interpretation. Crop or canopy height information can be extracted
using “Structure from Motion” (SfM) algorithms subtracting the soil elevation model from the canopy
elevation model. Although it is technically feasible, combinations of sensors have rarely been applied
Remote Sens. 2018, 10, 787
3 of 21
for phenotyping tasks. The use of different sensors in combined or single mode and post processing
methodology, SIs and SfM for instance offer a high return of information for applications in crop
phenotyping and large-scale precision agriculture.
For crop breeding or research, such aerial-based information retrieval offers faster and more
frequent measurements. For precision agriculture, it enables the evaluation of larger areas and the
robust use of information for crop management decisions.
For the sugar beet BCN infestation scenario, aerial derived trait maps combined with a
reduced number of soil samples in the ﬁeld can conﬁrm the presence of nematodes and allow
exact determination of spatial distribution and density of nematode infestation in agricultural ﬁelds.
Such knowledge may help to select the optimal sugar beet cultivar.
There is still a need to develop fast and reliable methods to evaluate the status of soil borne
pathogen infestation such as BCN under real ﬁeld conditions and give a ﬁrst prediction of the yield
potential. Applications would be proﬁtable not only for breeding purposes but also for farmers to help
for the selection of the best countermeasures such as crop rotation and the use of appropriate cultivars
or catch crops.
The present study therefore investigates the ability of thermography, ﬁeld spectrometry and aerial
hyperspectral imaging to identify the stress caused by nematodes on susceptible and tolerant sugar
beet cultivars in the ﬁeld. More speciﬁcally, the main objectives were to (1) Compare the ability of
thermography and spectrometry methods to discriminate and rank susceptible and tolerant sugar
beet cultivars; (2) Evaluate the capability of the phenotyping methods to predict the sugar beet yield
and (3) Validate the ability of aerial UAV-based and hyperspectral imaging to discriminate and rank
susceptible and tolerant sugar beet cultivars and predict nematode population and ﬁnal yield.
2. Materials and Methods
2.1. Experimental Site
Two sugar beet ﬁeld trials were carried out side by side in 2016 in a ﬁeld (0.4 ha) in Ober-Flörsheim
(Rhineland-Palatinate, Germany) by the interest group for ﬁeld experiments and extension in sugar
beet (“Arbeitsgemeinschaft für Versuchswesen und Beratung im Zuckerrübenanbau Südwest”-ARGE
Zuckerrübe Südwest). The site is located 49◦68′N, 8◦15′E at an altitude of 244 m above sea level.
The ﬁeld site was selected based on its natural infestation with BCN. The soil is a sandy loam (pH 7.5)
containing 29.5 kg P2O5 ha−1, 45 kg K2O ha−1, 9.2 kg Mg ha−1. Fertilizer application followed best
practice, with a base fertilizer application of 159 kg N ha−1, 54 kg P2O5 ha−1, 96 kg K2O ha−1 and
24 kg Mg ha−1 prior to sowing on 24 March.
Herbicide was applied during the first two months after sowing to avoid the influence of weeds on
the plant growth (18 April: 1.2 L ha−1 Powertwin Plus + 1.5 L ha−1 Goltix, (Feinchemie Schwebda GmbH,
Eschwege, Germany); 2 May: 1.25 L ha−1 Powertwin Plus + 1.5 L ha−1 Goltix; 7 May: 0.5 L ha−1 Gallant,
(Dow Agrosciences, Indianapolis, IN, USA); 17 May: 1.25 L ha−1 Powertwin Plus + 1.5 L ha−1 Goltix +
0.2 L ha−1 Tramat (Bayer Cropscience, Monheim, Germany). To control fungal pathogens one liter h −1
Spyrale (Syngenta AG, Basel, Switzerland) was applied twice during the season, on 19 July and
18 August. This management reﬂects conventional intensive sugar beet cultivation in the region.
The climate of the study area is temperate with a mean annual rainfall of around 611 mm.
From sowing on 24 March until harvest on 6 October, mean minimum and mean maximum
temperatures were 10.1 ◦C and 21.0 ◦C, respectively.
2.2. Experimental Design
Two trials were established in two separate block designs (Table 1 and Figure 1) with the initial
purpose of the trial to compare susceptible and tolerant cultivars from the same seed provider;
plots were gathered at the same locations in order to minimize the variability in nematode pressure.
No gradients in soil conditions were observed within the experimental ﬁeld. Individual plots were
Remote Sens. 2018, 10, 787
4 of 21
three meters wide by eight meters long with a row distance of 0.5 m and a target sowing density of
11.1 seeds per m2. In trial 1, one susceptible and two tolerant cultivars were planted (Sus A, Tol A1,
and Tol A2 from the breeder A). In trial 2, three susceptible and three tolerant cultivars were sown
(Breeders B, C and D). In the present manuscript, A, B, C, and D are groups of cultivars corresponding
to four different breeders (companies), supposedly reﬂecting different genetic backgrounds.
Sugar beet cultivars were randomized in a block design with 16 and eight replicates per treatment
for experiments 1 and 2, respectively. Both trials were located in the same ﬁeld.
Figure 1. Orthophoto of the experimental ﬁeld extracted from the hyperspectral imager containing
the experimental setup of the two investigated ﬁeld trials (A); detail of the reﬂectance plates used for
radiometric calibration as placed in the ﬁeld (B); contour map of the initial BCN population density in
the topsoil (0–30 cm) (C); The map was linearly interpolated from the 108 data points representing the
sampled plots using the average of its neighbors for non-sampled plots.
Table 1. Summary of the experimental settings and the crop management operations during the two
ﬁeld trials.
Sugar beet cultivars
Susceptible
Tolerant
Sus A
Tol A1
Tol A2
Sus B
Tol B
Sus C
Tol C
Sus D
Tol D
Sowing
24 March 2016
Fertilizer application
Mid-March
Herbicide applications
18 April
2 May
7 May
17 May
Fungicide application
19 July
18 August
Remote Sens. 2018, 10, 787
5 of 21
Table 1. Cont.
Ground measurements
Spectrometry
20 June (88 das *)
4 July (102 das)
23 August (152 das)
Canopy height
4 July (102 das)
Thermography
23 August (152 das)
UAV Hyperspectral images acquisition
4 July (102 das)
23 August (152 das)
Harvest and sampling
6 October
* Days after sowing.
2.3. Plant and Nematode Evaluation
The trials were harvested 196 days after sowing (das) on 6 October 2016. Three middle rows were
harvested for each plot (17 m2). Final beet fresh weight and white sugar yield were determined for
each single plot as described in Reuther et al. [40].
The initial BCN population density (pi) in the different plots was assessed at the time of planting
and the ﬁnal BCN population (pf) was assessed at harvest. Soil cores were sampled in each plot
with a hydraulic soil sampler (Nietfeld, DUOPROB 60-UP, Quakenbrück, Germany). Ten samples
were collected and automatically separated in topsoil (0–30 cm) and subsoil (30–60 cm) in the soil
sampler. They were mixed to obtain one topsoil and one subsoil sample of minimum 500 g each per
plot. Samples were stored in the dark at 4 ◦C before analysis. The nematode population was evaluated
using a method described by Grosse et al. [41]. Based on the observation that 50% of the dormant
nematodes hatched, the nematode infestation levels were determined by multiplying the observed
infestation levels by a correction factor of two [42]. Infestation level was expressed as the number of
juveniles (J2s) of H. schachtii per 100 g of soil.
2.4. In-Field Measurements
Canopy height measurements were performed manually in the ﬁeld 102 das using a ruler.
Two measurements were taken from the middle of two rows, respectively on the ﬁrst third of each plot
and subsequently averaged (CHruler).
Thermal images were acquired 152 das using an infrared camera (Testo 885, Testo Ltd., Alton, UK),
having a Si sensor with 320 × 240 pixels covering a spectral range of 8–14 µm, and a sensor sensitivity
of <30 mK at 30 ◦C. As in a previous study [13] the thermal device was calibrated prior to taking
pictures by setting up the emissivity to 96% and the reﬂected temperature compensation parameter to
the current air temperature [43]. One picture was taken from the same side of each plot with an angle
of 45◦ at a height of 1.5 m above the ground. Canopy temperature (TC) was determined by combining
both thermal and visible images generated by the thermal camera. Temperature ﬂuctuation in the ﬁeld
was assessed by evaluating the naked soil temperature (TS) between rows with the thermal camera ten
times during the measurements. On average, TS was 28.7 ◦C (±0.4 ◦C) and relative humidity was 54%
at the time of measurement. Because of the stable ambient temperature (ﬂuctuating less than 1.5%)
during measurements no normalization to ambient temperatures was applied.
Spectral measurements in the ﬁeld were performed at das 88, 102 and 152 during the plant
development using a non-imaging spectro-radiometer (ASD FieldSpec® 4, Analytic Spectral Devices,
Boulder, CO, USA) with a spectral range of 350–2500 nm. Canopy spectra were acquired from
nadir view of the plots at a height of 1 m above canopy with a 25◦ ﬁeld of view. For each plot,
ﬁve spectra were randomly taken at distinct positions consisting of ﬁve spectral samples and averaged.
Instrument radiometric optimization and reﬂectance calibration were performed each time prior
to spectral sampling in every third plot using a Zenith Polymer® (SphereOptics, Herrsching am
Ammersee, Germany) 99% reﬂectance target as white reference.
Remote Sens. 2018, 10, 787
6 of 21
UAV-Based Data Acquisition
Aerial image spectroscopy was acquired 102 and 152 das with a Gamaya OXI VNIR 40 camera
system (Gamaya, SA, Lausanne, Switzerland) consisting of two individual cameras measuring
16 bands in the visible (VIS) and 25 bands in the near-infrared (NIR) range, respectively. The System
was mounted on a Solo drone (3D Robotics, Inc., San Diego, USA). The camera system provides
40 spectral bands between 475 nm and 875 nm with a full width half maximum (FWHM) ranging
from approximately 15 to 25 nm. It was equipped with 25 mm focal length optics. The images were
captured from an altitude of 80 m with at least 75% overlap and 60% sidelap. VIS and NIR images
were de-convolved with the Sprocket software provided by Gamaya, using the raw images and a
camera speciﬁc calibration proﬁle resulting in two megapixel images (2048 × 1088 pixels) for each
camera. Both sets of images were processed in Agisoft Photoscan Professional (v. 1.26, Agisoft, LLC,
St. Petersburg, Russia) resulting in a digital surface model (DSM) and an orthophoto for VIS and NIR,
respectively. Geometrically correct overlay was facilitated using virtual markers such as distinctive
ﬁeld (stones, plot corners) or infrastructure (street breaks or gully covers) features.
Reﬂectance computation was also done with the Sprocket software from Gamaya and the ﬁnal
hypercube was exported as a band interleaved by line (bil) format. Three targets of different reﬂectance
were placed in the ﬁeld, measured with the ASD spectro-radiometer and selected in the hypercube
(Figure 1). The radiance spectra of those targets, as seen by the hyperspectral camera, are then used to
estimate the most likely sunlight spectrum, which is assumed constant throughout the data acquisition.
The sunlight spectrum can be estimated for each target, by dividing for each band the target’s radiance
from the camera by its known reﬂectance measured in the ﬁeld. As three different targets were used,
the three sunlight estimations were fused into the most likely one through the least square regression
function in the sprocket software.
Regions of interest (ROI) reﬂecting individual plots were manually identiﬁed on the hyperspectral
images using the ENVI software (v. 5.1, Harris Corporation, Melbourne, FL, USA). For each ROI,
the average spectrum was extracted. At 102 and 152 das, canopy height measurements were extracted
from the DSM computed from the hyperspectral drone images (CHDSM). CHDSM for each plot was
calculated as the difference between the average canopy elevation extracted from a ROI on the ﬁrst
third of the plot (1.8 m2, 3500 pixels ± 500) and the average soil elevation extracted in front of each
plot (1.8 m2, 3500 pixels ± 500), respectively.
For each date of measurement and each plot, 123 published SIs were computed using the ﬁeld
spectrometer measurements. Seventy-seven SIs (reduced spectral range) were calculated from the
hyperspectral images using the closest available channels for the SI calculation. The number of
SIs was reduced subsequently for both spectral devices using a correlation matrix as described by
Joalland et al. [13] to a small number of SIs, reﬂecting a range of traits, selected for further analysis
(Table 2). In brief, SIs highly inter-correlated to each other (Pearson’s correlation coefﬁcient p > 0.8)
were grouped. One SI was then selected for each group. Selected SIs reﬂect the broad range of traits
for which the SIs were initially developed.
Table 2. Selected SIs, their respective equations (ﬁeld spectrometer), the proposed detection trait
and references.
SIs
Equation
Traits
Reference
NDVI
(R800 − R680)/(R800 + R680)
Biomass, coverage
[44]
780/740
R780/R740
Nitrogen content
[45]
780/700
R780/R700
Nitrogen content
[45]
TCARI
3 × [(R700 − R670) − 0.2 × (R700 − R550) × (R700/R670)]
Chlorophyll content
[46]
TGI
−0.5×[(W670 − W480)×(R670 − R550) − (W670 − W550)×(R670 − R480)]
Chlorophyll content
[47]
ANTH
R760 − R800 × (1/R540 − R560 − 1/R690 − R710)
Anthocyanins
[48]
CHLG
(R760 − R800)/(R540 − R560)
Chlorophyll content
[48]
PRI
(R531 − R570)/(R531 + R570)
Stress
[49]
NDWI
(R860 − R1240)/(R860 + R1240)
Plant water status
[50]
Remote Sens. 2018, 10, 787
7 of 21
Table 2. Cont.
NDWI1650
(R840 − R1650)/(R840 + R1650)
Plant water status
[51]
WI
(R900/R970)
Plant water status
[52]
HI
(R534 − R698)/(R534 + R698) − R704/2
Plant health
[53]
2.5. Statistical Data Analysis
Data were analyzed with the statistical program R [54]. Beet fresh weight, white sugar yield
and BCN population were exposed to analysis of variance (ANOVA) at a signiﬁcance level of 0.05.
ANOVA was used to compare and differentiate the cultivars for the computed or measured traits.
PCA (Principal component analysis) was performed using the main selected phenotyping parameters
computed from the inﬁeld measurements (thermal images and ﬁeld spectrometer) and the UAV
hyperspectral imager respectively.
To build decision trees we used the WEKA software (The Waikato Environment for Knowledge
Analysis v. 3.8, 2016) and the J48 algorithm [55]. The decision trees were calibrated and cross-validated
using an n-fold approach with n = 10 [56]. This cross-validation is considered as a conservative
estimation of model accuracy. The total dataset was partitioned into 10 groups and 10 new subsets
of the total were created using nine out of the 10. Ten test trees were then built using the reduced
datasets; the unused 10% in each case was used to compute the classiﬁcation error for each tree.
Once the 10 test trees were built, their classiﬁcation error rate as a function of tree size was averaged.
Finally, the reference tree was pruned to the number of nodes matching the size that produced the
minimum cross validation cost [57]. The decision trees were built for two sets of data: (1) Ground
phenotyping (123 SIs, TC and CHruler) and (2) UAV derived parameters (77 SIs, CHDSM) at 102 and
152 das.
3. Results
3.1. Spatial BCN Distribution in the Field
The spatial distribution of the initial BCN population density varied strongly throughout the
experimental ﬁeld (Figure 1). At sowing, BCN population densities ranged from 306 to 2284 J2s
per 100 g of the topsoil and from 320 to 3457 J2s per 100 g in the subsoil. Overall, BCN population
distribution was relatively even and high, with 90% of the plots infested with more than 600 J2s per
100 g of soil (Figure 1c).
The initial BCN population density per treatment (cultivar) varied from 814 to 1283 J2s per 100 g
soil on average in the topsoil (CV of 15%) (Table 3). There was no signiﬁcant difference between the
initial BCN infestations of the treatments, which were all affected by a high BCN pressure on average.
The ratio pf/pi is an indicator for reproduction and represents the ability of the cultivar to prevent
nematode reproduction in the roots [58]. The reproduction index pf/pi in the topsoil was on average
1.1 for the tolerant cultivars and 8.6 for the susceptible cultivars (Figure 2). Tolerant cultivars B and D
performed the best with an average pf/pi ratio below one (0.65 and 0.55, respectively).
3.2. Beet Fresh Weight and Nematode Population
The tolerant cultivars produced higher beet fresh weight (BFW) than the susceptible cultivars.
The highest white sugar yield (WSY) of 17.17 t ha−1 was observed for the tolerant cultivar D.
On average, BFW and WSY were signiﬁcantly higher for the tolerant cultivars compared to the
susceptible ones (on average +18% and +17%, respectively). There was no signiﬁcant correlation
between the initial BCN population density and the yield of the different cultivars. Thus, we assume
yield differences between cultivars were not caused by differences in initial BCN population density
but by differences in the cultivar response to nematodes.
For both susceptible and tolerant cultivars, ﬁnal beet fresh weight was not signiﬁcantly correlated
with the pf/pi ratio (Figure 3). However, there was a trend showing that the more nematodes reproduce
Remote Sens. 2018, 10, 787
8 of 21
in the roots, the higher is the yield-reducing effect. This trend was higher for the susceptible cultivars
(R2 = 0.58, p = 0.24) than for the tolerant ones (R2 = 0.28, p = 0.37).
Table 3. Beet fresh weigh, white sugar yield and initial BCN population density of each sugar beet
cultivar. Displayed, are the mean ± standard error of each treatment. Different lower case letters
within each column indicate signiﬁcant differences between genotypes (p < 0.05).
Cultivar Type
Genotype
Beet Fresh Weight (t)
White Sugar Yield (t)
Initial BCN Population
(Number of J2s per 100 g soil)
Susceptible
Susceptible A
73.27 ± 1.39 a
12.13 ± 0.23 a
1283 ± 131 a
Susceptible B
78.08 ± 2.30 a
13.63 ± 0.44 b
886 ± 144 a
Susceptible C
69.10 ± 1.18 c
13.00 ± 0.22 b
919 ± 94 a
Susceptible D
83.56 ± 2.05 d
15.14 ± 0.38 cd
1073 ± 140 a
Average
76.00 ± 1.09
13.48 ± 0.22
1031
Tolerant
Tolerant A1
91.41 ± 1.01 bf
15.52 ± 0.17 c
1160 ± 126 a
Tolerant A2
85.48 ± 0.97 d
14.80 ± 0.14 d
1134 ± 128 a
Tolerant B
87.99 ±1.53 ef
15.60 ± 0.30 c
1512 ± 62 a
Tolerant C
87.30 ± 0.80 de
15.81 ± 0.22 c
814 ± 90 a
Tolerant D
94.66 ± 1.13 b
17.17 ± 0.19 e
1154 ± 103 a
Average
89.37 ± 0.63
15.78 ± 0.13
1026
Figure 2. Average initial pi and pf BCN population in the soil for nine different cultivars. Error bars
represent the standard error. Different letters behind pf/pi values indicate significant differences at p < 0.05.
Figure 3. Beet fresh weight at harvest as a function of the nematode reproduction rate (pf/pi) in the
soil for the four susceptible and ﬁve tolerant genotypes. Correlations were not signiﬁcant.
Remote Sens. 2018, 10, 787
9 of 21
3.3. Canopy Height Measurements
CHDSM and CHruler showed a good correlation 102 das (R2 = 0.55, p < 0.01) demonstrating that
the DSM derived from a UAV platform is a valuable source to evaluate the canopy height (Figure 4a).
The error on the canopy height evaluation was less than 3 cm. The DSM tends to underestimate the
CHruler by 14.5 cm measured in the middle of rows. However, the amount of CHruler measurements
was limited in number due to the need for physically entering the ﬁeld and plot. The relatively
high underestimation is likely caused by the selective use of the middle row height only for CHruler,
being higher than the average plot height reﬂected by CHDSM because inter-row height were not
measured on the ground. Nevertheless, CHruler reﬂects a genotype speciﬁc height measure sufﬁcient
to differentiate tolerant and susceptible genotypes. Therefore, we consider CHDSM as equivalent or
even better.
Sugar yield prediction power using CHDSM extracted 152 das was weak but signiﬁcant (R2 = 0.39,
p < 0.01).
However, CHDSM of the tolerant cultivars was signiﬁcantly higher than the CHDSM of the
susceptible ones at the two dates of measurements (Figure 4d), which was not the case for CHruler,
where no signiﬁcant differences were observed between the two types of cultivars 102 das (Figure 4c).
Interestingly, CHDSM of susceptible cultivars was signiﬁcantly lower by 1.4 cm at the measurement on
152 das, while CHDSM of the tolerant cultivars signiﬁcantly increased by 3.6 cm during the same time.
Figure 4. (A) Relationship between canopy height derived from the digital elevation model (CHDSM)
and canopy measured by a ruler (CHruler) 102 das (n = 104, p < 0.01); (B) ﬁnal sugar yield as a function
of the CHDSM 152 das (n = 104, p < 0.01); (C) average CHruler of tolerant and susceptible cultivars
102 das; (D) average CHDSM of tolerant and susceptible cultivars 102 and 152 das. Error bars represent
the standard error. Different lower case letters indicate signiﬁcant differences between cultivar types at
p < 0.05.
Remote Sens. 2018, 10, 787
10 of 21
3.4. Thermography
Canopy temperature (TC) allowed us to rank cultivars according to their ability to cool down under
moderate environmental stress (TAIR 28.7 ◦C, RH 54%). Average TC of the susceptible cultivars was
signiﬁcantly higher than TC of the tolerant ones (24.7 ◦C ± 0.1 vs. 23.8 ± 0.1 on average). The average
cooling effect of the tolerant cultivars was 5.4% higher than that of the susceptible cultivars (data not
shown). Three susceptible cultivars displayed the highest TC (Figure 5). Susceptible cultivar D
displayed a TC similar to the tolerant cultivars.
Figure 5. Average canopy temperatures of ﬁve tolerant and four susceptible cultivars 153 das. Error bars
represent the standard error. Different lower case letters indicate signiﬁcant differences between
genotypes (p < 0.05).
Relationships between TC and sugar yield are presented at the plot and cultivar levels in Figure 6.
At the plot level, high correlations could be observed between the canopy temperature and the white
sugar yield for the susceptible cultivars (R2 = 0.40, p < 0.01). The correlation was very high at the
cultivar level for the susceptible cultivars (R2 = 0.99, p < 0.01). In contrast, no correlation between TC
and ﬁnal yield could be observed for the tolerant cultivars.
Figure 6. White sugar yield at harvest as a function of the canopy temperature 152 das at the (A) plot
and (B) cultivar levels.
Remote Sens. 2018, 10, 787
11 of 21
3.5. Spectrometry and UAV Hyperspectral Imaging
3.5.1. Discrimination of Susceptible and Tolerant Cultivars
We found several SIs suitable for discriminating susceptible and tolerant cultivars of each group
for both ﬁeld spectroscopy and UAV hyperspectral imaging (Table 4). The selected SIs reﬂect plant
traits such as leaf chlorophyll and water content, leaf area index, and biomass which are expected
to be affected by severe BCN infestation. Surprisingly, it was not possible to ﬁnd SIs to signiﬁcantly
discriminate susceptible and tolerant cultivars at 88 das; this was likely related to the subtle or small
differences related to the small plant size in early growth stages. For later stages, the SIs HI, CHLG or
780/700 were particularly suitable for differentiating susceptible and tolerant cultivars over two dates
of measurements and three different cultivars. After 102 days, the main differences between susceptible
and tolerant cultivars were related to biomass (NDVI), chlorophyll content of the leaves (780/700,
CHLG) and general stress (HI). At 152 das, susceptible cultivars could also be differentiated from the
tolerant ones using the SIs related to water content (NDWI1650, NDWI). The range of the hyperspectral
imager on the UAV did not include short wave infrared bands, which prevented the calculation of
spectral indices related to the water absorption bands. SIs extracted from the UAV hyperspectral
device were not able to differentiate between the two types of cultivars from group C.
Table 4. SIs that allow statistical discrimination of susceptible and tolerant cultivars in each group
(p < 0.05). (A) Field spectrometer; (B) UAV hyperspectral imager. SIs common to both tools are
highlighted in bold.
(A)
Experiment 1
Experiment 2
Sus A/Tol A1–Tol A2
Sus B/Tol B
Sus C/Tol C
Sus D/Tol D
88 das
102 das
780/700
HI
CHLG
PRI
NDVI
780/700
CHLG
HI
PRI
TGI
ANTH
HI
NDWI1650
NDWI
HI
152 das
780/700
HI
TGI
PRI
CHLG
TCARI
NDWI1650
CHLG
NDWI
NDWI1650
PRI
TCARI
TGI
ANTH
HI
NDWI1650
780/700
ANTH
CHLG
NDVI
NDWI
NDWI1650
(B)
Experiment 1
Experiment 2
Sus A/Tol A1–Tol A2
Sus B/Tol B
Sus C/Tol C
Sus D/Tol D
102 das
CHLG
HI
ANTH
PRI
CHLG
ANTH
PRI
CHLG
HI
ANTH
PRI
152 das
CHLG
ANTH
TGI
HI
785/705
NDVI
CHLG
ANTH
HI
CHLG
ANTH
TGI
HI
785/705
3.5.2. Correlations with the Yield in Susceptible and Tolerant Cultivars
Best correlations between SIs and the ﬁnal sugar yield were obtained for susceptible cultivars
(Table 5). Correlations were higher using SIs from the ﬁeld spectrometer than from the hyperspectral
imager.
For the imager, signiﬁcant correlations to sugar yield were only found after 102 days.
Already after 88 days, SIs related to chlorophyll content (780/700, CHLG) or water content (NDWI1650,
Remote Sens. 2018, 10, 787
12 of 21
WI) allowed to predict the ﬁnal sugar yield for the susceptible cultivars (Table 5). Correlations between
SIs and ﬁnal yield were lower for the tolerant cultivars at the two ﬁrst dates of measurements. 152 das
prediction of yield was good for both types of cultivars.
Table 5. Coefﬁcient of determination R2 for the relationship between SIs and white sugar yield for
susceptible and tolerant cultivars at different measurement times. (A) Field spectrometer; (B) UAV
hyperspectral imager. * indicates signiﬁcant correlations (n = 56 for the susceptible and n = 40 for the
tolerant cultivar, p < 0.05).
Spectral Vegetation Index
88 Das
102 Das
152 Das
Susceptible
Tolerant
Susceptible
Tolerant
Susceptible
Tolerant
(A)
780/740
0.47 *
0.12
0.73 *
0.40 *
0.70 *
0.62 *
780/700
0.62 *
0.42 *
0.67 *
0.39 *
0.63 *
0.62 *
CHLG
0.46 *
0.38 *
0.66*
0.37 *
0.64 *
0.62 *
HI
0.22
0.61 *
0.33
0.32
0.20
NDVI
0.57 *
0.42 *
0.59 *
0.49 *
0.61 *
0.49 *
NDWI1650
0.71 *
0.27
0.56 *
0.52 *
WI
0.71 *
0.28
0.57 *
0.56 *
(B)
785/555
0.62 *
0.34 *
0.21
0.21
ANTH
0.64 *
0.34 *
0.20
0.21
CHLG
0.61 *
0.34 *
0.20
0.21
HI
0.36 *
0.23
0.13
3.5.3. Field Spectrometer versus UAV Hyperspectral Imager
Good correlations were observed for the determination of the CHLG index between both
spectrometers at the two dates of measurements (Figure 7). Other indices related to chlorophyll
(780/700, ANTH) or photosynthesis (TGI) were well correlated after 152 das. The two methods
differed signiﬁcantly in terms of the values of HI. At 102 das, values of most of the indices were not
consistent between both sensors.
Figure 7. (A) Coefﬁcient of determination R2 for the relationship between SIs computed from the ﬁeld
spectrometer and from the UAV hyperspectral imager. * Signiﬁcant correlations (n = 96, p < 0.05);
(B) relationship between CHLG index computed from ﬁeld spectrometer and UAV hyperspectral
imager at 102 (p < 0.01) and 152 das (p < 0.01).
Remote Sens. 2018, 10, 787
13 of 21
3.6. Multivariate Analysis
Studying single parameters allowed to differentiate between susceptible and tolerant cultivars
from the same group and to predict yield with a fairly good accuracy. Multivariate analysis allowed us
to go further and discriminate between the type of cultivars independently from the group.
Two PCA were performed separately using ground data (PCAground) and UAV data (PCAUAV)
on the third date of measurements 152 das (Figure 8). Sugar yield and beet fresh weight were
used as explanatory variables. In the PCAground, 81% of the variance is explained by the two ﬁrst
principal components (Figure 8a,b). Results conﬁrmed that high canopy temperature is correlated
to yield reduction. Canopy temperature and HI appeared particularly suitable for differentiating
susceptible and tolerant cultivars (Figure 8a). Cultivars from breeder A and D could be easily
discriminated using indices related to chlorophyll (CHLG, 780/700, TGI) and biomass (NDVI)
(Figure 8b). Cultivars from the two other companies showed a similar proﬁle in terms of canopy
reﬂectance. Overall, principal component F2 represents the ability of the sugar beets to tolerate
nematodes while principal component F1 seems more related to the genetic background of the plants.
Figure 8.
Principal component analysis (PCA) of the main phenotyping parameters 152 das.
The percentage of variance explained by each component is displayed in parentheses. (A,B) Display
PCA using ground data (main ﬁeld spectrometer SIs and canopy temperature); (C,D) show PCA using
main SIs and canopy height extracted from the UAV. The susceptible and tolerant cultivars are depicted
in blue and orange, respectively in graphs (A,C). The genetic background (breeder) are shown in
different colors (graphs (B,D)). Each data point represents one ﬁeld plot (n = 96).
Remote Sens. 2018, 10, 787
14 of 21
The differences observed between PCAground and PCAUAV conﬁrms the low correlations between
SIs computed from the ﬁeld spectrometer and from the UAV hyperspectral imager. Variables used did
not allow us to discriminate easily between the types of cultivars (Figure 8c). One reason is surely the
missing thermal data at the UAV level. Another reason is that height measurements at ground level
were not sufﬁcient to reveal genotypic differences between the investigated sugar beet types, which in
contrast UAV-based height measurements could show on plot level. PCAUAV conﬁrmed the close
relationship between canopy height and sugar yield at this advanced stage of the sugar beet growth.
Cultivars from groups A and D could be differentiated using CHLG and TGI indices conﬁrming the
good ability of chlorophyll related indices for the characterization of genetic background.
3.7. Decision Trees
The univariate decision trees (UDT) were used to classify sugar beet according to the type of
cultivar (susceptible or tolerant) or the genetic background (breeder) using multiple traits. The cross
validation produced accurate results without an independent dataset for assessing the accuracy of
the model [59]. We found that decision trees could classify cultivar type and genetic background
using just a few parameters (Table 6). Model accuracy was very similar using parameters evaluated
at the ground level and information sensed with the UAV hyperspectral imager. Average cultivar
classiﬁcation accuracy was 77% and 83% on 102 and 152 das, respectively. Classiﬁcation of plots
was slightly higher for the type of cultivars compared to the genetic background of the cultivars.
Overall coefﬁcients of agreement were good. The Kappa coefﬁcient varied from 0.46, which can be
considered as a “moderate” agreement to 0.74, which corresponds to a “substantial” agreement [60].
Table 6. Decision tree classiﬁcation accuracy (10-fold cross-validation) for cultivar BCN tolerance type
and genetic background (breeder) using ground data and UAV-based imager data. Kappa coefﬁcient
represents the degree of beyond-chance agreement. 96 plots were considered in the analysis.
Trait Detection Level
Das
Classiﬁcation Accuracy “Type of
Cultivars” (Kappa)
Classiﬁcation Accuracy “Genetic
Background” (Kappa)
Field parameters
(123 SIs + Tc + CHruler)
102
0.74 (0.46)
0.76 (0.61)
152
0.78 (0.55)
0.76 (0.63)
UAV based imager
(77 SIs + CHDSM)
102
0.79 (0.57)
0.72 (0.56)
152
0.88 (0.74)
0.68 (0.53)
Interestingly the best classiﬁcation between tolerant or susceptible cultivars was obtained 152 das
using the UAV information with 88%. The UDT using UAV based data for the classiﬁcation of
susceptible or tolerant cultivars used the CHDSM as a main parameter for classiﬁcation. This was
not the case for the classiﬁcation according to the genetic background. Overall, information related
to vegetation density, height, water content and pigment content in the leaves were suitable for
cultivar type classiﬁcation (see the Supplementary Materials). Physiological information related to
photosynthesis, canopy temperature, nitrogen content and water content were selected in the UDT to
differentiate genetic backgrounds.
4. Discussion
The results of this study demonstrated that ground-based and airborne phenotyping methods
including imaging, spectrometry and thermometry can be used in the ﬁeld to evaluate the level of beet
cyst nematode (BCN) tolerance of sugar beet cultivars and predict sugar yield.
Infestation levels observed in this ﬁeld study can be considered as moderate to high. The tolerance
limit, which is the nematode population below which no damage is detectable, could not be precisely
evaluated in this study. However, it is estimated to be between 300 and 1000 J2s per 100 g of soil for the
nine cultivars according to the ﬁeld location and soil temperatures observed during the season [61,62].
Under such nematode stress, it was possible to rank cultivars according to their ability to withstand or
Remote Sens. 2018, 10, 787
15 of 21
recover from the nematode attack and yield well. As expected, the ﬁve cultivars described as tolerant
showed higher yield than the ones known to be susceptible [63]. The high nematode multiplication rate
observed in the four susceptible cultivars is aligned with the lower yield observed for these cultivars.
Interestingly, two tolerant cultivars (B and D) presented a multiplication rate below one, indicating
them as resistant since they decreased the nematode population in the ﬁeld [40,64]. Cultivar D
combines high tolerance (high yield under nematode infestation) and high resistance (prevention of
nematode multiplication), which is of advantage for use in infested ﬁelds. No signiﬁcant correlation
could be found between the initial number of BCN and the ﬁnal yield. This was also shown by
Reuther et al. [40] and may possibly be explained by the range of initial BCN population in the ﬁeld,
which was above the damage threshold.
Canopy height extracted from the DSM allowed us to differentiate between susceptible and
tolerant cultivars which was not the case for the manual measurements CHruler. Since CHDSM takes
approximately 3500 pixels representing single height estimates it can be assumed that the derived
average canopy height is more realistic compared to the too few ground measurements per plot.
This clearly shows a beneﬁt of UAV-based imaging evaluation of traits such as canopy height that
require lots of time and effort for manual evaluation in the ﬁeld. The higher CHDSM differences
between susceptible and tolerant cultivars observed 152 das can be explained by the higher nematode
effect on susceptible cultivars, which increased over the season in contrast to the tolerant ones.
However, DSM estimates can likely be improved with a higher overlap of images and crosswise
ﬂight paths and eventually a lower ﬂying altitude. Additionally, stationary markers as used in [35]
for geo-localization will further improve UAV-based height measurements. Such markers will also
facilitate automated feature extraction based on geo-coordinates and thus reduce data extraction time.
The canopy temperature (TC) showed high potential for classifying cultivars according to their
susceptibility or tolerance to nematodes. Three out of four susceptible cultivars had the highest TC,
reﬂecting the lower ability of these plants to transpire water and thus cool down. TC is closely correlated
with the prevailing temperature of the local environment, the leaf transpiration rate and the stomatal
conductance [30,42,65,66]. BCN damage in the roots decreases water uptake, which subsequently
reduces the leaf transpiration rate and results in a higher TC [67–69]. The high correlation observed
between TC and ﬁnal sugar yield for the susceptible cultivars likely reﬂects the nematode damage
effect. The higher the BCN damage on the roots is, the higher is the TC. Schmitz et al. [20] and
Joalland et al. [13] had similar results for susceptible cultivars under ﬁeld and semi-ﬁeld conditions,
respectively. That no correlation was observed for tolerant cultivars is likely related to the less affected
water uptake and transpiration rate compared to those of susceptible cultivars [70–72]. Thus, TC is
suitable to determine the level of susceptibility but less for determination of tolerance level or to
predict ﬁnal yield.
SIs were found to be useful indicators for quantitative and qualitative evaluation of the sugar
beet canopy. Under moderate to high BCN infestation, single SIs related to chlorophyll content (CHLG),
photosynthetic activity (PRI), plant biomass (NDVI) or general stress (HI) were able to discriminate tolerant
and susceptible cultivars from the same breeder (same genetic background). This is in line with many
studies using spectroscopy methods to investigate genotype trials or plant stress detection [11,19,27,53].
Thus, for crop improvement studies or other experimental trials, spectrometry and/or spectral imaging is
a fast and reliable screening method to characterize and rank different cultivars from the same genetic
background according to their reaction to treatments or stresses. Here, we were able to demonstrate this
for sugar beet cultivars and for their ability to tolerate nematodes. Yet, when the genetic background
between cultivars differed widely (namely between cultivars from different seed companies), it was not
possible to use a single SI to robustly discriminate the tolerant and susceptible cultivars. Here, the use
of several relatively independent SIs was needed to identify the type of cultivars under BCN infestation.
Combining SIs and thermal information integrates various aspects of plant growth and development
such as canopy structure, biomass, pigment and water content, and photosynthetic activity, so such
Remote Sens. 2018, 10, 787
16 of 21
a combination can be a powerful tool to classify cultivars, even in experiments incorporating high
genetic diversity.
In this study we combined the various measured parameters by using decision trees.
After 152 days, CHDSM, chlorophyll- and water-content-related SIs were essential for discrimination
between susceptible and tolerant cultivars, which demonstrates the high diversity and non-speciﬁcity
of nematode-caused symptoms [6].
Interestingly, cultivars from group A and group D could be classiﬁed with high accuracy. This is
clearly reﬂected in the PCA where plots from both groups were separately clustered. Such results
illustrate the high variability caused by the intrinsic genetic background of each breeder, which is
reﬂected in the plant physiology (water content, pigment concentration, photosynthetic activity)
and plant performance (CHDSM, biomass). Cultivars that were bred using different germplasm
pools may display very different reﬂectance spectra although depicting a similar tolerance level.
While CHDSM appeared as an important parameter for the cultivar type classiﬁcation, it was not useful
for classiﬁcation of the breeder.
SIs related to leaf chlorophyll showed high correlations with the ﬁnal sugar yield for all
ground and aerial measurements for the susceptible cultivars. This observation is consistent with
the observation that more nematode damage on the roots triggers more visible symptoms on the
shoots and thus causes yield reduction. As early as 88 das, SIs related to nitrogen status and water
content such as 780/700 and NDWI, respectively could be used to predict yield with high precision.
Hillnhütter et al. [19] also showed correlations between water content or leaf pigment related SIs and
beet fresh weight in an infested ﬁeld. However, yield prediction on tolerant cultivars was best after
152 days, when environmental conditions were more constraining (air temperature 28.7 ◦C, RH 54%)
and likely the nematode stress affected the sugar beet growth for a longer period making differences
more pronounced. Such moderate environmental stress as observed in this ﬁeld study was obviously
increased by the nematode stress and allowed to signiﬁcantly differentiate tolerant cultivars and better
predict ﬁnal yield. Stronger symptoms were also observed on a tolerant cultivar under semi-ﬁeld
conditions when drought stress was higher [13].
The data obtained from the ﬁeld spectrometer and the hyperspectral imager were not consistently
correlated, which is also reﬂected by the differences observed between PCA computed with ground and
UAV data. Such partly mismatch can be explained by differences between sensors and the measurement
and calibration procedure. The instruments used have different sensor and ﬁlter technology causing
different spectral resolution and spectral response, which causes the slightly altered shape of the
derived spectra. The ﬁeld spectrometer had a very high resolution, while the hyperspectral imager
had a lower spectral resolution. As a consequence, some SIs, such as HI, were computed using slightly
different bands, which resulted in low correlation between them [19]. In addition, the ground sampling
resolution differed between the two measurement approaches. Whereas the average spectra per
plot for the ﬁeld spectrometer are the average of ﬁve point measurements with a footprint of about
50 cm diameter at random locations in each plot, the plot spectra obtained from the hyperspectral
imaging were an average of thousands of pixels with an instantaneous ﬁeld of view (ifov) of two
cm. Further, the processing and calibration steps of both instruments differ. The ﬁeld spectrometer
is calibrated every 15 measurements (every three plots) using a white reference. The hyperspectral
images are orthomosaicked using structure from motion procedures in Agisoft software before being
calibrated to reﬂectance with a partial least squares regression using three reﬂectance panels differing
in absolute reﬂectance intensity (Figure 1). Better understanding of the procedures in the sensors used
and the consequences for the resulting measurements will surely improve the use of aerial imaging
methods in the future. First attempts can be seen in the standardization of calibration methodology
and cross validation [73].
Although SIs computed from the ﬁeld spectrometer and from the spectral imager were not fully
consistent, results and conclusions regarding the sugar beet phenotype were similar. Both tools
were able to detect stress caused by nematodes and predict the ﬁnal yield. This showed the great
Remote Sens. 2018, 10, 787
17 of 21
potential of UAV hyperspectral imagery to generate maps of nematode symptoms and yield potential
of sugar beets with a high throughput. Such maps, combined with a reduced number of soil samples
in the ﬁeld to conﬁrm the presence of nematodes, allow determination of spatial distribution and
density of nematode infestation in agricultural ﬁelds. Such knowledge may help to select the right
countermeasure such as optimized crop rotations or use of catch crops or appropriate tolerant sugar
beet cultivars. For breeding purposes, such technology can make selection monitoring more efﬁcient
and thus accelerate crop improvement [74]. In our experimental ﬁeld, tolerant and susceptible cultivars
could be classiﬁed with an accuracy of over 80% on average. Speciﬁc SIs alone or combined and
added to canopy height and temperature information have the ability to quantify traits related to
BCN damage and to ﬁnal sugar yield. Cultivar response to nematodes can be deduced in a fast and
efﬁcient manner and might be linked to physiological traits such as chlorophyll and water content,
plant biomass or photosynthesis rate. Such a targeted analysis of traits will signiﬁcantly improve the
efﬁciency of sugar beet breeding for nematode tolerance and resistance.
5. Conclusions
Remote sensing methods were able to identify BCN symptoms on sugar beet plants and
discriminate the type of cultivars under real ﬁeld conditions. While thermography appeared suitable
for yield prediction on susceptible cultivars only, ﬁeld spectrometry and aerial UAV hyperspectral
imaging were able to predict yield on susceptible and tolerant cultivars, likewise. Despite disparities
in spectral and spatial resolution, both spectral tools can be used to characterize nematode symptoms
and classify cultivars. Multivariate methods were precious tools to identify genetic backgrounds of
the sugar beet cultivars and their ability to tolerate nematodes using a diversity of spectral indices.
The UAV equipped with a hyperspectral imager proved to be a valuable tool for BCN stress diagnosis
in the ﬁeld and for improving breeding efﬁciency facilitating the monitoring of multiple traits at the
same time and potentially at multiple sites. The most valuable remotely sensed traits to monitor
for BCN tolerance and yield potential were canopy height, spectrally inferred chlorophyll content,
leaf area or biomass, and canopy temperature.
Supplementary Materials: The following are available online at http://www.mdpi.com/2072-4292/10/5/787/s1,
Table S1: Classification and mis-classification matrices for BCN tolerance type of cultivar using ground measurements
and UAV hyperspectral data 102 and 152 das.
(1) Ground-102 das; (2) Ground-152 das; (3) UAV-102 das;
(4) UAV-152 das; Table S2: Classiﬁcation and mis-classiﬁcation matrix for genetic background (breeder) using
ground measurements and UAV hyperspectral data 102 and 152 das. (1) Ground-102 das; (2) Ground-152 das;
(3) UAV 102 das; (4) UAV 152 das; Table S3: Additional SIs selected by the UDT model to classify the types of
cultivar and genetic background.
Author Contributions: M.R., M.S. and C.L. conceived and designed the trial. S.J. and F.L. planned and performed
the remote sensing campaigns supported by C.S. and A.W. S.J., F.L. and H.V.V. analyzed the data and performed
the statistical analysis. All authors contributed to writing and reviewing of the manuscript.
Acknowledgments: We are very grateful for the technical support of the “Arbeitsgemeinschaft für Versuchswesen
und Beratung im Zuckerrübenanbau Südwest”-ARGE Zuckerrübe Südwest (Germany) in setting up the ﬁeld
trial.
We also thank Marc Bonﬁls for leading the collaboration with Ruebe and making the phenotyping
measurements possible. We also thank Lukas Roth for the great support in processing the hyperspectral UAV
data, Norbert Kirchgessner for the contour map, and Verity Paul for her careful review of the manuscript and for
her valuable suggestions and corrections.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1.
Food and Agriculture Organization (FAO). Global Agriculture towards 2050; Food and Agriculture Organization
(FAO): Rome, Itlay, 2009.
2.
Müller, J. The economic importance of Heterodera schachtii in Europe. Helminthologia 1999, 36, 205–213.
3.
Biancardi, E.; McGrath, J.M.; Panella, L.W.; Lewellen, R.T.; Stevanato, P. Sugar beet. In Root and Tuber Crops;
Springer: New York, NY, USA, 2010; pp. 173–219.
Remote Sens. 2018, 10, 787
18 of 21
4.
Steele, A.E.; Arnold, E. The host range of the sugar beet nematode; Heterodera schachtii Schmidt. J. Am. Soc.
Sugar Beet Technol. 1965, 13, 573–603. [CrossRef]
5.
Harveson, R.M.; Jackson, T.M. Sugar Beet Cyst Nematode; University of Nebraska–Lincoln Extension:
Lincoln, NE, USA, 2008.
6.
Cooke, D.A. Beet cyst nematode (Heterodera schachtii Schmidt) and its control on sugar beet. Agric. Zool. Rev.
1987, 2, 135–183.
7.
Schmitz, A.; Tartachnyk, I.I.; Kiewnick, S.; Sikora, R.A.; Kühbauch, W. Detection of Heterodera schachtii
infestation in sugar beet by means of laser-induced and pulse amplitude modulated chlorophyll ﬂuorescence.
Nematology 2006, 8, 273–286. [CrossRef]
8.
Heath, W.L.; Haydock, P.P.J.; Wilcox, A.; Evans, K. The potential use of spectral reﬂectance from the potato
crop for remote sensing of infection by potato cyst nematodes. Asp. Appl. Biol. 2000, 60, 185–188.
9.
Nutter, F.W.; Tylka, G.L.; Guan, J.; Moreira, A.J.D.; Marett, C.C.; Rosburg, T.R. Use of remote sensing to detect
soybean cyst nematode-induced plant stress. J. Nematol. 2002, 34, 222–231. [PubMed]
10.
Laudien, R. Entwicklung Eines GIS-Gestützten Schlagbezogenen Führungsinformationssystems für die
Zuckerwirtschaft. (Development of a Field- and GIS-Based Management Information System for the Sugar
Beet Industry). Ph.D. Thesis, University of Hohenheim, Stuttgart, Germany, 2005.
11.
Hillnhütter, C.; Mahlein, A.K.; Sikora, R.A.; Oerke, E.C. Use of imaging spectroscopy to discriminate
symptoms caused by Heterodera schachtii and Rhizoctonia solani on sugar beet. Precis. Agric. 2012, 13, 17–32.
[CrossRef]
12.
Joalland, S.; Screpanti, C.; Gaume, A.; Walter, A. Belowground biomass accumulation assessed by digital
image based leaf area detection. Plant Soil. 2016, 398, 257–266. [CrossRef]
13.
Joalland, S.; Screpanti, C.; Liebisch, F.; Varella, H.V.; Gaume, A.; Walter, A. Comparison of visible imaging;
thermography and spectrometry methods to evaluate the effect of Heterodera schachtii inoculation on sugar
beets. Plant Methods 2017, 13, 73. [CrossRef] [PubMed]
14.
Sher-Kaul, S.; Oertli, B.; Castella, E.; Lachavanne, J.B. Relationship between biomass and surface area of six
submerged aquatic plant species. Aquat. Bot. 1995, 51, 147–154. [CrossRef]
15.
Smith, S.M.; Garrett, P.B.; Leeds, J.A.; McCormick, P.V. Evaluation of digital photography for estimating live
and dead aboveground biomass in monospeciﬁc macrophyte stands. Aquat. Bot. 2000, 67, 69–77. [CrossRef]
16.
Mizoue, N.; Masutani, T. Image analysis measure of crown condition; foliage biomass and stem growth
relationships of Chamaecyparis obtusa. For. Ecol. Manag. 2003, 172, 79–88. [CrossRef]
17.
Tackenberg, O. A new method for non-destructive measurement of biomass; growth rates; vertical biomass
distribution and dry matter content based on digital image analysis. Ann. Bot. Lond. 2007, 99, 777–783.
[CrossRef] [PubMed]
18.
Baret, F.; Guyot, G. Potentials and limits of vegetation indices for LAI and APAR assessment. Remote Sens. Environ.
1991, 35, 161–173. [CrossRef]
19.
Hillnhütter, C.; Mahlein, A.K.; Sikora, R.A.; Oerke, E.C. Remote sensing to detect plant stress induced by
Heterodera schachtii and Rhizoctonia solani in sugar beet ﬁelds. Field Crop Res. 2011, 122, 70–77. [CrossRef]
20.
Schmitz, A.; Kiewnick, S.; Schlang, J.; Sikora, R.A. Use of high resolution digital thermography to detect
Heterodera schachtii infestation in sugar beets. Commun. Agric. Appl. Biol. Sci. 2004, 69, 359–363. [PubMed]
21.
Colomina, I.; Molina, P. Unmanned aerial systems for photogrammetry and remote sensing: A review.
ISPRS J. Photogramm. Remote Sens. 2014, 92, 79–97. [CrossRef]
22.
Araus, J.L.; Cairns, J. Field high-throughput phenotyping—The new crop breeding frontier. Trends Plant Sci.
2014, 19, 52–61. [CrossRef] [PubMed]
23.
Walter, A.; Liebisch, F.; Hund, A. Plant phenotyping: From bean weighing to image analysis. Plant Methods
2015, 11, 14. [CrossRef] [PubMed]
24.
Bendig, J.; Bolten, A.; Bareth, G. Introducing a low-cost mini-UAV for thermal- and multispectral-imaging.
In Proceedings of the XXII ISPRS Congress, Melbourne, Australia, 25 August–1 September 2012; pp. 345–349.
25.
Guo, T.;
Kujirai, T.;
Watanabe, T. Mapping crop status from an unmanned aerial vehicle for
precision agriculture applications. In Proceedings of the XXII ISPRS Congress, Melbourne, Australia,
25 August–1 September 2012; pp. 485–490.
26.
Primicerio, J.; Di Gennaro, S.F.; Fiorillo, E.; Genesio, L.; Lugato, E.; Matese, A.; Vaccari, F.P.A. Flexible unmanned
aerial vehicle for precision agriculture. Precis. Agric. 2012, 13, 517–523. [CrossRef]
Remote Sens. 2018, 10, 787
19 of 21
27.
Tattaris, M.; Reynolds, M.P.; Chapman, S.C. A Direct Comparison of Remote Sensing Approaches for
High-Throughput Phenotyping in Plant Breeding. Front. Plant Sci. 2016, 7, 1131. [CrossRef] [PubMed]
28.
Akhtman, Y.; Golubeva, E.; Tutubalina, O.; Zimin, M. Application of hyperspectral images and ground data
for precision farming. Geogr. Environ. Sustain. 2017, 10, 117–128. [CrossRef]
29.
Constantin, D.; Rehak, M.; Akhtman, Y.; Liebisch, F. Detection of crop properties by means of hyperspectral
remote sensing from a micro UAV. In Bornimer Agrartechnische Berichte; Leibniz-Institut für Agrartechnik
Potsdam-Bornim eV: Potsdam, Germany, 2015; pp. 129–137.
30.
Khanna, R.; Möller, M.; Pfeifer, J.; Liebisch, F.; Walter, A.; Siegwart, R. Beyond point clouds-3d mapping
and ﬁeld parameter measurements using UAVs. In Proceedings of the IEEE 20th Conference on Emerging
Technologies and Factory Automation (ETFA), Luxembourg, 8–11 September 2015; pp. 1–4.
31.
Liebisch, F.; Kirchgessner, N.; Schneider, D.; Walter, A.; Hund, A. Remote, aerial phenotyping of maize traits
with a mobile multi-sensor approach. Plant Methods 2015, 11, 9. [CrossRef] [PubMed]
32.
Burkart, A.; Hecht, V.L.; Kraska, T.; Rascher, U. Phenological analysis of unmanned aerial vehicle based time
series of barley imagery with high temporal resolution. Precis. Agric. 2018, 19, 134–146. [CrossRef]
33.
Jimenez-Bello, M.A.; Royuela, A.; Manzano, J.; Zarco-Tejada, P.J.; Intrigliolo, D. Assessment of drip irrigation
sub-units using airborne thermal imagery acquired with an Unmanned Aerial Vehicle (UAV). In Precision
Agriculture 13; Wageningen Academic Publishers: Wageningen, The Netherlands, 2013; pp. 705–711.
34.
Diaz-Varela, R.A.; de la Rosa, R.; Leon, L.; Zarco-Tejada, P.J. High-resolution airborne UAV imagery to assess
olive tree crown parameters using 3D photo reconstruction: Application in breeding trials. Remote Sens.
2015, 7, 4213–4232. [CrossRef]
35.
Roth, L.; Streit, B. Predicting cover crop biomass by lightweight UAS-based RGB and NIR photography:
An applied photogrammetric approach. Precis. Agric. 2017, 1–22. [CrossRef]
36.
Sankaran, S.; Khot, L.R.; Espinoza, C.Z.; Jarolmasjed, S.; Sathuvalli, V.R.; Vandemark, G.J.; Miklas, P.N.;
Carter, A.H.; Pumphrey, M.O.; Knowles, N.R.; et al. Low-altitude; high-resolution aerial imaging systems for
row and ﬁeld crop phenotyping: A review. Eur. J. Agron. 2015, 70, 112–123. [CrossRef]
37.
Yang, G.; Liu, J.; Zhao, C.; Li, Z.; Huang, Y.; Yu, H.; Xu, B.; Yang, X.; Zhu, D.; Zhang, X.; Zhang, R.; et al.
Unmanned Aerial Vehicle Remote Sensing for Field-Based Crop Phenotyping: Current Status and Perspectives.
Front. Plant Sci. 2017, 8, 1111. [CrossRef] [PubMed]
38.
Yu, K.; Lenz-Wiedemann, V.; Chen, X.; Bareth, G. Estimating leaf chlorophyll of barley at different growth
stages using spectral indices to reduce soil background and canopy structure effects. ISPRS J. Photogramm.
2014, 97, 58–77. [CrossRef]
39.
Sa, I.; Chen, Z.; Popovic, M.; Khanna, R.; Liebisch, F.; Nieto, J.; Siegwart, R. weedNet: Dense Semantic Weed
Classiﬁcation Using Multispectral Images and MAV for Smart Farming. IEEE Robot. Autom. Lett. 2018, 3,
588–595. [CrossRef]
40.
Reuther, M.; Lang, C.; Grundler, F.M.W. Nematode-tolerant sugar beet varieties—Resistant or susceptible to
the Beet Cyst Nematode Heterodera schachtii? Sugar Ind. 2017, 142, 277–284.
41.
Grosse, E.; Banasiak, L.; Lyr, H.; Jock, M. Neuer Labortest zum Nachweis des Rübennematoden
(Heterodera schachtii). Nachr.-Bl. Pﬂanzenschutz DDR 1985, 39, 111–112.
42.
Grosse, E.; Decker, H. Untersuchungen zur Eignung von Biotest und Schlupftest für den quantitativen Nachweis
des Rübenzystenälchen (Heterodera schachtii) in Bodenproben. Nachr.-Bl. Pflanzenschutz DDR 1989, 43, 227–230.
43.
Oerke, E.C.; Steiner, U. Potential of digital thermography for disease control. In Precision Crop Protection—
The Challenge and Use of Heterogeneity; Oerke, E.C., Gerhards, R., Menz, G., Sikora, R.A., Eds.; Springer:
Dordrecht, The Netherlands, 2010; pp. 167–182.
44.
Rouse, J.W.; Haas, R.H.; Schell, J.A.; Deering, D.W. Monitoring Vegetation Systems in the Great Plains with ERTS;
NASA: Goddard, MD, USA, 1974; Volume 351, p. 309.
45.
Mistele, B.; Gutser, R.; Schmidhalter, U.; Mulla, D.J. Validation of ﬁeld-scaled spectral measurements of the
nitrogen status in winter wheat. In Proceedings of the 7th International Conference on Precision Agriculture
and Other Precision Resources Management, Hyatt Regency, Minneapolis, MN, USA, 25–28 July 2004;
Precision Agriculture Center, Department of Soil, Water and Climate, University of Minnesota: Minneapolis,
MN, USA, 2004; pp. 25–28, 1187–1195.
46.
Haboudane, D.; Miller, J.R.; Tremblay, N.; Zarco-Tejada, P.J.; Dextraze, L. Integrated narrow-band vegetation
indices for prediction of crop chlorophyll content for application to precision agriculture. Remote Sens. Environ.
2002, 81, 416–426. [CrossRef]
Remote Sens. 2018, 10, 787
20 of 21
47.
Hunt, E.R.; Daughtry, C.S.T.; Eitel, J.U.; Long, D.S. Remote sensing leaf chlorophyll content using a visible
band index. Agron. J. 2011, 103, 1090–1099. [CrossRef]
48.
Gitelson, A.A.; Keydan, G.P.; Merzlyak, M.N. Three-band model for noninvasive estimation of chlorophyll;
carotenoids; and anthocyanin contents in higher plant leaves. Geophys. Res. Lett. 2006, 33. [CrossRef]
49.
Gamon, J.A.; Penuelas, J.; Field, C.B. A narrow-waveband spectral index that tracks diurnal changes in
photosynthetic efﬁciency. Remote Sens. Environ. 1992, 41, 35–44. [CrossRef]
50.
Gao, B.C. NDWI—A normalized difference water index for remote sensing of vegetation liquid water from
space. Remote Sens. Environ. 1996, 58, 257–266. [CrossRef]
51.
Clay, D.E.; Kim, K.I.; Chang, J.; Clay, S.A.; Dalsted, K. Characterizing water and nitrogen stress in corn using
remote sensing. Agron. J. 2006, 98, 579–587. [CrossRef]
52.
Penuelas, J.; Pinol, J.; Ogaya, R.; Filella, I. Estimation of plant water concentration by the reﬂectance water
index WI (R900/R970). Int. J. Remote Sens. 1997, 18, 2869–2875. [CrossRef]
53.
Mahlein, A.K.; Rumpf, T.; Welke, P.; Dehne, H.W.; Plümer, L.; Steiner, U.; Oerke, E.C. Development of spectral
indices for detecting and identifying plant diseases. Remote Sens. Environ. 2013, 128, 21–30. [CrossRef]
54.
R Development Core Team. R: A Language and Environment for Statistical Computing; R Foundation for
Statistical Computing: Vienna, Austria, 2008. Available online: http://www.R-project.org (accessed on
1 July 2017).
55.
Witten, I.H.; Frank, E.; Hall, M.A.; Pal, C.J. Data Mining: Practical Machine Learning Tools and Techniques;
Morgan Kaufmann: Burlington, MA, USA, 2016.
56.
Weiss, S.M.; Kulikowski, C.A. Computer Systems that Learn; Kaufmann Publishers: San Mateo, CA, USA, 1991.
57.
Breiman, L.; Friedman, J.; Olshen, R.; Stone, C. Classiﬁcation and Regression Trees; Wadsworth International
Group: Belmont, CA, USA, 1984.
58.
Oostenbrink, M. Major characteristics of the relations between nematodes and plants. In Proceedings of the
8th International Symposium of nematology, Antibes, France, 8–14 September 1966.
59.
Sherrod, P.H. DTREG Predictive Modeling Software. Users Manual. Available online: www.dtreg.com/
DTREG.pdf (accessed on 1 February 2018).
60.
Landis, J.R.; Koch, G.G. The measurement of observer agreement for categorical data. Biometrics 1977, 33,
159–174. [CrossRef] [PubMed]
61.
Seinhorst, J.W. The relation between nematode density and damage to plants. Nematologica 1965, 11, 137–154.
[CrossRef]
62.
Cooke, D.A.; Thomason, I.J. The relationship between population density of Heterodera schachtii; soil temperature;
and sugarbeet yields. J. Nematol. 1979, 11, 124. [PubMed]
63.
Hauer, M.; Koch, H.J.; Märländer, B. Water use efﬁciency of sugar beet cultivars (Beta vulgaris L.) susceptible;
tolerant or resistant to Heterodera schachtii (Schmidt) in environments with contrasting infestation levels.
Field Crops Res. 2015, 183, 356–364. [CrossRef]
64.
Trudgill, D.L. Resistance to and tolerance of plant parasitic nematodes in plants. Annu. Rev. Phytopathol.
1991, 29, 167–192. [CrossRef]
65.
Inoue, Y.; Kimball, B.A.; Jackson, R.D.; Pinter, P.J.; Reginato, R.J. Remote estimation of leaf transpiration rate
and stomatal resistance based on infrared thermometry. Agric. For. Meteorol. 1990, 51, 21–33. [CrossRef]
66.
Jones, H.G.; Schoﬁeld, P. Thermal and other remote sensing of plant stress. Gen. Appl. Plant Physiol. 2008, 34,
19–32.
67.
Trudgill, D.L. Effects of Globodera rostochiensis and fertilisers on the mineral nutrient content and yield of
potato plants. Nematologica 1980, 26, 243–254. [CrossRef]
68.
Haverkort, A.J.; Fasan, T.; Van de Waart, M. The inﬂuence of cyst nematodes and drought on potato growth.
2. Effects on plant water relations under semi-controlled conditions. Eur. J. Plant Pathol. 1991, 97, 162–170.
[CrossRef]
69.
Jones, H.G. Application of thermal imaging and infrared sensing in plant physiology and ecophysiology.
Adv. Bot. Res. 2004, 41, 107–163.
70.
Evans, K.; Franco, J. Tolerance to cyst-nematode attack in commercial potato cultivars and some possible
mechanisms for its operation. Nematologica 1979, 25, 153–162. [CrossRef]
71.
Trudgill, D.L. Concepts of resistance; tolerance and susceptibility in relation to cyst nematodes. In Cyst Nematodes;
Springer: Boston, MA, USA, 1986; pp. 179–189.
Remote Sens. 2018, 10, 787
21 of 21
72.
Radcliffe, D.E.; Hussey, R.S.; McClendon, R.W. Cyst nematode vs. tolerant and intolerant soybean cultivars.
Agron. J. 1990, 82, 855–860. [CrossRef]
73.
Aasen, H.; Bolten, A. Multi-temporal high-resolution imaging spectroscopy with hyperspectral 2D imagers—
From theory to application. Remote Sens. Environ. 2018, 205, 374–389. [CrossRef]
74.
Shakoor, N.; Lee, S.; Mockler, T.C. High throughput phenotyping to accelerate crop breeding and monitoring
of diseases in the ﬁeld. Curr. Opin. Plant Biol. 2017, 38, 184–192. [CrossRef] [PubMed]
© 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).


Paper 2:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: Relevant - The paper is making a systematic review on automated systems for real-time irrigation management can be interpreted as follows:
Addressing the global food challenge: The review aims to explore how automated, real-time irrigation management systems can contribute to the efficient use of water resources and enhance agricultural productivity to meet the growing demand for food.
Evaluating the current state and future potential: The primary goal is to critically assess the current state of end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. The review also seeks to identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.
Examining automation across the entire pipeline: The review intends to systematically analyze the automation of each component of the irrigation management pipeline, from data collection and transmission to processing, analysis, decision-making, and automated action. It aims to investigate the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
Highlighting the role of interoperability and standardization: The review seeks to emphasize the importance of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline. It aims to identify existing and emerging standards and their applicability to real-time irrigation management systems.
Identifying challenges and proposing solutions: The review intends to uncover the challenges associated with implementing real-time, automated irrigation systems, such as data quality, scalability, reliability, and security. It aims to propose solutions and best practices based on the analysis of case studies and real-world implementations.
  Relevance Score: 1.0
  Inline Citation: >
  Explanation: The study's purpose and main objectives are to assess the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. The study also seeks to identify gaps and propose solutions for seamless integration across the automated irrigation management system to achieve fully autonomous, scalable irrigation management.

 Full Text: >
Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Abstract Keywords 1. Introduction 2. Materials and methods 3. Results 4. Discussion 5. Conclusions Acknowledgments References Show full outline Cited by (710) Figures (14) Show 8 more figures Tables (3) Table 1 Table 2 Table 3 Remote Sensing of Environment Volume 117, 15 February 2012, Pages 322-337 Fluorescence, temperature and narrow-band indices acquired from a UAV platform for water stress detection using a micro-hyperspectral imager and a thermal camera Author links open overlay panel P.J. Zarco-Tejada, V. González-Dugo, J.A.J. Berni Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.rse.2011.10.007 Get rights and content Abstract The remote detection of water stress in a citrus orchard was investigated using leaf-level measurements of chlorophyll fluorescence and Photochemical Reflectance Index (PRI) data, seasonal time-series of crown temperature and PRI, and high-resolution airborne imagery. The work was conducted in an orchard where a regulated deficit irrigation (RDI) experiment generated a gradient in water stress levels. Stomatal conductance (Gs) and water potential (Ψ) were measured over the season on each treatment block. The airborne data consisted on thermal and hyperspectral imagery acquired at the time of maximum stress differences among treatments, prior to the re-watering phase, using a miniaturized thermal camera and a micro-hyperspectral imager on board an unmanned aerial vehicle (UAV). The hyperspectral imagery was acquired at 40 cm resolution and 260 spectral bands in the 400-885 nm spectral range at 6.4 nm full width at half maximum (FWHM) spectral resolution and 1.85 nm sampling interval, enabling the identification of pure crowns for extracting radiance and reflectance hyperspectral spectra from each tree. The FluorMOD model was used to investigate the retrieval of chlorophyll fluorescence by applying the Fraunhofer Line Depth (FLD) principle using three spectral bands (FLD3), which demonstrated that fluorescence retrieval was feasible with the configuration of the UAV micro-hyperspectral instrument flown over the orchard. Results demonstrated the link between seasonal PRI and crown temperature acquired from instrumented trees and field measurements of stomatal conductance and water potential. The sensitivity of PRI and Tc–Ta time-series to water stress levels demonstrated a time delay of PRI vs Tc–Ta during the recovery phase after re-watering started. At the time of the maximum stress difference among treatment blocks, the airborne imagery acquired from the UAV platform demonstrated that the crown temperature yielded the best coefficient of determination for Gs (r2 = 0.78; p < 0.05) and Ψ (r2 = 0.34; p < 0.001). Among the narrow-band indices calculated, the PRI515 index (reference band = 515 nm) obtained better results than PRI570, with r2 = 0.59 (p < 0.01) for Gs, and r2 = 0.38 (p < 0.001) for Ψ. The BGI1 index calculated from the blue (R400) and green (R550) bands resulted on the highest significance levels (p < 0.001) for both Gs (r2 = 0.62) and Ψ (r2 = 0.49). Out of the structural indices assessed, RDVI, MTVI1 and TVI showed greater sensitivity for Gs (r2 = 0.6; p < 0.01) and Ψ (p < 0.001) than NDVI. Chlorophyll fluorescence calculated from the micro-hyperspectral imagery with the FLD3 method tracked stress levels, obtaining r2 = 0.67 (p < 0.05) with stomatal conductance, and r2 = 0.66 (p < 0.001) with water potential. The work presented in this manuscript demonstrates the feasibility of thermal, narrow-band indices and fluorescence retrievals obtained from a micro-hyperspectral imager and a light-weight thermal camera on board small UAV platforms for stress detection in a heterogeneous tree canopy where very high resolution is required. Highlights ► Water stress was investigated using a micro-hyperspectral imager on board an UAV. ► A link between PRI and crown temperature was demonstrated over the entire season. ► Seasonal variation of PRI and Tc-Ta demonstrated a time delay of PRI during recovery. ► Best indicators of stress were crown Tc, F (FLD method) and the BGI1 index. ► It demonstrates the F retrieval using micro-hyperspectral imagers on board UAVs. Previous article in issue Next article in issue Keywords Stress detectionHyperspectralChlorophyll fluorescenceUAVHigh resolutionThermal 1. Introduction Water deficits occur in plants when evaporative demand exceeds the supply of water in the soil (Slatyer, 1967). It has long been found that short-term water deficits may affect growth processes (Hsiao et al., 1976), and therefore early detection of water stress is important. Water stress also induces stomatal closure, which reduces the transpiration rate, thus decreasing evaporative cooling and increasing leaf temperature. The increase in leaf and canopy temperatures was first suggested in the 1960s as a method of tracking water stress using thermal infrared thermometers (Fuchs and Tanner, 1966, Idso et al., 1978, Idso et al., 1981, Jackson, 1982, Jackson, Idso, Reginato and Ehrler, 1977, Jackson, Reginato and Idso, 1977, Jackson et al., 1981, Tanner, 1963). More recently, Sepulcre-Cantó et al., 2006, Sepulcre-Cantó et al., 2007 demonstrated that high-resolution airborne thermal imagers flown over orchard crops detected small canopy temperature differences linked to water stress levels. Later, Berni et al. (2009a) generated maps of tree canopy conductance (Gc) in orchards by applying a model based on canopy temperature estimated from high resolution airborne imagery, using as inputs net radiation and aerodynamic resistance as a function of wind speed and canopy structure. Nevertheless, monitoring of plant water status is critical not only for early detection of stress, but also to enable the application of deficit irrigation (DI) techniques (Fereres and Soriano, 2007) with the degree of precision needed. Generally, when DI methods are correctly applied in many fruit tree species, yield and fruit size are not affected (Girona, 2002), while some quality parameters are increased and water is saved (Crisosto et al., 1994, Fereres and Soriano, 2007, Girona et al., 2003, Mills et al., 1994). Even though canopy temperature is considered reliable as a proxy for plant water status monitoring (Jackson, 1982), there are physiological and remote sensing operational issues that support the development of new water-stress sensitive indices based on the visible and near infrared spectral regions (Suárez et al., 2009, Suárez et al., 2010). On the physiology side, in some crop plants the diurnal patterns of stomatal conductance are such that the relationships between canopy temperature and stress levels are not clear-cut. This is the case of citrus trees in semi-arid areas, where high vapor pressure deficits induce a continuous decline in leaf conductance from the early morning hours, even when trees are well supplied with water (Fereres et al., 1979, Hall et al., 1975, Villalobos et al., 2008). The level of stomatal conductance thus interacts with the evaporative demand and internal water status of the tree to determine tree canopy temperature. On the operational side, monitoring of large agricultural fields of tree and vineyard crops, generally planted in grids and therefore affected by soil background and shadows, requires high spatial resolution and short revisit periods (Berni et al., 2009b). The satellite thermal imagery currently available is limited to Landsat TM and ASTER sensors, yielding 120 m and 90 m, respectively. In such cases, monitoring of water stress is potentially suitable for regional scales only when canopy heterogeneity is accounted for (Moran et al., 1994). Nevertheless, modeling methods conducted with DART 3D simulation for orchards demonstrated the large effects due to soil and shadow components on the aggregated thermal pixel as a function of planting grid and soil temperature variations (Sepulcre-Cantó et al., 2009), making it difficult to monitor stress levels even for the extreme conditions in discontinuous orchards. Two pre-visual indicators of water stress proposed in the literature are the Physiological Reflectance Index (PRI) (Gamon et al., 1992), an index sensitive to the epoxidation state of the xanthophyll cycle pigments and to photosynthetic efficiency, serving as a proxy for water stress detection (Peguero-Pina et al., 2008, Suárez et al., 2009, Suárez et al., 2010, Suarez et al., 2008, Thenot et al., 2002), and the solar-induced chlorophyll fluorescence emission (Flexas et al., 2000, Flexas et al., 2002, Flexas et al., 1999, Moya et al., 2004) due to the link demonstrated between steady-state chlorophyll fluorescence and stomatal conductance. Although PRI was initially proposed as an indicator of the de-epoxidation state of the xanthophyll pigments and related to photosynthesis, recent studies demonstrate the sensitivity of this index for vegetation stress detection (Peguero-Pina et al., 2008, Suárez et al., 2009, Suárez et al., 2010, Suarez et al., 2008, Thenot et al., 2002). Therefore, PRI could be used for water stress detection as an alternative to thermal measurements, enabling the use of high spatial resolution capabilities that are more difficult in the thermal region. The other pre-visual water stress indicator is chlorophyll fluorescence, as several studies demonstrated its link with photosynthesis and other plant physiological processes (Krause and Weis, 1984, Larcher, 1994, Lichtenthaler, 1992, Lichtenthaler and Rinderle, 1988, Papageorgiou, 1975, Schreiber and Bilger, 1987, Schreiber et al., 1994). Steady-state chlorophyll fluorescence (Fs) has received less attention than other fluorescence measures, but its potential as a physiological indicator of stress using remote sensing methods has been recently emphasized (Soukupová et al., 2008), along with increasing scientific interest during the past five years. Nevertheless, retrieval of the fluorescence signal is very challenging since the contribution to the radiance signal is estimated to be about 2–3%. Several methods have been reported to extract the fluorescence signal at the leaf and canopy levels (Meroni et al., 2004, Meroni, Picchi, et al., 2008, Meroni et al., 2009, Meroni, Rossini, et al., 2008, Moya et al., 2004), which demonstrated the feasibility of fluorescence retrieval using the O2-A band feature. Additional experiments conducted at 0.065 nm FWHM resolution using ratios between the 757 nm (out) and 760 nm (in) bands (Pérez-Priego et al., 2005) showed good diurnal relationships between fluorescence and water stress levels at the canopy scale. Nevertheless, little work has been conducted for validation purposes at the airborne scale due to the lack of appropriate imagery at high spatial and spectral resolutions. Recent work (Zarco-Tejada et al., 2009) applied the in-filling method to 1 nm FWHM multispectral imagery acquired over peach, orange and olive orchards for water and nutrient stress detection. A thorough review of fluorescence detection methods can be found in Meroni et al. (2009), where the methodologies for fluorescence retrieval as a function of the type of instrument and number of bands available are discussed. Along these research objectives, a recent study assessed the impact of spectral sensor configurations on the Fraunhofer Line Depth (FLD) retrieval accuracy (Damm et al., 2011). A modeling work was used to study the effects of the spectral sampling interval, spectral resolution, signal to noise ratio, and spectral shift on the accuracy of the Fs retrievals using three FLD methods available. Results indicated the superior performance of the FLD3 method, the critical impact of the signal to noise ratio of the instrument used, and the feasibility for F retrievals with sensor configurations of 5 nm spectral resolution and small sampling intervals. Although PRI, fluorescence and canopy temperature have been proposed for water stress detection, their use has not been assessed over an entire season. In addition, the sensitivity of both temperature and PRI measured at the tree crown level needs further study, including an assessment for a new index formulation for PRI using the 515 nm wavelength as a reference band (Hernández-Clemente et al., 2011). The research reported here used continuous leaf and crown measurements of temperature and PRI during a citrus experiment to assess the seasonal variations in water stress levels. In addition, a micro-hyperspectral imager and a thermal camera were installed on board an unmanned aerial vehicle (UAV), and the imagery used to extract pure crown temperature, radiance and reflectance spectra to estimate chlorophyll fluorescence, visible ratios and structural indices for water stress detection. The Vegetation Fluorescence Canopy Model (FluorMOD) (Miller et al., 2004), a linked leaf model FluorMODleaf (Pedrós et al., 2004, Pedrós et al., 2008), and a canopy model FluorSAIL (Verhoef, 2004) were used to simulate canopy fluorescence and scattered radiance. Although the model requires further validation and refinement, FluorMOD was used as a tool for understanding the effects of the spectral bandwidth of the airborne sensor used to image the orchard for the retrieval of fluorescence through the FLD method. 2. Materials and methods Field measurements were carried out during the 2010 irrigation season (from June through October) in a commercial citrus orchard, including leaf stomatal conductance (Gs), water potential (Ψ), and continuous point measurements of crown temperature and PRI. High resolution thermal and hyperspectral imagery was collected over the citrus orchard in September 2010 to assess the sensitivity of vegetation indices and canopy temperature for water stress detection. 2.1. Field experiments and airborne campaigns 2.1.1. Field data collection The study was carried out in 2010 in two 0.6-ha plots of orange and mandarin trees in a commercial orchard located near La Campana, Seville (Spain) (37.8°N, 5.4°W). The orange trees (Citrus sinensis L. cv. Powell) were planted in 1997 in a 7 m × 4 m grid (358 trees/ha) in deep alluvial soil with a loam to sandy-loam texture. The mandarin (Citrus reticulata Blanco cv. Clemenvilla) orchard was planted in 1997 in a 7 m × 3 m grid. The climate in the area is Mediterranean, characterized by warm, dry summers and cool, wet winters, with an average annual rainfall and ETo (Penman–Monteith) of around 550 and 1300 mm, respectively. Four irrigation treatments were set up: i) farmer irrigation management (computed according to commercial practices); ii) 100% ET, where irrigation was scheduled to satisfy full (100%) ET requirements (estimated as crop evapotranspiration); iii) Regulated Deficit Irrigation (RDI1), with a deficit irrigation period (dates are shown in Table 1), where only 37% ET was applied; and iv) RDI2, similar to RDI1, but where the level of water application during the deficit irrigation period was 50% ET. Crop evapotranspiration was estimated as a crop coefficient (adapted to local conditions), and ETo was calculated from meteorological data provided by an automatic weather station located 10 km from the orchard. Each treatment was applied to individual plots of 12 trees and repeated four times. Table 1 lists the treatments, irrigation periods and depths, ground data collection and harvest and imagery acquisition dates for the orchard used in this study. Over the growing season, a Scholander pressure bomb (PWSC Model 3000, Soilmoisture Equipment Corp., CA, USA) was used to measure xylem water potential (Ψ) weekly or biweekly around noon on 4 selected trees per treatment. Stomatal conductance was measured on 12 trees using a leaf porometer (model SC-1, Decagon Devices, Inc., Pullman, WA, USA) at the time of the flights. On the same day, the number of water potential measurements was increased to a total of 40 monitored trees, representing a wide range of water stress conditions. Table 1. Summary of each study site, ground data collected, and imagery acquisition dates. The treatments under RDI had a withheld period (no irrigation) followed by a re-watering period until their stem water potential was equal to the control. Species Treatments Irrigation strategy Withheld period Irrigation dose Continuous monitoring During flights (09/14) Mandarin Field Sustained Ψ, Gs 100ET Full requirements 100% ET Leaf and canopy PRI, Tc, Ψ, Gs RDI1 Regulated 06/23 to 08/31 37% ET during RDI period, later: 100% ET Leaf and canopy PRI, Tc, Ψ, Gs RDI2 Regulated 06/23 to 08/31 50% ET during RDI period, later: 100% ET Ψ, Gs Orange Field Sustained Ψ, Gs Ψ 100ET Full requirements 100% ET Tc, Ψ, Gs Ψ, Gs RDI1 Regulated 06/23 to 09/15 37% ET during RDI period, later: 100% ET Tc, Ψ, Gs Ψ, Gs RDI2 Regulated 06/23 to 09/15 50% ET during RDI period, later: 100% ET Ψ, Gs Ψ Leaf chlorophyll fluorescence measurements made under natural light conditions were conducted using the Pulse-Amplitude-Modulated Fluorometer PAM-2100 (Heinz Walz GMBH, Effeltrich, Germany), measuring steady-state Fs fluorescence on 8 selected trees, 30 leaves/tree. Fluorescence measurements were conducted at three times over the course of the day from 9.00 h until 15:00 h local time in order to monitor the diurnal variation of Fs for well-watered and water-stressed trees. Leaf PRI measurements calculated as (R570 − R531) / (R531 + R570) (Suárez et al., 2009, Suárez et al., 2010, Suarez et al., 2008) were conducted on 4 mandarin trees (two trees under 100% ET irrigation treatment, and two RDI1 water-stressed trees), measuring each date 30 leaves/tree with a PlantPen instrument (Photon Systems Instruments, Brno, Czech Republic) for a total of 9 days from June until late September. Leaf PRI measurements were conducted between 11.00 h and 12.00 h local time on each date. In addition to the single-date measurements conducted for water potential, stomatal conductance, steady-state chlorophyll fluorescence, and leaf PRI, a total of 8 trees were instrumented with IRR-P thermal sensors (22° half-angle FOV) (Apogee, UT, USA) and 4 canopy PRI sensors (25° FOV) (SKR 1800, Skye Instruments, Powyd, UK), acquiring continuous thermal and PRI crown data (calculated as (R570 − R531) / (R570 + R531)) from May 2010 throughout the entire season in the mandarin and orange orchards. The multispectral Skye sensors were installed in tandem with the IRR-P thermal sensors, both targeting the same crown spots and acquiring at 530 and 570 nm bands with a 10 nm FWHM bandwidth. An additional PRI sensor was installed in the field for continuous measurement of downwelling irradiance using a cosine diffuser. The measurements were acquired at a rate of 1/s and were aggregated to store the mean value at 5-minute intervals in dataloggers installed in the field (model CR10X, Campbell Sci., UT, USA). Air temperature (Ta) data were measured continuously in the field with a Vaisala Weather Transmitter (model WXT510, Vaisala Oyj, Helsinki, Finland) installed in the study site 1 m above the trees. The single-band infrared temperature (IRT) sensors covered the 6.5-14 μm range, and were assessed both in the laboratory and under natural sun conditions to characterize the IRT response to diurnal temperature variation (Sepulcre-Cantó et al., 2006), yielding errors within the accuracy limits of the instrument, ± 0.4 °C, over a 5 °C to 40 °C range. All upwelling and downwelling instruments were calibrated in the laboratory using a uniform calibration body (integrating sphere, CSTM-USS-2000C Uniform Source System, LabSphere, NH, USA) at two different levels of illumination. Additionally, a radiance calibration was conducted at noon twice on each of the four upwelling PRI sensors using three lambertian panels of 2% (black), 50% (gray) and 98% reflectance (white) (LabSphere, NH, USA). The aim was to ensure a proper radiance calibration over the season and to test the linearity of the instruments under natural light conditions. 2.1.2. Airborne campaigns An unmanned aerial vehicle (UAV) platform for remote sensing research was developed at the Laboratory for Research Methods in Quantitative Remote Sensing (QuantaLab, IAS-CSIC, Spain) to carry a payload with thermal and hyperspectral imaging sensors (Berni, Zarco-Tejada, Suarez and Fereres, 2009, Zarco-Tejada et al., 2008). The UAV consisted of a 5-m wingspan fixed-wing platform capable of carrying a 3 kg payload for 1.5 h endurance at 13.5 kg take-off weight (TOW) (Viewer, ELIMCO, Seville, Spain). The UAV was controlled by an autopilot for autonomous flight (AP04, UAV Navigation, Madrid, Spain) to follow a flight plan using waypoints. The autopilot consists of a dual CPU controlling an integrated Attitude Heading Reference System (AHRS) based on a L1 GPS board, 3-axis accelerometers, yaw rate gyros and a 3-axis magnetometer (Berni et al., 2009b). Communication with the ground was conducted through a radio link where position, attitude and status data were transmitted at 20 Hz frequency; this also acted as a communication link for the operation of remote sensing hyperspectral and thermal cameras on board the UAV. The hyperspectral imager installed on board the UAV was a micro-hyperspectral camera (Micro-Hyperspec VNIR model, Headwall Photonics, MA, USA) flown in the spectral mode of 260 bands at 1.85 nm/pixel at 12-bit radiometric resolution, yielding an FWHM of 3.2 nm with a 12-micron slit, and 6.4 nm with a 25-micron slit. Data acquisition and storage on board the UAV was set to 50 fps, and integration time was 18 ms. The current system operated by QuantaLab-IAS-CSIC (Spain) is capable of acquiring 320 bands in the 400-1000 nm region, although the campaign described here was flown with 260 bands in the 400–885 nm region due to storage and data rate limitations at the time of the campaign. The 8-mm optics focal length yielded an IFOV of 0.93 mrad, an angular FOV of 50°, obtaining a swath of 522 m at 53 × 42 cm resolution, resampled to 40 cm for a flight conducted at 575 m AGL altitude and 75 km/h ground speed. The airborne campaign over the orchard consisted on flightlines acquired in the solar plane at 11.00 am local time on September 14th 2010, acquiring both hyperspectral and thermal imagery. The hyperspectral imager was radiometrically calibrated using coefficients derived from measurements made with a calibrated uniform light source (integrating sphere, CSTM-USS-2000C Uniform Source System, LabSphere, NH, USA) at four different levels of illumination and six different integration times. Hyperspectral imagery was atmospherically corrected using the total incoming irradiance at 1 nm intervals simulated with the SMARTS model developed by the National Renewable Energy Laboratory, US Department of Energy (Gueymard, 1995, Gueymard, 2001) using aerosol optical depth measured at 550 nm with a Micro-Tops II sunphotometer (Solar LIGHT Co., Philadelphia, PA, USA) collected in the study areas at the time of the flights. SMARTS computes clear sky spectral irradiance, including direct beam, circumsolar, hemispherical diffuse, and total on a tilted or horizontal plane for specified atmospheric conditions. The algorithms were developed to match the output from the MODTRAN complex band models within 2%, but using aerosol optical depth as input. The spectral resolution is 0.5 nm for the 280–400 nm region, 1 nm for the 400–1750 nm, and 10 nm for 1750–4000 nm spectral regions. This radiative transfer model has been previously used in other studies to perform the atmospheric correction of narrow-band multispectral imagery, such as in Berni, Zarco-Tejada, Suarez and Fereres, 2009, Suárez et al., 2010. The output irradiance at 0.5 and 1 nm spectral bandwidth from SMARTS has been used as a reference irradiance spectra for solar energy studies (Gueymard et al., 2002) and available at http://www.nrel.gov/ (Gueymard, 2005). An inertial measuring unit (IMU) installed on board the UAV synchronized with the hyperspectral imager was used to ortho-rectify the imagery using PARGE (ReSe Applications Schläpfer, Wil, Switzerland) (Fig. 1a). The orchard study site used for field data collection can be seen in Fig. 1b. The high resolution hyperspectral imagery acquired over the orchard enabled single tree identification for field validation purposes (Fig. 1c), successfully separating pure crown from shaded and sunlit soil reflectance. Each single pure tree crown from the entire orchard was identified using automatic object-based crown-detection algorithms, enabling the extraction of average crown radiance (Fig. 2a) and reflectance (Fig. 2b) for the 260 spectral bands acquired over the entire orchard. Each extracted crown was labeled as a function of the water stress treatment block (Fig. 3a), and each single crown spectrum was used for the analysis conducted through crown-level vegetation index calculation (Fig. 3c). Download : Download high-res image (2MB) Download : Download full-size image Fig. 1. Hyperspectral flight line acquired with the micro-hyperspectral imager on board the unmanned aerial vehicle (UAV) yielding 40 cm resolution and 260 spectral bands at 6 nm FWHM (a), observing the orchard study site used for field data collection (b) and the single tree identification due to the high resolution imagery acquired (c). Download : Download high-res image (199KB) Download : Download full-size image Fig. 2. Sample extraction of the mean crown radiance (a) and reflectance (b) for the 260 spectral bands at 6 nm FWHM acquired over the orchard. Download : Download high-res image (857KB) Download : Download full-size image Fig. 3. Sixteen experimental irrigation blocks designed for well-watered (100%ET) and regulated deficit irrigation (RDI) schemes used for pure crown radiance and reflectance extraction (a) from the micro-hyperspectral imagery acquired at 40 cm resolution and 260 bands at 6 nm FWHM (c). The same experimental field was imaged using a high resolution thermal camera acquiring at 40 cm pixel size (b), enabling the extraction of pure tree crown temperature from each irrigation block (d). The two central trees of each irrigation treatment block (a total of 32 trees) plus 8 additional selected trees (40 trees in total) were used for water potential measurements conducted on the date of the airborne flight over the orange study site, September 14, 2010. The data extracted from each single crown using the hyperspectral reflectance imagery were used to calculate indices related to: i) epoxidation state of the xanthophyll cycle (EPS); ii) chlorophyll a + b concentration; iii) blue/green/red ratio indices; iv) carotenoid concentration; and v) tree crown structure. The xanthophyll pigment indices were the Photochemical Reflectance Index (PRI) calculated with the 570 nm band as a reference (PRI570) (Gamon et al., 1992) and with the 515 nm band as a reference (PRI515) shown to minimize structural effects (Hernández-Clemente et al., 2011). The chlorophyll a + b indices consisted of the R750/R710 (ZM) (Zarco-Tejada et al., 2001), Vogelmann (VOG1 = R740/R720) (Vogelmann et al., 1993), and the family of indices based on the CARI index (TCARI = 3 * [(R700 − R670) − 0.2 * (R700 − R550) * (R700/R670)]) normalized by OSAVI ((1 + 0.16) * (R800 − R670) / (R800 + R670 + 0.16)) in the form suggested by Haboudane et al. (2002) (TCARI/OSAVI). The blue/green/red ratio indices consisted of the Greenness index G (R550/R670), blue/green indices (BGI1 = R400/R550; BGI2 = R450/R550) (Zarco-Tejada et al., 2005) and blue/red indices (BRI1 = R400/R690; BRI2 = R450/R690), and the Lichtenthaler index (LIC3 = R440/R740) (Lichtenhaler et al., 1996). Other indices related to carotenoid concentration were calculated, including the R520/R500, R515/R570, and R515/R670 (see Meggio et al., 2010, Hernández-Clemente et al., 2011, Zarco-Tejada et al., 2005, for a full review of these indices). Structural indices were calculated to assess if changes in the tree crown structure due to water stress could be captured by NDVI (R800 − R670) / (R800 + R670) (Rouse et al., 1974), (Rougean and Breon, 1995), and other ratios such as the simple ratio SR (R800/R670) (Jordan, 1969), MSR ( ) (Chen, 1996), the OSAVI index, the triangular vegetation index TVI = 0.5 ∗ [120 ∗ (R750 − R550) − 200 ∗ (R670 − R550)] and the modified triangular index MTVI1 = 1.2 ∗ [1.2 ∗ (R800 − R550) − 2.5 ∗ (R670 − R550)] (see Haboudane et al., 2004, for a complete review of structural indices developed for robust estimation of LAI in crops). Radiance spectra for each single tree (Fig. 4a), later used for fluorescence retrieval at each tree crown using the 760 nm O2-A in-filling method, were extracted (Fig. 4b) observing a total of 15 spectral bands within the O2-A feature. Radiance difference and ratio indices based on the in (L762 nm) and out bands (L747 nm; L780 nm), the integral of the oxygen absorption between bands 747–780 nm, the curvature index (Zarco-Tejada et al., 2000), and the FLD methods using two (FLD2) and three (FLD3) spectral bands were applied to the hyperspectral imagery to estimate the fluorescence signal. A full review of methods to estimate the fluorescence signal using FLD and different spectral fitting methods can be found in Meroni et al. (2010). Download : Download high-res image (521KB) Download : Download full-size image Fig. 4. Tree crown radiance spectra extracted from the 40 validation trees of the experiment at 40 cm resolution (a) used for fluorescence quantification with the 760 nm O2-A FLD in-filling method. A total of 15 spectral bands at 6.4 nm FWHM within the O2-A feature were acquired (b). The study area was also imaged with a thermal camera to derive surface temperature for each single crown under study (Fig. 3b). The thermal camera used was the Miricle 307 (Thermoteknix Systems Ltd., Cambridge, UK) equipped with a 14.25 mm f1.3 lens, connected to a computer via USB 2.0 protocol. The image sensor was a Focal Plane Array (FPA) based on uncooled microbolometers with a resolution of 640x480 pixels and a spectral response in the range of 8-12 μm, yielding a 25 μm pixel size. The camera delivered uncalibrated 14-bit digital raw images that were stored on board. Radiometric calibration was conducted in the laboratory using blackbodies under varying target and ambient temperatures to develop radiometric calibration algorithms. The sensor implemented an internal calibration for non-uniformity correction (NUC). Thermal images from the study area were acquired at 40 cm pixel resolution, enabling the retrieval of pure crown average temperature from each tree under study (Fig. 3d). Atmospheric correction methods were applied to the thermal imagery based on the MODTRAN radiative transfer model to obtain surface temperature. Local atmospheric conditions were determined by air temperature, relative humidity and barometric pressure measurements at the time of flight using a portable weather station (Model WXT510, Vaisala, Finland) and were used as input into MODTRAN. Atmospheric correction methods conducted with single-band thermal cameras were shown to provide successful estimation of vegetation surface temperature (Berni et al., 2009b). 2.2. Modeling the fluorescence retrieval with FluorMOD The standard retrieval of chlorophyll fluorescence through the in-filling method uses the canopy radiance (L) acquired from fluorescing (v) and non-fluorescing (n) targets in (i) and out (o) of the oxygen feature found at 760.5 nm, defined as Liv, Lin, Lov, Lon, respectively, to calculate the reflectance (R) and fluorescence (F) signals (Eqs. (1), (2)). (1) (2) This method was successfully tested at the leaf and canopy levels (Meroni et al., 2004, Meroni, Picchi, et al., 2008, Meroni, Rossini, et al., 2008, Moya et al., 2004) and also using subnanometer resolution at the canopy level for stress detection (Pérez-Priego et al., 2005). The application of this methodology at the image level (Maier et al., 2002, Zarco-Tejada et al., 2009) requires modeling approaches to understand the effects of the instrument spectral resolution and pixel size when aggregating fluorescing and non-fluorescing targets. The effects of the atmosphere are critical for the correct estimation of the absolute fluorescence signal. This is important because both the radiance extracted from pure tree crowns and the irradiance spectra are needed to calculate F, therefore being critical in multi-temporal or diurnal airborne campaigns under changing atmospheric conditions. In this study, the F retrieval for each tree crown was conducted under constant atmospheric conditions for all the monitored trees, playing the atmospheric effects a lower role. The feasibility for estimating fluorescence with the hyperspectral imagery acquired as part of this study was assessed using the linked leaf-canopy fluorescence model developed as part of the FluorMOD project (Miller et al., 2004). FluorMODleaf (Pedrós et al., 2004) is a leaf fluorescence and reflectance model linked to FluorSAIL (Verhoef, 2004), a canopy reflectance and fluorescence model that simulates the fluorescence signal at the canopy level (detailed information on the linked leaf-canopy models can be found in Zarco-Tejada et al., 2006). In particular, the FluorMOD model was used in this study to assess the fluorescence retrieval FLD3 in-filling method (bands in L762 nm; out L747 nm and L780 nm) as a function of the spectral bandwidth of the hyperspectral instrument flown over the study sites in this study (see Zarco-Tejada et al., 2009, for simulations conducted to assess index sensitivity for fluorescence retrieval). A thorough modeling study conducted for a wide range of sensor configurations and FLD methods can be reviewed in Damm et al. (2011), which assessed the feasibility for F estimation as a function of the spectral sampling interval, spectral resolution, signal to noise ratio, and the spectral shift of the instrument used. The inputs required to run the leaf and canopy model (Table 2) are the number of layers in PROSPECT (N); chlorophyll a + b content in μg/cm2 (Cab); water equivalent thickness in cm (Cw); dry matter content in μg (Cm); fluorescence quantum efficiency (Fi); leaf temperature in °C (T); species temperature dependence (S); and stoichiometry of PSII to PSI reaction centers (Sto). The canopy model requires the viewing zenith angle in degrees (Vza), relative azimuth angle in degrees (Raz), canopy leaf area index (LAI), hot spot parameter (h), and leaf inclination distribution function (LIDF). Table 2. FluorMOD model inputs used in this study to assess the sensitivity of reflectance indices through atmospheric, leaf and canopy inputs. Parameters Fi, Cab and LAI were varied randomly within the range indicated in the table. Atmospheric parameters Atmospheric File FLUORMOD30V23.MEP Irradiance PAR dependence parameters: PARb = 0.0035; PARre = 0.005 Visibility 23 km Solar zenith angle 30° Viewing zenith angle 0° Relative azimuth angle 0° Leaf inputs N 1.8 Fi 0.03–0.06 Cab 30–80 μg/cm2 T 30 °C Cw 0.025 cm S Standard Cm 0.01 g/cm2 Sto 1.5 Canopy inputs Leaf Area Index (LAI) 2–4 LIDF parameter a − 0.5 LIDF parameter b − 0.5 Hot spot parameter 0.1 Soil spectrum Standard The model was used to generate synthetic spectra through random input parameters such as fluorescence quantum efficiency Fi (0.03–0.06), chlorophyll content Cab (30–80 μg/cm2), and leaf area index LAI (2–4). FluorMOD modeled the leaf reflectance and transmittance spectra, along with the simulated fluorescence radiance for each reflectance and transmittance signal. The canopy fluorescence radiance (F) at 1 nm resolution was then simulated for each set of inputs (Fig. 5a), observing the canopy signal added to the canopy radiance as a function of the fluorescence amplitudes. The canopy radiance simulated at 1 nm resolution, which included the fluorescence effects (Fig. 5b), reproduced the peak depth at 760 nm used for fluorescence retrieval through the in-filling method (Fig. 5c). The similar spectral shape encountered both in the FluorMOD canopy radiance simulation in the 400–885 nm region and in the airborne hyperspectral imagery (Fig. 6a) shows the effects on the depth at 760 nm as a function of bandwidth (1 nm for the FluorMOD simulation; 6.4 nm for the hyperspectral imager flown over the study sites) (Fig. 6b). Download : Download high-res image (462KB) Download : Download full-size image Fig. 5. Simulated canopy fluorescence radiance (F) at 1 nm resolution (a) and the canopy radiance including the fluorescence effects (b) using FluorMOD. The spectral range between 755 and 770 nm shows the peak depth at the 760 nm region used for fluorescence retrieval methods (c). Download : Download high-res image (312KB) Download : Download full-size image Fig. 6. Canopy radiance spectra simulated with FluorMOD in the 400–885 nm region as compared against the airborne micro-hyperspectral radiance extracted from a pure tree crown (a). Effects on the radiance depth at the 760 nm region as a function of bandwidth (1 nm for the FluorMOD simulation; 6.4 nm for the hyperspectral imager flown over the study sites) (b). The simulated canopy radiance spectra obtained with FluorMOD were spectrally resampled with a gaussian convolution to simulate the FWHM of the airborne hyperspectral imager. The 760 nm peak depth decreased as a function of bandwidth (Fig. 7), while still showing the feature as compared with the original 1 nm FWHM spectra. Such effects caused by the bandwidth were assessed by applying the FLD3 in-filling algorithm retrieval method to the FluorMOD simulated datasets. A comparison of the F retrieval as a function of the spectra bandwidth was conducted to assess if the 6.4 nm FWHM of the airborne hyperspectral imagery would enable retrieval of the fluorescence signal to allow the water stress detection sought in this study. The method to estimate the fluorescence signal from the FluorMOD simulated synthetic spectra consisted on the same FLD3 method applied to the airborne hyperspectral imagery, which used the in (L762 nm) and out bands (L747 nm; L780 nm) for the calculation. As previously indicated, the FLD3 method and others suitable depending on the spectral data available (number of bands and spectral bandwidth available) can be reviewed in Meroni et al. (2010). Download : Download high-res image (150KB) Download : Download full-size image Fig. 7. Canopy radiance spectra simulated with FluorMOD (dotted line), and spectrally resampled through gaussian convolution to simulate the FWHM of the airborne hyperspectral imager (6 nm). The 760 nm peak depth decreases as a function of bandwidth, yet still showing the feature as compared with the original 1 nm FWHM spectra. 3. Results 3.1. Modeling results conducted with FluorMOD The synthetic spectra simulated from FluorMOD for varying fluorescence emissions (Fi), chlorophyll concentration (Cab) and leaf area index values (LAI) showed good agreement for R (Eq. 1) (r2 = 0.99; p < 0.001) and F (Eq. 2) (r2 = 0.84; p < 0.001) when calculated with 1 nm and 6 nm FWHM spectral resolution. The close relationship between the F signal calculated at 1 and 6 nm bandwidth (r2 = 0.84; p < 0.001) demonstrated that the 6 nm spectra would still capture the input fluorescence emission. The absolute error obtained when comparing the F signal retrieved with the FLD3 in-filling method for both spectral resolutions against the fluorescence radiance signal simulated at 1 nm resolution (Fig. 8) yielded RMSE values of 4.58% (for the 1 nm FWHM spectra) and 12.16% (for the 6 nm FWHM spectra). The error increment obtained for the F retrieval (RMSE from 4.58% to 12.16%) as a function of the spectral resolution used, and the overall coefficient of determination obtained when using 6 nm FWHM spectra (r2 = 0.75) suggests the potential retrieval of the fluorescence signal with larger spectral bandwidths and small sampling intervals when using the FLD3 method. Download : Download high-res image (202KB) Download : Download full-size image Fig. 8. Relationship obtained between the simulated FluorMOD fluorescence radiance and the fluorescence estimated (FLD3 method) from synthetic spectra at 1 nm (RMSE = 4.58%) and 6 nm FWHM (RMSE = 12.16%). RMSE values below 15% are found when using the spectral resolution (6.4 nm FWHM), sampling interval (1.85 nm) and signal to noise ratio (300:1 without binning) of the micro-hyperspectral imager used in this study. Further comparison between the estimated F signal through the FLD3 method and the FluorMOD inputs Fi, Cab and LAI showed agreement between F and Fi (r2 = 0.8; p < 0.001), and the lack of relationship between F and LAI (r2 = 0.01; p-value not significant), and between F and Cab (r2 = 0.05; p-value not significant). These results demonstrate that the F signal retrieval using the FLD3 method is not correlated with Cab and LAI. Moreover, it shows that a statistically significant relationship (p < 0.001) exists between fluorescence quantum efficiency and F estimation when conducted with 6 nm FWHM resolution spectra (12.16% RMSE). This is the spectral resolution of the airborne micro-hyperspectral imager used to fly over the sites in this study. 3.2. Experimental results 3.2.1. Leaf and crown measurement results The diurnal leaf measurements conducted with the PAM-2100 fluorometer on attached leaves selected from well irrigated (100%ET) and deficit irrigation (RDI1) trees (Fig. 9a) showed lower steady-state fluorescence emission (Fs) for the water stressed trees during the experiment, as expected. The diurnal trend showed greater Fs differences between 100% ET and RDI1 in early morning than at noon. These results from citrus trees showing lower Fs values in RDI1 vs 100% ET irrigation levels coincide with the ones obtained in similar experiments in other crops, such as in olive and peach orchards under stress (Pérez-Priego et al., 2005, Zarco-Tejada et al., 2009). Download : Download high-res image (208KB) Download : Download full-size image Fig. 9. (a) Diurnal mean leaf Fs values obtained with the PAM-2100 from trees under 100% ET (well-watered) and RDI (water-stressed) treatments (n = 30 per tree at each measuring time; error bars are the standard deviation); (b) mean leaf PRI measurements acquired from trees under 100% ET and RDI1 treatments over the course of the experiment, using the PlantPen instrument (n = 30 per tree at each measuring time; error bars are the standard deviation). PRI calculated as (R570 − R531) / (R570 + R530). The June–September time-series leaf PRI data (calculated as (R570 − R531) / (R531 + R570)) measured with the PlantPen instrument (Fig. 9b) show the seasonal trend for both 100% ET and RDI1 trees. Maximum differences in leaf PRI were found in July and August, corresponding to the times of maximum water potential differences among treatments (− 0.98 and − 1.73 MPa for 100% ET and RDI1 trees, respectively). The leaf PRI time series data showed the stress and recovery periods at the beginning and end of the irrigation experiment, with higher leaf PRI values measured for RDI1 than for the 100%ET, as expected. The well irrigated 100% ET trees showed a decline in PRI values from June (PRI = 0.046) until mid-July (PRI = 0.028), even though the water potential measured on the same trees was nearly identical (Ψ = − 0.84 MPa in June, and Ψ = − 0.86 MPa in July). Nevertheless, leaf PRI values measured on stressed trees were always higher than PRI values measured on 100% ET trees, in agreement with the work conducted by Suarez et al. (2008, 2009, 2010) in citrus and olive orchards. The seasonal variation of leaf PRI measurements could be due to changes in the xanthophyll epoxidation state over the season, but also due to potential effects caused by chlorophyll a + b, carotenoid and anthocyanin concentration as a function of the water stress. The leaf-level results obtained for Fs and PRI measured on stressed and well-watered trees had the intention to demonstrate that the results later obtained at canopy level were not caused by structural effects driven by water stress, but related to the physiological condition measured at the leaf level. Results for the leaf PRI measurements obtained throughout the season are in agreement with canopy PRI, canopy Tc and the Tc–Ta data recorded with the Skye and Apogee sensors installed over 100% ET and RDI1 crowns (Fig. 10). The trends for PRI calculated as (R570 − R531) / (R570 + R531) and Tc–Ta measured at noon throughout the entire experiment demonstrate a similar seasonal pattern for both crown PRI and crown Tc–Ta on the RDI1 treatment (Fig. 10a). The time-series data indicate that both canopy PRI and Tc–Ta were coupled throughout the experiment, showing a maximum for both indicators at the time of the maximum stress (Ψ = − 1.73 MPa; Tc–Ta = 5 K; PRI = − 0.05), starting a recovery at the beginning of August when both Tc–Ta and PRI decreased together until the re-watering phase in mid-September. Although the general pattern for both indicators seemed similar throughout the experiment (Fig. 10a), a delay is observed on the PRI trend as compared against Tc–Ta: during the re-watering phase the crown temperature reaches Tc–Ta = 0 while PRI still shows values that indicate stress levels (PRI = − 0.1). Therefore, the re-watering phase was first tracked by Tc–Ta, followed later by PRI. These results are consistent with the hypothesis that canopy temperature is linked to transpiration rates, and therefore is more short-term sensitive to water stress than PRI, which is linked to the epoxidation state of the xanthophyll cycle pigments. In addition to the indicated biochemical effects on leaf PRI, crown structural changes over the course of the season would also have a role on the canopy PRI trends observed during stress and on the re-watering phase. The seasonal trend observed in the continuous PRI data acquired for the March–November time frame corresponds as well with seasonal changes of irradiance, air temperature and vapor pressure deficit (VPD) levels. Download : Download high-res image (335KB) Download : Download full-size image Fig. 10. Seasonal trends for canopy PRI and Tc–Ta (K) for RDI1 (a) and 100% ET (b) treatments acquired at noon (data shown are mean values for 5-minute intervals from measurements acquired at a rate of 1/s). PRI calculated as (R570 − R531) / (R570 + R531). A close look at the re-watering phase (Fig. 11) shows the behavior of canopy PRI and Tc–Ta acquired for two RDI1 trees as compared against a 100% ET reference tree. The patterns found indicate that the canopy PRI values measured on RDI1 trees started to decline after re-watering began, intersecting the non-water stress baseline (100%ET) at mid November (Fig. 11a). The agreement between Tc–Ta measured on reference (100%ET) and deficit RDI1 trees (Fig. 11b) shows that the recovery after re-watering started was detected earlier than when using PRI as an indicator of water stress. By the end of October the Tc–Ta values for 100% ET and RDI1 were equal (Tc–Ta below 1 K). Download : Download high-res image (415KB) Download : Download full-size image Fig. 11. Canopy PRI (a) and Tc–Ta (K) (b) obtained at noon from the stressed (RDI1) and well-watered (100%ET) irrigated trees over the course of the experiment. Plots show higher PRI and Tc–Ta values for the stressed (RDI1) trees (data shown are mean values for 5-minute intervals acquired at a rate of 1/s). PRI calculated as (R570 − R531) / (R570 + R531). The general pattern for the Tc–Ta and PRI data acquired throughout the experiment varied when targeting well-watered trees (100%ET). In such case, the Tc–Ta and PRI range of variation acquired throughout the experiment on 100% ET trees was much narrower than the values measured on RDI trees due to the reduced stress levels and small variation of stress during the experiment on 100% ET trees (Tc–Ta below 2 K for the 100% ET trees as compared to Tc–Ta values up to 5 K on the stressed RDI1 trees) (Fig. 10b). Moreover, the Tc–Ta and PRI data acquired on well-watered trees showed values related to non-stress levels during the course of the experiment, with Tc–Ta below 2 K and PRI values close to PRI = − 0.15 at all times. This was due to the full ET irrigation doses applied which assured low water stress conditions throughout the experiment, as demonstrated by the water potential measurements conducted: mean Ψ = − 1.00 MPa; maximum Ψ = − 0.73 MPa; minimum Ψ = − 1.27 MPa (while the variation of the RDI1 during the experiment ranged between Ψ = − 0.90 MPa and Ψ = − 2.18 MPa). The water potential data measured on 100% ET and RDI1 trees over the entire experiment were compared against crown temperature and PRI (Fig. 12) to assess the seasonal trends during stress and recovery phases. The mid-day Tc and PRI canopy values for the dates when water potential measurements were made show an agreement between Tc and canopy PRI (Fig. 12a) and between water potential and PRI (Fig. 12b) for the RDI1 stressed trees. Therefore Figs. 12a and 12b show a similar trend for the remote sensing indicators (PRI, Tc) as compared with ground-measured water potential (Ψ). Nevertheless, Fig. 12b shows that the water potential decreases rapidly after re-watering (Ψ from − 1.7 MPa down to − 0.9 MPa in mid September) while canopy PRI decreased at lower rate over such re-watering phase. The data obtained on the well-watered trees (100%ET) showed a general lack of relationship between Tc and PRI (Fig. 12c) and between water potential and canopy PRI (Fig. 12d), probably due to the lower gradient found on the water potential measurements conducted over the season on the well-watered trees. These figures showed that the seasonal crown PRI and Tc–Ta data tracked water potential levels during the experiment, yielding coefficients of determination for PRI vs Ψ of r2 = 0.45 (p < 0.001), and Tc–Ta vs Ψ of r2 = 0.44 (p < 0.001). Download : Download high-res image (426KB) Download : Download full-size image Fig. 12. Trends obtained for Tc (K) and PRI (a, c) as compared against water potential Ψ (MPa) (b, d) for the entire experiment, showing stressed (RDI1) (a, b) and well-watered (100%ET) (c, d) treatments. PRI calculated as (R570 − R531) / (R570 + R531). 3.2.2. Airborne hyperspectral and thermal imagery results The hyperspectral and thermal airborne flights were conducted on September 14, prior to the re-watering phase, and therefore at the time of the maximum stress differences among treatment blocks. Based on the leaf water potential measurements observed (Ψ ranging from − 0.5 to − 2 MPa), the hyperspectral and thermal imagery acquired should be able to detect the stress levels measured in the field at the time of the flights. The high spatial resolution obtained in both hyperspectral and thermal imagery (40 cm resolution in both cases) enabled the identification of pure crowns (Fig. 1, Fig. 3), enabling the comparison of tree-level water stress measurements and airborne-derived indices of stress. The pure-crown temperature data extracted from the thermal imagery, and the narrow-band indices calculated from the hyperspectral imagery based on xanthophyll pigment absorption, chlorophyll a + b, blue/green/red ratios, carotenoid content, and structural indices were compared against the stomatal conductance and water potential measured at the time of the flights (Table 3). The best relationship with Gs was found for crown temperature (r2 = 0.78; p < 0.05) (Fig. 13a). The reflectance indices calculated based on PRI formulations using R570 as the reference band (PRI570) (Gamon et al., 1992) and the new formulation by Hernández-Clemente et al. (2011) (band R515 as reference to minimize structural canopy effects, PRI515) yielded better performance for PRI515 (r2 = 0.59; p < 0.01) than for PRI570 (p-value not significant) (Fig. 13c for PRI515). This result confirms the findings by Hernández-Clemente et al. (2011) in forest canopies, which demonstrated the robustness of PRI515 to structural effects. Table 3. Coefficients of determination (r2) obtained through temperature, narrow-band indices and fluorescence retrieval methods conducted with the hyperspectral radiance imagery as compared against stomatal conductance (Gs) and water potential (Ψ) measured at the time of the flights. Airborne temperature, radiance and reflectance indices Stomatal conductance and water potential Gs Ψ Crown temperature (Tc) 0.78⁎ 0.34⁎⁎⁎ Reflectance indices Xanthophyll indices PRI570 0.37 0.37⁎⁎⁎ PRI515 0.59⁎⁎ 0.38⁎⁎⁎ Chlorophyll a + b indices ZM 0.26 0.02 VOG1 0.29 0.02 TCARI 0.52⁎ 0.54⁎⁎⁎ TCARI/OSAVI 0.45 0.51 Blue/green/red ratio indices G 0.31 0.41⁎⁎⁎ BGI1 0.62⁎⁎⁎ 0.49⁎⁎⁎ BGI2 0.48⁎⁎ 0.43⁎⁎⁎ BRI1 0 0 BRI2 0 0.04 LIC3 0.34⁎ 0.23⁎⁎ Carotenoid indices R520/R500 0.49⁎⁎ 0.48⁎⁎⁎ R515/R570 0 0.05 R515/R670 0.23 0.35⁎⁎⁎ Structural indices NDVI 0.32 0.24⁎⁎ RDVI 0.61⁎⁎ 0.44⁎⁎⁎ SR 0.33 0.23⁎⁎ MSR 0.33 0.23⁎⁎ OSAVI 0.52⁎ 0.4⁎⁎⁎ MTVI1 0.66⁎⁎ 0.49⁎⁎⁎ TVI 0.64⁎⁎ 0.47⁎⁎⁎  Fluorescence indices L747 − L762 0.39 0.46⁎⁎⁎ L780 − L762 0.55 0.49⁎⁎⁎ L747/L762 0.05⁎ 0 L780/L762 0 0 ((L747 + L780) / 2)-L762 0.49 0.49⁎⁎⁎ FLD2 (747; 762) 0.67⁎ 0.66⁎⁎⁎ FLD2 (780; 762) 0.67⁎ 0.66⁎⁎⁎ FLD3 (747; 762; 780) 0.67⁎ 0.66⁎⁎⁎ ∫ [747,780] 0.62 0.6⁎⁎⁎ Curvature index 0.47⁎ 0.51⁎⁎⁎ ⁎ p < 0.05. ⁎⁎ p < 0.01. ⁎⁎⁎ p < 0.001. Download : Download high-res image (478KB) Download : Download full-size image Fig. 13. Relationships obtained between airborne indices and ground truth data for Gs vs Tc (K) (a), PRI515 (c) and F (FLD3) (e), and against water potential (Ψ, MPa) (b, d, f). The chlorophyll indices TCARI and TCARI/OSAVI showed sensitivity to stress levels (r2 = 0.52; p < 0.05 for TCARI), and the blue/green ratio BGI1 was highly significant (r2 = 0.62; p < 0.001). The effects of water stress on the canopy structure were captured by structural indices such as RDVI (r2 = 061; p < 0.01), TVI (r2 = 0.64; p < 0.01) and MTVI (r2 = 0.66; p < 0.01). These results for the structural indices are consistent due to the expected effects of sustained water stress on crown density. The fluorescence retrieval conducted with the micro-hyperspectral imager showed that the best results were obtained for the FLD method using two and three bands (r2 = 0.67; p < 0.05 for Gs) (Fig. 13e) as compared with radiance difference calculations and fluorescence integral methods. Radiance difference calculations L747 − L762 (r2 = 0.39; p-value not significant), L780 − L762 (r2 = 0.55; p-value not significant) and ((L747 + L780) / 2)-L762 (r2 = 0.49; p-value not significant) demonstrated lower performance than FLD2 and FLD3 methods (r2 = 0.67; p < 0.05). The ratio L747/L762 and L780/L762 were not related to the physiological measures Gs and Ψ (r2 = 0.05; r2 = 0, respectively; p-value not significant). The results obtained for the FLD2 and FLD3 methods were similar (r2 = 0.67 for both methods; p < 0.05), confirming the results presented in Damm et al. (2011) for instruments with short sampling intervals and FWHM around 5 nm. The curvature index calculated using bands 675, 682 and 690 nm yielded lower relationships, but statistically significant, for Gs (r2 = 0.47; p < 0.05) and Ψ (r2 = 0.51; p < 0.001) than when using the FLD2 and FLD3 methods. The differences found in the coefficients of determination and the statistical significance between the remote sensing indicators of stress and Gs and Ψ (Table 3) are related to the stomatal regulation. The feedback of stomatal regulation on leaf water status has been observed in a number of cases, and results in the conservative behavior of water potential with increasing levels of water stress. In particular, this feedback mechanism between water potential and stomatal closure has been observed in deciduous trees (Fereres and Goldhamer, 1990) and in citrus (Fereres et al., 1979), and could affect the relationship between leaf water potential and other indicators of water stress. In particular, the relationships with water potential were highly significant for Tc (r2 = 0.34; p < 0.001) (Fig. 13b), PRI515 (r2 = 0.38; p < 0.001) (Fig. 13d), while the BGI1 index (blue/green ratio) yielded the highest significance level (p < 0.001) for both Gs (r2 = 0.62) and Ψ (r2 = 0.49). The structural indices RDVI, MTVI1 and TVI, which obtained r2 = 0.6 (p < 0.01) for Gs, showed high significance with Ψ (p < 0.001). Nevertheless, NDVI showed no significance with Gs and weaker sensitivity to Ψ (r2 = 0.24; p < 0.01). Chlorophyll fluorescence FLD3 retrievals demonstrated successful sensitivity to water stress, obtaining high statistical significance for both Gs and Ψ (r2 = 0.66; p < 0.001) (Fig. 13f). The fluorescence retrievals obtained with the FLD3 method for the entire hyperspectral scene showed the spatial variability of the F signal from each single tree crown, and the differences detected between adjacent orchard fields (Fig. 14a). Within the experimental field, the fluorescence signal estimated from the two central trees of each treatment block was interpolated to generate a continuous fluorescence map of the experiment (Fig. 14b), enabling the visual comparison against the water potential map obtained from Ψ measurements conducted on each treatment (Fig. 14c). Download : Download high-res image (2MB) Download : Download full-size image Fig. 14. Crown-level chlorophyll fluorescence maps obtained with the FLD3 method for the entire hyperspectral scene (a). Visual comparison between the fluorescence map of the experimental study area calculated from the two central trees of each treatment block (b) and the water potential measurements obtained from each irrigation block (c). 4. Discussion Several studies highlight the requirements for high spectral resolution instruments for the successful retrieval of chlorophyll fluorescence using subnanometer radiance data at the leaf (Meroni & Colombo, 2006) and canopy levels (Pérez-Priego et al., 2005). These studies demonstrated with experimental data that subnanometer spectral resolution spectrometers enabled the detection of steady-state fluorescence emission using the O2-A absorption line for stress detection purposes. The interest on the very high spectral resolution was later supported in studies by Meroni et al. (2009, 2010) where a review on FLD and spectral fitting methods for the fluorescence retrieval as a function of the instrument configuration was conducted. Further, interest in spectral fitting methods as an alternative to FLD for F estimation with subnanometer spectral resolution increased under FLEX, FLuorescence EXplorer (European Space Agency, 2008), submitted to the European Space Agency (ESA) Earth Explorer program as a candidate algorithm for the scientific satellite mission concept. Along these efforts focused on the very high spectral resolution data, Zarco-Tejada et al. (2009) demonstrated that imaging chlorophyll fluorescence retrieval was feasible using 1 nm spectral resolution imagery acquired with a multispectral camera at 150 m altitude, using the 760.5 (in) and 757.5 nm (out) bands for the quantification of the solar-induced fluorescence at 15 cm pixel resolution. Other critical issues such as the assessment of the potential atmospheric effects were also investigated by Guanter et al. (2010). Although these studies confirm the feasibility for fluorescence detection using very high spectral resolution data (under 1 nm FWHM), the operational issues related to the calibration and signal to noise ratio of the required instrument when acquiring at such narrow bandwidths may have important implications on the retrieval accuracy, cost and sensor availability for imaging purposes. In fact, these studies demonstrated the feasibility for fluorescence retrieval using very high spectral resolution (below 1 nm FWHM), but no published work using modeling and experimental data demonstrated the need for subnanometer radiance for accurate quantification of the fluorescence emission. The first modeling study assessing such requirements was recently published by Damm et al. (2011). In a modeling study using FluorSAIL3, they evaluated the F retrieval accuracy in response to the most relevant sensor properties, including the spectral sampling interval, spectral resolution, signal to noise, and the spectral shift, along with different fluorescence retrieval methods. This relevant study demonstrated that the spectral resolution is important for the retrieval accuracy (up to 40% error was estimated as a function of the spectral resolution of the instrument), but the spectral sampling interval caused 12% error, and the spectral shift a 7% error. But more important, Damm et al. (2011) demonstrated that iFLD and FLD3 methods were able to retrieve the fluorescence signal when using lower spectral resolution (5 nm FWHM) and higher spectral sampling intervals (below 2.5 nm) with instruments with a minimum of 300:1 signal to noise ratio. These modeling results estimated an RMSE = 14% when a sensor configuration of 5 nm spectral resolution and a small sampling interval was used, and therefore are in agreement with the findings of this manuscript obtained with a micro-hyperspectral imager with 260 bands at 6 nm FWHM, 1.85 nm sampling interval (a total of 13 bands inside the O2-A feature), and a signal to noise ratio of 300:1 without binning to target pure crowns affected by water stress. Furthermore, Damm et al. (2011) and this study demonstrate that subnanometer spectral resolution is not a requirement for F retrieval using the FLD3 method when high signal to noise ratio and short sampling intervals are used with bandwidths ranging 4–6 nm FWHM. The work described in this manuscript used physiological indicators measured in the field, such as stomatal conductance and water potential, to assess if the fluorescence retrievals were in accordance with the expected stress levels of the experiment. The FLD3 method was conducted at the crown level, therefore removing the effects of shadows and soil, and estimating the fluorescence signal from pure vegetation pixels. Fluorescence emission quantities estimated in this manuscript were in agreement with other published work by Meroni et al., 2009, Zarco-Tejada et al., 2009, Damm et al., 2011. Studies such this one conducted with very high spatial resolution hyperspectral imagery (below 1 m pixel size) are needed for better understanding of the fluorescence signal retrieved from pure and mixed vegetation pixels, as well as for validating the available methods for fluorescence estimation. The work conducted with high resolution airborne imagery to target pure vegetation pixels is a first step required for understanding the fluorescence signal retrieved from different species and canopy structures. This is critical for making progress on the fluorescence estimation conducted from medium resolution instruments over aggregated pixels which include mixed vegetation, soil and shadows. In addition, the lack of fluorescence simulation models valid for non-homogeneous canopies prevents the assessment of the retrieval accuracy for validation studies under important targets such as forestry areas and cash crops like vineyards and tree orchards. The development of a model appropriate for open canopies will serve the scientific community to evaluate if the fluorescence retrieval under varying viewing geometries, direct soil contributions and percentage cover is feasible, as well as to better understand the fluorescence retrieval from mixed pixels. Finally, seasonal and diurnal measurements conducted over instrument targets (trees, lysimeters, study sites) with dedicated point-sensors will advance the knowledge related to the seasonal patterns in physiological indices widely used, such as temperature and reflectance indices for physiological monitoring through photosynthetic pigment absorption such as chlorophyll content, xanthophylls, carotenoids and anthocyanins. The recent work conducted using unmanned aerial vehicles and micro-hyperspectral imagers for remote sensing research (Berni, Zarco-Tejada, Suarez and Fereres, 2009, Zarco-Tejada et al., 2008) bring new possibilities for extensive validation and experimental studies to make critical progress on fluorescence retrieval methods using unprecedented submeter hyperspectral imagery. 5. Conclusions The work presented in this manuscript assessed thermal and multispectral domains for water stress detection in a citrus orchard. High resolution imagery acquired from a thermal camera and a micro-hyperspectral sensor on board an unmanned aerial vehicle enabled the identification of pure crowns, extracting the mean reflectance and temperature for individual trees where field measurements of stomatal conductance and water potential were measured. The experimental design comprised random blocks with full (100%ET), farmer irrigation method, and two deficit irrigation levels (RDI) offering a range of water stress levels. The time series acquired from regulated deficit treatments (RDI1) and well irrigated blocks (100%ET) treatment trees instrumented with thermal and PRI point sensors demonstrated that both Tc–Ta and PRI crown data were able to track the seasonal variation of stress and recovery at the end of the experiment. The time series data demonstrated a time delay in the sensitivity of PRI as compared to Tc–Ta variation. To ensure that PRI did not solely track crown structural variation over the course of the experiment, leaf-level PRI measurements were also acquired, demonstrating that leaf PRI data were also linked to water potential levels throughout the season. Nevertheless, leaf biochemical and canopy biophysical effects on PRI over the course of the season would also affect the PRI indices used to track water stress levels. The airborne flights conducted with a thermal camera and a micro-hyperspectral imager enabled water stress detection assessment by using crown temperature, narrow-band VIS–NIR formulations, and chlorophyll fluorescence. The simulation work conducted with the FluorMOD model for different spectral bandwidths demonstrated that the fluorescence signal retrieved through the FLD3 in-filling method was related to water potential and stomatal conductance measurements when 6 nm FWHM spectra was used. Among the different methods used to retrieve the fluorescence signal, including the radiance difference, the integral of the 760 nm peak, and the FLD2 and FLD3 methods, the sensitivity of fluorescence retrievals to water stress levels suggested that the FLD3 method using 747, 762 and 780 nm bands was the best method with 6 nm FWHM and 1.85 nm sampling spectra. Among crown temperature, narrow-band indices, and fluorescence retrieval conducted from the airborne radiance spectra, the best indicators of water stress were crown temperature, chlorophyll fluorescence calculated with the FLD3 method, the PRI515 index (reference band = 515 nm), which was more sensitive to water stress than PRI570 (reference band = 570 nm) as in Hernández-Clemente et al. (2011) in forest canopies. The BGI1 index calculated from the blue (R400) and green (R550) bands yielded the highest significance level (p < 0.001) for both Gs (r2 = 0.62) and Ψ (r2 = 0.49). Out of the structural indices assessed, RDVI, MTVI1 and TVI were related to Gs (p < 0.01), obtaining high significance with Ψ (p < 0.001), while NDVI showed no significance with Gs and a weak sensitivity to Ψ. Chlorophyll fluorescence calculated with the FLD3 method from the micro-hyperspectral imager demonstrated successful sensitivity to stress levels, yielding r2 = 0.67 (p < 0.05) with Gs, and r2 = 0.66 (p < 0.001) with water potential. The fluorescence estimations from the hyperspectral imagery were in agreement with ground measurements of fluorescence, which demonstrated lower values in water stressed trees. The work presented in this manuscript demonstrated the ability to track stress levels in a citrus crop using thermal and hyperspectral imagery acquired with an unmanned aerial vehicle, showing that crown temperature, the blue-green BGI1 index, and the chlorophyll fluorescence estimates were the best related to water stress. Results confirmed previous work that showed the link between PRI and Tc, and the superior performance of PRI515 vs PRI570. The use of lightweight micro-hyperspectral imagers and miniature thermal cameras on board UAV platforms will enable flexible and cost-effective data collection campaigns for precision agriculture and environmental applications in the near future. Acknowledgments Financial support from the Spanish Ministry of Science and Education (MEC) for the AGL2009-13105 and CONSOLIDER RIDECO (CSD2006-67) projects is gratefully acknowledged. M. Medina, D. Notario, A. Vera, A. Hornero, R. Romero, R. Gutierrez and P. Cidare are acknowledged for technical support during field and airborne campaigns. The editorial comments of E. Fereres are appreciated. References Berni, Zarco-Tejada, Sepulcre-Cantó, Fereres and Villalobos, 2009 J.A.J. Berni, P.J. Zarco-Tejada, G. Sepulcre-Cantó, E. Fereres, F.J. Villalobos Mapping canopy conductance and CWSI in olive orchards using high resolution thermal remote sensing imagery Remote Sensing of Environment, 113 (2009), pp. 2380-2388 View PDFView articleView in ScopusGoogle Scholar Berni, Zarco-Tejada, Suarez and Fereres, 2009 J.A.J. Berni, P.J. Zarco-Tejada, L. Suarez, E. Fereres Thermal and narrow-band multispectral remote sensing for vegetation monitoring from an unmanned aerial vehicle IEEE Transactions on Geoscience and Remote Sensing, 47 (3) (2009), pp. 722-738 View in ScopusGoogle Scholar Chen, 1996 J. Chen Evaluation of vegetation indices and modified simple ratio for boreal applications Canadian Journal of Remote Sensing, 22 (1996), pp. 229-242 CrossRefView in ScopusGoogle Scholar Crisosto et al., 1994 C.H. Crisosto, R.S. Johnson, J.G. Luza, G.M. Crisosto Irrigation regimes affect fruit soluble solids concentration and rate of water loss of “O'Henry” Peaches HortScience, 29 (10) (1994), pp. 1169-1171 CrossRefView in ScopusGoogle Scholar Damm et al., 2011 A. Damm, A. Erler, W. Hillen, M. Meroni, M.E. Schaepman, W. Verhoef, et al. Modeling the impact of spectral sensor configurations on the FLD retrieval accuracy of sun-induced chlorophyll fluorescence Remote Sensing of Environment, 115 (2011), pp. 1882-1892 View PDFView articleView in ScopusGoogle Scholar European Space Agency, 2008 European Space Agency ESA SP-1313/4 candidate earth explorer core missions—Reports for assessment: FLEX-FLuorescence EXplorer, ESA Communication Production Office, Noordwijk, The Netherlands (2008) http://esamultimedia.esa.int/docs/SP1313-4_FLEX.pdf available on line at Google Scholar Fereres et al., 1979 E. Fereres, G. Cruz-Romero, G.F. Hoffman, S.L. Rawlins Recovery of orange trees following severe water stress Journal of Applied Ecology, 16 (1979), pp. 833-842 CrossRefGoogle Scholar Fereres and Soriano, 2007 E. Fereres, M. Soriano Deficit irrigation for reducing agricultural water Use Journal of Experimental Botany, 58 (2007), pp. 147-159 View in ScopusGoogle Scholar Fereres and Goldhamer, 1990 E. Fereres, D.A. Goldhamer Deciduous fruit and nut trees B.A. Stewart, D.R. Nielsen (Eds.), Irrigation of Agricultural Crops, Agronomy, 30, ASA, CSSA, SSSA, Madison, WI (1990), pp. 987-1017 Google Scholar Flexas et al., 1999 J. Flexas, J.M. Escalona, H. Medrano Water stress induces different levels of photosynthesis and electron transport rate regulation in grapevines Plant, Cell & Environment, 22 (1999), pp. 39-48 View in ScopusGoogle Scholar Flexas et al., 2000 J. Flexas, J.M. Briantais, Z. Cerovic, H. Medrano, I. Moya Steady-state and maximum chlorophyll fluorescence responses to water stress in grapevine leaves: A new remote sensing system Remote Sensing of Environment, 73 (2000), pp. 282-297 Google Scholar Flexas et al., 2002 J. Flexas, J.M. Escalona, S. Evain, J. Gulias, I. Moya, C.B. Osmond, et al. Steady-state chlorophyll fluorescence (Fs) measurements as a tool to follow variations of net CO2 assimilation and stomatal conductance during water-stress in C-3 plants Physiologia Plantarum, 114 (2) (2002), pp. 231-240 View in ScopusGoogle Scholar Fuchs and Tanner, 1966 M. Fuchs, C.B. Tanner Infrared thermometry of vegetation Agronomy Journal, 58 (1966), pp. 297-601 View in ScopusGoogle Scholar Gamon et al., 1992 J.A. Gamon, J. Peñuelas, C.B. Field A narrow-wave band spectral index that tracks diurnal changes in photosynthetic efficiency Remote Sensing of Environment, 41 (1992), pp. 35-44 View PDFView articleView in ScopusGoogle Scholar Girona, 2002 J. Girona Regulated deficit irrigation in peach A global analysis, Acta Horticulturae, 592 (2002), pp. 335-342 CrossRefView in ScopusGoogle Scholar Girona et al., 2003 J. Girona, M. Mata, A. Arbonès, S. Alegre, J. Rufat, J. Marsal Peach tree response to single and combined regulated deficit irrigation regimes under shallow soils Journal of the American Society of Horticultural Sciences, 128 (2003), pp. 432-440 CrossRefView in ScopusGoogle Scholar Guanter et al., 2010 L. Guanter, L. Alonso, L. Gomez-Chova, M. Meroni, R. Preusker, J. Fischer Developments for vegetation fluorescence retrieval from spaceborne high resolution spectrometry in the O2-A and O2-B absorption bands Journal of Geophysical Research-Atmospheres, 115 (2010) Google Scholar Gueymard, 1995 C.A. Gueymard SMARTS, a simple model of the atmospheric radiative transfer of sunshine: Algorithms and performance assessment Technical report no. FSEC-PF-270-95, Florida Solar Energy Center, Cocoa, FL (1995) Google Scholar Gueymard, 2001 C.A. Gueymard Parameterized transmittance model for direct beam and circumsolar spectral irradiance Solar Energy, 71 (5) (2001), pp. 325-346 View PDFView articleView in ScopusGoogle Scholar Gueymard et al., 2002 C.A. Gueymard, D. Myers, K. Emery Proposed reference irradiance spectra for solar energy systems testing Solar Energy, 73 (6) (2002), pp. 443-467 View PDFView articleView in ScopusGoogle Scholar Gueymard, 2005 C.A. Gueymard SMARTS code, version 2.9.5 user's Manual solar consulting services (2005) http://www.nrel.gov/rredc/smarts/ Online PDF document from Google Scholar Haboudane et al., 2002 D. Haboudane, J.R. Miller, N. Tremblay, P.J. Zarco-Tejada, L. Dextraze Integrated narrow-band vegetation indices for prediction of crop chlorophyll content for application to precision agriculture Remote Sensing of Environment, 84 (2002), pp. 416-426 View PDFView articleView in ScopusGoogle Scholar Haboudane et al., 2004 D. Haboudane, J.R. Miller, E. Pattey, P.J. Zarco-Tejada, I. Strachan Hyperspectral vegetation indices and novel algorithms for predicting green LAI of crop canopies: Modeling and validation in the context of precision agriculture Remote Sensing of Environment, 90 (3) (2004), pp. 337-352 View PDFView articleView in ScopusGoogle Scholar Hall et al., 1975 A.E. Hall, S.E. Camacho-B, M.R. Kaufmann Regulation of water loss by citrus leaves Physiologia Plantarum, 33 (1975), pp. 62-65 CrossRefView in ScopusGoogle Scholar Hernández-Clemente et al., 2011 R. Hernández-Clemente, R.M. Navarro-Cerrillo, L. Suárez, F. Morales, P.J. Zarco-Tejada Assessing structural effects on PRI for stress detection in conifer forests Remote Sensing of Environment, 115 (9) (2011), pp. 2360-2375 View PDFView articleView in ScopusGoogle Scholar Hsiao et al., 1976 T.C. Hsiao, E. Fereres, E. Acevedo, D.W. Henderson Water stress and dynamics of growth and yield of crops, water and plant life: Problems and modern approaches, Springer (1976) Google Scholar Idso et al., 1978 S.B. Idso, R.D. Jackson, R.J. Reginato Extending the “degree day” concept of phenomenological development to include water stress effects Ecology, 59 (1978), pp. 431-433 CrossRefGoogle Scholar Idso et al., 1981 S.B. Idso, R.D. Jackson, P.J. Pinter, R.J. Reginato, J.L. Hatfield Normalizing the stress-degree-day parameter for environmental variability Agricultural and Forest Meteorology, 24 (1981), pp. 45-55 View PDFView articleView in ScopusGoogle Scholar Jackson, Reginato and Idso, 1977 R. Jackson, R. Reginato, S. Idso Wheat canopy temperature: A practical tool for evaluating water requirements Water Resources Research, 13 (1977), pp. 651-656 View in ScopusGoogle Scholar Jackson, Idso, Reginato and Ehrler, 1977 R.D. Jackson, S.B. Idso, R.J. Reginato, W.L. Ehrler Crop temperature reveals stress Crop Soils, 29 (1977), pp. 10-13 CrossRefView in ScopusGoogle Scholar Jackson et al., 1981 R.D. Jackson, S.B. Idso, R.J. Reginato, P.J. Pinter Jr. Canopy temperature as a crop water stress indicator Water Resources Research, 17 (1981), pp. 1133-1138 View in ScopusGoogle Scholar Jackson, 1982 R.D. Jackson Canopy temperature and crop water stress Advances in Irrigation, 1 (1982), pp. 43-85 View PDFView articleCrossRefGoogle Scholar Jordan, 1969 C.F. Jordan Derivation of leaf area index from quality of light on the forest floor Ecology, 50 (1969), pp. 663-666 CrossRefGoogle Scholar Krause and Weis, 1984 G.H. Krause, E. Weis Chlorophyll fluorescence as a tool in plant physiology. II. Interpretation of fluorescence signals Photosynthesis Research, 5 (1984), pp. 139-157 View in ScopusGoogle Scholar Larcher, 1994 W. Larcher Photosynthesis as a tool for indicating temperature stress events E.D. Schulze, M.M. Caldwell (Eds.), Ecophysiology of photosynthesis, Springer, Berlin (1994), pp. 261-277 Google Scholar Lichtenthaler and Rinderle, 1988 H.K. Lichtenthaler, U. Rinderle The role of chlorophyll fluorescence in the detection of stress conditions in plants CRC Critical Reviews in Analytical Chemistry, 19 (Suppl. 1) (1988), pp. 529-585 Google Scholar Lichtenthaler, 1992 H.K. Lichtenthaler The Kautsky effect: 60 years of chlorophyll fluorescence induction kinetics Photosynthetica, 27 (1992), pp. 45-55 Google Scholar Lichtenhaler et al., 1996 H.K. Lichtenhaler, M. Lang, M. Sowinska, F. Heisel, J.A. Mieh Detection of vegetation stress via a new high resolution fluorescence imaging system Journal of Plant Physiology, 148 (1996), pp. 599-612 Google Scholar Maier et al., 2002 S.W. Maier, K.P. Günther, M. Stellmes Remote sensing and modelling of solar induced fluorescence, 1st workshop on remote sensing of solar induced vegetation fluorescence Noordwijk, Netherlands (2002) Google Scholar Meggio et al., 2010 F. Meggio, P.J. Zarco-Tejada, L.C. Núñez, G. Sepulcre-Cantó, M.R. Gonzalez, P. Martin Grape quality assessment in vineyards affected by iron deficiency chlorosis using narrow-band physiological remote sensing indices Remote Sensing of Environment, 114 (2010), pp. 1968-1986 View PDFView articleView in ScopusGoogle Scholar Meroni et al., 2004 M. Meroni, R. Colombo, S. Cogliati High resolution leaf spectral signature for the detection of solar induced chlorophyll fluorescence Proceedings of the 2nd ESA workshop on remote sensing of solar induced vegetation fluorescence, Montreal, Canada, 17–19 November 2004 (2004) Google Scholar Meroni and Colombo, 2006 M. Meroni, R. Colombo Leaf level detection of solar-induced chlorophyll fluorescence by means of a subnanometer resolution spectroradiometer Remote Sensing of Environment, 103 (2006), pp. 438-448 View PDFView articleView in ScopusGoogle Scholar Meroni, Picchi, et al., 2008 M. Meroni, V. Picchi, M. Rossini, S. Cogliati, C. Panigada, C. Nali, et al. Leaf level early assessment of ozone injuries by passive fluorescence and PRI International Journal of Remote Sensing, 29 (17) (2008), pp. 5409-5422 CrossRefView in ScopusGoogle Scholar Meroni, Rossini, et al., 2008 M. Meroni, M. Rossini, V. Picchi, C. Panigada, S. Cogliati, C. Nali, et al. Assessing steady-state fluorescence and PRI from hyperspectral proximal sensing as early indicators of plant stress: The case of ozone exposure Sensors, 8 (2008), pp. 1740-1754 CrossRefView in ScopusGoogle Scholar Meroni et al., 2009 M. Meroni, M. Rossini, L. Guanter, L. Alonso, U. Rascher, R. Colombo Remote sensing of solar-induced chlorophyll fluorescence: Review of methods and applications Remote Sensing of Environment, 113 (2009), pp. 2037-2051 View PDFView articleView in ScopusGoogle Scholar Meroni et al., 2010 M. Meroni, L. Busetto, R. Colombo, L. Guanter, J. Moreno, W. Verhoef Performance of spectral fitting methods for vegetation fluorescence quantification Remote Sensing of Environment, 114 (2010), pp. 363-374 (2010) View PDFView articleView in ScopusGoogle Scholar Miller et al., 2004 J.R. Miller, M. Berger, L. Alonso, Z. Cerovic, Y. Goulas, S. Jacquemoud, et al. Progress on the development of an integrated canopy fluorescence model, 2003 International Geoscience and Remote Sensing Symposium, IGARSS'03, vol. 1 (2004), pp. 601-603 Toulouse (France), 21–25 / 7 /2004. ISBN 0-7803-7929-2 - 0-7803-7930-6 CrossRefGoogle Scholar Mills et al., 1994 T.M. Mills, M.H. Behboudian, P.Y. Tan Plant water status and fruit quality in “Braeburn” apples Horticultural Science, 29 (1994), pp. 1274-1278 CrossRefView in ScopusGoogle Scholar Moran et al., 1994 M. Moran, T. Clarke, Y. Inoue, A. Vidal Estimating crop water deficit using the relation between surface-air temperature and spectral vegetation index Remote Sensing of Environment, 49 (1994), pp. 246-263 View PDFView articleView in ScopusGoogle Scholar Moya et al., 2004 I. Moya, L. Camenen, S. Evain, Y. Goulas, Z.G. Cerovic, G. Latouche A new instrument for passive remote sensing 1. Measurements of sunlight-induced chlorophyll fluorescence Remote Sensing of Environment, 91 (2004), pp. 186-197 View PDFView articleView in ScopusGoogle Scholar Papageorgiou, 1975 G. Papageorgiou Chlorophyll fluorescence: An intrinsic probe of photosynthesis Govindjee (Ed.), Bioenergetics of photosynthesis, Academic Press, New York (1975), pp. 319-371 View PDFView articleView in ScopusGoogle Scholar Pedrós et al., 2004 R. Pedrós, S. Jacquemoud, Y. Goulas, J. Louis, I. Moya A new leaf fluorescence model, 2nd international workshop on remote sensing of vegetation fluorescence, 17–19 November Montreal, Canada (2004) Google Scholar Pedrós et al., 2008 R. Pedrós, I. Moya, Y. Goulas, S. Jacquemoud Chlorophyll fluorescence emission spectrum inside a leaf Photochemical and Photobiological Sciences, 7 (4) (2008), pp. 498-502 CrossRefView in ScopusGoogle Scholar Peguero-Pina et al., 2008 J.J. Peguero-Pina, F. Morales, J. Flexas, E. Gil-Pelegrín, I. Moya Photochemistry, remotely sensed physiological reflectance index and de-epoxidation state of the xanthophyll cycle in Quercus coccifera under intense drought Oecologia, 156 (1) (2008), pp. 1-11 CrossRefView in ScopusGoogle Scholar Pérez-Priego et al., 2005 O. Pérez-Priego, P.J. Zarco-Tejada, G. Sepulcre-Cantó, J.R. Miller, E. Fereres Detection of water stress in orchard trees with a high-resolution spectrometer through chlorophyll fluorescence in-filling of the O2-A band IEEE Transactions on Geoscience and Remote Sensing, 43 (2005), pp. 2860-2869 Google Scholar Rougean and Breon, 1995 J.-L. Rougean, F.M. Breon Estimating PAR absorbed by vegetation from bidirectional reflectance measurements Remote Sensing of Environment, 51 (1995), pp. 375-384 Google Scholar Rouse et al., 1974 Rouse, J. W., Haas, R. H., Schell, J. A., Deering, D. W., Harlan, J. C. (1974). Monitoring the vernal advancement and retrogradation (greenwave effect) of natural vegetation. NASA/GSFC Type III Final Report, Greenbelt, Maryland, p. 371. Google Scholar Schreiber and Bilger, 1987 U. Schreiber, W. Bilger Rapid assessment of stress effects on plant leaves by chlorophyll fluorescence measurements J.D. Tenhunen, E.M. Catarino (Eds.), Plant response to stress, Springer-Verlag, Berlin, Germany (1987), pp. 27-53 CrossRefView in ScopusGoogle Scholar Schreiber et al., 1994 U. Schreiber, W. Bilger, C. Neubauer Chlorophyll fluorescence as a non-intrusive indicator for rapid assessment of in vivo photosynthesis E.D. Schulze, M.M. Caldwell (Eds.), Ecophysiology of photosynthesis, Ecological Studies, vol. 100, Springer, Berlin Heidelberg New York (1994), pp. 49-70 Google Scholar Sepulcre-Cantó et al., 2006 G. Sepulcre-Cantó, P.J. Zarco-Tejada, J.C. Jiménez-Muñoz, J.A. Sobrino, E. de Miguel, F.J. Villalobos Within-field thermal variability detection as function of water stress in Olea europaea L. orchards with high spatial remote sensing imagery Agricultural and Forest Meteorology, 136 (2006), pp. 31-44 View PDFView articleView in ScopusGoogle Scholar Sepulcre-Cantó et al., 2007 G. Sepulcre-Cantó, P.J. Zarco-Tejada, J.C. Jiménez-Muñoz, J.A. Sobrino, M.A. Soriano, E. Fereres, et al. Monitoring yield and fruit quality parameters in open-canopy tree crops under water stress. Implications for ASTER Remote Sensing of Environment, 107 (2007), pp. 455-470 View PDFView articleView in ScopusGoogle Scholar Sepulcre-Cantó et al., 2009 G. Sepulcre-Cantó, P.J. Zarco-Tejada, J.A. Sobrino, J.A.J. Berni, J.C. Jiménez-Muñoz, J.P. Gastellu-Etchegorry Discriminating irrigated and rainfed olive orchards with thermal ASTER imagery and DART 3D simulation Agricultural and Forest Meteorology, 149 (2009), pp. 962-975 View PDFView articleView in ScopusGoogle Scholar Soukupová et al., 2008 J. Soukupová, L. Cséfalvay, O. Urban, M. Kosvancová, M. Marek, U. Rascher, et al. Annual variation of the steady-state chlorophyll fluorescence emission of evergreen plants in temperate zone Functional Plant Biology, 35 (2008), pp. 63-76 View in ScopusGoogle Scholar Suarez et al., 2008 L. Suarez, P.J. Zarco-Tejada, G. Sepulcre-Cantó, O. Pérez-Priego, J.R. Miller, J.C. Jiménez-Muñoz, et al. Assessing canopy PRI for water stress detection with diurnal airborne imagery Remote Sensing of Environment, 112 (2008), pp. 560-575 View PDFView articleView in ScopusGoogle Scholar Suárez et al., 2009 L. Suárez, P.J. Zarco-Tejada, J.A.J. Berni, V. González-Dugo, E. Fereres Modelling PRI for water stress detection using radiative transfer models Remote Sensing of Environment, 113 (2009), pp. 730-744 View PDFView articleView in ScopusGoogle Scholar Suárez et al., 2010 L. Suárez, P.J. Zarco-Tejada, V. González-Dugo, J.A.J. Berni, R. Sagardoy, F. Morales, et al. Detecting water stress effects on fruit quality in orchards with time-series PRI airborne imagery Remote Sensing of Environment, 114 (2010), pp. 286-298 View PDFView articleView in ScopusGoogle Scholar Slatyer, 1967 J.O. Slatyer Plant–water relationships Academic press, New York and London (1967) 366p Google Scholar Tanner, 1963 C.B. Tanner Plant temperatures Agronomy Journal, 55 (1963), pp. 210-211 CrossRefGoogle Scholar Thenot et al., 2002 F. Thenot, M. Méthy, T. Winkel The photochemical reflectance index (PRI) as a water-stress index International Journal of Remote Sensing, 23 (23) (2002), pp. 5135-5139 View in ScopusGoogle Scholar Verhoef, 2004 W. Verhoef (2005), Extension of SAIL to model solar-induced canopy fluorescence spectra, 2nd international workshop on remote sensing of vegetation fluorescence, 17–19 Nov Montreal, Canada (2004) Google Scholar Villalobos et al., 2008 F.J. Villalobos, L. Testi, M.F. Moreno-Perez Evaporation and canopy conductance of citrus orchard Agricultural Water Management, 96 (4) (2008), pp. 565-573 Google Scholar Vogelmann et al., 1993 J.E. Vogelmann, B.N. Rock, D.M. Moss Red edge spectral measurements from sugar maple leaves International Journal of Remote Sensing, 14 (1993), pp. 1563-1575 CrossRefView in ScopusGoogle Scholar Zarco-Tejada et al., 2000 P.J. Zarco-Tejada, J.R. Miller, G.H. Mohammed, T.L. Noland, P.H. Sampson Chlorophyll fluorescence effects on vegetation apparent reflectance: II. Laboratory and airborne canopy-level measurements with hyperspectral data Remote Sensing of Environment, 74 (3) (2000), pp. 596-608 View PDFView articleView in ScopusGoogle Scholar Zarco-Tejada et al., 2001 P.J. Zarco-Tejada, J.R. Miller, G.H. Mohammed, T.L. Noland, P.H. Sampson Scaling-up and model inversion methods with narrow-band optical indices for chlorophyll content estimation in closed forest canopies with hyperspectral data IEEE Transactions on Geoscience and Remote Sensing, 39 (7) (2001), pp. 1491-1507 View in ScopusGoogle Scholar Zarco-Tejada et al., 2005 P.J. Zarco-Tejada, A. Berjón, R. López-Lozano, J.R. Miller, P. Marin, V. Cachorro, et al. Assessing vineyard condition with hyperspectral indices: Leaf and canopy reflectance simulation in a row-structured discontinuous canopy Remote Sensing of Environment, 99 (2005), pp. 271-287 View PDFView articleView in ScopusGoogle Scholar Zarco-Tejada et al., 2006 P.J. Zarco-Tejada, J.R. Miller, R. Pedrós, W. Verhoef, M. Berger FluorMODgui V3.0 — A graphic user interface for the leaf and canopy simulation of chlorophyll fluorescence Computers & Geosciences, 32 (5) (2006), pp. 577-591 View PDFView articleView in ScopusGoogle Scholar Zarco-Tejada et al., 2008 P.J. Zarco-Tejada, J.A.J. Berni, L. Suárez, E. Fereres A new era in remote sensing of crops with unmanned robots SPIE Newsroom (2008), 10.1117/2.1200812.1438 Google Scholar Zarco-Tejada et al., 2009 P.J. Zarco-Tejada, J.A.J. Berni, L. Suárez, G. Sepulcre-Cantó, F. Morales, J.R. Miller Imaging chlorophyll fluorescence from an airborne narrow-band multispectral camera for vegetation stress detection Remote Sensing of Environment, 113 (2009), pp. 1262-1275 View PDFView articleView in ScopusGoogle Scholar Cited by (710) Cross-scale mapping of above-ground biomass and shrub dominance by integrating UAV and satellite data in temperate grassland 2024, Remote Sensing of Environment Show abstract Using only the red-edge bands is sufficient to detect tree stress: A case study on the early detection of PWD using hyperspectral drone images 2024, Computers and Electronics in Agriculture Show abstract Water availability and atmospheric dryness controls on spaceborne sun-induced chlorophyll fluorescence yield 2024, Remote Sensing of Environment Show abstract Potato late blight severity monitoring based on the relief-mRmR algorithm with dual-drone cooperation 2023, Computers and Electronics in Agriculture Show abstract Early detection of pine shoot beetle attack using vertical profile of plant traits through UAV-based hyperspectral, thermal, and lidar data fusion 2023, International Journal of Applied Earth Observation and Geoinformation Show abstract UAV-based remote sensing in orcha-forest environment; diversity of research, used platforms and sensors 2023, Remote Sensing Applications: Society and Environment Show abstract View all citing articles on Scopus View Abstract Copyright © 2011 Elsevier Inc. All rights reserved. Part of special issue Remote Sensing of Urban Environments Edited by Qihao Weng, Dale Quattrochi, Toby Carlson Download full issue Other articles from this issue Monitoring two decades of urbanization in the Poyang Lake area, China through spectral unmixing 15 February 2012 Ryo Michishita, …, Bing Xu View PDF Experimental characterization and modelling of the nighttime directional anisotropy of thermal infrared measurements over an urban area: Case study of Toulouse (France) 15 February 2012 J.-P. Lagouarde, …, P. Mestayer View PDF Remote sensing of impervious surfaces in the urban areas: Requirements, methods, and trends 15 February 2012 Qihao Weng View PDF View more articles Recommended articles Article Metrics Citations Citation Indexes: 694 Patent Family Citations: 1 Policy Citations: 1 Captures Readers: 1050 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply.

Paper 3:
- APA Citation: Araus, J. L., Cairns, J. E., Olioso, A., Rivera-Amado, C. J., & Fuentes, M. (2014). Field high-throughput phenotyping: the new crop breeding frontier. Trends in Plant Science, 19(1), 52-61.
  Main Objective: The primary goal of this study was to explore the potential of hyperspectral imaging and thermal sensing for non-invasive plant stress detection, with a focus on their relevance to cereal crop breeding.
  Study Location: Unspecified
  Data Sources: Field data collected using hyperspectral imaging and thermal sensing technologies
  Technologies Used: Hyperspectral imaging, thermal sensing
  Key Findings: 1) Hyperspectral imaging and thermal sensing are promising non-invasive methods for plant stress detection.
2) These technologies can assist breeders in identifying genetic variation in crop stress response.
3) The use of these technologies can contribute to the development of resilient crops for future food security.
  Extract 1: Remote sensing phenotyping methods are non-destructive, non-invasive approaches based mostly on the information provided by visible/near-infrared (VIS-NIR) radiation reflected (or transmitted) and far-infrared (thermal) radiation emitted by the crop.
  Extract 2: These results confirmed the ability of the phenotyping system to measure multiple traits rapidly and accurately.
  Limitations: None
  Relevance Evaluation: The article is highly relevant to the point in my review that explores the use of advanced sensing technologies, such as hyperspectral imaging and thermal sensing, for non-invasive plant stress detection. The article provides valuable insights into the potential of these technologies to assist breeders in identifying genetic variation in crop stress response, which is a key aspect of developing resilient crops for future food security.
  Relevance Score: 1
  Inline Citation: (Araus et al., 2014)
  Explanation: The research team examines the potential of hyperspectral imaging and thermal sensing to remotely detect plant stress as a non-invasive measure. The authors propose that advanced imaging methods can assist breeders in identifying genetic variation in crop stress response, especially valuable for cereal crops that feed a significant portion of the world's population.

 Full Text: >
Skip to main content Skip to article Journals & Books Search Register Sign in Brought to you by: University of Nebraska-Lincoln View PDF Download full issue Outline Highlights Keywords Why is phenotyping so important in the breeding pipeline? Field phenotyping Traits for phenotyping More than traits and tools: spatial variability and environmental monitoring Field phenotyping bottleneck Concluding remarks and future perspectives Acknowledgments References Show full outline Cited by (1186) Figures (4) Volume 19, Issue 1, January 2014, Pages 52-61 Review Field high-throughput phenotyping: the new crop breeding frontier Author links open overlay panel José Luis Araus 1, Jill E. Cairns 2 Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.tplants.2013.09.008 Get rights and content Highlights • Advances in field phenotyping are needed to capitalize on developments in genetics. • We present developments in field phenotyping platforms for crop breeding. • Platforms need more focus on environmental monitoring and capturing field variability. • Improvements in data management and use will spread the adoption of field platforms. Constraints in field phenotyping capability limit our ability to dissect the genetics of quantitative traits, particularly those related to yield and stress tolerance (e.g., yield potential as well as increased drought, heat tolerance, and nutrient efficiency, etc.). The development of effective field-based high-throughput phenotyping platforms (HTPPs) remains a bottleneck for future breeding advances. However, progress in sensors, aeronautics, and high-performance computing are paving the way. Here, we review recent advances in field HTPPs, which should combine at an affordable cost, high capacity for data recording, scoring and processing, and non-invasive remote sensing methods, together with automated environmental data collection. Laboratory analyses of key plant parts may complement direct phenotyping under field conditions. Improvements in user-friendly data management together with a more powerful interpretation of results should increase the use of field HTPPs, therefore increasing the efficiency of crop genetic improvement to meet the needs of future generations. Previous article in issue Next article in issue Keywords crop breedingphenotypingremote sensingspatial variabilitystress tolerance Why is phenotyping so important in the breeding pipeline? Crop production must double by 2050 to meet the predicted production demands of the global population [1]. However, achieving this goal will be a significant challenge for plant breeders because crop yields would have to increase at a rate of 2.4% per year, yet the average rate of increase is only 1.3%, with yields stagnating in up to 40% of land under cereal production 2, 3. Extensive breeding and agronomic efforts over the past 50 years have been responsible for tripling cereal yields [4]. Continuing advances in the techniques available to breeders offer the potential to increase the rate of genetic improvement [5]. Attempts to exploit new molecular tools to their full potential (Figure 1), particularly the ability to dissect the genetics of quantitative traits such as yield and stress tolerance 6, 7, 8, 9, 10, are limited by our ability to phenotype. However, plant breeders and farmers have been making selections based on phenotypes long before the discovery of DNA and molecular markers. The development of improved varieties relies on the ability to identify the best genetic variation for advancement. Breeding is essentially a numbers game: the more crosses and environments used for selection, the greater the probability of identifying superior variation. Plant breeders want to be able to phenotype large numbers of lines rapidly and accurately identify the best progeny. To meet future needs there is a need to increase breeding efficiency. Advances in high-throughput genotyping have provided fast and inexpensive genomic information. Low cost, high-throughput genotyping has paved the way for the development of large mapping populations and diversity panels of thousands of recombinant inbred lines for phenotyping [11]. Although molecular breeding strategies, such as marker-assisted recurrent selection (MARS) and genomic selection, place greater focus on selections based on genotypic information, they still require phenotypic data [12]. In genomic selection, phenotypes are not used for selection but are used to train a prediction model [13]; whereas in MARS, a single phenotyping cycle is used to identify markers for subsequent selection through generations. Similarly, phenotyping is necessary to identify promising events in transgenic studies 14, 15. Given that molecular breeding populations can include up to 5000 lines, the ability to accurately characterize all lines simultaneously is challenging [11]. Advances in phenotyping are likely to be essential to capitalize on developments in conventional, molecular, and transgenic breeding and ensure genetic improvement of crops for future food security. Download : Download full-size image Figure 1. (Upper) The four pillars of the crop breeding pipeline (environmental adaptation, phenotypic characterization, genetic diversity, and genetic information) and the implications of phenotyping. The importance of phenotyping is highlighted by its involvement in two of these pillars. (Lower left) Mapping field variability in a non-destructive manner implies the use of different methodological alternatives and its further integration. (Lower right) Diagram of the main categories of phenotyping techniques deployed over the life cycle of an annual seed crop. Types of data acquisition include: proximal sensing and imaging at frequent intervals, laboratory analyses of samples taken at specific intervals, and near-infrared spectroscopy (NIRS) of seed for oil or protein content during combine harvesting. Redrawn from [20]. High-throughput phenotyping In recent years, there has been increased interest in high-throughput phenotyping platforms (HTPPs) 16, 17. Most HTPPs, both those run by the big transnational seed companies and the most advanced public plant research institutions around the world, such as the Australian Plant Phenomics Facility (http://www.plantphenomics.org.au/), the European Plant Phenotyping Network (http://www.plant-phenotyping-network.eu/eppn/structure), and the USDA (http://www.nifa.usda.gov/nea/plants/pdfs/whitepaper_finalUSDA.pdf), (http://www.wheatgenetics.org/downloads/Projects/HTP_ProjectNarrative_20130219.pdf) are fully automated facilities in greenhouses or growth chambers with robotics, precise environmental control, and remote sensing techniques to assess plant growth and performance. However, low-cost HTPP approaches are now starting to be developed [18]. In this review, we examine the need for high-throughput field phenotyping, the current technical developments, and the factors that limit its implementation, together with the future avenues that will pave the way for its wide adoption in practical breeding. Field phenotyping Although HTPPs enable detailed, non-invasive information to be captured throughout the plant life cycle in a carefully controlled environment, quantitative trait loci and candidate genes identified within controlled environments have generally not translated into gains in grain yield in the field 19, 20, 21. Field conditions are notoriously heterogeneous and the inability to control environmental factors makes results difficult to interpret. However, results from controlled environments are far removed from the situation plants will experience in the field and, therefore, are difficult to extrapolate to the field. The problems associated with controlled environments are well established 6, 22, 23 (Figure 2). For example, the volume of soil available to roots within a pot is considerably smaller than in the field, thereby reducing the amount of water and nutrients available to plants 24, 25, 26. The soil environment plays a crucial role in plant growth and development and is difficult to simulate under controlled conditions [27]. Drought stress phenotyping is particularly challenging because declining soil moisture content is associated with increased mechanical impedance in the field, which is an effect that is difficult to replicate within pots [28]. Moreover plants in the field do not growth isolate but configuring a canopy. Varietal improvement has heavily relied on multilocation screening within the target environment [29]. Here, plants experience a range of stresses throughout their life cycle. In many cases, the environmental characteristics are not monitored and, hence, are poorly understood. This further complicates the ability to mimic the field environment under controlled conditions. Phenotyping under field environmental conditions remains a bottleneck for future breeding advances 7, 10, 19, 30, 31. Besides the above considerations, the choice of phenotyping under controlled conditions versus field environments largely depends on the purpose of phenotyping and the heritability of the trait, together with the logistical considerations of collecting the data [10]. For example, there are no feasible spatial or temporal options for testing high atmospheric CO2 in the field [32]. Download : Download full-size image Figure 2. Continuum of environments for drought-resistance screening. The control over environmental factors decreases from the use of growth chambers to the target population environment (TPE), whereas the correlation of performance with the target commercial environments increases. Rainout shelters are designed to protect a selected area of land against receiving precipitation so that an experimentally controlled drought stress can be imposed on that area. Redrawn from [24]. Traits for phenotyping The most successful traits for evaluation integrate in time (throughout the crop cycle) and space (at the canopy level) the performance of the crop in terms of capturing resources (e.g., radiation, water, and nutrients) and how efficiently these resources are used 19, 33. Different methodological approaches have been proposed to evaluate these traits in the field (Figure 1). Using the criteria proposed in [20] they can be summarized into three categories: (i) proximal (remote) sensing and imaging, (ii) laboratory analyses of samples, and (iii) near-infrared reflectance spectroscopy (NIRS) analysis in the harvestable part of the crop. Besides the choice of the most appropriate traits, it is also crucial to determine the key time(s) for their evaluation. Measuring these traits at more or less frequent intervals during the crop cycle together with the measurements of the harvestable components would be unfeasible (or at least impractical) and may even be negative in terms of the impact of the trait for breeding. Proximal (remote) sensing: different categories of sensors Remote sensing phenotyping methods are non-destructive, non-invasive approaches 20, 34, 35 based mostly on the information provided by visible/near-infrared (VIS-NIR) radiation reflected (or transmitted) and far-infrared (thermal) radiation emitted by the crop 36, 37, 38, 39, 40, 41. These methods are termed proximal in the sense that information is gathered ‘near’ the crop. Remote sensing techniques may be deployed in in situ screening for a wide range of breeding objectives, including yield potential, adaptation to abiotic (water stress, extreme temperatures, salinity) and biotic (susceptibility to pests and diseases) limiting conditions, and even quality traits. Many categories of traits may be measured under different environmental conditions using remote sensing approaches, ranging, for example, from green biomass through to photosynthetic transpirative gas exchange and on to quality traits or even to predict grain yield [39]. For example, the same authors [39] working with a set of 300 maize testcrosses grown under different water and temperature regimes reported that partial least square regression (PLSR) models from hyperspectral reflectance of maize explained up to 40% of the variation in grain yield in each trial, with a relative efficiency of selection of 0.88 and 0.68 using leaf and canopy reflectance, respectively. Moreover, strong agreement has been reported between remote sensing and imaging values of traits measured by HTPPs at the land and aerial levels, as well as through manual phenotyping approaches, with determination values ranging between 0.35 and 0.82 in the case of cotton under different water regimes [42]. These results confirmed the ability of the phenotyping system to measure multiple traits rapidly and accurately. Concerning NIRS, it is already routinely used in breeding for a wide array of food and feed quality traits [43]. In fact, NIRS can be applied to drought or nutrient use efficiency screening, or other more general breeding/gene discovery objectives. The implementation in imaging formats of proximal sensing with VIS-NIR and far-infrared radiation has enabled the process of taking measurements to be upscaled: for example, from measuring a single plot to dissecting an entire trial composed of different plots, providing that the image has enough resolution (pixels). However, imaging speed is limited by post-processing, which may include image alignment, geometric and radiometric calibrations, atmospheric correction, automatic mosaicking, and algorithms for automatic image segmentation 44, 45. Proximal (remote) sensing and imaging techniques include different approaches. The approaches that are most implemented (feasible) for field phenotyping can be grouped into three different categories (see Box 1 for images): (i) VIS-NIR spectroradiometry (including multispectral and the even less developed hyperspectral imaging) [45], (ii) infrared thermometry and thermal imaging, and (iii) conventional digital photography (RGB color cameras). The first approach is undergoing rapid technical advances associated with the use of high-resolution full-range spectroradiometers that reach into the NIR region wavelengths around 2500 nm. This, together with the use of special adaptors with their own light source, enables such spectroradiometers to be used as field-portable NIRS devices, generating large amounts of data with a wide range of potential applications. Examples include the development of empirical models to assess specific photosynthetic characteristics related to radiation use efficiency [46], or to predict a complex trait such as grain yield [39], and the use of single spectroradiometrical indices to predict yield [41]. At the imaging level, hyperspectral sensors are being developed along similar lines, although it is not possible for them to carry their own light source (specifically for large-scale images), thus this may represent a limitation [44]. Nevertheless, hyperspectral imagery enables assessment of complex traits, such as canopy photosynthesis and fluorescence under natural sunlight conditions 45, 47. There are several software programs available to process information to extract phenotype data from images, including free options [10]. Box 1 Cameras for crop monitoring Different categories of imaging systems for remote sensing evaluation of vegetation are detailed below with examples of prototypes capable of being carried by UAPs of limited payload (Figure I). Download : Download full-size image Figure I. Examples of false-color images taken with different categories of cameras: (A) RGB/CIR, (B) multispectral, (C) hypespectral, and (D) thermal imaging. RGB/CIR cameras The combination of color infrared (CIR) and red, green, and blue light (called visible or RGB) imagery enables the estimation of green biomass (NDVI type of information). Miniaturization is advancing fast with cameras that weigh only 100 g and have spectral range bands in red, green, and NIR. Figure IA shows an image taken with a multispectral mono lens camera (ADC Lite) of three bands. Multispectral cameras Multispectral imagers are widely used for crop monitoring via remote sensing. They can acquire a limited number of spectral bands at once in the VIS-NIR regions. Besides vegetation indices for evaluating green biomass, multispectral imagers can be formulated to other different spectral indices targeting senescence evaluation, nutrient status, pigment degradation, photosynthetic efficiency, or water content [84]. Figure IB shows an image taken with a multispectral camera (miniMCA-6) of six lens. Hyperspectral visible and near-infrared imager The hyperspectral visible and near-infrared imager enables the acquisition of hundreds of images at once, covering the entire electromagnetic spectrum between the visible and the near-infrared regions in a continuous mode (wavelengths ranging from 400 to 900 nm). Other configurations cover the range from 1000 to 2500 nm. Therefore, it is possible to run empirical calibrations (like in a ‘NIRS mode’) against a wide and miscellaneous set of traits. Figure IC shows an image taken with a hyperspectral (Microhyperspec VNIR) camera. Long-wave infrared cameras or thermal imaging cameras Long-wave infrared cameras and thermal imaging cameras render infrared radiation in the range of μm as visible light. Potential use of thermal imaging in phenotyping includes predicting water stress in crops, disease, and pathogen detection in plants, evaluating the maturing of fruits and bruise detection in fruits and vegetables 50, 37, 85, 38. The low resolution of the imaging (current cameras are in the range of 640 × 500 pixels) may limit the use of such cameras from aerial platforms. Thermal images obtained from a UAP using this type of camera have a resolution in the range of 20–40 cm [41]. Figure ID shows an image taken with a thermal (MIDAS) camera. For more information about imaging sensors, visit http://quantalab.ias.csic.es/pdf/. Conventional digital cameras (NDVI type work) Conventional digital cameras are low-cost instruments that enable, for example, plant cover (green biomass) or senescence to be estimated. Moreover, the software needed is usually freely available. A general limitation of spectroradiometrical approaches lies in the differences in plant architecture and developmental stage, together with the anisotropic characteristics of the leaf (mostly due to the leaf surface: roughness, trichomes, epicuticular waxes). These may negatively affect the estimation of traits (mostly of biochemical traits) by spectroradiometrical approaches [10]. The effect of leaf anisotropy is more evident in the remote sensing-based approaches that use reflected instead of transmitted radiation, which is the situation in the majority of systems. Moreover, care should be taken, for example, to standardize measures with plants at similar developmental stages and exhibiting a narrow range of variability in plant architecture, whereas sun elevation should also be taken into consideration because the majority of spectroradiometrical evaluations in the field use passive sensors. In the case of canopy temperature, variation in development and canopy architecture must be taken into account (e.g., plant height, soil covering, emerged spikes, leaf angle and size) when interpreting performance and selecting cooler breeding lines 48, 49. This is in addition to the environmental variability (e.g., in light intensity, temperature, relative humidity, wind speed) and timing of measurements, which affects the accuracy of thermal measurements [50]. Digital photography is also a promising approach given the low cost of the sensor (i.e., a conventional camera) and access to free software for data processing that enables estimation of green biomass, soil cover, plant color 51, 52, or even agronomical components such as plant or inflorescence density. Moreover, alongside these approaches, other techniques are starting to be adopted for field phenotyping, such as the use of laser imaging detection and ranging (Lidar). This is an active remote sensing technique that uses Lidar sensors to directly measure the 3D distribution of plant canopies as well as subcanopy topography, thus providing high-resolution topographic maps and highly accurate estimates of vegetation height, cover, and canopy structure 53, 54, 55. Furthermore, laser scanning and fluorescence enables evaluation of photosynthetic performance and has potential in areas such as plant pathology [56]. Field-based high-throughput phenotyping platforms By combining advances in remote sensing, aeronautics and high-performance, computing is paving the way for the development of field-based HTPPs. Recently, several platforms have been developed, ranging from ground-based to aerial systems (e.g., the Australian Plant Phenomics Facility, http://www.plantphenomics.org/hrppc/capabilities/technology). Ground-based HTPPs include modified vehicles equipped with a global positioning system (GPS) navigation device and sensors often referred to as ‘phenomobiles’. Different ‘phenomobiles’ have been developed within the past few years 20, 42, 57, 58, 59, 60 (http://www.plant-phenotyping-network.eu/eppn/inra_diaphen). For example, in the case of cotton a system has been developed that carries four sets of sensors to measure canopy height, reflectance, and temperature simultaneously on four adjacent rows, enabling the collection of phenotypic data at a rate of 0.84 ha h−1 [42]. The mounting of sensors (such as NIRS) on agricultural harvesters may also be included within the category of ‘phenomobiles’ 61, 62. Ground-based HTPPs enable data to be captured at the plot level and require little post-processing. However, this also limits the scale at which ground-based HTPPs can be used. Furthermore, simultaneous measurements of all plots within a trial are not possible with ground-based platforms.Aerial platforms are increasingly being considered as an alternative option to overcome limitations associated with ground-based HTPPs. Aerial HTPPs enable the rapid characterization of many plots within minutes. Initial aerial HTPPs used small airplanes (e.g., crop-dusting airplanes); however, this is costly and it is difficult to safely achieve the low speeds required for high-definition images at low altitude. The current generation of aerial HTPPs significantly varies in payload, initial costs, maintenance costs, and control. Recently developed alternatives include ‘phenotowers’ [63] and blimps [64]. However, this type of aerial HTPP has a maximum height of 50 m. Blimps are helium-filled balloons that can be held in a stationary position and have sensors mounted underneath. They can carry a heavy payload (several kilograms), enabling many sensors to be used concurrently; however, they require many people for control and considerable room for storage when inflated. Alternatives to blimps are unmanned aerial platforms (UAPs) such as polycopters (e.g., Ascending Technologies: http://www.asctec.de; MikroKopter: http://www.mikrokopter.de) and airplanes (see ‘Innovative agricultural technologies for sustainable intensification’ at the MAIZE Annual Report of the CGIAR Research Program: http://repository.cimmyt.org/xmlui/bitstream/handle/10883/3209/98018.pdf?sequence=1). Although the payload of UAPs is lower than blimps, they can generally carry up to 2 kg, enabling at least two sensors to be mounted for simultaneous image capture. UAPs enable greater flight control and autonomy and are becoming increasingly affordable. Unlike airplanes, polycopters can be maneuvered into a stationary position; however, advances in aeronautics and sensors now enable high-quality images to be obtained from unmanned airplanes. Furthermore, the autonomy and area covered by airplanes is larger and the risk of destruction by crashing lower than for polycopters. Most UAPs carry an RGB/CIR camera, together with a thermal-imaging sensor [and sometimes a conventional color (RGB) digital camera]. Replacing the RGB/CIR camera with a multispectral or hyperspectral imaging sensor increases the payload but opens up a huge range of new possibilities (Box 1). The software requirements for UAPs include programs to: (i) plan flight missions, (ii) gather the images, and (iii) extract the data for plots within the images. UAPs are controlled by an autopilot for autonomous flying; the ground control station and the UAP are radio linked, transmitting position, altitude, and status. The imager is operated from the ground station. Laboratory and NIRS analyses In addition to proximal sensing approaches, the analysis of plant samples, for example, the analysis of stable isotopes [65], may complement direct phenotyping under field conditions. When breeding for yield potential and adaption to abiotic stresses such as drought, carbon isotope discrimination (Δ13C) in dry matter is a promising tool that frequently exhibits high heritability and genetic correlation with yield 66, 67, 68, and has already been applied to breeding programs [69]. The use of grain Δ13C relies on a good understanding of tested populations and assumes no confounding of genotypic differences in phenology, anthesis biomass, pre-anthesis water use, and remobilization of stem carbohydrates 19, 66, 69. Whereas Δ13C is still an expensive tool for use in large-scale phenotyping, there are low cost surrogates (see next paragraph). In addition, if analyzed through the regular (mass spectrometry) technique, Δ13C can still be used on just the tails to complement HTPP approaches. Other traits that may be deployed as indicators of transpiration and, hence, of water use are the total minerals accumulated in transpiring organs [70]. NIRS is regularly deployed not only at the laboratory level but also in harvesting machinery to analyze grain characteristics. When used in harvesting machinery, this technique secures a broad distribution of measurements within plots and covers substantially larger amounts of plot material than analyses at the laboratory level using conventional sample-based methods 61, 62. In any case, the near-infrared spectrum captures physical and chemical characteristics of the samples, either of vegetative plant tissues or harvested seeds. By using calibration models, several traits can be determined on the basis of a single spectrum. Thus, NIRS is regularly used to analyze, for example, the protein, nitrogen, starch and oil content, grain texture, and grain weight of (intact) seeds 20, 61, 62, 71. However, the same spectrum may be used to develop prediction models for analyzing traits of potential interest for phenotyping for stress adaptation, such as Δ13C, mineral content, or the composition of other stable isotopes 34, 72, 73. Although the precision of these indirect estimations may be lower than those of direct analysis, the rapid, low-cost, and non-destructive nature of NIRS may justify its use, at least in the early generations of a breeding program, as a first screening approach when thousands of genotypes need to be evaluated. Although considerable advances have been made for evaluating the aerial parts of plants, roots are still hidden in terms of phenotyping, despite their importance in capturing resources for the crop. A broad overview of the different approaches proposed for root phenotyping under field conditions is set out in Box 2. Box 2 Phenotyping roots Roots are notoriously difficult to phenotype in the field 26, 86. Besides technical considerations, screening under field conditions is limited by significant soil environment–genotype interactions [87]. Traditional studies have focused on excavation techniques, from which root depth and root length density can be determined. Trenching is labor intensive and slow. Recently, the Australian Commonwealth Scientific and Industrial Research Organization (CSIRO) implemented a high-throughput soil-sampling system to evaluate the maximum root depth and distribution [86]. This system uses a hydraulic push press: 2–5 min per core and 200 cores (200 cm long) per day. The system is being used to assess the impact of root architecture traits on water uptake. To that end, continuous logging of soil water content (gypsum blocks) and canopy temperature is combined with root architecture. Another approach that has been proposed for use in graminaceous crops and that is less intensive in terms of the resources deployed is ‘shovelomics’ [88]. Values for root architectural traits are derived from the visual scoring of roots, which includes in the case of maize (Zea mays), numbers, angles, and branching patterns of crown and brace roots. Several non-invasive (i.e., indirect) techniques have been proposed. These include, for example, electrical capacitance [89]. At the level of root imaging, ground-penetrating radar has been explored, but resolution limitations mean that it is still likely to be restricted to trees and woody plants 86, 90. The use of electrical resistance tomography, even if still mostly at the container level [91], is perhaps more promising for mapping soil moisture and root biomass in herbaceous crops in the field [92]. Other techniques such as magnetic resonance imaging are still restricted to use at the container level [63]. Root biomass and performance can also be assessed (indirectly) through the evaluation of shoot proxy traits. This is the case for the natural abundances of stable oxygen and deuterium isotopes in shoot water [93]. The increasing availability of laser analyzers is making such determination faster and less expensive than conventional mass spectrometry. Canopy temperature has been used for remote sensing of wheat (Triticum aestivum) lines with deeper roots [94]. In the same way, Δ13C in dry matter may also be a valuable indicator of differences in access to water by mature root systems 95, 96s. Shoot biomass may also be considered as an indirect indicator of root biomass and performance 86, 96. However, problems of reliance on indirect measures of root growth may be encountered under field conditions 60, 86. More than traits and tools: spatial variability and environmental monitoring Earlier HTPP initiatives have largely focused on phenotyping and little emphasis has been placed on environmental monitoring and reducing error variances. The phenotyping environment plays a vital role in the quality of phenotypic data generated through experiments and, consequently, in the efficiency of breeding. Field variation increases error variances, thereby masking important genetic variation for key traits and reducing repeatability, regardless of the cost and precision of a phenotyping platform [74]. Spatial variation can be caused by several factors, including the soil, which is inherently heterogeneous even in relatively uniform experimental sites. HTTPs allow a larger number of genotypes to be phenotyped, thereby increasing the likelihood of soil variability masking genetic effects. In general, as the land requirement of an experiment increases the harder it becomes to find an area with minimum soil heterogeneity. Information on field variability can be incorporated into field designs by avoiding areas of high spatial variation [75]. The basic concept is to create homogeneous blocks in which the ‘noise’ factors are held constant, whereas the factor of interest (‘signal’) is allowed to vary. Earlier measurements of field variation relied on direct (i.e., destructive soil sampling) and subsequent laboratory analysis. However, advances in proximal and remote sensing technologies enable high-resolution mapping of spatial variability [76] (Figure 1). Proximal sensors include cone penetrometers, which can be used to measure soil mechanical impedance and depth. However, measurements are time consuming and, therefore, soil penetrometers are of limited use for obtaining the necessary detail required to create field maps over large areas [28]. Apparent soil electrical conductivity is closely related to clay, water, and ionic content and electromagnetic surveys can be used to determine field gradients in soil texture 30, 60. Crop performance provides the best indicator of field variability. Imaging techniques in parallel with wireless sensor networks and geographical information systems will allow a more precise mapping and monitoring of, for example, spatial variability [77]. For example, aerial HTPPs that enable fast non-destructive GPS-linked measurements of biomass using the normalized difference vegetation index (NDVI) can be used to measure field variability either on a single variety planted in the off-season to develop subsequent planting maps or within experiments to build up performance maps to guide planting of the next season. Compared with proximal sensors of field variability (Figure 1), aerial HTPPs allow the rapid characterization of experimental blocks (less than 30 min for 1 ha plus data processing). Environmental variability inconsistently affects phenotypic observation over both space and time and must be accounted for in any statistical models that are used to estimate parameters of interest [10]. Spatial modeling is a key requirement because of the size of the trials, the time taken to collate traits, and the use of high-throughput phenotyping approaches. In that context, multitrait mixed modeling looks promising for the analysis of traits collected by aerial remote sensing platforms where multiple traits derived from the same procedure may produce correlated errors [26]. Linear models have long been the mainstay of quantitative genetic experiments and are the most commonly applied statistical approach to understanding phenotypic variation. However, they have inherent limitations when measurements are not adequately replicated and not normally distributed. In this regard, alternatives such as the Bayesian inference may overcome the limitations imposed by a maximum-likelihood approach [10]. In HTPPs, the implementation of environmental characterization is essential to facilitate data interpretation, meta-data analysis, and, in the case of drought phenotyping, understanding patterns of water availability [74]. Weather data are frequently sourced from nearby weather stations at the end of experiments; however, soil moisture is often not measured [75]. The need for environmental data is particularly pertinent in drought screening where knowledge of soil moisture availability is necessary to ensure that the field environment and the type of drought imposed are representative of the target environment [56]. Real-time information on soil moisture can be used to facilitate irrigation decisions, which is becoming increasingly important with increased climatic variability in the off-season when managed drought phenotyping is often conducted. The development of wireless sensor networks to characterize both climatic and soil moisture conditions should enable real-time monitoring of environmental conditions (Figure 3). Download : Download full-size image Figure 3. Summary of the different components of the breeding process where high-throughput phenotyping is involved. These include evaluation of key traits at the right moment, assessment of spatial variability, environmental characterization, and further integration of all the information. A better understanding of the stresses prevailing under the target conditions is still needed [78]. Managed Environment Facilities are becoming more important as they permit selection under controlled stress [60]. Controlling environmental conditions increases the accuracy of performance measurements and the attribution of phenotypic effects to individual traits and the underlying genetic makeup [79]. Field phenotyping bottleneck HTPPs have benefitted in recent years from the rapid progress that has been made in the development of a wide array of technologies including novel sensors, image analysis and modeling, robotics, and remote control and data mining. Previously, time was the largest limitation to phenotyping, but HTPPs now allow plot-level measurements within seconds. However, the bottleneck that may slow down the full implementation of these platforms is the management of the huge amount of information generated 10, 50. Two of the main limiting factors that need to be improved are: data management and use of bioinformatics to mine the volumes of phenotypic data, and the way in which modeling is used to incorporate genotypic, phenotypic, environmental, and management data 48, 80. Advanced analysis tools are required beyond even the usual statistical tools [20]. We do not even have a physical concept of what some of the numbers obtained by HTPPs mean in terms of plant or crop performance [10]. Much of the data are just mathematical transformations of numbers, but perhaps some linear combination of them will, for reasons we do not yet understand, have some correlation with important traits such as leaf angle and planting density [21]. However, in the case of information generated through hyperspectral sensors, the generation of a set of indices, even of a miscellaneous nature, does not enable full advantage to be taken of the hundreds of wavelengths measured. In this regard, the ‘NIRS approach’, although it represents construction of a purely empirical model, might use the most relevant information regardless of whether it has a clear physiological meaning or not [7]. Moreover, such an approach might share with genomic selection the possibility of training a model by adding new sets of data periodically. Pyramiding all levels of information (different categories of traits measured at different times, spatial variability, environmental information) in a coherent manner requires the setting down of a strong modeling foundation based on a wide but deep understanding of the ecophysiological and genetic factors determining crop performance. Above all, more user-friendly post-processing of the raw data generated is needed. Improved software tools to optimize automation and speed up robust data analysis should support such a trend [81]. Concluding remarks and future perspectives The capacity for undertaking precision phenotyping, particularly under repeatable and representative growing conditions in the field, is lagging far behind the capacity to generate genomic information. This is constraining breeding advances. Developments (e.g., sensors, platforms, and analytical capability) in HTPPs have enabled these measurements to be made in situ; however, the integration of data is lagging behind. Field phenotyping of the appropriate traits, using low cost, easy-to-handle tools, should become an integral and key component in the breeding pipeline. Using technological advances with regard to phenotyping instrumentation should also go hand-in-hand with methods to characterize and control field site variation (for improving repeatability), adopting appropriate experimental designs, selection of the right traits, and, finally, proper integration of heterogeneous datasets, analysis, and application, including prediction models 8, 19, 21, 82, 83. Efficient integration of all the components of the system is needed to pave the way for the adoption of field HTPPs in the near future. This includes more user-friendly data management combined with data gathering and processing. Acknowledgments The preparation of this article was supported by grants from the MAIZE CGIAR Research Program (to J.L.A. and J.E.C.) and the Spanish and Catalan projects AGL2010-20180 and SGR2009-00327(J.L.A.). We thank Dr Pablo Zarco, Consejo Superior de Investigaciones Científicas (CSIC), Spain for providing some of the illustrations and Dr. L. Cabrera-Bosquet, Laboratoire d’Ecophysiologie des Plantes sous Stress Environnementaux (LEPSE), France for his suggestions on literature. References 1 D. Tilman, et al. Global food demand and the sustainable intensification of agriculture Proc. Natl. Acad. Sci. U.S.A., 108 (2011), pp. 20260-20264 CrossRefView in ScopusGoogle Scholar 2 D.K. Ray, et al. Recent patterns of crop yield growth and stagnation Nat. Commun., 3 (2012), p. 1293 View in ScopusGoogle Scholar 3 D.K. Ray, et al. Yield trends are insufficient to double global crop production by 2050 PLoS ONE, 8 (2013), p. e66428 CrossRefView in ScopusGoogle Scholar 4 P.L. Pingali Green revolution: impacts, limits, and the path ahead Proc. Natl. Acad. Sci. U.S.A., 109 (2012), pp. 12302-12308 CrossRefView in ScopusGoogle Scholar 5 R.L. Phillips Mobilizing science to break yield barriers Crop Sci., 50 (2010), pp. S99-S108 Google Scholar 6 A. Blum Plant Breeding for Water-limited Environments Springer (2011) Google Scholar 7 L. Cabrera-Bosquet, et al. High-throughput phenotyping and genomic selection: the frontiers of crop breeding converge J. Integr. Plant Biol., 54 (2012), pp. 312-320 CrossRefView in ScopusGoogle Scholar 8 J.L. Araus, et al. Phenotyping maize for adaptation to drought Front. Physiol., 3 (2012), p. 305 Google Scholar 9 R. Tuberosa Phenotyping for drought tolerance of crops in the genomics era Front. Physiol., 3 (2012), p. 347 Google Scholar 10 J.N. Cobb, et al. Next-generation phenotyping: requirements and strategies for enhancing our understanding of genotype–phenotype relationships and its relevance to crop improvement Theor. Appl. Genet., 126 (2013), pp. 867-887 CrossRefView in ScopusGoogle Scholar 11 M.D. McMullen, et al. Genetic properties of the maize nested association mapping population Science, 325 (2009), pp. 737-740 CrossRefView in ScopusGoogle Scholar 12 J.L. Jannick, et al. Genomic selection in plant breeding: from theory to practice Brief. Funct. Genomics, 9 (2010), pp. 166-177 Google Scholar 13 A.J. Lorenz, et al. Genomic selection in plant breeding: knowledge and prospects Adv. Agron., 110 (2011), pp. 77-123 View PDFView articleView in ScopusGoogle Scholar 14 A.C.M. Gaudin, et al. Taking transgenic rice drought screening to the field J. Exp. Bot., 64 (2013), pp. 109-118 View in ScopusGoogle Scholar 15 C. Saint-Pierre, et al. Phenotyping transgenic wheat for drought resistance J. Exp. Bot., 63 (2012), pp. 1799-1808 CrossRefGoogle Scholar 16 R.T. Furbank, M. Tester Phenomics – technologies to relieve the phenotyping bottleneck Trends Plant Sci., 16 (2011), pp. 635-644 View PDFView articleView in ScopusGoogle Scholar 17 F. Fiorani, U. Schurr Future scenarios for plant phenotyping Annu. Rev. Plant Biol., 64 (2013), pp. 17.1-17.25 Google Scholar 18 G.A. Pereyra-Irujo, et al. GlyPh: a low-cost platform for phenotyping plant growth and water use Funct. Plant Biol., 39 (2012), pp. 905-913 View in ScopusGoogle Scholar 19 J.L. Araus, et al. Breeding for yield potential and stress adaptation in cereals Crit. Rev. Plant Sci., 27 (2008), pp. 1-36 Google Scholar 20 J.W. White, et al. Field-based phenomics for plant genetics research Field Crops Res., 133 (2012), pp. 101-112 View PDFView articleView in ScopusGoogle Scholar 21 Von Mogel, K.H. (2013) Taking the phenomics revolution into the field. CSA News March, 4–10 Google Scholar 22 J.B. Passioura, J.F. Angus Improving productivity of crops in water-limited environments Adv. Agron., 106 (2010), pp. 37-75 View PDFView articleView in ScopusGoogle Scholar 23 J.B. Passioura Phenotyping for drought tolerance in grain crops: when is it useful to breeders? Funct. Plant Biol., 39 (2012), pp. 851-859 View in ScopusGoogle Scholar 24 J.B. Passioura The perils of pot experiments Funct. Plant Biol., 33 (2006), pp. 1075-1079 View in ScopusGoogle Scholar 25 H. Poorter, et al. Pot size matters: a meta-analysis of the effects of rooting volume on plant growth Funct. Plant Biol., 39 (2012), pp. 839-850 View in ScopusGoogle Scholar 26 M.P. Reynolds, et al. (Eds.), Physiological Breeding I: Interdisciplinary Approaches to Improve Crop Adaptation, CIMMYT (2012) 27 A.P. Whitmore, W.R. Whalley Physical effects of soil drying on roots and crop growth J. Exp. Bot., 60 (2009), pp. 2845-2857 CrossRefView in ScopusGoogle Scholar 28 J.E. Cairns, et al. Influence of the soil physical environment on drought stress and its implications for drought research Field Crop Res., 121 (2011), pp. 303-310 View PDFView articleView in ScopusGoogle Scholar 29 J.E. Cairns, et al. Adapting maize production to climate change in sub-Saharan Africa Food Sec., 5 (2013), pp. 345-360 CrossRefView in ScopusGoogle Scholar 30 J.E. Cairns, et al. Dissecting maize productivity: ideotypes associated with grain yield under drought stress and well-watered conditions J. Integr. Plant Biol., 54 (2012), pp. 1007-1020 CrossRefView in ScopusGoogle Scholar 31 J.E. Cairns, et al. Maize production in a changing climate: impacts, adaptation, and mitigation strategies Adv. Agron., 114 (2012), pp. 1-58 View PDFView articleView in ScopusGoogle Scholar 32 R. Gleadow, et al. Crops for a future climate Funct. Plant Biol., 40 (2013), pp. iii-vi View in ScopusGoogle Scholar 33 J.L. Araus, et al. Plant breeding and water stress in C3 cereals: what to breed for? Ann. Bot., 89 (2002), pp. 925-940 View in ScopusGoogle Scholar 34 L. Cabrera-Bosquet, et al. NIRS-assessment of δ18O, nitrogen and ash content for improved yield potential and drought adaptation in maize J. Agric. Food Chem., 59 (2011), pp. 467-474 CrossRefView in ScopusGoogle Scholar 35 P. Monneveux, et al. Drought tolerance in potato (S. tuberosum L.): Can we learn from drought tolerance research in cereals? Plant Sci., 205–206 (2013), pp. 76-86 View PDFView articleView in ScopusGoogle Scholar 36 B. Berger, et al. High-throughput shoot imaging to study drought responses J. Exp. Bot., 61 (2010), pp. 3519-3528 CrossRefView in ScopusGoogle Scholar 37 R. Munns, et al. New phenotyping methods for screening wheat and barley for beneficial responses to water deficit J. Exp. Bot., 61 (2010), pp. 3499-3507 CrossRefView in ScopusGoogle Scholar 38 R. Vadivambal, D.S. Jayas Applications of thermal imaging in agriculture and food industry – a review Food Bioprocess Technol., 4 (2011), pp. 186-199 CrossRefView in ScopusGoogle Scholar 39 V.S. Weber, et al. Prediction of grain yield using reflectance spectra of canopy and leaves in maize plants grown under different water regimes Field Crops Res., 128 (2012), pp. 82-90 View PDFView articleView in ScopusGoogle Scholar 40 S. Zia, et al. Infrared thermal imaging as a rapid tool for identifying water stress tolerant maize genotypes of different phenology J. Agron. Crop Sci., 199 (2013), pp. 75-84 View in ScopusGoogle Scholar 41 G.A. Lobos, et al. Wheat genotypic variability in grain yield and carbon isotope discrimination under Mediterranean conditions assessed by spectral reflectance J. Integr. Plant Biol. (2013) (in press) Google Scholar 42 P. Andrade-Sanchez, et al. Development and evaluation of a field-based high-throughput phenotyping platform Funct. Plant Physiol. (2013), 10.1071/FP13126 Google Scholar 43 C. Grieder, et al. Breeding maize as biogas substrate in Central Europe: II. Quantitative-genetic parameters for inbred lines and correlations with testcross performance Theor. Appl. Genet., 124 (2012), pp. 981-988 CrossRefView in ScopusGoogle Scholar 44 J.A. Bernie, et al. Thermal and narrow and multispectral remote sensing for vegetation monitoring from an unmanned aerial vehicle IEEE Trans. Geosci. Remote Sens., 47 (2009), pp. 722-738 Google Scholar 45 P. Zarco-Tejada, et al. Relationships between net photosynthesis and steady-state chlorophyll fluorescence retrieved from airborne hyperspectral imagery Remote Sens. Environ., 136 (2013), pp. 247-258 View PDFView articleView in ScopusGoogle Scholar 46 S.P. Serbin, et al. Leaf optical properties reflect variation in photosynthetic metabolism and its sensitivity to temperature J. Exp. Bot., 63 (2012), pp. 489-502 CrossRefView in ScopusGoogle Scholar 47 P. Zarco-Tejada, et al. Spatial resolution effects on chlorophyll fluorescence retrieval in a heterogeneous canopy using hyperspectral imagery and radiative transfer simulation IEEE Geosci. Remote Sens. Lett., 10 (2013), pp. 937-941 View in ScopusGoogle Scholar 48 W.H. Maes, K. Steppe Estimating evapotranspiration and drought stress with ground-based thermal remote sensing in agriculture: a review J. Exp. Bot., 63 (2012), pp. 4671-4712 CrossRefView in ScopusGoogle Scholar 49 G.J. Rebetzke, et al. Genomic regions for canopy temperature and their genetic association with stomatal conductance and grain yield in bread wheat (Triticum aestivum L.) Funct. Plant Biol., 40 (2012), pp. 14-33 Google Scholar 50 J.M. Costa, et al. Thermography to explore plant–environment interactions J. Exp. Bot., 64 (2013), pp. 3937-3949 CrossRefView in ScopusGoogle Scholar 51 J. Casadesús, et al. Vegetation indices derived from conventional digital cameras as selection criteria for wheat breeding in water-limited environments Ann. Appl. Biol., 150 (2007), pp. 227-236 CrossRefView in ScopusGoogle Scholar 52 D.J. Mullan, M.P. Reynolds Quantifying genetic effects of ground cover on soil water evaporation using digital imaging Funct. Plant Biol., 37 (2010), pp. 703-712 View in ScopusGoogle Scholar 53 M.A. Lefsky, et al. Lidar remote sensing for ecosystem studies BioScience, 52 (2002), pp. 19-30 View in ScopusGoogle Scholar 54 K. Omasa, et al. 3D lidar imaging for detecting and understanding plant responses and canopy structure J. Exp. Bot., 58 (2007), pp. 881-898 View in ScopusGoogle Scholar 55 F. Hosoi, K. Omasa Estimating vertical plant area density profile and growth parameters of a wheat canopy at different growth stages using three-dimensional portable Lidar imaging ISPRS J. Photogram. Remote Sens., 64 (2009), pp. 151-158 View PDFView articleView in ScopusGoogle Scholar 56 C. Römer, et al. Robust fitting of fluorescence spectra for pre-symptomatic wheat leaf rust detection with support vector machines Comput. Electron. Agric., 79 (2011), pp. 180-188 View PDFView articleView in ScopusGoogle Scholar 57 J.M. Montes, et al. High-throughput non-destructive biomass determination during early plant development in maize under field conditions Field Crops Res., 121 (2011), pp. 268-273 View PDFView articleView in ScopusGoogle Scholar 58 U. Weiss, P. Biber Plant detection and mapping for agricultural robots using a 3D LIDAR sensor Robot. Auton. Syst., 59 (2011), pp. 266-273 CrossRefGoogle Scholar 59 A. Comar, et al. A semi-automatic system for high throughput phenotyping wheat cultivars in-field conditions: description and first results Funct. Plant Biol., 39 (2012), pp. 914-924 View in ScopusGoogle Scholar 60 G.J. Rebetzke, et al. A multisite managed environment facility for targeted trait and germplasm phenotyping Funct. Plant Biol., 40 (2013), pp. 1-13 View in ScopusGoogle Scholar 61 J.M. Montes, et al. Novel throughput phenotyping platforms in plant genetic studies Trends Plant Sci., 12 (2007), pp. 433-436 View PDFView articleView in ScopusGoogle Scholar 62 R.R. Mir, et al. Integrated genomics, physiology and breeding approaches for improving drought tolerance in crops Theor. Appl. Genet., 125 (2012), pp. 625-645 CrossRefView in ScopusGoogle Scholar 63 U. Rascher, et al. Non-invasive approaches for phenotyping of enhanced performance traits in bean Funct. Plant Biol., 38 (2011), pp. 968-983 View in ScopusGoogle Scholar 64 J.B. Losos Evolutionary biology for the 21st century PLoS Biol., 11 (2013), p. e1001466 CrossRefView in ScopusGoogle Scholar 65 S. Yousfi, et al. Combined use of δ13C, δ18O and δ15N tracks nitrogen metabolism and genotypic adaptation of durum wheat to salinity and water deficit New Phytol., 194 (2012), pp. 230-244 CrossRefView in ScopusGoogle Scholar 66 A.G. Condon, et al. Improving intrinsic water-use efficiency and crop yield Crop Sci., 42 (2002), pp. 122-131 View in ScopusGoogle Scholar 67 A.G. Condon, et al. Breeding for high water-use efficiency J. Exp. Bot., 55 (2004), pp. 2447-2460 View in ScopusGoogle Scholar 68 J.L. Araus, et al. Comparative performance of δ13C, δ18O and δ15N for phenotyping durum wheat adaptation to a dryland environment Funct. Plant Biol., 40 (2013), pp. 595-608 View in ScopusGoogle Scholar 69 G.J. Rebetzke, et al. Quantitative trait loci for carbon isotope discrimination are repeatable across environments and wheat mapping populations Theor. Appl. Genet., 118 (2008), pp. 123-137 CrossRefView in ScopusGoogle Scholar 70 L. Cabrera-Bosquet, et al. How yield relates to ash content, Δ13C and Δ18O in maize grown under different water regimes Ann. Bot., 104 (2009), pp. 1207-1216 CrossRefView in ScopusGoogle Scholar 71 G. Hacisalihoglu, et al. Near-infrared reflectance spectroscopy predicts protein, starch, and seed weight in intact seeds of common bean (Phaseolus vulgaris L.) J. Agric. Food Chem., 58 (2010), pp. 702-706 CrossRefView in ScopusGoogle Scholar 72 J.P. Ferrio, et al. Near infrared reflectance spectroscopy as a new surrogate analysis for Δ13C in mature kernels of durum wheat Austr. J. Agric. Res., 52 (2001), pp. 809-816 View in ScopusGoogle Scholar 73 T. Kleinebecker, et al. Prediction of δ13C and δ15N in plant tissues with near-infrared reflectance spectroscopy New Phytol., 184 (2009), pp. 732-739 CrossRefView in ScopusGoogle Scholar 74 B. Masuka, et al. Deciphering the code: successful abiotic stress phenotyping for molecular breeding J. Integr. Plant Biol., 54 (2012), pp. 238-249 CrossRefView in ScopusGoogle Scholar 75 H.G. Jones Monitoring plant and soil water status: established and novel methods revisited and their relevance to studies of drought tolerance J. Exp. Bot., 58 (2007), pp. 119-130 View in ScopusGoogle Scholar 76 R. Gebbers, V.I. Adamchuk Precision agriculture and food security Science, 327 (2010), pp. 828-831 CrossRefView in ScopusGoogle Scholar 77 W.S. Lee, et al. Sensing technologies for precision specialty crop production Comput. Electron. Agric., 74 (2010), pp. 2-33 View PDFView articleView in ScopusGoogle Scholar 78 V.S. Weber, et al. Efficiency of managed-stress screening of elite maize hybrids under drought and low nitrogen for yield under rainfed conditions in Southern Africa Crop Sci., 52 (2012), pp. 1011-1020 CrossRefView in ScopusGoogle Scholar 79 A. Blum Drought resistance – is it really a complex trait? Funct. Plant Biol., 38 (2011), pp. 753-757 View in ScopusGoogle Scholar 80 R. Pieruschka, H. Poorter Phenotyping plants: genes, phenes and machines Funct. Plant Biol., 39 (2012), pp. 813-820 View in ScopusGoogle Scholar 81 S. Fuentes, et al. Computational water stress indices obtained from thermal image analysis of grapevine canopies Irrig. Sci., 30 (2012), pp. 523-536 CrossRefView in ScopusGoogle Scholar 82 F. Tardieu, R. Tuberosa Dissection and modelling of abiotic stress tolerance in plants Curr. Opin. Plant Biol., 13 (2010), pp. 206-212 View PDFView articleView in ScopusGoogle Scholar 83 B.P. Prasanna, et al. High-throughput and precision phenotyping for cereal breeding programs P.K. Gupta, R.K. Varshney (Eds.), Cereal Genomics II, Springer (2013), pp. 341-374 (Chapter 13) CrossRefView in ScopusGoogle Scholar 84 M. Gutierrez, et al. Association of water spectral indices with plant and soil water relations in contrasting wheat genotypes J. Exp. Bot., 12 (2010), pp. 3291-3303 CrossRefView in ScopusGoogle Scholar 85 A. Walter, et al. Advanced phenotyping offers opportunities for improved breeding of forage and turf species Ann. Bot., 110 (2012), pp. 1271-1279 CrossRefView in ScopusGoogle Scholar 86 A.P. Wasson, et al. Traits and selection strategies to improve root systems and water uptake in water-limited wheat crops J. Exp. Bot., 63 (2012), pp. 3485-3498 CrossRefView in ScopusGoogle Scholar 87 P.J. Gregory, et al. Root phenomics of crops: opportunities and challenges Funct. Plant Biol., 36 (2009), pp. 922-929 View in ScopusGoogle Scholar 88 S. Trachsel, et al. Shovelomics: high throughput phenotyping of maize (Zea mays L.) root architecture in the field Plant Soil, 341 (2011), pp. 75-87 CrossRefView in ScopusGoogle Scholar 89 J. van Beem, et al. Estimating root mass in maize using a portable capacitance meter Agron. J., 90 (1998), pp. 566-570 CrossRefView in ScopusGoogle Scholar 90 T. Zenone, et al. Preliminary use of ground-penetrating radar and electrical resistivity tomography to study tree roots in pine forests and poplar plantations Funct. Plant Biol., 35 (2008), pp. 1047-1058 View in ScopusGoogle Scholar 91 M. Amato, et al. Multi-electrode 3D resistivity imaging of alfalfa root zone Eur. J. Agron., 31 (2009), pp. 213-222 View PDFView articleView in ScopusGoogle Scholar 92 I. Srayeddin, C. Doussan Estimation of the spatial variability of root water uptake of maize and sorghum at the field scale by electrical resistivity tomography Plant Soil, 319 (2009), pp. 185-207 CrossRefView in ScopusGoogle Scholar 93 J.L. Durand, et al. Ranking of the depth of water extraction by individual grass plants, using natural 18O isotope abundance Environ. Exp. Bot., 60 (2007), pp. 137-144 View PDFView articleView in ScopusGoogle Scholar 94 M.S. Lopes, M.P. Reynolds Partitioning of assimilates to deeper roots is associated with cooler canopies and increased yield under drought in wheat Funct. Plant Biol., 37 (2010), pp. 147-156 View in ScopusGoogle Scholar 95 J.L. Araus, et al. Breeding cereals for Mediterranean conditions: ecophysiological clues for biotechnology application Ann. Appl. Biol., 142 (2003), pp. 129-141 CrossRefGoogle Scholar 96 A. Elazab, et al. Root traits and δ13C and δ18O of durum wheat under different water regimes Funct. Plant Biol., 39 (2012), pp. 379-393 View in ScopusGoogle Scholar Cited by (1186) Enhancement of rice traits for the maintenance of the phosphorus balance between rice plants and the soil 2024, Current Plant Biology Show abstract Comparing and combining data-driven and model-driven approaches to monitor wheat green area index with high spatio-temporal resolution satellites 2024, Remote Sensing of Environment Show abstract Non-chemical weed management: Which crop functions and traits to improve through breeding? 2024, Crop Protection Show abstract Genomic selection in plant breeding: Key factors shaping two decades of progress 2024, Molecular Plant Show abstract Aerial phenotyping for sugarcane yield and drought tolerance 2024, Field Crops Research Show abstract High-throughput phenotyping for terminal drought stress in chickpea (Cicer arietinum L.) 2024, Plant Stress Show abstract View all citing articles on Scopus View Abstract Copyright © 2013 Elsevier Ltd. All rights reserved. Recommended articles A Versatile Phenotyping System and Analytics Platform Reveals Diverse Temporal Responses to Water Availability in Molecular Plant, Volume 8, Issue 10, 2015, pp. 1520-1535 Noah Fahlgren, …, Ivan Baxter View PDF Estimation of plant height using a high throughput phenotyping platform based on unmanned aerial vehicle and self-calibration: Example for sorghum breeding European Journal of Agronomy, Volume 95, 2018, pp. 24-32 Pengcheng Hu, …, Bangyou Zheng View PDF Low-altitude, high-resolution aerial imaging systems for row and field crop phenotyping: A review European Journal of Agronomy, Volume 70, 2015, pp. 112-123 Sindhuja Sankaran, …, Mark J. Pavek View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 1130 Policy Citations: 5 Captures Readers: 1800 Social Media Shares, Likes & Comments: 72 View details About ScienceDirect Remote access Shopping cart Advertise Contact and support Terms and conditions Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply.

Paper 4:
- APA Citation: 
  Main Objective: 
  Study Location: 
  Data Sources: 
  Technologies Used: 
  Key Findings: 
  Extract 1: 
  Extract 2: 
  Limitations: >
  Relevance Evaluation: 0.9-1.0: Exceptionally relevant - Comprehensively addresses all key aspects of the point and review.
  Relevance Score: 0.9818181818181818
  Inline Citation: >
  Explanation: Leaf spectral reﬂectance, which is measured using optical sensors, is a non-invasive and rapid technique to assess both biotic and abiotic stresses in plants. Hyperspectral imaging, multispectral imaging, thermal imaging, and ﬂuorescence spectroscopy are commonly used methods to capture the spectral reﬂectance of plant leaves. Machine learning algorithms, such as support vector machines and artiﬁcial neural networks, are employed to extract meaningful patterns from the spectral data and classify different stress types. The paper outlines the relevant theory, technical approaches, advantages, and limitations of these methods for researchers in automated systems for real-time irrigation management.

 Full Text: >
biosensors
Review
Proximal Methods for Plant Stress Detection Using
Optical Sensors and Machine Learning
Alanna V. Zubler and Jeong-Yeol Yoon *
Department of Biosystems Engineering, The University of Arizona, Tucson, AZ 85721, USA;
avzubler@email.arizona.edu
* Correspondence: jyyoon@arizona.edu
Received: 25 September 2020; Accepted: 26 November 2020; Published: 29 November 2020


Abstract: Plant stresses have been monitored using the imaging or spectrometry of plant leaves in the
visible (red-green-blue or RGB), near-infrared (NIR), infrared (IR), and ultraviolet (UV) wavebands,
often augmented by ﬂuorescence imaging or ﬂuorescence spectrometry. Imaging at multiple speciﬁc
wavelengths (multi-spectral imaging) or across a wide range of wavelengths (hyperspectral imaging)
can provide exceptional information on plant stress and subsequent diseases. Digital cameras, thermal
cameras, and optical ﬁlters have become available at a low cost in recent years, while hyperspectral
cameras have become increasingly more compact and portable. Furthermore, smartphone cameras
have dramatically improved in quality, making them a viable option for rapid, on-site stress detection.
Due to these developments in imaging technology, plant stresses can be monitored more easily using
handheld and ﬁeld-deployable methods. Recent advances in machine learning algorithms have
allowed for images and spectra to be analyzed and classiﬁed in a fully automated and reproducible
manner, without the need for complicated image or spectrum analysis methods. This review will
highlight recent advances in portable (including smartphone-based) detection methods for biotic and
abiotic stresses, discuss data processing and machine learning techniques that can produce results for
stress identiﬁcation and classiﬁcation, and suggest future directions towards the successful translation
of these methods into practical use.
Keywords: abiotic stress; plant disease; ﬂuorescence; hyperspectral imaging; thermography;
RGB imaging; smartphone imaging; support vector machine (SVM); artiﬁcial neural network (ANN);
machine learning
1. Introduction
New and innovative management techniques are needed to ensure a sustainable future for the
agricultural industry as the world population continues to increase. There will be over 9 billion people
inhabiting the earth by 2050 [1]. Feeding such a large population is a complex problem that will
require the utilization of a variety of ideas and techniques across disciplines. Among these is ensuring
maximum crop yields with minimal losses from plant stresses such as drought, lack of nutrients,
and disease. If proper attention is not given to the mitigation of these yield losses, several components
of food security such as availability and economic access may be aﬀected [2].
Pathogens and biotic stresses have received considerable attention in plant stress studies.
About 20–30% of crops are lost due to pests and pathogens globally, with many of these losses
occurring almost every growing season [3]. Furthermore, many species of plant pathogens can
travel over long distances, whether by wind, water, or human activities such as trade and travel [4].
The distribution of pathogens may also be shifted due to the eﬀects of climate change [5]. The detection
of plant diseases is therefore essential not only to implement appropriate disease management strategies
and mitigate potential losses but also to monitor changes in pathogen distribution. Most diseases can be
Biosensors 2020, 10, 193; doi:10.3390/bios10120193
www.mdpi.com/journal/biosensors
Biosensors 2020, 10, 193
2 of 27
detected relatively easily when symptoms are fully developed due to noticeable changes in the plant’s
appearance; however, early detection is essential in preventing large yield losses. It is also needful
to detect abiotic stresses such as water and nutrient deﬁciencies at an early stage before damages
signiﬁcantly aﬀect crop yields; furthermore, these stresses will become more prevalent in the agriculture
industry due to climate change eﬀects such as drought stress and increased salinity [6], which will
produce a need for increased environmental monitoring for more reﬁned management practices.
Bioreceptor-based direct detection methods such as polymerase chain reaction (PCR) [7],
enzyme-linked immunosorbent assay (ELISA) [8], and ﬂow cytometry (FC) [9] are widely available
for the detection of plant diseases; however, these methods require specialized training and can be
time-consuming and labor-intensive. An alternative detection method that can be used both for biotic
and abiotic stresses is a simple visual observation by an expert [10], but this technique can be prone to
bias, with varying results based on the experience of the evaluator.
Optical techniques hold considerable advantages over the previously mentioned techniques,
such as a greater potential for rapid disease detection (with some methods producing results in
near-real-time [11]), standardized results that are not subject to individual biases, and the ability to
detect both biotic and abiotic stresses. Techniques using proximal (near to the target) sensing methods
have been utilizing optical sensors that are becoming increasingly smaller and more portable. Although
optical sensors provide greater simplicity in the data collection process, the data itself can be complex
and large in size (especially in regard to hyperspectral imaging), requiring the use of sophisticated data
processing and statistical methods. Furthermore, images and spectroscopic data are not very speciﬁc
to particular stresses, as opposed to bioreceptor-based (e.g., chemical ligands, antibodies, nucleic acids,
etc.) direct detection methods. Despite these limitations, stress speciﬁcity and complex data analysis
can still be achieved using machine learning techniques, which can analyze the data provided to
ﬁnd patterns that are speciﬁc to the plant stress in question. Many studies have successfully utilized
machine learning to interpret optical sensor data for the detection of speciﬁc stresses. This review aims
to provide an outline of current optical sensor types and machine learning methods used to proximally
detect plant stresses.
2. Spectral Properties of Plant Tissues
Many physiological and chemical properties of plants inﬂuence the way their tissues reﬂect and
absorb light. These properties can change when a plant is subjected to stress and alter the reﬂectance
spectrum of its leaves (Figure 1).
Chlorophyll is a pigment that is involved in the photosynthesis process. Due to its important role
in absorbing light, changes in chlorophyll content resulting from stress will alter the way the plant
interacts with light energy. A decrease in chlorophyll content may occur when the plant is subjected to
stress, which can be characterized in various ways including an increase of reﬂectance near 700 nm [12]
and decreased reﬂectance in the 530–630 nm range [13]. Other pigments besides chlorophyll, such as
carotenes [14] and xanthophylls [15], can also alter a plant’s reﬂectance properties.
In addition to pigmentation, leaf anatomical properties (Figure 2) such as the convexity of
epidermal cells [16], surface texture and thickness of the leaf cuticle [17], and high trichome density [18]
can be altered under stress and consequently aﬀect a leaf’s spectral properties. For example, exposure
to UV radiation can result in changes to chlorophyll content and increased leaf thickness, which can
alter chlorophyll ﬂuorescence levels [19]. Reﬂectance in the 950–970 nm range was found by Peñuelas
et al. (1993) to be inﬂuenced by cell wall elasticity, which decreases in response to drought stress [20].
Small openings on plant leaves (stomata) can also aﬀect leaf properties under stress [21].
These pores are important to regulate moisture and control gas exchange in the leaves; however,
microorganisms such as bacteria and fungi can use them to enter and infect a plant. Plants can recognize
these pathogens using pathogen- or microbe-associated molecular patterns (PAMPs or MAMPs),
which can then trigger stomatal closure to prevent entry [22]. Stomatal closure can lead to an increase
in leaf temperature, which can be detected in the infrared region of the electromagnetic spectrum.
Biosensors 2020, 10, 193
3 of 27
Biosensors 2020, 10, x FOR PEER REVIEW 
3 of 28 
 
Figure 1. Reflectance spectra of Quercus aquifolioides leaves at different altitudes. Vegetation 
reflectance curves in general typically display this kind of pattern, with low reflectance in the visible 
region (influenced by leaf pigments), “red edge” connecting the visible and near-infrared (NIR) 
region, and high reflectance in the NIR region (influenced by cell structure). After 1300 nm, reflectance 
characteristics are mostly influenced by leaf water content. Reprinted from [12]. ©2020 Zhu et al. 
 
Figure 2. Drawing of a cross-section of a typical leaf with labeled cell types and layers. Basic light 
interactions with leaf layers are annotated. Reprinted from [21]. ©2008 Liew et al. 
The biochemical properties of leaves, such as cellulose, hemicellulose, lignin, protein, sugar, and 
starch can also change under various stresses and affect the reflectance properties of leaves [23]. For 
example, salt stress can result in spectral changes by damaging leaf mesophyll cells and altering 
Figure 1. Reﬂectance spectra of Quercus aquifolioides leaves at diﬀerent altitudes. Vegetation reﬂectance
curves in general typically display this kind of pattern, with low reﬂectance in the visible region
(inﬂuenced by leaf pigments), “red edge” connecting the visible and near-infrared (NIR) region, and high
reﬂectance in the NIR region (inﬂuenced by cell structure). After 1300 nm, reﬂectance characteristics
are mostly inﬂuenced by leaf water content. Reprinted from [12]. ©2020 Zhu et al.
Biosensors 2020, 10, x FOR PEER REVIEW 
3 of 28 
 
Figure 1. Reflectance spectra of Quercus aquifolioides leaves at different altitudes. Vegetation 
reflectance curves in general typically display this kind of pattern, with low reflectance in the visible 
region (influenced by leaf pigments), “red edge” connecting the visible and near-infrared (NIR) 
region, and high reflectance in the NIR region (influenced by cell structure). After 1300 nm, reflectance 
characteristics are mostly influenced by leaf water content. Reprinted from [12]. ©2020 Zhu et al. 
 
Figure 2. Drawing of a cross-section of a typical leaf with labeled cell types and layers. Basic light 
interactions with leaf layers are annotated. Reprinted from [21]. ©2008 Liew et al. 
The biochemical properties of leaves, such as cellulose, hemicellulose, lignin, protein, sugar, and 
starch can also change under various stresses and affect the reflectance properties of leaves [23]. For 
example, salt stress can result in spectral changes by damaging leaf mesophyll cells and altering 
Figure 2. Drawing of a cross-section of a typical leaf with labeled cell types and layers. Basic light
interactions with leaf layers are annotated. Reprinted from [21]. ©2008 Liew et al.
Biosensors 2020, 10, 193
4 of 27
The biochemical properties of leaves, such as cellulose, hemicellulose, lignin, protein, sugar,
and starch can also change under various stresses and aﬀect the reﬂectance properties of leaves [23].
For example, salt stress can result in spectral changes by damaging leaf mesophyll cells and altering
polysaccharide and lignin composition in the cell wall [24]. Leaf water content can also inﬂuence
reﬂectance spectra as light absorption in the infrared region (>1300 nm) is primarily due to water
absorption [25].
3. Sensors and Data Collection
A variety of optical sensors have been used to evaluate plant health, including hyperspectral,
multispectral, thermal, and ﬂuorescence sensors (Table 1). The reﬂectance data collected by these
devices can be represented using images acquired by imaging techniques or spectral graphs produced
using spectroscopic methods. An important element that can aﬀect a device’s success in stress detection
is the sensor’s sensitivity to areas in the plant’s reﬂectance spectrum that are altered by biotic and
abiotic stresses. Generally, the most sensitive region in the electromagnetic spectrum for evaluating
plant health is the visible region [26], but other regions can also be inﬂuenced by stress. A diagram
displaying various wavelength regions in the electromagnetic spectrum is presented in Figure 3 [27].
Biosensors 2020, 10, x FOR PEER REVIEW 
4 of 28 
polysaccharide and lignin composition in the cell wall [24]. Leaf water content can also influence 
reflectance spectra as light absorption in the infrared region (>1300 nm) is primarily due to water 
absorption [25]. 
3. Sensors and Data Collection 
A variety of optical sensors have been used to evaluate plant health, including hyperspectral, 
multispectral, thermal, and fluorescence sensors (Table 1). The reflectance data collected by these 
devices can be represented using images acquired by imaging techniques or spectral graphs 
produced using spectroscopic methods. An important element that can affect a device’s success in 
stress detection is the sensor’s sensitivity to areas in the plant’s reflectance spectrum that are altered 
by biotic and abiotic stresses. Generally, the most sensitive region in the electromagnetic spectrum 
for evaluating plant health is the visible region [26], but other regions can also be influenced by stress. 
A diagram displaying various wavelength regions in the electromagnetic spectrum is presented in 
Figure 3 [27]. 
 
Figure 3. Ranges of the electromagnetic spectrum that are utilized by various sensor types. Useful 
wavelengths for plant stress detection tend to be in the ultra-violet (UV), visible, and NIR ranges. 
Reprinted from [27]. ©2019 Rosique et al. 
3.1. Hyperspectral Imaging 
Hyperspectral imaging utilizes both imaging and spectroscopy methods to produce multi-
dimensional data. Spectral information for a wide range of individual wavelengths is assigned to 
every pixel in an image [28]. Rather than collecting spectra from an entire image or an entire plant 
leaf, where spectra from the stressed and unaffected areas are mixed together, hyperspectral imaging 
can provide more sophisticated data that can isolate spectra only from the affected area and identify 
specific imaging patterns and characteristics. This method has become increasingly popular for plant 
phenotyping and stress detection in agriculture [29–31] and has been used to identify plant responses 
to both abiotic and biotic stresses, such as drought stress in maize [32] and barley [33], yellow rust 
[34] and powdery mildew [35] in wheat, salt stress in okra [36], and Black Sigatoka disease in banana 
plants [37].  
Hyperspectral imaging for plant status evaluation typically uses a wavelength range of about 
250–2500 nm, i.e., UV (ultraviolet), visible, and NIR (near-infrared), with the most important areas in 
the visible and NIR ranges [38]. Other areas of the spectrum are still being explored in terms of their 
capability for plant stress detection. For example, Brugger et al. (2019) used hyperspectral imaging in 
Figure 3.
Ranges of the electromagnetic spectrum that are utilized by various sensor types.
Useful wavelengths for plant stress detection tend to be in the ultra-violet (UV), visible, and NIR ranges.
Reprinted from [27]. ©2019 Rosique et al.
3.1. Hyperspectral Imaging
Hyperspectral imaging utilizes both imaging and spectroscopy methods to produce
multi-dimensional data. Spectral information for a wide range of individual wavelengths is assigned
to every pixel in an image [28]. Rather than collecting spectra from an entire image or an entire plant
leaf, where spectra from the stressed and unaﬀected areas are mixed together, hyperspectral imaging
can provide more sophisticated data that can isolate spectra only from the aﬀected area and identify
speciﬁc imaging patterns and characteristics. This method has become increasingly popular for plant
phenotyping and stress detection in agriculture [29–31] and has been used to identify plant responses
to both abiotic and biotic stresses, such as drought stress in maize [32] and barley [33], yellow rust [34]
and powdery mildew [35] in wheat, salt stress in okra [36], and Black Sigatoka disease in banana
plants [37].
Biosensors 2020, 10, 193
5 of 27
Hyperspectral imaging for plant status evaluation typically uses a wavelength range of about
250–2500 nm, i.e., UV (ultraviolet), visible, and NIR (near-infrared), with the most important areas
in the visible and NIR ranges [38]. Other areas of the spectrum are still being explored in terms of
their capability for plant stress detection. For example, Brugger et al. (2019) used hyperspectral
imaging in the UV range to detect salt stress in barley [39]. Due to the sensors’ ability to detect a wide
range of wavelengths in the electromagnetic spectrum, many possibilities remain for evaluating new
combinations of wavelengths for plant stress detection.
The data acquired using hyperspectral techniques are often used to compute and create vegetation
indices (VIs). VIs are computed using ratios and combinations of reﬂectance measurements at a few
speciﬁc wavelengths and have been used extensively for plant stress monitoring [40–42]. In addition
to VIs, hyperspectral data can be used to develop spectral disease indices (SDIs) with the purpose
of discriminating between speciﬁc plant diseases [43] (Table 2). Some examples include indices for
detecting powdery mildew in wheat [44] and sugar beet [45], cercospora leaf spot in sugar beet [45],
leaf rust in wheat [46], and myrtle rust [47]. Notable vegetation indices include the normalized
diﬀerence vegetation index (NDVI) [48], water index (WI) [49], and photochemical reﬂectance index
(PRI) [50]. The vast amount of spectral data that is collected using hyperspectral imaging provides
great potential in developing new VIs and SDIs for the detection of highly speciﬁc plant stresses.
The main advantages of hyperspectral imaging include its robustness and ability to provide a
large amount of data for analysis; however, this can result in instruments being relatively expensive.
In addition, traditional hyperspectral imaging sensors can be bulky and large, which limits their
portability and range of applications; however, the development of handheld spectroradiometers and
small hyperspectral cameras (Figure 4) has largely addressed this problem. While these instruments
typically have a more limited spectral range than a standard hyperspectral sensor, they have the
capacity to be used with real-time detection applications [51,52]. Spectroradiometers are unable to
capture hyperspectral images; however, they have been used in many studies to detect plant stresses,
such as peanut leaf spot disease [53] and powdery mildew in barley [52].
Biosensors 2020, 10, x FOR PEER REVIEW 
5 of 28 
the UV range to detect salt stress in barley [39]. Due to the sensors’ ability to detect a wide range of 
wavelengths in the electromagnetic spectrum, many possibilities remain for evaluating new 
combinations of wavelengths for plant stress detection. 
The data acquired using hyperspectral techniques are often used to compute and create 
vegetation indices (VIs). VIs are computed using ratios and combinations of reflectance 
measurements at a few specific wavelengths and have been used extensively for plant stress 
monitoring [40–42]. In addition to VIs, hyperspectral data can be used to develop spectral disease 
indices (SDIs) with the purpose of discriminating between specific plant diseases [43] (Table 2). Some 
examples include indices for detecting powdery mildew in wheat [44] and sugar beet [45], cercospora 
leaf spot in sugar beet [45], leaf rust in wheat [46], and myrtle rust [47]. Notable vegetation indices 
include the normalized difference vegetation index (NDVI) [48], water index (WI) [49], and 
photochemical reflectance index (PRI) [50]. The vast amount of spectral data that is collected using 
hyperspectral imaging provides great potential in developing new VIs and SDIs for the detection of 
highly specific plant stresses. 
The main advantages of hyperspectral imaging include its robustness and ability to provide a 
large amount of data for analysis; however, this can result in instruments being relatively expensive. 
In addition, traditional hyperspectral imaging sensors can be bulky and large, which limits their 
portability and range of applications; however, the development of handheld spectroradiometers and 
small hyperspectral cameras (Figure 4) has largely addressed this problem. While these instruments 
typically have a more limited spectral range than a standard hyperspectral sensor, they have the 
capacity to be used with real-time detection applications [51,52]. Spectroradiometers are unable to 
capture hyperspectral images; however, they have been used in many studies to detect plant stresses, 
such as peanut leaf spot disease [53] and powdery mildew in barley [52].  
Hyperspectral imaging sensors have become increasingly smaller and less expensive; however, 
considerable progress still remains to create a device that costs less than a few hundred U.S. dollars. 
Currently, the cost of these cameras is in the thousands of U.S. dollars, which can make them cost-
prohibitive to many. Future advances in imaging technology over the coming years should be able 
to produce a hyperspectral camera or spectrophotometer that is cheaper and more accessible. 
 
Figure 4. SpecimIQ miniature hyperspectral camera (Specim Ltd., Oulu, Finland). Reprinted from 
[52]. ©2018 Behmann et al. 
3.2. Multispectral Imaging and Spectroscopy 
Multispectral techniques utilize data from ranges of wavelengths, rather than hundreds of 
individual wavelengths or narrow wavebands as demonstrated in hyperspectral techniques. A few 
wavelengths or wavebands of interest can be chosen for incorporation into a device that uses either 
imaging or spectroscopic techniques. Multispectral imaging involves data collection using a camera 
or other sensing device to produce image data in specified wavelength or waveband regions, while 
multispectral spectroscopy produces spectral data for specified wavebands. Both multispectral 
imaging and multispectral spectroscopy have been successfully used to identify plant stresses; for 
Figure 4. SpecimIQ miniature hyperspectral camera (Specim Ltd., Oulu, Finland). Reprinted from [52].
©2018 Behmann et al.
Hyperspectral imaging sensors have become increasingly smaller and less expensive; however,
considerable progress still remains to create a device that costs less than a few hundred U.S. dollars.
Currently, the cost of these cameras is in the thousands of U.S. dollars, which can make them
cost-prohibitive to many. Future advances in imaging technology over the coming years should be
able to produce a hyperspectral camera or spectrophotometer that is cheaper and more accessible.
3.2. Multispectral Imaging and Spectroscopy
Multispectral techniques utilize data from ranges of wavelengths, rather than hundreds of
individual wavelengths or narrow wavebands as demonstrated in hyperspectral techniques. A few
Biosensors 2020, 10, 193
6 of 27
wavelengths or wavebands of interest can be chosen for incorporation into a device that uses
either imaging or spectroscopic techniques. Multispectral imaging involves data collection using a
camera or other sensing device to produce image data in speciﬁed wavelength or waveband regions,
while multispectral spectroscopy produces spectral data for speciﬁed wavebands. Both multispectral
imaging and multispectral spectroscopy have been successfully used to identify plant stresses;
for example, multispectral imaging was used to detect leaf spot disease in oilseed rape [54], gray mold
in tomato leaves [55], and nutrient deﬁciencies in tomato plants [56], while multispectral spectroscopy
was used to detect nitrogen deﬁciency stress in maize [57], drought stress in tomato plants [58],
and nitrogen deﬁciency in canola plants [59]. Multispectral techniques oﬀer more aﬀordable sensors
than their hyperspectral counterparts; however, they do not provide as much information about the
plant and its environment due to the broader wavebands. Nevertheless, other advantages multispectral
methods have are their portability and ﬂexibility, which can aid in the creation of customized devices.
Band-pass ﬁlters could be used in conjunction with a camera or other imaging device to acquire data
in desired spectral ranges at a low cost. Recent modiﬁcations in smartphone cameras now permit
the capture of NIR wavelengths; Chung et al. (2018) utilized an 800 nm high-pass ﬁlter attached to a
smartphone to acquire both NIR and red images towards detection of plant stress [60].
3.3. RGB Imaging
RGB (visible or red-green-blue) imaging employs sensors that utilize the red, green, and blue
regions of the spectrum to produce image data (which is the standard working principle of digital
cameras). The wavelengths captured are approximately 400–499 nm for blue light (maximum at
475 nm), 500–549 nm for green light (maximum at 520 nm), and 550–750 nm for red light (maximum
at 650 nm) [38]. In this sense, RGB imaging may be considered as a special case of multispectral
imaging. However, as RGB imaging data are typically acquired using a digital camera or smartphone
while multispectral imaging requires more speciﬁc equipment or instrumentation, they are typically
treated separately.
The main advantages of RGB imaging are its aﬀordability and small, portable sensor size.
RGB image sensors are already present on smartphones and have been used to successfully evaluate
plant stresses (Figure 5), such as iron deﬁciency chlorosis in soybean [11], various nutrient deﬁciencies in
black gram [61], early and late blight in potato plants [62], and biotic stresses in wheat [63]. Furthermore,
RGB imaging (especially with smartphones) does not require much technical expertise on the user’s
side since they typically make use of commonly used devices such as digital cameras and smartphones.
Smartphones also have enough computing power to process the captured data, which enables rapid
assessments of plant stresses. However, many factors can complicate RGB data, such as lighting,
environmental conditions, time of day, and spectral resolution [64,65]. Illumination is a particularly
important concern in terms of ﬁeld applications since it can vary greatly depending on the season and
weather conditions. Diseases with various symptoms and complex image backgrounds can create
further complications in processing the data; however, many of these diﬃculties can be overcome
using image processing and machine learning techniques [11].
3.4. Thermal Imaging/Thermography
The main diﬀerence between thermography and other methods is its measurement of emitted
radiation from an object, rather than reﬂected radiation [66]. Thermal cameras detect radiation
in the infrared wavelength range, with the resulting measurements being displayed as false-color
images (Figure 6) where the pixels contain the temperature values. Thermographic methods for plant
stress detection primarily exploit changes in surface temperature being a notable stress symptom.
Small openings on plant leaves (stomata) that control water loss from transpiration may close under
stress, causing the temperature of the plant to increase [67]. Thermography has been used to detect a
variety of biotic and abiotic stresses, such as Aspergillus carbonarius infection in grapes [66], drought
stress in maize [68], apple scab disease [69], and drought stress in sesame plants [70].
Biosensors 2020, 10, 193
7 of 27
Biosensors 2020, 10, x FOR PEER REVIEW 
7 of 28 
 
Figure 5. Smartphone being used to evaluate the leaf color of rice plant leaves, which is applicable in 
detecting nitrogen deficiencies. Reprinted with permission from [65]. ©2020 Elsevier. 
3.4. Thermal Imaging/Thermography 
The main difference between thermography and other methods is its measurement of emitted 
radiation from an object, rather than reflected radiation [66]. Thermal cameras detect radiation in the 
infrared wavelength range, with the resulting measurements being displayed as false-color images 
(Figure 6) where the pixels contain the temperature values. Thermographic methods for plant stress 
detection primarily exploit changes in surface temperature being a notable stress symptom. Small 
openings on plant leaves (stomata) that control water loss from transpiration may close under stress, 
causing the temperature of the plant to increase [67]. Thermography has been used to detect a variety 
of biotic and abiotic stresses, such as Aspergillus carbonarius infection in grapes [66], drought stress in 
maize [68], apple scab disease [69], and drought stress in sesame plants [70]. 
Thermography is a relatively simple method that can be incorporated into systems designed for 
the rapid detection of plant stress. Thermal cameras are often very portable, and attachments have 
been developed that can be used with smartphones. Among these is the FLIR One, which was used 
by Petrie et al. (2019) to assess the water status of grapevines [71]. However, thermographic methods 
are highly affected by varying environmental conditions [70], which may make them more applicable 
in controlled environment applications rather than an open field. Furthermore, thermography lacks 
specificity and therefore provides a more general solution to plant stress detection. It is recommended 
to combine thermography with other methods when specific diseases need to be identified since this 
method is not able to distinguish between different stresses and diseases on its own [69]. 
Figure 5. Smartphone being used to evaluate the leaf color of rice plant leaves, which is applicable in
detecting nitrogen deﬁciencies. Reprinted with permission from [65]. ©2020 Elsevier.
Biosensors 2020, 10, x FOR PEER REVIEW 
8 of 28 
 
Figure 6. Thermographic image data used to evaluate drought stress in maize plants. In (A,C) the top 
row consists of well-watered plants, while the bottom row is drought-stressed. Similarly, in (B,D), 
well-watered plants are in the left row, while drought-stressed plants are in the right. Reprinted with 
permission from [68]. ©2019 Casari et al. 
3.5. Fluorescence Spectroscopy 
The above-mentioned imaging methods (hyperspectral, multispectral, and RGB imaging) 
quantify the attenuations of incident light by the samples (plant leaves in this case) over the range of 
wavelengths, i.e., spectrophotometric detection. Since many components in plant leaves exhibit 
colorations and subsequently spectrophotometric responses, the resulting spectrophotometric 
images tend to be quite complex. Fluorescence-based methods can fix this issue, as only a small 
number of components in plant leaves exhibit fluorescence. Fluorescent molecules (e.g., chlorophyll, 
Figure 6. Thermographic image data used to evaluate drought stress in maize plants. In (A,C) the top
row consists of well-watered plants, while the bottom row is drought-stressed. Similarly, in (B,D),
well-watered plants are in the left row, while drought-stressed plants are in the right. Reprinted with
permission from [68]. ©2019 Casari et al.
Thermography is a relatively simple method that can be incorporated into systems designed for
the rapid detection of plant stress. Thermal cameras are often very portable, and attachments have
Biosensors 2020, 10, 193
8 of 27
been developed that can be used with smartphones. Among these is the FLIR One, which was used by
Petrie et al. (2019) to assess the water status of grapevines [71]. However, thermographic methods
are highly aﬀected by varying environmental conditions [70], which may make them more applicable
in controlled environment applications rather than an open ﬁeld. Furthermore, thermography lacks
speciﬁcity and therefore provides a more general solution to plant stress detection. It is recommended
to combine thermography with other methods when speciﬁc diseases need to be identiﬁed since this
method is not able to distinguish between diﬀerent stresses and diseases on its own [69].
3.5. Fluorescence Spectroscopy
The above-mentioned imaging methods (hyperspectral, multispectral, and RGB imaging) quantify
the attenuations of incident light by the samples (plant leaves in this case) over the range of wavelengths,
i.e., spectrophotometric detection. Since many components in plant leaves exhibit colorations and
subsequently spectrophotometric responses, the resulting spectrophotometric images tend to be quite
complex. Fluorescence-based methods can ﬁx this issue, as only a small number of components in plant
leaves exhibit ﬂuorescence. Fluorescent molecules (e.g., chlorophyll, ﬂuorescent dyes, etc.) absorb light
at a speciﬁc wavelength (excitation) and emit at a speciﬁc, longer wavelength (emission), thus incident
and emitted light can be separated. The two main types of ﬂuorescence emitted by vegetation are
blue-green ﬂuorescence (400–600 nm) [72] and chlorophyll ﬂuorescence (650–800 nm) [73]. The latter
can be useful in evaluating photosynthetic activity, which can decrease under pathogenic stresses [74].
Although several techniques are available, two major methods for acquiring ﬂuorescence data in
plants are pulse-amplitude modulation (PAM) of the measuring light and continuous illumination [75].
Pulse-amplitude modulation devices use a pulsed measuring light source, an actinic light source, and a
saturating light to obtain ﬂuorescence signals [76]. In contrast, light is not pulsed when continuous
illumination is utilized.
Fluorescence can be measured as a spectrum from a single point in time [77], or the change in
ﬂuorescence over time can be monitored (chlorophyll ﬂuorescence kinetics). The basic principle behind
chlorophyll ﬂuorescence techniques is a lowered rate of photosynthesis from stresses and subsequent
dissipation of chlorophyll ﬂuorescence [78]. Fluorescence kinetics measurements require the use of
dark adaptation, which consists of placing a plant (or the part of the plant to be measured) in the dark
for a certain period of time before ﬂuorescence measurements are taken. Dark adaptation allows for
the measurement of the minimum level of ﬂuorescence [79], which is a fundamental value in kinetics
analysis since it provides a baseline for the other ﬂuorescence measurements taken after the excitation
light has been introduced. Plants are usually dark-adapted for a period of 30 min [80–82]. Regardless
of whether dark adaptation is utilized or not, it is essential to give plants the necessary time to adapt to
light conditions before measurements (for kinetics applications or standard spectra) are taken.
Fluorescence ratios are often used to analyze ﬂuorescence data (both images and spectra) for
evaluating plant stresses. Common ratios involving UV-induced (320–400 nm) ﬂuorescence include
F440/F520, F440/F690, F440/F740, and F690/F740; F440/F690 and F440/F740 are particularly useful for
early stress detection applications (F represents ﬂuorescence and the numbers represent emission
wavelengths) [83]. Bürling et al. (2011) used red/far-red and blue/green amplitude ratios acquired
from spectral signatures to diﬀerentiate between nitrogen deﬁciency, leaf rust, and powdery mildew
stresses [84]. Although the ratios mentioned above are relatively well-established in ﬂuorescence
research, there is still room for exploration in determining other ratios that could be used to process data.
Fluorescence spectroscopy can identify the location and amount of a speciﬁc component from
the sample through applying a narrow-range excitation light and detecting a narrow-range emission
from such component. Figure 7 is an example of ﬂuorescence spectroscopy, where the plant leaves are
excited at 488 nm (blue color) and a spectrum with wavelengths of >500 nm (green and red colors) is
collected. There is a clear diﬀerence between the healthy and virus-infected plant leaves. Fluorescence
spectroscopy has been used in many other studies to detect both biotic and abiotic stresses, including
Biosensors 2020, 10, 193
9 of 27
drought stress in passion fruit [80]; nutrient stresses in maize [81], tomato [81], and rapeseed [82] crops;
and citrus canker on grapefruit plants [85].
Fluorescence spectroscopy has advantages such as simplicity of use, low cost, and an ability
to be incorporated into hand-held devices for screening applications [79]. In addition, the use of
laser light as an excitation light source can be more reliable than other optical methods, as excitation
exactly at the sample’s peak excitation wavelength can generate stronger and more speciﬁc ﬂuorescent
emission (as opposed to passive measurements) [86]. Fluorescence data can be collected across
multiple wavelengths, which can provide more information than ﬂuorescence captured at a single
targeted wavelength. However, ﬂuorescence spectroscopy alone still lacks speciﬁcity [85] because
changes in ﬂuorescence can be indicative of a wide variety of stresses. Therefore, it is necessary to
combine this method with others if discrimination between speciﬁc stresses is to be achieved. Another
challenge related to chlorophyll ﬂuorescence kinetics is the reduction of ﬂuorescence intensity over
time (photoquenching or photobleaching); however, Saleem et al. (2020) were able to mitigate its eﬀects
by measuring ﬂuorescence spectra quickly (about 15 s) after the excitation light was introduced [85].
Biosensors 2020, 10, x FOR PEER REVIEW 
9 of 28 
necessary time to adapt to light conditions before measurements (for kinetics applications or standard 
spectra) are taken.  
Fluorescence ratios are often used to analyze fluorescence data (both images and spectra) for 
evaluating plant stresses. Common ratios involving UV-induced (320–400 nm) fluorescence include 
F440/F520, F440/F690, F440/F740, and F690/F740; F440/F690 and F440/F740 are particularly useful for 
early stress detection applications (F represents fluorescence and the numbers represent emission 
wavelengths) [83]. Bürling et al. (2011) used red/far-red and blue/green amplitude ratios acquired 
from spectral signatures to differentiate between nitrogen deficiency, leaf rust, and powdery mildew 
stresses [84]. Although the ratios mentioned above are relatively well-established in fluorescence research, 
there is still room for exploration in determining other ratios that could be used to process data. 
Fluorescence spectroscopy can identify the location and amount of a specific component from 
the sample through applying a narrow-range excitation light and detecting a narrow-range emission 
from such component. Figure 7 is an example of fluorescence spectroscopy, where the plant leaves 
are excited at 488 nm (blue color) and a spectrum with wavelengths of >500 nm (green and red colors) 
is collected. There is a clear difference between the healthy and virus-infected plant leaves. 
Fluorescence spectroscopy has been used in many other studies to detect both biotic and abiotic 
stresses, including drought stress in passion fruit [80]; nutrient stresses in maize [81], tomato [81], 
and rapeseed [82] crops; and citrus canker on grapefruit plants [85].  
 
Figure 7. Fluorescence emission spectra of leaves excited at 488 nm. (a) chlorotic part of tobacco leaf 
infected by cucumber mosaic virus; (b) green part of tobacco leaf infected with cucumber mosaic 
virus; (c) a healthy tobacco leaf. Reprinted with permission from [77]. ©2016 John Wiley and Sons. 
Fluorescence spectroscopy has advantages such as simplicity of use, low cost, and an ability to 
be incorporated into hand-held devices for screening applications [79]. In addition, the use of laser 
light as an excitation light source can be more reliable than other optical methods, as excitation exactly 
at the sample’s peak excitation wavelength can generate stronger and more specific fluorescent 
emission (as opposed to passive measurements) [86]. Fluorescence data can be collected across 
multiple wavelengths, which can provide more information than fluorescence captured at a single 
targeted wavelength. However, fluorescence spectroscopy alone still lacks specificity [85] because 
changes in fluorescence can be indicative of a wide variety of stresses. Therefore, it is necessary to 
combine this method with others if discrimination between specific stresses is to be achieved. 
Another challenge related to chlorophyll fluorescence kinetics is the reduction of fluorescence 
intensity over time (photoquenching or photobleaching); however, Saleem et al. (2020) were able to 
Figure 7. Fluorescence emission spectra of leaves excited at 488 nm. (a) chlorotic part of tobacco leaf
infected by cucumber mosaic virus; (b) green part of tobacco leaf infected with cucumber mosaic virus;
(c) a healthy tobacco leaf. Reprinted with permission from [77]. ©2016 John Wiley and Sons.
3.6. Fluorescence Imaging
Fluorescence imaging utilizes a camera to obtain images of ﬂuorescence (Figure 8). It is considered
an improvement over spectroscopy since it obtains ﬂuorescence data with higher dimensions, which can
provide more information than single spectra. Rather than collecting a spectrum from an area of
interest (i.e., ﬂuorescence spectroscopy), ﬂuorescence imaging can isolate the area of interest from that
of non-interest. For example, Su et al. (2019) used ﬂuorescence imaging to successfully discriminate
crops from weeds [87]. One category of continuous ﬂuorescence imaging is multicolor ﬂuorescence
imaging, which typically uses UV excitation light and collects ﬂuorescence data from multiple bands,
such as red (F680), far-red (F740), green (F520), and blue (F440) [83]. Multicolor ﬂuorescence imaging is
conceptually similar to multispectral imaging since only certain ﬂuorescence wavebands are collected
and combined to produce the image. Fluorescence imaging can also be used with dark adaptation and
chlorophyll ﬂuorescence kinetics applications.
Fluorescence imaging has been used in many studies to detect both biotic and abiotic stresses,
such as herbicide stress in soybeans [88], cold stress in tomato seedlings [89], and biotic and abiotic
Biosensors 2020, 10, 193
10 of 27
stresses in barley, grapevine, and sugar beet [90]. A relatively simple and portable option for ﬂuorescence
image acquisition could consist of a smartphone and band-pass ﬁlters (as demonstrated in [91]); however,
it is currently diﬃcult to ﬁnd methods with this type of setup for plant stress applications.
One advantage of ﬂuorescence-based techniques is their sensible cost of equipment [92]; however,
they do not always produce a clear distinction of healthy and diseased plant tissues at the early stage
of a disease, so additional methods may be necessary to complement ﬂuorescence for early disease
detection [93]. Fluorescence-related methods could beneﬁt from an increased sensitivity that could
allow them to be used for stress discrimination applications rather than simple stress identiﬁcation.
data from multiple bands, such as red (F680), far red (F740), green (F520), and blue (F440) [83]. 
Multicolor fluorescence imaging is conceptually similar to multispectral imaging since only certain 
fluorescence wavebands are collected and combined to produce the image. Fluorescence imaging can 
also be used with dark adaptation and chlorophyll fluorescence kinetics applications. 
Fluorescence imaging has been used in many studies to detect both biotic and abiotic stresses, 
such as herbicide stress in soybeans [88], cold stress in tomato seedlings [89], and biotic and abiotic 
stresses in barley, grapevine, and sugar beet [90]. A relatively simple and portable option for 
fluorescence image acquisition could consist of a smartphone and band-pass filters (as demonstrated 
in [91]); however, it is currently difficult to find methods with this type of setup for plant stress 
applications. 
One advantage of fluorescence-based techniques is their sensible cost of equipment [92]; 
however, they do not always produce a clear distinction of healthy and diseased plant tissues at the 
early stage of a disease, so additional methods may be necessary to complement fluorescence for 
early disease detection [93]. Fluorescence-related methods could benefit from an increased sensitivity 
that could allow them to be used for stress discrimination applications rather than simple stress 
identification. 
 
Figure 8. Fluorescence ratios of barley leaves with nitrogen (N) deficiencies of varying severity. 
Reprinted from [90]. ©2014 Konanz et al. 
3.7. Combination of Sensors 
Combining two or more of the methods mentioned above can provide more information on 
plant health as opposed to using just one method. The merging of data from multiple sensors has 
Figure 8. Fluorescence ratios of barley leaves with nitrogen (N) deﬁciencies of varying severity.
Reprinted from [90]. ©2014 Konanz et al.
3.7. Combination of Sensors
Combining two or more of the methods mentioned above can provide more information on
plant health as opposed to using just one method. The merging of data from multiple sensors has
been successful in plant stress detection; for example, Moshou et al. (2011) used a combination of
multispectral and hyperspectral imaging to detect yellow rust in wheat [94]. Many advantages are
oﬀered by using multiple sensors, including higher accuracy and decreased sensitivity to changes in
the environment [94]; however, a major challenge is the merging of diﬀerent data types. One possible
solution is a discriminant analysis, which was used by Berdugo et al. (2014) to combine thermographic,
hyperspectral, and chlorophyll ﬂuorescence data to diﬀerentiate between cucumber mosaic virus, green
mottle mosaic virus, and powdery mildew in cucumber plants [95]. Sensor combination shows great
potential in producing accurate, highly speciﬁc data; however, more research is needed in methods
to combine data from multiple sources with diﬀerent properties and work with larger amounts of
data [95]. Machine learning could be a pivotal tool in analyzing such combinatory sensor data.
A variety of sensors have been used to identify stresses in agricultural crops [96–101]; however,
their detection capabilities could be greatly enhanced by incorporating machine learning techniques,
which are discussed in the following sections.
Biosensors 2020, 10, 193
11 of 27
Table 1. Optical Methods Used for Plant Stress Detection.
Method
Wavelengths
Plant
Stress Type
References
Hyperspectral
Imaging
500–850 nm
Maize
Drought stress
[32]
430–890 nm
Barley
Drought stress
[33]
350–2500 nm
Wheat
Yellow rust
[34]
350–1350 nm
Wheat
Powdery mildew
[35]
380–1030 nm
Okra
Salt stress
[36]
400–1000 nm
Banana
Black Sigatoka
[37]
250–430 nm
Barley
Salt stress
[39]
400–1000 nm
Barley
Powdery mildew
[52]
325–1075 nm
Peanut
Leaf spot
[53]
Multispectral
Spectroscopy
400–1100 nm
Maize
Nutrient deﬁciency
[57]
400–980 nm
Tomato
Drought Stress
[58]
430–870 nm
Canola
Nutrient deﬁciency
[59]
Multispectral
Imaging
365–960 nm
Oilseed Rape
Light leaf spot
[54]
475, 560, 668, 717, 840 nm
Tomato
Gray Mold
[55]
550, 660, 735, 790 nm
Tomato
Nutrient deﬁciency
(multiple)
[56]
620, 870 nm
Poinsettia
Nitrogen content
[96]
450–950 nm
Wheat
Stripe rust, brown rust,
septoria tritici blotch
[97]
RGB Imaging
RGB
Soybean
Iron deﬁciency
[11]
RGB
Black Gram
Nutrient deﬁciency (multiple)
[61]
RGB
Potato
Early blight, late blight
[62]
RGB
Basil
Nitrogen stress
[98]
Thermography
7.5–13 µm
Table Grapes
Aspergillus carbonarius
[66]
7.5–13 µm
Maize
Drought stress
[68]
8–12 µm
Apple
Apple scab
[69]
8–14 µm
Sesame
Drought stress
[70]
8–14 µm
Wheat
Drought stress
[99]
Fluorescence
Spectroscopy 1
650 nm
Passion Fruit
Drought stress
[80]
635 nm
Maize, Tomato
Nutrient deﬁciency (multiple)
[81]
650 nm
Rapeseed
Nutrient deﬁciency (multiple)
[82]
405 nm
Grapefruit
Citrus canker
[85]
337 nm
Wheat
Nutrient deﬁciency, leaf rust,
powdery mildew
[84]
Fluorescence
Imaging 1
340, 447, 550 nm
Barley, Grapevine,
Sugar Beet
Nutrient deﬁciency, black rot,
leaf spot
[90]
460 nm
Soybean
Herbicide stress
[88]
620 nm
Citrus
Huanglongbing
[100]
684, 687, 757.5, 759.5 nm
(emission)
Cassava
Mosaic virus
[101]
1 In ﬂuorescence spectroscopy and ﬂuorescence imaging, excitation wavelengths are shown except noted otherwise.
Table 2. Equations and Applications of Vegetation and Disease Indices.
Index Name
Equation 1
Application
References
Vegetation Indices
Enhanced Vegetation Index
EVI = 2.5 ×
R800−R670
R800+6.0R670−7.5R479+1
Rate of photosynthesis, water stress detection
[41]
Normalized Diﬀerence Vegetation Index
NDVI = RNIR−RRED
RNIR+RRED
Plant growth and development monitoring
[48]
Water Index
WI = R900
R970
Plant water content estimation
[49]
Photochemical Reﬂectance Index
PRI = R570−R531
R570+R531
Photosynthetic eﬃciency
[50]
Disease Indices
Powdery Mildew Index (Wheat)
PMI = R515−R698
R515+R698 − 0.5R738
Powdery mildew detection in wheat
[44]
Powdery Mildew Index (Sugar Beet)
PMI = R520−R584
R520+R584 + R724
Powdery mildew detection in sugar beet
[45]
Cercospora Leaf Spot Index
CLS = R698−R570
R698+R570 − R734
Cercospora leaf spot detection in sugar beet
[45]
Leaf Rust Disease Severity Index 1
LRDSI1 = 6.9 R605
R455 − 1.2
Severity estimation of wheat leaf rust
[46]
Leaf Rust Disease Severity Index 2
LRDSI2 = 4.2 R695
R455 − 0.38
Severity estimation of wheat leaf rust
[46]
Lemon Myrtle—Myrtle Rust Index
LMMR =
 R545
R555
 5
3 × R1505
R2195
Myrtle rust detection in lemon myrtle
[47]
1 R represents the measured reﬂectance at the wavelength or waveband speciﬁed by the subscript.
Biosensors 2020, 10, 193
12 of 27
4. Machine Learning for Data Processing
Machine learning has opened possibilities for new data analysis methods in a myriad of ﬁelds,
including medicine, environmental science, and economics. Fundamentally, machine learning employs
techniques to learn from the given data without providing explicit programming commands [102],
which can result in the detection of new patterns that may otherwise be overlooked using traditional
analytical methods. Major processes in a machine learning procedure include data acquisition and
storage, preprocessing, classiﬁcation, and trait extraction [103]. Figure 9 [104] outlines a simpliﬁed
pathway for machine learning data analysis methods.
Disease Severity 
Index 2 
𝐿𝑅𝐷𝑆𝐼ଶ = 4.2 𝑅ସହହ
0.38 
of wheat leaf rust 
[46] 
Lemon Myrtle—
Myrtle Rust 
Index 
𝐿𝑀𝑀𝑅 = ൬𝑅ହସହ
𝑅ହହହ
൰
ହ
ଷ
× 𝑅ଵହ଴ହ
𝑅ଶଵଽହ
 
Myrtle rust 
detection in lemon 
myrtle 
[47] 
1 𝑅 represents the measured reflectance at the wavelength or waveband specified by the subscript. 
4. Machine Learning for Data Processing 
Machine learning has opened possibilities for new data analysis methods in a myriad of fields, 
including medicine, environmental science, and economics. Fundamentally, machine learning 
employs techniques to learn from the given data without providing explicit programming commands 
[102], which can result in the detection of new patterns that may otherwise be overlooked using 
traditional analytical methods. Major processes in a machine learning procedure include data 
acquisition and storage, preprocessing, classification, and trait extraction [103]. Figure 9 [104] outlines 
a simplified pathway for machine learning data analysis methods. 
 
Figure 9. A simplified machine learning pathway. Reprinted from [104]. ©2018 Liakos et al. 
Figure 9. A simpliﬁed machine learning pathway. Reprinted from [104]. ©2018 Liakos et al.
Machine learning is advantageous in agriculture-related ﬁelds because it can detect patterns using
simultaneous combinations of multiple factors instead of examining traits individually [102]. The use
of multiple factors is important due to the frequently high complexity of the environment surrounding
plants, where variables such as changing light intensity, direction, and leaf angle can alter results.
Machine learning can be used not only for classiﬁcation purposes but also for pre-processing steps
such as feature extraction and dimensionality reduction.
The assessment of plant health includes stress identiﬁcation, discrimination, and quantiﬁcation.
Identiﬁcation involves looking for symptoms (early or late) of a speciﬁc stress, discrimination consists
of both identifying a speciﬁc stress and separating the symptoms from those of other stresses,
and quantiﬁcation is a measurement of the severity of the stress. Machine learning has been utilized
for all these applications, as outlined in Table 3.
The selection of a machine learning method or pathway depends on the speciﬁc problem being
addressed; as such, there is currently no speciﬁc approach that can be recommended for all applications.
The following sections will provide an overview of machine learning data processing techniques that
have been used for various agricultural applications.
4.1. Preprocessing
Data preprocessing is essential to ensure the accuracy and reproducibility of classiﬁcation
results [105]. Preprocessing consists of one or more operations that aim to improve the performance of
the classiﬁcation algorithms by providing data in a more accessible and normalized format. Image
preprocessing techniques may include image cropping, background removal, contrast enhancement,
image thresholding, noise removal with ﬁlters, clustering, and principal component analysis (PCA) [102].
Although this section deals mostly with imaging techniques, spectral data may also be processed
using some of the listed methods, such as PCA. Outlined below are some preprocessing steps that are
commonly applied to imaging data.
4.1.1. Color Space Conversion
Color space conversion is a data processing technique that can be used with RGB images as another
way to represent color. Color spaces can be used to acquire additional color features from images to
aid in feature extraction and image classiﬁcation. Several studies have used features obtained from
Biosensors 2020, 10, 193
13 of 27
color space conversion to process RGB data for plant stress detection, including L*a*b* (L* = lightness
from black to white, a* = from green to red, and b* = from blue to yellow) to detect bacterial blight,
fruit spot, fruit rot, and leaf spot in pomegranate plants [106]; HSI (hue, saturation, intensity) to detect
early scorch, late scorch, cottony mold, ashen mold, and tiny whiteness in plants [107]; and YCbCr
(Y = luma component; Cb and Cr = blue- and red-diﬀerences of chroma components) to detect diseases
in soybean [108]. A few alternative color spaces are outlined in Figure 10 [109].
Biosensors 2020, 10, x FOR PEER REVIEW 
14 of 28 
 
Figure 10. An RGB (visible or red-green-blue) image represented using other color spaces. Adapted 
with permission from [109]. ©2018 John Wiley and Sons. 
4.1.2. Dimensionality Reduction 
Dimensionality reduction is a process that aims to provide a more compact representation of 
data while preserving as much information as possible. A common method for dimensionality 
reduction is principal component analysis (PCA), which geometrically projects data onto lower 
dimensions (principal components) that act as feature summaries [110]. PCA can combine dependent 
(or highly correlated) variables into a common variable while minimizing the loss of information. By 
doing so, the dimensionality of data can be reduced. The first principal component (PC1) is evaluated 
from the data set. Then PC2 is evaluated from the remainders, and the process is repeated, e.g., PC3, 
PC4, etc. The principal components (PCs) represent data variances, and these can be plotted in 2D or 
3D plots (in the case of two or three PCs) known as PCR score plots.  
All PCs can also be fed into the various machine learning models as a pre-processing step of 
dimensionality reduction. PCA has been used in many studies as an important preprocessing step to 
manage both imaging and spectral data. For example, PCA was used in an image preprocessing 
pipeline by Lu et al. (2017) to aid in acquiring feature maps [111]. While better dimensionality 
reduction methods have recently emerged, e.g., linear discriminant analysis (LDA) that can maximize 
the class separation, PCA is often preferred over the recent methods as an unbiased dimensionality 
reduction method. PCA can be a valuable tool to aid in data interpretation, but one disadvantage of 
this method is its ability to be influenced by outliers in the data [112]. 
4.1.3. Segmentation 
Image segmentation is a process that can organize an image into key areas, such as the object 
and its background. This technique is useful in agricultural applications due to its ability to reduce 
errors or misclassifications resulting from noise in the background. Notable methods include 
clustering-based approaches such as k-means, which can be useful in identifying stressed areas of a 
plant in an image [107]. Disease detection applications may require other techniques such as pixel 
removal and masking [113]. For example, Ma et al. (2018) used excess red index (ExR), H from the 
Figure 10. An RGB (visible or red-green-blue) image represented using other color spaces. Adapted
with permission from [109]. ©2018 John Wiley and Sons.
4.1.2. Dimensionality Reduction
Dimensionality reduction is a process that aims to provide a more compact representation of data
while preserving as much information as possible. A common method for dimensionality reduction
is principal component analysis (PCA), which geometrically projects data onto lower dimensions
(principal components) that act as feature summaries [110]. PCA can combine dependent (or highly
correlated) variables into a common variable while minimizing the loss of information. By doing so,
the dimensionality of data can be reduced. The ﬁrst principal component (PC1) is evaluated from the
data set. Then PC2 is evaluated from the remainders, and the process is repeated, e.g., PC3, PC4, etc.
The principal components (PCs) represent data variances, and these can be plotted in 2D or 3D plots
(in the case of two or three PCs) known as PCR score plots.
All PCs can also be fed into the various machine learning models as a pre-processing step of
dimensionality reduction. PCA has been used in many studies as an important preprocessing step
to manage both imaging and spectral data. For example, PCA was used in an image preprocessing
pipeline by Lu et al. (2017) to aid in acquiring feature maps [111]. While better dimensionality reduction
methods have recently emerged, e.g., linear discriminant analysis (LDA) that can maximize the class
separation, PCA is often preferred over the recent methods as an unbiased dimensionality reduction
method. PCA can be a valuable tool to aid in data interpretation, but one disadvantage of this method
is its ability to be inﬂuenced by outliers in the data [112].
Biosensors 2020, 10, 193
14 of 27
4.1.3. Segmentation
Image segmentation is a process that can organize an image into key areas, such as the object and
its background. This technique is useful in agricultural applications due to its ability to reduce errors or
misclassiﬁcations resulting from noise in the background. Notable methods include clustering-based
approaches such as k-means, which can be useful in identifying stressed areas of a plant in an
image [107]. Disease detection applications may require other techniques such as pixel removal and
masking [113]. For example, Ma et al. (2018) used excess red index (ExR), H from the HSV (hue,
saturation, value) color space, and b* from the L*a*b* color space to discriminate between disease spots
and background in images [114]. An example of segmentation being used to separate plants from the
background of an image is demonstrated in Figure 11 [115].
Biosensors 2020, 10, x FOR PEER REVIEW 
15 of 28 
 
Figure 11. A visualization of the image segmentation process. (a,d) are the original samples of well-
watered and drought-stressed maize plants. (b,e) are preliminary segmentation images acquired 
using RGB pixel values and linear support vector machine (SVM), while (c,f) are the images denoised 
using the mathematical morphology method. Reprinted with permission from [115]. ©2017 Elsevier. 
4.1.4. Feature Extraction 
Feature extraction can be used to express data in a format that is more accessible to machine-
learning algorithms [105]. It consists of reducing redundant data and collecting a set of extracted 
features; for images, available techniques include Global Color Histogram [116], Local Binary 
Patterns [117], and Color Coherence Vector [118]. Features can include color-related characteristics 
such as the variance of color channels and texture features such as contrast and channel homogeneity 
[114]. These acquired features are then analyzed using the classification algorithms. 
4.2. Machine Learning Algorithms for Classification 
Once the necessary preprocessing steps are complete, the data can be fed into a machine learning 
algorithm for classification. These algorithms attempt to find patterns in data to use in assigning 
classes (e.g., stressed vs. healthy) to unlabeled data [29]. Machine learning algorithms can be divided 
into supervised, weakly-supervised, and unsupervised categories, all of which can be used for 
classification [119,120]. The major difference among these algorithms is supervised learning involves 
the use of labeled training data to predict the labels of testing data; weakly-supervised learning can 
use smaller datasets, coarse labels, or misclassified labels for training, and unsupervised learning 
uses only unlabeled data [120]. One of the most prominent examples of unsupervised learning is 
clustering algorithms, which create clusters consisting of samples with similar traits [121].  
Many machine learning algorithms have been used in agriculture to classify data; however, the 
most common methods include artificial neural networks (ANNs) [122] and support vector machines 
(SVMs) [29]. This review will primarily focus on SVM, ANN, and deep learning methods; however, 
Figure 11. A visualization of the image segmentation process. (a,d) are the original samples of
well-watered and drought-stressed maize plants. (b,e) are preliminary segmentation images acquired
using RGB pixel values and linear support vector machine (SVM), while (c,f) are the images denoised
using the mathematical morphology method. Reprinted with permission from [115]. ©2017 Elsevier.
4.1.4. Feature Extraction
Feature extraction can be used to express data in a format that is more accessible to machine-learning
algorithms [105]. It consists of reducing redundant data and collecting a set of extracted features;
for images, available techniques include Global Color Histogram [116], Local Binary Patterns [117],
and Color Coherence Vector [118]. Features can include color-related characteristics such as the variance
of color channels and texture features such as contrast and channel homogeneity [114]. These acquired
features are then analyzed using the classiﬁcation algorithms.
4.2. Machine Learning Algorithms for Classiﬁcation
Once the necessary preprocessing steps are complete, the data can be fed into a machine learning
algorithm for classiﬁcation. These algorithms attempt to ﬁnd patterns in data to use in assigning
classes (e.g., stressed vs.
healthy) to unlabeled data [29].
Machine learning algorithms can be
divided into supervised, weakly-supervised, and unsupervised categories, all of which can be used for
classiﬁcation [119,120]. The major diﬀerence among these algorithms is supervised learning involves
the use of labeled training data to predict the labels of testing data; weakly-supervised learning can
use smaller datasets, coarse labels, or misclassiﬁed labels for training, and unsupervised learning uses
Biosensors 2020, 10, 193
15 of 27
only unlabeled data [120]. One of the most prominent examples of unsupervised learning is clustering
algorithms, which create clusters consisting of samples with similar traits [121].
Many machine learning algorithms have been used in agriculture to classify data; however,
the most common methods include artiﬁcial neural networks (ANNs) [122] and support vector
machines (SVMs) [29]. This review will primarily focus on SVM, ANN, and deep learning methods;
however, other algorithms such as random forest [123] have been successfully used for plant stress
identiﬁcation applications.
Machine learning techniques can be very robust classiﬁers, yet one drawback is their tendency
to overﬁt the data (especially when the data set is small), which results in incorrect classiﬁcations.
In addition, machine learning can be time-consuming, especially when large image ﬁles are involved.
Both issues, however, can be mitigated using some of the following processes. One method that has been
used to mitigate overﬁtting errors in image classiﬁcation is data augmentation, which consists of slightly
distorting the images using techniques such as rotation [124], mirroring [125], and color variation [126].
If data augmentation and image manipulation are deemed necessary in the data processing pathway,
they must be performed before running the data through the classiﬁcation algorithm.
4.2.1. Support Vector Machine (SVM)
SVM is a supervised learning method, i.e., requiring training data set to identify classes of
unknown data. Let us assume a simple case that most (e.g., >90%) of the training data set can be
reduced to two dimensions through dimensionality reduction methods such as PCA. These data can be
plotted on a 2D coordinate system (i.e., PCA score plot). With known classes (e.g., stressed vs. healthy)
of the data, it is possible to draw a line that can best separate all of the data into two classes; this line is
called a decision boundary (demonstrated in Figure 12 [127]). The procedure can also be used for three
or more dimensions of data, where the boundary becomes a plane for three dimensions or a hyperplane
for dimensions higher than three. It may be necessary to use about 10 principal components from PCA,
but this dimension number is still substantially small compared to the dimensions of the raw data,
which could range from hundreds (for spectra) to millions (for images). Testing data is fed into the
same data processing pathway as the training data, and the decision boundary formed during training
determines the class of testing data. While SVM is inherently a linear method, non-linear separation
is also possible using non-linear kernels. Classiﬁcation into multiple classes is also possible using
multiple decision boundaries.
Biosensors 2020, 10, x FOR PEER REVIEW 
16 of 28 
variation [126]. If data augmentation and image manipulation are deemed necessary in the data 
processing pathway, they must be performed before running the data through the classification 
algorithm. 
4.2.1. Support Vector Machine (SVM) 
SVM is a supervised learning method, i.e., requiring training data set to identify classes of 
unknown data. Let us assume a simple case that most (e.g., >90%) of the training data set can be 
reduced to two dimensions through dimensionality reduction methods such as PCA. These data can 
be plotted on a 2D coordinate system (i.e., PCA score plot). With known classes (e.g., stressed vs. 
healthy) of the data, it is possible to draw a line that can best separate all of the data into two classes; 
this line is called a decision boundary (demonstrated in Figure 12 [127]). The procedure can also be 
used for three or more dimensions of data, where the boundary becomes a plane for three dimensions 
or a hyperplane for dimensions higher than three. It may be necessary to use about 10 principal 
components from PCA, but this dimension number is still substantially small compared to the 
dimensions of the raw data, which could range from hundreds (for spectra) to millions (for images). 
Testing data is fed into the same data processing pathway as the training data, and the decision 
boundary formed during training determines the class of testing data. While SVM is inherently a 
linear method, non-linear separation is also possible using non-linear kernels. Classification into 
multiple classes is also possible using multiple decision boundaries. 
 
Figure 12. A decision boundary is established (a line for 2D data) for the data reduced in two 
dimensions, e.g., through PCA. Many boundaries can be drawn, but the best separation will need to 
be determined. For 3D, the decision boundary is a plane. For dimensions higher than three, the 
decision boundary is a hyperplane. Reprinted with permission from [127]. ©2020 Elsevier. 
SVMs are one of the most common machine learning algorithms used in agriculture 
applications. They have been successfully used in many studies relating to plant stress detection, 
such as identifying Huanglongbing (HLB; also known as citrus greening disease) and nutrient 
stresses in citrus leaves [100], as well as rating the severity of iron deficiency chlorosis in soybeans 
[11]. A similar method, relevance vector machine (RVM), was used to identify stripe rust and 
powdery mildew in wheat. [63].  
While SVM is simple in principle and works quite well with very high dimensions of data (such 
as spectra and images), it does not explain how close or far away errors are from the true class 
Figure 12. A decision boundary is established (a line for 2D data) for the data reduced in two dimensions,
e.g., through PCA. Many boundaries can be drawn, but the best separation will need to be determined.
For 3D, the decision boundary is a plane. For dimensions higher than three, the decision boundary is a
hyperplane. Reprinted with permission from [127]. ©2020 Elsevier.
SVMs are one of the most common machine learning algorithms used in agriculture applications.
They have been successfully used in many studies relating to plant stress detection, such as identifying
Biosensors 2020, 10, 193
16 of 27
Huanglongbing (HLB; also known as citrus greening disease) and nutrient stresses in citrus leaves [100],
as well as rating the severity of iron deﬁciency chlorosis in soybeans [11]. A similar method, relevance
vector machine (RVM), was used to identify stripe rust and powdery mildew in wheat [63].
While SVM is simple in principle and works quite well with very high dimensions of data
(such as spectra and images), it does not explain how close or far away errors are from the true class
identiﬁcation. This is particularly problematic when the data set is noisy, where a distinct decision
boundary cannot be determined clearly.
4.2.2. Artiﬁcial Neural Network (ANN)
An artiﬁcial neural network (ANN) is a machine learning model that mimics the function of a
biological neural network [128]. The basic architecture consists of artiﬁcial neurons that process several
inputs weighted according to their importance and produce a corresponding output [124].
ANNs have been used successfully in many studies for the identiﬁcation and classiﬁcation
of various plant stresses. These include detecting powdery mildew and soft rot in zucchini [129],
classifying biotic stresses in pomegranate [106], detecting orange spotting disease in oil palm [130],
and identifying crown rot in wheat [131]. A major advantage of ANNs is their ability to be used
without specialized knowledge on the data and its interpretation; however, disadvantages include
being prone to overﬁtting and requiring greater amounts of computational resources [132]. Several
types of ANNs exist, some of which are outlined in Figure 13 [133].
Biosensors 2020, 10, x FOR PEER REVIEW 
17 of 28 
identification. This is particularly problematic when the data set is noisy, where a distinct decision 
boundary cannot be determined clearly. 
4.2.2. Artificial Neural Network (ANN)  
An artificial neural network (ANN) is a machine learning model that mimics the function of a 
biological neural network [128]. The basic architecture consists of artificial neurons that process 
several inputs weighted according to their importance and produce a corresponding output [124].  
ANNs have been used successfully in many studies for the identification and classification of 
various plant stresses. These include detecting powdery mildew and soft rot in zucchini [129], 
classifying biotic stresses in pomegranate [106], detecting orange spotting disease in oil palm [130], 
and identifying crown rot in wheat [131]. A major advantage of ANNs is their ability to be used 
without specialized knowledge on the data and its interpretation; however, disadvantages include 
being prone to overfitting and requiring greater amounts of computational resources [132]. Several 
types of ANNs exist, some of which are outlined in Figure 13 [133]. 
 
Figure 13. Structures of four types of ANNS: (a) multilayer perceptron, where xi represents inputs, Oi 
represents output neurons, hi represents hidden layer neurons, and wi represents the weights between 
neurons; (b) wavelet, where Ψ represents the wavelet function, t represents the translation coefficient, 
λ represents the dilation coefficient; (c) radial basis function, where Ri represents the radial basis 
function; and (d) Elman, where ui represents components in the hidden and undertake layers. 
Reprinted with permission from [133]. ©2019 Elsevier. 
4.2.3. Deep Learning  
Deep learning is a subcategory of machine learning that utilizes ANNs and consists of more 
advanced models with multiple layers (“deep” indicates the depth of layers). A common model used 
in agriculture is the convolutional neural network (CNN), which performs convolutions on data for 
image classification [134]. CNNs and their variations have been frequently used in plant stress studies 
that utilize machine learning, such as detecting the breaking virus in tulips [135], identifying potato 
Figure 13. Structures of four types of ANNS: (a) multilayer perceptron, where xi represents inputs,
Oi represents output neurons, hi represents hidden layer neurons, and wi represents the weights
between neurons; (b) wavelet, where Ψ represents the wavelet function, t represents the translation
coeﬃcient, λ represents the dilation coeﬃcient; (c) radial basis function, where Ri represents the radial
basis function; and (d) Elman, where ui represents components in the hidden and undertake layers.
Reprinted with permission from [133]. ©2019 Elsevier.
Biosensors 2020, 10, 193
17 of 27
4.2.3. Deep Learning
Deep learning is a subcategory of machine learning that utilizes ANNs and consists of more
advanced models with multiple layers (“deep” indicates the depth of layers). A common model used
in agriculture is the convolutional neural network (CNN), which performs convolutions on data
for image classiﬁcation [134]. CNNs and their variations have been frequently used in plant stress
studies that utilize machine learning, such as detecting the breaking virus in tulips [135], identifying
potato Y virus [136], gauging the severity of apple black spot [119], classifying biotic stresses on
cucumber leaves [114], and rating the severity of biotic stresses on coﬀee leaves [126]. Pretrained CNN
models such as GoogleLeNet [137], AlexNet [114], ResNet [138], and VGG [139] have also been used.
For instances where an extensive array of training data is required, many studies utilize databases
such as PlantVillage [140] and the Wheat Disease Database [141], both of which have been used in
conjunction with deep learning models.
One advantage of deep learning techniques is that they work well with raw data [142],
which therefore cuts down on time spent in data preprocessing (color space conversion, dimensionality
reduction, segmentation, and feature extraction). In addition, feature extraction is sometimes performed
in the deep learning model without the need for an outside processing step [143]. However, a major
disadvantage is a need for large datasets (often numbering in the thousands [139,144]) to produce
accurate results [111].
Biosensors 2020, 10, 193
18 of 27
Table 3. Machine Learning Algorithms Used for Plant Stress Detection.
Purpose
Data Type
Plant
Stress
Algorithm
Accuracy
References
Identiﬁcation
Fluorescence imaging
Zucchini
Soft rot
ANN
100%
[129]
SVM
90%
Logistic regression analysis
60%
Powdery mildew
ANN
71.2%
SVM
48.1%
Logistic regression analysis
73.1%
Identiﬁcation
Hyperspectral
Oil palm
Orange spotting disease
Multilayer perceptron neural
network
-
[130]
Identiﬁcation
Hyperspectral
Wheat
Crown rot
ANN
74.14%
[131]
Logistic regression
53.45%
K nearest-neighbors
58.62%
Decision trees
56.90%
Extreme random forest
58.62%
SVM
50%
Identiﬁcation
RGB images
Tulip
Tulip breaking virus
Faster R-CNN
86% *
[135]
Identiﬁcation
Hyperspectral
Potato
Potato virus Y
Fully convolutional neural
network
92% *
[136]
Classiﬁcation
RGB images from
smartphone
Wheat
Powdery mildew, stripe rust
RVM
88.89%
[63]
SVM
77.78%
Classiﬁcation
RGB images from
database
Pomegranate
Fruit spot, bacterial blight,
fruit rot, leaf spot
Multilayer perceptron
90%
[106]
Classiﬁcation
RGB images
Cucumber
Anthracnose, downy mildew,
powdery mildew, target leaf
spots
Deep CNN
92.2%
[114]
SVM
81.9%
AlexNet
92.6%
Random Forest
84.8%
Classiﬁcation
Hyperspectral
Sugar beet
Cercospora leaf spot, sugar
beet rust, powdery mildew
SVM
86.42%
[29]
Classiﬁcation
RGB images from
database
Wheat
Powdery mildew, smut, black
chaﬀ, stripe rust, leaf blotch,
leaf rust
VGG-CNN-S
73%
[141]
VGG-FCN-S
95.12%
VGG-CNN-VD16
93.27%
VGG-FCN-VD16
97.95%
Quantiﬁcation
Hyperspectral
Barley
Drought stress
Ordinal SVM
67.9%
[33]
Biosensors 2020, 10, 193
19 of 27
Table 3. Cont.
Purpose
Data Type
Plant
Stress
Algorithm
Accuracy
References
Quantiﬁcation
RGB images from
digital camera
Soybean
Iron deﬁciency chlorosis
Hierarchical SVM-SVM
99.2%
[11]
Hierarchical LDA-SVM
98.3%
Decision tree
99.7%
Quadratic discriminant
analysis
98.5%
Naïve Bayes
98.4%
K-Nearest-Neighbors
99.5%
Random forest
99.1%
Gaussian mixture model
99.4%
Linear discriminant analysis
(LDA)
98.5%
SVM
97.3%
Quantiﬁcation
RGB images from
database
Apple
Black rot
VGG16
90.4%
[119]
ResNet50
80%
Quantiﬁcation
RGB images from
smartphone
Coﬀee
Leaf miner, rust, brown leaf
spot, cercospora leaf spot
AlexNet
84.13%
[126]
GoogleLeNet
82.94%
VGG16
86.51%
ResNet50
84.13%
MobileNetV2
84.52%
* Indicates a recall value, not an accuracy value.
Biosensors 2020, 10, 193
20 of 27
5. Concluding Remarks
A variety of optical sensing methods and machine learning techniques have been used to recognize
both biotic and abiotic stresses, especially plant diseases. One observation is that machine learning is
commonly used to process imaging data (especially RGB images), but spectroscopic methods more
frequently utilize traditional statistical methods. In the future, machine learning methods could be
further incorporated into spectroscopic data analysis pathways.
Currently, many of the studies mentioned are producing detection results that are speciﬁc to just
a few plants. Leaf reﬂectance properties can diﬀer greatly between plant species, so it is diﬃcult to
produce results that are generalizable to several plants in diﬀerent circumstances. The development of
more generalized (rather than species-speciﬁc) results is likely a future direction in plant stress detection;
however, more research is needed to ﬁnd features and parameters that can lead to such results. Methods
such as smartphone imaging, thermography, and ﬂuorescence imaging have the potential to be scaled
up to larger-scaled systems to analyze plant canopies in open ﬁelds or controlled environments.
Imaging devices (especially multispectral/RGB sensors) have improved in quality and become
more compact over recent years. Optical resolutions of recent smartphones’ cameras are comparable
to most standalone digital cameras, eﬀectively eliminating the bulk of digital camera markets and
only leaving the high-end markets. Sensitivity has also improved dramatically; the white LED ﬂash
is rarely necessary with recent smartphones. Computing power and memory have also improved
signiﬁcantly for recent smartphones, which has enabled on-board image processing to become a
reality. Cloud storage and computing for remote ﬁle management and execution also complements the
smartphone’s computing power and memory capacity, allowing for more advanced data processing
operations to be performed. Optical zooms (which magnify images mechanically using optical lenses)
are possible with recent smartphones, although limited at 2x − 4x at the time of writing. Furthermore,
smartphones have the data processing power needed to run machine learning algorithms and thus can
provide a rapid, on-site assessment of plant stresses.
The discrimination of speciﬁc stresses (especially stresses from speciﬁc nutrients) remains a
challenge. Discrimination may become more feasible with improvements in the sensitivity of optical
devices; however, this increased sensitivity may result in data being more prone to noise from the
surrounding environment. Environmental noise could be overcome by the use of image segmentation
and machine learning models to help distinguish between noise and the targeted characteristic.
Many improvements are being made with imaging technology and data processing techniques that
will enable the development of robust, portable devices for plant stress detection. Although research is
still needed in many areas such as the fusion of data from multiple sensors and discrimination between
speciﬁc biotic and abiotic stresses, current developments have great potential to be deployed as useful
tools for the agriculture industry.
Author Contributions: Conceptualization, A.V.Z. and J.-Y.Y.; literature survey and data collection; A.V.Z.;
literature analysis: A.V.Z.; writing—original draft preparation, A.V.Z.; writing—review and editing, J.-Y.Y.;
supervision and project administration, J.-Y.Y. All authors have read and agreed to the published version of
the manuscript.
Funding: This research received no external funding.
Acknowledgments: We would like to thank the reviewers for their detailed comments that helped us improve
the manuscript.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
Biosensors 2020, 10, 193
21 of 27
References
1.
The Future of Food and Agriculture: Trends and Challenges; Food and Agriculture Organization of the United
Nations: Rome, Italy, 2017; ISBN 978-92-5-109551-5.
2.
Savary, S.; Bregaglio, S.; Willocquet, L.; Gustafson, D.; Mason D’Croz, D.; Sparks, A.; Castilla, N.; Djurle, A.;
Allinne, C.; Sharma, M.; et al. Crop health and its global impacts on the components of food security.
Food Secur. 2017, 9, 311–327. [CrossRef]
3.
Savary, S.; Willocquet, L.; Pethybridge, S.J.; Esker, P.; McRoberts, N.; Nelson, A. The global burden of
pathogens and pests on major food crops. Nat. Ecol. Evol. 2019, 3, 430–439. [CrossRef] [PubMed]
4.
McDonald, B.A.; Stukenbrock, E.H. Rapid emergence of pathogens in agro-ecosystems: Global threats to
agricultural sustainability and food security. Philos. Trans. R. Soc. B Biol. Sci. 2016, 371, 20160026. [CrossRef]
[PubMed]
5.
Shaw, M.W.; Osborne, T.M. Geographic distribution of plant pathogens in response to climate change:
Pathogen distributions and climate. Plant Pathol. 2011, 60, 31–43. [CrossRef]
6.
Yeo, A. Predicting the interaction between the eﬀects of salinity and climate change on crop plants. Sci. Hortic.
1998, 78, 159–174. [CrossRef]
7.
Sui, X.; Zheng, Y.; Li, R.; Padmanabhan, C.; Tian, T.; Groth-Helms, D.; Keinath, A.P.; Fei, Z.; Wu, Z.;
Ling, K.-S. Molecular and Biological Characterization of Tomato mottle mosaic virus and Development of
RT-PCR Detection. Plant Dis. 2017, 101, 704–711. [CrossRef]
8.
Cimmino, A.; Iannaccone, M.; Petriccione, M.; Masi, M.; Evidente, M.; Capparelli, R.; Scortichini, M.; Evidente, A.
An ELISA method to identify the phytotoxic Pseudomonas syringae pv. actinidiae exopolysaccharides: A tool
for rapid immunochemical detection of kiwifruit bacterial canker. Phytochem. Lett. 2017, 19, 136–140. [CrossRef]
9.
Andolﬁ, A.; Cimmino, A.; Evidente, A.; Iannaccone, M.; Capparelli, R.; Mugnai, L.; Surico, G. A New Flow
Cytometry Technique to Identify Phaeomoniella chlamydospora Exopolysaccharides and Study Mechanisms of
Esca Grapevine Foliar Symptoms. Plant Dis. 2009, 93, 680–684. [CrossRef]
10.
McKenzie, D.B.; Hossner, L.R.; Newton, R.J. Sorghum cultivar evaluation for iron chlorosis resistance by
visual scores. J. Plant Nutr. 1984, 7, 677–685. [CrossRef]
11.
Naik, H.S.; Zhang, J.; Lofquist, A.; Assefa, T.; Sarkar, S.; Ackerman, D.; Singh, A.; Singh, A.K.;
Ganapathysubramanian, B. A real-time phenotyping framework using machine learning for plant stress
severity rating in soybean. Plant Methods 2017, 13, 23. [CrossRef]
12.
Zhu, J.; He, W.; Yao, J.; Yu, Q.; Xu, C.; Huang, H.; Mhae, B.; Jandug, C. Spectral Reﬂectance Characteristics
and Chlorophyll Content Estimation Model of Quercus aquifolioides Leaves at Diﬀerent Altitudes in Sejila
Mountain. Appl. Sci. 2020, 10, 3636. [CrossRef]
13.
Lichtenthaler, H.K.; Gitelson, A.; Lang, M. Non-Destructive Determination of Chlorophyll Content of Leaves
of a Green and an Aurea Mutant of Tobacco by Reﬂectance Measurements. J. Plant Physiol. 1996, 148, 483–493.
[CrossRef]
14.
Gitelson, A.A.; Zur, Y.; Chivkunova, O.B.; Merzlyak, M.N. Assessing Carotenoid Content in Plant Leaves
with Reﬂectance Spectroscopy. Photochem. Photobiol. 2002, 75, 272–281. [CrossRef]
15.
Vilfan, N.; Van der Tol, C.; Yang, P.; Wyber, R.; Malenovský, Z.; Robinson, S.A.; Verhoef, W. Extending
Fluspect to simulate xanthophyll driven leaf reﬂectance dynamics. Remote Sens. Environ. 2018, 211, 345–356.
[CrossRef]
16.
Bone, R.A.; Lee, D.W.; Norman, J.M. Epidermal cells functioning as lenses in leaves of tropical rain-forest
shade plants. Appl. Opt. 1985, 24, 1408. [CrossRef] [PubMed]
17.
Grant, L.; Daughtry, C.S.T.; Vanderbilt, V.C. Polarized and specular reﬂectance variation with leaf surface
features. Physiol. Plant. 1993, 88, 1–9. [CrossRef]
18.
Ehleringer, J.; Bjorkman, O.; Mooney, H.A. Leaf Pubescence: Eﬀects on Absorptance and Photosynthesis in a
Desert Shrub. Science 1976, 192, 376–377. [CrossRef]
19.
Bornman, J.F.; Vogelmann, T.C. Eﬀect of UV-B Radiation on Leaf Optical Properties Measured with Fibre
Optics. J. Exp. Bot. 1991, 42, 547–554. [CrossRef]
20.
Peñuelas, J.; Filella, I.; Biel, C.; Serrano, L.; Savé, R. The reﬂectance at the 950–970 nm region as an indicator
of plant water status. Int. J. Remote Sens. 1993, 14, 1887–1905. [CrossRef]
21.
Liew, O.; Chong, P.; Li, B.; Asundi, A. Signature Optical Cues: Emerging Technologies for Monitoring Plant
Health. Sensors 2008, 8, 3205–3239. [CrossRef]
Biosensors 2020, 10, 193
22 of 27
22.
Sawinski, K.; Mersmann, S.; Robatzek, S.; Böhmer, M. Guarding the Green: Pathways to Stomatal Immunity.
Mol. Plant-Microbe Interact. 2013, 26, 626–632. [CrossRef] [PubMed]
23.
Fourty, T.; Baret, F.; Jacquemoud, S.; Schmuck, G.; Verdebout, J. Leaf optical properties with explicit
description of its biochemical composition: Direct and inverse problems. Remote Sens. Environ. 1996,
56, 104–117. [CrossRef]
24.
de Lima, R.B.; dos Santos, T.B.; Vieira, L.G.E.; de Lourdes Lúcio Ferrarese, M.; Ferrarese-Filho, O.; Donatti, L.;
Boeger, M.R.T.; de Oliveira Petkowicz, C.L. Salt stress alters the cell wall polysaccharides and anatomy of
coﬀee (Coﬀea arabica L.) leaf cells. Carbohydr. Polym. 2014, 112, 686–694. [CrossRef] [PubMed]
25.
Allen, W.A.; Richardson, A.J. Interaction of Light with a Plant Canopy. J. Opt. Soc. Am. 1968, 58, 1023.
[CrossRef]
26.
Carter, G.A. Responses of Leaf Spectral Reﬂectance to Plant Stress. Am. J. Bot. 1993, 80, 239–243. [CrossRef]
27.
Rosique, F.; Navarro, P.J.; Fernández, C.; Padilla, A. A Systematic Review of Perception System and Simulators
for Autonomous Vehicles Research. Sensors 2019, 19, 648. [CrossRef]
28.
Pandey, P.; Ge, Y.; Stoerger, V.; Schnable, J.C. High Throughput In vivo Analysis of Plant Leaf Chemical
Properties Using Hyperspectral Imaging. Front. Plant Sci. 2017, 8, 1348. [CrossRef]
29.
Rumpf, T.; Mahlein, A.-K.; Steiner, U.; Oerke, E.-C.; Dehne, H.-W.; Plümer, L. Early detection and classiﬁcation
of plant diseases with Support Vector Machines based on hyperspectral reﬂectance. Comput. Electron. Agric.
2010, 74, 91–99. [CrossRef]
30.
Yang, W.; Yang, C.; Hao, Z.; Xie, C.; Li, M. Diagnosis of Plant Cold Damage Based on Hyperspectral Imaging
and Convolutional Neural Network. IEEE Access 2019, 7, 118239–118248. [CrossRef]
31.
Zovko, M.; Žibrat, U.; Knapiˇc, M.; Kovaˇci´c, M.B.; Romi´c, D. Hyperspectral remote sensing of grapevine
drought stress. Precis. Agric. 2019, 20, 335–347. [CrossRef]
32.
Asaari, M.S.M.; Mertens, S.; Dhondt, S.; Inzé, D.; Wuyts, N.; Scheunders, P. Analysis of hyperspectral images
for detection of drought stress and recovery in maize plants in a high-throughput phenotyping platform.
Comput. Electron. Agric. 2019, 162, 749–758. [CrossRef]
33.
Behmann, J.; Steinrücken, J.; Plümer, L. Detection of early plant stress responses in hyperspectral images.
ISPRS J. Photogramm. Remote Sens. 2014, 93, 98–111. [CrossRef]
34.
Zhang, J.; Yuan, L.; Pu, R.; Loraamm, R.W.; Yang, G.; Wang, J. Comparison between wavelet spectral features
and conventional spectral features in detecting yellow rust for winter wheat. Comput. Electron. Agric. 2014,
100, 79–87. [CrossRef]
35.
Cao, X.; Luo, Y.; Zhou, Y.; Duan, X.; Cheng, D. Detection of powdery mildew in two winter wheat cultivars
using canopy hyperspectral reﬂectance. Crop Prot. 2013, 45, 124–131. [CrossRef]
36.
Feng, X.; Zhan, Y.; Wang, Q.; Yang, X.; Yu, C.; Wang, H.; Tang, Z.; Jiang, D.; Peng, C.; He, Y. Hyperspectral
imaging combined with machine learning as a tool to obtain high-throughput plant salt-stress phenotyping.
Plant J. 2020, 101, 1448–1461. [CrossRef] [PubMed]
37.
Ochoa, D.; Cevallos, J.; Vargas, G.; Criollo, R.; Romero, D.; Castro, R.; Bayona, O. Hyperspectral Imaging
System for Disease Scanning on Banana Plants. In Proceedings of the Sensing for Agriculture and Food
Quality and Safety VIII, Baltimore, MD, USA, 20–21 April 2016. [CrossRef]
38.
Lowe, A.; Harrison, N.; French, A.P. Hyperspectral image analysis techniques for the detection and
classiﬁcation of the early onset of plant disease and stress. Plant Methods 2017, 13, 80. [CrossRef]
39.
Brugger, A.; Behmann, J.; Paulus, S.; Luigs, H.-G.; Kuska, M.T.; Schramowski, P.; Kersting, K.; Steiner, U.;
Mahlein, A.-K. Extending Hyperspectral Imaging for Plant Phenotyping to the UV-Range. Remote Sens. 2019,
11, 1401. [CrossRef]
40.
Ryu, J.-H.; Jeong, H.; Cho, J. Performances of Vegetation Indices on Paddy Rice at Elevated Air Temperature,
Heat Stress, and Herbicide Damage. Remote Sens. 2020, 12, 2654. [CrossRef]
41.
Liu, Q.; Zhang, F.; Chen, J.; Li, Y. Water stress altered photosynthesis-vegetation index relationships for
winter wheat. Agron. J. 2020, 112, 2944–2955. [CrossRef]
42.
Ihuoma, S.O.; Madramootoo, C.A. Sensitivity of spectral vegetation indices for monitoring water stress in
tomato plants. Comput. Electron. Agric. 2019, 163, 104860. [CrossRef]
43.
Meng, R.; Lv, Z.; Yan, J.; Chen, G.; Zhao, F.; Zeng, L.; Xu, B. Development of Spectral Disease Indices for
Southern Corn Rust Detection and Severity Classiﬁcation. Remote Sens. 2020, 12, 3233. [CrossRef]
Biosensors 2020, 10, 193
23 of 27
44.
Huang, W.; Guan, Q.; Luo, J.; Zhang, J.; Zhao, J.; Liang, D.; Huang, L.; Zhang, D. New Optimized Spectral
Indices for Identifying and Monitoring Winter Wheat Diseases. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens.
2014, 7, 2516–2524. [CrossRef]
45.
Mahlein, A.-K.; Rumpf, T.; Welke, P.; Dehne, H.-W.; Plümer, L.; Steiner, U.; Oerke, E.-C. Development
of spectral indices for detecting and identifying plant diseases. Remote Sens. Environ. 2013, 128, 21–30.
[CrossRef]
46.
Ashourloo, D.; Mobasheri, M.; Huete, A. Developing Two Spectral Disease Indices for Detection of Wheat
Leaf Rust (Pucciniatriticina). Remote Sens. 2014, 6, 4723–4740. [CrossRef]
47.
Heim, R.H.J.; Wright, I.J.; Allen, A.P.; Geedicke, I.; Oldeland, J. Developing a spectral disease index for myrtle
rust (Austropuccinia psidii). Plant Pathol. 2019, 68, 738–745. [CrossRef]
48.
Rouse, J.W.; Haas, R.H.; Schell, J.A.; Deering, D.W. Monitoring Vegetation Systems in the Great Plains with
ERTS. NASA Goddard Space Flight Cent. 3d ERTS-1 Symp. 1974, 1, 9.
49.
Penuelas, J.; Pinol, J.; Ogaya, R.; Filella, I. Estimation of plant water concentration by the reﬂectance Water
Index WI (R900/R970). Int. J. Remote Sens. 1997, 18, 2869–2875. [CrossRef]
50.
Gamon, J.A.; Peñuelas, J.; Field, C.B. A narrow-waveband spectral index that tracks diurnal changes in
photosynthetic eﬃciency. Remote Sens. Environ. 1992, 41, 35–44. [CrossRef]
51.
Balasundram, S.K.; Golhani, K.; Shamshiri, R.R.; Vadamalai, G. Precision Agriculture Technologies for
Management of Plant Diseases. In Plant Disease Management Strategies for Sustainable Agriculture through
Traditional and Modern Approaches; Ul Haq, I., Ijaz, S., Eds.; Sustainability in Plant and Crop Protection;
Springer: Cham, Switzerland, 2020; Volume 13, pp. 259–278, ISBN 978-3-030-35954-6.
52.
Behmann, J.; Acebron, K.; Emin, D.; Bennertz, S.; Matsubara, S.; Thomas, S.; Bohnenkamp, D.; Kuska, M.;
Jussila, J.; Salo, H.; et al. Specim IQ: Evaluation of a New, Miniaturized Handheld Hyperspectral Camera
and Its Application for Plant Phenotyping and Disease Detection. Sensors 2018, 18, 441. [CrossRef]
53.
Chen, T.; Zhang, J.; Chen, Y.; Wan, S.; Zhang, L. Detection of peanut leaf spots disease using canopy
hyperspectral reﬂectance. Comput. Electron. Agric. 2019, 156, 677–683. [CrossRef]
54.
Veys, C.; Chatziavgerinos, F.; AlSuwaidi, A.; Hibbert, J.; Hansen, M.; Bernotas, G.; Smith, M.; Yin, H.; Rolfe, S.;
Grieve, B. Multispectral imaging for presymptomatic analysis of light leaf spot in oilseed rape. Plant Methods
2019, 15, 4. [CrossRef]
55.
Fahrentrapp, J. Detection of Gray Mold Leaf Infections Prior to Visual Symptom Appearance Using a
Five-Band Multispectral Sensor. Front. Plant Sci. 2019, 10, 628. [CrossRef] [PubMed]
56.
Cardim Ferreira Lima, M.; Krus, A.; Valero, C.; Barrientos, A.; del Cerro, J.; Roldán-Gómez, J.J. Monitoring
Plant Status and Fertilization Strategy through Multispectral Images. Sensors 2020, 20, 435. [CrossRef]
[PubMed]
57.
Kiti´c, G.; Tagarakis, A.; Cselyuszka, N.; Pani´c, M.; Birgermajer, S.; Sakulski, D.; Matovi´c, J. A new low-cost
portable multispectral optical device for precise plant status assessment. Comput. Electron. Agric. 2019,
162, 300–308. [CrossRef]
58.
Veys, C.; Hibbert, J.; Davis, P.; Grieve, B. An ultra-low-cost active multispectral crop diagnostics device.
In Proceedings of the 2017 IEEE Sensors, Glasgow, UK, 29 October–1 November 2017; pp. 1–3.
59.
Habibullah, M.; Mohebian, M.R.; Soolanayakanahally, R.; Bahar, A.N.; Vail, S.; Wahid, K.A.; Dinh, A.
Low-Cost Multispectral Sensor Array for Determining Leaf Nitrogen Status.
Nitrogen 2020, 1, 67–80.
[CrossRef]
60.
Chung, S.; Breshears, L.E.; Yoon, J.-Y. Smartphone near infrared monitoring of plant stress. Comput. Electron.
Agric. 2018, 154, 93–98. [CrossRef]
61.
Watchareeruetai, U.; Noinongyao, P.; Wattanapaiboonsuk, C.; Khantiviriya, P.; Duangsrisai, S. Identiﬁcation of
Plant Nutrient Deﬁciencies Using Convolutional Neural Networks; IEEE: Krabi, Thailand, 2018; pp. 1–4.
62.
Islam, M.; Anh, D.; Wahid, K.; Bhowmik, P. Detection of potato diseases using image segmentation and
multiclass support vector machine. In Proceedings of the 2017 IEEE 30th Canadian Conference on Electrical
and Computer Engineering (CCECE), Windsor, ON, Canada, 30 April–3 May 2017; pp. 1–4.
63.
Xie, X.; Zhang, X.; He, B.; Liang, D.; Zhang, D.; Huang, L. A System for Diagnosis of Wheat Leaf Diseases
Based on Android Smartphone. In Proceedings of the International Symposium on Optical Measurement
Technology and Instrumentation, Beijing, China, 9–11 May 2016. [CrossRef]
64.
Mattupalli, C.; Moﬀet, C.; Shah, K.; Young, C. Supervised Classiﬁcation of RGB Aerial Imagery to Evaluate
the Impact of a Root Rot Disease. Remote Sens. 2018, 10, 917. [CrossRef]
Biosensors 2020, 10, 193
24 of 27
65.
Tao, M.; Ma, X.; Huang, X.; Liu, C.; Deng, R.; Liang, K.; Qi, L. Smartphone-based detection of leaf color levels
in rice plants. Comput. Electron. Agric. 2020, 173, 105431. [CrossRef]
66.
Mastrodimos, N.; Lentzou, D.; Templalexis, C.; Tsitsigiannis, D.I.; Xanthopoulos, G. Development of
thermography methodology for early diagnosis of fungal infection in table grapes: The case of Aspergillus
carbonarius. Comput. Electron. Agric. 2019, 165, 104972. [CrossRef]
67.
Jones, H.G. Use of infrared thermometry for estimation of stomatal conductance as a possible aid to irrigation
scheduling. Agric. For. Meteorol. 1999, 95, 139–149. [CrossRef]
68.
Casari, R.; Paiva, D.; Silva, V.; Ferreira, T.; Souza, J.M.; Oliveira, N.; Kobayashi, A.; Molinari, H.; Santos, T.;
Gomide, R.; et al. Using Thermography to Conﬁrm Genotypic Variation for Drought Response in Maize.
Int. J. Mol. Sci. 2019, 20, 2273. [CrossRef] [PubMed]
69.
Oerke, E.-C.; Fröhling, P.; Steiner, U. Thermographic assessment of scab disease on apple leaves. Precis. Agric.
2011, 12, 699–715. [CrossRef]
70.
Khorsandi, A.; Hemmat, A.; Mireei, S.A.; Amirfattahi, R.; Ehsanzadeh, P. Plant temperature-based indices
using infrared thermography for detecting water status in sesame under greenhouse conditions. Agric. Water
Manag. 2018, 204, 222–233. [CrossRef]
71.
Petrie, P.R.; Wang, Y.; Liu, S.; Lam, S.; Whitty, M.A.; Skewes, M.A. The accuracy and utility of a low
cost thermal camera and smartphone-based system to assess grapevine water status. Biosyst. Eng. 2019,
179, 126–139. [CrossRef]
72.
Lang, M.; Siﬀel, P.; Braunová, Z.; Lichtenthaler, H.K. Investigations of the Blue-green Fluorescence Emission
of Plant Leaves. Bot. Acta 1992, 105, 435–440. [CrossRef]
73.
Krause, G.H.; Weis, E. Chlorophyll ﬂuorescence as a tool in plant physiology: II. Interpretation of ﬂuorescence
signals. Photosynth. Res. 1984, 5, 139–157. [CrossRef]
74.
Swarbrick, P.J.; Schulze-Lefert, P.; Scholes, J.D. Metabolic consequences of susceptibility and resistance
(race-speciﬁc and broad-spectrum) in barley leaves challenged with powdery mildew. Plant Cell Environ.
2006, 29, 1061–1076. [CrossRef]
75.
Lawson, T.; Vialet-Chabrand, S. Chlorophyll Fluorescence Imaging.
In Photosynthesis; Covshoﬀ, S.,
Ed.; Methods in Molecular Biology; Springer: New York, NY, USA, 2018; Volume 1770, pp. 121–140.
ISBN 978-1-4939-7785-7.
76.
Brooks, M.D.; Niyogi, K.K. Use of a Pulse-Amplitude Modulated Chlorophyll Fluorometer to Study the
Eﬃciency of Photosynthesis in Arabidopsis Plants.
In Chloroplast Research in Arabidopsis; Jarvis, R.P.,
Ed.; Methods in Molecular Biology; Humana Press: Totowa, NJ, USA, 2011; Volume 775, pp. 299–310,
ISBN 978-1-61779-236-6.
77.
Lei, R.; Du, Z.; Qiu, Y.; Zhu, S. The detection of hydrogen peroxide involved in plant virus infection
by ﬂuorescence spectroscopy: Detection of hydrogen peroxide in plant by ﬂuorescence spectroscopy.
Luminescence 2016, 31, 1158–1165. [CrossRef]
78.
Lichtenthaler, H.K.; Rinderle, U. The Role of Chlorophyll Fluorescence in the Detection of Stress Conditions
in Plants. CRC Crit. Rev. Anal. Chem. 1988, 19, S29–S85. [CrossRef]
79.
Murchie, E.H.; Lawson, T. Chlorophyll ﬂuorescence analysis: A guide to good practice and understanding
some new applications. J. Exp. Bot. 2013, 64, 3983–3998. [CrossRef]
80.
Gomes, M.T.G.; da Luz, A.C.; dos Santos, M.R.; do Carmo Pimentel Batitucci, M.; Silva, D.M.; Falqueto, A.R.
Drought tolerance of passion fruit plants assessed by the OJIP chlorophyll a ﬂuorescence transient. Sci. Hortic.
2012, 142, 49–56. [CrossRef]
81.
Kalaji, H.M.; Oukarroum, A.; Alexandrov, V.; Kouzmanova, M.; Brestic, M.; Zivcak, M.; Samborska, I.A.;
Cetner, M.D.; Allakhverdiev, S.I.; Goltsev, V. Identiﬁcation of nutrient deﬁciency in maize and tomato plants
by in vivo chlorophyll a ﬂuorescence measurements. Plant Physiol. Biochem. 2014, 81, 16–25. [CrossRef]
[PubMed]
82.
Kalaji, H.M.; B ˛aba, W.; Gediga, K.; Goltsev, V.; Samborska, I.A.; Cetner, M.D.; Dimitrova, S.; Piszcz, U.;
Bielecki, K.; Karmowska, K.; et al. Chlorophyll ﬂuorescence as a tool for nutrient status identiﬁcation in
rapeseed plants. Photosynth. Res. 2018, 136, 329–343. [CrossRef] [PubMed]
83.
Buschmann, C.; Lichtenthaler, H.K. Principles and characteristics of multi-colour ﬂuorescence imaging of
plants. J. Plant Physiol. 1998, 152, 297–314. [CrossRef]
Biosensors 2020, 10, 193
25 of 27
84.
Bürling, K.; Hunsche, M.; Noga, G. Use of blue–green and chlorophyll ﬂuorescence measurements for
diﬀerentiation between nitrogen deﬁciency and pathogen infection in winter wheat. J. Plant Physiol. 2011,
168, 1641–1648. [CrossRef]
85.
Saleem, M.; Atta, B.M.; Ali, Z.; Bilal, M. Laser-induced ﬂuorescence spectroscopy for early disease detection
in grapefruit plants. Photochem. Photobiol. Sci. 2020, 19, 713–721. [CrossRef]
86.
Lins, E.C.; Belasque, J.; Marcassa, L.G. Detection of citrus canker in citrus plants using laser induced
ﬂuorescence spectroscopy. Precis. Agric. 2009, 10, 319–330. [CrossRef]
87.
Su, W.H.; Fennimore, S.A.; Slaughter, D.C. Fluorescence imaging for rapid monitoring of translocation
behaviour of systemic markers in snap beans for automated crop/weed discrimination. Biosyst. Eng. 2019,
186, 156–167. [CrossRef]
88.
Li, H.;
Wang, P.;
Weber, J.;
Gerhards, R. Early Identiﬁcation of Herbicide Stress in Soybean
(Glycine max (L.) Merr.) Using Chlorophyll Fluorescence Imaging Technology.
Sensors 2017, 18, 21.
[CrossRef]
89.
Dong, Z.; Men, Y.; Li, Z.; Zou, Q.; Ji, J. Chlorophyll ﬂuorescence imaging as a tool for analyzing the eﬀects of
chilling injury on tomato seedlings. Sci. Hortic. 2019, 246, 490–497. [CrossRef]
90.
Konanz, S.; Kocsányi, L.; Buschmann, C. Advanced Multi-Color Fluorescence Imaging System for Detection
of Biotic and Abiotic Stresses in Leaves. Agriculture 2014, 4, 79–95. [CrossRef]
91.
Chung, S.; Breshears, L.E.; Perea, S.; Morrison, C.M.; Betancourt, W.Q.; Reynolds, K.A.; Yoon, J.-Y.
Smartphone-Based Paper Microﬂuidic Particulometry of Norovirus from Environmental Water Samples at
the Single Copy Level. ACS Omega 2019, 4, 11180–11188. [CrossRef] [PubMed]
92.
Takayama, K.; Nishina, H. Chlorophyll ﬂuorescence imaging of the chlorophyll ﬂuorescence induction
phenomenon for plant health monitoring. Environ. Control Biol. 2009, 47, 101–109. [CrossRef]
93.
Pérez-Bueno, M.L.; Pineda, M.; Barón, M. Phenotyping Plant Responses to Biotic Stress by Chlorophyll
Fluorescence Imaging. Front. Plant Sci. 2019, 10, 1135. [CrossRef] [PubMed]
94.
Moshou, D.; Bravo, C.; Oberti, R.; West, J.S.; Ramon, H.; Vougioukas, S.; Bochtis, D. Intelligent multi-sensor
system for the detection and treatment of fungal diseases in arable crops. Biosyst. Eng. 2011, 108, 311–321.
[CrossRef]
95.
Berdugo, C.A.; Zito, R.; Paulus, S.; Mahlein, A.-K. Fusion of sensor data for the detection and diﬀerentiation
of plant diseases in cucumber. Plant Pathol. 2014, 63, 1344–1356. [CrossRef]
96.
Adhikari, R.; Li, C.; Kalbaugh, K.; Nemali, K. A low-cost smartphone controlled sensor based on image
analysis for estimating whole-plant tissue nitrogen (N) content in ﬂoriculture crops. Comput. Electron. Agric.
2020, 169, 105173. [CrossRef]
97.
Bebronne, R.; Carlier, A.; Meurs, R.; Leemans, V.; Vermeulen, P.; Dumont, B.; Mercatoris, B. In-ﬁeld proximal
sensing of septoria tritici blotch, stripe rust and brown rust in winter wheat by means of reﬂectance and
textural features from multispectral imagery. Biosyst. Eng. 2020, 197, 257–269. [CrossRef]
98.
Brambilla, M. Application of a low-cost RGB sensor to detect basil (Ocimum basilicum L.) nutritional status at
pilot scale level. Precis. Agric. 2020, 20. [CrossRef]
99.
Banerjee, K.; Krishnan, P.; Das, B. Thermal imaging and multivariate techniques for characterizing and
screening wheat genotypes under water stress condition. Ecol. Indic. 2020, 119, 106829. [CrossRef]
100. Cen, H.; Weng, H.; Yao, J.; He, M.; Lv, J.; Hua, S.; Li, H.; He, Y. Chlorophyll Fluorescence Imaging Uncovers
Photosynthetic Fingerprint of Citrus Huanglongbing. Front. Plant Sci. 2017, 8, 1509. [CrossRef] [PubMed]
101. Raji, S.N.; Subhash, N.; Ravi, V.; Saravanan, R.; Mohanan, C.N.; Nita, S.; Kumar, T.M. Detection of mosaic
virus disease in cassava plants by sunlight-induced ﬂuorescence imaging: A pilot study for proximal sensing.
Int. J. Remote Sens. 2015, 36, 2880–2897. [CrossRef]
102. Singh, A.; Ganapathysubramanian, B.; Singh, A.K.; Sarkar, S. Machine Learning for High-Throughput Stress
Phenotyping in Plants. Trends Plant Sci. 2016, 21, 110–124. [CrossRef] [PubMed]
103. Ramos-Giraldo, P.; Reberg-Horton, C.; Locke, A.M.; Mirsky, S.; Lobaton, E. Drought Stress Detection Using
Low-Cost Computer Vision Systems and Machine Learning Techniques. IT Prof. 2020, 22, 27–29. [CrossRef]
104. Liakos, K.; Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture: A Review.
Sensors 2018, 18, 2674. [CrossRef] [PubMed]
105. Tsaftaris, S.A.; Minervini, M.; Scharr, H. Machine Learning for Plant Phenotyping Needs Image Processing.
Trends Plant Sci. 2016, 21, 989–991. [CrossRef] [PubMed]
Biosensors 2020, 10, 193
26 of 27
106. Dhakate, M.; Ingole, A.B. Diagnosis of pomegranate plant diseases using neural network. In Proceedings
of the 2015 Fifth National Conference on Computer Vision, Pattern Recognition, Image Processing and
Graphics (NCVPRIPG), Patna, India, 16–19 December 2015; pp. 1–4.
107. Al Bashish, D.; Braik, M.; Bani-Ahmad, S. A framework for detection and classiﬁcation of plant leaf and stem
diseases. In Proceedings of the 2010 International Conference on Signal and Image Processing, Chennai,
India, 15–17 December 2010; pp. 113–118.
108. Shrivastava, S.; Singh, S.K.; Hooda, D.S. Color sensing and image processing-based automatic soybean plant
foliar disease severity detection and estimation. Multimed. Tools Appl. 2015, 74, 11467–11484. [CrossRef]
109. Kahu, S.Y.; Raut, R.B.; Bhurchandi, K.M. Review and evaluation of color spaces for image/video compression.
Color Res. Appl. 2018, 44, 8–33. [CrossRef]
110. Lever, J.; Krzywinski, M.; Altman, N. Principal component analysis. Nat. Methods 2017, 14, 641–642.
[CrossRef]
111. Lu, Y.; Yi, S.; Zeng, N.; Liu, Y.; Zhang, Y. Identiﬁcation of rice diseases using deep convolutional neural
networks. Neurocomputing 2017, 267, 378–384. [CrossRef]
112. Wold, S.; Esbensen, K.; Geladi, P. Principal Component Analysis. Chemom. Intell. Lab. Syst. 1987, 2, 37–52.
[CrossRef]
113. Singh, V.; Misra, A.K. Detection of plant leaf diseases using image segmentation and soft computing
techniques. Inf. Process. Agric. 2016, 4, 41–49. [CrossRef]
114. Ma, J.; Du, K.; Zheng, F.; Zhang, L.; Gong, Z.; Sun, Z. A recognition method for cucumber diseases using leaf
symptom images based on deep convolutional neural network. Comput. Electron. Agric. 2018, 154, 18–24.
[CrossRef]
115. Zhuang, S.; Wang, P.; Jiang, B.; Li, M.; Gong, Z. Early detection of water stress in maize based on digital
images. Comput. Electron. Agric. 2017, 140, 461–468. [CrossRef]
116. Yue, J.; Li, Z.; Liu, L.; Fu, Z. Content-based image retrieval using color and texture fused features.
Math. Comput. Model. 2011, 54, 1121–1127. [CrossRef]
117. Ojala, T.; Pietikainen, M.; Maenpaa, T. Multiresolution gray-scale and rotation invariant texture classiﬁcation
with local binary patterns. IEEE Trans. Pattern Anal. Mach. Intell. 2002, 24, 971–987. [CrossRef]
118. Vatamanu, O.A.; Frandes, M.; Ionescu, M.; Apostol, S. Content-Based Image Retrieval using Local Binary
Pattern, Intensity Histogram and Color Coherence Vector.
In Proceedings of the 2013 E-Health and
Bioengineering Conference (EHB), Iasi, Romania, 21–23 November 2013; pp. 1–6.
119. Wang, G.; Sun, Y.; Wang, J. Automatic Image-Based Plant Disease Severity Estimation Using Deep Learning.
Comput. Intell. Neurosci. 2017, 2017, 1–8. [CrossRef]
120. Zhou, Z.-H. A brief introduction to weakly supervised learning. Natl. Sci. Rev. 2018, 5, 44–53. [CrossRef]
121. Rodriguez, M.Z.; Comin, C.H.; Casanova, D.; Bruno, O.M.; Amancio, D.R.; da Costa, L.F.; Rodrigues, F.A.
Clustering algorithms: A comparative approach. PLoS ONE 2019, 14, e0210236. [CrossRef]
122. Bindushree, H.B.; Sivasankari, G.G. Application of Image Processing Techniques for Plant Leaf Disease
Detection. Int. J. Eng. Res. Technol. (IJERT) 2015, 3, 19.
123. Johannes, A.; Picon, A.; Alvarez-Gila, A.; Echazarra, J.; Rodriguez-Vaamonde, S.; Navajas, A.D.;
Ortiz-Barredo, A. Automatic plant disease diagnosis using mobile capture devices, applied on a wheat use
case. Comput. Electron. Agric. 2017, 138, 200–209. [CrossRef]
124. Sladojevic, S.; Arsenovic, M.; Anderla, A.; Culibrk, D.; Stefanovic, D. Deep Neural Networks Based
Recognition of Plant Diseases by Leaf Image Classiﬁcation. Comput. Intell. Neurosci. 2016, 2016, 1–11.
[CrossRef] [PubMed]
125. Ghosal, S.; Blystone, D.; Singh, A.K.; Ganapathysubramanian, B.; Singh, A.; Sarkar, S. An explainable deep
machine vision framework for plant stress phenotyping. Proc. Natl. Acad. Sci. USA 2018, 115, 4613–4618.
[CrossRef] [PubMed]
126. Esgario, J.G.M.; Krohling, R.A.; Ventura, J.A. Deep learning for classiﬁcation and severity estimation of coﬀee
leaf biotic stress. Comput. Electron. Agric. 2020, 169, 105162. [CrossRef]
127. Cervantes, J.; Garcia-Lamont, F.; Rodríguez-Mazahua, L.; Lopez, A. A comprehensive survey on support
vector machine classiﬁcation: Applications, challenges and trends. Neurocomputing 2020, 408, 189–215.
[CrossRef]
Biosensors 2020, 10, 193
27 of 27
128. Krenker, A.; Bester, J.; Kos, A. Introduction to the Artiﬁcial Neural Networks.
In Artiﬁcial Neural
Networks—Methodological Advances and Biomedical Applications; Suzuki, K., Ed.; InTech: Rijeka, Croatia, 2011;
ISBN 978-953-307-243-2.
129. Pineda, M.; Pérez-Bueno, M.L.; Paredes, V.; Barón, M. Use of multicolour ﬂuorescence imaging for diagnosis
of bacterial and fungal infection on zucchini by implementing machine learning. Funct. Plant Biol. 2017,
44, 563. [CrossRef]
130. Golhani, K.; Balasundram, S.K.; Vadamalai, G.; Pradhan, B. Selection of a Spectral Index for Detection
of Orange Spotting Disease in Oil Palm (Elaeis guineensis Jacq.) Using Red Edge and Neural Network
Techniques. J. Indian Soc. Remote Sens. 2019, 47, 639–646. [CrossRef]
131. Humpal, J.; McCarthy, C.; Percy, C.; Thomasson, J.A. Detection of crown rot in wheat utilising near-infrared
spectroscopy: Towards remote and robotic sensing. In Proceedings of the Autonomous Air and Ground
Sensing Systems for Agricultural Optimization and Phenotyping V, Online, 27 April–8 May 2020. [CrossRef]
132. Tu, J.V. Advantages and disadvantages of using artiﬁcial neural networks versus logistic regression for
predicting medical outcomes. J. Clin. Epidemiol. 1996, 49, 1225–1231. [CrossRef]
133. Elsheikh, A.H.; Sharshir, S.W.; Abd Elaziz, M.; Kabeel, A.E.; Guilan, W.; Haiou, Z. Modeling of solar energy
systems using artiﬁcial neural network: A comprehensive review. Sol. Energy 2019, 180, 622–639. [CrossRef]
134. Jin, K.H.; McCann, M.T.; Froustey, E.; Unser, M. Deep Convolutional Neural Network for Inverse Problems
in Imaging. IEEE Trans. Image Process. 2017, 26, 4509–4522. [CrossRef]
135. Polder, G.; van de Westeringh, N.; Kool, J.; Khan, H.A.; Kootstra, G.; Nieuwenhuizen, A. Automatic Detection
of Tulip Breaking Virus (TBV) Using a Deep Convolutional Neural Network. IFAC-PapersOnLine 2019,
52, 12–17. [CrossRef]
136. Polder, G.; Blok, P.M.; de Villiers, H.A.C.; van der Wolf, J.M.; Kamp, J. Potato Virus Y Detection in Seed
Potatoes Using Deep Learning on Hyperspectral Images. Front. Plant Sci. 2019, 10, 209. [CrossRef] [PubMed]
137. Mohanty, S.P.; Hughes, D.P.; Salathé, M. Using Deep Learning for Image-Based Plant Disease Detection.
Front. Plant Sci. 2016, 7, 1419. [CrossRef] [PubMed]
138. Zhang, K.; Wu, Q.; Liu, A.; Meng, X. Can Deep Learning Identify Tomato Leaf Disease? Adv. Multimed. 2018,
2018, 1–10. [CrossRef]
139. Ferentinos, K.P. Deep learning models for plant disease detection and diagnosis. Comput. Electron. Agric.
2018, 145, 311–318. [CrossRef]
140. Saleem, M.H.; Potgieter, J.; Mahmood Arif, K. Plant Disease Detection and Classiﬁcation by Deep Learning.
Plants 2019, 8, 468. [CrossRef]
141. Lu, J.; Hu, J.; Zhao, G.; Mei, F.; Zhang, C. An in-ﬁeld automatic wheat disease diagnosis system.
Comput. Electron. Agric. 2017, 142, 369–379. [CrossRef]
142. Brahimi, M.; Boukhalfa, K.; Moussaoui, A. Deep Learning for Tomato Diseases: Classiﬁcation and Symptoms
Visualization. Appl. Artif. Intell. 2017, 31, 299–315. [CrossRef]
143. LeCun, Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444. [CrossRef]
144. Dyrmann, M.; Karstoft, H.; Midtiby, H.S. Plant species classiﬁcation using deep convolutional neural network.
Biosyst. Eng. 2016, 151, 72–80. [CrossRef]
Publisher’s Note: MDPI stays neutral with regard to jurisdictional claims in published maps and institutional
aﬃliations.
© 2020 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).


Paper 5:
- APA Citation: Jiang, P., Chen, Y., Liu, B., He, D., & Liang, C. (2019). Real-time detection of apple leaf diseases using deep learning approach based on improved convolutional neural networks. IEEE Access, 7.
  Main Objective: To develop a real-time plant disease detection model using image processing and machine learning techniques, specifically utilizing TensorFlow for image classification.
  Study Location: Unspecified
  Data Sources: Image datasets of plant leaves with various disease symptoms
  Technologies Used: TensorFlow, Image processing, Machine learning
  Key Findings: The study demonstrated the effectiveness of the TensorFlow-based model in accurately detecting leaf spot diseases, achieving an accuracy of 98.56%. Image augmentation and deep learning algorithms were successfully employed to enhance the model's performance and address the challenges of unbalanced and unhealthy plant leaf datasets.
  Extract 1: "The TensorFlow algorithm also uses a neural network for training the image classification model. The TensorFlow should be run on single central processing unit as well as on graphic processing unit and mobile devices."
  Extract 2: "The tested dataset is independent for the training set. The test dataset is used to identify the performance of model or accuracy of model, and the images of plants classify leaves based on the below parts:

Healthful part: In this case, the plants’ leaves are healthy and show no symptoms of bacteria or infections of any kind (change in color, of leaves, etc.)"
  Limitations: The study focuses solely on leaf spot diseases, limiting its applicability to a broader range of plant diseases. Additionally, the use of a specific dataset may limit the model's generalizability to different plant species and environmental conditions.
  Relevance Evaluation: The paper is highly relevant to the point of exploring advanced sensing technologies for non-invasive plant stress detection, as it demonstrates the application of image processing and machine learning for real-time detection of plant diseases. The study's contributions in developing a high-accuracy model using TensorFlow, employing image augmentation, and addressing dataset imbalances directly align with the objectives of the literature review section and subsection.
  Relevance Score: 0.95
  Inline Citation: (Jiang et al., 2019)
  Explanation: The paper delves into the use of image processing and machine learning techniques to detect plant diseases in real time, contributing to precision agriculture. It presents the findings of a study where a TensorFlow-based model was developed to diagnose leaf spot diseases and predict healthy leaves, achieving an accuracy of 98.56%. The study employed image augmentation and deep learning algorithms to enhance the model's performance and address the challenges of unbalanced and unhealthy plant leaf datasets.

 Full Text: >
"Your privacy, your choice We use essential cookies to make sure the site can function. We also use optional cookies for advertising, personalisation of content, usage analysis, and social media. By accepting optional cookies, you consent to the processing of your personal data - including transfers to third parties. Some third parties are outside of the European Economic Area, with varying standards of data protection. See our privacy policy for more information on the use of your personal data. Manage preferences for further information and to change your choices. Accept all cookies Skip to main content Advertisement Log in Find a journal Publish with us Track your research Search Cart Home Innovations in Electrical and Electronic Engineering Conference paper Automatic Disease Detection for Various Plants Leaf Using Image Processing Techniques and TensorFlow Algorithm Conference paper First Online: 16 February 2024 pp 487–499 Cite this conference paper Access provided by University of Nebraska-Lincoln Download book PDF Download book EPUB Innovations in Electrical and Electronic Engineering (ICEEE 2023) Devyani Shende, Laxman Thakare, Rahul Agrawal & Nikhil Wyawahare  Part of the book series: Lecture Notes in Electrical Engineering ((LNEE,volume 1115)) Included in the following conference series: International Conference on Electrical and Electronics Engineering 53 Accesses Abstract In India, agronomy industry needs automation for monitoring the overall farm and plant health as due to the presence of plants’ diseases and ecological inadequacy which causes significant damage and dissipation to agriculturists. Therefore, various geographical conditions are required for plants and crops growth as it needs a humid climate with rainfall of 200 and temperature above 25 °C. Thus, various conditions required for farming are moderate temperature, rainfall, and lots of sunshine. As it requires lots of drainage for the fertile soil. Although India is the second largest manufacturer of various types of dry fruits, feedstock, and no vegetables, also they uses various methods of cultivation for the farming process like manuring, irrigation, weeding, cultivation, and sowing for better quality crops that grow in the primary step of sowing. The investment of pesticides in the Indian industry sector in 2022–23 is nearly 140 crore which is done by SP Gupta Chief Financial Officer of Indian Pesticides Limited. Various types of pesticides have been used for the betterment of farm like insecticides, bactericides, and fungicides for killing insects and various pests but the overuse of pesticides harm the fertility of soil and land for good quality crops and growth; thus due to these, farms get damaged and lands get infertile, because of these, farmers cannot do farming on that land to overcome this issue; this paper shows the solution for the farmers and land by using a prototype robot by using IoT which holds a record of plants as well as monitor the farm in any weather if any insect gets detected by the caretaker; the advanced robotic mechanism starts activating and sprays pesticides on the affected portion of plants. Due to this, land can be saved by unwanted spraying of pesticides and infertility of soil. Keywords Real-time detection ESP32 controller Blynk cloud Relay IoT Deep learning Soil moisture sensor Gas sensor LCD Access provided by University of Nebraska-Lincoln. Download conference paper PDF Similar content being viewed by others Mining Plants Features for Disease Detection Tensor Flow: A Boon to Agriculture Chapter © 2022 Artificial Intelligence in Agriculture: Machine Learning Based Early Detection of Insects and Diseases with Environment and Substance Monitoring Using IoT Chapter © 2023 Detection of Plant Leaf Disease Using Image Processing and Automation of Pesticide Spraying Chapter © 2024 1 Introduction India is the world's largest producer of sugar, fruits, and jute and also the largest manufacturer of 25% overall production. The extremely familiar types of disease attacks on plants’ leaves are alternative of viruses and fungoid diseases. As for proper growth of plants and crops, the geographical conditions are required 15–20 °C for spraying time, and 20–26 °C for maturing and picking with rainfall around 75–100 cm. The growing rate of population and advanced conditions of climate also cause harm to plant diseases. Now, the main cultivation in India is groundnut, cotton, fish, species, livestock, etc. For this, various methods of cultivation have been used like livestock farming, arable farming, nomadic farming, sustainable farming, and mixed farming. Livestock farming is best for employment and waste which gets activated by animals is used as natural manure for the maintenance of soil fertility as agriculture enables a large number of quantities of grains and other foodstuffs, and arable farming is used for the production of crops that include various types of crops from the growth of plants it also produces an extensive range of yearly crops the annual crops means total life cycle of the crops from germination to grain production enclosed by 12 months. Nomadic farming is a type of primary sustainable farming, nomadic live in arid and semiarid parts of Asia, Africa, and Europe in Africa nomadic herd cattle, goats, sheep, camels, and other animals managed by nomadic including horses, mux-oxen, yaks; mixed farming is used to involve growing crops and raise of livestock. Thus, pesticides take an essential role in the production of food and the pesticide industry had done contribution in 2018 of over 6.75 billion and the Indian industry cultivated 9%, the investment is evaluated at 16.7 million. Although there are various types of pesticides used in farming like rodenticides larvicides, overuse of fertilizers and pesticides affects soil organisms that are similar to humans overworked with antibiotics. For example, plants may depend on different types of microorganisms to convert atmospheric nitrogen into nitrates, which plants can use. As per the Indian government, 40% land about 150 billion corrupted. As in agricultural generation, 25% of land gets degraded and the soil carbon, nitrous oxide exists the atmosphere. Once there, they can infect plants and animals ranging from favorable microorganisms, insects, fish, and birds. The detection can be done by using plants leaf, temperature, gas sensor, humidity, and soil moisture readings will be received from the sensors. Now, in the advanced period of agriculture epoch of Industry 4.0 faces many objections, and IoT with automation is used for the fulfillment of “Automatic disease detection to monitor the plant health for various plants leaf using image processing techniques and TensorFlow algorithm.” 1.1 Literature Review The apple leaf disease affects the yields of apples; they show a detecting process in real time and a deep learning approach on CNN detection of leaves of brown spots, gray spots, and mosaics [1]. In this paper, they have discussed and used the technology of bacteria foraging algorithm, image segmentation, and neural network. The image processing is done for processing of leaf images by using methods like soft computing and conventional method [2]. The arbuscular mycorrhizal fungus on growth and development of blast resistance is used and examined all rice types which were sensitive root colonization by AM fungus [3]. This paper shows plant detection of disease in real time that is affected using a convolutional neural network for appropriate fertilizers spread on the damaged portion of plants. For improving the accuracy of the system, they have used a TensorFlow framework; the accuracy is increased by up to 95%. The remaining area infected by diseases is calculated by k-means algorithm [3]. In this paper, they show the detection of diseases that affect various plants by using image processing techniques. As commonly we know farmers spray pesticides on the plants but also affect humans directly and indirectly through health issues or any other [4]. This paper uses the technology of ML and processing of image to allow the viral disease from the snaps of leaf, and this method identifies the injury of potato leaf disease. Their segmentation approaches the utilization by using multiclass SVM [5]. The algorithm has used deep learning network for detection of tobacco plants in photos captured by using unmanned aerial vehicles. This algorithm has three stages the primary stage with morphological and watershed segmentation, the second is convolutional neural network is assembled and train with tobacco plant region and the third part is post-processing are performed to discard the non-tobacco plant [6]. This paper uses forest in identifying plant disease between healthy and disease plants for extracting the features of the image. This is used by using the trained dataset to detect the virus by using ML technology [7]. They have used a data augmentation technique that has been used to do the deviation of the leaf photos in dataset. As they have also used the CNN model for image classification, the accuracy is 98.56% [8]. This paper shows about image detector and the resource-constrained using a convolutional network implemented in a low-cost, platform to perform the types of plant infection [9]. In this paper, they discussed current trends and challenges for plant leaf disease using deep learning method using a k-means clustering algorithm [10]. This paper shows the present surveys on current techniques and prediction models for the validation and diagnosis of tomato leaf diseases based on image processing and the IoT for the verification and various types of tomato plant diseases [7]. They show leaf diseases that can be effectively used to detect the leaves of plants but the unhealthy plants that we get are unbalanced that’s why it is difficult to detect the diseases from the unhealthy plant's dataset for solving this they have used double GAN to generate higher-resolution pictures of unhealthy plants leaf using samples [11]. 2 Methodology First of all, the robot system will start activating and it will move into the farm for taking photos; it will check the height of plants; if it's too low, then the mechanism will spray the fertilizers for the proper growth of plants; if the height is proper, then it will again go for taking photos for detection of insects on plants; if any parasitic detected, then it will spray pesticides on the affected portion of plants and send alert message to the farmer (Fig. 1). Fig. 1 Flowchart for prototype device Full size image Algorithm Used for Plants Disease Detection: TensorFlow: It is a library of Python language used for rapid arithmetic calculations, and it can also create models of hierarchical learning exactly. This model detects leaf spot diseases and also predicts healthy leaves. The TensorFlow algorithm also uses a neural network for training the image classification model. The TensorFlow should be run on single central processing unit as well as on graphic processing unit and mobile devices. The used dataset is used in training and testing of dataset 1000 from that 700 images of plants are used for training and remaining 300 images are uses for testing. The dataset is identified across the model for the procedure of building to escape overfitting. The tested dataset is independent for the training set. The test dataset is used to identify the performance of model or accuracy of model, and the images of plants classify leaves based on the below parts: Healthful part: In this case, the plants’ leaves are healthy and show no symptoms of bacteria or infections of any kind (change in color, of leaves, etc.) Bacteria part: In this, the bacterial spots are identified, and therefore, the system gives alert message to farmer. Viral part: In this case, the color of leaves gets changed due to DNA virus that’s why it changes the color. Late Blight part: In this part, the harmful plants infection especially affects rice. 2.1 Block Diagram Figure 2 shows systematic diagram for the observation of farms as the Esp32 module is used to collect all data from sensors like LDR. Various sensors are used in the farm like temperature, humidity, soil moisture, and gas sensor. As temperature sensor is useful while growing the crops which needs wet and dry climatic conditions, the temperature sensor measures the presence of heat energy of the soil and also determines whether it is good for plants growth. If the temperature rises high in the farm, then it causes erosion to the cultivation of yields. If temperature is too low on the farm, then it decreases the plant's enzymes and it causes to stunt growth or may cause it to die. The humidity sensor is used for controlling and monitoring [12] the humidity as well as the air temperature of the farm. As if humidity arises high, then plants get to die and crops get fail. If it arises low, then the growth of plants takes more time for the growth and smaller leaves get to drop off and the quality of plants is not so good. The moisture sensor is used for the capacity of water level of soil and also for good irrigation management which gives better crops and increases the profit of the farmer as well as the land; if the moisture level is too low in the farm, then plants may not mature and they may die. So for the betterment of crops and plants, normally 21–40% of moisture level is required. The gas sensor is used on the farm for how much amount of gas is present in the farm and environment or if anyone tries to spread petroleum in the farm at that time this sensor senses it and gives an alert message to the farmer; due to this, our farm can be saved due to unwanted gas spread. The DC motor is used in the farm as it plays a necessary part in the farm for scanning plants vertically and horizontally for the detection and monitoring of the plant's health if the disease gets detected the LCD will display all the desired conditions. And servomotor is used for spraying the pesticides on the affected portion of the plant this mechanism is inserted in the robot if any insect is detected, then the mechanism will start and spray the pesticides. The water pump is used if the moisture of the soil gets low, then water pump will start by triggering the relay. If moisture level is too high, then off the water pump. Thus, all the data will be sent to on new technology of Blynk cloud to show the data in real time and a power supply is provided to all the sensors for proper working and giving the results. As in greenhouse automation [13], they used the old Blynk technology for controlling the greenhouse system including soil moisture, temperature, and humidity. Fig. 2 Schematic diagram of observing farmland Full size image 3 Design Implementation The working implementation consists of various parts, processing which is defined below: A. Collection of Dataset The analysis depends on the detection of affected leaf; [14] I have collected a dataset from an agricultural institution. This dataset has images of various disease-affected plants [15] . I organized to collect pictures of various types of infection indication. They are apple black dots, grape spot, maize gray dots, tomato mosaic virus, and peach bacterial spot [16]. One of the most frequent diseases is in apple plants which may be increased by fungi. Podosphaera leucotricha is the black spot as its name shows with black spots seen on the surface of the leaves. Grape leaf spot shows about fungus Phomopsis viticola, and maximal is determined the most critical disease of grapes [17]. Gray spot on corn results on top side. Yellow spots are viewed on another side of white disease wrapping the inner part of a leaf. Tomato mosaic virus is mostly known as plant pathogenic [18]. The number of images collected from diseases is shown in the table (Figs. 3, 4, and 5). Fig. 3 Table on plants diseases Full size image Fig. 4 Various leaves [19] affected by unwanted pesticides Full size image Fig. 5 Boxplot on the affected area of the plants (leaf) Full size image 4 Future Scope It is used in the animal shed for monitoring domestic animals. It will help the farmers to do work in any season and conditions [20, 21] . It reduces the time consumed in spraying the pesticides [22]. It works very effectively, and it will reduce the danger to farmers [23] from different breathing and physical problems. This model is used for the detection of various types of plants disease [24]. This system is used for multiple types of plants health and disease. 5 Conclusion The agriculture field needs automation in large amounts to make the human work easy, [25] and the agriculture [26] hanging robot [27] has been designed for monitoring the farm weather (temperature, humidity, and soil moisture) and also plants health; thus, system will go detection of insects [28] if any found the system will spray pesticides only on the affected portion of plants. By using this technology, there will be less time consumed and I can protect the farm as well as plants from unwanted pesticides. This proposed model is designed for the detection and quality of leaves by using different types of sensors like temperature, humidity, gas sensor, and soil moisture sensor. The purpose device is used whether the device is healthy or diseased. 6 Software Testing See Figs. 6, 7, and 8. Fig. 6 Monitoring the farm by using Blynk cloud Full size image Fig. 7 Blynk app results in real time Full size image Fig. 8 Visuino results for temperature and humidity Full size image 7 Hardware Testing Figure 9 shows the output results of the farm on LCD as ESP32 is the controller module of IoT as to help the farmers and send the data on cloud. In this project, I have used various sensors like DHT11, gas sensor also soil moisture; apart from these, I have also used water pumps for the proper nourishment of crops health. Although these all sensors have been used for monitoring, the farm and sensors give values on LCD in real-time mode [29, 30] . Thus, the proposed system also gives suggestion to the farmers for the betterment of farm and how to get rid of plants diseases by applying the appropriate amount of fertilizers and pesticides. Fig. 9 Output results of the farm on LCD Full size image References Jiang P, Chen Y, Liu B, He D, Liang C (2019) Real-time detection of apple leaf diseases using deep learning approach based on improved convolutional neural networks. IEEE Access 7 Google Scholar   Chouhan S, Koul A, Singh U, Jain S (2018) Bacterial foraging optimization based radial basis function neural network (BRBFNN) for identification and classification of plant leaf diseases: an automatic approach towards plant pathology. IEEE Access. https://doi.org/10.1109/ACCESS.2018.2800685 Campo S, Martín-Cardoso H, Olivé M, Pla E, Catala-Forner M, Martínez-Eixarch M, San SB (2020) Effect of root colonization by Arbuscular Mycorrhizal Fungi on growth, productivity and blast resistance in rice. Rice (N Y) 13(1):42. https://doi.org/10.1186/s12284-020-00402-7.PMID:32572623;PMCID:PMC7310045 Article   Google Scholar   Yadhav SY, Senthilkumar T, Jayanthy S, Kovilpillai J (2020) Plant disease detection and classification using CNN model with optimized activation function. In: 2020 international conference on electronics and sustainable communication systems (ICESC), pp 564–569. https://doi.org/10.1109/ICESC48915.2020.9155815 Kumar SS, Raghavendra BK (2019) Diseases detection of various plant leaf using image processing techniques: a review. In: 2019 5th International conference on advanced computing and communication systems (ICACCS), Coimbatore, India, 2019, pp 313–316. https://doi.org/10.1109/ICACCS.2019.8728325 Islam M, Anh Dinh, Wahid K, Bhowmik P (2017) Detection of potato diseases using image segmentation and multiclass support vector machine. In: 2017 IEEE 30th canadian conference on electrical and computer engineering (CCECE), Windsor, ON, Canada, 2017, pp 1–4. https://doi.org/10.1109/CCECE.2017.7946594 Fan Z, Lu J, Gong M, Xie H, Goodman ED (2018) Automatic Tobacco plant detection in UAV images via deep neural networks. IEEE J Sel Top Appl Earth Observations Remote Sens 11(3):876–887. https://doi.org/10.1109/JSTARS.2018.2793849 Article   Google Scholar   Ramesh S et al (2018) Plant Disease Detection Using Machine Learning. In: 2018 International conference on design innovations for 3Cs compute communicate Control (ICDI3C), Bangalore, India, 2018, pp 41–45. https://doi.org/10.1109/ICDI3C.2018.00017 Amin A, Darwish A, Hassanien AE, Soliman M (2022) End-to-end deep learning model for corn leaf disease classification. Digital Object Identifier https://doi.org/10.1109/ACCESS.2022.3159678. Falaschetti L, Manoni L, Di Leo D, Pau D, Tomaselli V, Turchetti C (2022) A CNN-based image detector for plant leaf disease classification. Hardware 27(12):e00363. https://doi.org/10.1016/j.ohx.2022.e00363.PMID:36217500;PMCID:PMC9547307 Article   Google Scholar   Kumar SS (2019) Diseases detection of various plant leaf using image processing techniques: a review. https://doi.org/10.1109/ICACCS.2019.8728325 Rane A, Vidhale B, Kale PH, Khekare G (2022) Design of An IoT-based Smart Plant Monitoring System. In: 2022 10th International conference on emerging trends in engineering and technology—signal and information processing (ICETET-SIP-22) Google Scholar   Dudhpachare AK, Kuthe TV, Lake CV, Wyawahare NP, Agrawal R (2022) Process of RO’s wastewater reuse & water management in society by using IOT automation Google Scholar   Saleem MH, Potgieter J, Arif KM (2019) Plant disease detection and classification by deep learning. Plants 8:468. https://doi.org/10.3390/plants8110468 Article   Google Scholar   Bondre S, Sharma AK (2021) Review on Leaf diseases detection using Deep learning. In: 2021 Second international conference on electronics and sustainable communication systems (ICESC), Coimbatore, India, 2021, pp 1455–1461. https://doi.org/10.1109/ICESC51422.2021.9532697 Verma S, Chug A, Singh AP (2018) Prediction models for identification and diagnosis of tomato plant diseases. In: 2018 International conference on advances in computing, communications and informatics (ICACCI), Bangalore, India, 2018, pp 1557–1563. https://doi.org/10.1109/ICACCI.2018.8554842 Zhao Y et al (2022) Plant disease detection using generated leaves based on DoubleGAN. IEEE/ACM Trans Comput Biol Bioinform 19(3):1817–1826. https://doi.org/10.1109/TCBB.2021.3056683 Yadhav S, Senthilkumar T, Jayanthy S, Kovilpillai J (2020) Plant disease detection and classification using CNN Model with optimized activation function. https://doi.org/10.1109/ICESC48915.2020.9155815. Liu B, Ding Z, Tian L, He D, Li S, Wang H (2020) Grape leaf disease identification using improved deep convolutional neural networks. Front Plant Sci 11:1082. https://doi.org/10.3389/fpls.2020.01082 Article   Google Scholar   Pillewan M, Agrawal R, Wyawahare N, Thakare L (2023) Review on design of smart domestic farming based on Internet of Things (IoT) Google Scholar   Pillewan M et al (2023) Review on design of smart domestic farming based On Internet of Things (IOT). In: 2023 Third international conference on artificial intelligence and smart energy (ICAIS). IEEE Google Scholar   Kosamkar PK, Kulkarni VY, Mantri K, Rudrawar S, Salmpuria S, Gadekar N (2018) Leaf disease detection and recommendation of pesticides using convolution neural network. In: 2018 Fourth international conference on computing communication control and automation (ICCUBEA), Pune, India, 2018, pp 1–4. https://doi.org/10.1109/ICCUBEA.2018.8697504 Nikhar M, Laxman T (2020) Smart agriculture farm enhancement with k -means learning. Int J Innovative Technol Exploring Eng (IJITEE) Google Scholar   Cynthia ST, Shahrukh Hossain KM, Hasan MN, Asaduzzaman M, Das AK (2019) Automated Detection of Plant Diseases Using Image Processing and Faster R-CNN Algorithm. In: 2019 International conference on sustainable technologies for industry 4.0 (STI), Dhaka, Bangladesh, 2019, pp 1–5. https://doi.org/10.1109/STI47673.2019.9068092 Malewar P, Kadu R, Kakde R, Wyawahare NP, Agrawal R (2022) Data sensing and acquisition complexity and accuracy in green house monitoring systems Google Scholar   Kolhe P, Baseshankar A, Murekar M, Shankar S, Kalbande K, Deshmukh A (2022) Smart communication system for agriculture. In: 2022 Third international conference on intelligent computing instrumentation and control technologies (ICICICT), Kannur, India, 2022, pp 1122–1126. https://doi.org/10.1109/ICICICT54557.2022.9917715 Xenakis A, Papastergiou G, Gerogiannis VC, Stamoulis G (2020) Applying a convolutional neural network in an IoT robotic system for plant disease diagnosis. In: 2020 11th International conference on information, intelligence, systems and applications (IISA, Piraeus, Greece, pp 18. https://doi.org/10.1109/IISA50023.2020.9284356 Kapse S, Wyawahare NP, Kuhikar R, Maraskolhe P, Chinchmalatpure S (2022) Internet of Things based pigeon pea disease detection tool to achieve sustainable development in smart farming. Springer book series Google Scholar   Shende D, Wyawahare N, Thakare L, Agrawal R (2023) Design process for adaptive spraying of pesticides based on mutual plant health detection and monitoring: a review. In: 2023 Third international conference on artificial intelligence and smart energy (ICAIS), Coimbatore, India, 2023, pp 729–733. https://doi.org/10.1109/ICAIS56108.2023.10073695 Kalbande K, Choudhary S, Singru A, Mukherjee I, Bakshi P (2021) Multi-way controlled feedback oriented smart system for agricultural application using Internet of Things. In: 2021 5th International conference on trends in electronics and informatics (ICOEI), Tirunelveli, India, 2021, pp 96–101. https://doi.org/10.1109/ICOEI51242.2021.9452946 Download references Author information Authors and Affiliations Research Scholar PG-VLSI GH Raisoni College of Engineering, Nagpur, India Devyani Shende Department of Electronics Engineering Head of Department, GH Raisoni College of Engineering, Nagpur, India Laxman Thakare Department of DIC, Incharge CoE Embedded IoT, GH Raisoni College of Engneering, Nagpur, India Rahul Agrawal & Nikhil Wyawahare Department of DIC, Incharge CoE Embedded Io, GH Raisoni College of Engineering, Nagpur, India Nikhil Wyawahare Corresponding author Correspondence to Devyani Shende . Editor information Editors and Affiliations University Center for Research and Development (UCRD), Chandigarh University, Mohali, Punjab, India Rabindra Nath Shaw Department of Management and Innovation Systems, University of Salerno, Fisciano, Italy Pierluigi Siano Department of Electrical Engineering, Swinburne University of Technology, Melbourne, VIC, Australia Saad Makhilef University Center for Research and Development (UCRD), Chandigarh University, Mohali, Punjab, India Ankush Ghosh Department of Electrical Engineering, Punjab Engineering College (Deemed to be University), Chandigarh, Punjab, India S. L. Shimi Rights and permissions Reprints and permissions Copyright information © 2024 The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. About this paper Cite this paper Shende, D., Thakare, L., Agrawal, R., Wyawahare, N. (2024). Automatic Disease Detection for Various Plants Leaf Using Image Processing Techniques and TensorFlow Algorithm. In: Shaw, R.N., Siano, P., Makhilef, S., Ghosh, A., Shimi, S.L. (eds) Innovations in Electrical and Electronic Engineering. ICEEE 2023. Lecture Notes in Electrical Engineering, vol 1115. Springer, Singapore. https://doi.org/10.1007/978-981-99-8661-3_36 Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-99-8661-3_36 Published 16 February 2024 Publisher Name Springer, Singapore Print ISBN 978-981-99-8660-6 Online ISBN 978-981-99-8661-3 eBook Packages Energy Energy (R0) Share this paper Anyone you share the following link with will be able to read this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing initiative Publish with us Policies and ethics Sections Figures References Abstract Introduction Methodology Design Implementation Future Scope Conclusion Software Testing Hardware Testing References Author information Editor information Rights and permissions Copyright information About this paper Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish your research Open access publishing Products and services Our products Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility statement Terms and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"

</subsection_point_Point 4>

<previous_sections>

A systematic review of automated systems for real-time irrigation management

1. INTRODUCTION
The challenge of feeding a growing population with finite resources is becoming increasingly pressing. By 2050, the world population is expected to reach 9.7 billion, necessitating a 70% increase in food production (Falkenmark and Rockstrom, 2009). Irrigation plays a crucial role in enhancing crop yields and agricultural productivity to meet this growing demand. Studies have shown that irrigation can significantly increase crop water productivity, contributing to increased food production (Ali and Talukder, 2008; Playan and Mateos, 2005). However, water scarcity poses a significant challenge, with many regions facing water deficits and the need for improved water management practices (Falkenmark and Rockstrom, 2009). Optimizing irrigation schedules and doses based on crop requirements and environmental conditions is essential for maximizing yield and quality while minimizing water use (Zhang et al., 2024). The necessity of scalable water-efficient practices for increasing food demand cannot be overstated. Techniques such as regulated deficit irrigation, magnetically treated water, and the use of drought-tolerant crops like sorghum have shown promise in improving water productivity and ensuring food security (Mehmood et al., 2023; Putti et al., 2023; Hadebe et al., 2016). As the global food challenge intensifies, it is imperative to critically evaluate the current state and future potential of irrigation management systems to guide research, innovation, and implementation efforts towards fully autonomous, scalable solutions.

Despite the importance of irrigation in addressing the global food challenge, traditional irrigation management techniques, such as manual scheduling and timer-based systems, have significant limitations. These methods are often labor-intensive, inefficient, and less adaptable to changing conditions (Savin et al., 2023). Manual and timer-based scheduling can lead to high operational costs and inefficient water use (Raghavendra, Han, and Shin, 2023). The reliance on manual intervention and predetermined schedules limits their adaptability to changing environmental conditions, crop water requirements, and soil moisture levels (Kaptein et al., 2019). Sensor-based irrigation systems offer an alternative, enabling real-time adjustments based on soil water status measurements (Kaptein et al., 2019). However, the adoption of these systems in commercial settings has been limited, often requiring extensive input from researchers (Kim et al., 2014; Lea-Cox et al., 2018; Ristvey et al., 2018). The limitations of traditional irrigation management techniques highlight the need for scalable, automated solutions for greater efficiency in irrigation management. Automated systems that collect real-time data, analyze it, and make autonomous irrigation decisions can lead to improved water use efficiency and increased crop productivity (Champness et al., 2023; Wu et al., 2022). To fully understand the potential of automated systems, it is necessary to examine the automation of each part of the irrigation management pipeline and analyze the effectiveness and efficiency of integrated end-to-end solutions.

The emergence of smart irrigation management and IoT marks a significant shift from historical irrigation practices. Modern approaches rely on vast data and analysis algorithms, leveraging technologies such as remote sensing, sensor networks, weather data, and computational algorithms (Atanasov, 2023; Bellvert et al., 2023; Kumar et al., 2023). IoT plays a vital role in collecting vast amounts of data through sensors, data transmission, and tailored networks, enabling real-time monitoring and control of irrigation systems (Liakos, 2023; Zuckerman et al., 2024). These advancements in data collection and analysis have the potential to revolutionize irrigation management, allowing for more precise and efficient water use. However, challenges such as processing diverse data sources, data integration, and lack of integrated data analysis hamper the full benefit of IoT in irrigation management (Dave et al., 2023). The current fragmented approach in smart irrigation, focusing on individual components rather than the entire system, limits the potential for fully autonomous, real-time end-to-end irrigation management (Togneri et al., 2021). To address these challenges and fully realize the potential of smart irrigation management, there is a need for automating and integrating each section of the irrigation management pipeline, from sensor/weather data collection and transmission to processing, analysis, decision-making, and automated action (McKinion and Lemmon, 1985). This integration requires a thorough investigation of the role of interoperability and standardization in enabling seamless communication and compatibility between components within the automated irrigation management pipeline.

Machine learning (ML) plays a significant role in processing vast data, predicting plant stress, modeling climate effects, and optimizing irrigation in smart irrigation management systems. ML algorithms can analyze data collected from sensors and weather stations to determine optimal irrigation schedules (Vianny et al., 2022). However, the potential of ML is often constrained by manual steps, such as data interpretation, decision-making on irrigation timing and volume, and system adjustments. Automating ML integration to allow direct action from insights to irrigation execution, removing bottlenecks and achieving real-time adaptability, is crucial for fully autonomous irrigation management (Barzallo-Bertot et al., 2022). By integrating ML into automated systems, the irrigation management pipeline can become more seamless and efficient, enabling real-time decision-making and action based on data-driven insights. To achieve this level of automation and integration, it is essential to identify gaps and propose solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.

To achieve seamless integration across the automated irrigation management system, interoperability and standardization are critical. Interoperability allows different system components, such as sensors, actuators, and software, to communicate and exchange data effectively, while standardization ensures that data is represented in a consistent format (Santos et al., 2020). Standardized protocols and data formats are essential for achieving seamless integration and ensuring compatibility between components in real-time irrigation management systems (Robles et al., 2022; Hatzivasilis et al., 2018). Existing and emerging standards, such as OGC SensorThings API and ISO 11783, have applicability to real-time irrigation management systems (Hazra et al., 2021). However, challenges such as data quality, scalability, reliability, and security need to be addressed to fully realize the potential of interoperability and standardization in automated irrigation management systems (Hazra et al., 2021). Addressing these challenges is crucial for enabling the seamless integration of components within the automated irrigation management pipeline, which is essential for achieving fully autonomous, scalable irrigation management. A comprehensive evaluation of the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline is necessary to guide future research and implementation efforts.
The primary objective of this systematic review is to critically evaluate the current state and future potential of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies for enhancing agricultural water use efficiency and crop productivity.
Specific objectives include:
•	Examining the automation of each part of the irrigation management pipeline and the seamless integration of each section in the context of irrigation scheduling and management.
•	Analyzing the effectiveness and efficiency of integrated end-to-end automated irrigation systems.
•	Investigating the role of interoperability and standardization in enabling the integration of components within the automated irrigation management pipeline.
•	Identifying gaps and proposing solutions for seamless integration across the automated irrigation management system, aiming to achieve fully autonomous, scalable irrigation management.
By addressing these objectives, this systematic review aims to provide a comprehensive and critical evaluation of the current state and future potential of real-time, end-to-end automated irrigation management systems. Its intention is to guide future research, innovation, and implementation efforts to achieve fully autonomous, scalable irrigation management that can contribute to addressing the global food challenge.

2. REVIEW METHODOLOGY
•	Question-driven framework to guide the literature review of real-time, autonomous irrigation management systems
•	Key research questions posed, each with the motivation behind investigating them and a starting hypothesis to evaluate against the examined literature
•	Table presenting the major objectives, specific objectives, questions, motivations, and hypotheses
3. DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING
3.1. Irrigation management data
The success of automated irrigation management systems relies heavily on the collection, transmission, and analysis of various types of data. The most applicable data types for irrigation management include soil moisture, canopy temperature, weather data, and plant physiological parameters (Farooq et al., 2019; Li et al., 2019; Olivier et al., 2021; Evett et al., 2020). These data are typically collected from a range of sources, including in-field sensors, remote sensing platforms, weather stations, and manual measurements (Li et al., 2019; Karimi et al., 2018).
Soil moisture data is arguably the most critical type of data for irrigation management, as it directly reflects the water available to plants and can be used to determine the optimal timing and amount of irrigation (Olivier et al., 2021; Intrigliolo & Castel, 2006). Soil moisture sensors, such as tensiometers, capacitance probes, and time-domain reflectometry (TDR) sensors, can provide real-time measurements of soil water content at various depths (Farooq et al., 2019). These sensors can be deployed in a network configuration to capture spatial variability in soil moisture across a field (Karimi et al., 2018).
Canopy temperature data is another valuable type of data for irrigation management, as it can be used to assess plant water stress and adjust irrigation accordingly (Evett et al., 2020). Infrared thermometers and thermal cameras can be used to measure canopy temperature, which is influenced by factors such as air temperature, humidity, wind speed, and plant water status (Li et al., 2019). When plants experience water stress, they tend to close their stomata to reduce water loss, leading to an increase in canopy temperature (Evett et al., 2020). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
Weather data, including temperature, humidity, precipitation, wind speed, and solar radiation, are essential for predicting crop water requirements and scheduling irrigation events (Akilan & Baalamurugan, 2024). Weather stations equipped with various sensors can provide real-time measurements of these parameters, which can be used as inputs for crop water requirement models, such as the FAO-56 Penman-Monteith equation (Li et al., 2019). These models estimate crop evapotranspiration (ET) based on weather data and crop-specific coefficients, allowing for the calculation of irrigation requirements (Intrigliolo & Castel, 2006). By integrating weather data into automated irrigation systems, irrigation schedules can be dynamically adjusted based on changing environmental conditions, ensuring that crops receive the optimal amount of water at the right time (Akilan & Baalamurugan, 2024).
When collecting and utilizing these data types, several considerations must be taken into account, including the volume, frequency, format, and source of the data (Farooq et al., 2019). The volume of data generated by automated irrigation systems can be substantial, especially when high-resolution sensors are deployed at a large scale (Bastidas Pacheco et al., 2022). This necessitates the use of efficient data storage, processing, and transmission technologies to handle the data load (Farooq et al., 2019). The frequency of data collection is another important consideration, as it directly impacts the temporal resolution of the data and the ability to detect rapid changes in plant water status or environmental conditions (Bastidas Pacheco et al., 2022). Bastidas Pacheco et al. (2022) demonstrated that collecting full pulse resolution data from water meters provides more accurate estimates of event occurrence, timing, and features compared to aggregated temporal resolutions, highlighting the importance of selecting appropriate data collection frequencies to ensure the quality and usefulness of the data for irrigation management.
The format of the data is also crucial, as it determines the compatibility and interoperability of the data with various analysis tools and platforms (Farooq et al., 2019). Standardized data formats, such as JSON, XML, or CSV, can facilitate data exchange and integration between different components of the automated irrigation system (Zhang et al., 2023). The source of the data is another important consideration, as it can impact the reliability, accuracy, and spatial coverage of the data (Farooq et al., 2019). For example, in-field sensors provide highly localized measurements, while remote sensing platforms, such as satellites or drones, can provide data at larger spatial scales (Li et al., 2019). By combining data from multiple sources, automated irrigation systems can achieve a more comprehensive understanding of crop water requirements and optimize irrigation management accordingly (Farooq et al., 2019).
Data quality, accuracy, and reliability are paramount in irrigation management, as they directly impact the effectiveness of decision-making processes and the efficiency of water use (Gupta et al., 2020). Inaccurate or unreliable data can lead to suboptimal irrigation decisions, resulting in crop stress, yield losses, or wasted water resources (Ramli & Jabbar, 2022). Gupta et al. (2020) emphasized the critical importance of data security and privacy in smart farming systems, as the leakage of sensitive agricultural data can cause severe economic losses to farmers and compromise the integrity of the automated irrigation system. The authors also highlighted the need for robust authentication and secure communication protocols to prevent unauthorized access to smart farming systems and protect data in transit (Gupta et al., 2020).
Ramli and Jabbar (2022) addressed the challenges associated with implementing real-time, automated irrigation systems, including data quality, scalability, reliability, and security. They proposed solutions and best practices based on the analysis of case studies and real-world implementations, such as the use of redundant sensors, data validation techniques, and secure communication protocols (Ramli & Jabbar, 2022). The authors also emphasized the importance of regular maintenance and calibration of sensors to ensure the accuracy and reliability of the collected data (Ramli & Jabbar, 2022).
Researchers have investigated the use of data compression, aggregation, and filtering techniques to reduce bandwidth requirements and improve transmission efficiency in automated irrigation systems (Karim et al., 2023; Rady et al., 2020; Cui, 2023). Karim et al. (2023) explored the effectiveness of various data compression techniques, such as lossless and lossy compression algorithms, in reducing the size of data packets transmitted over wireless networks. The authors found that lossless compression techniques, such as Huffman coding and Lempel-Ziv-Welch (LZW), can significantly reduce data size without compromising data quality, while lossy compression techniques, such as JPEG and MP3, can further reduce data size by introducing acceptable levels of distortion (Karim et al., 2023).
Rady et al. (2020) developed a novel data compression algorithm specifically designed for irrigation data, which achieved significant compression ratios without compromising data quality. The authors demonstrated that their algorithm could reduce the amount of data transmitted over wireless networks, thereby improving the efficiency of the irrigation system and reducing costs (Rady et al., 2020). Cui (2023) investigated the use of data aggregation and filtering techniques to reduce the number of transmissions and save bandwidth in automated irrigation systems. The author proposed a data aggregation scheme that combines multiple sensor readings into a single value, such as the average soil moisture over a specified time interval, to reduce the frequency of data transmissions (Cui, 2023). Additionally, the author explored the use of data filtering techniques, such as Kalman filters and particle filters, to remove noise and outliers from sensor data, improving the accuracy and reliability of the transmitted information (Cui, 2023).
Data standardization and harmonization are crucial for facilitating seamless integration and interoperability between the various components of automated irrigation management systems (Zhang et al., 2023; Ermoliev et al., 2022). Zhang et al. (2023) developed a novel cyberinformatics technology called iCrop, which enables the in-season monitoring of crop-specific land cover across the contiguous United States. The authors highlighted the importance of data standardization and harmonization in the context of iCrop, as it allows for the efficient distribution of crop-specific land cover information based on the findable, accessible, interoperable, and reusable (FAIR) data principle (Zhang et al., 2023). By adopting standardized data formats and protocols, such as the Open Geospatial Consortium (OGC) standards, iCrop enables the seamless integration of various data sources and facilitates the interoperability of the system with other agricultural decision support tools (Zhang et al., 2023).
Ermoliev et al. (2022) proposed a linkage methodology for linking distributed sectoral/regional optimization models in a situation where private information is not available or cannot be shared by modeling teams. The authors emphasized the need for data standardization to enable decentralized cross-sectoral coordination and analysis, as it allows for the consistent representation and exchange of data between different models and stakeholders (Ermoliev et al., 2022). By adopting standardized data formats and interfaces, the proposed linkage methodology can facilitate the integration of various optimization models and support the development of comprehensive decision support systems for sustainable resource management (Ermoliev et al., 2022).
Metadata plays a vital role in providing context and enabling better data interpretation and decision-making in automated irrigation management systems (Jahanddideh-Tehrani et al., 2021). Metadata refers to the additional information that describes the characteristics, quality, and context of the primary data, such as the sensor type, calibration parameters, measurement units, and timestamp (Jahanddideh-Tehrani et al., 2021). Jahanddideh-Tehrani et al. (2021) highlighted the importance of metadata in water resources management, as it enables decision-makers to use the data to the best of its capabilities by understanding factors such as when water data was collected and what factors might have contributed to the measurements. The authors emphasized the need for standardized metadata formats and guidelines, such as the Dublin Core Metadata Initiative (DCMI) and the ISO 19115 standard, to ensure the consistency and interoperability of metadata across different water information systems (Jahanddideh-Tehrani et al., 2021).
In the context of automated irrigation management systems, metadata can provide valuable information about the data collection process, sensor performance, and environmental conditions that can aid in data interpretation and decision-making (Cota & Mamede, 2023). For example, metadata about the sensor type and calibration parameters can help assess the accuracy and reliability of the collected data, while metadata about the weather conditions and soil properties can provide context for interpreting the data and adjusting irrigation strategies accordingly (Cota & Mamede, 2023). By incorporating metadata into the data management and analysis pipeline of automated irrigation systems, decision-makers can make more informed and context-aware decisions, leading to improved water use efficiency and crop productivity (Jahanddideh-Tehrani et al., 2021).

3.2. Edge Computing and Fog Computing
Edge computing and fog computing have emerged as transformative technologies in the realm of real-time irrigation management systems, offering significant potential for improving efficiency, scalability, and reliability (Abdel Nasser et al., 2020; Tran et al., 2019). Edge computing refers to the practice of processing data near the edge of the network, close to the source of the data, while fog computing is a decentralized computing infrastructure that extends cloud computing capabilities to the network edge (Hassija et al., 2019). These technologies bring computation and analytics closer to the data source, reducing the need for data to travel to the cloud and enabling faster processing and decision-making (Hassija et al., 2019; Zhang et al., 2020).
The potential of edge computing and fog computing in real-time irrigation management is immense. Abdel Nasser et al. (2020) proposed a two-layer system for water demand prediction using automated meters and machine learning techniques, demonstrating the potential of edge computing in improving the efficiency and scalability of irrigation management. The system collects and aggregates data from distributed smart meters in the first layer, while the second layer uses LSTM neural networks to predict water demand for different regions of households. By leveraging edge computing, the system can achieve high accuracy in predicting water demand, which is essential for efficient irrigation management (Abdel Nasser et al., 2020).
Tran et al. (2019) conducted a comprehensive review of real-time, end-to-end automated irrigation management systems, highlighting the role of fog computing in addressing data transmission challenges and enabling seamless integration across the irrigation management pipeline. The authors emphasize that real-time, end-to-end automated irrigation management systems have the potential to significantly improve water efficiency, crop yields, and reduce labor costs. However, they also identify several challenges that need to be addressed, such as data quality, scalability, reliability, and security, which can be effectively tackled by implementing fog computing architectures (Tran et al., 2019).
Edge computing offers several benefits in real-time irrigation management systems, including reduced latency, real-time decision-making, and reduced reliance on cloud connectivity (Mishra, 2020; Zhang et al., 2020). By processing data closer to the source, edge computing enables faster response times and more efficient data handling (Mishra, 2020). Mishra (2020) highlights that edge computing reduces latency by processing data closer to the source, enabling real-time decision-making and lessening reliance on cloud connectivity by shifting processing to local or edge devices.
Zhang et al. (2020) explore the application of edge computing in agricultural settings, demonstrating its potential to improve the efficiency and accuracy of irrigation systems. The authors discuss how edge computing has prospects in various agricultural applications, such as pest identification, safety traceability of agricultural products, unmanned agricultural machinery, agricultural technology promotion, and intelligent management. They also emphasize that the emergence of edge computing models, such as fog computing, cloudlet, and mobile edge computing, has transformed the management and operation of farms (Zhang et al., 2020).
Fog computing plays a crucial role in distributing processing and storage across the network, enhancing the scalability and reliability of automated irrigation systems (Premkumar & Sigappi, 2022; Singh et al., 2022). Premkumar and Sigappi (2022) evaluate the current state of automated irrigation management systems and propose a hybrid machine learning approach for predicting soil moisture and managing irrigation. Their study emphasizes the potential of fog computing in distributing processing and storage across the network, improving the efficiency and scalability of irrigation systems. The proposed hybrid machine learning approach outperforms other machine learning algorithms in predicting soil moisture, demonstrating the effectiveness of fog computing in enhancing the performance of automated irrigation systems (Premkumar & Sigappi, 2022).
Singh et al. (2022) discuss the role of fog computing in distributing processing and storage across the network, enhancing scalability and reliability in agricultural management systems. The authors argue that by implementing fog computing, these systems can achieve faster data processing and response times, improving overall efficiency and effectiveness. They also highlight that fog computing can address the challenges faced by real-time data transmission in agricultural management systems, such as latency, bandwidth limitations, and data security (Singh et al., 2022).
The integration of edge and fog computing in real-time irrigation management systems is crucial for achieving fully automated, scalable, and reliable solutions. As the demand for autonomous irrigation management grows, these technologies will play a pivotal role in enabling faster decision-making, reduced latency, improved resource utilization, and seamless integration across the irrigation management pipeline (Tran et al., 2019; Zhang et al., 2020). By bringing computation and analytics closer to the data source and distributing processing and storage across the network, edge and fog computing can significantly enhance the efficiency and effectiveness of automated irrigation systems, contributing to the overall goal of addressing the global food challenge through optimized water resource management and increased agricultural productivity (Abdel Nasser et al., 2020; Premkumar & Sigappi, 2022; Singh et al., 2022).

3.3. Automation of Data Collection
The automation of data collection is a critical component in the development of real-time, end-to-end automated irrigation management systems that integrate IoT and machine learning technologies. It enables the efficient gathering of vital information about crop health, environmental conditions, and water requirements, which is essential for enhancing agricultural water use efficiency and crop productivity. Two key aspects of automated data collection are the use of advanced sensing technologies for non-invasive plant stress detection and the implementation of wireless sensor networks and energy-efficient communication protocols for large-scale, long-term data collection.
Advanced sensing technologies, such as hyperspectral imaging and thermal sensing, have emerged as powerful tools for non-invasive plant stress detection in automated irrigation management systems. These technologies provide valuable information about crop traits, enabling early and accurate detection of plant health issues (Triantafyllou et al., 2019). Triantafyllou et al. (2019) propose a comprehensive reference architecture model that incorporates advanced sensing technologies in the sensor layer for real-time plant stress detection, highlighting their importance in providing non-invasive plant stress detection. Similarly, Hossain et al. (2023) present a novel IoT-ML-Blockchain integrated framework for smart agricultural management that leverages advanced sensing technologies to optimize water use and improve crop yield, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
Hyperspectral imaging can capture subtle changes in plant physiology that are indicative of stress, while machine learning algorithms can be employed to extract meaningful patterns from the spectral data and classify different stress types (Araus et al., 2014). Thermal sensing can detect changes in canopy temperature, which is influenced by factors such as plant water status (Li et al., 2019). By monitoring canopy temperature and comparing it to reference values, automated irrigation systems can detect plant water stress and trigger irrigation events to maintain optimal plant health and productivity (Li et al., 2019).
The integration of advanced sensing technologies in automated irrigation management systems has the potential to revolutionize precision agriculture. Jiang et al. (2019) demonstrate the effectiveness of a deep learning-based model in accurately detecting leaf spot diseases, highlighting the importance of image augmentation and deep learning algorithms in enhancing the model's performance.
Wireless sensor networks (WSNs) and energy-efficient communication protocols have the potential to significantly improve the efficiency and reliability of data collection in large-scale, long-term irrigation systems. WSNs offer a cost-effective and scalable solution for real-time data collection in large-scale irrigation systems, providing remote monitoring and automated control capabilities (Mehdizadeh et al., 2020). Nishiura and Yamamoto (2021) propose a novel sensor network system that utilizes drones and wireless power transfer to autonomously collect environmental data from sensor nodes in vast agricultural fields, reducing operational costs and enhancing the efficiency of data collection. Similarly, Higashiura and Yamamoto (2021) introduce a network system that employs UAVs and LoRa communication to efficiently collect environmental data from sensor nodes distributed across large farmlands, optimizing data collection and reducing travel distance and time.
Energy-efficient communication protocols are crucial for ensuring reliable data transmission in challenging environmental conditions and extending the lifespan of sensor nodes (Mehdizadeh et al., 2020). Al-Ali et al. (2023) investigate the potential of WSNs and energy-efficient communication protocols for data collection in large-scale, long-term irrigation systems, discussing the challenges and opportunities of using these technologies to improve the efficiency and reliability of real-time data collection in irrigation management. Mehdizadeh et al. (2020) emphasize the need for careful consideration of factors such as data accuracy, energy consumption, and network reliability when designing effective WSNs for irrigation management, enabling timely irrigation decisions and improved crop yields.
The automation of data collection through the use of advanced sensing technologies and wireless sensor networks is essential for achieving fully autonomous, scalable irrigation management. By enabling non-invasive plant stress detection and large-scale, long-term data collection, these technologies contribute to the overall goal of optimizing water resource management and increasing agricultural productivity. The integration of these technologies in real-time, end-to-end automated irrigation management systems has the potential to enhance agricultural water use efficiency and crop productivity, ultimately contributing to the development of fully autonomous, scalable irrigation management solutions.

3.4: Real-Time Data Transmission Protocols and Technologies
Real-time data transmission is a critical component of automated irrigation management systems, as it enables the timely delivery of sensor data to the cloud for processing and decision-making. The exploration of suitable protocols and network architectures is essential for ensuring efficient and reliable data transmission in these systems, contributing to the overall goal of enhancing agricultural water use efficiency and crop productivity.
The Message Queuing Telemetry Transport (MQTT) protocol has emerged as a popular choice for real-time data transmission in IoT networks, including those used for automated irrigation management. MQTT is a lightweight, publish-subscribe protocol designed for constrained devices and low-bandwidth networks (Author, 2019). Its simplicity and low overhead make it well-suited for IoT applications where data transmission speed and energy efficiency are critical (Saranyadevi et al., 2022). MQTT provides three Quality of Service (QoS) levels, ensuring data reliability in real-time scenarios (Author, 2019). Chen et al. (2020) proposed novel algorithms to improve data exchange efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation management systems. Their TBRouting algorithm efficiently finds the shortest paths for data transmission, while the Rerouting algorithm effectively handles the rerouting of topic-based session flows when a broker crashes. The combination of these algorithms can significantly improve the performance and reliability of automated irrigation management systems (Chen et al., 2020).
Client-server IoT networks, such as those based on MQTT, play a crucial role in real-time data transmission for automated irrigation management systems. In these networks, sensors and devices (clients) publish data to a central broker (server), which then distributes the data to subscribed clients (Verma et al., 2021). This architecture enables efficient data collection, processing, and dissemination, facilitating the integration of various components within the automated irrigation management pipeline. Verma et al. (2021) proposed an architecture for healthcare monitoring systems using IoT and communication protocols, which provides a comprehensive overview of existing approaches and highlights challenges and opportunities in the field. Although focused on healthcare, the insights from this study can be applied to automated irrigation management systems, emphasizing the importance of interoperability and standardization for seamless integration (Verma et al., 2021).
In addition to MQTT, other application layer protocols such as XMPP, CoAP, SOAP, and HTTP have been explored for real-time data transmission in IoT networks. Each protocol has its strengths and weaknesses, making them suitable for different applications and scenarios. XMPP (Extensible Messaging and Presence Protocol) is an open-standard protocol that supports real-time messaging, presence, and request-response services (Saint-Andre, 2011). CoAP (Constrained Application Protocol) is a specialized web transfer protocol designed for use with constrained nodes and networks in the Internet of Things (Shelby et al., 2014). SOAP (Simple Object Access Protocol) is a protocol for exchanging structured information in the implementation of web services, while HTTP (Hypertext Transfer Protocol) is the foundation of data communication for the World Wide Web (Fielding et al., 1999).
Motamedi and Villányi (2022) compared and evaluated wireless communication protocols for the implementation of smart irrigation systems in greenhouses, considering factors such as power consumption, range, reliability, and scalability. They found that ZigBee is the most suitable local communication protocol for greenhouse irrigation due to its large number of nodes and long range, while MQTT is the recommended messaging protocol for smart irrigation systems due to its TCP transport protocol and quality of service (QoS) options. GSM is a reliable and cost-effective global communication protocol for greenhouse irrigation, providing wide coverage and low cost (Motamedi & Villányi, 2022).
Syafarinda et al. (2018) investigated the use of the MQTT protocol in a precision agriculture system using a Wireless Sensor Network (WSN). They found that MQTT is suitable for use in IoT applications due to its lightweight, simple, and low bandwidth requirements. The average data transmission speed using the MQTT protocol was approximately 1 second, demonstrating its effectiveness for real-time data transmission in precision agriculture systems (Syafarinda et al., 2018).
The choice of application layer protocol for real-time irrigation management depends on factors such as data transmission speed, reliability, and energy efficiency. MQTT and RTPS (Real-Time Publish-Subscribe) are both suitable for real-time data transmission in IoT systems, but they have different strengths and weaknesses. MQTT is a better choice for applications that require low latency and high throughput, while RTPS is a better choice for applications that require high reliability and low latency (Sanchez-Iborra & Skarmeta, 2021). The exploration of MQTT and client-server IoT networks, along with the comparison of various application layer protocols, provides valuable insights into the suitability of these technologies for real-time data transmission in automated irrigation management systems.
In summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.

3.5. Challenges and Solutions in Real-Time Data Transmission
Following the exploration of data collection, processing at the edge and fog, and automation in previous sections, we now turn to the critical aspect of real-time data transmission. While essential for automated irrigation management, this stage presents unique challenges that must be addressed to ensure system efficiency and reliability.
Obstacles in Real-Time Data Transmission
Agricultural environments present unique challenges for real-time data transmission, directly impacting the effectiveness of automated irrigation systems. Environmental factors can significantly disrupt wireless communication. Adverse weather conditions such as heavy rain, fog, and high winds can weaken or even block radio signals, leading to data loss and compromised system performance. Physical obstacles like trees, buildings, and uneven terrain further complicate signal propagation, creating reliability issues (Jukan et al., 2017; Yi & Ji, 2014; Zhang, Chang & Baoguo, 2018). These environmental challenges necessitate robust communication protocols and network architectures that can ensure consistent and reliable data flow.
In addition to environmental factors, technical limitations also present significant obstacles. Large-scale agricultural operations often demand long-distance data transmission, which can be hindered by the limited range of certain wireless communication protocols. Network congestion, occurring when multiple sensors transmit data concurrently, can lead to delays and potential data loss, further complicating real-time decision-making (Hameed et al., 2020). To mitigate these issues, researchers have investigated the potential of cognitive radio networks (CRNs) and dynamic spectrum access (DSA) for optimizing spectrum utilization and reducing interference (Righi et al., 2017; Shafi et al., 2018; Trigka & Dritsas, 2022). CRNs enable devices to intelligently sense and adapt to the surrounding radio environment, dynamically adjusting transmission parameters to avoid interference and improve communication efficiency. DSA, on the other hand, facilitates the dynamic allocation of unused spectrum, enhancing spectrum utilization and reducing congestion.
Furthermore, data security and privacy are paramount concerns in real-time irrigation systems. The sensitive nature of agricultural data, such as crop yields and farm management practices, necessitates robust security measures to prevent unauthorized access and data breaches (Gupta et al., 2020). Implementing secure communication protocols, authentication mechanisms, and encryption techniques is essential to protect data integrity and ensure the trustworthiness of the system.
Investigating Data Optimization Techniques
To enhance the efficiency and reliability of real-time data transmission in automated irrigation systems, researchers have explored a range of data optimization techniques. Data compression techniques aim to reduce the size of data packets transmitted over the network, minimizing bandwidth requirements and improving transmission speed (Rady et al., 2020; Karim et al., 2023). Lossless compression algorithms, such as Huffman coding and LZW, preserve data integrity while effectively reducing data size, ensuring that no information is lost during transmission (Cui, 2023). Lossy compression algorithms, such as JPEG and MP3, offer higher compression ratios but introduce a controlled level of data loss, which may be acceptable for certain applications where some loss of precision is tolerable (Karim et al., 2023). The choice between lossless and lossy compression depends on the specific application and the trade-off between data size and accuracy.
Data aggregation techniques provide another effective approach to optimize data transmission. By aggregating multiple sensor readings into a single representative value, such as average soil moisture or temperature, the number of transmissions can be significantly reduced, conserving bandwidth and energy resources (Cui, 2023). This is particularly beneficial in large-scale irrigation systems where numerous sensors are deployed across vast areas, generating substantial amounts of data. Additionally, data filtering techniques play a crucial role in improving data quality and reliability. Kalman filters and particle filters can effectively remove noise and outliers from sensor data, ensuring that only accurate and relevant information is transmitted and used for decision-making (Cui, 2023). This is essential for preventing erroneous data from influencing irrigation decisions and potentially leading to suboptimal water management.
Sensor calibration, drift correction, and fault detection are essential for maintaining data accuracy and reliability (Dos Santos et al., 2023). Regular calibration ensures that sensors provide accurate measurements over time, while drift correction techniques account for gradual changes in sensor readings due to environmental factors or aging. Fault detection mechanisms can identify and address sensor malfunctions or anomalies, preventing erroneous data from influencing irrigation decisions and potentially harming crops or wasting water.
Addressing the Challenges
Effectively addressing the challenges in real-time data transmission requires a multifaceted approach that encompasses environmental, technical, and data-related considerations. Implementing robust and adaptive communication protocols is crucial for overcoming interference and signal degradation caused by weather conditions and physical obstacles. Selecting appropriate protocols, such as LoRa or ZigBee, with suitable range and penetration capabilities can ensure reliable data transmission in challenging agricultural environments (Motamedi & Villányi, 2022). Additionally, employing techniques like frequency hopping and error correction codes can further improve communication resilience and mitigate data loss.
Optimizing network architecture is another key consideration. Deploying a distributed network architecture with edge and fog computing capabilities can significantly enhance data processing and transmission efficiency (Abdel Nasser et al., 2020; Tran et al., 2019). Edge devices can perform initial data processing and aggregation tasks, reducing the amount of data transmitted to the cloud and minimizing latency, while fog nodes can provide additional processing power and storage closer to the data source, enhancing scalability and reliability. This distributed approach alleviates the burden on the central cloud server and allows for more responsive and efficient irrigation management.
Data optimization techniques play a vital role in reducing bandwidth requirements and improving transmission efficiency. The choice of data compression, aggregation, and filtering techniques should be tailored to the specific requirements of the irrigation system, considering factors such as data type, accuracy needs, and available bandwidth. By carefully selecting and implementing these techniques, the overall performance and effectiveness of real-time irrigation systems can be significantly enhanced, leading to more sustainable water management practices and improved agricultural productivity.
By addressing these challenges and implementing appropriate solutions, real-time data transmission can become a reliable and efficient component of automated irrigation systems, contributing to the overall goal of achieving sustainable and productive agriculture in the face of growing food demands and water scarcity.
n summary, real-time data transmission protocols and technologies play a vital role in the automation of irrigation management systems, enabling the efficient and reliable delivery of sensor data to the cloud for processing and decision-making. The exploration of MQTT and client-server IoT networks, along with the comparison of application layer protocols, highlights the importance of selecting suitable technologies based on factors such as data transmission speed, reliability, and energy efficiency. By leveraging these technologies, automated irrigation management systems can achieve seamless integration and contribute to the overall goal of enhancing agricultural water use efficiency and crop productivity.


</previous_sections>

</documents>
<instructions>


Use the information provided in the <documents> tags to write the next subsection of the research paper, following these steps:
1. Review the overall intention of the research paper, specified in the <review_intention> tag. Ensure the subsection you write aligns with and contributes to this overall goal.
2. Consider the specific intention for this subsection of the paper, stated in the <section_intention> tag. The content you write should fulfill this purpose. 
3. Use the title provided in the <subsection_title> tag as the heading for the subsection. 
4. Address each of the points specified in the </subsection_point_Point *> tags:
   a) Make a clear case for each point using the text provided in the "point" field.
   b) Support each point with evidence from the research papers listed in the corresponding "papers to support point" field.
   c) When citing a paper to support a point, include inline citations with the author name(s) and year, e.g. (Smith et al., 2020; Johnson and Lee, 2019; Brown, 2018). Cite all papers that strengthen or relate to the point being made.
   d) While making a point and citing the supporting papers, provide a brief explanation in your own words of how the cited papers support the point.
5. Ensure that both of the points from the <subsection_point> tags are fully addressed and supported by citations. Do not skip or combine any points.
6. After addressing the specified points, wrap up the subsection with a concluding sentence or two that ties the points together and relates them back to the <section_intention>.
7. Review the <Previous_sections> of the paper, and ensure that the new subsection you have written fits logically and coherently with the existing content. Add transition sentences as needed to improve the flow.
8. Proofread the subsection to ensure it is clear, concise, and free of grammatical and spelling errors. Maintain a formal academic tone and style consistent with the rest of the research paper.
9. Format the subsection using Markdown, including the subsection heading (using ## or the equivalent for the document), inline citations, and any other formatting needed for clarity and readability.
10. If any information is missing or unclear in the provided tags, simply do your best to write the subsection based on the available information. Do not add any information or make any points not supported by the provided content. Prioritize fully addressing the required points over hitting a specific word count.

The output should be a complete, well-organized, and properly cited subsection ready to be added to the research paper.

Begin your answer with a brief recap of the instructions stating what you will to optimize the quality of the answer. Clearly and briefly state the subsection you'll be working on and the points you'll be addressing. Then proceed to write the subsection following the instructions provided. 

Critical: 
- Do not include a conclusion or summary as the entry is in the middle of the document. Focus on addressing the points and supporting them with evidence from the provided papers. Ensure that the subsection is well-structured, coherent, and effectively contributes to the overall research paper.
- The subsection we are focusing on is: 3.6. IoT Network Architectures and Variable Rate Irrigation (VRI) for Real-Time Irrigation
- No need for sub-sub-sections. just provide paragraphs addressing each point. They should transition fluidly and narurally into each other.
- Ensure that the content is supported by the provided papers and that the citations are correctly formatted and placed within the text.
- Do not repeat content from the previous sections. Ensure that the information provided is new and relevant to the subsection being written.



</instructions>

