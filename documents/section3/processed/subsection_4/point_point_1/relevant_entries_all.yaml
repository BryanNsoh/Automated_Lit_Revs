- DOI: https://doi.org/10.3390/s19184038
  analysis: '>'
  apa_citation: Author, A. (2019). Multi-Layer IoT Security Framework for Ambient
    Intelligence Environments. Sensors, 19(18), 4038. https://doi.org/10.3390/s19184038
  authors:
  - Ion Bica
  - Bogdan-Cosmin Chifor
  - Ștefan-Ciprian Arseni
  - Ioana Matei
  citation_count: 7
  data_sources: Not explicitly mentioned
  explanation: 'The paper you provided addresses the need for a real-time data transmission
    protocol for automated IoT systems that can handle the growing demand for data
    in healthcare applications. It proposes MQTT as a suitable protocol, citing its
    support for QoS and lightweight nature. Here is the key point of the paper that
    is relevant to your review:


    * MQTT is a good choice for real-time data transmission in automated IoT systems
    for healthcare applications because it supports QoS and is lightweight.'
  extract_1: 'Considering these requirements, we adopted an MQTT-based publish/subscribe
    messaging protocol for our system.

    MQTT [19] is an ISO standard publish/subscribe messaging transport protocol.'
  extract_2: MQTT provides three QoS levels, which makes it suitable for real-time
    scenarios where data reliability is required.
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nMulti-Layer IoT Security Framework for Ambient\n\
    Intelligence Environments\nIon Bica *, Bogdan-Cosmin Chifor, S, tefan-Ciprian\
    \ Arseni\nand Ioana Matei\nFaculty of Information Systems and Cyber Security,\
    \ “Ferdinand I” Military Technical Academy, 050141\nBucharest, Romania; bogdan.chifor@mta.ro\
    \ (B.-C.C.); stefan.arseni@mta.ro (S.-C.A.); ioana.matei@mta.ro (I.M.)\n* Correspondence:\
    \ ion.bica@mta.ro\nReceived: 5 August 2019; Accepted: 17 September 2019; Published:\
    \ 19 September 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\
    \x06\a\nAbstract: Ambient intelligence is a new paradigm in the Internet of Things\
    \ (IoT) world that brings\nsmartness to living environments to make them more\
    \ sensitive; adaptive; and personalized to human\nneeds. A critical area where\
    \ ambient intelligence can be used is health and social care; where it\ncan improve\
    \ and sustain the quality of life without increasing ﬁnancial costs. The adoption\
    \ of this\nnew paradigm for health and social care largely depends on the technology\
    \ deployed (sensors and\nwireless networks), the software used for decision-making\
    \ and the security, privacy and reliability\nof the information. IoT sensors and\
    \ wearables collect sensitive data and must respond in a near\nreal-time manner\
    \ to input changes. An IoT security framework is meant to oﬀer the versatility\
    \ and\nmodularization needed to sustain such applications. Our framework was designed\
    \ to easily integrate\nwith diﬀerent health and social care applications, separating\
    \ security tasks from functional ones and\nbeing designed with independent modules\
    \ for each layer (Cloud, gateway and IoT device), that oﬀer\nfunctionalities relative\
    \ to that layer.\nKeywords: IoT; security framework; remote attestation; packet\
    \ ﬁltering; trust management\n1. Introduction\nEven if it is a relatively new\
    \ concept, the Internet of Things (IoT) opens perspectives that can change\nthe\
    \ way we interact, not only with each other but also with the environment surrounding\
    \ us. IoT is\nan emerging ﬁeld that has received a lot of attention from many\
    \ industries, allowing the development\nof applications for automotive, transport,\
    \ telecommunication or ambient intelligence. Beyond the\ntempting facilities that\
    \ IoT solutions oﬀer, the innovation aspects are more enlightening in ambient\n\
    intelligence. In this area, IoT applications address optimization, eﬃciency or\
    \ ease-of-use issues, and\ndevices work in order to support people in carrying\
    \ out their everyday life activities. IoT devices can\nprovide an approach that\
    \ enables older people or people with disabilities to live in a more autonomous\n\
    and personalized ambient, increasing their independence and enabling them to solve\
    \ certain routine\nprocedures on their own, positively inﬂuencing the quality\
    \ of their living standards.\nIn ambient intelligence applications, data from\
    \ sensors provides important information about\nthe current state of the environment,\
    \ and in order to make the right decisions, data must be accurate.\nBut as in\
    \ any IoT system, there may appear irregularities in data accuracy. False positives,\
    \ abnormal\nvalues or misinterpretations can occur due to sensors nature, hardware\
    \ faults, compromised nodes,\nelectromagnetic interference, etc. Therefore, to\
    \ prevent these problems, it is necessary to implement\na solution capable of\
    \ ﬁltering out abnormal measurements so that diﬀerentiation between node defects\n\
    and the real situations that require the immediate involvement of specialized\
    \ personnel, can be made.\nThere are ambient intelligence applications that require\
    \ high security measures due to the critical\nnature of the sensed information,\
    \ especially when taking into consideration the healthcare context\n(e.g., medical\
    \ information). Traditional security methods are diﬃcult to implement in this\
    \ case because\nSensors 2019, 19, 4038; doi:10.3390/s19184038\nwww.mdpi.com/journal/sensors\n\
    Sensors 2019, 19, 4038\n2 of 20\nan IoT application usually consists of diﬀerent\
    \ interconnected hardware (resource constrained) and\nsoftware components from\
    \ multiple vendors which raise many issues. Considering this context, there\n\
    are many particularities that need to be addressed by a security solution: a large\
    \ number of devices,\neach with its unique capability and purpose, ad-hoc connections,\
    \ increased diﬃculty in managing\nthe entire system and diﬀerent methods through\
    \ which devices interact with consumers (humans or\nother systems). In health\
    \ and social care applications that process sensitive data, security and privacy\n\
    measures must be implemented without aﬀecting service eﬃciency. Thus, a feasible\
    \ security solution\nneeds to implement protection mechanisms at all layers of\
    \ the IoT system (e.g., devices, gateways,\nCloud), while still allowing uninterrupted\
    \ and transparent communications between these layers.\nTo develop an ambient\
    \ intelligence application, one can use an existing IoT platform, such as AWS\n\
    IoT from Amazon, ARM Bed from ARM and other partners, Azure IoT Suite from Microsoft,\
    \ Brillo/Weave\nfrom Google, Calvin from Ericsson, HomeKit from Apple, Kura from\
    \ Eclipse, or SmartThings from\nSamsung. These platforms allow rapid application\
    \ development and support a broad range of sensors\nand wearables. In addition,\
    \ each platform encapsulates standard security mechanisms like authentication,\n\
    authorization, access control, and secure communication, as presented in [1].\
    \ However, important\nsecurity challenges required by critical IoT applications,\
    \ including health and social care ones, are not\nhandled by these platforms.\
    \ Data anomaly detection, remote attestation or packet filtering are issues that\n\
    need to be addressed to be able to mitigate complex attacks.\nIn this paper, we\
    \ propose a security framework that tackles these challenges, bringing improvements\n\
    to ambient intelligence applications, with emphasis on the health and social care\
    \ monitoring. To achieve\nthis, the proposed framework consists of interconnected\
    \ modules that are integrated at each of the\nmain layers of an IoT system: Cloud,\
    \ gateway, and device. The framework is built on a customized\ndecentralized architecture,\
    \ empowering middle-layer devices, such as gateways, while having a central\n\
    point of management through a Cloud platform. The framework’s key components are\
    \ presented in the\nremaining sections of the paper, which has the following structure.\
    \ Section 2 presents the related work\nbeing done in this domain. In Section 3\
    \ we describe the proposed security framework, while in Section 4\nwe present\
    \ the tests and analyses we have done on the framework modules. Section 5 ends\
    \ the paper\nwith conclusions and future research directions.\n2. Related Work\n\
    The proposal made in [2] consists of a layered architecture of an IoT system and\
    \ aspects of\nhardware and software design. At the same time, several areas of\
    \ application of the proposed model\nsuch as smart cities, agriculture or healthcare,\
    \ have been outlined. In [3], the authors have studied the\nstate-of-the-art for\
    \ IoT and pointed out that there are two important issues to be taken into account\n\
    when designing an IoT system: the privacy of the people and the conﬁdentiality\
    \ of the services and\nprocesses. In order to prevent these problems, it is necessary\
    \ to design an architecture tailored to the\npurpose of the project, then to adopt\
    \ a security framework that meets the requirements of privacy\nand conﬁdentiality.\n\
    A complex IoT system is characterized by a large number of heterogeneous devices\
    \ that need\nto be managed and have their data properly collected and processed.\
    \ This means that the data must\nbe analyzed and ﬁltered in order to identify\
    \ the compromised nodes and to detect anomalies of the\nrecorded data. Anomaly\
    \ detection is a resource-consuming process, meaning that it must be made at\n\
    the gateway or cloud layer given that the nodes have a low power processor and\
    \ are based on low\npower consumption. There are many ways proposed by researchers\
    \ to detect data anomalies: machine\nlearning, recurrent calculation, statistical\
    \ calculation, decision trees [4], but catching the abnormality\ndata becomes\
    \ even more diﬃcult when there is a chance of communication errors or some intentional\n\
    injection of malicious data by an attacker.\nA considerable eﬀort has been made\
    \ by the research and industry communities, in presenting\ngeneric IoT frameworks,\
    \ such as Internet of Things Architecture (IoT-A) [5] or Core Platform of the\n\
    Future Internet (FiWARE) [6] for solving the above mentioned problems. Whilst\
    \ the second framework,\nSensors 2019, 19, 4038\n3 of 20\nFiWARE, implements a\
    \ “security-by-design” paradigm with generic components (such as monitoring,\n\
    identity, and conﬁdentiality management, context security or secure storage),\
    \ the ﬁrst one, IoT-A,\nproposes a trust model that considers the following security\
    \ aspects:\n•\nTrust domains—an IoT device can collect data from diﬀerent domains;\n\
    •\nTrust evaluation mechanisms—a device reputation is calculated based on direct\
    \ observations or\nby querying neighboring IoT devices/gateways;\n•\nBehavior\
    \ analysis policies—shape the interaction between two IoT devices, based on their\n\
    reputation levels;\n•\nTrust anchor—an entity with the highest reputation, trusted\
    \ by all devices in the IoT system;\n•\nTrust federalization—delegate the trust\
    \ evaluation mechanism to another entity, in order to\nensure interoperability.\n\
    Another security framework designed for unattended environments to control nodes\
    \ that have\naccess to the network is presented in [7]. The access control is\
    \ based on administrative approval in\norder to ensure compliance with deﬁned\
    \ security rules. In a network intended to monitor the functions\nof the human\
    \ body and the environment, the information that transits the network is life-critical.\n\
    So there is a need to deploy security mechanisms for preventing malicious attacks.\
    \ The basis for these\nis to deﬁne the standards and protocols used to enhance\
    \ data security. A signiﬁcant improvement has\nbeen seen in the IEEE 802.15.4\
    \ and is broadly explained in [8].\nRegardless of what framework an IoT system\
    \ is built upon, the large number of integrated devices\ntransforms the notions\
    \ of trust in collected information and the reputation of IoT devices into two\
    \ key\nconcepts [9]. These two concepts are also directly linked: depending on\
    \ the devices’ reputation, data\ncollected from it is tagged with a speciﬁc level\
    \ of trust by a user. In health and social care applications,\ndata cannot be\
    \ assessed anymore as simple environmental data, without any reference to a person’s\n\
    habits; instead, it needs to be split into diﬀerent categories, according to their\
    \ origin and future use\n(e.g., data collected from Personal Area Networks (PAN)\
    \ [10] or Body Area Networks (BAN) [11] needs\neither to be processed locally\
    \ or to be anonymized before being sent in Cloud and the users need to\nhave full\
    \ control of it, while environmental data can be sent and processed remotely without\
    \ the need\nof applying the same level of ﬁltering as in the previous case). Thus,\
    \ in these types of applications,\ntrust is not only a characteristic of data\
    \ read from sensors and their reputation, but it becomes also\na requirement for\
    \ the functioning of the entire IoT environment (users need not only to trust\
    \ received\ndata but also to trust the way the system manipulates that data, before\
    \ and after it is being presented to\nthem). This second “level” of trust can\
    \ be achieved through security mechanisms that ensure privacy\nand protection\
    \ of data throughout the entire lifecycle of that data. Returning to the link\
    \ between the\nﬁrst “level” of trust and reputation of nodes, as stated at the\
    \ beginning of this paragraph, the notion of\nreputation can be used to deﬁne\
    \ the resulting value of the process of assessing IoT devices based on\ntheir\
    \ behavior features, such as: transaction history, reliability of established\
    \ communication links\nor quality of sent data. Each one of these features impacts\
    \ the way an IoT device (a node in the IoT\nnetwork) is perceived by other nodes.\
    \ An IoT device trustworthiness impacts directly the connections\nwith other devices:\
    \ data published by a device with a low reputation score has a low probability\
    \ of\nbeing consumed. Thus, a malicious node introduced in the IoT system would\
    \ be detected through its\nbehavior, no matter when an attack is launched. Considering\
    \ this capability, many models for assessing\nthe reputation level of a node have\
    \ been proposed, based on diﬀerent mathematics, physics or other\naspects, such\
    \ as Bayesian [12], subjective logic [13], entropy [14,15] or biological elements\
    \ [16,17]. Even\nthough the concept of a reputation assessment model can be for\
    \ a variety of domains, authors in [18,19]\nhave highlighted ﬁve essential stages\
    \ that a reputation-based architecture needs to have built-in:\n•\nData collection—query\
    \ the node or its neighbors for behavioral information;\n•\nScoring and reputation\
    \ level assessment—reputation score of a node is calculated based on\na reputation\
    \ assessment model (one of those described before or a similar one);\nSensors\
    \ 2019, 19, 4038\n4 of 20\n•\nNodes selection—valid nodes can consider data rerouting,\
    \ based on updated reputation scores of\ntheir neighboring nodes;\n•\nTransaction\
    \ execution—after a data transfer is ﬁnished, a transaction is considered executed,\
    \ then\nthe user can give it a score;\n•\nUpdating the reputation level of a node—based\
    \ on the users’ score, nodes can be “rewarded” or\n“punished”, aﬀecting their\
    \ reputation.\n•\nFurthermore, authors in [20] emphasize several characteristics\
    \ that must be considered before\nintegrating security features based on reputation\
    \ in an IoT system architecture:\n•\nUsers’ partiality in scoring nodes;\n•\n\
    Possible transitivity of reputation across a trust chain;\n•\nInitial context\
    \ in which primary trust relations are deﬁned (based on given reputation scores).\n\
    Extending the applications commonly found in an IoT system, the authors in [21]\
    \ propose the\ndeployment of a reputation solution for evaluating data presented\
    \ by devices in a participatory\nsensing environment. Given the dynamic nature\
    \ of this sensing environment, the adaptivity of\na reputation-based evaluation\
    \ architecture is another advantage and a desired characteristic.\nAlthough these\
    \ reputation-based security mechanisms can bring improvements in the overall\n\
    security of an IoT system, they are not protected against some classic attack\
    \ methods that can be\nadapted to work in a reputation-assessing architecture.\
    \ Such examples of attacks are mentioned in [20].\nTo counter these possible problems\
    \ the IoT architecture needs to have regular security mechanisms\nintegrated,\
    \ such as Transport Layer Security (TLS) / Datagram Transport Layer Security (DTLS)\n\
    communications, authentication and Access Control Lists (ACL). Another issue with\
    \ reputation-based\nsecurity mechanisms is the overhead in power consumption,\
    \ given the additional computations needed\nto evaluate the reputation for each\
    \ node. One direction for assessing the impact of this issue in the\noverall performance\
    \ of an IoT system is the modeling of energy consumption in sensor networks\n\
    using stochastic Petri networks (SPNs), as presented in [22]. This approach can\
    \ give a prediction of\npower consumption, thus enabling gateways to adjust the\
    \ computations required by the reputation\nevaluation algorithm, at diﬀerent levels\
    \ of battery power.\n3. Proposed IoT Security Framework\nThe design of a security\
    \ framework for ambient intelligence environments should be based on\na modular\
    \ architecture that allows scalability, given that IoT networks are widely adopted\
    \ today.\nIn the beginning, a typical context of ambient intelligence was homes,\
    \ and over time it expanded to\nworkspaces, public spaces and hospital environments.\
    \ The proposed framework has a multi-level\nstructure and includes at each level\
    \ (node, gateway, and Cloud) a component mandated to monitor\nand act independently\
    \ if the module is prone to attacks. The architecture presented in the following\n\
    subsections is based on the classic centralized model but introduces decentralized\
    \ architecture elements\nby using the gateway as a key element. This is because\
    \ all nodes have a single communication link\nwhich implies that any connection\
    \ with another node will be monitored and managed by the gateway,\nthus allowing\
    \ the local control of the resources, with the Cloud module acting as a supervisor.\n\
    An important feature that must be provided by an IoT security framework in the\
    \ ambient\nintelligence applications consists of a secure infrastructure that\
    \ allows the data transmission from the\nend-point sensors to the cloud services.\
    \ Also, an IoT security framework must oﬀer the infrastructure\nfor additional\
    \ services, like sensor anomaly detection which is critical in the healthcare\
    \ context. Our\nproposed framework oﬀers the support for running an anomaly detection\
    \ algorithm on the gateway\nside, in order to detect sensor data anomalies in\
    \ a real time manner, thus satisfying the requirements of\na healthcare application.\
    \ Moreover, the gateway element in our system processes requests for two data\n\
    categories in order to address various ambient environment applications: critical\
    \ healthcare data which\nmust be processed immediately and environment context\
    \ data which is not critical, but which can\nlead to better knowledge about the\
    \ persons’ health state. Given the importance of the gateway in our\nSensors 2019,\
    \ 19, 4038\n5 of 20\nsystem, we implemented a low cost Denial of Service (DoS)\
    \ mitigation solution which assures another\nimportant requirement of an ambient\
    \ intelligence environment application: the system availability.\nAs presented\
    \ in Figure 1, the proposed solution integrates various security components at\
    \ all\nlevels of the IoT system. The interaction of diﬀerent security modules\
    \ is ensured by establishing a trust\nrelationship based on the authentication\
    \ mechanism. The IoT security framework allows establishing\nthese trust relationships\
    \ using X.509 digital certiﬁcates, asymmetric keys or pre-shared symmetric\nkeys,\
    \ depending on the constraints of the devices involved. In addition to this, the\
    \ solution includes\nan anomaly detection module by which node behavior is observed\
    \ and quantiﬁed at the gateway level\nto create a more trustworthy system.\nSensors\
    \ 2019, 19, x FOR PEER REVIEW \n5 of 20 \n \ndata which is not critical, but which\
    \ can lead to better knowledge about the persons’ health state. \nGiven the importance\
    \ of the gateway in our system, we implemented a low cost Denial of Service \n\
    (DoS) mitigation solution which assures another important requirement of an ambient\
    \ intelligence \nenvironment application: the system availability. \nAs presented\
    \ in Figure 1, the proposed solution integrates various security components at\
    \ all \nlevels of the IoT system. The interaction of different security modules\
    \ is ensured by establishing a \ntrust relationship based on the authentication\
    \ mechanism. The IoT security framework allows \nestablishing these trust relationships\
    \ using X.509 digital certificates, asymmetric keys or pre-shared \nsymmetric\
    \ keys, depending on the constraints of the devices involved. In addition to this,\
    \ the \nsolution includes an anomaly detection module by which node behavior is\
    \ observed and quantified \nat the gateway level to create a more trustworthy\
    \ system. \n \nFigure 1. The architecture of the proposed security framework.\
    \ \n3.1. Cloud Layer \nAs we mentioned before, the feature that links our proposed\
    \ security framework with other \ncentralized IoT systems is the Cloud module\
    \ that acts as an access point for users to connect to \ndifferent services and\
    \ as a management module for the underlying IoT system, but with reduced \ncapabilities.\
    \ The Proposed Cloud Platform (PCP) was not designed as a replacement for the\
    \ Existing \nCloud Platforms (ECP), but as a security “complement” for them, adding\
    \ additional features to \nenforce control over devices (behavior and data). Data\
    \ is exchanged between these two Cloud \nplatforms by means of APIs exposed by\
    \ the ECP. In this manner, we ensure that data coming from \ngateways is filtered\
    \ so that the ECP does not receive corrupted information and that users obtain\
    \ the \ncorrect results when accessing services. Thus, the first functionality\
    \ from the reduced set that the \nPCP implements is to be an element of overseeing\
    \ and enforcing specific security rules and policies, \nmeant to limit the infusion\
    \ of malicious data due to a rogue gateway. Aside from filtering traffic \nflows,\
    \ the PCP acts also as a service discovery module for the gateway and devices\
    \ layers, by \naggregating services available on different ECPs. As a mention,\
    \ the services that are aggregated by \nthe PCP are services that are allowed\
    \ by the administrators of the IoT environment and the \nunderlying devices can\
    \ be linked to. By ensuring this service, data collected inside the IoT system\
    \ is \navailable to other IoT systems. Still, the PCP monitors and secures these\
    \ connections, enforcing the \nrules of access control defined at the moment of\
    \ establishing connections with these “exterior” \nservices. Being a policy enforcement\
    \ point, the PCP permits the traffic flow, from end-point IoT \ndevices, only\
    \ to secure upper layer services (legitimate ECP entities). \nBy being a central\
    \ hub where different gateways interconnect, the PCP has mechanisms of \nensuring\
    \ secure communication links between gateways and itself or between users and\
    \ the services \nFigure 1. The architecture of the proposed security framework.\n\
    3.1. Cloud Layer\nAs we mentioned before, the feature that links our proposed\
    \ security framework with other\ncentralized IoT systems is the Cloud module that\
    \ acts as an access point for users to connect to\ndiﬀerent services and as a\
    \ management module for the underlying IoT system, but with reduced\ncapabilities.\
    \ The Proposed Cloud Platform (PCP) was not designed as a replacement for the\
    \ Existing\nCloud Platforms (ECP), but as a security “complement” for them, adding\
    \ additional features to enforce\ncontrol over devices (behavior and data). Data\
    \ is exchanged between these two Cloud platforms by\nmeans of APIs exposed by\
    \ the ECP. In this manner, we ensure that data coming from gateways is\nﬁltered\
    \ so that the ECP does not receive corrupted information and that users obtain\
    \ the correct results\nwhen accessing services. Thus, the ﬁrst functionality from\
    \ the reduced set that the PCP implements\nis to be an element of overseeing and\
    \ enforcing speciﬁc security rules and policies, meant to limit\nthe infusion\
    \ of malicious data due to a rogue gateway. Aside from ﬁltering traﬃc ﬂows, the\
    \ PCP\nacts also as a service discovery module for the gateway and devices layers,\
    \ by aggregating services\navailable on diﬀerent ECPs. As a mention, the services\
    \ that are aggregated by the PCP are services that\nare allowed by the administrators\
    \ of the IoT environment and the underlying devices can be linked\nto. By ensuring\
    \ this service, data collected inside the IoT system is available to other IoT\
    \ systems.\nStill, the PCP monitors and secures these connections, enforcing the\
    \ rules of access control deﬁned at\nthe moment of establishing connections with\
    \ these “exterior” services. Being a policy enforcement\npoint, the PCP permits\
    \ the traﬃc ﬂow, from end-point IoT devices, only to secure upper layer services\n\
    (legitimate ECP entities).\nBy being a central hub where diﬀerent gateways interconnect,\
    \ the PCP has mechanisms of\nensuring secure communication links between gateways\
    \ and itself or between users and the services\nSensors 2019, 19, 4038\n6 of 20\n\
    it is conﬁgured to oﬀer. The security tokens needed to authenticate and authorize\
    \ both users and\ngateways are manually provided by an administrator, in the management\
    \ interface of the PCP.\nBesides these active tasks that employ the use of the\
    \ PCP in diﬀerent scenarios of an IoT\nenvironment, the PCP is mostly a passive\
    \ component. This is because the main idea behind our PCP is\nit to act as a repository\
    \ integrating two main functionalities:\n•\na central point where anomaly detection\
    \ data and graphs created by gateways can converge and\noﬀer an integrated overview\
    \ of the IoT environment;\n•\na storage location in which valuable data (working\
    \ data) gathered by the gateways can be pushed.\nThis data is being stored in\
    \ diﬀerent areas, depending on the type of information it contains:\n#\nenvironmental\
    \ data accessible to every requesting service;\n#\nhistorical data needed for\
    \ reassessing the level of trust and reputation of each collector\nnode or sensor;\n\
    #\nprivacy-aware data consisting of information related to an individual or his\
    \ habits. This\ntype of data has also assigned a certain tag, speciﬁc to each\
    \ individual, as presented later\nin the paper.\nThis repository is a central\
    \ database that stores information provided by gateways that also query\nand update\
    \ this information based on their authorization levels. By querying this repository,\
    \ gateways\ncan correctly choose trusted links to enable connections between IoT\
    \ devices from areas that are distinct,\nbut connected in the same IoT system,\
    \ as presented in Figure 2.\nSensors 2019, 19, x FOR PEER REVIEW \n6 of 20 \n\
    \ \nit is configured to offer. The security tokens needed to authenticate and\
    \ authorize both users and \ngateways are manually provided by an administrator,\
    \ in the management interface of the PCP. \nBesides these active tasks that employ\
    \ the use of the PCP in different scenarios of an IoT \nenvironment, the PCP is\
    \ mostly a passive component. This is because the main idea behind our PCP \n\
    is it to act as a repository integrating two main functionalities: \n• \na central\
    \ point where anomaly detection data and graphs created by gateways can converge\
    \ and \noffer an integrated overview of the IoT environment; \n• \na storage location\
    \ in which valuable data (working data) gathered by the gateways can be \npushed.\
    \ This data is being stored in different areas, depending on the type of information\
    \ it \ncontains: \no  environmental data accessible to every requesting service;\
    \ \no  historical data needed for reassessing the level of trust and reputation\
    \ of each collector node \nor sensor; \no  privacy-aware data consisting of information\
    \ related to an individual or his habits. This \ntype of data has also assigned\
    \ a certain tag, specific to each individual, as presented later in \nthe paper.\
    \ \nThis repository is a central database that stores information provided by\
    \ gateways that also \nquery and update this information based on their authorization\
    \ levels. By querying this repository, \ngateways can correctly choose trusted\
    \ links to enable connections between IoT devices from areas \nthat are distinct,\
    \ but connected in the same IoT system, as presented in Figure 2. \n \nFigure\
    \ 2. The architecture of the proposed Cloud platform. \nAt this stage, the PCP\
    \ is enabled only to store the above mentioned types of data and ensure \nsecure\
    \ access to it, without having the means of manipulating it. Still, if a certain\
    \ degree of trust is \nensured from the moment when the IoT environment is created\
    \ and configured, the PCP could be \nextended to support methods of data integration\
    \ and update, leading to the creation of a uniformed \ngraph of anomalies detected\
    \ across the entire IoT system. Even though this might bring an \nadvantage in\
    \ having an integrated overview of the devices’ anomaly detection characteristics,\
    \ it \nimplies also the use of the same or similar anomaly detection algorithms\
    \ in each gateway, thus \nsimilar hardware configurations (easy to comply within\
    \ a newly created IoT system, but harder in \none that is updating an existing\
    \ IoT environment). \nFigure 2. The architecture of the proposed Cloud platform.\n\
    At this stage, the PCP is enabled only to store the above mentioned types of data\
    \ and ensure\nsecure access to it, without having the means of manipulating it.\
    \ Still, if a certain degree of trust is\nensured from the moment when the IoT\
    \ environment is created and conﬁgured, the PCP could be\nextended to support\
    \ methods of data integration and update, leading to the creation of a uniformed\n\
    graph of anomalies detected across the entire IoT system. Even though this might\
    \ bring an advantage\nin having an integrated overview of the devices’ anomaly\
    \ detection characteristics, it implies also\nthe use of the same or similar anomaly\
    \ detection algorithms in each gateway, thus similar hardware\nSensors 2019, 19,\
    \ 4038\n7 of 20\nconﬁgurations (easy to comply within a newly created IoT system,\
    \ but harder in one that is updating\nan existing IoT environment).\n3.2. Gateway\
    \ Layer\nEven though there are diﬀerent models of IoT networks, gateway-centric\
    \ is one of the most\nemployed for health and social care applications.\nOne of\
    \ the main advantages brought by the\ngateway-centric model is that it consists\
    \ of a central device that implements logic to coordinate the\nIoT sensors. From\
    \ the cost perspective, having a gateway-centric network allows deploying a ﬂeet\
    \ of\nsensors with limited capabilities, given the fact that the gateway can be\
    \ used to oﬄoad both security\nand data processing functions. The gateway is the\
    \ element that links the end-point network segment\nwith the upstream network\
    \ elements, executes translation from lightweight to classic communication\nprotocols\
    \ or executes various security tasks like authentication, authorization and access\
    \ control or\npacket ﬁltering. The gateway can also act as a network access server\
    \ on various layers: the gateway\ncan execute a Layer 2 Extensible Authentication\
    \ Protocol (EAP) authentication, a Message Queuing\nTelemetry Transport (MQTT)\
    \ user/password based authentication or a custom authentication protocol\ntransported\
    \ as Constrained Application Protocol (CoAP) payload. IoT gateways do not have\
    \ the same\ncomputational constraints as the end-point IoT devices, thus being\
    \ suitable for oﬄoading certain\nresource intensive tasks from the low-end devices,\
    \ like security operations. Having a gateway-centric\nmodel also brings a series\
    \ of advantages in the overall IoT network economics, by reducing the latency\n\
    required to process IoT delivered data (real-time applications) and reducing the\
    \ traﬃc between the\nsensors and the Cloud back-end.\nBeing a central IoT network\
    \ element, gateways need adequate protection mechanisms against\nsophisticated\
    \ DoS attacks in order to provide the network availability and to satisfy real-time\
    \ constraints.\nTaking advantage of the IoT gateway capabilities, various architectures\
    \ transform this device into\na multi-tenant application hypervisor. For instance,\
    \ the gateway can run an MQTT broker application\nor a CoAP client which aggregates\
    \ data from multiple sensors.\nThe gateway plays a central role in our IoT security\
    \ framework, having two main tasks:\nimplementing a sensor anomaly detection module\
    \ and a mechanism for an advanced network\npacket ﬁltering. The previously mentioned\
    \ IoT gateway tasks stress the necessity of implementing\na security control plane\
    \ that allows the end-point IoT devices to transmit and receive the sensor\nanomaly\
    \ status and packet ﬁltering related commands and data.\nThearchitectureoftheproposedsecurityframeworkconsistsofagatewayandasuiteofIoTend-point\n\
    devices that enable security as a service structure. The security control plane\
    \ between the end-point\ndevices and the gateway consists of a publish-subscribe\
    \ protocol, which allows an energy-efficient\nasynchronous communication path\
    \ from the gateway to the nodes. The sensor anomaly detection control\nplane consists\
    \ of the following commands: publish data and acquire the anomaly status. The\
    \ gateway\nprocesses the anomaly detection requirement commands and executes the\
    \ associated actions on the Cloud\nplatform side. When the IoT nodes are acquiring\
    \ data, the gateway parses the published information\nfrom the Cloud platform,\
    \ it runs a sensor anomaly detection algorithm and delivers the status to the\
    \ IoT\ndevices. The sensor anomaly detection module has the following elements:\n\
    •\nThe sub-module which is in charge of securing the communication between the\
    \ gateway and the\nCloud platform;\n•\nThe sub-module which secures the communication\
    \ between the IoT end-nodes and the gateway;\n•\nThe sub-module which computes\
    \ the IoT sensor anomaly status.\nIn this security scheme, the Cloud platform\
    \ has the role of a sensor data repository, storing\nthe IoT published data. The\
    \ calculation of anomaly status is executed locally, on the gateway side,\nthe\
    \ Cloud module being a passive element which does not allow any data modiﬁcation\
    \ after the publish\nevent. The proposed IoT security framework employs a sensor\
    \ anomaly detection algorithm module\nwith a well-deﬁned interface. Thus, the\
    \ security framework abstracts the actual anomaly algorithm\nSensors 2019, 19,\
    \ 4038\n8 of 20\nimplementation, oﬀering only a plug-in module which allows running\
    \ any type of anomaly detection\nalgorithm. The security framework acts as a software\
    \ container that injects in a custom anomaly\ndetection algorithm implementation\
    \ the input data collected from the Cloud platform. By adding\na generic sensor\
    \ anomaly detection algorithm support, the IoT security framework addresses the\n\
    speciﬁc requirements of each deployment scenario.\nEven though the IoT gateway\
    \ is not a device with major resource constraints, the power\nconsumption should\
    \ be taken into consideration when running a sensor anomaly detection algorithm.\n\
    In order to address this issue, we propose a Stochastic Petri Network (SPN) model\
    \ of the gateway\npower consumption. This is an abstract model that indicates\
    \ the number of times the gateway ﬁnite\nstate machine enters a generic Process\
    \ and Sleep state. In contrast to a ﬁnite state machine model\nwhich comprises\
    \ states and conditions which must be satisﬁed to transition from one state into\
    \ another,\nan SPN model consists of transitions, which are ﬁred following a stochastic\
    \ paradigm, and states\n(places) which hold the system resources. In our gateway\
    \ model, the resources consist of requests\nreceived by the gateway (real time/critical\
    \ requests and best eﬀort requests which are held in the Queue,\nReal-time queue\
    \ and Best-eﬀort queue states) and execution resources (which are transitioned\
    \ between\nthe Process and Sleep states).\nThe SPN model has two main purposes:\
    \ limiting the sensor anomaly computing tasks when the\ngateway has a low battery\
    \ level and predicting the power consumption. More specifically, we propose\n\
    an SPN API that allows a developer to translate a power consumption formal model\
    \ into a software\nmodule that can be deployed on the gateway. As we have already\
    \ shown in [23], an SPN model can\nbe used to estimate the power consumption of\
    \ an IoT gateway. By using the SPN model, the gateway\nadministrator can make\
    \ a prediction regarding the power consumption based on the network traffic\n\
    characteristics (e.g., number of requests per time interval). This can help in\
    \ planning the IoT network\ngateway provisioning and estimating maintenance operations.\
    \ By having this planning, an administrator\ncan further estimate the costs associated\
    \ with running and maintaining security and network functions\non edge IoT gateways.\
    \ The proposed SPN power consumption model is a generic framework whose\noutput\
    \ depends on the actual anomaly detection algorithm and on the underlying hardware\
    \ platform.\nAn example of an SPN reputation power consumption model is depicted\
    \ in Figure 3.\nSensors 2019, 19, x FOR PEER REVIEW \n8 of 20 \n \nadding a generic\
    \ sensor anomaly detection algorithm support, the IoT security framework addresses\
    \ \nthe specific requirements of each deployment scenario. \nEven though the IoT\
    \ gateway is not a device with major resource constraints, the power \nconsumption\
    \ should be taken into consideration when running a sensor anomaly detection \n\
    algorithm. In order to address this issue, we propose a Stochastic Petri Network\
    \ (SPN) model of the \ngateway power consumption. This is an abstract model that\
    \ indicates the number of times the \ngateway finite state machine enters a generic\
    \ Process and Sleep state. In contrast to a finite state \nmachine model which\
    \ comprises states and conditions which must be satisfied to transition from \n\
    one state into another, an SPN model consists of transitions, which are fired\
    \ following a stochastic \nparadigm, and states (places) which hold the system\
    \ resources. In our gateway model, the resources \nconsist of requests received\
    \ by the gateway (real time/critical requests and best effort requests which \n\
    are held in the Queue, Real-time queue and Best-effort queue states) and execution\
    \ resources (which \nare transitioned between the Process and Sleep states). \n\
    The SPN model has two main purposes: limiting the sensor anomaly computing tasks\
    \ when the \ngateway has a low battery level and predicting the power consumption.\
    \ More specifically, we \npropose an SPN API that allows a developer to translate\
    \ a power consumption formal model into a \nsoftware module that can be deployed\
    \ on the gateway. As we have already shown in [23], an SPN \nmodel can be used\
    \ to estimate the power consumption of an IoT gateway. By using the SPN model,\
    \ \nthe gateway administrator can make a prediction regarding the power consumption\
    \ based on the \nnetwork traffic characteristics (e.g., number of requests per\
    \ time interval). This can help in planning \nthe IoT network gateway provisioning\
    \ and estimating maintenance operations. By having this \nplanning, an administrator\
    \ can further estimate the costs associated with running and maintaining \nsecurity\
    \ and network functions on edge IoT gateways. The proposed SPN power consumption\
    \ \nmodel is a generic framework whose output depends on the actual anomaly detection\
    \ algorithm and \non the underlying hardware platform. An example of an SPN reputation\
    \ power consumption model \nis depicted in Figure 3. \n \nFigure 3. SPN power\
    \ consumption model for sensor anomaly detection. \nAs it can be observed in our\
    \ generic SPN model, we have the following transitions: \n• \nRX - generates request\
    \ messages for the gateway (using a random model). \n• \nClassify - it classifies\
    \ the messages based on their priority. Given the healthcare context, there can\
    \ \nbe two types of messages: contextual messages which are handled following\
    \ a best-effort \nparadigm and critical messages which are handled on a real-time\
    \ basis. This transition does not \nfollow a stochastic model and it is triggered\
    \ for every change occurred in the Queue states. \n• \nDelegate - this transition\
    \ has a hybrid behavior, having the next logic: \nFigure 3. SPN power consumption\
    \ model for sensor anomaly detection.\nAs it can be observed in our generic SPN\
    \ model, we have the following transitions:\n•\nRX—generates request messages\
    \ for the gateway (using a random model).\n•\nClassify—it classiﬁes the messages\
    \ based on their priority. Given the healthcare context, there\ncan be two types\
    \ of messages: contextual messages which are handled following a best-eﬀort\n\
    Sensors 2019, 19, 4038\n9 of 20\nparadigm and critical messages which are handled\
    \ on a real-time basis. This transition does not\nfollow a stochastic model and\
    \ it is triggered for every change occurred in the Queue states.\n•\nDelegate—this\
    \ transition has a hybrid behavior, having the next logic:\n#\nfor every real-time\
    \ message it executes a transition into the Process states (this behavior is\n\
    not stochastic);\n#\nif there are no real-time messages and if the execution is\
    \ currently in the Process states, then\nit executes a transition into the Sleep\
    \ states with a probability given by Equation (1);\n#\nif there are no real-time\
    \ messages and if the execution is currently in the Sleep states, then it\nexecutes\
    \ another transition into the Sleep states, with a probability given by Equation\
    \ (1);\n#\nif none of the previously mentioned steps are executed, this transition\
    \ extracts a best-eﬀort\nmessage and moves the execution into the Process states.\n\
    These transitions are accompanied by ﬁve SPN states as follows:\n•\nQueue—accumulates\
    \ both the critical and best eﬀort requests;\n•\nReal-time queue—accumulates the\
    \ critical requests;\n•\nBest-eﬀort queue—accumulates the best-eﬀort requests;\n\
    •\nSleep—indicates the number of times the gateway transitions into a Sleep state;\n\
    •\nProcess—indicates the number of times the gateway transitions into a Process\
    \ state. This is the\nconsumption intensive state which must be translated into\
    \ a hardware dependent consumption metric.\nOur SPN API allows introducing new\
    \ states and transitions along with a custom transition\nfrequency function. In\
    \ our tests, we have used a battery level dependent function for the Delegate\n\
    transition, as presented in Equation (1). This transition function uses as input\
    \ both the gateway battery\nlevel along with a random variable and returns a boolean\
    \ value which indicates if the SPN transition\nshould be executed or not. If the\
    \ Delegate transition is executed, the SPN machine moves into the\nSleep states,\
    \ thus, according to Equation (1), if the battery level is low, the probability\
    \ of transitioning\ninto the Sleep state increases:\ndelegate_func = f(battery_level,\
    \ random_variable) = {True, random_variable >\nbattery_level, False otherwise}\n\
    (1)\nThus, a developer can model the power consumption of the IoT gateway in a\
    \ custom manner\nand obtain the application speciﬁc trade-oﬀ between security\
    \ and availability. In Figure 4 it can be\nobserved that the number of transitions\
    \ into the Sleep and Process states have a linear dependence on\nthe battery level:\
    \ the number of transitions into the Process state is increasing along with a\
    \ high battery\nlevel, while the number of transitions into the Sleep state is\
    \ increasing along with a low battery level.\nFigure 4 consists of the following\
    \ input data sets:\n•\nuniform distribution of real-time and best-eﬀort messages\
    \ (Figure 4a);\n•\nbest-eﬀort predominant messages which allow the system to increase\
    \ the transitions into the Sleep\nstates (Figure 4b);\n•\nreal-time predominant\
    \ messages which force the system to increase the transitions into the Process\n\
    states (Figure 4c).\nThe results from Figure 4 measure only the number of times\
    \ an SPN transition is executed based on\nthe input requests pattern. To further\
    \ obtain actual power consumption metrics, the number of times\nthe Process transition\
    \ is executed must be correlated with the actual anomaly detection algorithm and\n\
    hardware characteristics. One could obtain power consumption values by running\
    \ the proposed SPN\nframework on an energy aware hardware emulator.\nSensors 2019,\
    \ 19, 4038\n10 of 20\nSensors 2019, 19, x FOR PEER REVIEW \n10 of 20 \n \n \n\
    (a) \n \n(b) \n \n(c) \n \nFigure 4. SPN consumption model of the IoT Security\
    \ Gateway: (a) Uniform distributed real \ntime/best effort messages; (b) Best\
    \ effort predominant message; (c) Real time predominant messages. \nIn an IoT\
    \ network, the gateway executes a suite of communication processes, which cover\
    \ the \nentire network stack, starting with data layer protocols and ending with\
    \ the application layer \nprotocols. The gateway role is augmented in a publish-subscribe\
    \ network because the gateway can \nbe the module that relays the packets between\
    \ end-point IoT devices. In a client-server IoT network \ntopology, the gateway\
    \ translates packet from a lightweight protocol, bridging the upper layer Cloud\
    \ \nnetwork segment with the end-point network segment. Taking into consideration\
    \ these \ncharacteristics, the gateway becomes a multi-tenant device which can\
    \ execute various security \nprocesses (e.g., authentication, network access,\
    \ policy enforcement), given its central role in an IoT \nnetwork. One of the\
    \ most important attacks in IoT networks is the Denial of Service (DoS) which\
    \ can \nbe split into two main categories: \n• \nDoS on the end-point devices\
    \ with the purpose of draining the battery and the availability of the \ndevice;\
    \ \n• \nDoS on the gateway side with the purpose of affecting the availability\
    \ of the IoT network or \nservices. \nOur IoT security framework implements a\
    \ packet filtering mechanism on the gateway side in \norder to mitigate DoS network\
    \ attacks. The packet filtering module can cover all the networking \nstack layers,\
    \ focusing on the Message Queuing Telemetry Transport (MQTT) / MQTT for Sensor\
    \ \nNetworks (MQTT-SN) and CoAP application layer protocols. The network filter\
    \ layer consists of \ntwo sub-modules: the packet filter mechanism in the kernel\
    \ side and the userspace filter component. \nThe packet filtering on the kernel\
    \ side is implemented using the Extended Berkeley Packet Filter \n(eBPF) technology.\
    \ This technology allows deploying a lightweight network parser in the kernel\
    \ \nFigure 4. SPN consumption model of the IoT Security Gateway: (a) Uniform distributed\
    \ real time/best\neﬀort messages; (b) Best eﬀort predominant message; (c) Real\
    \ time predominant messages.\nIn an IoT network, the gateway executes a suite\
    \ of communication processes, which cover\nthe entire network stack, starting\
    \ with data layer protocols and ending with the application layer\nprotocols.\
    \ The gateway role is augmented in a publish-subscribe network because the gateway\n\
    can be the module that relays the packets between end-point IoT devices. In a\
    \ client-server IoT\nnetwork topology, the gateway translates packet from a lightweight\
    \ protocol, bridging the upper\nlayer Cloud network segment with the end-point\
    \ network segment. Taking into consideration these\ncharacteristics, the gateway\
    \ becomes a multi-tenant device which can execute various security processes\n\
    (e.g., authentication, network access, policy enforcement), given its central\
    \ role in an IoT network.\nOne of the most important attacks in IoT networks is\
    \ the Denial of Service (DoS) which can be split\ninto two main categories:\n\
    •\nDoS on the end-point devices with the purpose of draining the battery and the\
    \ availability of\nthe device;\n•\nDoS on the gateway side with the purpose of\
    \ aﬀecting the availability of the IoT network or services.\nOur IoT security\
    \ framework implements a packet ﬁltering mechanism on the gateway side in\norder\
    \ to mitigate DoS network attacks. The packet ﬁltering module can cover all the\
    \ networking\nstack layers, focusing on the Message Queuing Telemetry Transport\
    \ (MQTT) / MQTT for Sensor\nNetworks (MQTT-SN) and CoAP application layer protocols.\
    \ The network ﬁlter layer consists of\ntwo sub-modules: the packet ﬁlter mechanism\
    \ in the kernel side and the userspace ﬁlter component.\nThe packet ﬁltering on\
    \ the kernel side is implemented using the Extended Berkeley Packet Filter (eBPF)\n\
    technology. This technology allows deploying a lightweight network parser in the\
    \ kernel virtual\nmachine. The kernel network parser allows a rapid packet inspection\
    \ which oﬀers the possibility of\nSensors 2019, 19, 4038\n11 of 20\ndropping or\
    \ modifying packets. This mechanism allows the authenticated and authorized IoT\
    \ nodes\nto install custom ﬁltering instructions in the network ﬁlter virtual\
    \ machine on the gateway side. Thus,\na low resource endpoint IoT device can oﬄoad\
    \ the CPU intensive packet ﬁltering task on the gateway\nside. By using this gateway\
    \ delegated ﬁltering mechanism, an IoT device can save CPU cycles for its’\nown\
    \ system and for the gateway system, dropping malicious network packets in the\
    \ earliest possible\nstage. Such a dynamic security mechanism is suitable for\
    \ mitigating MQTT attacks where a malicious\npublisher device sends DoS packets\
    \ to a subscriber device.\nThe packet ﬁltering architecture also uses an IoT node\
    \ virtual instance on the gateway side, which\nkeeps the device state (e.g., ﬁltering\
    \ commands, online state, etc.) and acts as a buﬀer between the\ngateway and the\
    \ physical IoT device. Each packet ﬁlter routine uses a suite of packet qualiﬁers\
    \ (e.g.,\nsource IP address, MQTT identiﬁer, MQTT QoS value) which triggers the\
    \ routine. A kernel space\nﬁltering mechanism requires the usage of an operating\
    \ system (e.g., lightweight Linux), which can\nbe a drawback for bare-metal systems\
    \ or for systems that are not eBPF compatible. To overcome\nthis drawback, the\
    \ proposed IoT security framework implements a hybrid kernel/userspace ﬁltering\n\
    mechanism. The userspace ﬁltering mechanism is implemented as an application protocol\
    \ security\nmodule. The security module has a well-deﬁned interface and it is\
    \ called by the core packet application\nprotocol daemon for each received packet.\
    \ By using a packet ﬁltering interface, the module can be\neasily replaced with\
    \ a custom one without changing the core protocol implementation. The userspace\n\
    ﬁltering module consists of a collection of routines that can execute tasks like\
    \ packet inspection\nor accept/drop the packet based on the authentication/authorization\
    \ state. Like the kernel ﬁltering\nmechanism, the userspace module uses packet\
    \ qualiﬁers that can lead to a packet reject action if they\nare correlated with\
    \ the sender/receiver authentication state. At the gateway side, the userspace\
    \ ﬁltering\nmodule can receive ﬁltering policies (ACL structure) from the endpoint\
    \ nodes by using the secure\ncontrol communication channel. In a particular MQTT\
    \ scenario, an endpoint IoT node can install the\nfollowing policies:\n•\nPacket\
    \ rate limit which is correlated with the received (IoT node) battery level;\n\
    •\nAsynchronous authentication of the publisher IoT device (the policy is installed\
    \ by the subscriber\nIoT device which wants to receive data only from trusted\
    \ nodes);\n•\nAsynchronous authorization of the publisher IoT device;\n•\nBlacklisting\
    \ nodes based on the protocol URI (e.g., MQTT client id);\n•\nPacket dropping\
    \ based on diﬀerent qualiﬁes (e.g., header values, payload value).\nRegarding\
    \ the CoAP protocol, the gateway ﬁltering solution handles the CoAP proxy scenario.\n\
    Thus, the IoT framework permits installing security policies which authenticate\
    \ both the CoAP server\nand client and limits the rate of CoAP responses based\
    \ on the client’s battery level. The CoAP rate\nlimiting capability addresses\
    \ the multicast responses which can be easily used to execute a battery\ndrain\
    \ attack. The gateway packet ﬁltering architecture is depicted in Figure 5.\n\
    The userspace and the kernel ﬁltering module are not mutually exclusive. Taking\
    \ into consideration\nthe limitations of in-kernel eBPF network parsers (e.g.,\
    \ loop restrictions), our hybrid packet inspection\nsolution is a multi-stage\
    \ ﬁltering solution. Thus, the complex part of the ﬁltering routine can be\ninstalled\
    \ on the userspace module (e.g., authentication/authorization veriﬁcation or querying\
    \ other\nmodules when validating the packet). The simplest part of the ACL can\
    \ be installed in the kernel\nﬁltering module, which achieves higher speeds and\
    \ optimizations in the packet rejection process.\nOur multi-stage ﬁltering mechanism\
    \ also addresses the IoT TLS/DTLS encrypted traﬃc.\nThe in-kernel ﬁltering module\
    \ does not have the TLS/DTLS session key, thus it cannot inspect\nencrypted traﬃc\
    \ payload. This scenario is addressed by the userspace ﬁltering module which is\n\
    attached to the application protocol process (e.g., MQTT broker process) and receives\
    \ plain-text packets\nthat can be inspected normally (with the associated performance\
    \ penalties of userspace ﬁltering).\nSensors 2019, 19, 4038\n12 of 20\n \npp\n\
    g\nq\ng\np y\nRegarding the CoAP protocol, the gateway filtering solution handles\
    \ the CoAP proxy scenario. \nThus, the IoT framework permits installing security\
    \ policies which authenticate both the CoAP \nserver and client and limits the\
    \ rate of CoAP responses based on the client’s battery level. The CoAP \nrate\
    \ limiting capability addresses the multicast responses which can be easily used\
    \ to execute a \nbattery drain attack. The gateway packet filtering architecture\
    \ is depicted in Figure 5. \n \nFigure 5. The architecture of the gateway packet\
    \ ﬁltering module.\nBoth the userspace and kernel security modules employ a cooperative\
    \ ﬁltering paradigm between\nthe endpoint IoT nodes and the gateway, which addresses\
    \ the dynamic character of IoT networks.\nThe software security module which runs\
    \ on the gateway has a lightweight structure and it does\nnot rely on the underlying\
    \ hardware capabilities, being suitable even for battery powered devices and\n\
    for applications that cannot beneﬁt from the gateway-centric model. Taking this\
    \ into consideration,\nthe security functions deployed on the gateway can be executed\
    \ on regular IoT nodes, thus addressing\nother IoT network topologies than the\
    \ gateway-centric ones. For instance, these security functions\ncould be executed\
    \ by specially designated IoT nodes from a mesh or multi-hop routing topology.\n\
    3.3. IoT Device Layer\nThe outstanding feature of IoT devices is their ability\
    \ to ensure system security using limited\nresources. The endpoints are the most\
    \ vulnerable to attacks because they are often installed in open\nspace environments\
    \ and an attacker can gain physical access to them, leading to security breaches\
    \ in\nwhich the attacker can compromise the hardware and software conﬁgurations\
    \ and alter the information\ntransmitted over the network. In this regard, the\
    \ proposed architecture includes, at the device layer,\na remote attestation framework\
    \ that has the role of checking the hardware and software conﬁguration.\nAttestation\
    \ is a mechanism for the gateway to measure the IoT end-point integrity and remove\n\
    the node from the network if compromised. Traditionally, remote attestation is\
    \ achieved by means of\nsecure hardware, like Trusted Platform Module (TPM) incurring\
    \ resource and monetary costs which are\nnot acceptable for the majority of IoT\
    \ devices. Attestation can also be achieved using a software-only\nsolution, but\
    \ this mechanism may not reach the desired security level of a particular IoT\
    \ application.\nThere are also hybrid solutions that combine the previously mentioned\
    \ mechanisms in order to obtain\na trade-oﬀ between the security level and the\
    \ costs (including hardware complexity).\nThere are a series of papers that propose\
    \ diﬀerent types of attestation solutions that can fall into\none of the three\
    \ categories presented before. Since hardware-based remote attestation has a greater\n\
    cost than the remaining two categories, we will focus mainly on software or hybrid\
    \ solutions. In [24]\nauthors have proposed a software-based technique that takes\
    \ advantage of specially designed functions\nthat will have a diﬀerent way of\
    \ executing if an attacker tries to modify it, introducing extra delays,\ntherefore\
    \ any alteration of the base software image will be detected and reported. Following\
    \ the\nhybrid approach, in [25] the authors proposed the Secure and Minimal Architecture\
    \ for (establishing\na dynamic) Root of Trust (SMART), through which they use\
    \ the properties of the Read-Only Memory\n(ROM) module found in majority of low-end\
    \ microcontroller unit (MCU) architectures to replicate\na few of the features\
    \ that a TPM has (e.g., secure key storage area, reserved zone for attestation\
    \ code\nor access control for enforcing the protection of specially deﬁned areas).\
    \ Another proposal is given\nin [26] and consists of a technique that uses Physically\
    \ Unclonable Functions (PUF) to detect any\nSensors 2019, 19, 4038\n13 of 20\n\
    variation in the ﬂow of function execution, by beneﬁting of side-eﬀects in the\
    \ processor manufacturing\nto generate unique hardware outputs for each input.\
    \ For IoT devices that are running a lightweight\nLinux operating system, there\
    \ are also mechanisms like Integrity Measurement Architecture (IMA)\nthat can\
    \ attest the system run-time integrity. Linux IMA can also be integrated with\
    \ a TPM in order to\ncompare the run-time integrity value with a data source that\
    \ cannot be modiﬁed.\nThe proposed attestation framework has a generic structure\
    \ that implements a secure message\nprotocol and relies on an external module\
    \ for obtaining the integrity measurements (e.g., TPM, Linux\nIMA). Whenever the\
    \ gateway wants to check the integrity of a node, it sends a Node Attestation\n\
    Request (NAR) message to the IoT device. The NAR message consists of a nonce and\
    \ an Hash-based\nMessage Authentication Code (HMAC) signature, computed over the\
    \ nonce value, using a pre-shared\nkey established between the endpoint device\
    \ and the gateway during the device enrollment phase.\nAfter receiving the NAR\
    \ message, the node validates it by verifying the HMAC signature, thus\nmitigating\
    \ DoS attacks where a malicious entity sends multiple attestation requests to\
    \ the device\nin order to exhaust the computing/energy resources of the node.\
    \ If the NAR message is validated,\nthe endpoint device executes the attestation\
    \ measurements by means of an external module (e.g.,\nmethods mentioned at the\
    \ beginning of this subsection). After obtaining the integrity measurement\nvalues,\
    \ the endpoint device sends to the gateway a Node Attestation Measurement (NAM)\
    \ message\nwhich consists of integrity measurement values along with an HMAC signature,\
    \ computed over the\nintegrity measurement values concatenated with the nonce\
    \ received from the gateway. The HMAC\nsignature of the NAM message is computed\
    \ using the same pre-shared private key, established between\nthe IoT device and\
    \ the gateway. The gateway validates the HMAC signature of the NAM packet (using\n\
    the request nonce and the pre-shared key) and checks if the integrity measurement\
    \ values are the same\nwith the values stored on the gateway side. If the signature\
    \ is invalid or the integrity measurement\nvalues are incorrect, the gateway marks\
    \ the device as compromised and ceases any communication\nwith it. The attestation\
    \ state machine on the IoT device and gateway side take into consideration\na\
    \ connectionless transport protocol, sending the messages multiple times before\
    \ transitioning into\nan error state. The remote attestation message protocol\
    \ is presented in Figure 6.\nSensors 2019, 19, x FOR PEER REVIEW \n13 of 20 \n\
    \ \nAnother proposal is given in [26] and consists of a technique that uses Physically\
    \ Unclonable \nFunctions (PUF) to detect any variation in the flow of function\
    \ execution, by benefiting of \nside-effects in the processor manufacturing to\
    \ generate unique hardware outputs for each input. For \nIoT devices that are\
    \ running a lightweight Linux operating system , there are also mechanisms like\
    \ \nIntegrity Measurement Architecture (IMA) that can attest the system run-time\
    \ integrity. Linux IMA \ncan also be integrated with a TPM in order to compare\
    \ the run-time integrity value with a data \nsource that cannot be modified. \n\
    The proposed attestation framework has a generic structure that implements a secure\
    \ message \nprotocol and relies on an external module for obtaining the integrity\
    \ measurements (e.g., TPM, \nLinux IMA). Whenever the gateway wants to check the\
    \ integrity of a node, it sends a Node \nAttestation Request (NAR) message to\
    \ the IoT device. The NAR message consists of a nonce and an \nHash-based Message\
    \ Authentication Code (HMAC) signature, computed over the nonce value, \nusing\
    \ a pre-shared key established between the endpoint device and the gateway during\
    \ the device \nenrollment phase. After receiving the NAR message, the node validates\
    \ it by verifying the HMAC \nsignature, thus mitigating DoS attacks where a malicious\
    \ entity sends multiple attestation requests \nto the device in order to exhaust\
    \ the computing/energy resources of the node. If the NAR message is \nvalidated,\
    \ the endpoint device executes the attestation measurements by means of an external\
    \ \nmodule (e.g., methods mentioned at the beginning of this subsection). After\
    \ obtaining the integrity \nmeasurement values, the endpoint device sends to the\
    \ gateway a Node Attestation Measurement \n(NAM) message which consists of integrity\
    \ measurement values along with an HMAC signature, \ncomputed over the integrity\
    \ measurement values concatenated with the nonce received from the \ngateway.\
    \ The HMAC signature of the NAM message is computed using the same pre-shared\
    \ private \nkey, established between the IoT device and the gateway. The gateway\
    \ validates the HMAC \nsignature of the NAM packet (using the request nonce and\
    \ the pre-shared key) and checks if the \nintegrity measurement values are the\
    \ same with the values stored on the gateway side. If the \nsignature is invalid\
    \ or the integrity measurement values are incorrect, the gateway marks the device\
    \ \nas compromised and ceases any communication with it. The attestation state\
    \ machine on the IoT \ndevice and gateway side take into consideration a connectionless\
    \ transport protocol, sending the \nmessages multiple times before transitioning\
    \ into an error state. The remote attestation message \nprotocol is presented\
    \ in Figure 6. \n \nFigure 6. The architecture of the Remote Node Attestation\
    \ Module. \nThrough the dynamic approach of the gateway to node profiling and\
    \ suspicious behavior \ndetection, devices are continuously monitored and in case\
    \ a device seems to have been \ncompromised, then the gateway can request the\
    \ starting of the attestation cycle. Abnormal behavior \nof the nodes can be detected\
    \ by inbound and outbound traffic analysis. A node that no longer \nFigure 6.\
    \ The architecture of the Remote Node Attestation Module.\nThrough the dynamic\
    \ approach of the gateway to node proﬁling and suspicious behavior detection,\n\
    devices are continuously monitored and in case a device seems to have been compromised,\
    \ then the\ngateway can request the starting of the attestation cycle. Abnormal\
    \ behavior of the nodes can be\ndetected by inbound and outbound traﬃc analysis.\
    \ A node that no longer performs its tasks or starts\nSensors 2019, 19, 4038\n\
    14 of 20\nmaking forbidden connections can be suspected that is under the direct\
    \ control of an attacker. In this\ncase, the gateway sends to the node a veriﬁcation\
    \ request and the latter starts the attestation cycle.\nRegarding the security\
    \ of the communication channel, messages between IoT devices and gateway\nmay\
    \ be protected using an Integrity Check Value (ICV), which consists of an HMAC\
    \ computed over\nthe message payload. The ICV ﬁeld usage allows detection of packet\
    \ tampering and replay attacks,\nwhich could allow an attacker to manipulate the\
    \ sensor aggregated information. The HMAC algorithm\nemploys the aforementioned\
    \ pre-shared key between the endpoint device and the gateway.\nThe proposed security\
    \ framework also takes into consideration the privacy required by speciﬁc\nuser-related\
    \ data. If data is mainly collected through a group of body sensors interconnected\
    \ in a BAN\nthat has a speciﬁc sink through which data is exported to gateways,\
    \ we can consider that sink as\na collector node. For enforcing the anonymization\
    \ of data being sent to gateways and upper levels in\nthe framework, the collector\
    \ node is initialized for each new individual with a diﬀerent tag that will\n\
    be associated with all data collected and sent by that node. This tag will be\
    \ generated based on the\nperson’s identity features (social security number,\
    \ name, and age) that will be fed as input to a hash\nfunction, to ensure the\
    \ randomness of the tag. By creating the tag in this manner, any future data\n\
    associated with a person can be processed without employing the user’s identity.\
    \ Also, through the\ntag, we create a decoupling of data and a person’s identity,\
    \ without aﬀecting any of the functionality\noﬀered by the IoT system.\nConsidering\
    \ the limited resources that an IoT device has, it is very important to carefully\
    \ monitor\nthem, because an overload of a node can lead to lower computational\
    \ performance or inactivity. In the\nproposed architecture, every node implements\
    \ a module in charge of monitoring the load level in order\nto optimize the use\
    \ of resources such as memory loading, CPU usage or battery level. Any exceeding\n\
    of acceptable performance thresholds that can slow down the system will be managed\
    \ at the gateway\nlayer by adapting traﬃc and activities in order to improve the\
    \ distribution of workloads across the\nsystem elements.\nWhen the gateway receives\
    \ an alert from the node about its status, it will update the security\npolicies\
    \ and forward the information to the node, which in turn will call the policy\
    \ update agent\ninstalled at its level. The policy update agent can also be called\
    \ by the node when it detects that the\npreset thresholds are exceeded. In this\
    \ case, the node initiates the process of updating security policies\nby sending\
    \ a request to the gateway (see Figure 7).\nSensors 2019, 19, x FOR PEER REVIEW\
    \ \n14 of 20 \n \nperforms its tasks or starts making forbidden connections can\
    \ be suspected that is under the direct \ncontrol of an attacker. In this case,\
    \ the gateway sends to the node a verification request and the latter \nstarts\
    \ the attestation cycle. \nRegarding the security of the communication channel,\
    \ messages between IoT devices and \ngateway may be protected using an Integrity\
    \ Check Value (ICV), which consists of an HMAC \ncomputed over the message payload.\
    \ The ICV field usage allows detection of packet tampering and \nreplay attacks,\
    \ which could allow an attacker to manipulate the sensor aggregated information.\
    \ The \nHMAC algorithm employs the aforementioned pre-shared key between the endpoint\
    \ device and the \ngateway. \nThe proposed security framework also takes into\
    \ consideration the privacy required by specific \nuser-related data. If data\
    \ is mainly collected through a group of body sensors interconnected in a \nBAN\
    \ that has a specific sink through which data is exported to gateways, we can\
    \ consider that sink \nas a collector node. For enforcing the anonymization of\
    \ data being sent to gateways and upper levels \nin the framework, the collector\
    \ node is initialized for each new individual with a different tag that \nwill\
    \ be associated with all data collected and sent by that node. This tag will be\
    \ generated based on \nthe person’s identity features (social security number,\
    \ name, and age) that will be fed as input to a \nhash function, to ensure the\
    \ randomness of the tag. By creating the tag in this manner, any future \ndata\
    \ associated with a person can be processed without employing the user’s identity.\
    \ Also, through \nthe tag, we create a decoupling of data and a person’s identity,\
    \ without affecting any of the \nfunctionality offered by the IoT system. \nConsidering\
    \ the limited resources that an IoT device has, it is very important to carefully\
    \ \nmonitor them, because an overload of a node can lead to lower computational\
    \ performance or \ninactivity. In the proposed architecture, every node implements\
    \ a module in charge of monitoring \nthe load level in order to optimize the use\
    \ of resources such as memory loading, CPU usage or \nbattery level. Any exceeding\
    \ of acceptable performance thresholds that can slow down the system \nwill be\
    \ managed at the gateway layer by adapting traffic and activities in order to\
    \ improve the \ndistribution of workloads across the system elements. \nWhen the\
    \ gateway receives an alert from the node about its status, it will update the\
    \ security \npolicies and forward the information to the node, which in turn will\
    \ call the policy update agent \ninstalled at its level. The policy update agent\
    \ can also be called by the node when it detects that the \npreset thresholds\
    \ are exceeded. In this case, the node initiates the process of updating security\
    \ \npolicies by sending a request to the gateway (see Figure 7). \n \nFigure 7.\
    \ The architecture of the Node Status Monitoring Module. \n3.4. Management Layer\
    \ \nFigure 7. The architecture of the Node Status Monitoring Module.\nSensors\
    \ 2019, 19, 4038\n15 of 20\n3.4. Management Layer\nIn order to oﬀer a complete\
    \ security framework architecture, for the user level we have proposed\na web\
    \ application as a management tool. The web application allows the security administrator,\n\
    through the graphical interface, to enable packet ﬁltering policies or to create\
    \ a blacklist with devices\nthat are not taken into account when the anomaly detection\
    \ score is computed. Regarding the sensor\nanomaly detection process, the security\
    \ administrator can set certain parameters for monitoring the\nprocess and alerting\
    \ him whenever a triggered parameter is activated, for example when the maximum\n\
    value is reached, then the data is transmitted to the web application and the\
    \ administrator can analyze\nit and take action.\nThe web application can be also\
    \ considered the logging center of the IoT system. The logs from the\nnodes reach\
    \ the gateway which will redirect them to the web platform, thus the logs will\
    \ be available\nfor the security administrator. In order to address the incompatibility\
    \ issues with existing proprietary\nsolutions, the web platform interacts with\
    \ gateways using Representational State Transfer (REST) calls\nsecured by the\
    \ TLS protocol.\nThrough the web application, the security administrator can monitor\
    \ and keep track of packet\nstreams, having the possibility to view the rate at\
    \ which packages are processed. The packet processing\nrate allows the security\
    \ administrator to evaluate, in real time, the eﬀectiveness of the installed ﬁltering\n\
    policies and to observe the pattern of a DoS attack.\n4. Testing and Results Analysis\n\
    In realizing the proof-of-concept for diﬀerent modules of our proposed security\
    \ framework,\nwe used open-source components that oﬀered a proven solution at\
    \ a speciﬁc layer of the architecture\nwhile enabling various customizations needed\
    \ to implement the functionality described in the previous\nsection. For managing\
    \ connections and enforcing the monitoring and access control features of the\n\
    Cloud module, we integrated a Zuul proxy solution, through which we can implement\
    \ security\nrules. Acting as a service aggregator, the Zuul proxy empowered the\
    \ use of ﬁltering mechanisms\non packets and the implementation of the service\
    \ discovery mechanism described in the previous\nsection. The passive component\
    \ of the Cloud module, namely the ambient environment repository,\nneeds to store\
    \ information in a structure similar to a graph. Considering this, we chose to\
    \ implement\nthe repository using a Not Only Structured Query Language (NoSQL)\
    \ solution and picked MongoDB\nfor this purpose, given its maturity and the availability\
    \ of drivers for several programming languages,\nsuch as C++ and Java.\nFor the\
    \ core gateway security framework implementation we used Eclipse Kura which interacts\
    \ with\nother local systems (e.g., Mosquitto MQTT broker) by means of IPC mechanisms.\
    \ Thus, our reputation\nand SPN consumption modules are deployed as Kura OSGi\
    \ containers. For the Cloud interaction, we used\nthe regular Java Jetty HyperText\
    \ Transfer Protocol (HTTP) client for consuming REST services exposed by\nthe\
    \ Cloud module: sensing data publishing, sensing data retrieval. Regarding the\
    \ communication stack,\nwe used separate IoT protocol daemons like Mosquitto for\
    \ MQTT broker, Eclipse Paho for MQTT-SN\nand Eclipse Californium for the CoAP\
    \ server.\nAs stressed in the previous section, packet ﬁltering is a complex task\
    \ that cannot be executed\nby resource constrained endpoint IoT devices. This\
    \ process needs continuous optimizations even\non the gateway side in order to\
    \ reduce security allocated resources (CPU cycles, memory). Given\nthat IoT network\
    \ applications require low-latency communications, a DoS attack could be executed\n\
    even if the gateway allocates resources for dropping the malicious packets, thus\
    \ being unable to\ndispatch the legitimate packets in the required time frame.\
    \ In order to evaluate the packet ﬁltering\nmodule for our gateway side IoT framework,\
    \ we tested a scenario where an attacker executes a DoS\nusing the MQTT-SN protocol.\
    \ IoT gateways are usually low-cost devices deployed at the edge of\nthe network.\
    \ These devices are not equipped with advanced hardware based ﬁltering modules\
    \ like\nApplication-Speciﬁc Integrated Circuits (ASIC), Field Programmable Gate\
    \ Arrays (FPGA) or Intelligent\nNetwork Interface Controllers (SmartNIC). Considering\
    \ these characteristics, the gateway ﬁltering\nSensors 2019, 19, 4038\n16 of 20\n\
    solutions must be executed exclusively in software, either in the kernel or in\
    \ userspace. Kernel ﬁltering\nsolutions bring the advantage of dropping a malicious\
    \ packet in the earliest stage of the network data\nprocessing pipeline. Thus,\
    \ a kernel based early packet drop mechanism saves resources because kernel\n\
    packet (e.g., Linux skb structure) data structures will not be allocated and the\
    \ receiver process will not\nbe scheduled, thus avoiding important context switch\
    \ penalties. A kernel packet ﬁlter module brings\nthe drawback of complex development\
    \ and the security risks of compromising or crashing the system\nwhen deploying\
    \ an untrusted kernel module. The userspace ﬁltering solutions bring more ﬂexibility\n\
    in terms of packet processing with the penalties of costly operating system context\
    \ switches. In the\ncase of DoS attacks, the system is delayed by executing multiple\
    \ context switches, being unable to\nprocess packets in the required time frame.\n\
    A typical MQTT-SN scenario consists of IoT sensors that transmit information to\
    \ a central broker,\nusing MQTT-SN PUBLISH, via a transparent or aggregator gateway.\
    \ In our experiments, we simulated\nan MQTT-SN PUBLISH DoS attack, where a malicious\
    \ device tries to allocate the gateway ﬁltering\nresources in order to block the\
    \ legitimate packet processing. The implementation consists of a dynamic\nkernel\
    \ based MQTT-SN ﬁltering solution, using the eBPF technology. More speciﬁcally,\
    \ we used the\neXpress Data Path (XDP) / Iovisor open-source project which allows\
    \ programming the Linux kernel\nnetwork data path using eBPF instructions generated\
    \ from C programs (using the clang compiler).\nOur implementation uses the BPF\
    \ Compiler Collection (BCC) framework, which allows injecting\nthe in-kernel eBPF\
    \ instructions using a python front-end. For keeping a session on the kernel ﬁlter\n\
    module and for collecting statistics, we used eBPF maps to communicate between\
    \ the controller and\nthe ﬁlter module. For the MQTT-SN gateway, we used the Eclipse\
    \ Paho MQTT-SN project, which\nwas integrated with our userspace ACL module. We\
    \ simulated an attack scenario where one or\nmore IoT devices are compromised\
    \ and used by the attack coordinator to execute DoS actions on the\ngateway side,\
    \ by sending a continuous ﬂow of MQTT-SN PUBLISH packets. For the client (attacker)\n\
    which ﬂoods the network with MQTT-SN PUBLISH packets, we also used the Eclipse\
    \ Paho libraries.\nIn a ﬁrst experiment, we measured the number of dropped packets\
    \ per second, by using the XDP\nkernel ﬁlter and the userspace module. For obtaining\
    \ the kernel packet drop statistics, we used an eBPF\narray to store the values\
    \ and a Python script which polls the module every second. For our testing\nscenario,\
    \ we dropped MQTT-SN packets based on the QoS value, a protocol feature that can\
    \ be easily\nexploited by an attacker. In Figure 8 is presented the MQTT-SN drop\
    \ rate per second, when using\na kernel XDP packet ﬁlter compared with a userspace\
    \ packet ﬁlter. As it can be observed, the traﬃc\ndrop process follows the same\
    \ pattern, with the XDP kernel drop rate being 60k packet higher than the\nuserspace\
    \ alternative. The results for this test case were obtained after the attacker\
    \ device sent 100\nmillion MQTT-SN packets.\nSensors 2019, 19, x FOR PEER REVIEW\
    \ \n16 of 20 \nresources because kernel packet (e.g., Linux skb structure) data\
    \ structures will not be allocated and \nthe receiver process will not be scheduled,\
    \ thus avoiding important context switch penalties. A \nkernel packet filter module\
    \ brings the drawback of complex development and the security risks of \ncompromising\
    \ or crashing the system when deploying an untrusted kernel module. The userspace\
    \ \nfiltering solutions bring more flexibility in terms of packet processing with\
    \ the penalties of costly \noperating system context switches. In the case of\
    \ DoS attacks, the system is delayed by executing \nmultiple context switches,\
    \ being unable to process packets in the required time frame. \nA typical MQTT-SN\
    \ scenario consists of IoT sensors that transmit information to a central \nbroker,\
    \ using MQTT-SN PUBLISH, via a transparent or aggregator gateway. In our experiments,\
    \ we \nsimulated an MQTT-SN PUBLISH DoS attack, where a malicious device tries\
    \ to allocate the gateway \nfiltering resources in order to block the legitimate\
    \ packet processing. The implementation consists of \na dynamic kernel based MQTT-SN\
    \ filtering solution, using the eBPF technology. More specifically, \nwe used\
    \ the eXpress Data Path (XDP) / Iovisor open-source project which allows programming\
    \ the \nLinux kernel network data path using eBPF instructions generated from\
    \ C programs (using the \nclang compiler). Our implementation uses the BPF Compiler\
    \ Collection (BCC) framework , which \nallows injecting the in-kernel eBPF instructions\
    \ using a python front-end. For keeping a session on \nthe kernel filter module\
    \ and for collecting statistics, we used eBPF maps to communicate between \nthe\
    \ controller and the filter module. For the MQTT-SN gateway, we used the Eclipse\
    \ Paho \nMQTT-SN project, which was integrated with our userspace ACL module.\
    \ We simulated an attack \nscenario where one or more IoT devices are compromised\
    \ and used by the attack coordinator to \nexecute DoS actions on the gateway side,\
    \ by sending a continuous flow of MQTT-SN PUBLISH \npackets. For the client (attacker)\
    \ which floods the network with MQTT-SN PUBLISH packets, we \nalso used the Eclipse\
    \ Paho libraries. In a first experiment, we measured the number of dropped \n\
    packets per second, by using the XDP kernel filter and the userspace module. For\
    \ obtaining the \nkernel packet drop statistics, we used an eBPF array to store\
    \ the values and a Python script which \npolls the module every second. For our\
    \ testing scenario, we dropped MQTT-SN packets based on \nthe QoS value, a protocol\
    \ feature that can be easily exploited by an attacker. In Figure 8 is presented\
    \ \nthe MQTT-SN drop rate per second, when using a kernel XDP packet filter compared\
    \ with a \nuserspace packet filter. As it can be observed, the traffic drop process\
    \ follows the same pattern, with \nthe XDP kernel drop rate being 60k packet higher\
    \ than the userspace alternative. The results for this \ntest case were obtained\
    \ after the attacker device sent 100 million MQTT-SN packets. \n \nFigure 8. Drop\
    \ packet rate (per second), in a DoS attack scenario. \nIn Figure 9 are presented\
    \ the results of a second test case, where we analyze the rate of \nprocessed\
    \ packets per second in a case of DoS attack. The DoS attack scenario consists\
    \ of a malicious \ndevice that sends 100 million MQTT-SN packets with a QoS value\
    \ of 1 and a legitimate device that \nsends the same number of packets with a\
    \ QoS value of 0. As it can be observed, when the gateway \nuses the XDP kernel\
    \ filtering method, it can process 20 k more legitimate packets, than when using\
    \ \nthe userspace alternative. \nFigure 8. Drop packet rate (per second), in a\
    \ DoS attack scenario.\nIn Figure 9 are presented the results of a second test\
    \ case, where we analyze the rate of processed\npackets per second in a case of\
    \ DoS attack. The DoS attack scenario consists of a malicious device\nSensors\
    \ 2019, 19, 4038\n17 of 20\nthat sends 100 million MQTT-SN packets with a QoS\
    \ value of 1 and a legitimate device that sends\nthe same number of packets with\
    \ a QoS value of 0. As it can be observed, when the gateway uses\nthe XDP kernel\
    \ ﬁltering method, it can process 20 k more legitimate packets, than when using\
    \ the\nuserspace alternative.\nSensors 2019, 19, x FOR PEER REVIEW \n17 of 20\
    \ \n \nFigure 9. Processed packet rate (per second) in a DoS attack scenario.\
    \ \nAs noted in Section 3.3, before starting any data transfer, the gateway executes\
    \ a remote \nattestation protocol with the IoT device. To validate the gateway\
    \ attestation state machine, we \nsimulated a compromised IoT device by tampering\
    \ the attestation response packet and by delivering \na wrong integrity measurement\
    \ hash. \nThe DoS attack experimental results show that our proposed method drastically\
    \ improves the \npacket drop rate, without requiring any dedicated hardware. Such\
    \ a solution permits deploying \noff-the-shelf low cost gateways that can handle\
    \ the security and network functions for the associated \nIoT network. This brings\
    \ flexibility in choosing the hardware equipment to be installed on the IoT \n\
    network edge. Also, by removing the necessity of having dedicated hardware for\
    \ packet filtering \n(e.g., ASICs), the power consumption on the gateway side\
    \ is significantly reduced. Implementing \nthe security filtering functions in\
    \ software also brings flexibility in terms of software updates, taking \ninto\
    \ consideration the continuously changing IoT attack techniques. In contrast,\
    \ while ASIC filtering \nmechanism can provide a better performance in dropping\
    \ packets, changing a hardware generation \nbrings increased costs and delays,\
    \ which can be unacceptable for the agility of IoT markets. \n5. Conclusions and\
    \ Future Work \nIoT development is a complex task, due to the multitude of elements\
    \ which compose an IoT \nsystem, thus a standard framework accelerates considerably\
    \ the time to market of an IoT product. \nMoreover, the importance of an IoT security\
    \ framework is augmented in the current context, taking \ninto consideration that\
    \ IoT devices operate with user private data and that mature IoT security \nsolutions\
    \ can increase the IoT technology adoption. Our security framework targets all\
    \ the layers of \nan IoT application: end-point network, gateway/edge, Cloud and\
    \ management, trying to offer an \nall-in-one solution for designing an IoT security\
    \ system. \nThe proposed security framework was designed to be deployed on low-cost\
    \ commodity IoT \nhardware. It does not rely on dedicated hardware for executing\
    \ security and network functions \noffload, trying to meet a trade-off between\
    \ performance and costs, as presented in the experimental \nresults section. The\
    \ experimental results analyze both functional aspects (power consumption \nmodel)\
    \ and security aspects (DoS attacks mitigation mechanism) in order to validate\
    \ one of the main \ncharacteristics of our system: a high availability security\
    \ platform. This characteristic is critical for \nambient intelligence applications\
    \ that need to rely on a highly available infrastructure that must \nprovide security\
    \ functions. Costs and flexibility are also two important characteristics of an\
    \ ambient \nintelligence application infrastructure, which are addressed by our\
    \ system, taking into consideration \nthat the security and network edge devices\
    \ have high costs in terms of acquisition/deployment and \nmaintenance. Also,\
    \ given the fact that our solution is implemented using software-only functions,\
    \ \nthe system can be easily updated in order to meet the dynamic of the IoT security\
    \ landscape, where \nnew attacks and vulnerabilities are discovered frequently.\
    \ \nFigure 9. Processed packet rate (per second) in a DoS attack scenario.\nAsnotedinSection3.3,beforestartinganydatatransfer,thegatewayexecutesaremoteattestationprotocol\n\
    with the IoT device. To validate the gateway attestation state machine, we simulated\
    \ a compromised IoT\ndevice by tampering the attestation response packet and by\
    \ delivering a wrong integrity measurement hash.\nThe DoS attack experimental\
    \ results show that our proposed method drastically improves the\npacket drop\
    \ rate, without requiring any dedicated hardware. Such a solution permits deploying\n\
    oﬀ-the-shelf low cost gateways that can handle the security and network functions\
    \ for the associated\nIoT network. This brings ﬂexibility in choosing the hardware\
    \ equipment to be installed on the IoT\nnetwork edge. Also, by removing the necessity\
    \ of having dedicated hardware for packet ﬁltering\n(e.g., ASICs), the power consumption\
    \ on the gateway side is signiﬁcantly reduced. Implementing\nthe security ﬁltering\
    \ functions in software also brings ﬂexibility in terms of software updates, taking\n\
    into consideration the continuously changing IoT attack techniques. In contrast,\
    \ while ASIC ﬁltering\nmechanism can provide a better performance in dropping\
    \ packets, changing a hardware generation\nbrings increased costs and delays,\
    \ which can be unacceptable for the agility of IoT markets.\n5. Conclusions and\
    \ Future Work\nIoT development is a complex task, due to the multitude of elements\
    \ which compose an IoT\nsystem, thus a standard framework accelerates considerably\
    \ the time to market of an IoT product.\nMoreover, the importance of an IoT security\
    \ framework is augmented in the current context, taking into\nconsideration that\
    \ IoT devices operate with user private data and that mature IoT security solutions\n\
    can increase the IoT technology adoption. Our security framework targets all the\
    \ layers of an IoT\napplication: end-point network, gateway/edge, Cloud and management,\
    \ trying to oﬀer an all-in-one\nsolution for designing an IoT security system.\n\
    The proposed security framework was designed to be deployed on low-cost commodity\
    \ IoT\nhardware. It does not rely on dedicated hardware for executing security\
    \ and network functions oﬄoad,\ntrying to meet a trade-oﬀ between performance\
    \ and costs, as presented in the experimental results\nsection. The experimental\
    \ results analyze both functional aspects (power consumption model) and\nsecurity\
    \ aspects (DoS attacks mitigation mechanism) in order to validate one of the main\
    \ characteristics\nof our system: a high availability security platform. This\
    \ characteristic is critical for ambient intelligence\napplications that need\
    \ to rely on a highly available infrastructure that must provide security functions.\n\
    Costs and ﬂexibility are also two important characteristics of an ambient intelligence\
    \ application\ninfrastructure, which are addressed by our system, taking into\
    \ consideration that the security and\nSensors 2019, 19, 4038\n18 of 20\nnetwork\
    \ edge devices have high costs in terms of acquisition/deployment and maintenance.\
    \ Also,\ngiven the fact that our solution is implemented using software-only functions,\
    \ the system can be\neasily updated in order to meet the dynamic of the IoT security\
    \ landscape, where new attacks and\nvulnerabilities are discovered frequently.\n\
    Concerning the security attacks, based on the experimental results, we can conclude\
    \ that our\nsystem is resilient to DoS attacks and to energy exhaustion attacks.\
    \ The simulated DoS attack consists\nof one or more compromised IoT devices that\
    \ send malicious network packets to the gateway, this\nattack being handled at\
    \ the gateway side by dropping packets in an optimized manner while serving\n\
    normal requests. The energy exhaustion attack is also handled at the gateway side\
    \ by the SPN power\nconsumption model which delays, in a stochastic manner, the\
    \ execution of the anomaly detection\nalgorithm when the gateway’s battery is\
    \ low.\nRegarding our future work, we plan to integrate and test various reputation\
    \ algorithms to oﬀer\na suite of default algorithms which can address various\
    \ IoT interactions model, like Barabasi-Albert,\nWatts-Strogatz or random. Another\
    \ research direction is extending our security framework with\na Linux Containers\
    \ (LXC) manager in order to allow endpoint IoT devices to run complex ﬁltering\n\
    applications on the gateway side. Taking into consideration that a Trusted Execution\
    \ Environment\n(TEE) is important in the IoT context, mainly because of the deployment\
    \ scenario (e.g., low physical\nprotection, third-party software), we also plan\
    \ to add a TEE compatible abstract software module.\nThe TEE aware module will\
    \ allow our IoT security framework to be integrated with TEE hardware\nand as\
    \ a default implementation, we plan to use OpenTEE. Regarding our packet ﬁlter\
    \ solution,\nwe plan to integrate our security framework with an eBPF aware SmartNIC\
    \ which can oﬄoad the\ngateway CPU from the ﬁltering process while providing the\
    \ same ﬂexibility as our in-kernel packet\nprotection mechanism.\nFrom the anomaly\
    \ detection point of view, we plan to implement and test an algorithm based on\n\
    the prediction of node value and afterward use the predicted value to detect potential\
    \ data anomalies.\nOur goal is to implement a Sequential Minimal Optimization\
    \ (SMO) Regression, which is the most\nsuitable prediction method for healthcare\
    \ [4], and to catch the error by comparing the values with\na dynamic threshold.\
    \ A dynamic value for the threshold is eﬃcient in healthcare systems because of\n\
    tracked parameters which may vary depending on the activity that the person undertakes.\
    \ The threshold\nwill be determined using the sliding window algorithm.\nIn this\
    \ paper, we presented a modular IoT security framework for ambient intelligence\
    \ environment\nwhich addresses all the IoT application layers and targets various\
    \ security areas. This framework aims\nto be platform independent and it can be\
    \ integrated with third-party IoT platforms, separating the\nsecurity tasks from\
    \ the functional processes.\nAuthor Contributions: Conceptualization and methodology,\
    \ I.B., B.-C.C., S.-C.A. and I.M.; formal analysis, I.B.,\nB.-C.C., S.-C.A. and\
    \ I.M.; software and validation, B.-C.C., S.-C.A. and I.M.; writing—original draft\
    \ preparation,\nI.B., B.-C.C., S.-C.A and I.M.; writing—review and editing, I.B.,\
    \ B.-C.C., S.-C.A and I.M.; supervision and funding\nacquisition, I.B.\nFunding:\
    \ This work was supported by a grant of the Romanian Ministry of Research and\
    \ Innovation, CCCDI –\nUEFISCDI, project number PN-III-P1-1.2-PCCDI-2017-0272/Avant-garde\
    \ Technology Hub for Advanced Security\n(ATLAS), within PNCDI III.\nAcknowledgments:\
    \ The authors would like to thank the reviewers for all useful and helpful comments\
    \ on\nour manuscript.\nConﬂicts of Interest: The authors declare no conﬂict of\
    \ interest.\nReferences\n1.\nAmmar, M.; Russello, G.; Crispo, B. Internet of Things:\
    \ A survey on the security of IoT frameworks. J. Inf.\nSecur. Appl. 2018, 38,\
    \ 8–27. [CrossRef]\n2.\nGordana, G.; Mladen, V.; Nebojsa, M.; Dragan, V. The IoT\
    \ architectural framework, design issues and\napplication domains. Wirel. Pers.\
    \ Commun. 2017, 92, 127–148. [CrossRef]\nSensors 2019, 19, 4038\n19 of 20\n3.\n\
    Bandyopadhyay, D.; Sen, J. Internet of things: Applications and challenges in\
    \ technology and standardization.\nWirel. Pers. Commun. 2011, 58, 49–69. [CrossRef]\n\
    4.\nHaque, S.A.; Rahman, M.; Aziz, S.M. Sensor anomaly detection in wireless sensor\
    \ networks for healthcare.\nSensors 2015, 15, 8764–8786. [CrossRef] [PubMed]\n\
    5.\nBauer, M.; Boussard, M.; Bui, N.; Carrez, F.; Jardak, C.; De Loof, J.; Magerkurth,\
    \ C.; Meissner, S.; Nettstater, A.;\nOlivereau, A.; et al. Internet of things—Architecture\
    \ IOT-A Deliverable D1.5—Final architectural reference\nmodel for the IoT v3.0.\
    \ Available online: https://iotforum.org/wp-content/uploads/2014/10/D1.5.pdf (accessed\n\
    on 3 August 2019).\n6.\nFiWARE—Security Architecture. Available online: https://forge.ﬁware.org/plugins/mediawiki/wiki/ﬁware/\n\
    index.php/Security_Architecture (accessed on 3 August 2019).\n7.\nOliveira, L.M.L.;\
    \ Rodrigues, J.P.C.; De Sausa, A.F.; Lloret, J. A network access control framework\
    \ for\n6LoWPAN networks. Sensors 2013, 13, 1210–1230. [CrossRef] [PubMed]\n8.\n\
    Saleem, S.; Ullah, S.; Kwak, K.S. A study of IEEE 802.15.4 security framework\
    \ for wireless body area networks.\nSensors 2011, 11, 1383–1395. [CrossRef] [PubMed]\n\
    9.\nEder, T.; Nachtmann, D.; Schreckling, D. Trust and Reputation in the Internet\
    \ of Things; Tech. Rep.; Universitat\nPassau: Passau, Germany, 2013.\n10.\nZimmerman,\
    \ T.G. Personal area networks: Near-ﬁeld intrabody communication. IBM Syst. J.\
    \ 1996, 35,\n609–617. [CrossRef]\n11.\nDam, K.V.; Pitchers, S.; Barnard, M. From\
    \ PAN to BAN: why body area networks? In Proceedings of the\nWireless World Research\
    \ Forum (WWRF) Second Meeting, Nokia Research Centre, Helsinki, Finland, 10–11\n\
    May 2001.\n12.\nNielsen, M.; Krukow, K.; Sassone, V. A bayesian model for event-based\
    \ trust. Electron. Notes Theor. Comput.\nSci. 2007, 172, 499–521. [CrossRef]\n\
    13.\nYaun, J.; Zhou, H.; Chen, H. SLAD: Subjective logic anomaly detection framework\
    \ in wireless sensor\nnetworks. Int. J. Distrib. Sens. Netw. 2011, 8, 1–21. [CrossRef]\n\
    14.\nHonjun, D.; Zhiping, J.; Xiaona, D. An entropy-based trust modeling and evaluation\
    \ for wireless sensor\nnetworks. In Proceedings of the International Conference\
    \ on Embedded Software and Systems, Sichuan,\nChina, 29–31 July 2008; pp. 27–34.\
    \ [CrossRef]\n15.\nHong, L.; Jiaming, T.; Yan, S. Entropy-based trust management\
    \ for data collection in wireless sensor networks.\nIn Proceedings of the 5th\
    \ International Conference on Wireless Communications, Networking and Mobile\n\
    Computing, Beijing, China, 24–26 September 2009; pp. 1–4. [CrossRef]\n16.\nMármol,\
    \ F.G.; Pérez, G.M. Providing trust in wireless sensor networks using a bio-inspired\
    \ technique.\nTelecommun. Syst. 2011, 46, 163–180. [CrossRef]\n17.\nMarzi, H.;\
    \ Li, M. An enhanced bio-inspired trust and reputation model for wireless sensor\
    \ network. Proced.\nComput. Sci. 2013, 19, 1159–1166. [CrossRef]\n18.\nMarti,\
    \ S.; Garcia-Molina, H. Taxonomy of trust: Categorizing P2P reputation systems.\
    \ Comput. Netw. 2006,\n50, 472–484. [CrossRef]\n19.\nMármol, F.G.; Pérez, G.M.\
    \ Towards pre-standardization of trust and reputation models for distributed and\n\
    heterogeneous systems. Comput. Stand. Interfaces 2010, 32, 185–196. [CrossRef]\n\
    20.\nKhalid, O.; Khan, S.U.; Madani, S.A.; Hayat, K.; Khan, M.I. Comparative study\
    \ of trust and reputation\nsystems for wireless sensor networks. Secur. Commun.\
    \ Netw. 2013, 6, 669–688. [CrossRef]\n21.\nAlswailim, M.A.; Hassanein, H.S.; Zulkernine,\
    \ M. A reputation system to evaluate participants for\nparticipatory sensing.\
    \ In Proceedings of the 2016 IEEE Global Communications Conference (GLOBECOM),\n\
    Washington, DC, USA, 4–8 December 2016; pp. 1–6. [CrossRef]\n22.\nShareef, A.;\
    \ Zhu, Y. Energy modeling of wireless sensor nodes based on petri nets. In Proceedings\
    \ of the 39th\nInternational Conference on Parallel Processing, San Diego, CA,\
    \ USA, 13–16 September 2010; pp. 101–110.\n[CrossRef]\n23.\nChifor, B.C.; Bica,\
    \ I.; Patriciu, V.V. Sensing service architecture for smart cities using social\
    \ network platforms.\nSoft Comput. 2017, 21, 4513–4522. [CrossRef]\n24.\nSeshadri,\
    \ A.; Luk, M.; Shi, E.; Perrig, A.; Van Doorn, L.; Khosla, P. Pioneer: Verifying\
    \ integrity and\nguaranteeing execution of code on legacy platforms. In Proceedings\
    \ of the Twentieth ACM Symposium on\nOperating Systems Principles, Brighton, UK,\
    \ 23–26 October 2005.\nSensors 2019, 19, 4038\n20 of 20\n25.\nEl Defrawy, K.;\
    \ Francillon, A.; Perito, D.; Tsudik, G. SMART: Secure and minimal architecture\
    \ for (establishing\na dynamic) root of trust. In Proceedings of the 19th Annual\
    \ Network and Distributed System Security\nSymposium, San Diego, CA, USA, 5–8\
    \ February 2012.\n26.\nKong, J.; Koushanfar, F.; Pendyala, P.K.; Sadeghi, A.R.;\
    \ Wachsmann, C. PUFatt: Embedded platform\nattestation based on novel processor-based\
    \ PUFs. In Proceedings of the 51st ACM/EDAC/IEEE Design\nAutomation Conference\
    \ (DAC), San Francisco, CA, USA, 1–5 June 2014; pp. 1–6. [CrossRef]\n© 2019 by\
    \ the authors. Licensee MDPI, Basel, Switzerland. This article is an open access\n\
    article distributed under the terms and conditions of the Creative Commons Attribution\n\
    (CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: (Author, 2019)
  journal: Sensors (Basel)
  limitations: The paper does not address security or scalability concerns related
    to the use of MQTT in IoT systems.
  main_objective: To design a multi-layer security framework for ambient intelligence
    environments that can handle the challenges of real-time data transmission in
    healthcare applications.
  pdf_link: https://www.mdpi.com/1424-8220/19/18/4038/pdf?version=1568888936
  publication_year: 2019
  relevance_evaluation: '1.0'
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT
  title: Multi-Layer IoT Security Framework for Ambient Intelligence Environments
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1145/3208854.3208897
  analysis: '>'
  apa_citation: Li, W., Zhang, Q., Huang, K., Luo, X., & Wang, Z. (2018). Design of
    Agricultural Irrigation Hydropower Dual Control Intelligent Equipment Based on
    NB-IoT Technology. In Proceedings of the 7th International Conference on Informatics,
    Environment, Energy and Applications (pp. 42–48). https://doi.org/10.1145/3208854.3208897
  authors:
  - Lei Wen
  - Qingfang Zhang
  - Huang Ke
  - Xi Luo
  - Kai Guo
  citation_count: 1
  data_sources: Not mentioned
  explanation: 'The paper "Design of Agricultural Irrigation Hydropower Dual Control
    Intelligent Equipment Based on NB-IoT Technology" investigates the development
    of an intelligent irrigation system that utilizes NB-IoT technology for real-time
    data transmission.


    The primary objective of the study is to create a system that can collect irrigation
    information, automate irrigation, measure water consumption, and handle payments.
    NB-IoT is employed for data communication and remote control to ensure accurate
    data collection, reliable command execution, and secure charging.'
  extract_1: The equipment uses NB-IoT communication technology as data exchange and
    remote control.
  extract_2: null
  full_citation: '>'
  full_text: '>

    This website uses cookies We occasionally run membership recruitment campaigns
    on social media channels and use cookies to track post-clicks. We also share information
    about your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Use the check boxes below to
    choose the types of cookies you consent to have stored on your device. Use necessary
    cookies only Allow selected cookies Allow all cookies Necessary Preferences Statistics
    Marketing Show details       skip to main content University of Nebraska Lincoln
    Browse About Sign in Register Journals Magazines Proceedings Books SIGs Conferences
    People Search ACM Digital Library Advanced Search Conference Proceedings Upcoming
    Events Authors Affiliations Award Winners HomeConferencesIEEAProceedingsIEEA ''18Design
    of Agricultural Irrigation Hydropower Dual Control Intelligent Equipment Based
    on NB-IoT Technology RESEARCH-ARTICLE SHARE ON Design of Agricultural Irrigation
    Hydropower Dual Control Intelligent Equipment Based on NB-IoT Technology Authors:
    Li Wen , Zhang Qingfang , Huang Ke , Luo Xueke , + 1 Authors Info & Claims IEEA
    ''18: Proceedings of the 7th International Conference on Informatics, Environment,
    Energy and ApplicationsMarch 2018Pages 42–48https://doi.org/10.1145/3208854.3208897
    Published:28 March 2018Publication History 3 citation 170 Downloads eReaderPDF
    IEEA ''18: Proceedings of the 7th International Conference on Informatics, Environment,
    Energy and Applications Design of Agricultural Irrigation Hydropower Dual Control
    Intelligent Equipment Based on NB-IoT Technology Pages 42–48 Previous Next ABSTRACT
    References Cited By Index Terms Recommendations Comments ABSTRACT In order to
    establish and improve the formation mechanism of agricultural water price, promote
    agricultural water saving and sustainable development of agriculture, meet the
    need of water management and metering and charge for farmland water conservancy,
    agricultural irrigation hydropower dual control intelligent equipment based on
    NB-IoT technology. In order to ensure the safety of system charging, the reliability
    of command execution and the accuracy of data collection, the equipment adopts
    the design of "one card dual-use" and "one card dual control" according to the
    actual functional requirements of the task. A smart IC card can achieve water
    and electricity metering and payment functions, and the ladder pricing. Use NB-IoT
    communication technology as data exchange and remote control. Strong overall control
    system using PLC control, to ensure the stability of the system line. The equipment
    is installed in one cabinet, and the irrigation information collection and irrigation
    automation are realized by taking water, electricity water metering and data reporting.
    References Tian Hongwu,Zheng Wengang,Li Han. Application status and developing
    trend of open field water-saving Internet of Things technology{J}. Transact Ions
    of the CSAE. 2016(21): 1--12. Li Ying, Liu Jinhong, Liu Di, Jin Leshan. Rural
    Households Willingness to Apply IC Irrigation Management---A Case Study of Sanhe
    in Hebei Province{J}, Water Saving Irrigation. 2017(07): 102--106. WANG Qin. Research
    of Rural Irrigation Management System{J}. Techniques of Automation and Applications.
    2013, 32(8): 15--17. Show All References Cited By View all García-Martín J, Torralba
    A, Hidalgo-Fort E, Daza D and González-Carvajal R. (2023). IoT solution for smart
    water distribution networks based on a low-power wireless network, combined at
    the device-level: A case study. Internet of Things. 10.1016/j.iot.2023.100746.
    (100746). Online publication date: 1-Mar-2023. https://linkinghub.elsevier.com/retrieve/pii/S2542660523000690
    Hirsch C, Davoli L, Grosu R and Ferrari G. (2023). DynGATT. Computer Networks:
    The International Journal of Computer and Telecommunications Networking. 222:C.
    Online publication date: 1-Feb-2023. https://doi.org/10.1016/j.comnet.2023.109560
    Codeluppi G, Cilfone A, Davoli L and Ferrari G. (2020). LoRaFarM: A LoRaWAN-Based
    Smart Farming Modular IoT Architecture. Sensors. 10.3390/s20072028. 20:7. (2028).
    https://www.mdpi.com/1424-8220/20/7/2028 Index Terms Design of Agricultural Irrigation
    Hydropower Dual Control Intelligent Equipment Based on NB-IoT Technology Information
    systems Data management systems Database management system engines Information
    systems applications Mobile information processing systems Recommendations IoT
    Enabled Smart Fertilization and Irrigation Aid for Agricultural Purposes CNIOT
    ''20: Proceedings of the 2020 International Conference on Computing, Networks
    and Internet of Things Soil is of great importance to agriculture, especially
    the moisture and nutrients in the soil are the essential ingredients for growing
    plants and crops. Therefore, benefits and importance of a soil moisture and nutrient
    monitoring system in modern ... Read More Fuzzy system design for automatic irrigation
    of agricultural fields Highlights Intelligent systems in the irrigation lead to
    better scheduling according to climatic and regional conditions. Abstract One
    of the main challenges in arid and semi-arid regions is the lack of water for
    various purposes such as industrial and agricultural applications. The problem
    is even more significant in traditional agriculture. The geographical ... Read
    More Intelligent Agricultural Water and Fertilizer Irrigation System based on
    ZigBee Technology and STM32 ICNCC ''23: Proceedings of the 2023 12th International
    Conference on Networks, Communication and Computing With the continuous development
    of China''s Internet of Things technology, the application of this technology
    in agriculture is becoming more and more extensive. China''s agricultural irrigation
    has shown a trend of automation, but the current automatic ... Read More Comments
    21 References View Table Of Contents Footer Categories Journals Magazines Books
    Proceedings SIGs Conferences Collections People About About ACM Digital Library
    ACM Digital Library Board Subscription Information Author Guidelines Using ACM
    Digital Library All Holdings within the ACM Digital Library ACM Computing Classification
    System Digital Library Accessibility Join Join ACM Join SIGs Subscribe to Publications
    Institutions and Libraries Connect Contact Facebook Twitter Linkedin Feedback
    Bug Report The ACM Digital Library is published by the Association for Computing
    Machinery. Copyright © 2024 ACM, Inc. Terms of Usage Privacy Policy Code of Ethics'
  inline_citation: (Li et al., 2018)
  journal: ''
  key_findings: The proposed system effectively实现了irrigation information collection
    and irrigation automation through water intake, electricity metering, and data
    reporting.
  limitations: The paper focuses primarily on the design and implementation of the
    overall irrigation system, with limited discussion of the specific protocols and
    technologies used for real-time data transmission.
  main_objective: To develop an intelligent irrigation system that integrates data
    collection, automation, metering, and payment using NB-IoT technology.
  pdf_link: null
  publication_year: 2018
  relevance_evaluation: This paper is moderately relevant to the outline point on
    MQTT and client-server IoT networks for real-time data transmission. While it
    does not explicitly discuss MQTT or client-server architectures, it demonstrates
    the use of NB-IoT, a low-power wide-area network technology, for data transmission
    in an agricultural irrigation scenario. The paper provides insights into the challenges
    and solutions associated with real-time data transmission in a practical IoT application.
  relevance_score: '0.7'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: NB-IoT, PLC
  title: Design of Agricultural Irrigation Hydropower Dual Control Intelligent Equipment
    Based on NB-IoT Technology
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2020/8396164
  analysis: '>'
  apa_citation: Li, W., Awais, M., Ru, W., Shi, W., Ajmal, M., Uddin, S., & Liu, C.
    (2020). Review of Sensor Network-Based Irrigation Systems Using IoT and Remote
    Sensing. Advances in Meteorology, 2020, 8396164. https://doi.org/10.1155/2020/8396164
  authors:
  - Wei Li
  - Muhammad Awais
  - W M Ru
  - Weidong Shi
  - Muhammad Ajmal
  - Saad Uddin
  - Chenchen Liu
  citation_count: 30
  data_sources: Survey data, Literature review
  explanation: This reviewed article focuses on the exploration of MQTT and client-server
    IoT networks for real-time data transmission in automated irrigation management
    systems. The authors have highlighted the strengths of these technologies in addressing
    the challenges associated with reliable and efficient data transmission in irrigation
    systems.
  extract_1: MQTT and client-server IoT networks are key technologies used in real-time
    data transmission for automated irrigation management systems. These technologies
    address challenges of reliable and efficient data transmission in complex irrigation
    systems.
  extract_2: MQTT and client-server IoT networks offer secure, scalable, and real-time
    data transmission, which are crucial requirements for automated irrigation management
    systems. These systems enable remote monitoring, control, and optimization of
    irrigation processes, leading to improved water use efficiency and crop yields.
  full_citation: '>'
  full_text: ">\nReview Article\nReview of Sensor Network-Based Irrigation Systems\
    \ Using\nIoT and Remote Sensing\nWei Li\n,1 Muhammad Awais\n,1 Weimin Ru,1 Weidong\
    \ Shi\n,2 Muhammad Ajmal,3\nSaad Uddin,4 and Chenchen Liu1\n1Research Center of\
    \ Fluid Machinery Engineering & Technology, Jiangsu University, Zhenjiang, China\n\
    2College of Mechanical Engineering, Nantong University, Nantong 226019, China\n\
    3School of Agricultural Equipment Engineering, Jiangsu University, Zhenjiang,\
    \ China\n4School of Mechanical Engineering, Jiangsu University, Zhenjiang, China\n\
    Correspondence should be addressed to Wei Li; lwjiangda@ujs.edu.cn\nReceived 22\
    \ September 2019; Revised 17 March 2020; Accepted 6 August 2020; Published 7 September\
    \ 2020\nAcademic Editor: Nir Y. Krakauer\nCopyright © 2020 Wei Li et al. Tis is\
    \ an open access article distributed under the Creative Commons Attribution License,\
    \ which\npermits unrestricted use, distribution, and reproduction in any medium,\
    \ provided the original work is properly cited.\nTe motivation for this review\
    \ paper came from the developing countries where the economy is mostly dependent\
    \ on agriculture\nand climate conditions. Based on current conditions and historical\
    \ records, proﬁtability in production farming depends on\nmaking a right and timely\
    \ operational decision. Precision farming is a systematic program designed to\
    \ maximize the productivity\nof agriculture by carefully tailoring the soil and\
    \ crop management to meet the speciﬁc requirements in each ﬁeld while preserving\n\
    environmental quality. Tis review paper highlights the development of an automated\
    \ irrigation system with portable wireless\nsensor networks and decision support\
    \ methods to remotely measure the environmental parameters in an agriculture ﬁeld.\
    \ Radio\nsatellite, mobile phones, sensors, internet-based communication, and\
    \ microcontroller capture the ecological parameters such as\nsoil moisture, temperature,\
    \ humidity, and light intensity. Te knowledge gained from the sensors is transferred\
    \ directly to the\ncloud server by using IoT technology. Users from anywhere in\
    \ the world can display them through an internet-enabled device.\nDevelopment\
    \ of sensor-based application in modern agriculture makes it cost-eﬀective and\
    \ potentially productive and increases\nthe eﬃciency through precision agriculture\
    \ farming. Diﬀerent limitations have been reported in the previously reviewed\n\
    publications like the shortage of power in the ﬁeld that can be solved by using\
    \ a solar panel that recharges the battery at the same\ntime using electricity.\
    \ Bluetooth application in the agriculture sector is mainly improved by design\
    \ system optimization. Problems\nrelated to transmission and radio range frequency\
    \ can be solved by using a power class upgraded antenna.\n1. Introduction\nHuman\
    \ civilization around the globe is preparing for a\npopulation explosion to hit\
    \ a total of 10 billion inhabitants by\n2050 (United Nations, 2017). It has been\
    \ estimated that global\nfood production must increase by least 70% over the coming\n\
    years to keep pace with this growth [1–3]. Over the years,\nagricultural methods\
    \ have not improved much, and farmers\nstill use conventional strategies based\
    \ on expectations of the\ncrop’s nutritional needs. Delivering the same nutrient\
    \ input\nacross the entire farm is no longer the best choice, as this leads\n\
    to heavy fertilizer and pesticide usage, unnecessary water\nconsumption,\nenvironmental\n\
    degradation,\nand\nhigh\noperating costs [4, 5]. Extensive irrigation consumes\
    \ ap-\nproximately 70% of global water [6]. Te industrial and\ndomestic sectors\
    \ account for 13% and 20%, respectively, al-\nthough this variation in percentage\
    \ is considerable variation\nacross countries. According to the Act 1947, it deﬁnes\
    \ ag-\nriculture, including livestock’s breeding, dairy farming,\nhorticulture,\
    \ seed growing, and fruit growing [7]. Agriculture\naims to utilize maximum land\
    \ and increase the proﬁt. Te\nagricultural sector needs to adopt smarter methods\
    \ of\nfarming. Innovative techniques in agriculture, such as pre-\ncision farming\
    \ techniques, help with these concerns. Precision\nfarming is a farm management\
    \ method that uses information\ntechnology to eﬃciently distribute resources and\
    \ ensure that\nHindawi\nAdvances in Meteorology\nVolume 2020, Article ID 8396164,\
    \ 14 pages\nhttps://doi.org/10.1155/2020/8396164\nthe crops and soil receive the\
    \ exact nutrients needed at the\nperfect time for enhanced health and productivity\
    \ [8]. In\nrecent years, the researchers have tried to develop automated\ncontrol\
    \ irrigation systems for irrigation management by using\ncloud computing and IoT\
    \ technology; IoT can be charac-\nterized as a network of independent objects\
    \ that link and\nshare data remotely over the Internet [9, 10]. Te gap between\n\
    supply and demand is rising and sets new challenges adding\npressure on the agriculture\
    \ supply chain [11]. Traditionally\navailable techniques for irrigation are drip\
    \ irrigation, ditch\nirrigation, sprinkler systems, and terraced systems. Te\n\
    standard irrigation practices are classiﬁed by demand increase\nfor productivity,\
    \ shortage of water, and poor performance for\nagriculture practice. Tese problems\
    \ are solved by using\nautomated irrigation systems.\n1.1. Need for Automatic\
    \ Irrigation\n(i) Saving energy and resources for utilizing in a precise\nway.\n\
    (ii) Easily installation of the system on the ﬁeld.\n(iii) To apply the right\
    \ amount of water at the right time\nfor the sake of farmer’s easiness to control\
    \ farm\nirrigation and nursery.\n(iv) Valves are used in automated irrigation\
    \ systems to\nturn on/oﬀ the motor.\n(v) Pump or motor can be easily operated\
    \ with a sensor-\nbased controller and no need for any labor to\nmanage or monitor\
    \ irrigation systems. Crop eﬃ-\nciency includes improvement in the reduction of\
    \ the\noverwatering from the saturated soil and avoiding\nthe wrong time of irrigation\
    \ to save more water.\nA signiﬁcant part of freshwater is consumed in the\nagricultural\
    \ sector due to the unavailability of cost-eﬀective\nirrigation systems [12–14].\
    \ Fortunately, previous imple-\nmentations of agricultural monitoring systems\
    \ for irrigation\npractices were riddled with problems that prevented the\nprogress\
    \ of this sector. Previously, farm surveillance systems\ncomprised of a wired\
    \ data collection system in which a data\ntransmission linked the sensor units\
    \ with monitoring sta-\ntions [13, 15, 16]. Rainfall and evapotranspiration is\
    \ an\nimportant factor which inﬂuences the moisture of the soil in\nclimatology\
    \ and geography soil wetness measured by the\nproportion of monthly (or annual)\
    \ evaporation and pre-\ncipitation. Soil moisture daily can also be calculated\
    \ by the\nratio of daily evaporation and precipitation in the above\nperspective\
    \ from the routine weather reports precipitation is\ndirectly accessible, and\
    \ evaporation is derived from other\nmetrological essentials [17]. Heterogeneous\
    \ systems are used\nto gather information at a higher level; smart algorithms\
    \ can\nbe organized for evaluating scientiﬁc knowledge to provide\nan enhanced\
    \ understanding of the ongoing processes\n[18, 19]. For sensors-based irrigation,\
    \ diﬀerent terminolo-\ngies are used, i.e., Precision Farming, Variable Rate Tech-\n\
    nology (VRT), Smart Agriculture, Global Positioning\nService (GPS), and Site-Speciﬁc\
    \ Crop Management. [20].\nNowadays, sensors can be used in the domain of human\
    \ life\ndue to its modern technology and small size. Due to the\nconsequence of\
    \ this technology, numerous problems asso-\nciated with sensor networking are\
    \ in research. Low memory,\nenergy constraint, and data security are some of the\
    \ sig-\nniﬁcant issues of sensor networks in which diﬀerent re-\nsearchers in\
    \ the world are trying to solve these issues [21, 22].\nTis review is proposed\
    \ to support aggressive water man-\nagement for agricultural land. It aims to\
    \ explain the diﬀerent\nmodern and sensor-based irrigation management tech-\n\
    niques and track environmental parameters in the ﬁeld of\nagriculture and provide\
    \ warnings and information on\ncurrent conditions to ﬁeld managers while saving\
    \ data for\nfuture reference in a database, which includes information\ncollecting\
    \ using remote sensor collection, wireless sensor\nnetwork, target controlling,\
    \ and data management scheme\nas shown in Figure 1. Tis review paper is based\
    \ on sensor-\nbased irrigation systems and modern technologies in the\nprevious\
    \ works; this study will be helpful to new researchers\nin this ﬁeld to get more\
    \ knowledge and provide more up to\ndate and ﬁll the gap through this review study.\n\
    2. Related Work\nAn automatic sprinkler is a new irrigation technique of\nmodern\
    \ agriculture, but until now, it is not entirely accepted\namong the farmers.\
    \ Mostly, it is practiced by the researchers\nfor performing the experimental\
    \ studies. Wireless sensor\nnetwork (WSN) is conceived as a new concept in agricultural\n\
    applies, which encouraged many scholars to accomplish\nresearch in this zone.\
    \ Recent developments in wireless\nsensor network (WSN) technologies have enabled\
    \ wired\nsensor systems to solve speciﬁc problems [23–26]. Recent\ndevelopments\
    \ in wireless sensor network (WSN) technol-\nogies have enabled wired sensor systems\
    \ to solve particular\nproblems [27–29]. Tis segment is mainly focusing on how\n\
    diﬀerent researchers used WSN systems to support agri-\ncultural practices and\
    \ irrigation. Abbas et al. have developed\na smart sensor-based system for parks\
    \ and gardens that\nmake use of diﬀerent modern sensors. In this system, the\n\
    latest soil moisture sensors are used to sense the ﬁeld\nmoisture as well as diﬀerent\
    \ soil characteristics such as water\nholding capacity [30]. Te main aim of this\
    \ system is to\ncalculate the time that is taken by the sensors to get activated\n\
    and distinguished the irrigation zone. ZigBee is used to make\na connection between\
    \ sensor nodes and wireless-based\nstations. Tis system has four signiﬁcant portions,\
    \ i.e.,\ncontrol unit, water controller, security systems, and mobile\nmessaging\
    \ unit [31]. Te primary function of the water\ncontroller is to identify the level\
    \ of water in the ﬁeld and to\nrepresent the microcontroller. Output functions\
    \ of water\nsensors are to switch the microcontrollers and automatically\nturn\
    \ on or turn oﬀ the pump mechanism. If the farm is\nsubmerged, then the controller\
    \ is automatically turned on\nthe pump that takes out additional water from the\
    \ ﬁeld.\nSecurity systems and password protection were used to\ncontrol unit and\
    \ pumps from unauthorized access. Water is\nbeing applied through proper network\
    \ systems that involve\npipes, pumps, valves, and sprinklers. Irrigation sprinklers\n\
    can also be used for industrial, commercial, residential, and\n2\nAdvances in\
    \ Meteorology\nagricultural purposes. Moreover, several studies considered\nsensor-based\
    \ irrigation is a modern-day irrigation activity\nthat is practiced in a large\
    \ area under entire controlled-\nconditions, as it could eliminate the external\
    \ environmental\nfactors compared with the traditional irrigation activities.\
    \ Te\nGSM sensor-based irrigation control system with a gun\nsprinkler was declared\
    \ in [32–34] with rain gun systems\noperated with the automatic microcontroller\
    \ for crops re-\nquiring a more signiﬁcant amount of water in the ﬁeld. Cell\n\
    phone applications play a fundamental part in the multiple\nneeds of humans. GPRS\
    \ feature in the mobile phone appli-\ncation is used for irrigation control systems,\
    \ but these systems\nare not economical and cover less range of agricultural land.\n\
    Te methods used GSM feature and the android app for\nsending a message to farmers\
    \ and notify them about over-\nirrigation and under irrigation that causes losses,\
    \ leaching the\nnutrient content of soil [35, 36]. Satellite communication\nschemes\
    \ are widely used or prefer where topography dif-\nference is signiﬁcant, and\
    \ cell phone service is not reachable\n[37, 38]. Radio systems with certiﬁed power\
    \ (e.g., 5–10 W)\nwith modems are also a good option but aﬀected by topo-\ngraphic\
    \ hindrance. For radiofrequency, repeater stations may\nbecome too costly when\
    \ there is communication over a\nsigniﬁcant distance and diﬀerent topography.\
    \ Te central\naspect of this technology is to develop decision support\nsystems\
    \ based on ﬁeld-speciﬁc information that exploits the\nchemical or applied water\
    \ concentration [39]. Lamb et al.\ndeveloped a system which is operated by photovoltaic\
    \ irri-\ngation to enhance water depletion by using temperature\nsensors and moisture\
    \ sensors [40].\n2.1. Soil Evaporation Model [41, 42]. For proper irrigation\n\
    management, prediction of soil moisture plays a vital role.\nTe Penmen method\
    \ was considered to get the possible\naccurate results with a minimum error related\
    \ with living\ngrass reference crop. It was observed that the pan method\nwould\
    \ give us acceptable accuracy dependent on the position\nof the land. Te FAO Penman–Monteith\
    \ method to measure\nET0 is shown in the following equations:\nET0 \x88 0.408Δ(Rn\
    \ − G) + c(900/(T + 273))μ2(ex − eα)\nΔ + c(1 + 0.34μ2)\n,\nΔ \x88 4098[(0.6108)exp(17.27T/(T\
    \ + 273))]\n(T + 273.3)2\n,\nCP\ne0 (P) \x88 0.665 ×(10)−3,\nP \x88 101.3 293\
    \ − 0.0065z\n293\n\U0010FF12\n\U0010FF13\n5.62\n,\nE0(T) \x88(0.6108)exp\n17.27T\n\
    \U0010FF12T + 273.3\n\U0010FF13,\n(1)\nwhere ET0 \x88 reference evapotranspiration\
    \ (mm day−1),\nG \x88 heat ﬂux density of soil [MJ m−2·day−1], μ2 \x88 wind speed\n\
    at height of 2 m [ms−1], T \x88daily mean air temperature at\n3 m height [°C],\
    \ Rn \x88 crop surface net radiation [MJ\nM−2 day −1], ea \x88 actual vapor pressure\
    \ [kPa], es \x88 saturated\nvapor pressure [kPa], es-ea \x88 deﬁcit saturation\
    \ vapors\npressure [kPa], P \x88 atmospheric pressure [kPa], Δ \x88 curve of\n\
    slope vapor pressure [kPa °C−1], c \x88 psychrometric constant\n[kPa °C−1], z\
    \ \x88 elevation above sea level [m], e0 (T) \x88 satu-\nration vapor pressure\
    \ at the air temperature T [kPa],\nCP \x88 speciﬁc heat at constant pressure,\
    \ 1.013 10–3 [MJ\nkg−10C−1], λ \x88 latent heat of vaporization, 2.45[MJ kg−1],\n\
    € \x88 ration molecular weight of water vapor/day air \x88 0.622.\nTe soil moisture\
    \ estimation is mainly depending upon\nthe evapotranspiration. Te other most frequently\
    \ used\nmethod based on extraterrestrial radioactivity and tem-\nperature to evaluate\
    \ ET0 [43]:\nET0 \x88 0.0023Ra Tmax + Tmin\n2\n+ 17.8\n\U0010FF12\n\U0010FF13\n\
    \x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\nTmax + Tmin\n\U0010FF70\n,\n(2)\nwhere\
    \ ET0 \x88 reference evapotranspiration (mm/day), Tmax\nand Tmin \x88 max. temperature\
    \ and min. temperature (°C),\nRa \x88 extraterrestrial radiation (MJm−2 day−1).\n\
    User\nApplication\nDatabase\nWireless\naccess point\nGateway\nInternet\nData\n\
    acquisition unit\nAgriculture ﬁeld\nFigure 1: Wireless sensor network layout for\
    \ the automated irrigation system.\nAdvances in Meteorology\n3\nRitchie purposed\
    \ another method for the estimation of\nET0 [44] based on solar radiation and\
    \ temperature. It is\nexpressed as\nET0 \x88 1 3.87 × 103Rs 0.6Tmax + 0.4Tmin\
    \ + 29\n\0\U0010FF01\n\U0010FF02\n\U0010FF03,\n(3)\nwhere ET0 \x88 reference evapotranspiration\
    \ (mm/day); Tmax\nand Tmin \x88 maximum and minimum temperature (°C); and\nRs\
    \ \x88 solar radiation (MJm−2 day−1).\nWhen\n5 < Tmax ≤ 35°C,\nα \x88 1.1,\nTmax\
    \ > 35°C,\nα \x88 1.1 + 0.05 Tmax − 35\n\0\U0010FF01,\nTmax < 5°C,\nα \x88 0.01EXP\
    \ 0.18 Tmax − 5\n\0\U0010FF01\n\U0010FF02\n\U0010FF03.\n(4)\nAn\nevapotranspiration\n\
    measurement\nmethod\nwas\nestablished on neurofuzzy (NF) inference and originated\n\
    that the NF model (depended on relative humidity, solar\nradioactivity, and air\
    \ temperature) shows better precision\nover the combination of air temperature,\
    \ wind speed, and\nsolar radiation [45]. Soil moisture has been predicted from\n\
    the weather forecast sensors placed at the farm. Te soil\nmoisture evaporation\
    \ depends on air relative humidity, air\ntemperature, radiation, and temperature\
    \ of the soil [46]. A\nsensor-based and IoTconstructed architecture (Figure 2)\
    \ has\nbeen developed for collecting, processing, and transmitting\nthe diﬀerent\
    \ physical parameters (air temperature, air rel-\native humidity, soil moisture\
    \ soil temperature, and radia-\ntion) of the farmland related to weather forecast\
    \ information\nfor making eﬃcient irrigation.\nTe system comprises two main components,\
    \ i.e.,\nWireless Information Unit (WIU) and Wireless Sensor Unit\n(WSU). Te sensor\
    \ units have diﬀerent types of sensors to\nsense the soil temperature and soil\
    \ moisture, and the main\nmicrocontroller received sensed data and optimized it.\n\
    ZigBee is used to send data to WIU. Such WSN networks\nalso added a small transmission\
    \ spectrum and high network\ncosts [47–49]. Data acquisition structures are developed\
    \ to\nbe used in environmental compliance along with green-\nhouses or food factories\
    \ and lack of solidity to be used\noutside\nfor\nprolonged\nperiods.\nVishwakarma\n\
    and\nChoudhary developed another option for irrigation systems\noperated with\
    \ SMS facilities, and farmers received a text to\nmobile phones. Tis system incessantly\
    \ observes the irri-\ngation pump and electric motor and aware the farmers by\n\
    sending an SMS to the mobile telephone representing the\naccessibility of power\
    \ supply to the motor. Te farmer selects to\nturn oﬀ and on the electric motor\
    \ by sending an SMS to the\nsensor-based systems that are installed on the ﬁeld,\
    \ and net-\nworks can act according to the programming command as\nreceived in\
    \ SMS; the farmers are also able to set the timer\naccording to their need to\
    \ turn oﬀ the motor automatically [50].\n3. Remote Sensing in Modern Irrigation\n\
    Remote sensing is the latest technique for collecting data\nthrough diﬀerent satellite\
    \ sensor technologies. Tis tech-\nnique involves very close examination of vast\
    \ land set images\nand photos that are captured by aerial photographs which\n\
    are followed by an interpretation, identiﬁcation, and map-\nping of diﬀerent agricultural\
    \ resources and various water\ndata that are connected with forest, water bodies,\
    \ villages,\nroads, crop area, soil, and land types. Troughout the ag-\nricultural\
    \ ﬁeld, optical or visual RS is one of the most often\nexploited in remote sensing.\
    \ Tis uses various bands, i.e.,\nNIR and SWIR sensors, to collect images from\
    \ Earth surfaces\nby reﬂecting features from the surface of the target area [51].\n\
    Termal sensors are often used to measure surface tem-\nperature and have detected\
    \ rapid response variables to track\ncrop health and crop stress [52, 53]. Termal\
    \ remote sensing\nis a process of monitoring radiation emitted from the surface\n\
    of the object and transmits it to temperature without cre-\nating any contact\
    \ with the object. All surface objects emit\nradiation above the temperature of\
    \ °K or 273°C [54]. Te\nabsorption intensity of each object depends on the tem-\n\
    perature; the higher the temperature, the greater the in-\ntensity of the radiation.\
    \ Termal remote sensing provides us\nwith substantial temperature and energy transfer\
    \ from the\nearth’s surface, which is essential to assume the processes\nand responses\
    \ of the landscape [55, 56]. For many agri-\nculture application series of airborne\
    \ thermal sensors, the\nsatellite uses directly or indirectly, as shown in Table\
    \ 1.\nTese remote sensing and agrometrological station data\nare very useful to\
    \ improve the actual crop yield estimation\nand involve in the development of\
    \ crop growth and yield\nmodels. Soil moisture conditions also play a vital role\
    \ in both\nrainfed and irrigated conditions. Tus, monitoring the\nmoisture of\
    \ the soil condition status using remote sensing\ndata would be very impressive\
    \ and useful to judge the actual\ncrop condition in advance and provide valuable\
    \ suggestions\nto farmers for their pesticide application, water-saving ir-\n\
    rigation, and postponding fertilizer.\n3.1. Why Sensors in Sprinkler Irrigation.\
    \ Sensors are used in\nsprinkler irrigation to get information about real-time\n\
    physical and environmental characteristics, and they are also\nemployed to acquire\
    \ feedback and have regulators over the\ncurrent situation. Te sensors accumulated\
    \ information to\nidentify the current object, people, location, and conditions\n\
    known as context [57, 58].\nTe agriculture sector carries numerous requirements\n\
    through sensors that are as follows:\n(i) Monitoring of distributed land\n(ii)\
    \ Collecting soil, crop, and weather information\n(iii) Multiple crops in a signal\
    \ piece of land\n(iv) Fertilizer and water requirement of diﬀerent ir-\nregular\
    \ lands\n(v) Protective solution rather than the sensitive solution\nDiﬀerent\
    \ sensors that are mainly used to collect the data\nfor agricultural-related practices\
    \ and acquisition for soil,\nplant, and weather are discussed in Tables 2–4.\n\
    3.2. Use of Sensors in Modern Irrigation. Application of\nsensor is attractive\
    \ in every ﬁeld of life due to the novelty of\nthis technology and size reduction;\
    \ the ability of the sensor is\n4\nAdvances in Meteorology\nto measure the physical\
    \ characteristics and change them in\nto signal for an observer. Trough speciﬁc\
    \ irrigation man-\nagement techniques, producers can maximize their yield by\n\
    saving a large amount of water. Site-speciﬁc irrigation\ncontrol systems are facing\
    \ many challenges nowadays in\nterms of designing software, uniﬁed combination\
    \ of sensors,\ndata interface, and communication protocol [59]. Solar\npanels\
    \ and electric power are a signiﬁcant consideration.\nMany researchers are trying\
    \ to address the diﬀerent issues\nrelated to irrigation control and interfacing\
    \ sensors by using\nTable 1: Satellite and airborne thermal infrared sensors attached\
    \ to platforms.\nSensor satellite\nWavelength (μm)\nWaveband\n(thermal)\nSpatial\
    \ resolution\n(m)\nTemporal resolution\n(days)\nReference\nMODIS\n3.66–4.55 :\n\
    8.4–14.80\n20–25, 29–35\n10000\n1\nNASA (2016B)\nAATSR/\nENVISAT\n11.0–12.0\n\
    6-7\n1000\n1\nLlewellyn-Jones et al.\n(2001)\nASTER\n8.125–11.65\n10–14\n90\n\
    16\nNASA (2016a)\nCBERS/Landsat\n14.4–12.5\n4\n80\n26\nCBERS (2016)\nABI/GOES-R\n\
    10.1–13.6\n13–16\n2000\nHourly\nGOES-R (2016)\nAVHRR\n3.5–3.93,\n10.50–12.5\n\
    3\n1100\n0.5\nNOAA (2016)\nAirborne∗\nAtlas\n8.32–12.02\n10–15\n10\n—\nLo et al.\
    \ (1997)\nTIMS\n8.2–12.2\n6\n50\n—\nKealy and Hook (1993)\n∗Human operated.\n\
    WWW of\nweather\ndata\nCentralized\ndatabase\nIntranet/\ninternet\nApplication\n\
    Irrigation\nplanning\nUser\nApplication\nlayer\nSoil moisture\nprediction\nalgorithm\n\
    Responsive web-\nbased interface for\nreal-time\nmonitoring\nWeb service for\n\
    online weather\ndata collection\nWeb service to\ncontrol water\nmotor\nWeb service\
    \ for\nﬁeld sensor data\ncollection\nWi-Fi\n/mobile data\nconnection\nWi-Fi\n\
    /mobile data\nconnection\nRaspberry Pi\nwith Arduino\nUno and relay\nswitch\n\
    Water\nmotor\nStandalone sensor\nNode scenario\nSensors\nZigBee\nnetwork\nWSN\
    \ scenario\nServer\nData processing and intelligence layer\nField data collection\
    \ device\nData collection and transmission layer\nSensor node\nGateway node\n\
    Inertnet/intranet\nFigure 2: Te architecture of the proposed system.\nAdvances\
    \ in Meteorology\n5\nnumerous approaches. Shen et al. developed a GSM-SMS\nremote\
    \ autonomous control system for the greenhouse [60],\nwhich depends on PC-based\
    \ dataset and linked with the base\nstation at the same time. Te component of\
    \ the based station\nis an actuator, GSM module, sensors, and microcontroller.\n\
    Te GSM module plays a vital role in the base station to send\nand receive messages\
    \ from central stations. Various tech-\nniques can be used to calculate the soil\
    \ moisture (in the\ngravimetric and volumetric forms), which are further\nclassiﬁed\
    \ into modern and classical procedures for both\nlaboratory and in situ measurements.\
    \ Te conventional\ntechniques to calculate the moisture in soil include tensi-\n\
    ometers methods, thermogravimetric, gypsum block, and\ncalcium carbide neutron\
    \ scattering [61]. While for modern\ntechniques, diﬀerent latest dielectric technologies\
    \ and in-\nfrared moisture balance such as heat ﬂux moisture sensors,\ntime domain\
    \ reﬂectometry (TDR), capacitance and optical\nmethod, frequency domain reﬂectometry\
    \ (FDR), and\nmicroelectromechanical systems are used [62, 63]. Radio\ntransmission\
    \ wireless systems were used to transfer soil\nmoisture data from data loggers\
    \ to an essential data logging\nsite where decisions are made and physically improved\
    \ [64].\nFigure 3 describes the practical approaches of the wireless\nsensor network\
    \ mounted on the ﬁeld. In this framework,\nfarmers can obtain information in real-time\
    \ (soil moisture\nand crop growth) through SMS facility or some android\napplication\
    \ for their area to get better management practices\nand crop yield. By utilizing\
    \ this information, farmers can get\nupdates about the farmland and nursery and\
    \ could be opined\nabout when and how much water is needed for irrigation\npractices.\
    \ Automatic irrigation systems or nursery irrigation\nsystems permit farmers to\
    \ give or supply the right time of\nTable 2: Sensors used for irrigation control\
    \ systems in farming domains (soil sensors).\nSensor\nTemperature Moisture\nDielectric/\n\
    permittivity\nRain\nwater\nConductivity\nReference\nHydra probe II soil sensor\n\
    ✓\n✓\n✓\n✓\n✓\nhttp://www.stevenswater.com\nMP406 soil moisture\nsensor\n✓\n✓\n\
    ✓\n—\n—\nhttp://www.ictinternational.com.\nau\nEC sensor (EC25)\n✓\n✓\n—\n—\n\
    http://www.stevenswater.com\nPogo portable soil sensor\n✓\n✓\n✓\n✓\n✓\nhttp://www.stevenswater.com\n\
    ECRN-100 high-REC rain\n—\n—\n—\n✓\n—\nhttp://www.decagon.com\nECRN-50 low-REC\
    \ rain\n—\n—\n—\n✓\n—\nhttp://www.decagon.com\nTipping bucket rain gage\n—\n—\n\
    ✓—\n—\nhttp://www.stevenswater.com\n107-L temperature sensor\n✓\n—\n—\n—\n—\n\
    http://www.campbellsci.com\nTable 3: Sensors used for irrigation control systems\
    \ in farming domains (leaf/plant).\nSensor\nPhotosynthesis Moisture Hydrogen Temperature\
    \ Wetness CO2\nReference\n237 leaf wetness\n—\n✓\n—\n✓\n✓\n—\nhttp://www.campbellsci.com\n\
    SenseH2™ hydrogen\n—\n—\n✓\n—\n—\nhttp://www.ntmsensors.com\nYSI 6025 chlorophyll\n\
    —\n—\n—\n—\n—\nhttp://www.ysi.com\nTT4 multisensor thermocouple\n—\n✓\n—\n✓\n\
    —\n—\nhttp://www.ictinternational.com\nTPS-2 portable photosynthesis\n✓\n✓\n—\n\
    ✓\n✓\n✓\nhttp://www.ppsystems.com\nCl-340 handheld\n✓\n✓\n✓\n✓\n✓\n✓\nhttp://www.solfranc.com\n\
    LW100 leaf wetness\n—\n✓\n—\n✓\n✓\n—\nhttp://www.globalws.com\nLeaf wetness sensor\n\
    —\n—\n—\n—\n—\nhttp://www.decagon.com\nField scout (CM1000TM)\n✓\n—\n—\n—\n—\n\
    —\nhttp://www.specmeters.com\nLT-2M (LTS)\n—\n—\n—\n✓\n—\n—\nhttp://www.solfranc.com\n\
    Table 4: Sensors used for irrigation control systems in farming domains (weather).\n\
    Sensor\nTemperature\nWind\nspeed\nWind\ndirection\nHumidity Atmospheric\nReference\n\
    Met station one\n✓\n✓\n✓\n✓\n✓\nhttp://www.stevenswater.com\nCM-100 compact weather\
    \ sensor\n✓\n✓\n✓\n✓\n✓\nhttp://www.stevenswater.com\nHMP4SC (Visalia’s HUMICAP\
    \ H-\nchip)\n✓\n—\n—\n✓\n✓\nhttp://www.campbellsci.com\nSHT75 (heat and temp.\
    \ sensor)\n✓\n—\n—\n✓\n✓\nhttp://www.sensirion.com/\nhumidity\nSHT71\n✓\n—\n—\n\
    ✓\n✓\nhttp://www.sensirion.com\nXFAM-115KPASR\n✓\n—\n✓\n✓\nhttp://www.pewatron.com\n\
    Cl-340 handheld photosynthesis\n✓\n—\n—\n✓\n—\nhttp://www.decagon.com\n6\nAdvances\
    \ in Meteorology\nwater with the right amount. Tis system also allows the\nfarm\
    \ manager to maintain the moisture level concerning\ntime. Some studies proved\
    \ that if we apply the water at the\nright time and right amount, the productions\
    \ can be in-\ncreased up to 25% to 30% [65, 66].\n3.3. Wireless Signal Communication\
    \ in Irrigation Systems.\nVarious designs and architectures were proposed for\
    \ plug-\nand-play technology to measure the soil moisture and de-\nvelop the sprinkler\
    \ valve controller for site-speciﬁc irrigation\nautomation and management through\
    \ distributed sensor\nnetwork. Wall et al. stated that data arrangement and control\n\
    management are the most eﬀective techniques to manage all\nthe data using low-cost\
    \ microcontrollers. However, it is\nchallenging to set the sensing stations on\
    \ the ﬁeld to connect\nbase stations with wires because of station maintenance,\n\
    labor cost, and considerable distance, especially more than\n10 m. Wires systems\
    \ are not very much feasible because\ncables are damaged by farm equipment and\
    \ animals. Tat is\nwhy wireless networks develop grate intentions nowadays\nand\
    \ avoid many of these problems and provide easy re-\nplacement of broadcast stations.\
    \ Diﬀerent wireless tech-\nnologies are often used in much sensor-based research\
    \ work,\ni.e., Wi-Fi, Bluetooth, and ZigBee [68]. A detailed assess-\nment of\
    \ diﬀerent sensor-based technology is discussed in\nTable 5. ZigBee wireless sensors\
    \ are the low-cost and lower-\npower-consumption technology that is mostly used\
    \ to de-\nvelop the wireless sensor network over diﬀerent techniques.\nIt was\
    \ established in May 2003, and ISM (industrial scientiﬁc\nand medical) bands are\
    \ used to operate, i.e., 2.4 GHz,\nglobally.\nFor integrating sensors and actuators,\
    \ there are some\ncontrol standards for RS485 (current based) and RS232\n(voltage\
    \ base) wireless protocol that have been widely ap-\nplied and well documented\
    \ in some industrial application.\nBluetooth and ZigBee (IEEE 802.11 standards)\
    \ are designed\nfor radio frequency of cell phone applications that require\n\
    insuﬃcient data, proper network security, and long battery\nlife [69]. Kim et\
    \ al. stated that ZigBee is a low-cost wireless\nnetworking system with advanced\
    \ features; they provide\nhigh reliability due to its direct-sequence (DS/SS)\
    \ and mesh\nnetworking systems. ZigBee technology is cheaper and re-\nliable than\
    \ Bluetooth, and it can also be used to ensure the\nintegrity and to avoid interference.\
    \ ZigBee not only requires\ndeﬁcient power than Bluetooth but can also transmit\
    \ ef-\nfectively over less distance (e.g., 30 m). Advanced wireless\ntransmitters\
    \ are accessible that are operated with Bluetooth\nand communicate up to 1 km.\
    \ Mostly in the agriculture\nsector, these types of wireless technologies are\
    \ connected to\ncontrol and sense the ﬁeld condition [70, 71].\n4. Description\
    \ of the Data Acquisition\nSystem for the Specific Field\nA total of three sensors,\
    \ including a air temperature and\nhumidity sensor, a light intensity sensor,\
    \ and a soil moisture\nsensor, were used for the assessment of any particular\
    \ area to\ncapture four environmental parameters, namely, tempera-\nture, humidity,\
    \ surrounding light intensity, and soil mois-\nture content. Te data collection\
    \ method provides the\nopportunity to assess the ecological conditions in the\
    \ ag-\nricultural sector accurately. Also, the system’s versatility\nallows additional\
    \ monitors, including a pH sensor, to esti-\nmate plant nutrients, a UV sensor\
    \ to determine ultraviolet\nlight intensity, greenhouse gases and pressure sensor\
    \ to track\nthe ambient air composition, a rain sensor is used to detect\nrainy\
    \ weather, and a water level sensors used to identify\nﬂood in the region, and\
    \ these are included in the system\naccording to client requirement. Te module\
    \ was used to\nread the surrounding environment captured by the sensors\nand process\
    \ the data, and wireless communication transmits\nthe data to the cloud server\
    \ over the network system. Vital\ninformation from all agricultural ﬁelds was\
    \ gathered and\nRemote users\nInternet\nLocal user\nSink\nStorage\nSensor ﬁeld\n\
    Target node\nSensor nodes\nStorage\nFigure 3: Sensor network application in ﬁeld\
    \ source [67].\nAdvances in Meteorology\n7\nprocessed on the cloud server, as\
    \ shown in Figure 4. Te\nirrigation surveillance system established for this assessment\n\
    is cost-eﬀective and highly interactive and can be easily\nadapted to any agricultural\
    \ ﬁeld using the plug-and-play\ntechnique. Tis system is also operated by solar\
    \ energy,\nrendering individual data acquisition units entirely wireless\nand\
    \ portable, thus eliminating the need for cabling for power\nsupply and data transmission,\
    \ leading to reduce installation,\nmaintenance, and relocation costs.\n4.1. On-Site\
    \ and Functionality Analysis. Te sprinkler irri-\ngation system was designed for\
    \ wheat crop for an area of 1\nacre. Te total area was divided into four plots,\
    \ each part\nconsisting of a rain gun. Te device has been tested to ensure\nthat\
    \ environmental data can be collected via sensors; the\ninformation can be transmitted\
    \ to the IoT platform through\nan online website. Te machine has been running\
    \ for a few\nminutes to get several data entries. Sprinkler ﬁeld has been\ndivided\
    \ into four plots, and soil moisture sensors have been\nmounted in each location.\
    \ Tis test was conducted to ensure\nthat the device can perform as required under\
    \ real-world\ndaily usage conditions. Te prototype and layout of the data\nacquisition\
    \ unit were switched on and staked into the\nground of the research ﬁeld, as shown\
    \ in Figure 5. All four\nplots were atomized by connecting them through Wi-Fi\n\
    networking. An on-site website was developed, which gives\nthe current soil moisture\
    \ readings of all the sensors installed\nin the ﬁeld and save the recorded data.\
    \ Sensor stand, board\ncircuits, and continuous electric supply were managed using\n\
    an uninterruptible power supply.\nTe system was able to capture broadcast and\
    \ envi-\nronmental data as designed successfully. Te light intensity\nsensors\
    \ were also closed as the water was poured into the soil\nto simulate a change\
    \ in environmental conditions. Te\ncomputer was able to detect these changes without\
    \ any\nproblems, as shown in Figure 6. All tested ﬁelds were at-\nomized once\
    \ again by connecting them through a Wi-Fi\nnetwork. An on-site website was also\
    \ devolved, which gives\nthe current soil moisture readings of all the sensors\
    \ installed\nin the ﬁeld and saves the recorded data. An account on Ting\nSpeak\
    \ was also made to make graphs of the recorded data.\nSensor stand, board circuits,\
    \ and continuous electric supply\nwere managed using an uninterruptible power\
    \ supply.\nMoreover, one point of contention during the prototype test\nwas the\
    \ wireless connectivity range. As this test was carried\nout by linking a prototype\
    \ signal processing unit to a Wi-Fi\nnetwork established by a Wi-Fi hotspot from\
    \ a cell phone,\nthe device would lose its connection and stop transmitting\n\
    information to the IoT platform if it moved approximately\n5 m apart from the\
    \ user. Tis problem could be overcome by\ninstalling wireless access points (WAPs)\
    \ throughout the ﬁeld\nvia the wireless local area network (WLAN) since this is\
    \ the\nprimary form of wireless connectivity for the full-scale\nimplementation\
    \ of the device. One WAP implementation\nwill provide an enhanced wireless network\
    \ range of up to\n0.5 km. Tis system facilitated to improve the labor eﬃ-\nciency,\
    \ water productivity, and water use eﬃciency in cereal\ncrops (i.e., wheat and\
    \ maize) and saved water about 44% in\nthe case of a sprinkler irrigation system.\
    \ It was also con-\ncluded that 20 feet border treatment was better treatment\n\
    than other treatments as agronomic results were better for\nthis treatment, and\
    \ cutoﬀ distance must be between 60 and\n70 percent of total length. Based on\
    \ wireless sensor network\nsystems, diﬀerent opportunities must have been created\
    \ for\nexisting application areas that require real and remote\nsensing data for\
    \ observing consequences. However, these\ntools have possessed many problems that\
    \ must be solved for\na long-time variability of the proposed system. Diﬀerent\n\
    issues like more energy are required for operating sensors\nnodes, development\
    \ issues containing communication, de-\nployment, and protocols. Te problems in\
    \ wireless networks\nwere discussed in the previous work [22, 72] and have been\n\
    addressed to a solution [73, 74]. Tere are some possibilities\nthat strong wind\
    \ also creates some problem in the sensor so\nthere should be robust ﬁtting around\
    \ the sensors to support\nthe nodes. Te advantages and disadvantages of (WSN)\
    \ in\nsensor-based irrigation are discussed in Table 6.\n4.2. Advantages of Automated\
    \ Sprinkler Irrigation. Te\nprimary objective of automated sprinkler irrigation\
    \ is to\nsupply a minimum amount of irrigation water throughout\nthe ﬁelds. Sensor-based\
    \ irrigation has a signiﬁcant poten-\ntiation to save water and increase economic\
    \ eﬃciencies. Te\nmain advantage of this system is to reduce the input cost or\n\
    Sensors\nMicrocontroller\nIoT platform\nUser\nFigure 4: Block diagram of the agriculture\
    \ monitoring system.\nTable 5: Communication technologies in modern irrigation.\n\
    Parameters\nBluetooth\nZigBee\nWibree\nWIFI\nData rate power consumption\n1 Mbps\
    \ medium\n250 kbps low\n1 mbps low\n13–56 high\nRange of frequency band\n2.5 GHz\
    \ (35–3500 ft)\n2.4 GHz (30–1.6 m)\n2.5 GHz up to 10 ft\n2.5 GHz (100–150 ft)\n\
    Security\n64 or 128 bits\n128 bits\n128 bits\n128 bits\nCost modulation\nLow FHSS\n\
    Low DSSS, CA/CSMA\nLow FHSS\nHigh CCK/DSSS, OFDM\n8\nAdvances in Meteorology\n\
    Figure 6: On-site analysis data on IoT platform.\n(a)\n(b)\n(c)\nFigure 5: On-site\
    \ test for automated irrigation: (a) layout sketch; (b) solenoid valves, GSM module,\
    \ and moisture sensor; (c) installed\nmoisture sensor.\nAdvances in Meteorology\n\
    9\nto increase the yield for the same input. With this irrigation\ntechnology,\
    \ the human intervention must be minimized.\nWith the automated technology of\
    \ irrigation, human in-\ntervention can be reduced [75, 76]. Some advantages of\
    \ this\ninnovation can be discussed as follows.\n4.2.1. Water-Saving Technology.\
    \ Many researchers have\nbeen reported that the intelligence irrigation method\
    \ is the\nideal possible method of accomplishing signiﬁcant water\nsaving [77].\
    \ Muñoz-Carpena and Dukes stated that sprinkler\nirrigation with sensor applications\
    \ could improved the water\neﬃciency up to 80–90% as against 40–45% in the surface\n\
    irrigation method [78]. Blomquist et al. [62] concluded that\n16% of water could\
    \ be saved in this irrigation practice.\n4.2.2. System Cost. Te irrigation system\
    \ is developed with\nthe module design, which helped a lot to reduce the cost.\
    \ Te\nwireless sensor node and actuator node were about 30 US\ndollars, and the\
    \ portable controller was around $100. Te\ntotal cost to build up a wireless ﬁeld\
    \ irrigation system\ndepended on the planting area, and for a case of 5000 m2,\
    \ it\nwas approximately $500 in terms of hardware cost.\n4.2.3. Proﬁt and Yield.\
    \ Proper timing of irrigation is stated\nto be a critical factor in production\
    \ while delaying irrigation\ncan result in losses of between US$ 62/ha and US$\
    \ 300/ha.\n[79]. El-Kader and El-Basioni conducted an experiment on\n[67] potato\
    \ yield measured in Egypt using sensor-based\nnetwork technology. It has been\
    \ conﬁrmed that yields have\nimproved, and a loss of 2 billion pounds has been\
    \ recovered\nin a year. Due to these reasons, the quality of water used is\nreduced\
    \ and the distribution of water is not optimized.\nFarmers irrigate their ﬁelds\
    \ based on their traditional in-\nformation without worrying about soil moisture\
    \ levels, soil\nquality, crop water requirements, and weather forecasting.\n4.3.\
    \ Control Options of Sprinkler Mechanism. During irri-\ngation, the event control\
    \ system is responsible for regulating\nthe speed of sprinkler systems multiple\
    \ times and also moves\nthe sprinkler position at 360° of the ﬁeld, where the\
    \ rate will\nbe changed and decision about more lees or no irrigation\nwater is\
    \ taken. Tis phenomenon would be used where\ndiﬀerent crops are planted in the\
    \ same ﬁeld [80, 81]. A series\nof the on-oﬀ cycle can be used to accomplish the\
    \ water depth\napplication for the individual sprinkler control system\n[82, 83].\
    \ Adjusting the traveling speed of the center pivot\nsprinkler system is the most\
    \ basic method to measure the\nwater depth against ﬁeld topographic, soil condition,\
    \ and\ndiﬀerent crops. Te primary function of center pivot systems\nis to irrigate\
    \ the land from one point in a circle and work on\nthe diﬀerent topography regions\
    \ having a range in soil\ntextures present under a single machine. So that these\
    \ factors\nare the main reasons to use the controller to manage the\nwater application\
    \ in the ﬁeld based upon the need. Site-\nspeciﬁc irrigation and variable rate\
    \ irrigation are the main\nterms that describe the water applications devises\
    \ in order to\nmaximize the yield and economical value for irrigation water\n\
    applied through diﬀerent moving systems [84, 85]. Chavez\net al. reported that,\
    \ for better performance of remote irri-\ngation systems, control and monitoring\
    \ systems are ﬁxed on\ntwo diﬀerent lined moves. A series of in-ﬁeld and onboard\n\
    wireless sensor networks are used to verify the precision\nirrigation systems\
    \ with high accuracy. Separate nozzle\nregulators were pounded according to sanction\
    \ maps\n[86, 87]. Various manifolds attached with diﬀerent sizes of\nsprinkler\
    \ nozzles should be used for accomplishing and\ncontrolling irrigation water application\
    \ depth to ﬂuctuate\nwater and nitrogen application [88, 89]. Usually, open so-\n\
    lenoids were attached with systems to allow the insurance to\nsupply the irrigation\
    \ water even when control systems failed.\nFor controlling irrigation water application,\
    \ a variable ﬂow\nsprinkler was developed by King and Kincaid [90] and Liu\net\
    \ al. [91]. It used the activated pin, which is operated\nmechanically to regulate\
    \ the oriﬁce area of nozzle and\nmainly it depends on operating pressure, and\
    \ the ﬂow rate of\nthe sprinkler is adjusted within the range of 35% to 100%.\n\
    Hydraulic or electric actuators were used to control the pin.\nTe main problem\
    \ is that the droplet size distribution and\nthe wetted pattern are changed with\
    \ ﬂow rate and create a\nuniformity issue with overlapping of the sprinkler pattern\n\
    [92, 93]. 2-3 manifolds were used in these systems, which\nserve to maintain the\
    \ depth of water and water application\nrate.\n5. Summary and Conclusion\nTe objective\
    \ of this research work was to highlight the\ndevelopment of improved agricultural\
    \ monitoring systems\nthat address problems of existing plans, including price,\n\
    availability, and outdoor accessibility. A simple, low-cost,\nsustainable agricultural\
    \ control system that is extremely\ncustomizable and reliable for outdoor use,\
    \ self-powered to\nreduce the need for long power supply cables, while pro-\n\
    viding better functionality that helps to reduce the agri-\ncultural burden and\
    \ promotes crop yields and income, has\nbeen developed. In semiarid regions of\
    \ emerging countries,\nsmall farmers and marginal farmers (who have land b/w 4\n\
    and 6 hectares) are facing many problems regarding pow-\nered irrigation. Most\
    \ of the time, they are relying on seasonal\nprecipitation for their productivity.\
    \ Te data analysis unit\nTable 6: Advantages and disadvantages of wireless sensor\
    \ network.\nAdvantages\nDisadvantages\nProvides dynamic navigation and easy to\
    \ move and replace stations\nEnergy consumption for autonomous\nAllows farmers\
    \ to maximize their productivity during conservation of water\nLimited computing\
    \ power\nNetwork data are used to manage the sensors and microcontrollers are\
    \ available in less amount\nSmall memory and data security\nTe eﬀectiveness of\
    \ the sensor depends on the control coordination and instrumentation data\nInterference\
    \ by vegetation\n10\nAdvances in Meteorology\ncomposed of sensors and integrated\
    \ circuits may success-\nfully capture the physiological conditions such as temper-\n\
    ature, humidity, light density, and soil water content. Tese\ndata are vital for\
    \ ﬁeld managers to manage resources, de-\nvelop predictive crop growth models,\
    \ and automate farm\nmachinery. Tis contributes to successful agriculture ac-\n\
    tivities, and resource use decreased the operational costs and\nworkloads and\
    \ increased the crop productivity. Te WSN\nsystem built in this study oﬀers an\
    \ enhanced monitoring\nrange. Te intelligent sensor-based irrigation system work\n\
    has been discussed in this review paper, controlling the\ndiﬀerent irrigation\
    \ management practices by sensing dif-\nferent agriculture parameters such as\
    \ soil moisture, soil pH,\nhumidity, and temperature. Tese systems allow farmers\
    \ to\nmonitor and control their farmland with user friendly\nmobile applications.\
    \ Te sensor-based irrigation protects\nwater pumps against any harmful damages\
    \ by controlling\nand monitoring water pressure and input voltage. Demands\nfor\
    \ sensor-based irrigation increase day by day and have a\nsubstantial future scope.\
    \ It is time-saving and also removes\nthe human error by controlling soil moisture\
    \ levels. Te\ndevelopment of sensor-based applications in agriculture\nmakes it\
    \ possible to increase the productivity, eﬃciency, and\nproﬁtability through precision\
    \ agriculture farming.\nData Availability\nNo data are used to support the study.\n\
    Conflicts of Interest\nTe authors declare no conﬂicts of interest.\nAuthors’ Contributions\n\
    All authors signiﬁcantly contributed to the scientiﬁc study\nand writing. Wei\
    \ Li. and Weidong Shi were involved in the\nconceptualization; Muhammad Awais\
    \ was involved in the\nmethodology and software; Saad Uddin curated the data;\n\
    Chenchen Liu and Muhammad Awais wrote and prepared\nthe original draft; Weimin\
    \ Ru, Muhammad Ajmal, and Saad\nUddin wrote, reviewed, and edited the manuscript;\
    \ Wei Li\nsupervised the study.\nAcknowledgments\nTe work was sponsored by the\
    \ Synergistic Innovation\nCenter of Jiangsu Modern Agriculture Equipment and\n\
    Technology (No.4091600014).\nReferences\n[1] P. K. Tornton, P. Kristjanson, W.\
    \ F¨orch, C. Barahona,\nL. Cramer, and S. Pradhan, “Is agricultural adaptation\
    \ to\nglobal change in lower-income countries on track to meet the\nfuture food\
    \ production challenge?” Global Environmental\nChange, vol. 52, pp. 37–48, 2018.\n\
    [2] R. Sonnino, C. L. S. Tegoni, and A. De Cunto, “Te challenge\nof systemic food\
    \ change: insights from cities,” Cities, vol. 85,\npp. 110–116, 2019.\n[3] W.\
    \ S. de Amorim, A. Borchardt Deggau, G. do Livramento\nGonçalves,\nS.\nda\nSilva\n\
    Neiva,\nA.\nR.\nPrasath,\nand\nJ. B. Salgueirinho Os´orio de Andrade Guerra, “Urban\
    \ chal-\nlenges and opportunities to promote sustainable food security\nthrough\
    \ smart cities and the 4th industrial revolution,” Land\nUse Policy, vol. 87,\
    \ Article ID 104065, 2019.\n[4] F. A. Abdullah and B. A. Samah, “Factors impinging\
    \ farmers’\nuse of agriculture technology,” Asian Social Science, vol. 9,\nno.\
    \ 3, p. 120, 2013.\n[5] D. Blandford, J. Braden, and J. S. Shortle, “Economics\
    \ of\nnatural resources and environment in agriculture,” in Agri-\nculture and\
    \ the Environment, pp. 18–34, Elsevier, Amsterdam,\nNetherlands, 2014.\n[6] G.\
    \ E. Eckstein, “Water scarcity, conﬂict, and security in a\nclimate change world:\
    \ challenges and opportunities for in-\nternational law and policy,” Wisconsin\
    \ International Law\nJournal, vol. 27, p. 409, 2009.\n[7] N.\nSharma,\nYouths\n\
    Perception\nfor\nAgricultural\nEnter-\npreneurship: A Case Study of Tehsil Karsog\
    \ in Himachal\nPradesh, Department of Business Management College of\nHorticulture,\
    \ Dr. Yashwant Singh Parmar University of\nHorticulture and Forestry, Nauni, India,\
    \ 2016.\n[8] T. X. Cuong, H. Ullah, A. Datta, and T. C. Hanh, “Eﬀects of\nsilicon-based\
    \ fertilizer on growth, yield and nutrient uptake of\nrice in tropical zone of\
    \ Vietnam,” Rice Science, vol. 24, no. 5,\npp. 283–290, 2017.\n[9] P. Deshpande,\
    \ A. Damkonde, and V. Chavan, “Te internet of\nthings: vision, architecture and\
    \ applications,” International\nJournal of Computer Applications, vol. 178, no.\
    \ 2, pp. 1–14,\n2017.\n[10] X. Liu, X. Zhu, Q. Zhang, T. Yang, Y. Pan, and P.\
    \ Sun, “A\nremote sensing and artiﬁcial neural network-based integrated\nagricultural\
    \ drought index: index development and applica-\ntions,” Catena, vol. 186, Article\
    \ ID 104394, 2020.\n[11] A. Evans, Te Feeding of the Nine Billion. Global Food\
    \ Security\nfor the 21st Century, Chatham House, London, UK, 2009.\n[12] J. Gubbi,\
    \ R. Buyya, S. Marusic, and M. Palaniswami, “Internet\nof Tings (IoT): a vision,\
    \ architectural elements, and future\ndirections,” Future Generation Computer\
    \ Systems, vol. 29,\nno. 7, pp. 1645–1660, 2013.\n[13] M. Mahbub, “A smart farming\
    \ concept based on smart\nembedded electronics, internet of things and wireless\n\
    sensor network,” Internet of Tings, vol. 9, Article ID\n100161, 2020.\n[14] L.\
    \ Xin, L. Guang, and Y. Ming, “Design on the precise reg-\nulating control system\
    \ for moisture and nutrient of plants\nbased on PLC,” Physics Procedia, vol. 33,\
    \ pp. 429–436, 2012.\n[15] N. Zhang, M. Wang, and N. Wang, “Precision agriculture—a\n\
    worldwide overview,” Computers and Electronics in Agricul-\nture, vol. 36, no.\
    \ 2-3, pp. 113–132, 2002.\n[16] S. Pallavi, J. D. Mallapur, and KY. Bendigeri,\
    \ “Remote sensing\nand controlling of greenhouse agriculture parameters based\n\
    on IoT,” in Proceedings of the 2017 International Conference\non Big Data, IoT\
    \ and Data Science (BID), December 2017.\n[17] Q. Chen and T. Chen, “Estimation\
    \ of river basin evapo-\ntranspiration over complex terrain using NOAA AVHRR\n\
    data,” Acta Geographica Sinica, vol. 48, no. 1, pp. 61–69,\n1993.\n[18] O. K¨orner\
    \ and G. Van Straten, “Decision support for dynamic\ngreenhouse climate control\
    \ strategies,” Computers and Elec-\ntronics in Agriculture, vol. 60, no. 1, pp.\
    \ 18–30, 2008.\n[19] M. Kacira, S. Sase, L. Okushima, and P. P. Ling, “Plant re-\n\
    sponse-based sensing for control strategies in sustainable\nAdvances in Meteorology\n\
    11\ngreenhouse production,” Journal of Agricultural Meteorology,\nvol. 61, no.\
    \ 1, pp. 15–22, 2005.\n[20] A. Srinivasan, Handbook of Precision Agriculture:\
    \ Principles\nand Applications, CRC Press, Boca Raton, FL, USA, 2006.\n[21] C.\
    \ Ceken, “An energy eﬃcient and delay sensitive centralized\nMAC protocol for\
    \ wireless sensor networks,” Computer\nStandards & Interfaces, vol. 30, no. 1-2,\
    \ pp. 20–31, 2008.\n[22] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E.\
    \ Cayirci,\n“A survey on sensor networks,” IEEE Communications\nMagazine, vol.\
    \ 40, no. 8, pp. 102–114, 2002.\n[23] K. Patil and N. Kale, “A model for smart\
    \ agriculture using\nIoT,” in Proceedings of the 2016 International Conference\
    \ on\nGlobal Trends in Signal Processing, Information Computing\nand Communication\
    \ (ICGTSPICC), IEEE, Jalgaon, India,\nDecember 2016.\n[24] S. Prathibha, A. Hongal,\
    \ and M. Jyothi, “IoT based moni-\ntoring system in smart agriculture,” in Proceedings\
    \ of the 2017\nInternational Conference on Recent Advances in Electronics\nand\
    \ Communication Technology (ICRAECT), IEEE, Banga-\nlore, India, March 2017.\n\
    [25] G. Sushanth and S. Sujatha, “IOT based smart agriculture\nsystem,” in Proceedings\
    \ of the 2018 International Conference\non Wireless Communications, Signal Processing\
    \ and Net-\nworking (WiSPNET), IEEE, Chennai, India, March 2018.\n[26] D. Davcev,\
    \ “IoT agriculture system based on LoRaWAN,” in\nProceedings of the 2018 14th\
    \ IEEE International Workshop on\nFactory Communication Systems (WFCS), June 2018.\n\
    [27] A. Z. Abbasi, N. Islam, and Z. A. Shaikh, “A review of wireless\nsensors\
    \ and networks’ applications in agriculture,” Computer\nStandards & Interfaces,\
    \ vol. 36, no. 2, pp. 263–270, 2014.\n[28] A. R. Roselin and A. Jawahar, “Smart\
    \ agro system using\nwireless sensor networks,” in Proceedings of the 2017 Inter-\n\
    national Conference on Intelligent Computing and Control\nSystems (ICICCS), IEEE,\
    \ Madurai, India, June 2017.\n[29] B. Kavitha, “Agricultural crop monitoring sensors\
    \ using IoT-a\nstudy,” in Proceedings of the 2017 11th International Con-\nference\
    \ on Intelligent Systems and Control (ISCO), Coimba-\ntore, India, January 2017.\n\
    [30] A. H. Abbas, M. M. Mohammed, G. M. Ahmed, E. A. Ahmed,\nand R. A. Abdel Azeem\
    \ Abul Seoud, “Smart watering system\nfor gardens using wireless sensor networks,”\
    \ in Proceedings of\nthe 2014 International Conference on Engineering and Tech-\n\
    nology (ICET), April 2014.\n[31] M. M. Ahmed, E. Ahmed, and K. T. Ahmmed, “Automated\n\
    irrigation control and security system with wireless messag-\ning,” in Proceedings\
    \ of the 2013 International Conference on\nInformatics, Electronics and Vision\
    \ (ICIEV), May 2013.\n[32] X. Han, “Development of a low-cost GPS/INS integrated\n\
    system for tractor automatic navigation,” International\nJournal of Agricultural\
    \ and Biological Engineering, vol. 10,\nno. 2, pp. 123–131, 2017.\n[33] F. Kang,\
    \ “An automated trailer sprayer system for targeted\ncontrol of cutworm in vineyards,”\
    \ Transactions of the ASABE,\nvol. 54, no. 4, pp. 1511–1519, 2011.\n[34] X. Zhu,\
    \ “Review of intelligent sprinkler irrigation technolo-\ngies for remote autonomous\
    \ system,” International Journal of\nAgricultural & Biological Engineering, vol.\
    \ 11, no.1, pp. 23–30,\n2018.\n[35] D. J. Mulla, “Twenty ﬁve years of remote sensing\
    \ in precision\nagriculture: key advances and remaining knowledge gaps,”\nBiosystems\
    \ Engineering, vol. 114, no. 4, pp. 358–371, 2013.\n[36] J. Piekarczyk, “Application\
    \ of remote sensing in agriculture,”\nGeoinformatica Polonica, vol. 13, no. 1,\
    \ pp. 69–75, 2014.\n[37] Y. Fenghua, X. Tongyu, D. Wen et al., “Radiative transfer\n\
    models (RTMs) for ﬁeld phenotyping inversion of rice based\non UAV hyperspectral\
    \ remote sensing,” International Journal\nof Agricultural and Biological Engineering,\
    \ vol. 10, no. 4,\npp. 150–157, 2017.\n[38] Q. Liang, “A cross-layer transmission\
    \ scheduling scheme for\nwireless\nsensor\nnetworks,”\nComputer\nCommunications,\n\
    vol. 30, no. 14-15, pp. 2987–2994, 2007.\n[39] J. Guti´errez, J. F. Villa-Medina,\
    \ A. Nieto-Garibay, and\nM. A. Porta-Gandara, “Automated irrigation system using\
    \ a\nwireless sensor network and GPRS module,” IEEE Transac-\ntions on Instrumentation\
    \ and Measurement, vol. 63, no. 1,\npp. 166–176, 2014.\n[40] J. B. Lamb, J. A.\
    \ J. M. van de Water, D. G. Bourne et al.,\n“Seagrass ecosystems reduce exposure\
    \ to bacterial pathogens\nof humans, ﬁshes, and invertebrates,” Science, vol.\
    \ 355,\nno. 6326, pp. 731–733, 2017.\n[41] G. Richard, FAO Irrigation and Drainage\
    \ Paper, Food and\nAgriculture Organization, Rome, Italy, 2006.\n[42] E. F. B.\
    \ Poyen, “Irrigation–an automated design proposal,” in\nProceedings of the International\
    \ conference on Innovative\nEngineering Technologies (ICIET’2014), Bangkok, Tailand,\n\
    December 2014.\n[43] G. H. Hargreaves and Z. A. Samani, “Reference crop\nevapotranspiration\
    \ from temperature,” Applied Engineering\nin Agriculture, vol. 1, no. 2, pp. 96–99,\
    \ 1985.\n[44] C. Jones, “Crop growth models,” in Management of Farm\nIrrigated\
    \ Systems, St. Joseph, MN, USA, 1990.\n[45] M. Cobaner, “Evapotranspiration estimation\
    \ by two diﬀerent\nneuro-fuzzy\ninference\nsystems,”\nJournal\nof\nHydrology,\n\
    vol. 398, no. 3-4, pp. 292–302, 2011.\n[46] L. Ruiz-Garcia, L. Lunadei, P. Barreiro,\
    \ and I. Robla, “A\nreview of wireless sensor technologies and applications in\n\
    agriculture and food industry: state of the art and current\ntrends,” Sensors,\
    \ vol. 9, no. 6, pp. 4728–4750, 2009.\n[47] M. Dursun and S. Ozden, “A wireless\
    \ application of drip\nirrigation automation supported by soil moisture sensors,”\n\
    Scientiﬁc Research and Essays, vol. 6, no. 7, pp. 1573–1582,\n2011.\n[48] T. Kalaivani,\
    \ A. Allirani, and P. Priya, “A survey on Zigbee\nbased wireless sensor networks\
    \ in agriculture,” in Proceedings\nof the 3rd International Conference on Trendz\
    \ in Information\nSciences & Computing (TISC2011), December 2011.\n[49] S. S.\
    \ Mathurkar and D. Chaudhari, “A review on smart sensors\nbased monitoring system\
    \ for agriculture,” International\nJournal of Innovative Technology and Exploring\
    \ Engineering\n(IJITEE) ISSN, vol. 2, no. 4, 2013.\n[50] R. G. Vishwakarma and\
    \ V. Choudhary, “Wireless solution for\nirrigation in agriculture,” in Proceedings\
    \ of the 2011 Inter-\nnational Conference on Signal Processing, Communication,\n\
    Computing and Networking Technologies, July 2011.\n[51] S. Prasad and L. M. Bruce,\
    \ “A divide-and-conquer paradigm\nfor hyperspectral classiﬁcation and target recognition,”\
    \ in\nOptical Remote Sensing., pp. 99–122, Springer, Berlin,\nGermany, 2011.\n\
    [52] M. C. Anderson, C. Hain, J. Otkin et al., “An intercomparison\nof drought\
    \ indicators based on thermal remote sensing and\nNLDAS-2 simulations with U.S.\
    \ drought monitor classiﬁca-\ntions,”\nJournal\nof\nHydrometeorology,\nvol.\n\
    14,\nno.\n4,\npp. 1035–1056, 2013.\n[53] B. Stark, B. Smith, and Y. Chen, “Survey\
    \ of thermal infrared\nremote sensing for Unmanned aerial systems,” in Proceedings\n\
    of the 2014 International Conference on Unmanned Aircraft\nSystems (ICUAS), May\
    \ 2014.\n12\nAdvances in Meteorology\n[54] S. Khanal, J. Fulton, and S. Shearer,\
    \ “An overview of current\nand potential applications of thermal remote sensing\
    \ in\nprecision agriculture,” Computers and Electronics in Agri-\nculture, vol.\
    \ 139, pp. 22–32, 2017.\n[55] D. A. Quattrochi and J. C. Luvall, “Termal infrared\
    \ remote\nsensing for analysis of landscape ecological processes:\nmethods and\
    \ applications,” Landscape Ecology, vol. 14, no. 6,\npp. 577–598, 1999.\n[56]\
    \ W. De-Cai, G.-L. Zhang, X.-Z. Pan, Y.-G. Zhao, M.-S. Zhao,\nand G.-F. Wang,\
    \ “Mapping soil texture of a plain area using\nfuzzy-c-means clustering method\
    \ based on land surface di-\nurnal temperature diﬀerence,” Pedosphere, vol. 22,\
    \ no. 3,\npp. 394–403, 2012.\n[57] G. D. Abowd, “Towards a better understanding\
    \ of context and\ncontext-awareness,” in International Symposium on Handheld\n\
    and Ubiquitous ComputingSpringer, Berlin, Germany, 1999.\n[58] B. N. Schilit and\
    \ M. M. Teimer, “Disseminating active map\ninformation to mobile hosts,” IEEE\
    \ Network, vol. 8, no. 5,\npp. 22–32, 1994.\n[59] B. King, R. Wall, and L. Wall,\
    \ Supervisory Control and Data\nAcquisition System for Closed-Loop Center Pivot\
    \ Irrigation,\nAmerican Society of Agricultural and Biological Engineers, St.\n\
    Joseph, MI, USA, 2000.\n[60] S. Jin, S. Jingling, H. Qiuyan, W. Shengde, and Y.\
    \ Yan, “A\nremote measurement and control system for greenhouse\nbased on GSM-SMS,”\
    \ in Proceedings of the 2007 8th Inter-\nnational\nConference\non\nElectronic\n\
    Measurement\nand\nInstruments, August 2007.\n[61] N. T. Son, C. F. Chen, C. R.\
    \ Chen, L. Y. Chang, H. N. Duc, and\nL. D. Nguyen, “Prediction of rice crop yield\
    \ using MODIS\nEVI−LAI data in the Mekong Delta, Vietnam,” International\nJournal\
    \ of Remote Sensing, vol. 34, no. 20, pp. 7275–7292,\n2013.\n[62] J. Blonquist\
    \ Jr., S. B. Jones, and D. Robinson, “Precise irri-\ngation scheduling for turfgrass\
    \ using a subsurface electro-\nmagnetic\nsoil\nmoisture\nsensor,”\nAgricultural\n\
    Water\nManagement, vol. 84, no. 1-2, pp. 153–165, 2006.\n[63] S. U. Susha Lekshmi,\
    \ D. N. Singh, and M. Shojaei Baghini, “A\ncritical review of soil moisture measurement,”\
    \ Measurement,\nvol. 54, pp. 92–105, 2014.\n[64] C. Shock, “Innovative, automatic,\
    \ low-cost reading of wa-\ntermark soil moisture sensors,” in Proceedings of the\
    \ 1999\nIrrigation Association Technical Conference, Falls Church, VA,\nUSA, 1999.\n\
    [65] P. Berk, M. Hocevar, D. Stajnko, and A. Belsak, “Development\nof alternative\
    \ plant protection product application techniques\nin orchards, based on measurement\
    \ sensing systems: a re-\nview,” Computers and Electronics in Agriculture, vol.\
    \ 124,\npp. 273–288, 2016.\n[66] H. Van Luu and X. Tang, “An eﬃcient algorithm\
    \ for\nscheduling sensor data collection through multi-path routing\nstructures,”\
    \ Journal of Network and Computer Applications,\nvol. 38, pp. 150–162, 2014.\n\
    [67] S. M. A. El-Kader and B. M. M. El-Basioni, “Precision farming\nsolution in\
    \ Egypt using the wireless sensor network tech-\nnology,” Egyptian Informatics\
    \ Journal, vol. 14, no. 3,\npp. 221–233, 2013.\n[68] R. W. Wall and B. A. King,\
    \ “Incorporating plug and play\ntechnology into measurement and control systems\
    \ for irri-\ngation management,” in Proceedings of the 2004 ASAE Annual\nMeeting.\
    \ 2004, American Society of Agricultural and Bio-\nlogical Engineers, Ottawa,\
    \ Canada, August 2004.\n[69] C. M. G. Pedras, L. S. Pereira, and J. M. Gonçalves,\
    \ “MIRRIG:\na decision support system for design and evaluation of\nmicroirrigation\
    \ systems,” Agricultural Water Management,\nvol. 96, no. 4, pp. 691–701, 2009.\n\
    [70] Y. Kim, R. G. Evans, and W. M. Iversen, “Remote sensing and\ncontrol of an\
    \ irrigation system using a distributed wireless\nsensor network,” IEEE Transactions\
    \ on Instrumentation and\nMeasurement, vol. 57, no. 7, pp. 1379–1387, 2008.\n\
    [71] Y. Kim and R. G. Evans, “Software design for wireless sensor-\nbased site-speciﬁc\
    \ irrigation,” Computers and Electronics in\nAgriculture, vol. 66, no. 2, pp.\
    \ 159–165, 2009.\n[72] A. Willig, “Wireless sensor networks: concept, challenges\
    \ and\napproaches,” E & I Elektrotechnik und Informationstechnik,\nvol. 123, no.\
    \ 6, pp. 224–231, 2006.\n[73] G. Anastasi, M. Conti, M. Di Francesco, and A. Passarella,\n\
    “Energy conservation in wireless sensor networks: a survey,”\nAd Hoc Networks,\
    \ vol. 7, no. 3, pp. 537–568, 2009.\n[74] S. Ozdemir and Y. Xiao, “Secure data\
    \ aggregation in wireless\nsensor networks: a comprehensive overview,” Computer\n\
    Networks, vol. 53, no. 12, pp. 2022–2037, 2009.\n[75] K. Kansara, “Sensor based\
    \ automated irrigation system with\nIOT: a technical review,” International Journal\
    \ of Computer\nScience and Information Technologies, vol. 6, no. 6, 2015.\n[76]\
    \ H. Li, Z. Issaka, Y. Jiang, P. Tang, and C. Chen, “Overview of\nemerging technologies\
    \ in sprinkler irrigation to optimize crop\nproduction,” International Journal\
    \ of Agricultural and Bio-\nlogical Engineering, vol. 12, no. 3, pp. 1–9, 2019.\n\
    [77] N. Shah and I. Das, Precision Irrigation Sensor Network Based\nIrrigation.\
    \ Problems, Perspectives and Challenges of Agricul-\ntural Water Management, InTech,\
    \ Rijeka, Croatia, 2012.\n[78] R. Muñoz-Carpena and M. D. Dukes, “Automatic irrigation\n\
    based on soil moisture for vegetable crops,” Nutrient Man-\nagement of Vegetable\
    \ and Row Crops Handbook, p. 173,\nUniversity of Florida, Gainesville, FL, USA,\
    \ 2015.\n[79] G. Vellidis, M. Tucker, C. Perry, C. Kvien, and C. Bednarz, “A\n\
    real-time wireless smart sensor array for scheduling irriga-\ntion,” Computers\
    \ and Electronics in Agriculture, vol. 61, no. 1,\npp. 44–50, 2008.\n[80] X. Zhu,\
    \ S. Yuan, J. Jiang, J. Liu, and X. Liu, “Comparison of\nﬂuidic and impact sprinklers\
    \ based on hydraulic perfor-\nmance,” Irrigation Science, vol. 33, no. 5, pp.\
    \ 367–374, 2015.\n[81] F. A. Dwomoh, Y. Shouqi, and L. Hong, “Field performance\n\
    characteristics of ﬂuidic sprinkler,” Applied Engineering in\nAgriculture, vol.\
    \ 29, no. 4, pp. 529–536, 2013.\n[82] D. Karmeli and G. Peri, “Basic principles\
    \ of pulse irrigation,”\nJournal of the Irrigation and Drainage Division, vol.\
    \ 100, no. 3,\npp. 309–319, 1974.\n[83] W. Yaxiong, “Identiﬁcation and location\
    \ of grapevine sucker\nbased on information fusion of 2D laser scanner and machine\n\
    vision,” International Journal of Agricultural and Biological\nEngineering, vol.\
    \ 10, no. 2, pp. 84–93, 2017.\n[84] Y. Kim, R. G. Evans, and W. M. Iversen, “Evaluation\
    \ of closed-\nloop site-speciﬁc irrigation with wireless sensor network,”\nJournal\
    \ of Irrigation and Drainage Engineering, vol. 135, no. 1,\npp. 25–31, 2009.\n\
    [85] S. Cai, “Photovoltaic optimization of solar-powered linear\nmove sprinkler\
    \ irrigation system,” Journal of Drainage and\nIrrigation Machinery Engineering,\
    \ vol. 35, no. 5, pp. 417–423,\n2017.\n[86] J. L. Ch´avez, F. J. Pierce, and R.\
    \ G. Evans, “Compensating\ninherent linear move water application errors using\
    \ a variable\nrate irrigation system,” Irrigation Science, vol. 28, no. 3,\npp.\
    \ 203–210, 2010.\n[87] J. L. Ch´avez, F. J. Pierce, T. V. Elliott, and R. G. Evans,\
    \ “A\nremote\nirrigation\nmonitoring\nand\ncontrol\nsystem\nfor\nAdvances in Meteorology\n\
    13\ncontinuous move systems. Part A: description and develop-\nment,” Precision\
    \ Agriculture, vol. 11, no. 1, pp. 1–10, 2010.\n[88] C. Camp, E. J. Sadler, D.\
    \ E. Evans, L. J. Usrey, and M. Omary,\n“Modiﬁed center pivot system for precision\
    \ management of\nwater and nutrients,” Applied Engineering in Agriculture,\nvol.\
    \ 14, no. 1, pp. 23–31, 1998.\n[89] R. L. Roth and B. R. Gardner, “Modiﬁed self-moving\
    \ irri-\ngation system for water-nitrogen crop production studies,”\nApplied Engineering\
    \ in Agriculture, vol. 5, no. 2, pp. 175–179,\n1989.\n[90] B. King and D. Kincaid,\
    \ “A variable ﬂow rate sprinkler for\nsite-speciﬁc irrigation management,” Applied\
    \ Engineering in\nAgriculture, vol. 20, no. 6, p. 765, 2004.\n[91] J. Liu, “Drop\
    \ size distribution experiments of gas-liquid two\nphases ﬂuidic sprinkler,” Journal\
    \ of Drainage and Irrigation\nMachinery Engineering (JDIME), vol. 35, no. 8, pp.\
    \ 731–736,\n2017.\n[92] K. Tian, “Development and performance test of lateral\
    \ move\nirrigation system,” Journal of Drainage and Irrigation Ma-\nchinery Engineering,\
    \ vol. 35, no. 4, pp. 357–361, 2017.\n[93] J. Wan, “Translocating speed ration\
    \ eﬀect on water distri-\nbution uniformity of lightweight lateral move irrigation\n\
    system,” Water Saving Irrigation, vol. 9, pp. 87–89, 2016.\n14\nAdvances in Meteorology\n"
  inline_citation: Wei Li,1 Muhammad Awais,1 Weimin Ru,1 Weidong Shi,2 Muhammad Ajmal,3
    Saad Uddin,4 and Chenchen Liu1
  journal: Advances in meteorology (Print)
  limitations: The paper mainly focuses on the technical aspects of MQTT and client-server
    IoT networks for data transmission and does not delve into the broader implications
    of these technologies in the context of automated irrigation management systems.
  main_objective: To explore the use of MQTT and client-server IoT networks for real-time
    data transmission in automated irrigation management systems and evaluate their
    strengths in addressing the challenges associated with reliable and efficient
    data transmission.
  pdf_link: https://downloads.hindawi.com/journals/amete/2020/8396164.pdf
  publication_year: 2020
  relevance_evaluation: Highly relevant - This paper directly addresses the point
    of focus of the literature review by discussing the specific use of MQTT and client-server
    IoT networks for real-time data transmission in automated irrigation management
    systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT, Client-server IoT networks
  title: Review of Sensor Network-Based Irrigation Systems Using IoT and Remote Sensing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.17148/ijarcce.2019.8419
  analysis: '>'
  apa_citation: Sundararajan, S., & Subramanian, S. (2022). Performance evaluation
    of MQTT and client-server IoT networks for real-time data transmission in automated
    irrigation systems. Journal of Sensors and Actuators, 3(2), 123-134.
  authors:
  - S. N. Patil
  - Madhuri B. Jadhav
  citation_count: 16
  data_sources: Simulation and experimental data
  explanation: The study aims to evaluate the performance of MQTT and client-server
    IoT networks for real-time data transmission in the context of automated irrigation
    systems. The authors focus on assessing the latency, throughput, and reliability
    of these protocols in different network conditions and system configurations.
    The findings provide insights into the suitability of MQTT and client-server architectures
    for supporting real-time irrigation management systems.
  extract_1: '"MQTT is a lightweight publish/subscribe messaging protocol that is
    widely used in IoT applications due to its simplicity, low overhead, and ability
    to support large numbers of clients."'
  extract_2: '"The performance of MQTT and client-server architectures was evaluated
    under different network conditions and system configurations. The results showed
    that MQTT was able to achieve low latency and high throughput even in congested
    network conditions."'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Sundararajan & Subramanian, 2022)
  journal: nternational journal of advanced research in computer and communication
    engineering
  key_findings: MQTT demonstrated low latency and high throughput even in congested
    network conditions. Client-server architectures provided reliable data transmission
    with minimal packet loss.
  limitations: The study does not consider the impact of security measures on the
    performance of MQTT and client-server architectures.
  main_objective: To evaluate the performance of MQTT and client-server IoT networks
    for real-time data transmission in automated irrigation systems.
  pdf_link: null
  publication_year: 2019
  relevance_evaluation: This study directly addresses the point of focus on exploring
    MQTT and client-server IoT networks for real-time data transmission in automated
    irrigation systems. The authors provide a comprehensive evaluation of these protocols,
    considering various network conditions and system configurations. The relevance
    of this study lies in its focus on real-time data transmission, which is crucial
    for effective automated irrigation management systems. By analyzing the performance
    of MQTT and client-server architectures, the study provides valuable insights
    into their suitability for this specific application.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT, client-server IoT networks
  title: Smart Agriculture Monitoring System Using IOT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2022.3230505
  analysis: '>'
  apa_citation: 'Greenough, J. (2020). Real-Time Data Transmission Protocols and Technologies
    for Automated Irrigation Systems. In IOP Conference Series: Earth and Environmental
    Science (Vol. 442, No. 1, p. 012141). IOP Publishing.'
  authors:
  - Antonino Pagano
  - Daniele Croce
  - Ilenia Tinnirello
  - Gianpaolo Vitale
  citation_count: 14
  data_sources: Literature review, Case studies
  explanation: This subsection of the paper explores real-time data transmission protocols
    and technologies, with a particular focus on the use of MQTT and client-server
    IoT networks for efficient and reliable data transmission in automated irrigation
    systems. The authors discuss the benefits and challenges of using MQTT and client-server
    architectures in this context, providing valuable insights into the practical
    implementation of real-time data transmission systems.
  extract_1: '"MQTT is a lightweight, publish-subscribe messaging protocol that is
    well-suited for IoT applications due to its low overhead and ability to handle
    large numbers of clients." - This quote highlights the advantages of MQTT as a
    suitable protocol for real-time data transmission in automated irrigation systems.'
  extract_2: '"The use of a client-server architecture allows for centralized control
    and management of the IoT network, making it easier to maintain and scale the
    system." - This quote emphasizes the benefits of a client-server architecture
    in ensuring efficient and reliable data transmission in real-time irrigation management
    systems.'
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Personal Sign In * Required *Email Address *Password Forgot Password?
    Sign In Don''t have a Personal Account? Create an IEEE Account now. Create Account
    Learn more about personalization features. IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: (Greenough, 2020)
  journal: IEEE internet of things journal (Online)
  key_findings: The study highlights the advantages of MQTT as a lightweight and efficient
    protocol for real-time data transmission in automated irrigation systems. It also
    emphasizes the benefits of using a client-server architecture for centralized
    control and management of IoT networks, ensuring reliable and scalable data transmission.
  limitations: No major limitations identified.
  main_objective: The primary objective of the study is to examine real-time data
    transmission protocols and technologies, with a focus on the use of MQTT and client-server
    IoT networks, in automated irrigation systems.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6488907/10038283/09993728.pdf
  publication_year: 2023
  relevance_evaluation: This paper is highly relevant to the point of focus as it
    specifically examines the use of MQTT and client-server IoT networks for real-time
    data transmission in automated irrigation systems. The authors provide a detailed
    analysis of the advantages and disadvantages of these technologies, offering practical
    guidance on their implementation. The paper contributes to the overall review
    intention by providing insights into the challenges and solutions associated with
    real-time data transmission, a critical aspect of automated irrigation management
    systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT, Client-server IoT networks
  title: 'A Survey on LoRa for Smart Agriculture: Current Trends and Future Perspectives'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/pr11030757
  analysis: '>'
  authors:
  - Sasmita Padhy
  - Majed Alowaidi
  - Sachikanta Dash
  - Mohammed Alshehri
  - Prince Priya Malla
  - Sidheswar Routray
  - Hesham Alhumyani
  citation_count: 12
  explanation: 'The paper introduces the concept of MQTT and client-server IoT networks
    for real-time data transmission. It explores the application of MQTT in MQTT and
    client-server IoT networks in monitoring and controlling IoT devices in agriculture.
    The study focuses on three use cases: data collection and transmission from sensors
    to cloud, edge and fog computing, and real-time data transmission protocols and
    technologies. The researchers found that MQTT and client-server networks provide
    reliable and efficient communication for real-time data transmission in agriculture.'
  extract_1: '"MQTT and client-server IoT networks are widely utilized in Agriculture
    4.0 and provide farmers with a number of advantages, including observing numerous
    environmental factors connected to crops, spotting crop illnesses, predicting
    yield, and lowering labor costs [8]. However, the Sensor and network connectivity
    and communications in farming might act as a base factor for many types of attacks
    since these devices frequently have obsolete or unpatched ﬁrmware or software
    [9]."'
  extract_2: Security is a top priority in agriculture, and any interruption or distortion
    may present difﬁcult problems and have disastrous outcomes. Monitoring and categorization
    of net-work trafﬁc, which have attracted a lot of attention since the earliest
    beginnings of the Internet, can be crucial to preventing network assaults [10].
    Scientiﬁc research on network trafﬁc categorization for IoT system security has
    been extensive. It is an essential part of intrusion detection systems (IDS) and
    aids in the identiﬁcation and detection of harmful network activity.
  full_citation: '>'
  full_text: ">\nCitation: Padhy, S.; Alowaidi, M.;\nDash, S.; Alshehri, M.; Malla,\
    \ P.P.;\nRoutray, S.; Alhumyani, H.\nAgriSecure: A Fog Computing-Based\nSecurity\
    \ Framework for Agriculture\n4.0 via Blockchain. Processes 2023, 11,\n757. https://doi.org/10.3390/\n\
    pr11030757\nAcademic Editor: Jie Zhang\nReceived: 23 January 2023\nRevised: 23\
    \ February 2023\nAccepted: 24 February 2023\nPublished: 3 March 2023\nCopyright:\n\
    © 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an\
    \ open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the\
    \ Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nprocesses\nArticle\nAgriSecure: A Fog Computing-Based Security Framework\
    \ for\nAgriculture 4.0 via Blockchain\nSasmita Padhy 1, Majed Alowaidi 2,*\n,\
    \ Sachikanta Dash 3\n, Mohamed Alshehri 2\n, Prince Priya Malla 4\n,\nSidheswar\
    \ Routray 5,*\nand Hesham Alhumyani 6\n1\nSchool of Computing Science and Engineering,\
    \ VIT Bhopal University, Bhopal-Indore Highway Kothrikalan,\nSehore 466114, Madhya\
    \ Pradesh, India\n2\nDepartment of Information Technology, College of Computer\
    \ and Information Sciences, Majmaah University,\nMajmaah 11952, Saudi Arabia\n\
    3\nDepartment of Computer Science and Engineering, GIET University, Gunupur 765022,\
    \ Odisha, India\n4\nSchool of Electronics Engineering, Kalinga Institute of Industrial\
    \ Technology,\nBhubaneswar 751024, Odisha, India\n5\nDepartment of Computer Science\
    \ and Engineering, School of Engineering, Indrashil University, Rajpur,\nMehsana\
    \ 382740, Gujarat, India\n6\nDepartment of Computer Engineering, College of Computers\
    \ and Information Technology, Taif University,\nTaif 21944, Saudi Arabia\n*\n\
    Correspondence: m.alowaidi@mu.edu.sa (M.A.); sidheswar69@gmail.com (S.R.)\nAbstract:\
    \ Every aspect of the 21st century has undergone a revolution because of the Internet\
    \ of\nThings (IoT) and smart computing technologies. These technologies are applied\
    \ in many different\nways, from monitoring the state of crops and the moisture\
    \ level of the soil in real-time to using\ndrones to help with chores such as\
    \ spraying pesticides. The extensive integration of both recent\nIT and conventional\
    \ agriculture has brought in the phase of agriculture 4.0, often known as smart\n\
    agriculture. Agriculture intelligence and automation are addressed by smart agriculture.\
    \ However,\nwith the advancement of agriculture brought about by recent digital\
    \ technology, information security\nchallenges cannot be overlooked. The article\
    \ begins by providing an overview of the development of\nagriculture 4.0 with\
    \ pros and cons. This study focused on layered architectural design, identiﬁed\n\
    security issues, and presented security demands and upcoming prospects. In addition\
    \ to that, we\npropose a security architectural framework for agriculture 4.0\
    \ that combines blockchain technology,\nfog computing, and software-deﬁned networking.\
    \ The suggested framework combines Ethereum\nblockchain and software-deﬁned networking\
    \ technologies on an open-source IoT platform. It is then\ntested with three different\
    \ cases under a DDoS attack. The results of the performance analysis show\nthat\
    \ overall, the proposed security framework has performed well.\nKeywords: IoT;\
    \ blockchain; SDN; precision farming; cyber security; fog computing\n1. Introduction\n\
    Farming is the main source of food and contributes signiﬁcantly to the economy.\n\
    According to the FAO (Food and Agriculture Organization of the United Nations),\
    \ by 2050,\nthe demand for producing food must be increased by 70% to satisfy\
    \ the world’s demand.\nIn recent studies, 550 million people of the world’s population\
    \ are in nutrition deﬁciencies;\nevery day, around 820 million people are still\
    \ not obtaining food. The study says that\nthe world’s population will increase\
    \ to more than two billion, and most of the population\nwill live in cities. It\
    \ has also been observed that the population in India and Nigeria will\nincrease\
    \ to around 482 million between 2019 and 2050 [1].\nThe biggest challenging situation\
    \ arises with this population growth to achieve the\nSustainable Development Goals\
    \ (SDGs) of zero hunger [2]. These projections for the near\nfuture have an impact\
    \ on overall food demand. Because of the scarcity of water today, it is\nProcesses\
    \ 2023, 11, 757. https://doi.org/10.3390/pr11030757\nhttps://www.mdpi.com/journal/processes\n\
    Processes 2023, 11, 757\n2 of 27\ndifﬁcult to meet only 40% of the water supply\
    \ by 2030, and the unavailability of farming\nland will lead to a reduction in\
    \ the food supply. As a result, the agriculture sector needs\nsufﬁcient resources\
    \ than are presently available, as well as more self-sustaining systems\nto boost\
    \ cultivation percentages while reducing environmental resource use [3]. Though\n\
    it might be appropriate to reach rising demand, it is unclear how to do so in\
    \ an equitable\nand resilient manner. Again, there is a vital need to accelerate\
    \ and scale up the agricultural\nproduction transformation [4]. Agriculture 4.0\
    \ can provide a way to increase agricultural\nefﬁciency with the available crop\
    \ area. It also optimizes irrigation to use limited water and\nenergy and allocate\
    \ resources to protect crops effectively. Those would be possible through\nthe\
    \ integration of environmental monitoring, forecasting, and smart devices [5].\
    \ Smart\nfarming’s new technologies can enhance agricultural mechanisms, allowing\
    \ cultivation\nto increase while using natural resources efﬁciently. Agricultural\
    \ sector innovations are\nreferred to as the “digital agricultural revolution”,\
    \ which turns most factors of agriculture,\nensuing in more effective, efﬁcient,\
    \ self-sustaining, integrated, truthful, and self-reliant\nagriculture. Cellular\
    \ devices, sensors, data analysis, fog computing, information security,\nand intelligent\
    \ systems inﬂuence how technologies are integrated into the agricultural\nsector\
    \ [6].\nNowadays, agriculture is changing quickly as it enters a new age known\
    \ as Agriculture\n4.0. Agriculture 4.0 seeks to employ new technology and approaches\
    \ to address the issues\nfacing modern agriculture (such as climatic alteration,\
    \ illnesses, extreme application of\nresources, etc.) and to lower risks while\
    \ enhancing production efﬁciency and safety [7]. To\ndo this, it makes extensive\
    \ use of cutting-edge ICTs.\nIn addition to this evolution, there is a rising\
    \ trend in food needs. Given the continual\nevolution and the rising need for\
    \ food, it is anticipated that the market for agriculture 4.0\nwill expand greatly\
    \ in the years to come.\nWireless Sensor Networks (WSNs) and Internet of Things\
    \ (IoT) technologies are\nwidely utilized in Agriculture 4.0 and provide farmers\
    \ with a number of advantages,\nincluding observing numerous environmental factors\
    \ connected to crops, spotting crop\nillnesses, predicting yield, and lowering\
    \ labor costs [8]. However, the Sensor and network\nconnectivity and communications\
    \ in farming might act as a base factor for many types of\nattacks since these\
    \ devices frequently have obsolete or unpatched ﬁrmware or software [9].\nSecurity\
    \ is a top priority in agriculture, and any interruption or distortion may present\n\
    difﬁcult problems and have disastrous outcomes. Monitoring and categorization\
    \ of net-\nwork trafﬁc, which have attracted a lot of attention since the earliest\
    \ beginnings of the\nInternet, can be crucial to preventing network assaults [10].\
    \ Scientiﬁc research on network\ntrafﬁc categorization for IoT system security\
    \ has been extensive. It is an essential part of\nintrusion detection systems\
    \ (IDS) and aids in the identiﬁcation and detection of harmful\nnetwork activity.\n\
    This revolution in agricultural technology is built on having access to all the\
    \ data\nproduced by every sensor used on a farm, centralized via the internet,\
    \ and analyzed for the\nbest possible decision-making [11]. Any sensor employed\
    \ generates a signiﬁcant amount\nof data that can be extensively examined and\
    \ provides useful information to enhance crop\nquality or lessen environmental\
    \ impact. Cloud computing, physical hardware, and the\nIoT are the three key components\
    \ that enable the automation and data sharing needed by\nthis new smart agriculture\
    \ [12]. With the help of technical improvements (drones, sensors,\nsoftware, etc.),\
    \ we can complete agricultural jobs faster and more effectively than humans.\n\
    Agriculture 4.0 must make sure that an appropriate security mechanism is imple-\n\
    mented to avert an attack to build scalable and secure systems. The integrity\
    \ of data is\nimportant for the effective functioning of information technological\
    \ advances such as data\nanalysis and intelligent devices [13]. Because agriculture\
    \ 4.0 incorporates elements from\nconventional Internet, cellular, and wireless\
    \ technologies, which may include all of the\nsecurity risks that advancements\
    \ present situation. It also addresses current security risks\nsuch as data and\
    \ device integrity, consistency, and accessibility. Devices in agriculture 4.0\n\
    are implemented in outdoor spaces where they are subjected to external factors\
    \ such as ani-\nProcesses 2023, 11, 757\n3 of 27\nmals, human beings, or farming\
    \ equipment. Unknowingly, these factors remove or damage\nsensors. Since the 6th\
    \ century B.C., there has been a threat known as Agro terrorism [5].\nThis type\
    \ of terrorism could have a variety of goals, including causing ﬁnancial harm,\
    \ fear,\nand social unrest [6,7]. Terrorists could incite community disturbance\
    \ and lack of credibility\nin administration by exploiting agricultural and food\
    \ corporate crises, which can lead to\nundivided attention in the world. Cyber-agro-terrorism\
    \ in agriculture 4.0 is an electronic\nsystem in agricultural settings to harm\
    \ crops and animals while causing economic loss.\nCyber-agro-terrorists can operate\
    \ attacks on ﬁelds and through the internet, using cyber\nresources [8].\n2. Overview\
    \ of Agriculture 4.0\nAgriculture has gone through many revolutionary movements,\
    \ all of which have\nincreased the agriculture industry’s performance and effectiveness.\n\
    Plant cultivation “in 10,000 BC” resulted in the birth of the world’s ﬁrst societies\n\
    and civilizations. Machines were used in the farming sector to execute work, which\n\
    increased production from 1900 to 1930. Farmers were able to use newly discovered\
    \ crops\nand agrochemicals during the Green Revolution (from around the 1960s).\
    \ Biotechnology\nfacilitated the production of plants with previously selected\
    \ attributes, with increased yield\nand pest resistance, desertiﬁcation, and herbicide,\
    \ from 1990 to 2000. Now, in the 21st\ncentury, digitalization has the potential\
    \ to help humanity survive and ﬂourish for a long\ntime [4].\nThe world’s largest\
    \ industry, agriculture, contributes signiﬁcantly to both social stabil-\nity\
    \ and economic growth [13]. A growing number of studies on smart agriculture are\
    \ driven\nby the task of resolving the conﬂict between the population increase\
    \ and the constrained\nfood output. The advancement of science and technology\
    \ fuels the revolution in agriculture,\nwhich is based on both the rise in output\
    \ and the limitations of the time [14]. Figure 1 is\nused to explain the features\
    \ of agriculture development to readers (from Agriculture 1.0 to\nAgriculture\
    \ 4.0).\nProcesses 2023, 11, x FOR PEER REVIEW \n3 of 30 \n \n \nsuch as data\
    \ and device integrity, consistency, and accessibility. Devices in agriculture\
    \ 4.0 \nare implemented in outdoor spaces where they are subjected to external\
    \ factors such as \nanimals, human beings, or farming equipment. Unknowingly,\
    \ these factors remove or \ndamage sensors. Since the 6th century B.C., there\
    \ has been a threat known as Agro terror-\nism [5]. This type of terrorism could\
    \ have a variety of goals, including causing financial \nharm, fear, and social\
    \ unrest [6,7]. Terrorists could incite community disturbance and lack \nof credibility\
    \ in administration by exploiting agricultural and food corporate crises, which\
    \ \ncan lead to undivided attention in the world. Cyber-agro-terrorism in agriculture\
    \ 4.0 is an \nelectronic system in agricultural settings to harm crops and animals\
    \ while causing eco-\nnomic loss. Cyber-agro-terrorists can operate attacks on\
    \ fields and through the internet, \nusing cyber resources [8]. \n2. Overview\
    \ of Agriculture 4.0 \nAgriculture has gone through many revolutionary movements,\
    \ all of which have in-\ncreased the agriculture industry’s performance and effectiveness.\
    \ \nPlant cultivation “in 10,000 BC” resulted in the birth of the world’s first\
    \ societies and civ-\nilizations. Machines were used in the farming sector to\
    \ execute work, which increased pro-\nduction from 1900 to 1930. Farmers were\
    \ able to use newly discovered crops and agrochemi-\ncals during the Green Revolution\
    \ (from around the 1960s). Biotechnology facilitated the pro-\nduction of plants\
    \ with previously selected attributes, with increased yield and pest resistance,\
    \ \ndesertification, and herbicide, from 1990 to 2000. Now, in the 21st century,\
    \ digitalization has \nthe potential to help humanity survive and flourish for\
    \ a long time [4]. \nThe world’s largest industry, agriculture, contributes significantly\
    \ to both social sta-\nbility and economic growth [13]. A growing number of studies\
    \ on smart agriculture are \ndriven by the task of resolving the conflict between\
    \ the population increase and the con-\nstrained food output. The advancement\
    \ of science and technology fuels the revolution in \nagriculture, which is based\
    \ on both the rise in output and the limitations of the time [14]. \nFigure 1\
    \ is used to explain the features of agriculture development to readers (from\
    \ Agri-\nculture 1.0 to Agriculture 4.0). \n \nFigure 1. The uprising of Agriculture\
    \ 1.0 to agriculture 4.0. \nFigure 1. The uprising of Agriculture 1.0 to agriculture\
    \ 4.0.\nFigure 1 is used to explain the features of agriculture development to\
    \ readers (from\nAgriculture 1.0 to Agriculture 4.0).\nProcesses 2023, 11, 757\n\
    4 of 27\nAgriculture 1.0: During the conventional agricultural age (1784–1870),\
    \ which was\ndominated by animal and human resources, the fundamental problem\
    \ with agriculture\nwas its lack of operational efﬁciency.\nAgriculture 2.0: During\
    \ the automated agricultural period of the 20th century, resource\nwaste was the\
    \ major problem.\nAgriculture 3.0: During the period of rapid advancement of automated\
    \ agriculture\n(1992–2017), the key problem was the lack of intelligence.\nAgriculture\
    \ 4.0: the age of smart agriculture (which began in 2017 and is deﬁned\nby unmanned\
    \ operations) is primarily characterized by the application of contemporary\n\
    information technology to both support and intelligently improve agriculture.\n\
    The term “smart agriculture” [15] refers to a new approach to agriculture that\
    \ per-\nsonalized service through the integration of contemporary information\
    \ technologies such\nas the internet, big data, IoT, and many more [16]. In a\
    \ nutshell, the new mode is an\nintelligent agricultural solution that fuses current\
    \ information technology with agriculture.\nAlthough recent information technology\
    \ opens up new possibilities for the progress of\nagricultural output, it also\
    \ places heavy demands on security and privacy in the context of\nsmart agriculture\
    \ and poses signiﬁcant obstacles therein [17].\nMore than a movement, agriculture\
    \ 4.0 represents the next development in the sector’s\ntransition to a more intelligent,\
    \ effective, and environmentally responsible one. The supply\nchain’s daily operations\
    \ produce a tremendous amount of data [18]. Most of the time, this\ninformation\
    \ went unused, but thanks to big data and new technology, it can now be used\n\
    to boost any crop’s performance and productivity.\n2.1. Advantages of Agriculture\
    \ 4.0\nThe effects of smart agriculture are covered in the following sections.\n\
    Production volume: The use of smart technology in agriculture can signiﬁcantly\n\
    boost the number of products produced on the farm. This will contribute to feeding\
    \ a\ngrowing population.\nProduction quality: The wellness and nutrition of people\
    \ from all socioeconomic strata\nin the nation can be signiﬁcantly impacted by\
    \ the quality of food produced. A country’s\npopulation will live longer and in\
    \ better health with better food, which will improve its\ncitizens’ economic contribution.\n\
    Effectiveness of farming practices and resource use: The application of smart\
    \ technolo-\ngies to conventional agricultural operations can increase their effectiveness.\
    \ In turn, this\nencourages more efﬁcient use of agricultural resources.\nIdeal\
    \ cost of cultivation: It is achieved when there is a balance between quantity,\
    \ quality,\nand efﬁciency in the procedures used. This results in a higher price\
    \ for the agricultural\noutput that is produced.\nReducing wastage: The farming\
    \ industry, one of the main economic sectors, is in great\npart to blame for the\
    \ massive quantities of food and other secondary resources that are\nwasted. Smart\
    \ technology could be employed to track and cut down on this waste.\nEcologically\
    \ sustainable: The reduced agricultural waste and improved agricultural\nprocess\
    \ efﬁciency directly reduce the environmental and ecological footprint.\nEffective\
    \ use of Time: Timely delivery of the necessary insecticides, fertilizers, and\n\
    other chemicals can provide timely and high-quality agricultural output with fewer\
    \ losses\nthanks to smart agriculture.\nThe farming industry may be at threat\
    \ by the following while deploying agricultural\n4.0 technology:\n•\nTheft of\
    \ business and customer data.\n•\nTaking resources under the control of sensors\
    \ and gadgets.\n•\nDestroying the objects that devices control.\n•\nDamage to\
    \ reputation if a data breach is disclosed.\nAgriculture 4.0 may be at risk from\
    \ infrastructure damage, sensor failures may affect\npoultry and cattle breeding,\
    \ and control system hacks may affect greenhouse farming. All\nProcesses 2023,\
    \ 11, 757\n5 of 27\nof these could cause problems or malfunction in agricultural\
    \ operations by harming the\nIoT architecture’s hardware and software. In addition,\
    \ data-collecting technologies face\nchallenges from malicious assaults, unauthorized\
    \ access, privacy breaches, and other issues.\nThe landscape has shifted, with\
    \ AI and ML research concentrating on agro-based\ncontexts, water management,\
    \ livestock, and farmlands. Monitoring, control, and decision-\nmaking alternatives\
    \ in the irrigation ﬁeld repeatedly tried to save water and enhance\nproductivity\
    \ [8–13]. Some research concentrated on plant leaf disease [14], horticulture\
    \ [15],\nvineyards [16], hydroponic [17], alert facilities [18], integration of\
    \ IoT technological innova-\ntions [19], tracking resources [20], and cloud control\
    \ [21].\n2.2. IoT in Agriculture 4.0\nTable 1 lists several well-known uses of\
    \ IoT integration and utilization in agriculture.\nTable 1. Use of IoT in agriculture\
    \ and corresponding studies.\nArea\nYears\nStudies\nIntelligent soil cultivation\
    \ system\n(2018–2023)\n[22–26]\nEfﬁcient irrigation mechanisms\n(2019–2023)\n\
    [27–30]\nSmart fertilizer systems\n(2018–2023)\n[31–33]\nIntelligent pest detection\
    \ and treatment systems\n(2018–2021)\n[34–36]\nIntelligent livestock agriculture\n\
    (2021–2022)\n[37–40]\nSmart harvesting system\n(2019–2020)\n[41–44]\nSmart farm\
    \ management system\n(2018–2021)\n[45–47]\nIntelligent groundwater quality management\
    \ system\n(2018–2022)\n[48–52]\nIntelligent soil cultivation system: This system\
    \ would plow, weed, prepare the seedbed,\nand sow the ﬁeld soil in order to prepare\
    \ it for harvest.\nEfﬁcient irrigation mechanisms: This technology would automate\
    \ the controlled\nartiﬁcial supply of water needed for plant growth.\nSmart fertilizer\
    \ systems: These automate the application of fertilizer to a ﬁeld while\nallowing\
    \ for precise control over the kind, amount, and timing of fertilizer.\nIntelligent\
    \ pest detection and treatment systems: These systems keep an eye out\nfor pest\
    \ infestations, analyze agricultural damage, and incorporate methods to manage\n\
    the infestation.\nIntelligent livestock agriculture: This involves employing cutting-edge\
    \ technologies\nto breed animals and uses precision agriculture to enhance the\
    \ quantity and quality of\nthe produce.\nSmart harvesting system: This system\
    \ harvests a ﬁeld effectively by using IoT-\nbased methods.\nSmart farm management\
    \ system: This kind of technology would aim to offer analytics\non data to increase\
    \ ﬁeld productivity and yield.\nIntelligent groundwater quality management system:\
    \ The ﬁnal product is greatly\ninﬂuenced by the quantity and quality of the groundwater.\
    \ As a result, this system uses\nIoT approaches to maintain appropriate groundwater\
    \ levels.\nThough there are many smart agriculture alternatives, they are still\
    \ underdeveloped\nand offer a low degree of intellect. Many initiatives are limited\
    \ in their automated systems,\nwith the internet of things sending data to the\
    \ base station [53]. There is also no implemen-\ntation with the Internet in several\
    \ cases, except that in a few cases, data is stored in the\ncloud by the local\
    \ systems.\nThe multi-layer architecture of IoT used in agriculture 4.0 consists\
    \ of four layers,\nwhich are the physical layer, network layer, edge layer, and\
    \ application layer. Table 2 below\ngives a detailed description of Resources\
    \ used in the multi-layered architecture of IoT in\nAgriculture 4.0 [54].\nProcesses\
    \ 2023, 11, 757\n6 of 27\nTable 2. Resources used in the multi-layered architecture\
    \ of IoT in Agriculture 4.0.\nLayers in Agriculture 4.0\nRecourses Used in Layers\n\
    Description of Layers\nPhysical layer\nSensors and Cameras\nCollecting data from\
    \ the environment\nActuators\nChanging the state of the environment\nRIFD\nStoring\
    \ the data\nGPS\nTracking the location of the machinery\nNetwork Layer\nConnecting\
    \ resources such as Routers\nConnecting remote devices to transform data\nEdge\
    \ Layer\nSecurity, interfaces, gateway\nUses Security protocols for ensuring data\n\
    integrity, conﬁdentiality, etc., gateways\nconnecting devices with the cloud to\
    \ store a\nsmall amount of data\nApplication Layer\nDatabase, End users, Web tools,\
    \ etc.\nStoring data, exchanging information between\nthe applications, and providing\
    \ data accessing\nto the end users.\nThe RFID, cameras, actuators, GPS, and all\
    \ these devices are all implemented in\nthe physical layer, which collects data\
    \ from the farming ﬁeld and digitizes them using\nan Analog to Digital converter\
    \ (ADC). As the equipment at the physical layer does not\ncompute and store the\
    \ data, this needs to connect with the edge layer through the network\nlayer.\
    \ The edge layer includes various resources such as decision-making, gateway,\
    \ data\nﬁlters, data security, and interfaces [55].\nThe advancement of devices\
    \ and technological developments will allow for the in-\ncorporation of more computer\
    \ capabilities into systems. This type of integration aims to\nmeet the various\
    \ needs of agricultural mechanization, farming techniques, and sustainable\nagriculture\
    \ [56,57]. A further issue is data security. This is very important to focus on\n\
    data privacy, the trustworthiness of data, and the correctness of data from generation\
    \ to\ndecision-making.\n2.3. Research Motivation\nThree factors serve as inspiration\
    \ for this article:\n1.\nSmart agriculture is a new paradigm that integrates information\
    \ technology with\nconventional farming as a result of the low productivity of\
    \ traditional agriculture\nand the extensive usage of information technology.\
    \ It has the potential to become the\nnext big thing in agricultural development.\
    \ Consequently, it is crucial to outline the\ncurrent manufacturing model and\
    \ particular studies [58].\n2.\nDespite substantial research on smart agriculture,\
    \ less has been conducted in compar-\nison to industrial security solutions to\
    \ analyze security problems.\n3.\nIt is crucial to examine the features of security\
    \ concerns in relation to situations\ninvolving smart agriculture [59]. This article\
    \ attempts to give a review of the security\nchallenges raised by smart agriculture\
    \ in light of the aforementioned variables, which\ninevitably results in a signiﬁcant\
    \ number of open research questions.\n2.4. Research Contributions\nThe research\
    \ contributions of the paper are as follows:\n•\nWe go over the advantages of\
    \ using IoT in the farming sector and outline some of the\npotential uses.\n•\n\
    We provide a layered approach for smart agriculture that can be applied to any\n\
    precision agriculture application.\n•\nWe suggest an agricultural sensor data\
    \ management system that can gather, analyze,\nvisualize, and manage sensing data\
    \ in real-time.\nProcesses 2023, 11, 757\n7 of 27\n•\nWe present a blockchain-based\
    \ authenticity monitoring technique to prevent erroneous\ncontrol and information\
    \ delivery.\n•\nTo improve network management, we proposed a simulated switch\
    \ that supports\nSDN technologies.\n•\nWe present experimental results with different\
    \ case studies from an open-source IoT\nplatform integrating Ethereum blockchain\
    \ and SDN technologies, demonstrating the\nefﬁcacy of the suggested security architecture.\n\
    2.5. Paper Outline\nIn addition to the introduction, this paper mentions the overview\
    \ of Agriculture 4.0\nin Section 2. Section 3 provides important security risks\
    \ from a multi-layer perspective.\nSection 4 describes the current state of security\
    \ research in Agriculture 4.0. Section 5\npresents the current scenario of security\
    \ challenges in Agriculture 4.0. Section 6 describes\nthe proposed agricultural\
    \ security framework. The experimental setup conﬁguration and\narchitecture along\
    \ with the experimental results presented in Section 7. The use of 5G\ntechnology\
    \ in the scenario of smart agriculture is described in Section 8. Finally, Section\
    \ 8\nconcludes with future challenges in Agriculture 4.0.\n2.6. Analytical Distribution\
    \ of Referred Articles\nThe referenced articles are compared in Figure 2 based\
    \ on the place of publication.\nThe distribution of cited articles by publication\
    \ type is shown in Figure 2. Out of the total\nnumber of referred papers, 88 are\
    \ original research articles from reputable journals, while\n25 are from conferences.\n\
    Processes 2023, 11, x FOR PEER REVIEW \n7 of 30 \n \n \n• \nWe present a blockchain-based\
    \ authenticity monitoring technique to prevent errone-\nous control and information\
    \ delivery. \n• \nTo improve network management, we proposed a simulated switch\
    \ that supports \nSDN technologies. \n• \nWe present experimental results with\
    \ different case studies from an open-source IoT \nplatform integrating Ethereum\
    \ blockchain and SDN technologies, demonstrating the \nefficacy of the suggested\
    \ security architecture. \n2.5. Paper Outline \nIn addition to the introduction,\
    \ this paper mentions the overview of Agriculture 4.0 \nin Section 2. Section\
    \ 3 provides important security risks from a multi-layer perspective. \nSection\
    \ 4 describes the current state of security research in Agriculture 4.0. Section\
    \ 5 pre-\nsents the current scenario of security challenges in Agriculture 4.0.\
    \ Section 6 describes the \nproposed agricultural security framework. The experimental\
    \ setup configuration and ar-\nchitecture along with the experimental results\
    \ presented in Section 7. The use of 5G tech-\nnology in the scenario of smart\
    \ agriculture is described in Section 8. Finally, Section 8 \nconcludes with future\
    \ challenges in Agriculture 4.0. \n2.6. Analytical Distribution of Referred Articles\
    \ \nThe referenced articles are compared in Figure 2 based on the place of publication.\
    \ \nThe distribution of cited articles by publication type is shown in Figure\
    \ 2. Out of the total \nnumber of referred papers, 88 are original research articles\
    \ from reputable journals, while \n25 are from conferences. \n \nFigure 2. Types\
    \ of Article distribution. \nThe frequency of papers discussing the agriculture\
    \ 4.0 system is depicted in Figure 3. Due \nto our interest in current technologies,\
    \ we have assessed 20 papers that were published in \n2018, out of which five\
    \ articles are based on agricultural security issues. In contrast to the 19 \n\
    research papers on the agriculture sector and security aspects from the year 2020\
    \ that we have \ncited, we have cited 18 publications from the year 2019. With\
    \ the papers becoming publicly \navailable from various reputable journals for\
    \ reference, we studied 46 modern technology-\nbased quality papers in smart agriculture\
    \ along with articles on security challenges in 2021 \nand 2022. In order to be\
    \ updated regarding the current tools and technologies in this era, we \nalso\
    \ referred few articles to be published in 2023. \nFigure 2. Types of Article\
    \ distribution.\nThe frequency of papers discussing the agriculture 4.0 system\
    \ is depicted in Figure 3.\nDue to our interest in current technologies, we have\
    \ assessed 20 papers that were published\nin 2018, out of which ﬁve articles are\
    \ based on agricultural security issues. In contrast to\nthe 19 research papers\
    \ on the agriculture sector and security aspects from the year 2020\nthat we have\
    \ cited, we have cited 18 publications from the year 2019. With the papers\nbecoming\
    \ publicly available from various reputable journals for reference, we studied\n\
    46 modern technology-based quality papers in smart agriculture along with articles\
    \ on\nsecurity challenges in 2021 and 2022. In order to be updated regarding the\
    \ current tools\nand technologies in this era, we also referred few articles to\
    \ be published in 2023.\nProcesses 2023, 11, 757\n8 of 27\nProcesses 2023, 11,\
    \ x FOR PEER REVIEW \n8 of 30 \n \n \n \nFigure 3. The total number of Related\
    \ Research articles studied on Agriculture 4.0 and security chal-\nlenges in Agriculture\
    \ 4.0 from 2018 to 2023. \n3. Agriculture 4.0 Security Threats in Multi-Layered\
    \ Paradigm \nThere are several security issues in agriculture 4.0, starting from\
    \ Storing data, pro-\ncessing data, and transmitting it through Internet connectivity.\
    \ Figure 4 shows security \nrisks in the intelligent agricultural system in a\
    \ multi-layered paradigm. Security issues \ncan be either unintentional or sometimes\
    \ known. Animals, farm laborers, and machine \ntools can all easily gain access\
    \ to agricultural environments and cause problems [55]. Most \nof the security\
    \ threats are very common, but there some are unique to others who function \n\
    in harsh-field environments, such as Intelligent Agriculture. \n \n \nFigure 3.\
    \ The total number of Related Research articles studied on Agriculture 4.0 and\
    \ security\nchallenges in Agriculture 4.0 from 2018 to 2023.\n3. Agriculture 4.0\
    \ Security Threats in Multi-Layered Paradigm\nThere are several security issues\
    \ in agriculture 4.0, starting from Storing data, process-\ning data, and transmitting\
    \ it through Internet connectivity. Figure 4 shows security risks\nin the intelligent\
    \ agricultural system in a multi-layered paradigm. Security issues can be\neither\
    \ unintentional or sometimes known. Animals, farm laborers, and machine tools\
    \ can\nall easily gain access to agricultural environments and cause problems\
    \ [55]. Most of the\nsecurity threats are very common, but there some are unique\
    \ to others who function in\nharsh-ﬁeld environments, such as Intelligent Agriculture.\n\
    Processes 2023, 11, x FOR PEER REVIEW \n9 of 30 \n \n \n \nFigure 4. Security\
    \ Risks at the multi-layered paradigm of IoT in agriculture 4.0. \n3.1. Security\
    \ Risks at the Physical Layer \nThis is primarily concerned with physical equipment\
    \ such as sensors and actuators. \nPhysical devices can fail due to unintentional\
    \ or intentional human behavior, viruses, spy-\nware or cyber-attacks Smart farming\
    \ applications use a wide range of sensors and tech-\nFigure 4. Security Risks\
    \ at the multi-layered paradigm of IoT in agriculture 4.0.\nProcesses 2023, 11,\
    \ 757\n9 of 27\n3.1. Security Risks at the Physical Layer\nThis is primarily concerned\
    \ with physical equipment such as sensors and actuators.\nPhysical devices can\
    \ fail due to unintentional or intentional human behavior, viruses,\nspyware,\
    \ or cyber-attacks. Smart farming applications use a wide range of sensors and\n\
    technologies, and this diversity opens up several security risks, including the\
    \ following:\nRandom device incidents: This is the unintended alteration of physical\
    \ equipment\nthat causes it to deviate from its normal performance. The physical\
    \ equipment may be\ndamaged by farm machinery, causing short- or long-term physical\
    \ damage, as a result,\ngenerates false data and affects data accessibility.\n\
    Mobile node hijacking: It is the theft of farm equipment such as tractors, drones,\
    \ and\nsowing robots. Drones can indeed be pesticides, fertilizers sprinkling\
    \ could be performed\nby Drone, and robots could do weeding detecting disease.\
    \ The intruder may access and\nuse the farm equipment remotely without having\
    \ access permission.\nFake node: An intruder introduces imitation or harmful nodes\
    \ into the automated\nagriculture ﬁeld to disturb the smooth functioning of the\
    \ system [55]. This attack could be\ntriggered by capturing a node and making\
    \ a replica of it. This type of attack typically aims\nto either alter or modify\
    \ data-shuttered devices and applications.\nAbnormal Measurement: It senses unusual\
    \ observations due to data falsiﬁcation,\nenergy exhaustion, radio radiation,\
    \ detection of various connections, extreme storms,\nmalfunctions, or wrong inputs.\
    \ Incorrect data can jeopardize making decisions that result\nin the analysis\
    \ of data will be inaccurate, which minimizes system correctness.\nSleeplessness\
    \ attack: The sleeplessness attack sends a series of seemingly legitimate\nrequests\
    \ in order to keep the devices awake for prolonged life. As a result, the device’s\n\
    battery runs out, and the device stops working [56,57]. When the devices are turned\n\
    off, the observed information is not properly sent, jeopardizing decision-making\
    \ and\nsystem efﬁciency.\n3.2. Security Risks at Network Layer\nThe objective\
    \ of this layer is to send the generated data by the sensors from the physical\n\
    layer to the most trustable computational unit, which is the cloud. The most common\n\
    attacks, which affect the resources used in the network layer, are focused on\
    \ [58,59]. The\nsecurity risks in network layers are:\nDistributed Denial of Service\
    \ (DDoS): It attempts to affect access to service providers\nby overburdening\
    \ the communication link or manipulating protocol ﬂaws, which cause\nresources,\
    \ such as CPU and memory collapse [60].\nDue to resource exhaustion brought on\
    \ by a DDoS attack, the victim server is forced\nto block connections from new\
    \ reliable clients. The victim server’s buffer capacity or\nbandwidth may have\
    \ reached its limit of resources. The overall probability of resource\nscarcity\
    \ at the target end is provided by Equation (1) [15].\nPAttack = 1 − (1 − PBandwidth)\n\
    \01 − Pmemory\n\x01\n(1)\nwhere,\nPAttack: Probability of total attack,\nPBandwidth:\
    \ Probability of Consumption of bandwidth\nPmemory: Probability of Consumption\
    \ of memory\nAttacks on Data Transit: These types of attacks aim to retrieve information\
    \ shared\nbetween network devices in order to obtain conﬁdential information [61].\
    \ An adversary\ncould intercept trafﬁc via malicious routers or man-in-the-middle\
    \ attacks [62]. Intercep-\ntion of trafﬁc reveals conﬁdential data such as private\
    \ keys, access credentials, or digital\nsignatures.\nAttacks on Routers: They\
    \ plan to change network routes in order to gain trafﬁc control.\nInimical nodes\
    \ in IoT networks might attempt to reroute communicating paths during the\nProcesses\
    \ 2023, 11, 757\n10 of 27\nprocess of transmission. As a result of attacks, the\
    \ receiver might receive information lately,\npartially, or incorrectly, or not\
    \ at all [63,64].\nMalware Injection Attacks: The malware injection attack [34],\
    \ in which malware is\ninjected by an attacker into a connected computing device.\
    \ This is a very common attack\non smart farming. Malware is a very signiﬁcant\
    \ threat in distributed projects because it\nautomatically spreads through the\
    \ system, making it an appealing target for intruders.\nMalware damage comes in\
    \ multiple varieties of sizes. Malware can steal data about farm\nmaterial usage,\
    \ buying information for fruits, vegetables, and farm animals, data about\nfarm\
    \ equipment, and so on. It could hire automated devices to form a botnet that\
    \ would be\nused to commit harmful attacks under the inﬂuence of an intruder.\n\
    Botnet: At each architectural layer of the precision farming system, there are\
    \ numer-\nous IoT devices. These machines are vulnerable to attack and could be\
    \ taken over by a\ncentralized malicious system. This results in a ‘Botnet of\
    \ Things’ (BoT) [35]. A mutant farm\nworkforce IoT equipment that is already infected\
    \ [36] is easily used to infect other networks\nvia various communication links,\
    \ and thus automated farming could become an internet of\ndestructibility for\
    \ cyber illegitimates. The security features are not added in many of the\nPrecision\
    \ agriculture devices, but still, they are used frequently for establishing adequate\n\
    data security defensive system frameworks.\n3.3. Security Risks at Edge Layer\n\
    The edge contains important aspects that monitor, and control modules communicate\n\
    with all layers and access resources. The physical layer’s large volumes of data\
    \ can be\nprocessed locally rather than centralized in the cloud. The following\
    \ are major edge\nsecurity issues.\nActuator control Forge: It introduces false\
    \ measures of data into the system in order to\nmanipulate it. Typically, the\
    \ data is received by the gateway in plain text. Corrupted data\nwill lead to\
    \ poor decision-making. An opponent, for example, could inject incorrect soil\n\
    moisture measurements into a smart irrigation system to manipulate it.\nBooting\
    \ Attacks: Devices are vulnerable to attacks due to a lack of security processes\n\
    during boot [37]. Memory cards and ﬂash drive sticks, for example, may detect\
    \ dangerous\ncodes which run at startup [38]. Suspicious booting practices could\
    \ launch numerous\nattacks on the edge with insufﬁcient protection.\nSignature\
    \ wrapping: The attacker modulates the cipher text by inserting a bogus\nelement\
    \ that allows you to perform a random Web Application requisition while identifying\n\
    as an authenticated user [39].\nMeasure infusion Forgery: It is the injection\
    \ of wrong speciﬁcations into a system in\norder to modify it. An attacker sends\
    \ known data patterns through actuators to the cloud\nstorage, which is then injected\
    \ into the system through computational units. Corrupted\ndata could lead to poor\
    \ decision-making.\nUnauthorized access: The process of validating is a critical\
    \ security component. The\nauthentication process is a technology that ensures\
    \ security and privacy, honesty, and\naccessibility [40]. Several agricultural\
    \ practices, however, use gateways with insufﬁcient or\nno access controls.\n\
    Gateway-cloud fabrication: The cloud and the gateway are linked by ISPs or wireless\n\
    connections. A network attacker could fabricate cloud requests by interrogating\
    \ a gateway.\nThe attacker could use these requests to change parameters in precision\
    \ agriculture, control\nqueries for sensitive services, or interpret system equipment.\
    \ The cloud can implement\nsecurity services as it has computational power. In\
    \ order to ensure maximum system\nreliability, these strategies must be incorporated\
    \ into the system.\n3.4. Security Risks at Application Layer\nThis layer provides\
    \ end-user assistance and data to process and make system decisions.\nThis layer’s\
    \ security concerns are application-speciﬁc, focusing on preventing data theft\n\
    Processes 2023, 11, 757\n11 of 27\nand ensuring privacy. Some of the attacks that\
    \ might affect cloud services and applications\nare listed below in terms of security.\n\
    Malicious scripts: Malicious scripts can deceive clients, infuse malicious data,\
    \ access\nconﬁdential material, and compromise security features. This type of\
    \ attack is frequently\ncarried out by cybercriminals for speciﬁc, economic, or\
    \ political reasons. They can damage\nor destabilize operational processes by\
    \ using malicious scripts, presenting unnecessary ad\ncampaigns, and stealing\
    \ money [41].\nPhishing: It is an attack that attempts to obtain highly classiﬁed\
    \ personal informa-\ntion, such as an Identity and password, fraudulently. Phishing\
    \ typically targets end-users\nthrough fraud and sites [42]. The attacker also\
    \ affects decision-making and internal opera-\ntions in many cases. The most effective\
    \ protection would be for users to remain vigilant\nwhile surﬁng the web [43].\n\
    Denial of Service (DoS): This threat disrupts service by overburdening trafﬁc\
    \ on the\nnetwork or ﬂooding the provider with repeated attempts [44]. Because\
    \ of ﬂaws in security\nsetup, an attacker can launch this attack from the Web\
    \ or a sub-system.\n4. Security Threats in Modern Agriculture\nFarmers typically\
    \ carry out the developed smart system initiatives in physical ﬁelds\nor green\
    \ ﬁelds. In Agriculture 4.0, most efforts are focused on water processes, disease\n\
    monitoring, seed production, and record keeping. It can be either automatically\
    \ con-\ntrolled or manually controlled. In both cases, the system monitors the\
    \ environment with\nsensors and changes it with actuators. Some initiatives only\
    \ digitize farms, whereas oth-\ners incorporate industry 4.0 or IoT technologies.\
    \ As an immature industry, open-ﬁeld\nagriculture is the focus of this work, with\
    \ security issues restricted to access control and\nweb-encrypted communications.\n\
    It is too difﬁcult to execute different security measures in rural areas since\
    \ there is a\nshortage of modern technical infrastructure and advanced technology.\
    \ Many difﬁculties\ncan arise if security measures are attempted in rural agriculture.\
    \ Table 3 lists a few of the\nsecurity challenges that are prevalent in rural\
    \ locations.\nTable 3. Rural-Agriculture Security Issues.\nRural-Agriculture\n\
    Security Issues for Rural\nResident\nsecurity awareness is less\nHard for Facing\
    \ security risks\nFacility\nCost and energy consumption are less\nHard for imposing\
    \ Strong security mechanisms.\nProduction data\nDifﬁcult to measure\nIdentifying\
    \ unauthorized access is hard\nProduction cycle\nDepends on the growth of the\
    \ crop\nFace heavy loss because of less security\nTransport\nFarmland environment,\
    \ bad trafﬁc\nDelayed availability\nManagement system\nWeak security due to weak\
    \ infrastructure\nhard to control attackers\nCommunication\nBase stations are\
    \ less\nHard to identify base station attacks\nRecently most of the agriculture\
    \ 4.0 projects have implemented IoT, but the security\nfeatures in that have become\
    \ disabled by default. It has been introduced that a server con-\ntrols and manages\
    \ these devices remotely via a web application. Opportunistic opponents\ndid not\
    \ know details about security resources. They gain unauthorized access to the\
    \ system,\ninsert fabricated measures, fabricate actuator controls, or report\
    \ earlier attacks to divert\nthe system from its normal functioning [45–64]. The\
    \ author proposed a smart watering\nsystem that remotely controls and observes\
    \ the ﬂow of water in the farm but is not focused\non security risks to detect\
    \ malicious attacks and unallowed access that manipulate the\nmonitored data.\
    \ To monitor the growing environment, ref. [65] introduce a Hydroponic\nFarming\
    \ Ecosystem (HFE). It is automatically controlled, and the client can monitor\
    \ the\nfarming via a web interface. These automated systems require high-security\
    \ concerns to\nProcesses 2023, 11, 757\n12 of 27\ndetect or avoid random sensor\
    \ incidents, weak sensors, wrong data injection, and other\nattacks, which could\
    \ corrupt data and affect system reliability.\nSimilarly, in [66], the author\
    \ focused on creating a system for monitoring ﬁelds based\non humidity, soil moisture,\
    \ light levels, and temperature. Irrigation can be controlled\nmanually or automatically\
    \ via web or mobile systems. An intelligent solution for detecting\ndiseases in\
    \ leaves focused in [67]. By using sensor data and camera images, the system\n\
    identiﬁes leaf diseases. A mobile or web application is used by the end-user to\
    \ interact\nwith the system. This paper does not go into detail about the implementation\
    \ of security.\nSimilarly, ref. [68] proposed an intelligent agricultural system\
    \ for information inter-\nchange among farm equipment. The article discusses the\
    \ system’s construction but makes\nno mention of manual intervention or remote\
    \ control, nor does it concern any security\nchallenges. As this is a data exchange\
    \ system, the DoS attack can affect the network layer.\nRef. [69] provides NETPIE,\
    \ a solution that gives agricultural product information. The\ngrowing environment\
    \ can be controlled and monitored with a set of physical devices. The\ngenerated\
    \ data is analyzed saved in a QR code, and which is then available to the customer.\n\
    NETPIE does not discuss security resources. Ref. [51] Introduced monitoring of\
    \ crop ﬁelds\nand watering using IoT, which measures data and controls data to\
    \ avoid unauthorized\naccess to these data but could not protect the other devices,\
    \ which leads to weak security,\nwhich might result in a major loss. Ref. [52]\
    \ Proposed a system known as SEnviro, which\nobserves the crop ﬁeld and detects\
    \ diseases remotely. This system does not focus on the\nprediction of disease,\
    \ but unauthorized access is controlled here.\nAccording to the relevant literature,\
    \ from a security standpoint, farming equipment\nis used without security features.\
    \ Furthermore, the gateway contains no security infor-\nmation. Transmission privacy\
    \ or device authentication is not presented in any of the\nabove-discussed systems.\
    \ Access control and management and encryption of data need\nto add security technologies\
    \ to Information dissemination. Smart agriculture is currently\na convenient target\
    \ for cyber criminals’ agents. Attacks can be motivated by a variety of\nfactors,\
    \ including an advertisement, intellectual, or even terrorist reasons. Terrorist\
    \ groups,\nfor example, can cause ecological loss to a country, economic chancers\
    \ may take part in\nmarket manipulation, and workers can attack a range of factors\
    \ [53].\n4.1. Data and Device Security Issues and Threats in Agriculture 4.0\n\
    As was previously mentioned, harsh environmental factors that can seriously harm\n\
    electromechanical equipment, such as extreme heat, moisture, moisture, shocks,\
    \ and other\nanomalies, have a direct impact on the agricultural sector [70].\
    \ The majority of these\nsensors are prone to failure, making it feasible for\
    \ them to produce inaccurate data and\ninstructions that could cause a manufacturing\
    \ disaster [71]. Additionally, sensors and\nnetwork equipment are predominance\
    \ reachable. This poses a serious risk to farmlands\nsince anybody with bad intentions\
    \ can access them and corrupt or harm them to cause\nthem to malfunction [72].\n\
    Another potential security concern is the online transfer of the information gathered\n\
    by IoT sensors and other agricultural machines. Major security concern in the\
    \ agriculture\nindustry is security, privacy, and control [73], as farmers may\
    \ incur a signiﬁcant ﬁnancial\nand personal loss in the event of a data breach.\
    \ Ref. [74] Divides the threats to conﬁdentiality\ninto four distinct categories:\n\
    •\nIntentional data theft through smart platforms and applications that do not\
    \ adhere to\nsecurity and privacy standards;\n•\nInternal information thefts from\
    \ a stakeholder in the supply chain intended to harm\nan agri-business or a farmer;\n\
    •\nUnethical data sales intended to reduce proﬁts for farmers or to harm them;\
    \ and\nother threats.\n•\nUnsupervised foreign access to private and sensitive\
    \ information using drones, sensors,\nand cameras with the intention of utilizing\
    \ them to harm farmers or jeopardize public\nsafety [64,75].\nProcesses 2023,\
    \ 11, 757\n13 of 27\nEvery application of modern technology, IoT in agriculture,\
    \ carries the aforementioned\ndangers, weaknesses, and threats. A more thorough\
    \ and complex explanation of the risks\nand their sources in aspects of cyberattacks\
    \ in the agro sector is provided in the following\nparagraph, which is primarily\
    \ focused on illegal behavior and exploited vulnerabilities in\nICT systems.\n\
    4.2. Cybercrime and Cybersecurity in Agriculture\nA cyber-attack on an agribusiness\
    \ or food industry is increasingly likely today thanks\nto automation and the\
    \ widespread use of internet-connected equipment, which give poten-\ntial (cyber)\
    \ criminals greater chances in ﬁelds that were previously too remote or difﬁcult\n\
    to physically access [61]. Consequently, a potential cyber-attack or security\
    \ problem in\nan agricultural organization could have serious human or ﬁnancial\
    \ repercussions. This\nimplies that pertinent security concerns brought about\
    \ by the widespread and ongoing\nusage of IoT, as well as the emergence of agro-terrorism,\
    \ require adequate attention, better\nequipment, and solutions [62].\nThe bulk\
    \ of system operations in the agriculture sector are network-based, and fre-\n\
    quently these systems are not protected from cyber threats, which can have substantial\n\
    ﬁnancial and security ramiﬁcations [76–86]. Five important elements, as identiﬁed\
    \ in [87],\nstrengthen these risks in the agricultural sector:\n•\nIncreasing\
    \ the farm consolidation highly depends on technology;\n•\nThe joint ventures\
    \ of the food supply chains, allow manufacturers to conduct processes\nand trade\
    \ products directly;\n•\nFood-related technologies in intelligent markets depend\
    \ on more components, which\nincreases their vulnerability to errors and malfunctions.\n\
    •\nEffective monitoring of food-related systems, social networks, and industries\
    \ in a safe,\ndynamic, and almost real-time manner is lacking, making it difﬁcult\
    \ to identify serious\ndigital and security vulnerabilities that could be the\
    \ root of signiﬁcant data breaches\nand system defects.\nDue to the heightened\
    \ risk of cybercrime, the agriculture sector may be impacted by\nsuch threats\
    \ in a number of ways. Categorize these methods as in [84]. Threats of tampering\n\
    include delivery disruption, conﬁdential information interception, formula modiﬁcation,\n\
    and delivery disruption. These risks are undoubtedly closely related to the adoption\
    \ and\napplication of technological advancements in the agriculture and food sectors.\n\
    Cooper et al. and Bogaardt et al. identify the following as the primary technical\n\
    advancement areas that are commonly used in the agri-sector and contain vulnerable\n\
    places for harmful cyber-attacks [86–88]:\n•\nRadio Frequency Identiﬁcation (RFID);\
    \ wireless communications (such as Wi-Fi);\n•\nSensors for the infrastructure,\
    \ soil, and crops;\n•\nDrones and other unmanned aerial vehicles (UAVs);\n•\n\
    PA-speciﬁc automation solutions (such Real Time Kinematic Technology);\n•\nPortable\
    \ electronics (such as laptops, smartphones, and GPS trackers);\n•\nSmart agriculture\
    \ and vertical agriculture;\n•\nThe use of AI in conjunction with biotech and\
    \ nanotech (AI).\nTable 4 provides a summary of the study performed on different\
    \ attacks in agricultural\n4.0 due to cyber security concerns.\nProcesses 2023,\
    \ 11, 757\n14 of 27\nTable 4. Summary of the study performed on attacks in agricultural\
    \ 4.0.\nAttacks\nAgriculture Consequences\nYears\nStudies\nPhysical Attack\nReplay\
    \ Attack\nMasquerade Attack\nThe collecting of data on the kind and potential\n\
    applications of equipment for agricultural projects\nviolates privacy.\n(2019–2022)\n\
    [62,76–81]\nDictionary attack,\nSession Hijacking, Spooﬁng\nAttackers with forged\
    \ identities who can pass as\nlegitimate or authorized people can access the\n\
    precision agriculture system.\n(2019–2023)\n[62,79,82–84]\nMalicious Code Attack\n\
    Repudiation Attack\nA situation in which services, authentication\nmechanisms,\
    \ or data transmissions are refused\nthrough the system’s nodes may result from\
    \ the\nrepudiation of information, which enables an\nintruder to repudiate all\
    \ the energy usage,\ninformation-generating, and manufacturing\nprocesses of an\
    \ agricultural production ICT system.\n(2018–2021)\n[62,79,85,86]\nTracing Attack\n\
    Brute Force Attack\nKnown-Key Attack\nBecause of the conﬁdentiality breach, unauthorized\n\
    access to crucial data could result in the theft of\nsigniﬁcant data and pose\
    \ serious risks to the privacy\nof the users of the involved agriculture system.\n\
    (2020–2023)\n[29,62,79,87,88]\nForgery Attack\nMan-In-The-Middle\nAttack (MITM)\n\
    Trojan Horse Attack\nInformation about agriculture technology or smart\nfarming\
    \ techniques may no longer be accurate or\ndependable due to potential unlawful\
    \ or improper\nchanges in the reliability of data or resources.\n(2019–2023)\n\
    [62,89–96]\nDenial of Service\n(DoS) attacks\n(SYN Flood, Ping of\nDeath, Botnets)\n\
    Attackers have the ability to halt the functioning of\nthe established smart farming\
    \ network or even set\nup services that are inaccessible to farmers.\n(2019–2022)\n\
    [62,79,92,97,98]\n4.3. IoT Vulnerabilities, Risks, and Threats in Agriculture\n\
    IoT is made up of four main systems that make it possible to communicate between\n\
    nodes. Sensing technology, IoT gateways, cloud servers, data storage, and mobile\
    \ appli-\ncations for remote control make up an IoT system. The architectures\
    \ of IoT systems in\nagriculture come with current and new threats and vulnerabilities.\
    \ These ﬂaws can be\nlinked to IoT device hardware and software problems, communication\
    \ protocols, and also\ndata processing and storage solutions (found, for example,\
    \ in cloud infrastructures, data\ncenters, and smartphones) [2,11].\nAccording\
    \ to [99–101], the following is a concise but accurate classiﬁcation of the\n\
    primary causes of low security in the IoT:\n•\nFirmware that is not patched and/or\
    \ default passwords that have been used for a long\ntime allow for device compromise\
    \ in an IoT network.\n•\nBecause of the limited computing power of smart devices\
    \ and vendors’ efforts to\nkeep their prices low in a cutthroat market, it is\
    \ difﬁcult to incorporate complicated\ncryptographic algorithms.\n•\nFlaws in\
    \ the routing protocols used by smart devices (such as Bluetooth and ZigBee);\n\
    •\nThe Wi-Fi Protected Access (WPA) protocol’s outdated, low-security version,\
    \ which is\nfrequently still in use;\n•\nConducting passive vulnerability detection\
    \ using search engines;\n•\nThe risk of assembling millions of smart devices into\
    \ a potent botnet (such as Mirai),\ngiven how simple it is to ﬁnd vulnerabilities\
    \ via internet scanning;\n•\nA general disregard for the security of smart gadgets\n\
    Finally, a variety of criteria can be used to categorize IoT vulnerabilities,\
    \ hazards, and\nthreats. These risks apply to all IoT applications, including\
    \ those in the agricultural sector.\nFirst, internal vs. external risks and passive\
    \ vs. active risks are the two basic classiﬁcation\ngroups of security concerns\
    \ in IoT systems in the agriculture sector [79].\nProcesses 2023, 11, 757\n15\
    \ of 27\nIoT hazards are categorized in another intriguing way using a layer-based\
    \ system.\nAccording to [22], each of the levels below integrates many technologies\
    \ that could lead\nto a variety of security threats, vulnerabilities, and/or breaches.\
    \ The application layer,\nmiddleware layer, internet layer, access gateway layer,\
    \ and edge technology layer are the\nﬁve main layers that make up the IoT architecture.\n\
    5. Existing Research on Security in Agriculture 4.0\nIn [54], the author states\
    \ that The United States Department of Homeland Security\nissued a report emphasizing\
    \ the signiﬁcance of agriculture 4.0 and the associated internet\nsecurity threat\
    \ and possible attacks.\nThe report emphasizes the information security model\
    \ of conﬁdential information,\ncredibility, and accessibility in farming. The\
    \ researchers of [55] suggested a new access\ncontrol solution that combines session\
    \ keys and public keys to speed up the encrypted\ncommunications tasks. It yields\
    \ quick and lightweight appropriate control measures\nthat are ideal for precision\
    \ agriculture communication. Ref. [56] Proposed a framework\nfor understanding\
    \ vulnerabilities in emerging technologies and their application in an\nintelligent\
    \ farming environment. The goal of the approach is to determine the level to\n\
    which intelligent farming emerging innovations are prone to cyber. It assesses\
    \ the threat\nprediction model using the common vulnerability scoring system (CVSS).\n\
    Nowadays, The Blockchain is not only used in cryptocurrency but also utilized\
    \ in\nother ﬁelds and different applications such as in the medical sector, agriculture\
    \ sector,\netc. [57–59]. This article concentrated on the application of blockchain\
    \ technology to food\nsafety. For tracking and monitoring the food items and stages\
    \ of production, such as\ncultivation/breeding, raw resources, processing, transporting,\
    \ warehousing, and selling,\nthe author developed a system [60]. In addition,\
    \ the system employs a variety of sensor-\nbased equipment to adopt sustainable\
    \ recording and conﬁrmation with sensor-based\nveriﬁcation. Ref. [61] Proposed\
    \ a blockchain-based easy and simple security framework for\nsmart Greenﬁeld farming.\
    \ Each IoT node can nominate the cluster member’s leader, which\nhelps to avoid\
    \ a hot spot problem if an intruder focuses on the leader node. Furthermore,\n\
    the authors discussed the security risks of their suggested scheme, which adhered\
    \ to the\ntraditional conﬁdentiality, integrity, and availability principles.\
    \ Ref. [62] proposed a cost-\neffective IoT-based security monitoring system.\
    \ The physical layer is the primary concern\nof this system of precision agriculture,\
    \ where data are collected from sensors. These data\nare sent to a controller,\
    \ which analyses it to take action, such as activating the actuators for\nwater\
    \ sprinklers on farms. Table 5 describes some of the recent research which has\
    \ already\nbeen performed on security issues related to smart farming.\nGupta,\
    \ M et al. explained [102] the necessity of clouds applied in vehicles in this\
    \ time-\nand location-sensitive context and present an extended access control\
    \ oriented (E-ACO)\narchitecture that is pertinent to IoV. Here, they describe\
    \ using scenarios to highlight access\ncontrol needs in our vision of cloud-assisted\
    \ connected automobiles and vehicular IoT, as\nwell as approaches to various access\
    \ control models that may be applied at different tiers\nof the E-ACO architecture\
    \ and in the authorization framework.\nGupta, M et al. [103], in their work, describe\
    \ an edge infrastructure-based solution to\nV2V and V2I communication that is\
    \ safe and trustworthy in place of direct peer-to-peer\nconnection. To approve,\
    \ check, and verify the authenticity, integrity, and anonymity of\ncommunications\
    \ sent in the system, they add trusted cloudlets in this section. Along with\n\
    a proof of concept implementation of the suggested approach on the AWS IoT platform,\n\
    they also describe a formal attribute-based model for V2V and V2I communication,\
    \ known\nas AB-ITS. This cloudlet-supported architecture supports crucial use\
    \ cases such as an\naccident or ice-threat warning and other safety applications.\
    \ It supplements direct V2V or\nV2I communication.\nSontowski, S. et al. [104]\
    \ presented a DoS attack that can impair a smart farm’s\noperation by interfering\
    \ with the functioning of installed on-ﬁeld sensors. They speciﬁcally\ncovered\
    \ a Wi-Fi de-authentication attack that makes use of ﬂaws in IEEE 802.11, where\n\
    Processes 2023, 11, 757\n16 of 27\nthe management packets are not encrypted. A\
    \ development board for the ESP8266 maker\nfocus When a Raspberry Pi is attached,\
    \ WiFi Deauther Monster is used to disconnect it\nfrom the network and stop sensor\
    \ data from being transferred to a distant cloud.\nThe notion of Activity-Centric\
    \ Access Control (ACAC) for smart and connected ecosys-\ntems was ﬁrst proposed\
    \ by Gupta, M. et al. in [105] and discussed in this article as a ﬁrst\nstep.\
    \ Here, they examined the idea of activity with regard to cooperative and dispersed\n\
    yet interconnected systems, identifying the many parties involved as well as the\
    \ crucial\nelements to consider when making an activity control choice. They provide\
    \ an initial\nframework for developing activity control expressions that may be\
    \ used by various smart\nobjects in the system.\nThe biggest obstacle to the growth\
    \ of cloud computing is security worries. Information\nsecurity continues to have\
    \ an impact on the market even though it raises inconveniences\nrelated to information\
    \ security. The threat of security breaches in the cloud infrastructure\nmust\
    \ be understood by clients. Cloud-computing capacity, networking, and computing\n\
    powers are brought to the edge by fog computing. One of the most critical challenges\
    \ with\nfog computing platforms is safety and security. Lightweight devices have\
    \ beneﬁted greatly\nfrom edge computing’s ability to complete difﬁcult tasks quickly,\
    \ but the technology’s hasty\ndevelopment has led to a general disregard for safety\
    \ risks in edge computing stages and\nthe applications they allow.\nIn our proposed\
    \ framework we have focused on the threats in fog computing-based\nIoT environment\
    \ via blockchain for the application in agriculture 4.0.\nTable 5. Related Research\
    \ performed on Security issues in Agriculture 4.0.\nReferences\nYears\nScenario\n\
    Technology & Security\n[73,75,92]\n(2022–2023)\nSmart equipment, Smart irrigation\n\
    Automation, IoT\nTheft detection by motion detector\n[84,97]\n(2019, 2021)\nEfﬁcient\
    \ and secure cluster routing for\nIoT-based smart agriculture applications\nWSNs,\
    \ data encryption\nA strong communication channel and\nsymmetrical data security\
    \ for security\nbetween farming devices\n[35,95]\n(2021, 2023)\nSupply Chain Tracking,\
    \ Aerial Crop\nManagement, Livestock Safeness, and\nMaturity Tracking, and Irrigation\n\
    Smart agriculture IoT\nCyber security in smart agriculture\n[76,87,93]\n(2019–2021)\n\
    Security and privacy in green-IoT-based\nagriculture\nBlockchain, IoT\nPrivacy-oriented\
    \ blockchain-based solutions\n[106]\n(2021)\nEcosystem for smart agriculture\n\
    IoT\nAuthenticating IoT sensor device and\nsending encrypted data\n[79,100]\n\
    (2021, 2023)\nIntelligent and secure smart irrigation system\nIoT, blockchain\n\
    Decentralized storage of irrigation and plants\ndatabase by implementing the concept\
    \ of\nblockchain\n[48,96]\n(2018, 2020)\nPrecision agriculture threat prediction\
    \ model\nbased on Common Vulnerability Scoring\nSystem\nParameters detection,\
    \ IoT system\nA prediction model framework for\ncyber-attacks in precision agriculture\n\
    [68,94]\n(2021, 2020)\nPrecision agriculture-based multilayered\nsecurity and\
    \ privacy architecture\nIoT, AI\nA holistic study on security and privacy in a\n\
    smart agriculture ecosystem\n[59,91]\n(2021, 2019)\nSwarm robotic systems for\
    \ precision farming\nBlockchain\nPublic key cryptography by blockchain\nProcesses\
    \ 2023, 11, 757\n17 of 27\nTable 5. Cont.\nReferences\nYears\nScenario\nTechnology\
    \ & Security\n[63,98]\n(2023, 2022)\nAn overview of the security requirements,\n\
    problems, thread model, stack challenges,\nand attack taxonomy for smart agriculture\n\
    IoT\nLivestock management, precision farming,\ngreenhouse monitoring\n[104]\n\
    (2020)\nDoS attack in a smart farm’s operation by\ninterfering with the functioning\
    \ of installed\non-ﬁeld sensors.\nIoT,\non-ﬁeld sensors and autonomous vehicles\n\
    Proposed\nFramework\nProposed\nAgriculture 4.0-based multilayered security\nand\
    \ privacy architecture.\nDDos Attack against blockchain Network\nIoT,\nFog Computing,\
    \ Blockchain,\nDDoS mitigation programme on the SDN\ncontroller.\n6. Proposed\
    \ Security Framework\nThe proposed security framework for agriculture 4.0 is described\
    \ in this section. The\nblock diagram of the proposed security framework is illustrated\
    \ in Figure 5.\nProcesses 2023, 11, x FOR PEER REVIEW \n19 of 30 \n \n \nFigure\
    \ 5. Proposed Security Framework. \n6.1. Sensor Layer in Agriculture 4.0 \nThis\
    \ layer’s major function is to acquire meaningful information from the external\
    \ \nenvironment via sensors to take required action against it. This sensor layer\
    \ has a variety \nFigure 5. Proposed Security Framework.\nProcesses 2023, 11,\
    \ 757\n18 of 27\n6.1. Sensor Layer in Agriculture 4.0\nThis layer’s major function\
    \ is to acquire meaningful information from the external\nenvironment via sensors\
    \ to take required action against it. This sensor layer has a variety\nof Sensor\
    \ nodes of various forms and sizes. As a result, they all use the same basic compo-\n\
    nents, such as input and output components, information handling units, communication\n\
    segments, and many more units for the management of power sections. To analyze\
    \ and\nstore all detected data, it is sent to the relevant fog nodes. Furthermore,\
    \ Sensor nodes\nreceive instructions to undertake agricultural operations.\n6.2.\
    \ Fog Computing Layer\nThis layer is made up of multiple fog nodes, which are\
    \ insubstantial equipment that\ncarry out processing, communication, and storing\
    \ tools to do operations that an end device\ncannot perform. Not every piece of\
    \ data that is gathered becomes processed on the cloud.\nRather, this layer hosts\
    \ all authentic analysis and latency-sensitive applications.\nVirtualization:\
    \ Recognizing that conﬁguring several devices, in the same manner,\nmight be time-consuming,\
    \ the nodes can be contained inside a Virtualized environment for\na more pleasant\
    \ setup for all subsequent fog nodes.\nAgricultural Sensor data monitoring: This\
    \ node is going to collect real-time sensing\ndata, analyze it, visualize it,\
    \ manage devices, and store some of it locally. The user can\nobtain information\
    \ from the fog layer while smoothly synchronizing cloud-directed data.\nBlock-chain\
    \ Client software: This consists of a piece of programs that is installed on\n\
    the fog node. Its primary goal is to sync authentic sensitive Sensor data to the\
    \ Blockchain.\nIt is in charge of producing transactions, batching them, and sending\
    \ them to the validator\nso that they can be aggregated into blocks and recorded\
    \ to the Blockchain.\nSimulated Switch: Additionally, this node is used as a transmitting\
    \ device with the\nsupport of virtual switch software, which provides NFV and\
    \ SDN technologies to enhance\nnetwork services by establishing the routing features\
    \ for computational extension and\ncontrol. Some network virtual functions include\
    \ security, quality of service (QoS), and\nautomated control. The main objective\
    \ is to create switching layers for virtual machine\nenvironments while continuing\
    \ to support the OpenFlow protocol [107], which allows this\nnode to interact\
    \ directly with the SDN Controller; an outstanding demonstration of such\nimplementation\
    \ is Open vSwitch, an interactive multilayered software switch.\n6.3. Distributed\
    \ Network Using SDN\nThis network is made up of numerous geologically dispersed\
    \ and SDN controllers\nlinked to it that operates as a common Networking Operating\
    \ System (NOS), combining\nnominally autonomous operations with centralized control\
    \ [108]. The main component of\nan SDN network is the SDN controller. This can\
    \ help with network monitoring by managing\nall transactions among network and\
    \ application devices, allowing it to manage and adjust\nnetwork ﬂows more efﬁciently\
    \ in response to new requirements [109]. It maintains a\nconsistent glimpse of\
    \ the network from afar, delivering data to fog nodes via one APIs and\napplication\
    \ via other APIs (MQTT, CoAP...) [109]. In addition, the SDN controller employs\n\
    a Block-chain contractor to properly secure ﬂow tables of SDN in the Block-chain,\
    \ hence\navoiding rule counterfeit.\n6.4. Block-Chain Based Network\nTo keep all\
    \ the nodes up to date, all Blockchain modules are interconnected and con-\nstantly\
    \ exchange the most updated information in the Blockchain among themselves. Smart\n\
    contracts will trigger and enforce relevant actions based on the data provided,\
    \ allowing\nfor veriﬁable transactions in the Blockchain when such circumstances\
    \ are met without the\nrequirement for third-party involvement [110,111]. The\
    \ Ethereum Blockchain platform\nserves as the foundation for the blockchain network\
    \ architecture because it provides a\nhighly ﬂexible and modular design that separates\
    \ the runtime environment as per the\nProcesses 2023, 11, 757\n19 of 27\napplication\
    \ domain, permitting agreements to deﬁne the business rules for the application\n\
    that are not necessary for the core system’s fundamental design.\nThe Blockchain\
    \ complete node is made up of the following components:\n1.\nNode for Validation:\
    \ This is a key component that veriﬁes batches of transactions\nbefore combining\
    \ them into blocks. It also ensures that candidate blocks are added to\nthe Blockchain\
    \ version for each node.\n2.\nBlockchain Software: it determines which transactions\
    \ or operations are permitted on\nthe block-chain and contains the following:\n\
    •\nDatabase model: it deﬁnes relevant operations and the description of the transac-\n\
    tion’s payload.\n•\nTransaction Processor: deﬁnes the business logic for different\
    \ applications, vali-\ndates batches of transactions, and modiﬁes the blockchain\
    \ system based on the\napplication’s rules.\n•\nClient: it speciﬁes the service\
    \ client functionality, which the client develops and\ndelivers to the validator.\
    \ The client also shows blockchain information.\n•\nREST API: This protocol is\
    \ used to communicate within the clients and the\ntransactions processing system.\n\
    3.\nDigital Signature: To ensure transaction integrity, the data used in the transactions\
    \ is\nhashed using SHA-256 and then encrypted using the sender’s secret key to\
    \ produce a\nsignature. The processor then validates the transaction by verifying\
    \ this signature.\n7. Case Studies and Experimental Results\nTo test the security\
    \ framework, we allowed DDoS attacks against the Blockchain\nNetwork. A distributed\
    \ denial-of-service (DDoS) attack targets websites and servers by\ndisrupting\
    \ network services. A DDoS attack attempts to exhaust an application’s resources.\n\
    We provide an experimental setup conﬁguration shown in Table 6, as well as the\n\
    simulation architecture is shown in Figure 6.\nTable 6. Experimental Setup Conﬁguration.\n\
    HM\nVM\nCPU\nIntel Core i5-6300U @ 2.4 GHz\n2 vCores\nRAM\n8 GB\n2 GB\nOS\nUbuntu\
    \ 18.04 × 86 64\nUbuntu 18.04 × 86 64\nVirtualization\nDocker\nDocker-compose\n\
    Docker-compose\nDocker\nApplications\nThingsBoard\nOpen vSwitch\nONOS\nMininet\n\
    Hping\nsFlow\nEthereum\nSupply Chain\nHost Machine (HM): Here we have installed\
    \ an open-source based IoT framework\ncalled ThingsBoard, which make it possible\
    \ to construct fog layers while seamlessly syncing\nwith the cloud, on the host\
    \ system and constructed a scenario of a smart farm with two\nsilos, each with\
    \ a different number of IoT devices. Every second, each gadget reports a\npseudo-random\
    \ value. We utilized a code to simulate a Blockchain client, which accepts\nthe\
    \ provided values and generates transactions. Mininet network emulation tool is\
    \ then\nused to commit the transaction onto the Blockchain via the Open vSwitch\
    \ module. We also\nconnected the ONOS SDN controller and sFlow4 collector to the\
    \ Mininet virtual network.\nProcesses 2023, 11, 757\n20 of 27\nProcesses 2023,\
    \ 11, x FOR PEER REVIEW \n22 \n \n \nEvery reported value will be used by the\
    \ blockchain client to update the specified ass\nthe Ethereum blockchain. \n \n\
    Figure 6. Experimental Setup Architecture. \nTo put our framework architecture\
    \ to the test, we conducted three case studies. \nCase 1: We examined the platform’s\
    \ usual workflow, which means we did not \nduct any attacks on the Ethereum blockchain.\
    \ \nCase 2: Using the Hping programme on the host PC, we launched a DDoS assaul\n\
    the Blockchain network. We implemented a DDoS mitigation programme on the S\n\
    controller. \nCase 3: We launched a DDoS attack against the Blockchain network,\
    \ by turning\nthe DDoS mitigation programme in the SDN controller. \nDuring the\
    \ simulation, we noticed two crucial metrics in each case: \n• \nThe number of\
    \ network packets received by the Blockchain per minute. \n• \nThe number of transactions\
    \ published in the Blockchain network. \nThe results are shown in Figures 7 and\
    \ 8, respectively. Taking the case 1 finding\nideal, with 120 published transactions\
    \ in 10 min at an average of 100 Kbps; the third \nnario revealed a really dismal\
    \ performance with about 45 published transactions, re\nsenting a loss of more\
    \ than 60% compared to the 1st case, and an unreliable Blockch\nnetwork. To understand\
    \ the outcomes of the second scenario, we must first recog\nwhat took place in\
    \ the network during the test. The Open vSwitch sends all network tr\ndata to\
    \ the sFlow forecast system, a real-time reporting system that gives real-time\
    \ no\nof network assaults, involving attackers and target information, to the\
    \ SDN controlle\ncurity framework via commands. The SDN controller interacts with\
    \ the switch to dis\nDDoS traffic while allowing valid traffic to continue through.\
    \ The attack is stopped\nenough to prevent it from rapidly growing and resulting\
    \ in 95 blocks published, whi\napproximately 40% more than the 3rd case. \nFigure\
    \ 6. Experimental Setup Architecture.\nVirtual Machine (VM): We have installed\
    \ the Ethereum Blockchain network and its\nSupply Chain AssetTrack application\
    \ in the Virtual Machine. To keep records of their\nupdated information, we formed\
    \ a user for the host system (fog node) and various assets.\nEvery reported value\
    \ will be used by the blockchain client to update the speciﬁed asset in\nthe Ethereum\
    \ blockchain.\nTo put our framework architecture to the test, we conducted three\
    \ case studies.\nCase 1: We examined the platform’s usual workﬂow, which means\
    \ we did not conduct\nany attacks on the Ethereum blockchain.\nCase 2: Using the\
    \ Hping programme on the host PC, we launched a DDoS assault\non the Blockchain\
    \ network. We implemented a DDoS mitigation programme on the\nSDN controller.\n\
    Case 3: We launched a DDoS attack against the Blockchain network, by turning off\
    \ the\nDDoS mitigation programme in the SDN controller.\nDuring the simulation,\
    \ we noticed two crucial metrics in each case:\n•\nThe number of network packets\
    \ received by the Blockchain per minute.\n•\nThe number of transactions published\
    \ in the Blockchain network.\nThe results are shown in Figures 7 and 8, respectively.\
    \ Taking the case 1 ﬁndings as\nideal, with 120 published transactions in 10 min\
    \ at an average of 100 Kbps; the third scenario\nrevealed a really dismal performance\
    \ with about 45 published transactions, representing a\nloss of more than 60%\
    \ compared to the 1st case, and an unreliable Blockchain network. To\nunderstand\
    \ the outcomes of the second scenario, we must ﬁrst recognize what took place\
    \ in\nthe network during the test. The Open vSwitch sends all network trafﬁc data\
    \ to the sFlow\nforecast system, a real-time reporting system that gives real-time\
    \ notice of network assaults,\ninvolving attackers and target information, to\
    \ the SDN controller security framework via\ncommands. The SDN controller interacts\
    \ with the switch to discard DDoS trafﬁc while\nallowing valid trafﬁc to continue\
    \ through. The attack is stopped fast enough to prevent it\nfrom rapidly growing\
    \ and resulting in 95 blocks published, which is approximately 40%\nmore than\
    \ the 3rd case.\nProcesses 2023, 11, 757\n21 of 27\nProcesses 2023, 11, x FOR\
    \ PEER REVIEW \n23 of 30 \n \n \n \nFigure 7. Number of packets received by Blockchain\
    \ per minute. \n \n \nFigure 7. Number of packets received by Blockchain per minute.\n\
    Processes 2023, 11, x FOR PEER REVIEW \n24 of 30 \n \n \n \nFigure 8. Number of\
    \ transactions published in Blockchain per minute. \n8. Smart Agriculture 5.0\
    \ \nWith 100 times faster upload and download speeds than “fourth generation of\
    \ mobile \ntechnology (4G)” and “fourth-generation long-term evolution (4GLTE)”\
    \ technologies and \nlatencies as low as 1 ms, the “5th generation mobile network\
    \ (5G)” is a new technology \nfor wireless that can connect a million gadgets\
    \ per square kilometer. In order to exchange \ndata effectively, the millions\
    \ of smart gadgets that make up the precision agricultural net-\nworks must be\
    \ connected to one another over a given piece of land. \nTherefore, the Agriculture\
    \ 4.0 scenario is particularly well adapted to 5G technology \n[112–114]. A framework\
    \ for the digitization of agriculture networks and function modules \nfor an intelligent\
    \ irrigation system was provided by Meng and Cheng [115]. Tao and \nDonglin [116]\
    \ also investigated how 5G technology may be used for agricultural planting,\n\
    Figure 8. Number of transactions published in Blockchain per minute.\n8. Smart\
    \ Agriculture 5.0\nWith 100 times faster upload and download speeds than “fourth\
    \ generation of mobile\ntechnology (4G)” and “fourth-generation long-term evolution\
    \ (4GLTE)” technologies and\nlatencies as low as 1 ms, the “5th generation mobile\
    \ network (5G)” is a new technology for\nwireless that can connect a million gadgets\
    \ per square kilometer. In order to exchange data\neffectively, the millions of\
    \ smart gadgets that make up the precision agricultural networks\nmust be connected\
    \ to one another over a given piece of land.\nProcesses 2023, 11, 757\n22 of 27\n\
    Therefore, the Agriculture 4.0 scenario is particularly well adapted to 5G technol-\n\
    ogy [112–114]. A framework for the digitization of agriculture networks and function\n\
    modules for an intelligent irrigation system was provided by Meng and Cheng [115].\
    \ Tao\nand Donglin [116] also investigated how 5G technology may be used for agricultural\n\
    planting, livestock farming, and traditional farming growth [117–121].\n9. Conclusions\n\
    Modernization of agricultural methods is required to increase productivity levels\n\
    while conserving nature. Precision agriculture could improve farming works by\
    \ controlling\nactuators more efﬁciently, enhancing the use of resources, increasing\
    \ revenues, and mini-\nmizing expenses. In order to accomplish this objective,\
    \ IoT technologies have to incorporate\nmore computing performance, such as edge\
    \ computing, big data handling, automated\nresources, and safety features. As\
    \ limited devices sense a huge amount of data and forward\nit to the gateway or\
    \ the cloud, security requires special attention. The data must be secured\nthroughout\
    \ the agricultural system, from diagnosis to risks and inventory.\nEven though\
    \ numerous security issues may affect farming production, they still\ninclude\
    \ a few security measures. This could be because these technologies were in their\n\
    initial phases of development. For most of the points, only computing resources\
    \ are\nincorporated, and that has limited computation power. As a result, security\
    \ mechanisms\nare very rare in the current list of requirement speciﬁcations.\
    \ Reaching a higher level\nof agricultural development, on the other hand, necessitates\
    \ technologies with security\nfeatures that provide enough quality and validity\
    \ to incorporate these technologies on a\nhigh level. As precision agriculture\
    \ introduces new complexities, it also opens up new\nfuture directions in security\
    \ and other areas.\nIn this study, we suggested a security framework for the agricultural\
    \ internet of things\nthat integrates blockchain technology, fog computing, and\
    \ software-deﬁned networking.\nThe suggested architecture avoids the requirement\
    \ for simulation-based work with both\nprivate and public blockchain for communication\
    \ between SDN controllers and IoT devices.\nHere, for IoT connectivity, each SDN\
    \ controller is linked to a blockchain. SDN controllers\nare interconnected by\
    \ a network’s topology. One of the key objectives of the proposed\narchitecture\
    \ is to enhance communication security for IoT devices. For IoT devices with\n\
    limited resources, distributed trust-based veriﬁcation makes blockchain even more\
    \ use-\nful. With a focus on ﬁxing security and data reliability issues in a distributed\
    \ controller\ncontext. Additionally, we want to increase the accuracy of our system\
    \ using machine\nlearning methods.\nIt might be signiﬁcant to add an intrusion\
    \ detection system utilizing various deep\nlearning algorithms in future work\
    \ to prevent the insertion of fake Sensor data in the\nintelligent agricultural\
    \ ﬁeld.\nAuthor Contributions: Conceptualization, S.P., S.D. and S.R.; methodology,\
    \ S.P., M.A. (Majed\nAlowaidi), S.D. and P.P.M.; software, S.P., S.R., M.A. (Majed\
    \ Alowaidi), P.P.M. and H.A.; valida-\ntion, M.A. (Mohamed Alshehri), S.R. and\
    \ H.A.; formal analysis, S.P., S.D., M.A. (Mohamed Alshehri)\nand P.P.M.; writing—original\
    \ draft preparation, S.P., S.D. and P.P.M.; writing—review and editing,\nM.A.\
    \ (Mohamed Alshehri), S.R. and H.A. All authors have read and agreed to the published\
    \ version\nof the manuscript.\nFunding: The author would like to thank Deanship\
    \ of Scientiﬁc Research at Majmaah University for\nsupporting this work under\
    \ Project Number No. R-2023-67.\nInstitutional Review Board Statement: Not applicable.\n\
    Informed Consent Statement: Not applicable.\nData Availability Statement: Research\
    \ data are not shared.\nConﬂicts of Interest: The authors declare that they have\
    \ no conﬂict of interest.\nProcesses 2023, 11, 757\n23 of 27\nReferences\n1.\n\
    Vangala, A.; Sutrala, A.K.; Das, A.K.; Jo, M. Smart Contract-Based Blockchain-Envisioned\
    \ Authentication Scheme for Smart\nFarming. IEEE Internet Things J. 2021, 8, 10792–10806.\
    \ [CrossRef]\n2.\nAbbasi, R.; Martinez, P.; Ahmad, R. The digitization of agricultural\
    \ industry–a systematic literature review on agriculture 4.0.\nSmart Agric. Technol.\
    \ 2022, 2, 100042. [CrossRef]\n3.\nAkinwumi, S.A.; Ezenwosu, A.C.; Omotosho, T.V.;\
    \ Adewoyin, O.O.; Adagunodo, T.A.; Oyeyemi, K.D. Arduino Based Security\nSystem\
    \ using Passive Infrared (PIR) Motion Sensor. In IOP Conference Series: Earth\
    \ and Environmental Science; IOP Publishing:\nBristol, UK, 2021; Volume 655, p.\
    \ 012039.\n4.\nAlbiero, D.; Paulo, R.L.D.; Félix Junior, J.C.; Santos, J.D.S.G.;\
    \ Melo, R.P. Agriculture 4.0: A terminological introduction. Rev. Ciência\nAgronômica\
    \ 2021, 51, e20207737. [CrossRef]\n5.\nAltalak, M.; Ammad uddin, M.; Alajmi, A.;\
    \ Rizg, A. Smart Agriculture Applications Using Deep Learning Technologies: A\
    \ Survey.\nAppl. Sci. 2022, 12, 5919. [CrossRef]\n6.\nAndrade, R.; Ontaneda, N.;\
    \ Silva, A.; TelloOquendo, L.; Cadena, S.; Quiroz, D.; Fuertes, W.; Nacional,\
    \ E. Application of Big Data\nAnalytic in Cybersecurity. In Proceedings of the\
    \ 2019 International Conference on Applied Cognitive Computing, Las Vegas, NV,\n\
    USA, 29 July–1 August 2020. [CrossRef]\n7.\nCatalano, C.; Paiano, L.; Calabrese,\
    \ F.; Cataldo, M.; Mancarella, L.; Tommasi, F. Anomaly detection in smart agriculture\
    \ systems.\nComput. Ind. 2022, 143, 103750. [CrossRef]\n8.\nDash, S.; Panda, R.;\
    \ Padhy, S. Blockchain-based intelligent medical IoT healthcare system. SPAST\
    \ Abstr. 2021, 1, 2190. Available\nonline: https://spast.org/techrep/article/view/2190\
    \ (accessed on 22 April 2022).\n9.\nFerrag, M.A.; Shu, L.; Djallel, H.; Choo,\
    \ K.K.R. Deep learning-based intrusion detection for distributed denial of service\
    \ attack in\nAgriculture 4.0. Electronics 2021, 10, 1257. [CrossRef]\n10.\nBoghossian,\
    \ A.; Linsky, S.; Brown, A.; Mutschler, P.; Ulicny, B.; Barrett, L. Threats to\
    \ Precision Agriculture; Technical Report; US\nDepartment of Homeland Security:\
    \ Washington, DC, USA, 2018; p. 20181003a. [CrossRef]\n11.\nShu, L.; Hancke, G.P.;\
    \ Abu-Mahfouz, A.M. Guest Editorial: Sustainable and Intelligent Precision Agriculture.\
    \ IEEE Trans. Ind.\nInform. 2021, 17, 4318–4321. [CrossRef]\n12.\nJavaid, M.;\
    \ Haleem, A.; Singh, R.P.; Suman, R. Enhancing smart farming through the applications\
    \ of Agriculture 4.0 technologies.\nInt. J. Intell. Netw. 2022, 3, 150–164. [CrossRef]\n\
    13.\nGzar, D.A.; Mahmood, A.M.; Al-Adilee, M.K.A. Recent trends of smart agricultural\
    \ systems based on Internet of Things\ntechnology: A survey. Comput. Electr. Eng.\
    \ 2022, 104, 108453. [CrossRef]\n14.\nCharatsari, C.; Lioutas, E.D.; Papadaki-Klavdianou,\
    \ A.; Michailidis, A.; Partalidou, M. Farm advisors amid the transition to\nAgriculture\
    \ 4.0: Professional identity, conceptions of the future and future-speciﬁc competencies.\
    \ Sociol. Rural. 2022, 62, 335–362.\n[CrossRef]\n15.\nSingh, K.J.; De, T. Mathematical\
    \ modelling of DDoS attack and detection using correlation. J. Cyber Secur. Technol.\
    \ 2017, 1, 175–186.\n[CrossRef]\n16.\nRaj, M.; Gupta, S.; Chamola, V.; Elhence,\
    \ A.; Garg, T.; Atiquzzaman, M.; Niyato, D. A survey on the role of Internet of\
    \ Things for\nadopting and promoting Agriculture 4.0. J. Netw. Comput. Appl. 2021,\
    \ 187, 103107. [CrossRef]\n17.\nBenavides, E.; Fuertes, W.; Sanchez, S.; Sanchez,\
    \ M. Classiﬁcation of phishing attack solutions by employing deep learning\ntechniques:\
    \ A systematic literature review. Dev. Adv. Def. Secur. 2020, 152, 51–64. [CrossRef]\n\
    18.\nSingh, R.K.; Berkvens, R.; Weyn, M. AgriFusion: An Architecture for IoT and\
    \ Emerging Technologies Based on a Precision\nAgriculture Survey. IEEE Access\
    \ 2021, 9, 136253–136283. [CrossRef]\n19.\nBernhardt, H.; Bozkurt, M.; Brunsch,\
    \ R.; Colangelo, E.; Herrmann, A.; Horstmann, J.; Kraft, M.; Marquering, J.; Steckel,\
    \ T.; Tapken,\nH.; et al. Challenges for Agriculture through Industry 4.0. Agronomy\
    \ 2021, 11, 1935. [CrossRef]\n20.\nBolfe, E.L.; Jorge, L.A.C.; Sanches, I.D.;\
    \ Júnior, A.L.; Costa, C.C.D.; Victoria, D.C.; Inamasu, R.Y.; Grego, C.R.; Ferreira,\
    \ V.R.;\nRamirez, A.R. Precision and digital agriculture: Adoption of technologies\
    \ and perception of Brazilian farmers. Agriculture 2021,\n10, 653. [CrossRef]\n\
    21.\nChae, C.-J.; Cho, H.-J. Enhanced secure device authentication algorithm in\
    \ P2P-based smart farm system. Peer-Peer Netw. Appl.\n2018, 11, 1230–1239. [CrossRef]\n\
    22.\nKhalid, H.; Ikram, U.D.; Ahmad, A.; Naveed, I. An energy efﬁcient and secure\
    \ IoT-based wsn framework: An application to\nsmart agriculture. Sensors 2020,\
    \ 20, 2081. [CrossRef]\n23.\nHassija, V.; Chamola, V.; Saxena, V.; Jain, D.; Goyal,\
    \ P.; Sikdar, B. A survey on IoT security: Application areas, security threats,\
    \ and\nsolution architectures. IEEE Access 2019, 7, 82721–82743. [CrossRef]\n\
    24.\nInfosys Precision Crop Management Testbed. 2021. Available online: https://www.infosys.com/industries/agriculture/industry-\n\
    offerings/precision-farming.html (accessed on 17 May 2022).\n25.\nWest, J. A prediction\
    \ model framework for cyber-attacks to precision agriculture technologies. J.\
    \ Agric. Food Inf. 2018, 19, 307–330.\n[CrossRef]\n26.\nJha, S.; Routray, S.;\
    \ Ahmad, S. An expert system-based IoT system for minimisation of air pollution\
    \ in developing countries. Int. J.\nComput. Appl. Technol. 2022, 68, 277–285.\
    \ [CrossRef]\nProcesses 2023, 11, 757\n24 of 27\n27.\nRao, R.N.; Sridhar, B. IoT\
    \ Based Smart Crop-Field Monitoring and Automation Irrigation System. In Proceedings\
    \ of the 2018 2nd\nInternational Conference on Inventive Systems and Control (ICISC),\
    \ Coimbatore, India, 19–20 January 2018; IEEE: Toulouse,\nFrance, 2018; pp. 478–483.\
    \ [CrossRef]\n28.\nLi, T.; Li, D. Prospects for the application of 5g technology\
    \ in agriculture and rural areas. In Proceedings of the 2020 5th\nInternational\
    \ Conference on Mechanical, Control and Computer Engineering (ICMCCE), Harbin,\
    \ China, 25–27 December 2020;\npp. 2176–2179. [CrossRef]\n29.\nMuragijimana, E.;\
    \ Shankar, T.N.; Kumar, N.; Sah, B.; Padhy, S. Digital Crimes in Cloud Environment\
    \ and the Analysis via\nBlockchain. In Proceedings of the 2022 IEEE 3rd Global\
    \ Conference for Advancement in Technology (GCAT), Bangalore, India,\n7–9 October\
    \ 2022; pp. 1–6. [CrossRef]\n30.\nLioutas, E.D.; Charatsari, C. Innovating digitally:\
    \ The new texture of practices in agriculture 4.0. Sociol. Rural. 2022, 62, 250–278.\n\
    [CrossRef]\n31.\nLorencowicz, E.; Uziak, J. Selected Problems on Data Used in\
    \ Precision Agriculture. In International Symposium on Farm Machinery\nand Processes\
    \ Management in Sustainable Agriculture; Springer: Cham, Switzerland, 2023; pp.\
    \ 217–226.\n32.\nFerrag, M.A.; Shu, L.; Yang, X.; Derhab, A.; Maglaras, L. Security\
    \ and privacy for green IoT-based agriculture: Review, blockchain\nsolutions,\
    \ and challenges. IEEE Access 2020, 8, 32031–32053. [CrossRef]\n33.\nGupta, M.;\
    \ Abdelsalam, M.; Khorsandroo, S.; Mittal, S. Security and Privacy in Smart Farming:\
    \ Challenges and Opportunities.\nIEEE Access 2020, 8, 34564–34584. [CrossRef]\n\
    34.\nShankar, T.N.; Padhy, S.; Ch, S.M.; Ravella, H.; Varun, M.; Kumar, N. Development\
    \ of 6G web by Multilayer Perceptron in C-RAN\nfor VANETs. In Proceedings of the\
    \ IEEE Global Conference on Computing, Power and Communication Technologies, GlobConPT,\n\
    New Delhi, India, 23–25 September 2022. [CrossRef]\n35.\nGaneshkumar, C.; David,\
    \ A. Digital Information Management in Agriculture—Empirical Analysis. In Proceedings\
    \ of the Third\nInternational Conference on Information Management and Machine\
    \ Intelligence, Rajasthan, India, 23–24 December 2021; Springer:\nSingapore, 2023;\
    \ pp. 243–249.\n36.\nGarcía, L.; Parra, L.; Jimenez, J.M.; Lloret, J.; Lorenz,\
    \ P. IoT-based smart irrigation systems: An overview on the recent trends on\n\
    sensors and IoT systems for irrigation in precision agriculture. Sensors 2020,\
    \ 20, 1042. [CrossRef] [PubMed]\n37.\nSrivastava, J.; Routray, S.; Ahmad, S.;\
    \ Waris, M.M. Internet of Medical Things (IoMT)-based smart healthcare system:\
    \ Trends and\nprogress. Comput. Intell. Neurosci. 2022. [CrossRef]\n38.\nSrivastava,\
    \ J.; Routray, S. AI Enabled Internet of Medical Things Framework for Smart Healthcare.\
    \ In Proceedings of the\nInnovations in Intelligent Computing and Communication:\
    \ First International Conference, ICIICC 2022, Bhubaneswar, Odisha,\nIndia, 16–17\
    \ December 2022; Springer International Publishing: Cham, Switzerland, 2023; pp.\
    \ 30–46.\n39.\nRajasoundaran, S.; Prabu, A.V.; Routray, S.; Kumar, S.S.; Malla,\
    \ P.P.; Maloji, S.; Mukherjee, A.; Ghosh, U. Machine learning based\ndeep job\
    \ exploration and secure transactions in virtual private cloud systems. Comput.\
    \ Secur. 2021, 109, 102379. [CrossRef]\n40.\nDash, S.; Padhy, S.; Azad, S.M.A.K.;\
    \ Nayak, M. Intelligent IoT-Based Healthcare System Using Blockchain. Ambient\
    \ Intelligence in\nHealth Care. Smart Innovation, Systems and Technologies; Springer:\
    \ Singapore, 2023; Volume 317. [CrossRef]\n41.\nMaffezzoli, F.; Ardolino, M.;\
    \ Bacchetti, A.; Perona, M.; Renga, F. Agriculture 4.0: A systematic literature\
    \ review on the paradigm,\ntechnologies and beneﬁts. Futures 2022, 142, 102998.\
    \ [CrossRef]\n42.\nMahadik, S.; Pawar, P.M.; Muthalagu, R. Efﬁcient Intelligent\
    \ Intrusion Detection System for Heterogeneous Internet of Things\n(HetIoT). J.\
    \ Netw. Syst. Manag. 2022, 31, 2. [CrossRef]\n43.\nMahalakshmi, M.; Priyanka,\
    \ S.; Rajaram, S.P.; Rajapriya, R. Distant Monitoring and Controlling of Solar\
    \ Driven Irrigation System\nthrough IoT. In Proceedings of the 2018 National Power\
    \ Engineering Conference (NPEC), Madurai, India, 9–10 March 2018; IEEE:\nToulouse,\
    \ France, 2018; pp. 1–5. [CrossRef]\n44.\nManesh, M.R.; Kenney, J.; Hu, W.C.;\
    \ Devabhaktuni, V.K.; Kaabouch, N. Detection of GPS spooﬁng attacks on unmanned\
    \ aerial\nsystems. In Proceedings of the 2019 16th IEEE Annual Consumer Communications\
    \ & Networking Conference (CCNC), Las\nVegas, NV, USA, 11–14 January 2019; IEEE:\
    \ Toulouse, France, 2019; pp. 1–6. [CrossRef]\n45.\nManjunath, M.; Venkatesha,\
    \ G.; Dinesh, S. Raspberry Pi Based Anti-Theft Security System using Home Automation\
    \ for Multi-Level\nAuthentication. Perspect. Commun. Embed.-Syst. Signal-Process.-PiCES\
    \ 2021, 4, 249–253.\n46.\nRoutray, S.; Ray, A.K.; Mishra, C.; Palai, G. Efﬁcient\
    \ hybrid image denoising scheme based on SVM classiﬁcation. Optik 2018, 157,\n\
    503–511. [CrossRef]\n47.\nMcCaig, M.; Rezania, D.; Dara, R. Framing the response\
    \ to IoT in agriculture: A discourse analysis. Agric. Syst. 2023, 204, 103557.\n\
    [CrossRef]\n48.\nQureshi, T.; Saeed, M.; Ahsan, K.; Malik, A.A.; Muhammad, E.S.;\
    \ Touheed, N. Smart Agriculture for Sustainable Food Security\nUsing Internet\
    \ of Things (IoT). Wirel. Commun. Mob. Comput. 2022, 2022, 9608394. [CrossRef]\n\
    49.\nRajasoundaran, S.; Prabu, A.; Routray, S.; Malla, P.P.; Kumar, G.S.; Mukherjee,\
    \ A.; Qi, Y. Secure routing with multi-watchdog\nconstruction using deep particle\
    \ convolutional model for IoT based 5G wireless sensor networks. Comput. Commun.\
    \ 2022, 187,\n71–82. [CrossRef]\n50.\nRoy, S.K.; De, D. Genetic Algorithm based\
    \ Internet of Precision Agricultural Things (IopaT) for Agriculture 4.0. Internet\
    \ Things\n2022, 18, 100201. [CrossRef]\nProcesses 2023, 11, 757\n25 of 27\n51.\n\
    Martinho, V.J.P.D.; Cunha, C.A.D.S.; Pato, M.L.; Costa, P.J.L.; Sánchez-Carreira,\
    \ M.C.; Georgantzís, N.; Rodrigues, R.N.; Coronado,\nF. Machine Learning and Food\
    \ Security: Insights for Agricultural Spatial Planning in the Context of Agriculture\
    \ 4.0. Appl. Sci.\n2022, 12, 11828. [CrossRef]\n52.\nMourato, J.; Ferreira, L.P.;\
    \ Sá, J.C.; Silva, F.J.; Dieguez, T.; Tjahjono, B. Improving internal logistics\
    \ of a bus manufacturing using\nthe lean techniques. Int. J. Prod. Perform. Manag.\
    \ 2020, 70, 1930–1951. [CrossRef]\n53.\nGuarda, T.; Augusto, M.F.; Lopes, I. The\
    \ Art of Phishing. In Proceedings of the International Conference on Information\n\
    Technology & Systems, Cairo, Egypt, 24–26 March 2019; Springer: Cham, Switzerland,\
    \ 2019; pp. 683–690. [CrossRef]\n54.\nColezea, M.; Musat, G.; Pop, F.; Negru,\
    \ C.; Dumitrascu, A.; Mocanu, M. CLUeFARM: Integrated web-service platform for\
    \ smart\nfarms. Comput. Electron. Agric. 2018, 154, 134–154. [CrossRef]\n55.\n\
    Sarma, R.; Barbhuiya, F.A. Internet of Things: Attacks and Defences. In Proceedings\
    \ of the 2019 7th International Conference\non Smart Computing & Communications\
    \ (ICSCC), Sarawak, Malaysia, 28–30 June 2019; IEEE: Toulouse, France, 2019; pp.\
    \ 1–5.\n[CrossRef]\n56.\nDe Souza, T.T.A.; de Oliveira, C.C.; Abe, J.M.; Aharari,\
    \ A.; Nakamatsu, K. Paraconsistent Artiﬁcial Neural Network Applied to\nAgribusiness.\
    \ Smart Innov. Syst. Technol. 2021, 183, 19–28. [CrossRef]\n57.\nDemestichas,\
    \ K.; Peppes, N.; Alexakis, T. Survey on security threats in agricultural IoT\
    \ and smart farming. Sensors 2020, 20, 6458.\n[CrossRef] [PubMed]\n58.\nKumar,\
    \ L.S.; Ahmad, S.; Routray, S.; Prabu, A.V.; Alharbi, A.; Aloufﬁ, B.; Rajasoundaran,\
    \ S. Modern Energy Optimization\nApproach for Efﬁcient Data Communication in IoT-Based\
    \ Wireless Sensor Networks. Wirel. Commun. Mob. Comput. 2022, 2022,\n7901587.\
    \ [CrossRef]\n59.\nScuderi, A.; Foti, V.T.; Timpanaro, G. The supply chain value\
    \ of pod and pgi food products through the application of blockchain.\nQual. Access\
    \ Success 2019, 20, 580–587.\n60.\nDey, D.; Sizan, N.S.; Mia, M. GreenFarm: An\
    \ IoT-Based Sustainable Agriculture with Automated Lighting System. In Proceedings\n\
    of the International Conference on Innovative Computing and Communications, Delhi,\
    \ India, 17–18 February 2023; Springer:\nSingapore, 2023; pp. 517–528.\n61.\n\
    Di Modica, G.; Gulino, S.; Tomarchio, O. IoT fault management in cloud/fog environments.\
    \ In Proceedings of the 9th International\nConference on the Internet of Things,\
    \ Bilbao, Spain, 18 September 2019; pp. 1–4. [CrossRef]\n62.\nDibirov, A. Approaches\
    \ to Modeling the Machine and Tractor Fleet of an Agricultural Organization in\
    \ the Conditions of\nDigitalization. In Agriculture Digitalization and Organic\
    \ Production; Springer: Singapore, 2023; pp. 339–350.\n63.\nFood and Agriculture\
    \ Organization of the United Nations—FAO. Strengthened Global Partnerships Are\
    \ Needed to End\nHunger and Malnutrition. 2019. Available online: http://www.fao.org/news/story/en/item/1194310/icode/\
    \ (accessed\non 20 August 2022).\n64.\nFood and Agriculture Organization. The\
    \ State of Agricultural Commodity Markets 2020. In Agricultural Markets and Sustainable\n\
    Development: Global Value Chains, Smallholder Farmers and Digital Innovations;\
    \ Food and Agriculture Organization: Rome, Italy,\n2020.\n65.\nPaul, K.; Chatterjee,\
    \ S.S.; Pai, P.; Varshney, A.; Juikar, S.; Prasad, V.; Bhadra, B.; Dasgupta, S.\
    \ Viable smart sensors and their\napplication in data driven agriculture. Comput.\
    \ Electron. Agric. 2022, 198, 107096. [CrossRef]\n66.\nKlerkx, L.; Begemann, S.\
    \ Supporting food systems transformation: The what, why, who, where and how of\
    \ mission-oriented\nagricultural innovation systems. Agric. Syst. 2021, 184, 102901.\
    \ [CrossRef]\n67.\nKrishnan, K.S.; Jerusha, K.; Tanwar, P.; Singhal, S. Self-automated\
    \ agriculture system using IoT. Int. J. Recent Technol. Eng. 2020, 8,\n758–762.\
    \ [CrossRef]\n68.\nKumar, N.; Sharma, B.; Narang, S. Emerging Communication Technologies\
    \ for Industrial Internet of Things: Industry 5.0\nPerspective. In Proceedings\
    \ of the Third International Conference on Computing, Communications, and Cyber-Security,\n\
    Ghaziabad, India, 30–31 October 2023; Springer: Singapore, 2022; pp. 107–122.\n\
    69.\nMaini, E.; De Rosa, M.; Vecchio, Y. The Role of Education in the Transition\
    \ towards Sustainable Agriculture: A Family Farm\nLearning Perspective. Sustainability\
    \ 2021, 13, 8099. [CrossRef]\n70.\nMajumdar, P.; Mitra, S.; Bhattacharya, D. IoT\
    \ for Promoting Agriculture 4.0: A Review from the Perspective of Weather Monitoring,\n\
    Yield Prediction, Security of WSN Protocols, and Hardware Cost Analysis. J. Biosyst.\
    \ Eng. 2021, 46, 440–461. [CrossRef]\n71.\nMeng, H.; Cheng, Y. Research on key\
    \ technologies of intelligent agriculture under 5G environment. J. Physics Conf.\
    \ Ser. 2019, 1345,\n042057. [CrossRef]\n72.\nMentsiev, A.U.; Magomaev, T.R. Security\
    \ threats of NB-IoT and countermeasures. IOP Conf. Ser. Mater. Sci. Eng. 2020,\
    \ 862, 052033.\n[CrossRef]\n73.\nMahbub, M. A smart farming concept based on smart\
    \ embedded electronics, internet of things and wireless sensor network.\nInternet\
    \ Things 2020, 9, 100161. [CrossRef]\n74.\nMode, G.R.; Calyam, P.; Hoque, K.A.\
    \ False data injection attacks in internet of things and deep learning enabled\
    \ predictive\nanalytics. arXiv 2019, arXiv:1910.01716.\n75.\nPadhy, S.; Dash,\
    \ S.; Routray, S.; Ahmad, S.; Nazeer, J.; Alam, A. IoT-Based Hybrid Ensemble Machine\
    \ Learning Model for Efﬁcient\nDiabetes Mellitus Prediction. Comput. Intell. Neurosci.\
    \ 2022, 2022, 2389636. [CrossRef] [PubMed]\n76.\nPogorelskaia, I.; Várallyai,\
    \ L. Agriculture 4.0 and the role of education. J. Agric. Inf. 2020, 11, 45–51.\
    \ [CrossRef]\nProcesses 2023, 11, 757\n26 of 27\n77.\nAnand, S.; Sharma, A. AgroKy:\
    \ An approach for enhancing security services in precision agriculture. Meas.\
    \ Sens. 2022, 24, 100449.\n[CrossRef]\n78.\nSantos, L.; Rabadao, C.; Goncalves,\
    \ R. Intrusion detection systems in Internet of Things: A literature review. In\
    \ Proceedings of\nthe 13th Iberian Conference on Information Systems and Technologies\
    \ (CISTI), Caceres, Spain, 13–16 June 2018; IEEE: Toulouse,\nFrance, 2018; pp.\
    \ 1–7. [CrossRef]\n79.\nShankar, T.N.; Padhy, S.; Dash, S.; Teja, M.B.; Yashwant,\
    \ S. Induction of Secure Data Repository in Blockchain over IPFS. In\nProceedings\
    \ of the 2022 6th International Conference on Trends in Electronics and Informatics\
    \ (ICOEI), Tirunelveli, India, 28–30\nApril 2022; IEEE: Toulouse, France, 2022;\
    \ pp. 738–743. [CrossRef]\n80.\nShurman, M.M.; Khrais, R.M.; Yateem, A.A. IoT\
    \ Denial-of-Service Attack Detection and Prevention Using Hybrid IDS. In\nProceedings\
    \ of the 2019 International Arab Conference on Information Technology (ACIT),\
    \ Al Ain, United Arab Emirates, 3–5\nDecember 2019; IEEE: Toulouse, France, 2019;\
    \ pp. 252–254. [CrossRef]\n81.\nTamala, J.K.; Maramag, E.I.; Simeon, K.A.; Ignacio,\
    \ J.J. A bibliometric analysis of sustainable oil and gas production research\n\
    using VOSviewer. Clean. Eng. Technol. 2022, 7, 100437. [CrossRef]\n82.\nTang,\
    \ Y.; Dananjayan, S.; Hou, C.; Guo, Q.; Luo, S.; He, Y. A survey on the 5G network\
    \ and its impact on agriculture: Challenges\nand opportunities. Comput. Electron.\
    \ Agric. 2020, 180, 105895. [CrossRef]\n83.\nTanwar, R.; Chhabra, Y.; Rattan,\
    \ P.; Rani, S. Blockchain in IoT Networks for Precision Agriculture. In International\
    \ Conference on\nInnovative Computing and Communications; Springer: Singapore,\
    \ 2023; pp. 137–147.\n84.\nMukherjee, S.; Baral, M.M.; Chittipaka, V.; Srivastava,\
    \ S.C.; Pal, S.K. Discussing the impact of industry 4.0 in agriculture supply\n\
    chain. In Recent Advances in Smart Manufacturing and Materials; Springer: Singapore,\
    \ 2021; pp. 301–307.\n85.\nO’Grady, M.; Langton, D.; Salinari, F.; Daly, P.; O’Hare,\
    \ G. Service Design for Climate-Smart Agriculture. Inf. Process. Agric. 2021,\n\
    8, 328–340. [CrossRef]\n86.\nOliver, S.T.; González-Pérez, A.; Guijarro, J.H.\
    \ An IoT proposal for monitoring vineyards called SEnviro for agriculture. In\n\
    Proceedings of the 8th International Conference on the Internet of Things, Santa\
    \ Barbara, CA, USA, 15–18 October 2018; pp. 1–4.\n[CrossRef]\n87.\nPadhy, S.;\
    \ Dash, S.; Malla, P.P.; Routray, S.; Qi, Y. An Energy Efﬁcient Node Localization\
    \ Algorithm for Wireless Sensor Network.\nIn Proceedings of the 2021 IEEE 2nd\
    \ International Conference on Applied Electromagnetics, Signal Processing, & Communication\n\
    (AESPC), Bhubaneswar, India, 26–28 November 2021; IEEE: Toulouse, France, 2021;\
    \ pp. 1–5. [CrossRef]\n88.\nSingh, G.; Yogi, K.K. Internet of Things-Based Devices/Robots\
    \ in Agriculture 4.0. In Sustainable Communication Networks and\nApplication;\
    \ Springer: Singapore, 2022; pp. 87–102.\n89.\nSmart Farming with IoT and Cloud\
    \ in Malaysia. 2021. Available online: https://techwireasia.com/2021/08/smart-farming-with-\n\
    iot-and-cloud-inmalaysia/ (accessed on 11 July 2022).\n90.\nSobb, T.; Turnbull,\
    \ B.; Moustafa, N. Supply Chain 4.0: A Survey of Cyber Security Challenges, Solutions\
    \ and Future Directions.\nElectronics 2020, 9, 1864. [CrossRef]\n91.\nSoukup,\
    \ V. Industry 4.0: From Smart Factories to Artiﬁcial Intelligence. In Industry\
    \ 4.0 Challenges in Smart Cities; Springer: Cham,\nSwitzerland, 2023; pp. 95–105.\n\
    92.\nSturiale, L.; Scuderi, A.; Timpanaro, G.; Matarazzo, B. Sustainable Use and\
    \ Conservation of the Environmental Resources of the\nEtna Park (UNESCO Heritage):\
    \ Evaluation Model Supporting Sustainable Local Development Strategies. Sustainability\
    \ 2020, 12,\n1453. [CrossRef]\n93.\nMalche, T.; Maheshwary, P.; Kumar, R. Environmental\
    \ Monitoring System for Smart City Based on Secure Internet of Things (IoT)\n\
    Architecture. Wirel. Pers. Commun. 2019, 107, 2143–2172. [CrossRef]\n94.\nPrabu,\
    \ A.V.; Kumar, G.S.; Rajasoundaran, S.; Malla, P.P.; Routray, S.; Mukherjee, A.\
    \ Internet of things-based deeply proﬁcient\nmonitoring and protection system\
    \ for crop ﬁeld. Expert Syst. 2022, 39, e12876. [CrossRef]\n95.\nPranitha, G.;\
    \ Rukmini, T.; Shankar, T.N.; Sah, B.; Kumar, N.; Padhy, S. Utilization of Blockchain\
    \ in E-Voting System. In Proceedings\nof the 2022 2nd International Conference\
    \ on Intelligent Technologies (CONIT), Kartakata, India, 24–26 June 2022; IEEE:\
    \ Toulouse,\nFrance, 2022; pp. 1–5. [CrossRef]\n96.\nPrasad, S.; Samimalai, A.;\
    \ Rani, S.R.; Kumar, B.P.P.; Hegde, N.; Banu, S. Information Security and Privacy\
    \ in Smart Cities, Smart\nAgriculture, Industry 4.0, Smart Medicine, and Smart\
    \ Healthcare. In IoT Based Control Networks and Intelligent Systems. Lecture\n\
    Notes in Networks and SystemsJoby; Joby, P.P., Balas Valentina, E., Palanisamy,\
    \ R., Eds.; Springer: Singapore, 2022; Volume 528.\n[CrossRef]\n97.\nPundir, S.;\
    \ Wazid, M.; Singh, D.P.; Das, A.K.; Rodrigues, J.J.P.C.; Park, Y. Designing Efﬁcient\
    \ Sinkhole Attack Detection Mechanism\nin Edge-Based IoT Deployment. Sensors 2020,\
    \ 20, 1300. [CrossRef] [PubMed]\n98.\nLiu, L.; Xu, B.; Zhang, X.; Wu, X. An intrusion\
    \ detection method for internet of things based on suppressed fuzzy clustering.\n\
    EURASIP J. Wirel. Commun. Netw. 2018, 2018, 113. [CrossRef]\n99.\nFarooq, M.S.;\
    \ Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role of IoT in Agriculture\
    \ for the Implementation of\nSmart Farming. IEEE Access 2019, 7, 156237–156271.\
    \ [CrossRef]\n100. Munir, M.S.; Bajwa, I.S.; Cheema, S.M. An intelligent and secure\
    \ smart watering system using fuzzy logic and blockchain. Comput.\nElectr. Eng.\
    \ 2019, 77, 109–119. [CrossRef]\n101. Dash, S.; Padhy, S.; Parija, B.; Rojashree,\
    \ T.; Patro, K.A. A Simple and Fast Medical Image Encryption System Using Chaos-Based\n\
    Shifting Techniques. Int. J. Inf. Secur. Priv. (IJISP) 2022, 16, 1–24. [CrossRef]\n\
    Processes 2023, 11, 757\n27 of 27\n102. Gupta, M.; Sandhu, R. Authorization framework\
    \ for secure cloud assisted connected cars and vehicular internet of things. In\n\
    Proceedings of the 23rd ACM on Symposium on Access Control Models and Technologies,\
    \ Indianapolis, IN, USA, 13–15 June\n2018; pp. 193–204.\n103. Gupta, M.; Benson,\
    \ J.; Patwa, F.; Sandhu, R. Secure V2V and V2I communication in intelligent transportation\
    \ using cloudlets.\nIEEE Trans. Serv. Comput. 2020, 15, 1912–1925. [CrossRef]\n\
    104. Sontowski, S.; Gupta, M.; Chukkapalli, S.S.L.; Abdelsalam, M.; Mittal, S.;\
    \ Joshi, A.; Sandhu, R. Cyber attacks on smart farming\ninfrastructure. In Proceedings\
    \ of the 2020 IEEE 6th International Conference on Collaboration and Internet\
    \ Computing (CIC),\nAtlanta, GA, USA, 1–3 December 2020; pp. 135–143.\n105. Gupta,\
    \ M.; Sandhu, R. Towards activity-centric access control for smart collaborative\
    \ ecosystems. In Proceedings of the 26th\nACM Symposium on Access Control Models\
    \ and Technologies, Virtual, Spain, 16–18 June 2021; pp. 155–164.\n106. Yang,\
    \ X.; Shu, L.; Chen, J.; Ferrag, M.A.; Wu, J.; Nurellari, E.; Huang, K. A Survey\
    \ on Smart Agriculture: Development Modes,\nTechnologies, and Security and Privacy\
    \ Challenges. IEEE/CAA J. Autom. Sin. 2021, 8, 273–302. [CrossRef]\n107. Kreutz,\
    \ D.; Ramos, F.; Verissimo, P.; Rothenberg, C.; Azodolmolky, S.; Uhlig, S. Software-deﬁned\
    \ networking: A comprehensive\nsurvey. Proc. IEEE 2014, 103, 14–76. [CrossRef]\n\
    108. Nunes, B.A.A.; Mendonca, M.; Nguyen, X.-N.; Obraczka, K.; Turletti, T. A\
    \ survey of software-deﬁned networking: Past, present,\nand future of programmable\
    \ networks. IEEE Commun. Surv. Tutor. 2014, 16, 1617–1634. [CrossRef]\n109. Ferrag,\
    \ M.A.; Maglaras, L.; Janicke, H. Blockchain and its role in the internet of things.\
    \ In Strategic Innovative Marketing and\nTourism; Springer: Berlin/Heidelberg,\
    \ Germany, 2019; pp. 1029–1038.\n110. Vasques, A.T.; Gondim, J.J.C. Ampliﬁed reﬂection\
    \ ddos attacks over iot mirrors: A saturation analysis. In Proceedings of the\
    \ 2019\nWorkshop on Communication Networks and Power Systems (WCNPS), Brasília,\
    \ Brazil, 3–4 October 2019; IEEE: Toulouse, France,\n2019; pp. 1–6. [CrossRef]\n\
    111. McKeown, N.; Anderson, T.; Balakrishnan, H.; Parulkar, G.; Peterson, L.;\
    \ Rexford, J.; Shenker, S.; Turner, J. Openﬂow: Enabling\ninnovation in campus\
    \ networks. ACM SIGCOMM Comput. Commun. Rev. 2008, 38, 69–74. [CrossRef]\n112.\
    \ Iqbal, W.; Abbas, H.; Daneshmand, M.; Rauf, B.; Bangash, Y.A. An In-Depth Analysis\
    \ of IoT Security Requirements, Challenges,\nand Their Countermeasures via Software-Deﬁned\
    \ Security. IEEE Internet Things J. 2020, 7, 10250–10276. [CrossRef]\n113. Wei,\
    \ Y.; Jones, P. Emergent urban agricultural practices and attitudes in the residential\
    \ area in China. Urban For. Urban Green.\n2022, 69, 127491. [CrossRef]\n114. Sakthi,\
    \ U.; DafniRose, J. Blockchain-Enabled Smart Agricultural Knowledge Discovery\
    \ System using Edge Computing. Procedia\nComput. Sci. 2022, 202, 73–82. [CrossRef]\n\
    115. Williamson, H.F.; Leonelli, S. Towards Responsible Plant Data Linkage: Data\
    \ Challenges for Agricultural Research and Development;\nSpringer: Berlin/Heidelberg,\
    \ Germany, 2023.\n116. Ragazou, K.; Garefalakis, A.; Zafeiriou, E.; Passas, I.\
    \ Agriculture 5.0: A New Strategic Management Mode for a Cut Cost and an\nEnergy\
    \ Efﬁcient Agriculture Sector. Energies 2022, 15, 3113. [CrossRef]\n117. Contreras-Medina,\
    \ D.I.; Medina-Cuéllar, S.E.; Rodríguez-García, J.M. Roadmapping 5.0 Technologies\
    \ in Agriculture: A Techno-\nlogical Proposal for Developing the Coffee Plant\
    \ Centered on Indigenous Producers’ Requirements from Mexico, Via Knowledge\n\
    Management. Plants 2022, 11, 1502. [CrossRef]\n118. Martini, B.; Helfer, G.; Barbosa,\
    \ J.; Modolo, R.E.; da Silva, M.; de Figueiredo, R.; Mendes, A.; Silva, L.; Leithardt,\
    \ V. IndoorPlant: A\nModel for Intelligent Services in Indoor Agriculture Based\
    \ on Context Histories. Sensors 2021, 21, 1631. [CrossRef]\n119. Martins, J.A.;\
    \ Ochôa, I.S.; Silva, L.A.; Mendes, A.S.; González, G.V.; De Paz Santana, J.;\
    \ Leithardt, V.R.Q. PRIPRO: A Comparison\nof Classiﬁcation Algorithms for Managing\
    \ Receiving Notiﬁcations in Smart Environments. Appl. Sci. 2020, 10, 502. [CrossRef]\n\
    120. Okolie, C.C.; Danso-Abbeam, G.; Groupson-Paul, O.; Ogundeji, A.A. Climate-Smart\
    \ Agriculture Amidst Climate Change to\nEnhance Agricultural Production: A Bibliometric\
    \ Analysis. Land 2023, 12, 50. [CrossRef]\n121. Selbonne, S.; Guindé, L.; Causeret,\
    \ F.; Bajazet, T.; Desfontaines, L.; Duval, M.; Sierra, J.; Solvar, F.; Tournebize,\
    \ R.; Blazy, J.M.\nCo-Design and Experimentation of a Prototype of Agroecological\
    \ Micro-Farm Meeting the Objectives Set by Climate-Smart\nAgriculture. Agriculture\
    \ 2023, 13, 159. [CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions\
    \ and data contained in all publications are solely those of the individual\n\
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or\
    \ the editor(s) disclaim responsibility for any injury to\npeople or property\
    \ resulting from any ideas, methods, instructions or products referred to in the\
    \ content.\n"
  inline_citation: '>'
  journal: Processes
  limitations: The paper does not provide an in-depth analysis of the security implications
    of using MQTT and client-server IoT networks for real-time data transmission in
    agriculture.
  pdf_link: https://www.mdpi.com/2227-9717/11/3/757/pdf?version=1679670706
  publication_year: 2023
  relevance_evaluation:
    address_issue: true
    address_outline: true
    apa_citation: 'Padhy, S.; Alowaidi, M.; Dash, S.; Alshehri, M.; Malla, P.P.; Routray,
      S.; Alhumyani, H. AgriSecure: A Fog Computing-Based Security Framework for Agriculture
      4.0 via Blockchain. Processes 2023, 11, 757. https://doi.org/10.3390/pr11030757'
    highly_relevant: true
    inline_citation: null
    limitations: The paper does not provide an in-depth analysis of the security implications
      of using MQTT and client-server IoT networks for real-time data transmission
      in agriculture.
    relevance_score: 0.7973179558176305
  relevance_score: 0.7973179558176305
  relevance_score1: 0
  relevance_score2: 0
  title: 'AgriSecure: A Fog Computing-Based Security Framework for Agriculture 4.0
    via Blockchain'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.22247/ijcna/2022/215920
  analysis: '>'
  apa_citation: Author, A. A. (Year). Title of paper. Journal Title, Volume(Issue),
    Page Range.
  authors:
  - Carmen Beatriz Espinosa Garrido
  - Sandra Sendra Compte
  - Luis Rosales-Roldan
  - Alejandra Aldrette Malacara
  citation_count: 0
  data_sources: Literature review, Case studies
  explanation: The paper investigates MQTT and client-server architecture as real-time
    data transmission protocols and technologies. MQTT is a popular protocol for IoT
    due to its lightweight, efficient, and publish-subscribe operation mode.
  extract_1: '"The MQTT protocol is a lightweight, publish-subscribe messaging protocol
    that is well-suited for IoT applications. It can be used in a variety of scenarios,
    including sensor data collection, asset tracking, and remote control." (Author,
    Year)'
  extract_2: '"Client-server architecture is a widely used network architecture in
    which a server hosts the application and a client interacts with the server to
    access the application''s functionality. In the context of IoT, a client-server
    architecture can be used to connect sensors and other devices to a central server
    that collects and processes data." (Author, Year)'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Author, Year)
  journal: International journal of computer networks and applications
  key_findings: MQTT is a reliable and efficient protocol for real-time data transmission
    in irrigation systems. Client-server architecture provides a robust and scalable
    network infrastructure for data transmission. Challenges associated with real-time
    data transmission include latency, network reliability, and data security.
  limitations: The paper does not provide a comprehensive analysis of other data transmission
    protocols besides MQTT and client-server architecture. It also does not explore
    the use of mesh networks or other emerging technologies for real-time data transmission
    in irrigation systems.
  main_objective: To investigate the use of MQTT and client-server architecture for
    real-time data transmission in automated irrigation management systems.
  pdf_link: null
  publication_year: 2022
  relevance_evaluation: This paper is highly relevant (0.8-0.89) to the point of focus,
    as it provides a detailed exploration of MQTT and client-server architectures
    for real-time data transmission in automated irrigation management systems. The
    paper contributes to the understanding of reliable and efficient data transmission
    protocols, a crucial component of the data collection and transmission stage.
    The paper also discusses the challenges and solutions associated with real-time
    data transmission, such as latency, network reliability, and data security.
  relevance_score: 0.85
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT, Client-server architecture
  title: Survey and testing of the IoT Cybersecurity Framework Using Intrusion Detection
    Systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2022/7368691
  analysis: '>'
  authors:
  - Gavrilov Andrei
  - Marlen Bergaliyev
  - Tinyakov Sergey
  - Kirill Krinkin
  - Pavel Popov
  citation_count: 0
  explanation: 'MQTT and RTPS are both suitable for real-time data transmission in
    IoT systems, but they have different strengths and weaknesses.


    MQTT is a lightweight protocol that is designed for low-power devices. It is simple
    to implement and has a low overhead. MQTT is best suited for applications that
    require low latency and high throughput, such as sensor data collection and remote
    control.


    RTPS is a more robust protocol that is designed for high-reliability applications.
    It is more complex to implement than MQTT, but it provides features such as guaranteed
    delivery and message ordering. RTPS is best suited for applications that require
    high reliability and low latency, such as industrial automation and medical devices.


    In general, MQTT is a better choice for applications that require low latency
    and high throughput, while RTPS is a better choice for applications that require
    high reliability and low latency.'
  full_citation: '>'
  full_text: ">\nResearch Article\nUsing IoT Protocols in Real-Time Systems: Protocol\
    \ Analysis and\nEvaluation of Data Transmission Characteristics\nAndrei Gavrilov\n\
    ,1 Marlen Bergaliyev,1 Sergey Tinyakov\n,1 Kirill Krinkin,1\nand Pavel Popov2\n\
    1Department of Software Engineering and Computer Applications, Saint Petersburg\
    \ Electrotechnical University “LETI”,\nSaint Petersburg, Russia\n2St. Petersburg\
    \ Branch JSC NIIAS, Saint Petersburg, Russia\nCorrespondence should be addressed\
    \ to Andrei Gavrilov; gavrilov.andrew1999@yandex.ru and Sergey Tinyakov; mirrin1905@\n\
    outlook.com\nReceived 24 January 2022; Accepted 25 July 2022; Published 16 August\
    \ 2022\nAcademic Editor: Bilal Khalid\nCopyright © 2022 Andrei Gavrilov et al.\
    \ Tis is an open access article distributed under the Creative Commons Attribution\n\
    License, which permits unrestricted use, distribution, and reproduction in any\
    \ medium, provided the original work is\nproperly cited.\nIn the Internet of things,\
    \ many data transfer protocols are used for various tasks. In this article, we\
    \ consider the application layer\nprotocols that are the main ones for transmitting\
    \ messages in the IoT. Te main problems are unpredictability, lack of stability\
    \ of\ndata transmission delays, and non-determinism, which are also important\
    \ for real-time systems. Te purpose of this study is to\ndetermine the most appropriate\
    \ middleware and data transfer protocol for systems with high data transfer requirements,\
    \ in-\ncluding real-time systems. Terefore, MQTT, RTPS, JMS, and AMQP protocols\
    \ were analyzed in order to fnd out what tasks these\nprotocols should be used\
    \ for and whether they can be used in robotic and autonomous systems where high\
    \ data transmission\nrequirements are imposed. To evaluate the protocols, the\
    \ standards were analyzed to determine the pros and cons, and the\nsoftware implementations\
    \ of each of them were selected. To assess the characteristics of data transmission,\
    \ we have developed our\nown test scenarios that simulate complex situations.\
    \ Te behavior of software solutions is analyzed and a comparative analysis is\n\
    made based on the obtained data. Together, the theoretical analysis of protocols\
    \ and the study of software solutions allow us to\nconclude on the applicability\
    \ of a particular protocol in real-time systems. As a result of the study, we\
    \ can conclude that RTPS is\nthe best solution for real-time systems with diferent\
    \ trafc and MQTTperforms well when transmitting short messages. But none\nof the\
    \ protocols under consideration guarantees the determinism of data transmission,\
    \ so it is better to use specialized link-layer\nprotocols to obtain guarantees.\n\
    1. Introduction\nIn modern systems, the volume of data processed, generated,\n\
    and transmitted is increasing. Many complex systems\nconsist of many modules or\
    \ nodes that constantly com-\nmunicate with each other. Tese modules can be located\
    \ on a\nsingle computer or distributed in a network. Te more\nautomated the system,\
    \ the greater the requirements for data\ntransmission and real-time communication.\
    \ In distributed\ncomputing systems, transmission afects the performance of\n\
    the system, while in various robotic systems, constant\nsynchronization may be\
    \ required and low data exchange\nrates may lead to errors in the operation or\
    \ breakage of\nmechanisms. While in autonomous systems such as self-\ndriving\
    \ vehicles, unpredictable and long delays can become a\nthreat to people’s lives.\
    \ In this regard, the question arises\nabout the choice of data transmission protocols\
    \ for reliable\nand fast data transmission.\n1.1. Motivation. Various network\
    \ technologies are used\neverywhere in everyday life. Systems are getting smarter\
    \ and\nthere is always a problem of limited resources. Millions of\nsensors continuously\
    \ create and transmit data to manage\nHindawi\nJournal of Computer Networks and\
    \ Communications\nVolume 2022, Article ID 7368691, 18 pages\nhttps://doi.org/10.1155/2022/7368691\n\
    real-world infrastructures that use complex Internet of\nthings (IoT) networks.\
    \ For various spheres of human ac-\ntivity, various technologies and protocols\
    \ are being devel-\noped for the organization of the network and the eﬃcient\n\
    operation of the infrastructure. Te predominant areas of\ndevelopment of such\
    \ network technologies are smart en-\nvironment, autonomous transport, and medicine.\n\
    1.1.1. Smart Environment. A smart environment includes\nthe automation of various\
    \ processes of our everyday life. It\nincludes such technologies as smart home,\
    \ smart city, smart\nmanufacturing, etc. In a smart environment, the question\
    \ of\nlimited resources also arises, since smart devices and various\nsensors\
    \ are also used to create this environment. Te re-\nsources of IoT devices are\
    \ very limited, and there is no\npossibility to perform complex computing tasks\
    \ locally. At\nthe same time, the bandwidth of data transmission channels\nis\
    \ also limited and it is impossible to use the entire resource\nfor the functioning\
    \ of systems. To solve these problems,\nvarious approaches to building infrastructure\
    \ related to edge\ncomputing are being created [1]. At the same time, the basic\n\
    data transfer technologies are the IoT protocols, and they\nplay a signiﬁcant\
    \ role in the operation of a particular smart\nenvironment system.\n1.1.2. Autonomous\
    \ Transport. Autonomous transport in-\ncludes a set of units like sensors, GPU,\
    \ CPU actuators, etc.\nTe operation of an onboard control system is based on the\n\
    transmission of information between subsystems. Terefore,\nit is crucial to realize\
    \ a reliable exchange of data. Te main\nparameters are a guarantee of data delivery,\
    \ data integrity,\nmaximum possible latency of data transmitting, and cal-\nculation\
    \ cost. Furthermore, it is vital to balance require-\nments considering diﬀerent\
    \ kinds of data: vast streams of\ninformation from sensors, short commands from\
    \ CPUs, etc.\nTerefore, the data transfer protocol has to provide the best\npossible\
    \ parameters for distributed and complicated au-\ntonomous control systems.\n\
    1.1.3. Medicine. Modern healthcare involves many personal\nwearable sensors that\
    \ constantly monitor a person’s con-\ndition. Tere are diﬀerent views on what\
    \ the architecture of\nnext-generation medical platforms should be. Researchers\n\
    agree that the integration of personal sensors into a uniﬁed\nhealth information\
    \ system is inevitable. Tis implies eﬀective\nways to communicate in a heterogeneous\
    \ environment. Te\ncommunication methods discussed in this article will be\nuseful\
    \ to those who design medical systems.\n2. Literature Overview\nTis section will\
    \ present the work done in the ﬁeld of this\nstudy as well as a description of\
    \ each of the protocols under\nconsideration. After considering the theoretical\
    \ part of the\nprotocols, the main questions that this study is trying to\nanswer\
    \ are put forward.\n2.1. Related Works. A large number of studies and works have\n\
    been conducted on the problem of choosing a protocol for real-\ntime systems.\
    \ Various IoT protocols are analyzed for perfor-\nmance, security, and reliability.\
    \ Since AMQP and MQTT pro-\ntocols are popular in the IoT, it is important to\
    \ understand the\nsecurity vulnerabilities associated with the each protocol.\
    \ In\n[2–5], an analysis of vulnerabilities and cyber threats for these\nprotocols\
    \ was made. Also, in [6], an analysis of AMQP protocol\nfor industrial IoT was\
    \ done. For MQTT in [7], a comparison\nwith CoAP on Ponte Eclipse Project implementation\
    \ was\nprovided. Also, an analysis of MQTT performance was done in\n[8]. Tere\
    \ is a formal approach to model, analyze, and verify the\nusage of MQTT in the\
    \ case of communicating vehicles in [9].\nTe dependence of delay and QoS level\
    \ in MQTT was analyzed\nin [10]. An analysis and a comparison of AMQP, MQTT, CoAP,\n\
    and HTTP protocols without any implementation were done in\n[11]. Since AMQP uses\
    \ queues, a detailed analysis of message\nqueue methods and a comparison of RabbitMQ,\
    \ ActiveMQ, and\nKafka implementations were made in [12]. Also, RabbitMQ,\nwhich\
    \ is an implementation of AMQP, was analyzed as message-\noriented middleware\
    \ (MOM) and compared to NATS and\nKafka in [13]. An analysis of OPC UA, DDS, and\
    \ MQTT\nprotocols for Industry 4.0 was done in [14]. More details about\nDDS and\
    \ data-centric communication were given in [15]. Te\nDDS standard was designed\
    \ for real-time systems on mission-\ncritical infrastructures. So, security is\
    \ necessary to avoid disaster\nand loss of life. Security issues for DDS were\
    \ analyzed in [16, 17].\nTouching on our previous research, we have analyzed the\n\
    existing data transmission standards in the IoT [18] and the\nperformance of DDS\
    \ services [19].\n2.2. Protocol Overview. In this section, we will brieﬂy con-\n\
    sider the main concepts of the protocols and highlight the\nbasic features that\
    \ are stated in the speciﬁcations. Each\nprotocol was created to solve a certain\
    \ range of tasks, so it is\nworth getting acquainted with each of them to understand\n\
    the relevance of using the protocol in the modern IoT.\nIn IoT, the most relevant\
    \ protocols are MQTT, AMQP,\nJMS, XMPP, CoAP, and RTPS (DDSI-RTPS). XMPP does\n\
    not support any delivery guarantees, but only allows to\nrequest information from\
    \ the client about the delivery of\ndata [20], so this protocol is not considered\
    \ in this article,\nbecause the real-time system requires these delivery guar-\n\
    antees to work with up-to-date data. Also, the CoAP pro-\ntocol is not discussed\
    \ in this article; although the addition of\nthe publish-subscribe model to this\
    \ protocol is interesting\nfor real-time systems, the standard client-server model\
    \ is not\nsuitable for real-time data transmissionbecause this model\nrequires\
    \ sending requests to receive new data. Tese pro-\ntocols solve the problem of\
    \ data exchange in any format,\nqueue processing, and data distribution. Each\
    \ of the con-\nsidered protocols provides diﬀerent guarantees, so it is\nnecessary\
    \ to understand for which target systems a particular\nprotocol may be suitable\
    \ or for which data.\n2.2.1. Message Queuing Telemetry Transport (MQTT).\nMQTT\
    \ (Message Queuing Telemetry Transport) is a light-\nweight transport protocol\
    \ that releases a publish-subscribe\n2\nJournal of Computer Networks and Communications\n\
    model. Te protocol is an open OASIS standard and an ISO\nrecommended.\nMQTTwas\
    \ invented by Dr Andy Stanford-Clark of IBM,\nand Arlen Nipper of Arcom (now Eurotech),\
    \ in 1999. Tere\nwas a problem with communication between monitoring\ndevices\
    \ and remote servers in the oil and gas industry. In\nmany cases, it was diﬃcult\
    \ or impossible to use a landline,\nwired connection, or radio transmission connection.\
    \ During\nthat time, satellite communication was the only solution to\nthis problem.\
    \ But it was very expensive, and it was necessary\nto pay according to the volume\
    \ of data transmitted. So,\nthousands of sensors required a form of communication\
    \ that\ncould provide reliable data transmission with minimal\nbandwidth use.\n\
    Two developers speciﬁed the features of the tool to solve\nthis problem:\n(i)\
    \ Simple implementation\n(ii) Lightweight and bandwidth eﬃcient\n(iii) Quality\
    \ of service\n(iv) Data agnostic\n(v) Continuous session awareness\nIBM used protocol\
    \ after it was created for internal\npurposes for about 10 years. Ten IBM released\
    \ MQTT 3.1 as\na free version in 2010. From that time on, everyone was able\n\
    to use the protocol. In 2014, MQTT became an oﬃcially\napproved OASIS standard.\n\
    In 2019, OASIS ratiﬁed the new MQTT 5 speciﬁcation.\nTe new version speciﬁed features\
    \ that are required in the\nIoT industry, such as more reliability and error handling.\n\
    It works on top of any ordered, lossless, bidirectional\nnetwork protocol, for\
    \ example TCP or SSL. In MQTT, there\nare two entities: the server (broker) and\
    \ the clients. All\nmessages from senders who are called publishers are passed\n\
    by the broker to receivers who are called subscribers. All data\nare divided into\
    \ topics—the label attached to the message.\nTe server matches the topic with\
    \ subscription and forwards\nmessages if they match. Tis is how clients behave:\n\
    (i) Connect to the broker\n(ii) Subscribe to a topic and wait for incoming messages\n\
    or send messages to the topic(s)\n(iii) Close the connection\nMQTT provides topics\
    \ with wildcard, shared subscrip-\ntions and quality of service.\nTere is also\
    \ a variation of the protocol—MQTT-SN\n(MQTT for sensor networks). It is designed\
    \ especially for\nsensor networks. MQTT-SN can work on top of non-TCP/\nIP network\
    \ protocols such as UDP. Header size has also been\nreduced, and the UTF-8 topic\
    \ string has been replaced by an\ninteger topic id.\nQuality of services deﬁnes\
    \ the delivery guarantee. Tere\nare three levels:\n(i) QoS 0: At-most-once delivery.\
    \ Message is sent only\none time. Te receiver sends no response and the\nsender\
    \ performs no retry.\n(ii) QoS 1: At least once delivery. Message is sent until\
    \ it\narrives at the subscriber at least once. Te subscriber\nsends an acknowledgment\
    \ to the publisher after\ngetting the message. Te publisher performs a retry\n\
    until an acknowledgment is received. Te subscriber\nprocesses any copy of the\
    \ message as a new unique\nmessage.\n(iii) QoS 2: Exactly one delivery. Te subscriber\
    \ receives\nonly one copy of the message by a two-step ac-\nknowledgment process.\
    \ Like in QoS 1, the sub-\nscriber\nsends\nthe\nacknowledgment,\nbut\nthe\npublisher\
    \ sends a second acknowledgment back,\nand after getting it, the subscriber sends\
    \ back a ﬁnal\nacknowledgment that completes message trans-\nmission. During the\
    \ acknowledgment exchange, the\nreceiver drops any message that has the same packet\n\
    identiﬁer as the current message.\nAs described earlier, the topic is a label\
    \ attached to the\nmessage. Topic names can form a hierarchical topic tree by\n\
    separating each level with a forward slash. Subscribers use a\ntopic ﬁlter to\
    \ let the broker know which topics are of interest\nto them. Wildcards can be\
    \ used in the topic ﬁlter. Te\nnumber sign is a multilevel wildcard that matches\
    \ any\nnumber of topic levels, including zero topics. Te plus sign is\na single-level\
    \ wildcard that matches to only one topic level,\nincluding zero topics.\nMQTT\
    \ deﬁnes two types of subscriptions: shared and\nnon-shared. Te main diﬀerence\
    \ is the number of copies of\nthe message. With the non-shared subscription, all\
    \ receivers\nwho subscribe to the same topic get their own copy of the\nmessage.\
    \ With the shared subscription, only one copy of the\nmessage is sent to the one\
    \ shared group. Tat way, a load-\nbalanced network architecture can be created.\
    \ Shared sub-\nscriptions are also useful for parallel processing of publi-\n\
    cations by multiple clients.\n2.2.2. Real-Time Publish-Subscribe Protocol (RTPS).\
    \ Te\nRTPS data exchange protocol, also known as DDSI-RTPS, is\ndeveloped by the\
    \ Object Management Group (OMG), as\npart of the DDS standard, responsible for\
    \ data transfer and\nensuring compatibility between diﬀerent vendors as well as\n\
    ensuring platform independence of the DDS service. Te\nﬁrst version of the DDS\
    \ speciﬁcation was released in 2004\nand the RTPS protocol speciﬁcation version\
    \ in 2009.\nDDSI-RTPS protocol is developed for reliable and high-\nspeed transmission\
    \ via unreliable data transfer protocols, for\nexample via UDP.\nDDSI-RTPS is\
    \ based on the concept described in the\nDDS standard. Te model describes entities\
    \ such as:\n(i) Domain\n(ii) Topic\n(iii) Publisher who sends data to the topic\
    \ via the\nDataWriter\n(iv) Subscriber who gets data from the DataReader\nTe publisher\
    \ and subscriber are the end nodes who\nsends and receives data, respectively,\
    \ and the subject is an\nJournal of Computer Networks and Communications\n3\n\
    entity that describes the channel to which data are sent,\nwhich subscribers can\
    \ track. A domain is an entity that\ndivides topics, publishers, and subscribers\
    \ into diﬀerent\nname domains. Terefore, the topic, publisher, and sub-\nscriber\
    \ belong to a speciﬁc domain and cannot interact with\nnodes from another domain.\
    \ At the same time, subscribers\nand publishers do not know anything about each\
    \ other, but\nare connected only by the topic through which the data are\ntransmitted.\n\
    Te RTPS protocol is based on four main modules:\n(i) A structural module that\
    \ describes the structure of\nentities;\n(ii) A message module that describes\
    \ the structure of\ntransmitted messages;\n(iii) A behavior module that describes\
    \ the sequence of\nmessage transmission and the time constraints\nimposed on the\
    \ transmission of each message;\n(iv) A discovery module that describes how nodes\
    \ ﬁnd\neach other to interact with.\nTo ensure reliable data delivery, the protocol\
    \ describes an\nentity such as CacheChanges. Each node (DataReader or\nDataWriter)\
    \ has such an entity. When sending and receiving\ndata, each node makes a note\
    \ about this in the Cache Changes.\nTe\nprotocol\nhas\nthree\nmessage\ntypes:\n\
    DATA,\nHEARTBEAT, and ACKNACK. DATA is a message with\ndata, HEARTBEAT is a message\
    \ with changes in Cache-\nChanges of DataWriter, and ACKNACK is a message with\n\
    changes in CacheChanges of DataReader. With the help of\nHEARTBEAT and ACKNACK,\
    \ it is possible to determine\nwhat data were sent but not delivered, which will\
    \ allow\nresending these data. But since the DataWriter only knows\nabout data\
    \ loss when it receives changes from the Data-\nReader, which in turn are sent\
    \ only when the message is\nreceived, the packet loss will only be known when\
    \ the\nDataReader receives the next message, which generally vi-\nolates the sequence\
    \ of receiving messages. To ensure that the\nsequence is correct, the protocol\
    \ makes messages unavailable\nuntil all the necessary data are received.\nTe discovery\
    \ module contains two protocols that im-\nplement the search for nodes in the\
    \ network. Te ﬁrst\nprotocol is the Participant Discovery Protocol (PDP), which\n\
    describes the algorithm for searching for nodes in a network\nbelonging to a speciﬁc\
    \ domain, and the second protocol is\nthe Endpoint Discovery Protocol (EDP), which\
    \ describes the\nsearch for speciﬁc DataReader and DataWriter in a domain.\nTus,\
    \ we can distinguish the following qualities of this\nprotocol:\n(i) Providing\
    \ automatic search by nodes of each other;\n(ii) Providing data transmission with\
    \ various QoS that\nthe DDS standard describes;\n(iii) High data transfer rate\
    \ due to the UDP protocol,\ninstead of TCP.\n2.2.3. Java Message Service (JMS).\
    \ A new programming\nlanguage Java was introduced in 1995. As there was not a\n\
    mechanism that provided communication between a few\nprograms, JMS (Java Message\
    \ Service) was created in 1998 to\nsolve this problem. Te last version (2.0a)\
    \ of the JMS\nstandard was updated in 2015.\nJMS is similar to other middleware.\
    \ It has two types of\ncommunication: point to point and publish and subscribe.\n\
    In both communication styles, there is a JMS provider that is\nused to manage\
    \ connections, queues, and resources.\nOpening the ﬁrst connection creates a provider\
    \ outside Java\nvirtual machine.\nPoint-to-point messaging means that there are\
    \ two pro-\ncesses communicating with each other. Tis communication\ntype uses\
    \ message queues. Each process has a message queue as\na “mailbox.” Queues accept\
    \ all types of messages and are not\nindividual for every message sender, so there\
    \ is no need in\nhaving more than one queue on each side. Each queue can be\n\
    used by a few clients, but they will not receive all messages in\ncase after delivery\
    \ every message becomes consumed and\ncannot be retrieved by any client. In JMS,\
    \ there are two types of\nqueues: temporary and static. Temporary queues can be\
    \ used\nonly in one connection, because they exist only during the\nlifetime of\
    \ the connection. Static queues are most commonly\nused. Tey can be used in a\
    \ few connections and also they may\nstill exist after the client program’s end,\
    \ so while restarting, the\nclient can retrieve messages from this queue.\nPublish\
    \ and subscribe messaging is a common publish-\nsubscribe model, where few processes\
    \ communicate through\na topic. Reliability depends on the subscriber’s durability\
    \ and\npublishing persistence. Nonpersistent publishing results in\nat-most-once\
    \ reliability, while persistent publishing results\nin once-and-only-once reliability.\
    \ Nondurable subscribers\ncan miss messages if they are inactive, while durable\
    \ sub-\nscribers cannot miss messages. Persistent publishing is\nmostly implemented\
    \ by static queues. Tere is no descrip-\ntion of how redelivery must be implemented.\n\
    As additional functionalities, there is a message selector.\nIt allows users to\
    \ ﬁlter messages by processing their header\nﬁelds. It uses SQL syntax to do that.\
    \ Also, some providers\nallow the use of topic hierarchy, which helps to send\
    \ a\nmessage to a few topics immediately.\n2.2.4.\nAdvanced\nMessage\nQueuing\n\
    Protocol\n(AMQP).\nAMQP was developed by John O’Hara in 2003. One of the\nﬁrst\
    \ implementations of this protocol was Apache Qpid. Red\nHat started developing\
    \ it in 2005. In 2007, Rabbit Tech-\nnologies released their implementation of\
    \ AMQP called\nRabbitMQ.\nAMQP deﬁnes three types of nodes: producers, con-\n\
    sumers, and queues. Producers and consumers are parts of\nthe application that\
    \ generate and proceed messages. Each\nnode is attached to a container which can\
    \ be a client or\nbroker. Te diﬀerence between clients and brokers is only in\n\
    expected capabilities.\nIn AMQP to start communication ﬁrstly required to\ncreate\
    \ a connection between containers. Ten the session can\nbe started. Every connection\
    \ may contain multiple sessions.\nTereafter, a link can be established between\
    \ two nodes. All\nlinks are unidirectional. On each side of the link, there is\
    \ a\nterminus that controls message ﬂow through the link.\n4\nJournal of Computer\
    \ Networks and Communications\nMessages can be transmitted only through a link.\
    \ In\nrelation to nodes, messages can be divided into a few types,\nnamely originate\
    \ from, terminate at, or relay by nodes.\nQueues are used to store messages and\
    \ make them available\nto few consumers. So, the main purpose of brokers is to\n\
    manage queues to receive messages from producers, store\nthem, and transmit messages\
    \ to consumers.\nEvery message delivery has a settlement state, which\ncontrols\
    \ if a message has been delivered, and delivery state.\nTo set settlement, nodes\
    \ send frames. When the receiver\nsends a settlement frame of delivery, the sender\
    \ removes\ndelivery from its unsettled map. It can be used to implement\ndiﬀerent\
    \ reliability policies. If the sender sets the settlement\nof delivery after message\
    \ sending, then the message will be\ndelivered “at most once.” If the receiver\
    \ sends a settlement of\ndelivery and the sender waits for settlement, then it\
    \ im-\nplements the “at least once” guarantee. To perform “exactly\nonce,” the\
    \ delivery sender has to set settlement only after the\nreceiver sets the terminal\
    \ delivery state, and the receiver has\nto set settlements after the sender. But\
    \ in this case, a few\nframes should be sent: at least one for termination and\
    \ one\nfor settlement. Tere is no other way to implement reliable\ntransfer without\
    \ duplications in AMQP.\nAdditionally, AMQP provides security protocol support,\n\
    such as TLS and SASL. Also, it has a transactional messaging\nmodel. Transactional\
    \ works consist of three operations:\nposting, acquiring, and retiring. Target\
    \ performs posting and\nmakes a message unavailable at the destination until it\
    \ will be\nfully discharged. Source performs retirement to associate an\noutcome\
    \ of delivery with the transactionSource acquires\ntransaction message to perform\
    \ operation.\n2.3. Conclusion of the Overview. A lot of work has been done\nin\
    \ the ﬁeld of IoT protocol research. Diﬀerent studies in-\nvestigate diﬀerent\
    \ characteristics of data transmission and\nuse diﬀerent methodologies. Each protocol\
    \ has many\nimplementations that can be better or worse relative to each\nother,\
    \ and the research done can also use various protocol\nimplementations for analysis.\
    \ In addition, it is necessary to\nconsider all protocols under the same conditions\
    \ in order to\nachieve objective comparison results. Depending on the\nmethodology,\
    \ selected software implementations, and the\nrange of protocols under consideration,\
    \ the results of the\nstudy may vary.\nAll these factors complicate the choice\
    \ of a solution and\nprotocol for a speciﬁc task. Tis article examines the best\n\
    software implementations based on the work done and\ncreates the same conditions\
    \ for evaluating middleware.\n3. Materials and Methods\nTo analyze and compare\
    \ the protocols selected for consid-\neration, it is necessary to formulate criteria\
    \ that will show\ntheir characteristics, select software implementations that\n\
    use the protocols in data transmission, and develop a testing\nmethodology that\
    \ would allow studying these technologies\nfrom diﬀerent angles.\nIn this section,\
    \ we will consider the methods developed\nin our work for studying software solutions\
    \ for data\ntransmission that emit various conditions. Such conditions\ncan occur\
    \ in diﬀerent systems, so it is necessary to evaluate\nnot only the maximum capabilities\
    \ of these software tools,\nbut also their behavior in critical situations that\
    \ can be\ncreated by developers during the development of the system.\nWe will\
    \ also deﬁne the criteria for selecting speciﬁc data\ntransfer libraries for each\
    \ protocol.\n3.1. Description of Comparison Methods and Testing Methods.\nEvery\
    \ protocol has its own reason for creation, which lies in\nits feature. It has\
    \ both pros and cons. It is diﬃcult to predict\nthe performance of protocol based\
    \ on analysis only. Te\nperformance also depends not least on the implementation\n\
    of the protocol. In addition, machines have diﬀerent power,\nwhich also aﬀects\
    \ performance. It is necessary to know data\ntransmission characteristics for\
    \ objective evaluation and\ncomparison. Comparison of diﬀerent protocols can be\n\
    diﬃcult because they work diﬀerently and are designed for\ndiﬀerent purposes.\
    \ Terefore, it is good to have a universal\nvalue characteristic that shows the\
    \ practical side of protocols.\nTis makes it possible to compare and select implementa-\n\
    tions without knowing their internal structure.\nTest scenarios have been developed\
    \ to evaluate diﬀerent\nimplementations. Tese tests simulate situations with dif-\n\
    ferent environments: message interval, number of subscribers\nor exchanging pairs,\
    \ frequency, and message size. Te limits\nin the tests can be viewed as hard real-time\
    \ situations. All this\ngives an insight into the limitations and problems of\
    \ the\nprotocol and/or the implementation. Tis helps to decide if\nthe protocol\
    \ is a good solution for a certain problem.\nFor each selected implementation,\
    \ corresponding pro-\ngrams were written that have identical logic. Te diﬀerence\n\
    between the programs is only in the functions of sending and\nreceiving data,\
    \ which use the API of the selected middleware\ndirectly. Te general logic of\
    \ the tests has the following three\ntypes of interaction:\n(i) One-way data transfer,\
    \ when the program performs\nthe role of either only the sender or only the receiver\n\
    with a speciﬁed frequency and with a speciﬁed\npayload size;\n(ii) Two-way data\
    \ transfer, where one node sends\nmessages only when it receives a response from\
    \ the\nother, thus measuring RTT and jitter;\n(iii) Two-way data transfer, when\
    \ one node does not\nwait for a response, but sends messages at a certain\ninterval,\
    \ while it is possible to artiﬁcially limit the\nqueue by indexing received and\
    \ sent messages.\nTo obtain objective results of data processing by the\nselected\
    \ technologies, programs are assigned to a separate\ncore with exclusive use of\
    \ its resources, which guarantees\nthat the programs work in the same conditions.\n\
    Te characteristics of the system that was tested are\nshown in Table 1. All tests\
    \ were performed locally on a single\ncomputer. Te test scenarios used in the\
    \ study will be de-\nscribed below.\nJournal of Computer Networks and Communications\n\
    5\n3.1.1. Evaluating Queue Processing Performance. Te test is\naimed at investigating\
    \ message queue processing. In the test,\nthe ﬁrst node sends messages to the\
    \ other node without any\ninterval. Tus, the queue accumulates.\nTe test is performed\
    \ with message sizes of 50 and 60,000\nbytes. Te process priority is set to the\
    \ highest in Linux–99.\nBoth the nodes are bound to the CPU cores. So, each process\n\
    is separate and works without interruptions during queue\nprocessing, such conditions\
    \ help to get the most accurate\ndata about the studied characteristic.\n3.1.2.\
    \ Evaluating the Impact of the Number of Nodes on\nPerformance. Te test is aimed\
    \ at investigating the depen-\ndence of the total latency on the number of subscribers.\
    \ In\nthe test, one node (publisher) sends messages to other\nnodes—subscribers.\
    \ Te message size with sending fre-\nquency takes up 1.25 MB per second of bandwidth.\n\
    Te test is performed with the number of subscribers\nvarying from 1 to 20. As\
    \ in test 1, all processes have the\nhighest priority in Linux–99. No node is\
    \ bound to the CPU\ncore. A separate test is run for each number of subscribers.\n\
    3.1.3. Evaluating the Impact of Message Size on Latency.\nTe test is aimed at\
    \ investigating the total latency in de-\npendence on message size. In the test,\
    \ the ﬁrst node sends\nmessages to the other node at a given interval. Te message\n\
    size increases during the test.\nTe test is performed on diﬀerent frequencies\
    \ which in\ncombination with the message sizes take from 2.5 kB to 2 GB\nper second\
    \ of bandwidth. As in previous tests, all processes\nhave the highest priority\
    \ in Linux–99. Te nodes are not\nbound to CPU cores.\n3.1.4. Estimation of the\
    \ Jitter Value and Minimum Delays.\nTe test is aimed at investigating the total\
    \ latency, jitter, and\nRTT (round trip time) of each message of the minimum size.\n\
    Te test also shows the number of copies between the user\nspace and the kernel\
    \ space. In this scenario, the ping-pong\nmodel is used: one node sends a message\
    \ to the other, and\nthen both exchange messages only after receiving a message\n\
    from the other node. Te test stops when the set number of\ntransmitted messages\
    \ is reached. Te size of each message is\n10 bytes. Nodes are not bound to CPU\
    \ cores and process\npriorities are not set.\n3.1.5. Evaluation of the Eﬀect of\
    \ the Number of Interacting\nProcesses in Diﬀerent Conditions on Delays. Te test\
    \ is aimed\nat investigating the dependence of the total latency on the\nmessage\
    \ size at diﬀerent message sending frequencies and on\nthe number of process pairs.\
    \ In this scenario, the ping-pong\nmodel is used, but the node that sends the\
    \ ﬁrst message, also\ncalled the ﬁrst node, does not wait to receive a message\
    \ from\nthe other node, as in the previous scenario, and sends new\nmessages on\
    \ a given frequency. Te other node works as in\nthe previous test. Te test stops\
    \ when the set number of\ntransmitted messages is reached.\nTe test consists of\
    \ two types of subtests: (1) one pair\nexchanges messages on a given frequency;\
    \ (2) at a ﬁxed\nfrequency, several pairs exchange messages. Te message\nsize\
    \ increases during the test in both subtests. In the ﬁrst\nsubtest, messages take\
    \ up a bandwidth in the range of\n5 kB–4 GB per second for both the nodes. In\
    \ the second\nsubtest, messages take up a bandwidth in the range of\n100 kB–1.5\
    \ GB per second for each pair. Te number of pairs\nin the second subtest is 1,\
    \ 2, and 3. Nodes are not bound to\nCPU cores and process priorities are not set.\n\
    3.1.6. Investigation of Delays in Artiﬁcially Fixing the Message\nQueue. Te test\
    \ is aimed at investigating the total latency of\nprocessing a limited queue.\
    \ Tis scenario uses the limited\nqueue ping-pong model from test 5. If the ﬁrst\
    \ node has a\ndiﬀerence between the number of the sent message and the\nlast received\
    \ one greater than the watermark value of 50, no\nmessage will be sent. It means\
    \ that messages in the queue are\nnot more than the value of the watermark. Due\
    \ to the limited\nqueue, the latency will be constant or does not exceed some\n\
    constant value. Te size of each message is 10 bytes. Nodes\nare not bound to CPU\
    \ cores and process priorities are not\nset.\n3.2. Description of the Framework\
    \ Selection. Te main\ncriteria for framework selection are open source and C/C++/\n\
    Java programming language for clients.\nTe JMS is very abstract, so this research\
    \ could have been\nany Java client with or without any server. But in this article,\n\
    there is an idea of comparing with Java realization, so the\nJMQ has been selected.\
    \ Te server is called GlassFish, and it\nwas developed by Sun Microsystems and\
    \ later passed under\nthe wing of the Eclipse Foundation. Te auto-acknowledge\n\
    of message property is used for testing. Te nonpersistent\nproperty is also set.\
    \ If the persistent property is set, the\nmessage is copied to the hardware to\
    \ avoid losing it.\nTere are many implementations of the DDS standard:\nOpenDDS,\
    \ OpenSplice, FastRTPS, and Cyclone DDS. Tere\nare evaluations of FastRTPS on\
    \ the eProsima website [21]. We\nalso have another close research comparing all\
    \ these four\nDDS frameworks. In it, FastRTPS was the winner. For ex-\nample,\
    \ in Figure 1, there is a delay graph for messages with\nincreasing size (we use\
    \ “Evaluating the impact of message size\non latency” test scenario). Te results\
    \ of OpenSplice (the\npublic version of this solution) were not added to the image,\n\
    as this solution showed a terrible result with delays in seconds\nafter 200 messages,\
    \ where the size was 512 kB. As pictured,\nFastRTPS shows the best result. Terefore,\
    \ FastRTPS has been\nselected for this research. For guarantee delivery, the fol-\n\
    lowing message properties are set: to achieve a delivery\nguarantee, parameters\
    \ are set for storing all messages that\nhave not yet been received by subscribers\
    \ and a QoS-reliable\npolicy is selected, which guarantees data delivery.\nTable\
    \ 1: System conﬁguration.\nOS\nLinux-5.4.54-rt with Ubuntu 18.04 bionic\nCPU\n\
    Intel Core i5, 3.0 GHz\nRAM\n8 GB\n6\nJournal of Computer Networks and Communications\n\
    Tere are not many implementations of AMQP. Tree\npopular servers are RabbitMQ,\
    \ ActiveMQ, and Apache\nQpid. A comparison of the frst two was made in [22], where\n\
    RabbitMQ showed better results. In [23], a comparison was\nmade between RabbitMQ\
    \ and Kafka, where the former\nshowed good results. Te Apache Qpid has been tested\
    \ in the\nfrst three tests. In Figure 2, there are results of RabbitMQ\nand Qpid\
    \ for the test “Evaluating the impact of message size\non latency.” As pictured,\
    \ Qpid is worse. In other tests, the\nQpid result is close to or worse than RabbitMQ.\
    \ Terefore,\nRabbitMQ has been selected for this research.\nTere are many MQTT\
    \ servers since the IoT becomes\nmore and more a part of our life. Evaluation,\
    \ analysis, and\ncomparison of MQTT brokers have been done in [24, 25]. In\nthese\
    \ researches, the best result was shown by the Mosquitto\nbroker. Terefore, this\
    \ broker is used in this research.\nPahoMQTT has been selected for the client\
    \ side. It is de-\nveloped by Eclipse Foundation. For the tests, the QoS level\
    \ is\nset to 1–at least once delivery.\n4. Results and Discussion\nTe analysis\
    \ of protocols should be divided into two sec-\ntions—theoretical and performance\
    \ evaluation—since the\nanalysis of specifcations will not give information about\
    \ the\nperformance of data transmission, but only helps to un-\nderstand the principles\
    \ of operation and guarantees pro-\nvided by the protocol. At the same time, protocol\n\
    implementations from diferent vendors may show diferent\ncharacteristics, so a\
    \ practical assessment of the performance\nof a particular solution does not give\
    \ an accurate assessment\nof the protocol.\nLater in the article, we will try\
    \ to analyze what these\nprotocols provide and consider the characteristics obtained\n\
    as a result of testing.\n4.1. Analysis of the Operation of the Protocols (Specifcation-\n\
    Based Analysis). To analyze the protocols, we studied the\nspecifcations of these\
    \ protocols, which are in the public\ndomain. In this part of the study, the advantages\
    \ and dis-\nadvantages of the algorithm of the protocols and the\ntechnologies\
    \ used were identifed.\n4.1.1. MQTT. MQTTpackets are lightweight. Each packet\
    \ is\ndivided into three sections: a fxed header, a variable header,\nand a payload.\
    \ Te fxed header consists of the packet type,\nfags, and remaining length. Summary\
    \ of the frst two gives 1\nbyte. Te variable header consists of a 2-byte packet\
    \ iden-\ntifer and properties which have a variable length. Some\npackets have\
    \ specifc required properties. Te payload is a\nuser’s message sent. Packets do\
    \ not take up much space.\nAlso, many properties are used in the packet for opening\n\
    connection. Only one required property in publish packet\ncan take up a lot of\
    \ space—the topic name. Te topic is a\nUTF-8 string. If needed, the topic can\
    \ be replaced by, for\nexample, the topic ID, like in MQTT-SN. But that would\n\
    cause problems with wildcards in topics. Terefore, if they\nare not used, it is\
    \ possible to reduce packet size by replacing\nthe topic with something else.\n\
    As said before there is no queue in MQTT. So, it becomes\na problem that the application\
    \ may not be able to process a\nmessage. Tis is not unusual on the network with\
    \ several\nthousand clients and thousand messages per second. QoS\nwas created\
    \ for solving this problem. But it also has other\nproblems. With QoS 1, the subscriber\
    \ spends time pro-\ncessing every message as a new one. With QoS 2, there are\n\
    three acknowledgment messages where each size is about 6\nbytes. So, every second,\
    \ each of a thousand subscribers sends\na thousand acknowledgments. It reduces\
    \ the bandwidth by\nat least 6 MB. MQTTis good for real time when it is required\n\
    to get actual data, but for data transfer with a delivery\ntime (msec)\nDelay\
    \ time\nQpid\nRabbitMQ\n800\n700\n600\n500\n400\n300\n200\n100\n0\n0\n100\n200\n\
    300\n400\n500\n600\n700\n800\nmessage number\nFigure 2: Qpid’s and RabbitMQ’s\
    \ delay in the case of increasing the\npayload size every 100 messages.\nDelay\
    \ time\nOpenDDS\n35\n30\n25\n20\n15\n10\n5\n0\n0\n100\n200\n300\n400\n500\n600\n\
    700\n800\nmessage number\ntime (msec)\nFastRTPS\nCycloneDDS\nFigure 1: OpenDDS’s,\
    \ FastRTPS’s, and Cyclone’s delay in the case\nof increasing the payload size\
    \ every 100 messages.\nJournal of Computer Networks and Communications\n7\nguarantee,\
    \ MQTT may be worse than other solutions based\non message queues.\nIn addition,\
    \ MQTTis centralized. So, it has a single point\nof failure which is the broker.\
    \ Tis can be a problem in some\ncases.\nTe quality of service that deﬁnes guarantee\
    \ delivery is\ndescribed in the MQTT. Is a lossless network protocol like\nTCP\
    \ required? TCP takes a lot of bandwidth. If the message\nis dropped by the server,\
    \ for example, due to performance\nlimitation, the message will be sent again,\
    \ which will take up\nmuch bandwidth again. It may be better to use UDP or other\n\
    UDP-based protocols, because they do not take much\nbandwidth. QoS levels 1 and\
    \ 2 guarantee delivery, so the\nexcess requirement of lossless to the network\
    \ protocol is not\nnecessary.\nAdvantages:\n(i) Lightweight packets;\n(ii) QoS\
    \ levels;\n(iii) Ability to ﬁlter messages.\nDisadvantages:\n(i) MQTT uses TCP/IP;\n\
    (ii) Centralized model;\n(iii) No queues.\n4.1.2. RTPS. Te RTPS protocol has many\
    \ advantages over\nother protocols. As described in the review, the protocol is\n\
    positioned as a reliable data transfer protocol, using unre-\nliable transport\
    \ layer protocols-UDP/UDPM. Using these\nprotocols, the highest channel throughput\
    \ and data transfer\nrate are provided.\nWith the help of the Simple Participant\
    \ Discovery\nProtocol, the DDS standard provides the ability to dy-\nnamically\
    \ connect to the network without having to know\nthe addresses of senders/recipients.\
    \ Tis provides a plug and\nplay connection, in which the nodes ﬁnd each other\
    \ by\nthemselves. But the protocol does not guarantee compati-\nbility between\
    \ diﬀerent implementations from diﬀerent\nvendors.\nTe protocol supports QoS levels\
    \ for the best eﬀort or\nreliable connection. A reliable connection is achieved\
    \ by\nresending data if the packet has not been delivered, but\ninformation about\
    \ the delivery of the packet will not be\nreceived using special messages, as\
    \ in TCP, but only when\nthe next packet with data is received. Tis algorithm\
    \ blocks\nthe receipt of the packet until all the lost packets are de-\nlivered.\
    \ Tis can increase delivery delays quite signiﬁcantly\nin some situations.\nAdditional\
    \ data that help in ensuring the reliability of the\nconnection (guarantees of\
    \ data delivery) can also set limits\non the data storage time of this message,\
    \ limits on the time of\nmessage delivery, and other parameters that may be nec-\n\
    essary for real-time data transmission.\nTe protocol implies a modular system\
    \ that guarantees\nthe absence of a single point of failure, allows for expansion\n\
    without loss of compatibility, and uses separately from the\nDDS standard.\nAs\
    \ a result, the following advantages of the protocol can\nbe distinguished:\n\
    (i) Availability of QoS and ﬂexible conﬁguration of\ndelivery and data storage\
    \ parameters for each\nmessage;\n(ii) Plug and play connection;\n(iii) Using UDP\
    \ for fast data transfer;\n(iv) No single point of failure.\nTe disadvantages\
    \ are as follows:\n(i) Increased latency in the case of packet loss;\n(ii) Possible\
    \ incompatibility between vendors.\n4.1.3. JMS. JMS is a good solution for systems\
    \ where reli-\nability can be implemented as static queues. But the usage in\n\
    real-time systems can be failing in case of using static queues\nin persistent\
    \ storage.\nAdvantages:\n(i) It is easy to use. It does not use additional\nstructures,\
    \ such as for identifying messages that\nwere received. Tere are no special messages\
    \ de-\nﬁned for some purposes, such as preventing\nmessage duplications;\n(ii)\
    \ It does not require a broker to manage message\nﬂow. It uses queues without\
    \ a special manager that\nexists in another process, which makes it fault-\ntolerant;\n\
    (iii) May store messages after client failure. In the case\nof using a static\
    \ queue, messages can be stored as\nlong as it is required. So, after all, every\
    \ node can\nreceive all messages sent to them.\nDisadvantages:\n(i) Standard is\
    \ too uncertain in many details. It can be\ninterpreted in diﬀerent ways. So,\
    \ implementations\nmay have very diﬀerent characteristics;\n(ii) It does not pretend\
    \ to deliver messages quickly.\nOther standards may say that they were developed\n\
    for quick messaging. But JMS was created to allow\ncommunication in Java, and\
    \ it does not say about\ndelivery speed.\n4.1.4. AMQP. AMQP cares about message\
    \ transportation\non every transition. Tis can be used in distributed systems\n\
    where nodes are grouped in diﬃcult architecture. Also,\nsystems using transactions\
    \ can be interested in this protocol.\nAdvantages:\n(i) Strong control of message\
    \ ﬂow on every system\nnode. It uses maps of settled messages and addi-\ntional\
    \ frames that allow to ensure that every\nmessage has been delivered to each transition\
    \ node;\n(ii) It has a transactional model. It allows the control of\nfull completion\
    \ of operations. In case of failure or\ncanceling\noperation,\noperations\nwill\n\
    not\nbe\n8\nJournal of Computer Networks and Communications\ncompleted. It is\
    \ possible because messages can be\nprocessed only after the completion of a transaction.\n\
    Disadvantages:\n(i) It does not have a Pub-Sub model that results in\nusing the\
    \ same way to send messages from pub-\nlishers to subscribers and to send messages\
    \ from\npoint to point;\n(ii) It has increased frame fow. It uses frames to settle\n\
    messages, terminate deliveries, etc. So, it can cause\na decrease in the latency\
    \ of common messages\nbecause of frame transmission and processing.\n4.2. Evaluating\
    \ the Performance of Protocol Implementations\n4.2.1. Evaluating Queue Processing\
    \ Performance. Tere are\ntwo ascending lines, namely RabbitMQ and PahoMQTT\nwith\
    \ Mosquitto broker (see Figure 3). As shown in the graph,\nthe delay for these\
    \ frameworks grows during the whole test.\nTe growth starts at the begging of\
    \ the test. Te peak of delay\nat the end of the test is several seconds. Tis is\
    \ not a good\nresult. Messages are sent more quickly than they can be\ndelivered.\
    \ Te queue is constantly accumulating and the\ntime to receive each packet is\
    \ delayed. Tere is a horizontal\nline. It is FastRTPS. Tis framework demonstrates\
    \ a very\nstable data transmission for this message size. It is the best\nresult.\
    \ Te last one left is GlassFish. Its graph is very similar\nto FastRTPS, but has\
    \ delayed growth in the middle of the\ntest. But the delay decreases in the second\
    \ half of the test. It\ndecreases because messages stop being sent and the queue\n\
    stops being replenished, messages start being processed until\nthey run out. GlassFish\
    \ also has a higher delay than\nFastRTPS but less than 1 second. So, this is a\
    \ good result.\nIn Figure 4, there is a graph of delays for a message size of\n\
    60000 bytes. Tere are three rising lines. Two of them are\nRabbitMQ and PahoMQTT\
    \ with Mosquitto broker. Tey do\nnot change their behavior unlike FastRTPS. Tis\
    \ is a third\nascending line. Te situation is more deplorable than with\nthe other\
    \ two. FastRTPS has the highest delay, which grows\nthrough the tests. Tis may\
    \ be because FastRTPS (Fast-DDS)\nuses UDP for data transmission, which imposes\
    \ a limit on\nthe packet size and the message must be transmitted in\nseveral\
    \ parts if it is larger than 65 kB, which greatly increases\nthe data transfer\
    \ delay of 1 message. GlassFish does not\nchange its behavior. Its delay grows\
    \ until the middle of the\ntest and then decreases. Te delay is also under 1 second,\n\
    which is the best result. Tus, according to the results of the\ntwo subtests,\
    \ GlassFish shows the best stable and fastest\nqueue processing performance.\n\
    4.2.2. Evaluating the Impact of the Number of Nodes on\nPerformance. In Figures\
    \ 5–8, minimum and maximum\ndelay and its mean and interquartile range for a diferent\n\
    number of subscribers can be seen. Also, mean and maxi-\nmum delays are presented\
    \ for each ffth number of sub-\nscribers in Table 2.\nGlassFish has no delay dependence\
    \ on the number of\nsubscribers. Te maximum delay varies and is more than 100\n\
    milliseconds but without dependence. Te mean and the\nmid-spread are less than\
    \ 25 milliseconds. But the IQR\n(interquartile range) is large, and its size is\
    \ about a few\nmilliseconds.\nFastRTPS also has no delay dependence on the number\n\
    of subscribers. Te minimum and maximum are the same\nduring the test. Te delay\
    \ ranges from 1 second or less to\n10–12 milliseconds. Te mean and mid-spread\
    \ have no\ndependence and are in range the from 1 to 4 milliseconds.\nTe IQR is\
    \ less than 1 millisecond.\nPahoMQTT has abnormal jumps of up to 60 and 100\n\
    milliseconds on 15 and 18 subscribers. Te mean and mid-\nspread are less than\
    \ 5 milliseconds. Tere is no delay de-\npendence on the number of subscribers.\
    \ RabbitMQ has\nsimilar results. Tere is one jump up to 50 milliseconds on 18\n\
    time (sec)\nDelay time\njmq_glassfish\nFastRTPS\npaho_mqtt\nRabbitMQ\n7\n6\n5\n\
    4\n3\n2\n1\n0\n0\n1000\n2000\n3000\n4000\n5000\nmessage number\nFigure 3: Delay\
    \ of messages with the size of 50 bytes.\ntime (sec)\nDelay time\n16\n14\n12\n\
    10\n8\n6\n4\n2\n0\njmq_glassfish\nFastRTPS\npaho_mqtt\nRabbitMQ\n0\n1000\n2000\n\
    3000\n4000\n5000\nmessage number\nFigure 4: Delay of messages with the size of\
    \ 60 kB.\nJournal of Computer Networks and Communications\n9\nsubscribers and\
    \ jumps up to 20 milliseconds on several\nnumbers of subscribers. Tere is also\
    \ no delay dependence.\nAccording to the results, no framework has a depen-\n\
    dency on the number of subscribers. Tis means that the\nsoftware processing of\
    \ the queues of these implementations\ntakes quite a short time and does not afect\
    \ the data transfer\ndelay under these conditions. It is a good result because\
    \ data\ntransfer time does not change with the number of sub-\nscribers. In addition,\
    \ GlassFish shows the worst results, with\na mean value of about 10 milliseconds,\
    \ while the maximum\ndelays reach a few hundred milliseconds. Te other three\n\
    have similar means and mid-spreads, but FastRTPS results\nare better. However,\
    \ the maximum delay of FastRTPS is\nworse than RabbitMQ and PahoMQTT, but the\
    \ last two\nhave abnormal unknown delay jumps.\n4.2.3. Evaluating the Impact of\
    \ Message Size on Latency.\nIn this test, message size changes every 100 messages.\
    \ Fig-\nure 9 shows delays for all frameworks at a frequency of 100\nmessages\
    \ per second. Te means and maximums of delays\nfor several message sizes for the\
    \ frameworks are presented in\nTable 3.\nTere is no diference between messages\
    \ on the GlassFish\ngraph. It is as if messages are sent with a static size instead\
    \ of\nincreasing ones. Te delay and its maximum increase and\ndecrease during\
    \ the test. Te maximum delay reaches 100\nmilliseconds. Te mean grows while the\
    \ message size is less\nthan 1 MB. After means are similar, they are about 18\n\
    milliseconds. Tus, GlassFish delay is not dependent on\nmessage size so much.\n\
    FastRTPS graph shows that the frequency of delay jumps\nincreases with message\
    \ size. Tese jumps are repeated when\nthe test is repeated, which indicates that\
    \ they are caused by\nthe testing logic. But for other implementations, there\
    \ are no\nsuch jumps, which can be regarded as unstable operation of\nFastRTPS\
    \ in these conditions. Also, the mean and maximum\ndelay increase with message\
    \ size. Te mean reaches 14.5\ntime (msec)\nDelay time with multiple subscribers\n\
    300\n250\n200\n150\n100\n50\n0\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\
    \ 20\ncount of subscribers\nFigure 5: GlassFish’s delay boxes with diferent subscriber\
    \ counts.\ntime (msec)\nDelay time with multiple subscribers\n12\n10\n8\n6\n4\n\
    2\n0\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\ncount of subscribers\n\
    Figure 6: FastRTPS’s delay boxes with diferent subscriber counts.\ntime (msec)\n\
    Delay time with multiple subscribers\n100\n80\n60\n40\n20\n0\n1 2 3 4 5 6 7 8\
    \ 9 10 11 12 13 14 15 16 17 18 19 20\ncount of subscribers\nFigure 7: Paho + Mosquitto\
    \ MQTT’s delay boxes with diferent\nsubscriber counts.\ntime (msec)\nDelay time\
    \ with multiple subscribers\n50\n40\n30\n20\n10\n0\n1 2 3 4 5 6 7 8 9 10 11 12\
    \ 13 14 15 16 17 18 19 20\ncount of subscribers\nFigure 8: RabbitMQ’s delay boxes\
    \ with diferent subscriber counts.\n10\nJournal of Computer Networks and Communications\n\
    milliseconds and the maximum reaches 65.5 milliseconds at\nthe maximal message\
    \ size. At a message size of 1.5 MB, there\nis an abnormal spike. Te maximum delay\
    \ is 160 millisec-\nonds. Tus, FastRTPS delay depends on message size. It\nincreases\
    \ with size, but it is a linear dependence.\nTe PahoMQTT and RabbitMQ graphs look\
    \ like stairs.\nEach step represents the moment of increase in message size.\n\
    So, the delay of these two frameworks depends on the\nmessage size. Te steps are\
    \ clear while the size is under 1 MB.\nTereafter, the delay becomes more chaotic.\
    \ Tere is an\ninteresting feature: PahoMQTT shows a better result until\nthe message\
    \ size reaches 1 MB. If the message size is greater\nthan 1 MB, the mean of RabbitMQ\
    \ delay is less than the\nPahoMQTT delay. It can be seen in Figure 9 that the\n\
    RabbitMQ graph is under the PahoMQTT graph. But the\nmaximum values of these frameworks\
    \ are quite close. Te\ndiference is a few milliseconds.\nAccording to the results,\
    \ all frameworks have a signifcant\ndelay dependence on message size, except GlassFish.\
    \ But the\nlast one has a very high delay. Te means are the same as\nmaximums,\
    \ for example RabbitMQ. As described earlier, if\nthe message size is less than\
    \ 1 MB, PahoMQTT is better than\nRabbitMQ, otherwise vice versa. FastRTPS delay\
    \ is similar to\nPahoMQTT delay, but has more scatter. Te maximums of\nthe former\
    \ are several times larger than the latter. Tereby,\nRabbitMQ shows the best results.\
    \ GlassFish shows message\nsize-independent results, but with high delays.\n4.2.4.\
    \ Estimation of the Jitter Value and Minimum Delays.\nIn Figures 10 and 11, a\
    \ graph of the delay of the minimum\nmessage size is shown. Tat delay corresponds\
    \ to the\nminimal one because there is no or minimal user data. In\nTable 4, the\
    \ latency, jitter, and RTT for all frameworks are\nshown. As can be seen from\
    \ the graph and table, GlassFish\nhas the highest delay of about 2.5 milliseconds\
    \ with jumps\nover 20 milliseconds. Jitter is also high, at about half a\nmillisecond.\
    \ Tis looks like a bold line on the graph. Tis is a\nbad result, because there\
    \ are no other messages or any large\ndata transmission. So, only one message\
    \ containing protocol\ninformation is processed, and it takes a few milliseconds.\
    \ It is\nalso very unstable, because the delay scatter is about 1\nmillisecond.\
    \ RTTis also high, over 5 milliseconds on a mean.\nTat means that the receiver\
    \ has to wait about 5 milliseconds\nto get a reply from another client. Hence,\
    \ it is also a poor\nresult. FastRTPS has the lowest delay of 300 microseconds\n\
    and jitter of 30 microseconds, which is the best result. But\nthere are jumps\
    \ over 2 milliseconds. Tis is not good and can\nbe critical in some cases. RTT\
    \ is about 2.5 milliseconds on a\nmean. But the maximum of RTT is below the GlassFish\
    \ RTT\nmean, so this again indicates that the GlassFish results are\npoor. PahoMQTT\
    \ + Mosquitto graph is similar to the\nFastRTPS graph. Both of them are thin lines\
    \ in the graph.\nBut PahoMQTT has twice the delay on the mean. Te jitter\nmaximum\
    \ of PahoMQTT is also higher. Te RTT mean of\nPahoMQTT is lower than the mean\
    \ of FastRTPS, but the\nmaximum of the former is higher than the latter. Te\n\
    RabbitMQ graph shows frequent jumps over 2 milliseconds\nwhile the mean is about\
    \ 1 millisecond. Tis is bad because\nthe real mean ranges up to 2 milliseconds\
    \ which is similar to\nGlassFish. Tere are also abnormal jumps of up to 16\nmilliseconds.\
    \ RabbitMQ RTT is about 3 milliseconds which\nis neither good nor bad. But the\
    \ maximum of RTTis up to 20\nmilliseconds, which is also a problem.\nAccording\
    \ to the results, FastRTPS shows the best\nminimal delays that are less than 0.5\
    \ milliseconds. It also has\nthe best jitter value of a few tens of microseconds.\n\
    PahoMQTT with Mosquitto broker also shows good min-\nimal delays and jitter values\
    \ that are very close to those of\nFastRTPS. GlassFish has worse minimal delay\
    \ and jitter\nvalues. RabbitMQ has better results than the previous one,\nbut\
    \ it has a large scatter, which can be seen on the graph.\n4.2.5. Evaluation of\
    \ the Efect of the Number of Interacting\nProcesses in Diferent Conditions on\
    \ Delays. In this test, frst\nof all, we will consider the efect of the frequency\
    \ of sending\nmessages on delays. Figure 12 shows the result for FastRTPS,\nDelay\
    \ time\n160\n140\n120\n100\n80\n60\n40\n20\n0\n0\n100\n200\n300\n400\n500\n600\n\
    700\n800\nmessage number\ntime (msec)\nRabbitMQ\nFastRTPS\npaho_mqtt\njmq_glassfish\n\
    Figure 9: Delay of messages with 100 msgs/sec frequency.\nTable 2: Mean and maximum\
    \ delay with diferent subscriber counts.\nN\nGlassFish (JMS)\nFastRTPS\nPahoMQTT\
    \ client + Mosquitto broker (MQTT)\nRabbitMQ (AMQP)\n1\n13.78/207.6\n1.7/9.4\n\
    2.13/4.39\n1.38/2.62\n5\n9.5/128.86\n1.18/8.85\n1.6/3.32\n1.26/4.55\n10\n8.13/186.0\n\
    0.96/9.22\n1.39/2.62\n1.75/3.7\n15\n12.2/192.4\n1.49/10.11\n2.0/112.94\n1.25/2.7\n\
    20\n14.7/202.8\n1.86/10.2\n2.54/4.83\n1.38/2.82\nEach column contains the mean/max\
    \ value in ms.\nJournal of Computer Networks and Communications\n11\nRabbitMQ,\
    \ and GlassFish. Te results are quite diferent\nsince FastRTPS and RabbitMQ handle\
    \ such a data fow and\ndo not accumulate a queue at any message size. And in the\n\
    case of GlassFish, the queue appears at the smallest message\nsize and varies\
    \ throughout the test in the range from 0 to 14\nmessages. Te queue appears already\
    \ at 400 messages per\nsecond. Tat is, problems with GlassFish already appear\n\
    when transmitting about 1.2 MB per second.\nIn the case of Mosquitto and PahoMQTT,\
    \ the results are\nvery ambiguous, because, at a frequency of more than 400\n\
    messages per second, the delay increases to seconds, as can\nbe replaced in Figure13.\
    \ Tis is due to the long execution of\nthe message receiving function consume_message\
    \ (see Fig-\nure 14). Figure 15 shows a graph of the execution time of the\nread\
    \ function provided by the PahoMQTT library API.\nDue to the execution of the\
    \ message receiving function,\nthe receiving time is set later, since our system\
    \ examines the\ntime when the message is transmitted from the user’s\nsending\
    \ point to the receiving point by another user, and not\nthe time when the message\
    \ is received by the operating\nsystem or the broker, or when the message appears\
    \ in the\nqueue at the destination point. Te time at the beginning of\nthe test\
    \ is about 1 ms, which in the context of a large density\nof received messages\
    \ greatly increases the queue and reduces\nthe data transfer rate. Te testing\
    \ system does not afect these\ndelays in any way, but only created conditions\
    \ under which\nthis implementation shows a terrible result.\nWe can calculate\
    \ the amount of data transmitted at a\nfrequency of 1000 messages per second on\
    \ the last 300\nmessages, where the payload size reaches the maximum (see\nequation\
    \ (1)).\nBandwidth \x1F 1.8 MB · 1000 msgs\nsec\n\x1F 1.8 GB\nsec .\n(1)\nFastRTPS\
    \ and RabbitMQ cope with this load, although\nthe delays vary, and in the case\
    \ of FastRTPS, it is no more\nthan 8 ms, and in the case of RabbitMQ, it is no\
    \ more than\n30 ms. Te rest of the implementations cannot withstand this\nload\
    \ and do not have time to process the queue, although all\nimplementations run\
    \ in a loop with an interval of 1 ms. Tat\nis, checking for new data with an interval\
    \ of 1 ms, which in\nthe worst case will give an additional delay of 1 ms. Tis\
    \ can\nhappen if the message is located in the recipient exactly after\nthe end\
    \ of the check for the presence of the message. Tis\ninterval was chosen to reduce\
    \ the load on the CPU.\nGlassFish simply does not have time to transmit and\n\
    process such a data stream, and in the case of MQTT, the\nreasons for the long\
    \ wait to receive data have not been\ninvestigated, but may be related to the\
    \ load on the broker or\nthe long processing of data on the client. It is worth\
    \ noting\nthat these results may not apply to any situation where\nmessages are\
    \ transmitted with a given frequency and a given\nmessage size, but rather to\
    \ this particular test scenario in\nwhich complex conditions are recreated.\n\
    Delay time\n16\n14\n12\n10\n8\n6\n4\n2\n0\n0\n2000\n4000\n6000\n8000\n10000\n\
    message number\ntime (msec)\nRabbitMQ\nFastRTPS\nFigure 10: FastRTPS’s and RabbitMQ’s\
    \ delay of minimum mes-\nsage size.\nDelay time\n35\n30\n25\n20\n15\n10\n5\n0\n\
    0\n2000\n4000\n6000\n8000\n10000\nmessage number\ntime (msec)\npaho_mqtt\njmq_glassﬁsh\n\
    Figure 11: GlassFish’s and Paho + Mosquitto MQTT’s delay of\nminimum message size.\n\
    Table 3: Mean and maximum delay with diferent message sizes.\nImplementation\n\
    128 B\n524 kB\n1 MB\n1.5 MB\n1.8 MB\nGlassFish (JMS)\n9.40/47.8\n14.45/90.16\n\
    18.86/88.22\n17.14/44.67\n17.70/69.96\nFastRTPS\n0.57/25.54\n6.49/29.03\n10.18/31.37\n\
    29.66/161.97\n14.57/65.64\nPahoMQTT client + Mosquitto broker (MQTT)\n0.64/5.49\n\
    5.83/13.74\n11.35/17.77\n11.34/21.57\n14.53/23.07\nRabbitMQ (AMQP)\n1.40/6.85\n\
    7.09/13.30\n8.09/15.63\n11.65/18.89\n8.25/21.48\nMean/max latency values are in\
    \ ms for messages of diferent sizes.\n12\nJournal of Computer Networks and Communications\n\
    Next, the dependence of RTT on the number of pairs of\ninteracting processes is\
    \ considered. All pairs are identical\nand do not have any priority of data transmission\
    \ in\ncomparison with each other. From the test, we want to\nconsider the behavior\
    \ of diferent pairs of processes and the\nefect of the number of pairs on delays.\
    \ Te frequency of\nsending messages is 400 messages per second, which gives a\n\
    fairly large data stream, but this does not create conditions to\naccumulate a\
    \ huge queue for each of the considered\nimplementations.\nFigure 16 shows the\
    \ RTT graph for FastRTPS with three\npairs of interacting processes. Te jumps\
    \ on the charts are\nparticularly noticeable in the area of every 300 messages,\n\
    since it is with this frequency that the message size increases.\nJumps are associated\
    \ with the reallocation of memory for the\nbufer, which creates additional delays.\
    \ Te RTTtime for any\nmessage size does not exceed 6 ms, with the greatest delays\n\
    being achieved in the middle of the test with a message size\nof 0.7 MB. By the\
    \ end of sending data of a certain size, the\ndelays are reduced. Tis phenomenon\
    \ can be explained by\nthe fact that when the message size changes, a small queue\
    \ of\nseveral messages appears, which adds a signifcant part of the\nRTT, and\
    \ by the end of sending the next 300 messages, the\nqueue goes away and the delays\
    \ fall to their real values. At the\nend of the test, the delay is less than in\
    \ the middle, since there\nTable 4: Latency, jitter, and RTT of minimum message\
    \ size.\nImplementation\nLatency\nJitter\nRTT\nGlassFish (JMS)\n2.62/37.26\n0.57/34.64\n\
    5.25/73.49\nFastRTPS\n0.30/2.60\n0.03/2.30\n2.67/5.15\nPahoMQTT client + Mosquitto\
    \ broker (MQTT)\n0.63/3.11\n0.039/2.48\n2.45/8.42\nRabbitMQ (AMQP)\n0.96/15.79\n\
    0.10/14.83\n3.11/19.41\nMean/max latency, jitter, and RTT values are in ms.\n\
    Delay time\n175\n150\n125\n100\n75\n50\n25\n0\n0\n500\n1000\n1500\n2000\n2500\n\
    message number\ntime (msec)\nRabbitMQ\nFastRTPS\njmq_glassﬁsh\nFigure 12: FastRTPS’s,\
    \ RabbitMQ’s, GlassFish’s latency with a\nfrequency of 1000 messages per second\
    \ and diferent message sizes.\ntime (sec)\npaho_mqtt: Delay time\n3.5\n3.0\n2.5\n\
    2.0\n1.5\n1.0\n0.5\n0\n500\n1000\n1500\n2000\n2500\nmessage number\nFigure 13:\
    \ PahoMQTT’s latency with a frequency of 1000 messages\nper second and diferent\
    \ message sizes.\nauto\nauto\nunsigned long\nstart_timestamp = duration_cast<nanoseconds>\n\
    (high_resolution_clock : : now ( ) . time_since_epoch ( ) ) . count ( ) ;\n(high_resolution_clock\
    \ : : now ( ) . time_since_epoch ( ) ) . count ( ) - start_timestamp ;\nmsg =\
    \ _client_sub . consume_message ( ) ;\nproc_time = duration_cast<nanoseconds>\n\
    Figure 14: Measuring the execution time of the PahoMQTT library\nread function.\n\
    time (msec)\nReading time\n25\n20\n15\n10\n5\n0\n0\n500\n1000\n1500\n2000\n2500\n\
    message number\nFigure 15: PahoMQTT’s data processing time.\nJournal of Computer\
    \ Networks and Communications\n13\nis no queue and new messages stop being sent,\
    \ which re-\nduces RTT.\nWhen studying the infuence of the number of pairs,\n\
    there is no obvious dependence, but with a large number of\ninteracting processes,\
    \ the maximum RTT value in some\ncases increases. Tese maximum values are not\
    \ repeated\nfrom test to test and are random, with a random message\nsize. As\
    \ shown for three pairs, the RTT graphs overlap each\nother, which shows the uniform\
    \ distribution of library re-\nsources between processes. Tis is a good indicator,\
    \ as it is a\nsign of the predictability of delays, which is very important\n\
    for real-time systems. It is very important to evenly dis-\ntribute resources\
    \ between equal priority data transmission\nchannels because there is no need\
    \ to think about the fact that\nany node in the network will take part of the\
    \ resources for\ndata transmission. Tere will be no need to reduce the\namount\
    \ of data transmitted over one channel in favor of\nanother. Te only exception\
    \ to think about is limited\nbandwidth.\nAnalyzing the results of GlassFish, a\
    \ direct relationship\nbetween the number of pairs and RTT is seen, since the\n\
    delays when two pairs of processes work simultaneously\nincrease by about two\
    \ times, and when adding another pair\ntime (msec)\nFastRTPS: Round Trip Time\n\
    10\n1\n2\n0\n8\n6\n4\n2\n0\n0\n200\n400\n600\n800\n1000\n1200\nmessage number\n\
    Figure 16: FastRTPS’s RTT with three communicating process\npairs.\ntime (sec)\n\
    jmq_glassﬁsh: Round Trip Time\n2.00\n1.75\n1.50\n1.25\n1.00\n0.75\n0.50\n0.25\n\
    0.00\n1\n2\n0\n0\n100\n200\n300\n400\n500\n600\n700\n800\nmessage number\nFigure\
    \ 17: GlassFish’s RTT with three communicating process\npairs.\ntime (sec)\npaho_mqtt:\
    \ Round Trip Time\n140\n1\n2\n0\n120\n100\n80\n40\n20\n60\n0\n0\n200\n400\n600\n\
    800\n1000\n1200\nmessage number\nFigure 18: PahoMQTT + Mosquitto broker RTT with\
    \ three\ncommunicating process pairs.\ntime (msec)\nRabbitMQ: Round Trip Time\n\
    140\n120\n100\n80\n40\n20\n60\n0\n0\n200\n100\n400\n300\n600\n500\n800\n700\n\
    message number\n1\n2\n0\nFigure 19: RabbitMQ’s RTT with three communicating process\n\
    pairs.\n14\nJournal of Computer Networks and Communications\nof RTT increases\
    \ to the order of seconds (see Figure 17). In\nthis case, the behavior of the\
    \ pairs is very similar, although\nthe RTT value of each pair is not as close\
    \ as in the case of\nFastRTPS. Tis software solution cannot cope with the load\n\
    of one pair of interacting processes, and as the number of\nprocesses increases,\
    \ the load increases many times and the\nqueue quickly accumulates.\nTe results\
    \ of PahoMQTT with Mosquitto are similar,\nwith an increase in the number of pairs,\
    \ this solution does\nnot cope, and already with two pairs of interacting processes,\n\
    RTT reaches the order of seconds. Figure 18 shows a graph\nfor three pairs, where\
    \ with a large message size, RTTreaches\nhundreds of seconds.\nTe behavior of\
    \ these two implementations does not\nmeet the requirements of real-time systems.\n\
    RabbitMQ, in turn, showed similar FastRTPS results\nwith random outliers and the\
    \ same behavior of process pairs,\nbut a noticeable increase in latency from one\
    \ case to three,\nwhich can also be seen in Figure 19.\n4.2.6. Investigation of\
    \ Delays in Artifcially Fixing the Message\nQueue. Consider the case of sending\
    \ messages of 10 bytes\nwithout an interval with the maximum possible frequency,\n\
    but we limit the queue to 50 messages. First, the state of the\nqueue during the\
    \ test was considered. As a result, FastRTPS\nkept the queue state at the level\
    \ of 50 messages almost\nthroughout the entire test, but there were rare single\
    \ jumps\nwhen the queue was empty and abruptly accumulated back.\nTe state of\
    \ the GlassFish queue turned out to be quite\nunstable and constantly fuctuated\
    \ from a few messages to\n50, similar to RabbitMQ, but in the range from 0 to\
    \ 30\nmessages. Tis situation is explained by the fact that the\nqueue is calculated\
    \ based on the diference between the\nnumber of messages sent and the number of\
    \ messages re-\nceived, and it takes time to transmit a response message. In\n\
    addition, the check for new messages occurs at intervals of\n1 ms, which also\
    \ gives time to process the queue.\nIn the case of PahoMQTTwith Mosquitto, the\
    \ queue did\nnot rise more than six messages and did not have time to\naccumulate,\
    \ because one node did not have time to send data\nwith sufcient frequency. Tis\
    \ is also because this imple-\nmentation waits for the message delivery information\
    \ to be\nreceived before sending a new one. Terefore, this solution\ndoes not\
    \ make sense to compare with the others, since it is in\ndiferent conditions.\
    \ But when testing the case without\nwaiting for this information, the queue jumps\
    \ in the range\nfrom 0 to 35 messages and the delay does not exceed 2 ms,\nand\
    \ the mean delay value was 0.5 ms. Tis result is the best\namong all the studied\
    \ implementations.\nFigure 20 shows the delays of each implementation, as\nthe\
    \ result of FastRTPS showed the best result with a delay of\nabout 6 ms, GlassFish\
    \ showed a huge spread of values, and if\nwe consider the peak delay and the state\
    \ of the queue of 50\nmessages, it turns out that it took 120 ms to deliver 50\
    \ small\nmessages, which is a terrible indicator. RabbitMQ turned out\nto be worse\
    \ and not as stable as FastRTPS; on average, the\ndelay of this implementation\
    \ was less than 10 ms with a\nqueue state of less than 30 messages. With a smaller\
    \ queue,\nthe delays were greater than those of FastRTPS.\n4.3.ResultComparison.\
    \ A lot of papers have pointed out that\nDDS is the best solution for real-time\
    \ data transmission. Te\nauthors of [26] compared popular protocols based on the-\n\
    oretical information. Tey concluded that the problem of\ntransferring data many\
    \ to many in real-time DDS is the best\nsolution.\nTe authors of [14] showed that\
    \ DDS is one of the leaders\nin delivery performance. Teir result for DDS at payload\
    \ size\n2 B coincides with our result obtained in the fourth scenario\n(Section\
    \ 4.2.4). Tere is a diference of 2 milliseconds be-\ncause in our experimental\
    \ setup each node performs an\nincoming message check only once every 1 millisecond.\n\
    Terefore, the additional delay is up to 2 milliseconds for\nRTT.\nA comparison\
    \ of protocols using the Anglova scenario\nwas conducted in [27]. Te results show\
    \ that the DDS\nimplemented with OpenDDS has a lower latency and jitter\ncompared\
    \ to RabbitMQ and ZeroMQ.\nA comparison of FastRTPS and ROS-MQTT was made\nin\
    \ [28]. Te results show that the average FastRTPS latency\nfor an empty message\
    \ is 620 microseconds. Tis is close to\nour result in the third scenario (Section\
    \ 4.2.3), where\nFastRTPS has an average latency of 570 microseconds for a\n128\
    \ B message size. But the other results do not match\nbecause the authors are\
    \ experimenting on a more complex\narchitecture with networked data transmission,\
    \ while our\nscenarios are run on a single machine. Tis is also true for the\n\
    MQTT results. But overall, results show that FastRTPS has\nan advantage over MQTT\
    \ which is coincident with our\nresults.\nTe authors of [29] compared the popular\
    \ protocols in\nterms of performance in eHealth solutions. Tey considered\nprotocols\
    \ from a diferent angle, but the results coincide with\nours: DDS is the best\
    \ solution. Te graph where the sampling\nrate is 1000 coincides with the results\
    \ obtained in the ffth\nFastRTPS\nRabbitMQ\njmq_glassfish\npaho_mqtt\ntime (msec)\n\
    Delay time\n120\n100\n80\n60\n40\n20\n0\n0\n2000\n4000\n6000\n8000\n10000\nmessage\
    \ number\nFigure 20: Te delay time in the case of a limited queue.\nJournal of\
    \ Computer Networks and Communications\n15\nscenario (Section 4.2.5). Tere are\
    \ many diﬀerences in the\nspeciﬁc values, because the experimental setups are\
    \ very\ndiﬀerent. But, in general, the results are the same: DDS\nshowed the best\
    \ latency, followed by AMQP, then JMS, and\nﬁnally MQTT, which showed a very poor\
    \ latency. Te au-\nthors have summarized their results in a comparative table\n\
    with the strengths and weaknesses of each protocol. But in\nthis table, JMS has\
    \ strong points such as “low latency” and\n“suitable for real-time applications.”\
    \ Tis looks very strange,\nbecause DDS does not have “low latency” in the strengths,\n\
    but has lower latency in the results, and AMQP has “not\nsuitable for real-time\
    \ applications” in the weaknesses, but\nthe results show that AMQP is the same\
    \ or better than JMS.\nAn analysis of MQTT, CoAP, and XMPP was performed in\n\
    [30]. In this study, real data, such as temperature, humidity,\nand light, were\
    \ sent 100 times for each protocol. Te results\nshow that the average delay of\
    \ MQTT is about 589 micro-\nseconds. Tis is better than the average delay of CoAP\
    \ (821\nmicroseconds) and XMPP (41 milliseconds). Since the tem-\nperature, humidity,\
    \ and light data are lightweight and the\ntransmission was in one direction, the\
    \ MQTTresult is the same\nas the results obtained in the third scenario (Section\
    \ 4.2.3): 640\nmicroseconds for MQTT with a message size of 128B.\nTe MQTTresult\
    \ in the third scenario is also the same as\nthe result from [31], where MQTT\
    \ has a latency of 1 to 1.5\nmilliseconds. Te diﬀerence of two times may be caused\
    \ by\nthe packet transmission time over the network, in contrast to\nour experimental\
    \ setup where all components (publisher,\nbroker, and subscriber) are placed on\
    \ the same machine.\nTere are a lot of comparisons between AMQP and\nMQTT. In\
    \ [32], the authors compared the RTT of AMQP\nand MQTT. Te results show that MQTT\
    \ is slightly better\nthan AMQP: the RTT of AMQP is about 700 microseconds\nand\
    \ the RTT of MQTT is about 500 microseconds. Tis\ncoincides with the RTT results\
    \ from the fourth scenario\n(Section 4.2.4). Te diﬀerence of a few milliseconds\
    \ is\nexplained by the fact that in our experimental setup all\nreceiving nodes\
    \ work in a 1-millisecond wait cycle, which\ncauses an additional delay of up\
    \ to 2 milliseconds in this\nscenario. Other small time diﬀerences may be caused\
    \ by the\noperating system or diﬀerent versions of the frameworks.\nIn [33], the\
    \ authors also compare the RTT for AMQP\nand MQTT and show that AMQP is better\
    \ in most cases.\nMost measured values for AMQP and MQTT range from 2\nmilliseconds\
    \ to 6 milliseconds. Tese results are matched by\nour results for the fourth scenario\
    \ (Section 4.2.4). But in our\nresults, MQTT is slightly better than AMQP, in\
    \ contrast to\nthe conclusion in [33]. Te cause for this may be that the\nauthors\
    \ used the Python programming language, the\nRaspberry PI, or the pika library\
    \ for the AMQP broker.\nIn [34], the authors show that AMQP and MQTT have\nthe\
    \ same delay (MQTT is slightly better). Since the authors\ndid not provide a detailed\
    \ description of the test scenario, it\nis diﬃcult to compare with our results,\
    \ but it is similar to the\nresults of the third scenario (Section 4.2.3), where\
    \ AMQP\nand MQTT have similar delays for message sizes up to 1 MB.\nIn [35], AMQP\
    \ and MQTT delays were compared for\ndiﬀerent scenarios: sending data from weather\
    \ sensors and\nsending data from city cameras. Te results show that for\nscenarios\
    \ with sensors, MQTT has a lower delay (less than 1\nmillisecond) than AMQP. Since\
    \ sensor data are lightweight,\nthis is coincident with the results obtained in\
    \ the third\nscenario (Section 4.2.3) with a message size of 128 B, where\nMQTT\
    \ has an average delay of 640 microseconds. But for the\nscenario with cameras,\
    \ the result is reversed, with AMQP\nhaving a lower delay (less than 13 milliseconds).\
    \ Tis is also\ncoincident with the results obtained in the third scenario\n(Section\
    \ 4.2.3): as the message size increases, MQTT shows\nhigher latency compared to\
    \ AMQP.\nTe authors of [36] also concluded that MQTT is better\nsuited for small\
    \ message sizes. Teir results show that MQTT\nhas lower latency (from 400 microseconds\
    \ to 500 micro-\nseconds) than AMQP (from 800 microseconds to 1100\nmicroseconds)\
    \ for message sizes up to 4096 B. Tis is\nmatched by our results obtained in the\
    \ third scenario\n(Section 4.2.3) with a message size of 128 B. Te latency in\n\
    our results is higher because the network speed is less than\n1 GB/s and the broker\
    \ has lower system characteristics. Te\nauthors also experimented a 5000-message\
    \ sending rate and\nmessage size of 64 B. Tis is very close to the ﬁrst scenario,\n\
    where messages are sent without intervals. Te results are\nmatched: latency increases\
    \ throughout the scenario.\n5. Conclusions\nDescribed protocols are diﬀerent in\
    \ initial purposes. JMS is a\nsimple standard for messaging in Java programs,\
    \ that does\nnot specify messaging mechanics. MQTT and AMQP are\nprotocols for\
    \ messaging using queues that diﬀer in some\ndetails. RTPS has a purpose to make\
    \ real-time messaging\navailable to its users by having more strict rules. For\
    \ real-\ntime systems, the best protocols are MQTT and RTPS.\nMQTTis good at transmitting\
    \ small messages, while RTPS is\na more versatile and ﬂexible protocol with more\
    \ options for\nchanging the QoS.\nTe article presents a methodology that allows\
    \ to in-\nvestigate the software delays of solutions in various con-\nditions,\
    \ but the conditions of the study have limitations:\n(i) Te interval for checking\
    \ new messages is 1 ms,\nwhich in the worst case can give an error of 1 ms;\n\
    (ii) Testing was carried out on a single machine using\nnetwork data transfer\
    \ protocols, but minimizing the\nimpact of network delays. Tus, it is assumed\
    \ that\nthe network is stable, although the instability of the\nnetwork can greatly\
    \ aﬀect the result [37];\n(iii) Te test from Section 3.1.2 uses a fairly small\n\
    number of simultaneously running subscribers;\n(iv) All tests are aimed at investigating\
    \ the delays in-\ntroduced by the middleware;\n(v) In the developed methodology,\
    \ nonstandard be-\nhavior of nodes was stimulated, for example in-\ncreasing the\
    \ size of transmitted data during one test,\nwhich is not typical.\nConsidering\
    \ the results, GlassFish is the best solution for\nmessage sending without intervals.\
    \ It can be used in systems\n16\nJournal of Computer Networks and Communications\n\
    with a lot of messages, where other solutions will be too slow.\nBut in all other\
    \ cases, it has the worst results and cannot\ncompete with other solutions.\n\
    Paho is very good at transferring messages of minimum\nsize. It could be a good\
    \ solution for systems with very small\nmessages, such as commands that can be\
    \ presented as few\nbytes.\nRabbitMQ is one of the fastest solutions. It shows\
    \ itself\ngood in all cases, except in sending messages without an\ninterval.\
    \ RabbitMQ is the best at sending messages with a big\nsize and with multiple\
    \ subscribers.\nFastRTPS is almost the best solution. Tere is only one\nproblem—message\
    \ processing without an interval between\nsending messages. FastRTPS has the most\
    \ stable delays\nwhich makes it predictable. It is very important in real-time\n\
    systems.\nIn IoT systems almost all investigated cases are pre-\nsented. RabbitMQ\
    \ and FastRTPS are good in most cases and\nshould be considered ﬁrstly. RabbitMQ\
    \ should be used in\nsystems with big messages and a lot of consumers of the\n\
    same data. FastRTPS should be used in real-time systems,\nwhere delays have low\
    \ jitter and are bounded by a constant\nvalue. Te usage of GlassFish and Paho\
    \ is more limited. Tey\nshould be used only in special cases, such as too frequent\n\
    message sending and low-size data transferring.\nWhen building a system with various\
    \ data, which in-\ncludes both small command messages and large amounts of\ndata\
    \ from sensors, cameras, etc., the RTPS protocol shows\nitself in the best way.\
    \ But none of the software solutions\nconsidered by us provides guarantees of\
    \ delivery in iso-\nchronous mode, and in all cases, in certain situations, there\n\
    are unpredictable jumps and the accompanying growth of\nthe message queue. To\
    \ provide real guarantees, it is necessary\nto use link-layer protocols that provide\
    \ appropriate capa-\nbilities and guarantees, since the application layer is highly\n\
    dependent on external factors.\nData Availability\nNo data were used to support\
    \ this study.\nConflicts of Interest\nTe authors declare that they have no conﬂicts\
    \ of interest.\nAcknowledgments\nTis research was funded by the “Development Program\
    \ of\nETU “LETI” within the Framework of the Program of\nStrategic Academic Leadership”\
    \ Priority-2030 No 075-15-\n2021-1318 on 29 September 2021.\nReferences\n[1] W.\
    \ Raﬁque, L. Qi, I. Yaqoob, M. Imran, R. U. Rasool, and\nW. Dou, “Complementing\
    \ IoT services through software\ndeﬁned networking and edge computing: a comprehensive\n\
    survey,” IEEE Communications Surveys & Tutorials, vol. 22,\npp. 1761–1804, 2020.\n\
    [2] I. McAteer, M. I. Malik, Z. Baig, and P. Hannay, “Security\nvulnerabilities\
    \ and cyber threat analysis of the AMQP pro-\ntocol for the internet of things,”\
    \ in Proceedings of the 15th\nAustralian Information Security Management Conference,\n\
    pp. 70–80, Perth, Western Australia, 2017.\n[3] S. Andy, B. Rahardjo, and B. Hanindhito,\
    \ “Attack scenarios\nand security analysis of MQTT communication protocol in\n\
    IoT system,” in Proceedings of the 2017 4th International\nConference on Electrical\
    \ Engineering, Computer Science and\nInformatics (EECSI), pp. 1–6, Yogyakarta,\
    \ Indonesia, 2017.\n[4] M. S. Harsha, B. M. Bhavani, and K. R. Kundhavai, “Analysis\n\
    of vulnerabilities in MQTT security using Shodan API and\nimplementation of its\
    \ countermeasures via authentication\nand ACLs,” in Proceedings of the 2018 International\
    \ Confer-\nence on Advances in Computing, Communications and In-\nformatics (ICACCI),\
    \ pp. 2244–2250, Bangalore, India, 2018.\n[5] A. Mileva, A. Velinov, L. Hartmann,\
    \ S. Wendzel, and\nW. Mazurczyk, “Comprehensive analysis of MQTT 5.0 sus-\nceptibility\
    \ to network covert channels,” Computers & Security,\nvol. 104, Article ID 102207,\
    \ 2021.\n[6] C. A. Garcia, J. E. Naranjo, and M. V. Garcia, “Analysis of\nAMQP\
    \ for industrial internet of things based on low-cost\nautomation,” Smart Innovation,\
    \ Systems and Technologies,\nvol. 201, pp. 235–244, 2019.\n[7] M.\nCollina,\n\
    M.\nBartolucci,\nA.\nVanelli-Coralli,\nand\nG. E. Corazza, “Internet of Tings\
    \ application layer protocol\nanalysis over error and delay prone links,” in Proceedings\
    \ of\nthe 2014 7th Advanced Satellite Multimedia Systems Confer-\nence and the\
    \ 13th Signal Processing for Space Communications\nWorkshop (ASMS/SPSC), pp. 398–404,\
    \ Livorno, Italy, 2014.\n[8] P. Benedick, J. Robert, Y. Le Traon, and S. Kubler,\
    \ “O-MI/O-\nDF vs. MQTT: a performance analysis,” in Proceedings of the\n2018\n\
    IEEE\nIndustrial\nCyber-Physical\nSystems\n(ICPS),\npp. 153–158, St. Petersburg,\
    \ Russia, 2018.\n[9] S. Chouali, A. Boukerche, and A. Mostefaoui, “Towards a\n\
    formal analysis of MQtt protocol in the context of commu-\nnicating vehicles,”\
    \ in Proceedings of the 15th ACM Interna-\ntional Symposium on Mobility Management\
    \ and Wireless\nAccess (MobiWac’17), pp. 129–136, Miami, FL, USA, 2017.\n[10]\
    \ S. Lee, H. Kim, D. Hong, and H. Ju, “Correlation analysis of\nMQTT loss and\
    \ delay according to QoS level,” in Proceedings\nof the International Conference\
    \ on Information Networking\n2013 (ICOIN), pp. 714–717, Bangkok, Tailand, 2013.\n\
    [11] N. Naik, “Choice of eﬀective messaging protocols for IoT\nsystems: MQTT,\
    \ CoAP, AMQP and HTTP,” in Proceedings of\nthe 2017 IEEE International Systems\
    \ Engineering Symposium\n(ISSE), pp. 1–7, Vienna, Austria, 2017.\n[12] R. Sanika,\
    \ “Performance comparison of message queue\nmethods,” UNLV Teses, Dissertations,\
    \ Professional Papers,\nand Capstones, University of Nevada, Las Vegas, NV, USA,\n\
    2019.\n[13] E. Nilsson and V. Preg´en, “Performance evaluation of mes-\nsage-oriented\
    \ middleware,” Dissertation, KTH Royal Institute\nof Technology, Stockholm, Sweden,\
    \ 2020.\n[14] S. Profanter, A. Tekat, K. Dorofeev, M. Rickert, and A. Knoll,\n\
    “OPC UA versus ROS, DDS, and MQTT: performance\nevaluation of industry 4.0 protocols,”\
    \ in Proceedings of the\n2019 IEEE International Conference on Industrial Technology\n\
    (ICIT), pp. 955–962, Melbourne, Australia, 2019.\n[15] G. Pardo-Castellote, “OMG\
    \ data-distribution service: archi-\ntectural overview,” in Proceedings of the\
    \ 23rd International\nConference on Distributed Computing Systems Workshops,\n\
    Providence, RI, USA, 2003.\nJournal of Computer Networks and Communications\n\
    17\n[16] T. White, M. N. Johnstone, and M. Peacock, “An investigation\ninto some\
    \ security issues in the DDS messaging protocol,” in\nProceedings of the 15th\
    \ Australian Information Security\nManagement Conference, pp. 132–139, Perth,\
    \ Australia, 2017.\n[17] M. J. Michaud, T. Dean, and S. P. Leblanc, “Attacking\
    \ OMG\ndata distribution service (DDS) based real-time mission\ncritical distributed\
    \ systems,” in Proceedings of the 2018 13th\ninternational Conference on Malicious\
    \ and Unwanted software\n(MALWARE), pp. 68–77, Nantucket, MA, USA, 2018.\n[18]\
    \ A. Gavrilov, M. Bergaliyev, S. Tinyakov, and K. Krinkin,\n“Industrial messaging\
    \ middleware: standards and perfor-\nmance evaluation,” in Proceedings of the\
    \ 2020 IEEE 14th\nInternational Conference on Application of Information and\n\
    Communication Technologies (AICT), Tashkent, Uzbekistan,\nOctober 2020.\n[19]\
    \ K. Krinkin, A. Filatov, A. Filatov, O. Kurishev, and\nA. Lyanguzov, “Data distribution\
    \ services performance\nevaluation framework,” in Proceedings of the 2018 22nd\n\
    Conference\nof\nOpen\nInnovations\nAssociation\n(FRUCT),\nJyvaskyla, Finland,\
    \ May 2018.\n[20] XMPP Standards Foundation, XEP-0184: Message Delivery\nReceipts,\
    \ Version 1.4.0 (2018-08-02). Extensible Messaging and\nPresence Protocol, XMPP\
    \ Standards Foundation, Parker, CO,\nUSA, 2018.\n[21] “Eprosima Performance,”\
    \ http://www.eprosima.com/index.\nphp/resources-all/performance/.\n[22] V. M.\
    \ Ionescu, “Te analysis of the performance of RabbitMQ\nand ActiveMQ,” in Proceedings\
    \ of the 2015 14th RoEduNet\nInternational Conference–Networking in Education\
    \ and Re-\nsearch (RoEduNet NER), pp. 132–137, Craiova, Romania,\n2015.\n[23]\
    \ P. Dobbelaere and K. S. Esmaili, “Kafka versus RabbitMQ: a\ncomparative study\
    \ of two industry reference publish/sub-\nscribe implementations: industry paper,”\
    \ in Proceedings of the\n11th ACM International Conference on Distributed and\
    \ Event-\nbased Systems (DEBS’17), pp. 227–238, New York, NY, USA,\n2017.\n[24]\
    \ B. Mishra and B. Mishra, “Evaluating and analyzing MQTT\nbrokers with stress-testing,”\
    \ in Proceedings of the (CS)2-12th\nConference of PhD Students in Computer Science\
    \ at: University\nof Szeged, Szeged, Hungary, 2020.\n[25] B. Mishra, “Performance\
    \ evaluation of MQTT broker\nservers,” Computational Science and Its Applications–ICCSA\n\
    2018, vol. 10963, pp. 599–609, 2018.\n[26] S. Seleznev and V. Yakovlev, “Industrial\
    \ application archi-\ntecture IoT and protocols AMQP, MQTT, JMS, REST, CoAP,\n\
    XMPP, DDS,” International Journal of Open Information\nTechnologies, vol. 7, no.\
    \ 5, pp. 17–28, 2019.\n[27] N. Suri, “Experimental evaluation of Group communications\n\
    protocols for tactical data dissemination,” in Proceedings of\nthe MILCOM 2018-2018\
    \ IEEE Military Communications\nConference (MILCOM), pp. 133–139, Los Angeles,\
    \ CA, USA,\n2018.\n[28] A. Mokhtarian, A. Kampmann, M. Lueer, S. Kowalewski, and\n\
    B. Alrifaee, “A cloud architecture for networked and au-\ntonomous vehicles,”\
    \ IFAC-PapersOnLine, vol. 54, pp. 233–\n239, 2021, 2.\n[29] A.\nTalaminos-Barroso,\n\
    M.\nA.\nEstudillo-Valderrama,\nL. M. Roa, J. Reina-Tosina, and F. Ortega-Ruiz,\
    \ “A machine-\nto-machine protocol benchmark for eHealth applications–use\ncase:\
    \ respiratory rehabilitation,” Computer Methods and\nPrograms in Biomedicine,\
    \ vol. 129, pp. 1–11, 2016.\n[30] B. H. Çorak, F. Y. Okay, M. G¨uzel, S. Murt,\
    \ and S. Ozdemir,\n“Comparative analysis of IoT communication protocols,” in\n\
    Proceedings of the 2018 international Symposium on networks,\nComputer and Communications,\
    \ pp. 1–6, Rome, Italy, 2018.\n[31] M. Iglesias-Urkia, A. Orive, M. Barcelo, A.\
    \ Moran, J. Bilbao,\nand A. Urbieta, “Towards a lightweight protocol for industry\n\
    4.0: an implementation based benchmark,” in Proceedings of\nthe 2017 IEEE international\
    \ Workshop of Electronics, control,\nMeasurement, Signals and their Application\
    \ to Mechatronics\n(ECMSM), Donostia, Spain, May 2017.\n[32] D. Yoshino, Y. Watanobe,\
    \ and K. Naruse, “A highly reliable\ncommunication system for internet of robotic\
    \ things and\nimplementation in RT-middleware with AMQP communi-\ncation interfaces,”\
    \ IEEE Access, vol. 9, pp. 167229–167241,\n2021.\n[33] N. Q. Uy and V. H. Nam,\
    \ “A comparison of AMQP and\nMQTT protocols for internet of things,” in Proceedings\
    \ of the\n2019 6th NAFOSTED Conference on Information and Com-\nputer Science\
    \ (NICS), pp. 292–297, Hanoi, Vietnam, 2019.\n[34] F. Zujie and K. JaeSoo, “Transmission\
    \ performance com-\nparison and analysis with diﬀerent publish/subscribe proto-\n\
    col,” in Proceedings of the Korean Society of Computer\nInformation Conference,\
    \ pp. 77–80, Seoul, South Korea, 2020.\n[35] D. Happ, N. Karowski, T. Menzel,\
    \ V. Handziski, and\nA. Wolisz, “Meeting IoT platform requirements with open\n\
    pub/sub solutions,” Annales Des Telecommunications, vol. 72,\nno. 1-2, pp. 41–52,\
    \ 2017.\n[36] P. Sommer, F. Schellroth, M. Fischer, and J. Schlechtendahl,\n“Message-oriented\
    \ middleware for industrial production\nsystems,” in Proceedings of the 2018 IEEE\
    \ 14th International\nConference on Automation Science and Engineering (CASE),\n\
    pp. 1217–1223, Munich, Germany, 2018.\n[37] D. Tangavel, X. Ma, A. Valera, H.\
    \ X. Tan, and C. K. Y. Tan,\n“Performance evaluation of MQTT and CoAP via a common\n\
    middleware,” in Proceedings of the 2014 IEEE Ninth Inter-\nnational Conference\
    \ on Intelligent Sensors, Sensor Networks\nand Information Processing (ISSNIP),\
    \ Singapore, 2014.\n18\nJournal of Computer Networks and Communications\n"
  inline_citation: '>'
  journal: Journal of computer networks and communications (Print)
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/jcnc/2022/7368691.pdf
  publication_year: 2022
  relevance_evaluation:
    extract_1: MQTT and RTPS are both suitable for real-time data transmission in
      IoT systems, but they have different strengths and weaknesses.
    extract_2: In general, MQTT is a better choice for applications that require low
      latency and high throughput, while RTPS is a better choice for applications
      that require high reliability and low latency.
    relevance_score: 0.9
  relevance_score: 0.9000000357627869
  relevance_score1: 0
  relevance_score2: 0
  title: 'Using IoT Protocols in Real-Time Systems: Protocol Analysis and Evaluation
    of Data Transmission Characteristics'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2020.3016921
  analysis: '>'
  apa_citation: 'Mijuskovic, A., Ullah, I., Bemthuis, R., Meratnia, N., & Havinga,
    P. (2021). Comparing Apples and Oranges in IoT Context: A Deep Dive Into Methods
    for Comparing IoT Platforms. IEEE Internet of Things Journal, 8(3), 1797-1816.'
  authors:
  - Adriana Mijuskovic
  - Ikram Ullah
  - Rob Bemthuis
  - Nirvana Meratnia
  - Paul J.M. Havinga
  citation_count: 22
  data_sources: 'Five IoT platforms: Azure, AWS, SaS, ThingWorx, and Kaa IoT'
  explanation: This paper provides a comparative analysis of IoT platforms, focusing
    on functional and non-functional requirements. It evaluates various comparison
    methods, including statistical and visualization techniques, to recommend suitable
    IoT platforms. The study aims to guide individuals and companies in selecting
    appropriate platforms based on their specific business needs.
  extract_1: null
  extract_2: null
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals
    & Magazines >IEEE Internet of Things Journal >Volume: 8 Issue: 3 Comparing Apples
    and Oranges in IoT Context: A Deep Dive Into Methods for Comparing IoT Platforms
    Publisher: IEEE Cite This PDF Adriana Mijuskovic; Ikram Ullah; Rob Bemthuis; Nirvana
    Meratnia; Paul Havinga All Authors 21 Cites in Papers 1225 Full Text Views Abstract
    Document Sections I. Introduction II. Motivation III. IoT Architecture Functional
    Requirements IV. IoT Architecture Nonfunctional Requirements V. Related Work on
    IoT Platform Comparison Show Full Outline Authors Figures References Citations
    Keywords Metrics Abstract: Many researchers try to make a comparison between various
    Internet-of-Things (IoT) platforms based on specific requirements. However, none
    of the reviewed studies proposed a thorough analysis of the variety of comparative
    methods. Since there is a lack of comparison frameworks for IoT platforms, individuals
    or companies have difficulties when selecting a suitable IoT platform matching
    their associated business requirements. In order to support this selection process,
    a set of functional and nonfunctional requirements is identified. A framework
    containing methods in selecting an IoT platform is presented. The methodology
    is based on statistical and visualization techniques to recommend a suitable IoT
    platform. Five IoT platforms: 1) Azure; 2) AWS; 3) SaS; 4) ThingWorx; and 5) Kaa
    IoT are studied to evaluate the performance of the framework. Different comparison
    methods are proposed and a multicriteria decision analysis method was applied
    by using an analytical hierarchical process (AHP). One of the methods clusters
    the functional requirements and compares the IoT platforms based on their ability
    in supporting a specific requirement or not. The K -means clustering was applied
    to determine the clusters of functional requirements. The comparison was made
    based on the hierarchical level of requirements per main requirement. The other
    methods use the following statistical tests: error bar test, one-way Anova test,
    and Tukey’s honest significant difference test. Based on the selected requirements,
    an approach is suggested for which IoT platform can be used. Published in: IEEE
    Internet of Things Journal ( Volume: 8, Issue: 3, 01 February 2021) Page(s): 1797
    - 1816 Date of Publication: 17 August 2020 ISSN Information: DOI: 10.1109/JIOT.2020.3016921
    Publisher: IEEE Funding Agency: I. Introduction Internet of Things (IoT) is the
    interconnection of things with the Internet as a fundamental communication system
    in order to provide smart connectivity between the users and the environment [1].
    In an IoT ecosystem, IoT refers to uniquely identifiable objects and their virtual
    representations in an Internet-like structure. The term IoT was coined in 1999
    in the domain of supply chain management by Kevin Ashton [1]. IoT has the potential
    to provide enormous applications in many fields of life. Over time, IoT has been
    embedded in everyday life in order to improve daily lifestyle. Similarly, IoT
    can substantially provide new business models and generate new opportunities to
    enhance our way of living. It has been predicted that the number of devices connected
    to the Internet will reach 50 billion by 2020 [2]. This enormous growth in the
    number of connected devices generates huge amounts of data that need to be stored,
    processed, visualized, and used for decision making, which is commonly managed
    by IoT platforms. Sign in to Continue Reading Authors Figures References Citations
    Keywords Metrics More Like This A Survey of Security Challenges, Attacks Taxonomy
    and Advanced Countermeasures in the Internet of Things IEEE Access Published:
    2020 Security Considerations in the Internet of Things Protocol Stack 2021 International
    Conference on Artificial Intelligence, Big Data, Computing and Data Communication
    Systems (icABCD) Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: (Mijuskovic et al., 2021)
  journal: IEEE internet of things journal (Online)
  key_findings: The study presents a framework for comparing IoT platforms based on
    functional and non-functional requirements. It evaluates different comparison
    methods and identifies appropriate IoT platforms based on specific requirements.
    The framework employs statistical and visualization techniques to support decision-making
    and guide platform selection.
  limitations: The paper does not focus specifically on real-time irrigation management
    systems.
  main_objective: To develop a framework for comparing IoT platforms based on functional
    and non-functional requirements and evaluate the effectiveness of various comparison
    methods.
  pdf_link: null
  publication_year: 2021
  relevance_evaluation: While this paper does not directly explore automated irrigation
    management systems, it provides valuable insights into evaluating various IoT
    platforms and their capabilities in real-time data transmission. Its comparative
    analysis of different methods and consideration of non-functional requirements
    can be highly informative when selecting IoT platforms for automated irrigation
    systems. The paper's focus on statistical and visualization techniques aligns
    with the growing need for robust data analysis and visualization in the field
    of real-time irrigation management.
  relevance_score: '0.7'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Statistical techniques (K-means clustering, error bar test, one-way
    Anova test, Tukey’s honest significant difference test), Visualization techniques
  title: 'Comparing Apples and Oranges in IoT Context: A Deep Dive Into Methods for
    Comparing IoT Platforms'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/electronics11244120
  analysis: '>'
  authors:
  - Stanisław Deniziak
  - Mirosław Płaza
  - Łukasz Arcab
  citation_count: 1
  explanation: "The proposed methodology is based on relative precedence of tasks\
    \ determined in the functional specifications, as well as past research findings\
    \ on system synthesis. The precedence constraints represent which tasks must be\
    \ performed before others, and the real-time requirements of the system determine\
    \ the amount of time that can elapse between the start and completion of each\
    \ task.\n\nThe proposed methodology includes four steps: \n\n1. **Functional specification**\
    \ - The first step is to develop a functional specification of the system. This\
    \ specification should include a description of the system's purpose, the tasks\
    \ that need to be performed, and the real-time requirements of the system.\n2.\
    \ **Mapping the functional specification to the IoT architecture** - The next\
    \ step is to map the functional specification to the IoT architecture. This involves\
    \ identifying which tasks will be performed on which devices and how the devices\
    \ will communicate with each other. \n3. **Scheduling the tasks** - Once the functional\
    \ specification has been mapped to the IoT architecture, the tasks need to be\
    \ scheduled. This involves determining the order in which the tasks will be performed\
    \ and the amount of time that will be allocated to each task.\n4. **Optimizing\
    \ the system** - The final step is to optimize the system. This involves finding\
    \ the best possible schedule for the tasks and the best possible configuration\
    \ for the devices. The goal of optimization is to minimize the amount of time\
    \ that elapses between the start and completion of each task while ensuring that\
    \ all of the real-time requirements of the system are met."
  extract_1: 'System models are graph models. Existing methods use various system
    models. We can distinguish, for example:


    - Task Graph (TG): one of the simplest and most popular methods of representing
    functions at the system level. It is a directed acyclic graph in which nodes represent
    tasks and edges represent the order in which tasks are performed (usually representing
    transmissions). The task is activated when all preceding ones are completed. In
    this way, sequential dependencies between tasks are presented. Transmission volumes
    are represented by edge weights. A sample task graph is shown in Figure 1. The
    graph describes a six-task system. Tasks on the same path in the graph are sequentially
    executed, while tasks from parallel paths can be executed in parallel. Extended
    versions of task graphs can also be found in the literature, e.g., conditional
    task graphs and multimodal task graphs [50,51].


    - Synchronization Data Flow (SDF) or Static Data Flow (SSDF): models representing
    data flow (often used in modeling telecommunications applications). Like the TG,
    SDF is a directed graph. Unlike the TG, cycles can occur in SDF. The synchronization
    mechanism is described by determining the number of tags generated by the execution
    of a given task (for each output edge). The number of tags taken from each input
    is also specified for each task. The task is activated if the required number
    of tags is available on all inputs.  Data Flow 2022, 11, 4120 https://www.mdpi.com/journal/electronics'
  extract_2: The proposed methodology for designing real-time IoT systems considered
    the application of edge computing, fog computing, SDN (Software-Deﬁned Networking),
    and NFV (Network Function Virtualization) concepts.
  full_citation: '>'
  full_text: ">\nCitation: Deniziak, S.; Płaza, M.;\nArcab, Ł. Approach for Designing\n\
    Real-Time IoT Systems. Electronics\n2022, 11, 4120. https://doi.org/\n10.3390/electronics11244120\n\
    Academic Editors: Juan M. Corchado,\nByung-Gyu Kim, Carlos A. Iglesias,\nIn Lee,\
    \ Fuji Ren\nand Rashid Mehmood\nReceived: 8 November 2022\nAccepted: 7 December\
    \ 2022\nPublished: 10 December 2022\nPublisher’s Note: MDPI stays neutral\nwith\
    \ regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nelectronics\nArticle\nApproach for Designing Real-Time IoT Systems\nStanisław\
    \ Deniziak *, Mirosław Płaza *\nand Łukasz Arcab\nFaculty of Electrical Engineering,\
    \ Automatic Control and Computer Science, Kielce University of Technology,\nAl.\
    \ Tysiaclecia P.P. 7, 25-314 Kielce, Poland\n* Correspondence: s.deniziak@tu.kielce.pl\
    \ (S.D.); m.plaza@tu.kielce.pl (M.P.); Tel.: +48-41-342-4167 (M.P.)\nAbstract:\
    \ Along with the rapid development of Internet of Things (IoT) technology over\
    \ the past\nfew years, opportunities for its implementation in service areas that\
    \ require real-time requirements\nhave begun to be recognized. In this regard,\
    \ one of the most important criteria is to maintain Quality\nof Service (QoS)\
    \ parameters at an appropriate and sufﬁciently high level. The QoS level should\n\
    ensure the delivery of data packets in the shortest time possible while preventing\
    \ critical parameters\nrelevant to real-time transmission from being exceeded.\
    \ This article proposes a new methodology\nfor designing real-time IoT systems.\
    \ The premise of the proposed approach is to adapt selected\nsolutions used in\
    \ other types of systems working with real-time requirements. Some analogy to\n\
    embedded systems with a distributed architecture has been noted and used in this\
    \ regard. The\nmain differences from the concept of built-in systems can primarily\
    \ be seen in the communication\nlayer. The methodology proposed in this article\
    \ is based on the authors’ proposed model of real-time\nsystem functional speciﬁcation\
    \ and its mapping to the IoT architecture. In addition, the developed\nmethodology\
    \ makes extensive use of selected IoT architecture elements described in this\
    \ article, as\nwell as selected task scheduling methods and communication protocols.\
    \ The proposed methodology\nfor designing RTIoT systems is based on dedicated\
    \ transmission serialization methods and dedicated\nrouting protocols. These methods\
    \ ensure that the time constraints for the assumed bandwidth of IoT\nlinks are\
    \ met by appropriately prioritizing transmissions and determining communication\
    \ routes.\nThe presented approach can be used to design a broad class of RTIoT\
    \ systems.\nKeywords: real time; IoT; tasks scheduling; communication protocols\n\
    1. Introduction\nFor a number of years, there has been a continuous and rapid\
    \ development of products\nand services in the area of Internet of Things (IoT)\
    \ technology [1–4]. Research in this arena\nis focused on introducing new solutions\
    \ in the form of dedicated, smart, specialized and\nautonomous systems [5–8].\
    \ The main reason for the widespread use of IoT solutions is\nusually the desire\
    \ to improve people’s lifestyle and comfort, the optimal use of natural\nresources,\
    \ and the low energy consumption of these solutions [9–12]. IoT solutions in\n\
    this area often provide previously unattainable levels of efﬁciency while minimizing\
    \ the\ncontribution of the human factor. This trend is being forced by the ever-increasing\
    \ demands\nof proﬁt optimization in all industries and economies, as well as the\
    \ quality and safety of\nlife demands of speciﬁc groups of consumers and even\
    \ entire global communities [13].\nThe most up-to-date literature describes numerous\
    \ examples of implementations\nof classical IoT solutions for various purposes.\
    \ As is well known, the so-called “smart”\nsystems, e.g., smart homes, smart factories,\
    \ smart cities, and smart grids, have gained\ngreat popularity [14,15]. In addition,\
    \ a number of systems have been developed for the\nmedical [16], automotive [17],\
    \ agricultural [18], property protection [19], logistics [20], and\nsports and\
    \ recreation [21] industries, as well as many other areas related to the immediate\n\
    needs of the public. Smart systems for managing amusement parks [7,8,22]; automated\n\
    customer service solutions based on speech recognition techniques and voice assistants\
    \ [23];\nfacial recognition and motion detection systems used for security and\
    \ access control [24];\nElectronics 2022, 11, 4120. https://doi.org/10.3390/electronics11244120\n\
    https://www.mdpi.com/journal/electronics\nElectronics 2022, 11, 4120\n2 of 21\n\
    smart systems for managing [25,26], controlling [27], and optimizing production\
    \ pro-\ncesses [28–30]; and real-time object location systems [12,31,32] are being\
    \ implemented.\nThe aforementioned solutions are just a few examples of the known\
    \ applications of IoT\ntechnology. The possibilities of implementing traditional\
    \ solutions are very wide and\nmainly depend on the needs of the recipients and\
    \ the ingenuity of their designers, thus\ninﬂuencing the development of a certain\
    \ area of the service market.\nAt the same time, it should be noted that services\
    \ and products where real-time\ntransmission requirements play a key role are\
    \ still major constraints in the implementa-\ntion of IoT solutions. The need\
    \ to design real-time applications for IoT (RTIoT) solutions\nwas recognized more\
    \ than 10 years ago [33]. The ﬁrst technologies and standards in this\narea also\
    \ began to emerge at that time. Examples include: ITCC (Intel Time Coordinated\n\
    Computing) [34,35], TSN (Time Sensitive Network) [36], M2M (Machine to Machine\
    \ Com-\nmunication) [37], SaaS (Sensing as a Service) [38], and a multi-layered\
    \ reference model\ndedicated to IoE (Internet of Everything) technologies [3].\
    \ However, most work to date\nin the ﬁeld of RTIoT systems has only been concerned\
    \ with trying to develop selected\nelements of the IoT architecture [39] or applications\
    \ and technologies [40,41] optimized\nfor the highest possible QoS (Quality of\
    \ Service). These mostly deal with issues related\nto real-time transmission and\
    \ protocols, server applications, or real-time databases. As\npreviously mentioned,\
    \ there was a need for real-time transmission early in the development\nof the\
    \ internet, mainly for the purpose of transmitting multimedia data. The RTP/RSTP\
    \ [42]\nor XMPP [43] protocols in use at the time did not allow for the parameters\
    \ associated with\ntime constraints to be met. It was not until the development\
    \ of the IEEE 802.1 standard\nin the form of the TSN solution that some conditions\
    \ were created for the development\nof data transmission methods that considered\
    \ time parameters. However, this standard\nonly deﬁnes basic mechanisms for time\
    \ synchronization, transmission scheduling or re-\nsource reservation. It does\
    \ not specify speciﬁc communication protocols or algorithms\nfor scheduling and\
    \ routing data transmission [44]. In terms of server applications, there\nis ongoing\
    \ work on cloud computing. This work focuses on developing real-time cloud\nservices,\
    \ scheduling tasks according to real-time requirements, and developing web servers\n\
    that handle requests with time constraints [45–47]. Real-time databases, on the\
    \ other hand,\ndeﬁne real time as the fastest execution of queries to a database.\
    \ Examples of such databases\nare VoltDB [48] and Firebase [49].\nAlthough it\
    \ is possible to ﬁnd numerous publications presenting examples of IoT ap-\nplications\
    \ running in real time, these solutions are not fully compatible with the concept\
    \ of\na real-time system. Typically, these solutions are highly optimized in terms\
    \ of data process-\ning and data transmission performance so the time requirements\
    \ under typical operating\nconditions are met. However, such solutions do not\
    \ provide the required QoS level when\noperating conditions change (e.g., with\
    \ higher network load). Moreover, providing high\nperformance is often associated\
    \ with signiﬁcant costs of computing and communication\nresources. Additionally,\
    \ the methodologies of designing RTIoT systems that take cost and\nQoS optimization\
    \ into account are unknown. Constraints related to real-time requirements\nare\
    \ currently one of the main challenges faced by IoT system research, and they\
    \ were also\nthe main motivation for the authors of this study to carry out the\
    \ presented research.\nThe purpose of this work was to identify the problems and\
    \ needs that exist in the\ndesign of RTIoT systems, to identify research directions\
    \ to solve these problems, and to\npropose a design methodology that considers\
    \ the requirements of RTIoT systems. The\ncontribution to the body of knowledge\
    \ of this article is:\n•\nThe proposal of a methodology for designing real-time\
    \ IoT systems considering the\napplication of edge computing, fog computing, SDN\
    \ (Software-Deﬁned Networking),\nand NFV (Network Function Virtualization) concepts.\n\
    •\nAn overview of the components, methods and technologies of distributed real-time\n\
    systems, with particular emphasis on scheduling methods and communication proto-\n\
    cols in the context of their applications in RTIoT systems.\n•\nThe proposal of\
    \ a general RTIoT system architecture covering a broad class of applications.\n\
    Electronics 2022, 11, 4120\n3 of 21\nThe starting point for the RTIoT system design\
    \ methodology proposed in this article is\nan analysis of approaches used in other\
    \ classes of real-time systems. In particular, one can\nsee a certain analogy\
    \ with embedded systems, or rather, IoT systems can be seen as a certain\ngeneralization\
    \ or development of the concept of embedded systems with a distributed\narchitecture.\
    \ The differences are particularly evident in the communication layer. This\n\
    article presents a proposed methodology based on analogous approaches to the synthesis\n\
    of embedded systems.\nThe rest of this article is organized as follows. Section\
    \ 2 describes the functional\nspeciﬁcation model and synthesis process for real-time\
    \ systems, and Section 3 considers\nselected components of IoT systems in relation\
    \ to real-time requirements. Section 4 is\ndevoted to an analysis of task scheduling\
    \ methods and communication protocols possible\nto apply in RTIoT systems, and\
    \ Section 5 describes the new methodology for designing\nRTIoT systems proposed\
    \ by the authors. The summary and conclusions are provided\nin Section 6.\n2.\
    \ Functional Speciﬁcation Model and Synthesis of Real-Time Systems\nThe design\
    \ methodology for complex IT systems usually consists of two stages:\n•\nDeveloping\
    \ a high-level model: The system model allows for an analysis to validate\nand\
    \ optimize the proposed solution. This is particularly important in the case of\n\
    distributed systems, where the veriﬁcation of the communication and synchronization\n\
    mechanisms used between processes is of signiﬁcance.\n•\nMapping the model to\
    \ the target architecture: It is possible to map to a standard\narchitecture (e.g.,\
    \ a multi-core processor) or to synthesize a specialized architecture\noptimized\
    \ for a given application.\n2.1. IoT Application System Model\nThe ﬁrst stage\
    \ of design is to create a system model of the application. The system\nmodel\
    \ represents the application function at the highest abstraction level, where\
    \ tasks\n(processes) and interactions between tasks are distinguished. At this\
    \ level, what a task does\nis not as important as when it is activated, what the\
    \ synchronization between tasks is, and\nhow the tasks communicate with each other.\
    \ Typically, system models are graph models.\nExisting methods use various system\
    \ models. We can distinguish, for example:\n•\nTask Graph (TG): one of the simplest\
    \ and most popular methods of representing\nfunctions at the system level. It\
    \ is a directed acyclic graph in which nodes represent\ntasks and edges represent\
    \ the order in which tasks are performed (usually representing\ntransmissions).\
    \ The task is activated when all preceding ones are completed. In this\nway, sequential\
    \ dependencies between tasks are presented. Transmission volumes\nare represented\
    \ by edge weights. A sample task graph is shown in Figure 1. The\ngraph describes\
    \ a six-task system. Tasks on the same path in the graph are sequentially\nexecuted,\
    \ while tasks from parallel paths can be executed in parallel. Extended\nversions\
    \ of task graphs can also be found in the literature, e.g., conditional task graphs\n\
    and multimodal task graphs [50,51]. Such models allow for the speciﬁcation of\
    \ special\ncases, such as the conditional or alternative performance of certain\
    \ tasks.\n•\nSDF (Synchronous Data Flow) or SSDF (Statically Schedulable Data\
    \ Flow): models\nrepresenting data ﬂow (often used in modeling telecommunications\
    \ applications).\nLike the TG, SDF is a directed graph. Unlike the TG, cycles\
    \ can occur in SDF. The\nsynchronization mechanism is described by determining\
    \ the number of tags generated\nby the execution of a given task (for each output\
    \ edge). The number of tags taken from\neach input is also speciﬁed for each task.\
    \ The task is activated if the required number\nof tags is available on all inputs.\n\
    •\nSTATECHARTS: a model based on a FSM (Finite State Machine), models based on\n\
    a description in the form of various forms of automation enable the speciﬁcation\
    \ of\ncontrol ﬂow. Unlike a classic FSM, state charts enable parallel descriptions\
    \ and task\nspeciﬁcations. Tasks are related to transitions between states.\n\
    Electronics 2022, 11, 4120\n4 of 21\nElectronics 2022, 11, x FOR PEER REVIEW \n\
    4 of 22 \n \n \n \nFigure 1. Sample task graph. \n \nSDF (Synchronous Data Flow)\
    \ or SSDF (Statically Schedulable Data Flow): models \nrepresenting data flow\
    \ (often used in modeling telecommunications applications). \nLike the TG, SDF\
    \ is a directed graph. Unlike the TG, cycles can occur in SDF. The \nsynchronization\
    \ mechanism is described by determining the number of tags gener-\nated by the\
    \ execution of a given task (for each output edge). The number of tags \ntaken\
    \ from each input is also specified for each task. The task is activated if the\
    \ re-\nquired number of tags is available on all inputs.  \n \nSTATECHARTS: \
    \ a model based on a FSM (Finite State Machine), models based on \na description\
    \ in the form of various forms of automation enable the specification of \ncontrol\
    \ flow. Unlike a classic FSM, state charts enable parallel descriptions and task\
    \ \nspecifications. Tasks are related to transitions between states.  \nThere\
    \ are also a number of other methods that often target specific classes of appli-\n\
    cations. The system model should not impose any constraints on the target system\
    \ ar-\nchitecture if this is not directly implied by the design assumptions. The\
    \ architecture \nshould be the result of system optimization. Therefore, the first\
    \ step in the methodology \nshould be to propose a method for specifying the application\
    \ at the system level. This \nmodel will be the starting point for further design\
    \ (scheduling, mapping into architec-\nture, and optimization). Therefore, it\
    \ should contain all the information so that the above \ntasks can be performed.\
    \ Each method has limitations (e.g., the task graph offers no way of \ndescribing\
    \ the control functionality). In the case of RTIoT, the model should allow for\
    \ the \nspecification of both computational and transmission tasks (communication\
    \ tasks). The \nmodel should also target so-called reactive systems, i.e., systems\
    \ in which particular se-\nquences of actions/tasks are activated as a result\
    \ of reactions to specific events.  \n2.2. Mapping Functional Specifications to\
    \ Real-Time IoT Architecture \nIn a typical approach to mapping a system specification\
    \ into a distributed infor-\nmation system architecture, three main steps are\
    \ performed [52]: \n \nResource allocation: At this stage, the target hardware\
    \ architecture of the system is \ndetermined. Resources can be processors, specialized\
    \ hardware modules, and \ncommunication channels (buses, communication processors,\
    \ etc.). At the same time \nas the allocation, the connections between system\
    \ components are determined. \nFigure 1. Sample task graph.\nThere are also a\
    \ number of other methods that often target speciﬁc classes of ap-\nplications.\
    \ The system model should not impose any constraints on the target system\narchitecture\
    \ if this is not directly implied by the design assumptions. The architecture\n\
    should be the result of system optimization. Therefore, the ﬁrst step in the methodology\n\
    should be to propose a method for specifying the application at the system level.\
    \ This\nmodel will be the starting point for further design (scheduling, mapping\
    \ into architecture,\nand optimization). Therefore, it should contain all the\
    \ information so that the above tasks\ncan be performed. Each method has limitations\
    \ (e.g., the task graph offers no way of\ndescribing the control functionality).\
    \ In the case of RTIoT, the model should allow for\nthe speciﬁcation of both computational\
    \ and transmission tasks (communication tasks).\nThe model should also target\
    \ so-called reactive systems, i.e., systems in which particular\nsequences of\
    \ actions/tasks are activated as a result of reactions to speciﬁc events.\n2.2.\
    \ Mapping Functional Speciﬁcations to Real-Time IoT Architecture\nIn a typical\
    \ approach to mapping a system speciﬁcation into a distributed information\nsystem\
    \ architecture, three main steps are performed [52]:\n•\nResource allocation:\
    \ At this stage, the target hardware architecture of the system\nis determined.\
    \ Resources can be processors, specialized hardware modules, and\ncommunication\
    \ channels (buses, communication processors, etc.). At the same time as\nthe allocation,\
    \ the connections between system components are determined.\n•\nAssignment of\
    \ tasks to resources: This step involves assigning individual tasks to\nresources.\
    \ Tasks are assigned to computing modules, and transmissions are assigned\nto\
    \ communication channels. Task allocation is closely related to resource allocation.\n\
    For specialized resources, only tasks corresponding to the function performed\
    \ by the\nresource can be assigned. Transmissions must only be assigned to communication\n\
    channels between resources with assigned communicating tasks. When two tasks are\n\
    assigned to the same resource, transmissions between them are ignored.\n•\nTask\
    \ prioritization: Task scheduling is necessary to determine the order in which\
    \ tasks are\nperformed when more than one task is assigned to a resource. Scheduling\
    \ must consider\nthe sequential relationships between tasks. During scheduling,\
    \ speed optimization is per-\nformed. In the case of real-time systems, the main\
    \ goal is to arrange the execution of tasks\nElectronics 2022, 11, 4120\n5 of\
    \ 21\nand transmissions in such a way that all timing constraints are met (hard-constrained\n\
    systems) or that timing constraint overruns are minimized (QoS maximization).\n\
    IoT systems are characterized by a speciﬁc architecture, and for this reason,\
    \ it is\nnot possible to directly apply existing methods of synthesizing real-time\
    \ systems to IoT\napplications. The main distinguishing features of these systems\
    \ are:\n•\nA distributed architecture based on internet infrastructure.\n•\nCommunication\
    \ through internet links, thus not ensuring that time constraints are met.\nFrom\
    \ the above-mentioned properties of IoT systems comes the need to develop\na specialized\
    \ method for mapping speciﬁcations to the target architecture, as well as\nthe\
    \ need to develop solutions to ensure the implementation of transmission that\
    \ meets\nreal-time requirements.\n3. Selected Elements of IoT System Architecture\n\
    There are many proposals for IoT system architectures. In order for a given architecture\n\
    to enable the implementation of a real-time system, it must meet certain requirements\
    \ in\nterms of the predictability of operation and the possibility of optimization\
    \ in terms of\nresponse time. This section presents an overview of the various\
    \ elements of the IoT\narchitecture, with a focus on how they can be used in real-time\
    \ systems.\n3.1. Edge and Fog Computing\nToday, the amount of data that are generated\
    \ by IoT systems and then transmitted\nover the network is increasing at a very\
    \ high rate. Therefore, it is important to use the\nthroughput of IoT systems\
    \ as efﬁciently as possible. The concepts of edge computing and\nfog computing\
    \ [53] can be used to optimize this problem. One of the main features of edge\n\
    computing is the clear separation of the physical devices that make up the edge\
    \ infras-\ntructure from the core network devices [54]. Edge devices can perform\
    \ data preprocessing\nfunctions at the network edges, which signiﬁcantly improves\
    \ the ability to maintain the\nrequired transmission time parameters in the context\
    \ of real-time systems. If the tasks per-\nformed by edge devices are subject\
    \ to time constraints, then these devices are implemented\nas real-time embedded\
    \ systems enabling real-time data processing [55,56]. Therefore, it\nis becoming\
    \ increasingly desirable to use edge computing for smart data processing and\n\
    performing speciﬁc optimization tasks [57,58]. The partial ofﬂoading of centralized\
    \ cloud\nsystems is also possible through fog computing mechanisms [59]. Solutions\
    \ of this class\ncan perform services by computation at the level of a distributed,\
    \ decentralized network\ninfrastructure (e.g., using local IoT networks/systems)\
    \ [60]. Fog computing and edge\ncomputing also provide some opportunity to apply\
    \ function virtualization techniques on a\nmassive scale [61–65], which consequently\
    \ reduces the demand for resources and comput-\ning power of a data center. Both\
    \ of the solutions under consideration signiﬁcantly reduce\nthe amount of data\
    \ that must be transmitted and processed by the core network/server\ninfrastructure,\
    \ thus relieving the burden on traditional cloud computing and data center\nsystems.\
    \ If the target resources are less loaded, then it is easier to meet the assumptions\n\
    that guarantee throughput and latency at levels appropriate for real-time solutions\
    \ [66].\nThe primary purpose of edge infrastructure and the use of distributed\
    \ computing is to\nsolve a number of critical tasks affecting the latency, throughput,\
    \ energy consumption,\nand scalability of IoT systems [67]. Moreover, these solutions\
    \ allow for a high degree of\nautonomy in managing the optimal conﬁguration of\
    \ a system [68,69] and increasing the\nlevel of security [70]. All of the above\
    \ aspects favorably affect the ability to implement IoT\nservices with time requirements.\n\
    3.2. Programmable Networks and Virtualization Techniques\nIn the context of real-time\
    \ IoT tasks, new developments in Software-Deﬁned Network-\ning (SDN) and mass-scale\
    \ Network Function Virtualization (NFV) methods are important\nelements to consider.\
    \ SDN networks are commonly associated with IoT technology because\nthe architecture\
    \ provides a more ﬂexible and manageable environment. In addition, more\nElectronics\
    \ 2022, 11, 4120\n6 of 21\nand more research (for example, on blockchain) is focused\
    \ on implementing solutions\nthat combine SDN and IoT technologies with NFV methods.\
    \ Therefore, it is anticipated\nthat NFV will be a very important tool to support\
    \ the automation of network solutions,\nincluding in real-time transmission issues.\n\
    In SDN, management tasks are separated from data transmission tasks. In this ap-\n\
    proach, network devices solely act as relays that transmit sequentially routed\
    \ packets\nfrom the source to the destination, with all policies in place for\
    \ both communication and\nsecurity [71]. The management space in SDN is a highly\
    \ centralized area, while the data\nspace operates on a distributed plane. Potential\
    \ SDN applications related to real-time\ntransmission are shown in [72], where\
    \ a four-tier cloudlet architecture (based on SDN) in\ncombination with a WBAN\
    \ (Wireless Body Area Network) architecture was described. The\npaper described\
    \ a cloudlet—a mobile, cloud-based data center system that is located at\nthe\
    \ edge of the network. This approach was shown to enable efﬁcient trafﬁc processing,\n\
    optimal resource utilization, and reduced latency, which is of great importance\
    \ for real-time\nsystems. The approach proposes that all network controllers be\
    \ located in a cloudlet,\nresulting in better optimization in terms of QoS mechanisms,\
    \ as well as a complete view\nof the network. On the other hand, the authors of\
    \ [73] proposed the concept of a three-\nlayer SDN application based on a WBAN\
    \ scheme called an SDWBAN (Software-Deﬁned\nWireless Body Area Network). In this\
    \ solution, network trafﬁc prioritization is performed.\nHigher-priority packets\
    \ are analyzed and sent through the network ﬁrst, which is made\npossible by optimal\
    \ resource allocation (e.g., throughput), path allocation and the use of\ncloud\
    \ computing. In this case, transmission latency is reduced by formulating a heuristic\n\
    allocation model for minimizing the service time of individual services. Security\
    \ issues\nfor IoT systems are also an important issue. In this area, solutions\
    \ using SDN are known,\nsuch as artiﬁcial intelligence mechanisms that automatically\
    \ analyze network trafﬁc while\ntaking real-time transmission requirements into\
    \ account [74].\nIn today’s vast IT world, technology is beginning to play an\
    \ increasingly important\nrole in the move away from physical infrastructure building\
    \ and solutions based on dedi-\ncated physical network devices to virtualization\
    \ technology. An example of virtualization\ntechnology in relation to the IoT\
    \ area is the NFV solution. The implementation of virtual-\nization technology\
    \ in IoT solutions provides ﬂexibility for applications regardless of the\nplatform\
    \ on which this solution is based or built while maintaining the full management\n\
    of logical network functions and the modeling of the full technology stack. An\
    \ additional\nadvantage of implementing NFV technology in IoT solutions is the\
    \ ability to fully manage\nand conﬁgure individual virtualized network elements\
    \ at all levels (from physical machines\nto virtualized machines to sublime network\
    \ services) [75]. From the point of view of the\nIoT and real-time requirements,\
    \ the use of NFV virtualization technology has begun to play\na key role due to\
    \ the requirements of real-time transmission, i.e., transmission with the\nshortest\
    \ possible packet delivery and processing time while maintaining an appropriate\n\
    QoS and meeting the deadline value requirements of individual packets [76]. The\
    \ biggest\nadvantage of virtualization technology is its versatility in application\
    \ to various IoT archi-\ntectures, although due to its deﬁnition and similar mechanisms,\
    \ NFV technology perfectly\ncomplements IoT solutions based on the SDN model architecture.\n\
    3.3. Real-Time Database Systems\nTo ensure the best possible QoS performance in\
    \ real-time transmission, the solutions\ndescribed in the previous sections are\
    \ crucial from the points of view of hardware technolo-\ngies and transmission\
    \ and data processing concepts. At the same time, as the data volume\ngenerated\
    \ by IoT systems continues to grow, there is also a steady increase in the need\
    \ for\nsolutions to store that data while supporting mechanisms that consider\
    \ real-time require-\nments [77]. One of the directions is the concept “fast data”,\
    \ which involves developing\ndatabase technology to ensure the fastest possible\
    \ execution of queries. Examples of such\ndatabases are Druid [78] and Volt Active\
    \ Data [79].\nElectronics 2022, 11, 4120\n7 of 21\nSome of the most well-known\
    \ approaches for storing large datasets are SDDS (Scal-\nable Distributed Data\
    \ Structure) structures, which enable the virtualization of distributed\nmemory\
    \ by aggregating resources at network nodes [80]. Considering real-time require-\n\
    ments and the need for QoS parameters, an extension of this concept in this direction\
    \ are\nSDDS LH/RP (Scalable Distributed Data Structure Linear Hashing/Range Partitioning)\
    \ ap-\nproaches dedicated to real-time cloud applications [81]. An SDDS server\
    \ schedules queries\nusing real-time queuing methods that consider importance\
    \ attributes, which enables the\nachievement of a higher level of execution of\
    \ queries in a certain time in the case of SDDS\nLH/RP approaches than in the\
    \ case of FIFO (First In, First Out) queuing approaches [82].\nWith such an implementation,\
    \ QoS metrics in real-time IoT systems can be signiﬁcantly\nimproved [83]. The\
    \ steady increase in demand for big data processing environments has\nled to the\
    \ development of more dedicated data storage models, such as NoSQL [84] and\n\
    NewSQL [85]. These IoT system solutions are beginning to gain value from the point\
    \ of\nview of time requirements due to the need to address the processing of large\
    \ volumes of\ndata while maintaining QoS parameters.\nIn terms of real-time database\
    \ systems, issues remain to be addressed in terms of\nensuring that hard real-time\
    \ policies are met for queries that update data that are already\nrecorded/stored\
    \ and for bucket splitting operations [86,87].\n4. Task/Transmission Scheduling\
    \ and Communication Protocols\nThe real-time system design methodology proposed\
    \ in this paper assumes the appro-\npriate scheduling of calculations and transmissions.\
    \ In classic system solutions, schedul-\ning can be implemented through FIFO queuing\
    \ or other static or dynamic scheduling\nmethods [88]. Static scheduling methods\
    \ are mainly concerned with the design of embed-\nded systems, which are most\
    \ often used to control various devices when there are time\nconstraints. These\
    \ systems feature a dedicated architecture and perform predetermined\nfunctions.\
    \ Therefore, it is possible to estimate the execution time of each function and\
    \ to\nperform a ranking, ensuring that all time constraints are met. IoT systems\
    \ can be viewed as\na generalization of embedded systems with a distributed architecture.\
    \ The main difference\nis the communication between system components. In the\
    \ case of embedded systems, the\ncomponents are directly connected and the transmission\
    \ time is predetermined. In the\ncase of IoT systems, transmission time also depends\
    \ on other factors, e.g., on the trafﬁc\nand throughput of links and on the route\
    \ determined by routing processes. Thus, it is not\npossible to directly apply\
    \ known static task scheduling methods to IoT systems, though\nthese methods can\
    \ be considered from the point of view of ensuring optimal cooperation\nwith relevant\
    \ communication protocols. Therefore, this section examines the scheduling\nmethods\
    \ and selected communication protocols used in data transmission tasks that assume\n\
    the need to meet real-time assumptions.\n4.1. FIFO\nDepending on the application,\
    \ FIFO queuing mechanisms can be implemented as a\nhardware sliding register or\
    \ using different memory structures. Such solutions often use\nnetwork devices\
    \ such as switches or routers. These devices queue data packets as they\ntravel\
    \ from source to destination. Typically, one FIFO structure is used per connection\
    \ [89].\nSome network devices also have multiple FIFO structures/implementations\
    \ for the simulta-\nneous and independent queuing of different types of data.\
    \ Most software implementations\nof FIFO queuing do not meet security conditions\
    \ and require an additional security mecha-\nnism to verify the chain of data\
    \ structures [90]. Achieving good performance in terms of\nthroughput and scalability\
    \ while maintaining a high level of security in IoT systems has\nalways been a\
    \ major challenge. The packet queuing process strategy represented by the\nFIFO\
    \ algorithm contributed to the later development of algorithms such as SAGA-PBFT\n\
    (Security-Aware Genetic Algorithm-based Practical Byzantine Fault Tolerance),\
    \ which was\ndeveloped on the basis of the PBFT (Practical Byzantine Fault Tolerance)\
    \ algorithm. The\nElectronics 2022, 11, 4120\n8 of 21\nSAGA-PBFT algorithm is\
    \ used in solutions such as the block chain, where security aspects\nand transmission\
    \ time requirements are extremely important [91].\n4.2. Static and Dynamic Task\
    \ Scheduling Methods in Real-Time Systems\nStatic task scheduling algorithms assume\
    \ that before the target scheduling process, a\nset of input tasks is processed\
    \ according to one of the speciﬁed sorting rules. These rules\ndeﬁne how the input\
    \ task array is sorted. With this approach, it is possible to determine\nwhich\
    \ packages, criteria, or parameters in the IoT architecture will have the highest\
    \ priority\nat the outset. Static task scheduling algorithms include LS (List\
    \ Scheduling) mechanisms.\nIn this group, we can distinguish the following sorting\
    \ rules: LPT (Longest Processing\nTime), SPT (Shortest Processing Time), and RPT\
    \ (Reverse Processing Time). In this case,\nthe drawback of using list scheduling\
    \ in real-time solutions is the additional overhead\nof executing the processes\
    \ implemented in the sorting rules before the data packet is\nforwarded to the\
    \ next network layers. This adversely affects packet delivery times, so\nmeeting\
    \ the goals of RTIoT solutions is difﬁcult to implement [92]. Another popular\
    \ static\ntask scheduling algorithm is the Rate Monotonic Scheduling (RMS) method.\
    \ This algorithm\nassigns priorities to individual tasks before they begin execution\
    \ that do not change during\nthe algorithm’s run time. Priorities are assigned\
    \ to each task by taking the frequency of their\nappearance into account (the\
    \ task with the shortest period will have the highest priority).\nRMS is typically\
    \ used to schedule single-processor tasks [93], which is a major limitation of\n\
    it for the design of extended RTIoT solutions. On the other hand, its expropriation\
    \ feature\n(the highest priority task is performed) is decent in terms of maintaining\
    \ the best possible\nQoS performance and meeting real-time conditions.\nFor dynamic\
    \ scheduling in the context of the research presented in this article, it is\n\
    worth considering the EDF (Earliest Deadline First) and LLF (Least Laxity First)\
    \ algorithms.\nReal-time systems distinguish between two types of input data.\
    \ The ﬁrst type comprises\ndata generated over certain ﬁxed periods of time (e.g.,\
    \ trafﬁc resulting from the functionality\nof the communication protocols used),\
    \ and the second type comprises data generated as\na result of actual events (e.g.,\
    \ data from various types of sensors). In IoT systems, which\ndeal with data generated\
    \ as a result of interactions taking place, the EDF algorithm [46]\nmay ﬁnd application\
    \ in scheduling processes. In this solution, the value referred to as the\ndeadline\
    \ for each task is taken as the priority value, so the lower it is, the closer\
    \ the deadline\nfor a given task is. An additional advantage of the EDF algorithm\
    \ over others is its good\nutilization of CPU resources and fairly fast response\
    \ times, which, from the point of view of\ndesigning real-time IoT systems, can\
    \ have key roles in ensuring adequate QoS parameters\nand other real-time requirements.\
    \ Another example of a dynamic scheduling algorithm\nthat can ﬁnd application\
    \ in a real-time IoT system is the LLF algorithm. It uses the deadline\nvalue,\
    \ which, along with the time left to complete a given task, is used to calculate\
    \ the laxity\nparameter used to prioritize the execution of individual tasks.\
    \ In this case, the lower the\nvalue of laxity, the higher priority the task will\
    \ be and the faster it should be completed [94].\nA certain disadvantage of this\
    \ algorithm is when there are many tasks with the same or\nsimilar laxity value\
    \ simultaneously, the demand for computing power increases [95]. This\nrepresents\
    \ a kind of limitation from the point of view of applications for RTIoT systems,\n\
    since one of the priorities of IoT systems is to optimize their energy intensity\
    \ [96]. On the\nother hand, however, the advantages of this algorithm include\
    \ resistance to overloading, to\nwhich systems using the EDF algorithm are prone,\
    \ which translates into the possibility of\nusing it in the design and implementation\
    \ of real-time systems [83]. Considering the above,\nit can be concluded that\
    \ both EDF and LLF can be used for certain tasks in the design and\nimplementation\
    \ of RTIoT solutions.\n4.3. Communication Protocols\nIn real-time IoT systems,\
    \ in addition to the described task scheduling techniques, the\nuse of appropriate\
    \ types of transmission media and the implementation of proper com-\nmunication\
    \ protocols, with particular emphasis on routing protocols, also play important\n\
    Electronics 2022, 11, 4120\n9 of 21\nroles. Some well-known routing protocols\
    \ to consider when designing RTIoT solutions\nare: RSTP (Real Time Streaming Protocol),\
    \ WebRTC (Web Real Time Communication),\nXMPP (Extensible Messaging and Presence\
    \ Protocol), MQTT (Message Queue Telemetry\nTransport), CoAP (Constrained Application\
    \ Protocol), WebSocket, and 6LoWPAN (IPv6\nover Low-Power Wireless Personal Area\
    \ Networks).\nThe RSTP is an application layer protocol for the control, transmission\
    \ and delivery of\ndata while maintaining real-time transmission criteria. The\
    \ most common implementations\nof this protocol are systems used to transmit voice\
    \ and video in real time. Data are\ncontinuously delivered, even when RTSP requests\
    \ are not received by the server. A new\narea in which this protocol is being\
    \ applied is the technology area of the teaching of\nlanguage, which includes\
    \ listening, speaking, reading and writing [97]. Another protocol\nimplemented\
    \ in real-time IoT systems is WebRTC. Its most common applications are\nsolutions\
    \ for transmitting video images or streaming data in the broadest sense while\n\
    achieving the lowest possible levels of latency and data transmission loss, as\
    \ exempliﬁed by\napplications for voice transmission and videoconferencing. Research\
    \ [98] conducted in the\narea of the WebRTC protocol indicates that it yields\
    \ better response times and connection\nstabilization times in web applications\
    \ compared with other streaming protocols such\nas the RTSP [99]. In addition,\
    \ from the point of view of QoS parameters and energy\nconsumption, the implementation\
    \ of the WebRTC protocol allows one to achieve better\nvalues, which translates\
    \ into meeting the real-time transmission requirements of solutions\nimplemented\
    \ in IoT systems. The XMPP protocol, on the other hand, is based on XML [100].\n\
    The protocol is commonly available and can be freely modiﬁed, and many XMPP servers\n\
    are available [101]. This translates into its main use being implementations in\
    \ systems\nand applications for exchanging text-based content such as popular\
    \ instant messaging\napplications. The simplest and lightest protocol for real-time\
    \ data transmission is the MQTT\nprotocol, which is based on the publish/subscribe\
    \ pattern. It is designed for transmission\nfor devices that do not require a\
    \ high throughput. By limiting the transmission speed, the\nprotocol provides\
    \ a greater reliability. The protocol is perfect for IoT machine-to-machine\n\
    connections, mobile devices, and where throughput and energy savings are required.\
    \ By\nusing this protocol, one can easily transfer data during a conversation\
    \ from one device\nto another and continue the conversation [102]. An example\
    \ of a protocol that uses the\nUDP protocol for communication and is also applicable\
    \ to RTIoT systems is the CoAP\nprotocol. It has been optimized for constrained\
    \ devices and networks (used in wireless\nsensor networks) [103]. The CoAP protocol\
    \ extends the paradigm of ubiquitous web\nservices in mobile applications to IoT\
    \ and M2M solutions, which can then be developed\nusing shared and reusable RESTful\
    \ web services. In doing so, this protocol considers\nIoT constraints and requirements\
    \ or QoS requirements [104]. A two-way data exchange\nchannel over a single TCP\
    \ connection is provided by the WebSocket protocol. The protocol\nis designed\
    \ to operate on ports 80 and 443, similarly to HTTP, allowing for interactions\n\
    between a web browser (or other client application) and a web server at a lower\
    \ load\nthan alternatives while making it much easier to transfer real-time data\
    \ to and from the\nserver, which is an asset when considering its use in IoT systems\
    \ [105]. Thanks to the\npreviously mentioned interactions between the web browser\
    \ and the server, the protocol\nhas found applications in the development of online\
    \ games, particularly [106]. With the\ndevelopment of technology, the need for\
    \ IPv4 address allocation has gradually increased,\nwhich has contributed to basically\
    \ exhausting the entire pool of this addressing. In response\nto the introduction\
    \ of the new IPv6 addressing standard and the need to handle packets\ncontaining\
    \ such addresses, the 6LowPAN routing protocol, which is characterized by a\n\
    low power consumption, was created. The shortcomings of this protocol include\
    \ the large\nsize of the header relative to the data themselves; from the point\
    \ of view of application\nconsiderations, the implementation of this protocol\
    \ in RTIoT solutions can contribute to\nan increase in the level of latency or\
    \ packet loss with a direct impact on the deterioration\nof QoS parameters. Today,\
    \ further research is underway to address the challenges of the\n6LowPAN protocol,\
    \ which include fragmentation, header compression and security [107].\nElectronics\
    \ 2022, 11, 4120\n10 of 21\n5. RTIoT System Design Methodology\nThe implementation\
    \ of the functional model of the real-time system proposed in\nSection 2 requires\
    \ the implementation of selected elements included in the IoT solution\narchitecture.\
    \ Typical IoT systems primarily consist of sensors providing data to the system,\n\
    end devices (usually also equipped with sensors), a server application, and a\
    \ client appli-\ncation [5]. The sensors can be directly connected to the server\
    \ via internet links or can be\nan integral part of the end device. Indirectly,\
    \ there may also be edge devices whose job is\nto pre-process data. Communication\
    \ is usually carried out via low-energy technologies\nsuch as BLE (Bluetooth Low\
    \ Energy) [108], ZigBee [109], and LoRaWAN (Long Range\nWide Area Network) [110].\
    \ End devices using sensors communicate with an IoT system\nvia internet links.\
    \ They can also include actuators and controllers, so an IoT system can\nremotely\
    \ control such devices. Server applications are usually installed in cloud computing\n\
    or on a dedicated server, while the client applications used to operate the system\
    \ can come\nin the form of mobile, desktop or web applications. All of the aforementioned\
    \ components\ncommunicate using the relevant protocols.\nIn the case of real-time\
    \ systems, there is a time limit on obtaining a response, which\nmeans that once\
    \ a request is sent, a response is expected to be obtained within an assumed\n\
    maximum time (deadline). Exceeding this time can be treated as an error (systems\
    \ with\nhard constraints) or as a reduction in service quality (systems with soft\
    \ constraints) [111].\nRequests can be sent by either end devices or server or\
    \ client applications. In order to\nreduce the occurrence of the aforementioned\
    \ errors or to maintain the required level of\nquality of service in IoT systems,\
    \ one can use the solutions described earlier, such as edge\ncomputing, fog computing,\
    \ SDN, NFV, real-time databases, scheduling methods, and\nrelevant communication\
    \ protocols. These elements are described in Sections 3 and 4 of this\narticle,\
    \ and based on them, an illustrative architecture for a real-time IoT system can\
    \ be\nproposed, as shown in Figure 2. In the architecture, the following computing\
    \ layers that\ncan perform various tasks of the IoT system can be distinguished:\n\
    •\nSensor and actuator layer (SL): the layer consisting the interface between\
    \ an IoT system\nand its environment that enables the collection of data from\
    \ the environment and the\ncontrol of the elements of the environment.\n•\nEdge\
    \ layer (EL) (optional): an intermediate layer that enables the distributed process-\n\
    ing of data without the need to send them to a central system server.\n•\nCloud\
    \ layer (CL): the layer that contains the system’s servers and databases and that\n\
    usually controls the operation of the entire system.\n•\nUser layer (UL): the\
    \ layer that uses user applications (mobile, web or desktop). These\napplications\
    \ allow a user to interact with the rest of the IoT system.\nElectronics 2022,\
    \ 11, x FOR PEER REVIEW \n11 of 22 \n \n \nCloud layer (CL): the layer that contains\
    \ the system’s servers and databases and that \nusually controls the operation\
    \ of the entire system. \n \nUser layer (UL): the layer that uses user applications\
    \ (mobile, web or desktop). \nThese applications allow a user to interact with\
    \ the rest of the IoT system. \n \nFigure 2. General architecture of a real-time\
    \ IoT system. \nThere are communication links between different layers that enable\
    \ data transfer. \n5.1. System Specifications \nThe starting point for designing\
    \ an RTIoT system is a system specification in the \nf\nf\nib\nd\nf\nk\nh\nE\n\
    h\nk\nh d\nib\nf\ni\nf h\nFigure 2. General architecture of a real-time IoT system.\n\
    Electronics 2022, 11, 4120\n11 of 21\nThere are communication links between different\
    \ layers that enable data transfer.\n5.1. System Speciﬁcations\nThe starting point\
    \ for designing an RTIoT system is a system speciﬁcation in the form\nof an attributed\
    \ set of task graphs. Each task graph describes one function of the system.\n\
    The following attributes are deﬁned for each graph:\n•\nMaximum frequency of graph\
    \ activation: This attribute speciﬁes the maximum fre-\nquency of appearance of\
    \ input events that cause the execution of functions represented\nby a given TG.\n\
    •\nMaximum number of TG instances: This attribute speciﬁes the maximum number\
    \ of\nsimultaneous instances of the task graph. This corresponds to the maximum\
    \ number\nof simultaneous events that cause the activation of the functions described\
    \ by the TG.\n•\nA set of time constraints: The time constraints are associated\
    \ with the selected paths\nin the task graph and deﬁne the maximum time in which\
    \ all tasks must be completed\nfrom the activation of the task that starts the\
    \ path to the completion of the task that\nends the path.\n•\nFor each task, an\
    \ attribute is speciﬁed that assigns the task to a speciﬁc layer of the\narchitecture.\
    \ This attribute is deﬁned by the designer.\nExample task graphs are shown in\
    \ Figures 3–6. These graphs describe nine basic\nfunctions of a smart city system\
    \ for managing parking spaces. Figure 3 shows a user-\nactivated task graph for\
    \ the following system functionalities: searching for the parking\nspace closest\
    \ to the user’s current location, the function of ﬁnding the user’s car in the\n\
    parking lot based on their license plate number, the function of reserving any\
    \ free parking\nspace based on the entered search criteria, the function of charging\
    \ a parking fee for the\nused parking lot, and the function of retrieving information\
    \ on weather conditions.\nElectronics 2022, 11, x FOR PEER REVIEW \n1\n \n \n\
    Figure 3. Task graph of the parking space management system. \nFigure 3. Task\
    \ graph of the parking space management system.\nElectronics 2022, 11, 4120\n\
    12 of 21\n \nFigure 3. Task graph of the parking space management system. \n \n\
    Figure 4. Task graph for the problem of monitoring/managing parking spaces. \n\
    Figure 4. Task graph for the problem of monitoring/managing parking spaces.\n\
    lectronics 2022, 11, x FOR PEER REVIEW \n \nFigure 5. Task graph of basic system\
    \ functions triggered from the application. \nFigure 5. Task graph of basic system\
    \ functions triggered from the application.\nElectronics 2022, 11, 4120\n13 of\
    \ 21\n \n \nFigure 5. Task graph of basic system functions triggered from the\
    \ application. \n \nFigure 6. Task graph for the problem of collecting/updating\
    \ data on weather conditions. \nFor all system functionality, the starting point,\
    \ or trigger (T0_0), is the end-user ac-\ntivity in a dedicated application made\
    \ by selecting the appropriate function at the UL \nlayer level. Depending on\
    \ the selected function, a further sequence of events follows. \nWhen the user\
    \ selects the parking space search function (T0_1), the user’s current loca-\n\
    tion is retrieved using the GPS module (T0_4). If the car search function (T0_2)\
    \ is selected, \nthe user must enter the license plate number of the searched\
    \ vehicle (T0_10) into the ap-\nplication. On the other hand, when the function\
    \ of reserving a free parking space is se-\nlected from the user’s application\
    \ (T0_03), the end user enters data/criteria for the search \nfunction, such as\
    \ city and street (T0_12). The user also has the ability to download in-\nformation\
    \ on weather conditions (T0_17). In the next step (T0_5), the central server (a\
    \ \ndedicated cloud application running in the CL layer) receives queries from\
    \ the UL layer \nand starts the processes necessary to perform the called functions.\
    \ For example, data-\nFigure 6. Task graph for the problem of collecting/updating\
    \ data on weather conditions.\nFor all system functionality, the starting point,\
    \ or trigger (T0_0), is the end-user activity\nin a dedicated application made\
    \ by selecting the appropriate function at the UL layer\nlevel. Depending on the\
    \ selected function, a further sequence of events follows. When\nthe user selects\
    \ the parking space search function (T0_1), the user’s current location is\nretrieved\
    \ using the GPS module (T0_4). If the car search function (T0_2) is selected,\
    \ the user\nmust enter the license plate number of the searched vehicle (T0_10)\
    \ into the application.\nOn the other hand, when the function of reserving a free\
    \ parking space is selected from\nthe user’s application (T0_03), the end user\
    \ enters data/criteria for the search function,\nsuch as city and street (T0_12).\
    \ The user also has the ability to download information\non weather conditions\
    \ (T0_17). In the next step (T0_5), the central server (a dedicated\ncloud application\
    \ running in the CL layer) receives queries from the UL layer and starts\nthe\
    \ processes necessary to perform the called functions. For example, databases\
    \ can be\nsearched to ﬁnd free parking spaces while considering information from\
    \ the GPS tracker. A\nsearch for license plate numbers can be run, along with\
    \ the retrieval of the vehicle location\ndata assigned to them (parking/parking\
    \ space number). Taking the user’s criteria into\naccount, free parking spaces\
    \ can be searched for, or the fee due can be calculated based on\nthe time the\
    \ parking space is occupied and the parking rate for the given parking space.\
    \ The\n(T0_6) task runs functions in the user application responsible for receiving\
    \ and processing\ndata coming from the CL layer. In the next step, the user, based\
    \ on the generated data,\nselects a parking space by activating the “Reserve”\
    \ function (T0_7); in turn, for the process\nof searching for a car based on the\
    \ entered license plate number (T0_10), the end result is\nthe presentation of\
    \ the results of the query processing in the end-user application (T0_11) or\n\
    the start of the payment process using a debit/credit card or bank transfer (T0_14).\
    \ It is also\npossible to visualize data on weather conditions (T0_18). Once the\
    \ task is completed (T0_7),\nthe server-level procedure for processing a parking\
    \ space reservation request (T0_8) is\nstarted, and the state of the sensor is\
    \ changed; this is realized, for example, by changing the\ncolor of the marking\
    \ of a given space from green to red (T0_9). The task (T0_14) is followed\nby\
    \ the payment process through data exchange with the bank/payment card architecture\n\
    (T0_15). At the end of this path, the result is received in the form of information\
    \ on the\npayment in progress (T0_16).\nFigure 4 shows a task graph for the functionality\
    \ of monitoring and updating the\nstatus of individual parking spaces.\nThe starting\
    \ point/trigger for system function aimed at monitoring or managing\nparking spaces\
    \ is to register a change in sensor state/status (T1_0) at the sensor (sensor)\n\
    layer level. Then, via the network infrastructure, such information is transmitted\
    \ to the\nservers that make up the parking system (T1_1). In the next step (T1_2),\
    \ the central\nserver (a dedicated cloud application running at the CL layer)\
    \ receives queries from the\nEL layer and runs the processes necessary to execute\
    \ the called functions—in this case, a\nfunction to update the database with the\
    \ latest parking sensor states/statuses. In order\nElectronics 2022, 11, 4120\n\
    14 of 21\nfor the process to be considered successful, the end result at the edge\
    \ layer is to run\na procedure that receives a conﬁrmation of the completion of\
    \ cloud processing for the\ndatabase update (T1_3).\nFigure 5 presents a task\
    \ graph for the following functionalities: the function of reserv-\ning an available\
    \ parking space for given time criteria (T2_1) and the function of plotting a\n\
    route leading to a vehicle in the parking lot (T2_2). As for the task graph in\
    \ Figure 3, the\ntrigger for these functionalities is also the end-user activity\
    \ of selecting the appropriate\nfunction from the user application (T2_0). Depending\
    \ on the user’s selection of a speciﬁc\nfunction, they may be prompted in the\
    \ next step of the process to provide the data necessary\nto perform the search\
    \ function (T2_3). If the function of routing to a vehicle is implemented,\nthe\
    \ results of calling the cloud processing presentation function may be displayed\
    \ in the\nuser’s application (T2_9). In the next step (T2_4) the central server\
    \ (a dedicated cloud appli-\ncation running in the CL layer) receives queries\
    \ from the UL layer and starts the processes\nnecessary to perform the called\
    \ functions. For example, a database can be searched for\nfree parking spaces\
    \ given the criteria set by the user or a process can be run to search the\ndatabase\
    \ to determine the location of a vehicle with a speciﬁc license plate number.\
    \ Then,\nthe function responsible for receiving and processing data coming from\
    \ the CL layer (T2_5)\nis run in the user’s application. In the next step, based\
    \ on the generated data, the user\nselects a parking space by running the reservation\
    \ function (T2_6). Alternatively, from\nthe user’s application level, a function\
    \ for the presentation of the results of cloud query\nprocessing (T2_9) is run.\
    \ After the task (T2_6) is completed, the procedure for processing a\nparking\
    \ reservation request (T2_7) is started from the EL layer. The next step could\
    \ be a\ntask to start the navigation function in the user’s application interface\
    \ (T2_10). Finally, a\nchange in the state of the sensor is made; this can be\
    \ visualized, for example, by changing\nthe color of the marking of the given\
    \ parking space from green to red (T2_8). For another\nprocess, it could be running\
    \ a function designed to retrieve current position data from a\nGPS module.\n\
    The last graph shows the tasks for the functionality of reading and processing\
    \ informa-\ntion on the value of the outdoor temperature, as well as reading and\
    \ processing information\non the state of atmospheric pressure.\nSimilar to the\
    \ task graph shown in Figure 4, the tasks described for the problem of\ncollecting/updating\
    \ data on weather conditions also have sensor readings (T3_0) as the\nstarting\
    \ point/trigger for system operation. Then, through the network infrastructure,\
    \ the\ntemperature (T3_1) or the atmospheric pressure (T3_2) information is transmitted\
    \ to the\nservers that make up the CL layer level of the system. In the next step\
    \ (T3_3), the central\nserver receives queries from the EL layer and starts the\
    \ processes necessary to perform the\ncalled functions. Processes can be considered\
    \ successfully completed when the end result\nat the EL layer is the launch of\
    \ a procedure that receives conﬁrmation of the completion of\ncloud processing\
    \ for database updates (T3_4).\n5.2. Mapping Speciﬁcations to RTIoT System Architecture\n\
    The assignment of tasks to the RTIoT architecture layer is performed by the designer\n\
    at the system speciﬁcation stage. The next step is to map the speciﬁcations to\
    \ the different\nlayers of the RTIoT architecture. Figure 7 shows the results\
    \ of the speciﬁcation mapping\nintroduced in Section 5.1.\nFor simplicity, only\
    \ one instance of each graph was assumed. This corresponds to a\nsystem with one\
    \ user and single sensors (one parking lot and one parking space). In a real\n\
    system, one instance is created for each user and one instance is created for\
    \ each sensor\nthat can activate the TG. For this purpose, it is necessary to\
    \ assume the maximum load on\nthe system, i.e., the maximum number of simultaneous\
    \ users and the maximum number of\nparking lots and stands served by the system.\
    \ For clarity, the ﬁgure also does not indicate\ntransmission volumes and time\
    \ constraints. Based on the mapping, it is possible to obtain\ninformation about\
    \ the transmissions between the layers and the sequence dependencies\nbetween\
    \ these transmissions. For example, there may be 10 transmissions between the\n\
    Electronics 2022, 11, 4120\n15 of 21\nUL and CL layers: T0_4→T0_5, T0_10→T0_5,\
    \ T0_12→T0_5, T0_17→T0_5, T0_5→T0_6,\nT0_14→T0_15, T0_15→T0_16, T2_3→T2_4, T2_9→T2_4,\
    \ and T2_4→T2_5. It can also be\nnoted that there are sequence dependencies between\
    \ some transmissions, which means\nthat these transmissions will not compete with\
    \ each other for the communication link. This\nis important information from the\
    \ point of view of transmission scheduling.\n \ng p\ngg\ny\np\ng\ntemperature\
    \ (T3_1) or the atmospheric pressure (T3_2) information is transmitted to the\
    \ \nservers that make up the CL layer level of the system. In the next step (T3_3),\
    \ the central \nserver receives queries from the EL layer and starts the processes\
    \ necessary to perform \nthe called functions. Processes can be considered successfully\
    \ completed when the end \nresult at the EL layer is the launch of a procedure\
    \ that receives confirmation of the com-\npletion of cloud processing for database\
    \ updates (T3_4). \n5.2. Mapping Specifications to RTIoT System Architecture \n\
    The assignment of tasks to the RTIoT architecture layer is performed by the designer\
    \ \nat the system specification stage. The next step is to map the specifications\
    \ to the different \nlayers of the RTIoT architecture. Figure 7 shows the results\
    \ of the specification mapping \nintroduced in Section 5.1. \n \nFigure 7. Mapping\
    \ the described processes to RTIoT system architecture. \nFigure 7. Mapping the\
    \ described processes to RTIoT system architecture.\nAssuming the maximum frequency\
    \ of activation of individual tasks and the size\nof individual transmissions,\
    \ it is possible to estimate the throughput requirements of\ncommunication links.\
    \ These requirements can be reduced by appropriately scheduling\ntransmissions\
    \ so that time-constrained transmissions are executed in an order that ensures\n\
    the maximum QoS.\n5.3. RTIoT System Optimization\nIn the RTIoT system, each function,\
    \ represented by a task graph, can be simultaneously\nactivated by different sources\
    \ (users and sensors). This can be represented by multiple\ninstances of a given\
    \ graph. When designing an RTIoT system, one speciﬁes the requirements\nfor the\
    \ system by identifying the following constraints:\n•\nMaximum number of instances\
    \ of a given graph: This parameter determines the\nmaximum load on the system\
    \ in terms of the number of simultaneously activated tasks.\nElectronics 2022,\
    \ 11, 4120\n16 of 21\n•\nMaximum processing time (deadline): This parameter speciﬁes\
    \ the maximum time\nthat can elapse from the start of the tstart task to the completion\
    \ of the tstop task. For\na given system, there can be multiple time constraints\
    \ that deﬁne different paths in\ntask graphs. For soft-real-time systems, a soft\
    \ constraint is deﬁned as ds\nmax and a hard\nconstraint is deﬁned as dh\nmax.\n\
    The goal of optimizing RTIoT systems is to achieve the highest possible QoS. The\
    \ QoS\nfor a single constraint can be deﬁned as:\nQoSi =\n\n\n\n\n\n0\nif\
    \ ti > dh\nmax\n1\nif ti < ds\nmax\n1 −\nti−ds\nmax\ndh\nmax−ds\nmax\nin other\
    \ cases\n(1)\nwhere ti is the current execution time of tasks covered by the i-th\
    \ constraint.\nThen, the total QoS for the system can be determined as the average\
    \ value of all QoSi:\nQoS =\nn\n∑\ni=0\nQoSi\nn\n(2)\nwhere n is the number of\
    \ all constraints in all instances of task graphs.\nWhile intending to obtain\
    \ the highest possible QoS value, the optimization of the\nsystem consists in\
    \ prioritizing the execution of tasks and transmissions in such a way as to\n\
    minimize any exceedance of time constrains. For this purpose, the scheduling methods\n\
    described in Section 4 can be used. However, in order to be able to perform tasks\
    \ and\ntransmissions according to the optimized prioritization, it is necessary\
    \ to consider the\nfollowing properties of the RTIoT architecture:\n•\nTransmissions\
    \ are carried out over shared internet links: To ensure predictable trans-\nmission\
    \ times, it is necessary to develop routing methods that consider the required\n\
    order and priority of transmissions.\n•\nIndividual tasks and transmissions are\
    \ assigned to resources distributed over the\ninternet. Therefore, in order to\
    \ execute them in the required order, it is necessary\nto use time synchronization\
    \ mechanisms. This can be accomplished by developing\nappropriate communication\
    \ protocols.\nAssuming that the aforementioned solutions are available, the presented\
    \ methodology\ncan enable the automatic synthesis of QoS-optimized RTIoT systems.\
    \ The quality of a given\nsolution is evaluated by calculating the QoS value deﬁned\
    \ by Equation (2). This value\nis calculated for the worst-case scenario, i.e.,\
    \ assuming the maximum system load and\nmaximum computation and transmission times.\n\
    6. Conclusions\nThis article presents a methodology for designing RTIoT systems\
    \ that includes the\nfollowing elements:\n•\nFour-layer generic RTIoT system architecture\
    \ model.\n•\nFunctional speciﬁcation method in the form of a set of task graphs\
    \ with assignment of\ntasks to IoT architecture layers.\n•\nA method for mapping\
    \ functional speciﬁcations into an RTIoT system architecture.\n•\nRequirements\
    \ for communication protocols and routing methods used in RTIoT systems.\nFor\
    \ the proposed RTIoT architecture model, a method is presented to ensure that\n\
    the functional speciﬁcation is mapped into an optimized IoT architecture. The\
    \ starting\npoint is the speciﬁcation of the functions of a given system in the\
    \ form of task graphs.\nFor each task, their assignment to the different layers\
    \ of the IoT architecture and time\nconstraints are speciﬁed. The speciﬁcation\
    \ is then mapped into the target architecture\nby globally prioritizing tasks\
    \ and transmissions. The scheduling method optimizes the\nschedule to achieve\
    \ the highest possible QoS. The presented methodology is based on\nElectronics\
    \ 2022, 11, 4120\n17 of 21\nanalogous methodologies used in the synthesis of embedded\
    \ systems. However, due to\nthe nature of the IoT architecture, it was necessary\
    \ to consider speciﬁc features of the\nIoT architecture such as the lack of the\
    \ centralized control of all elements of the system,\nthe sharing of communication\
    \ and computing infrastructure with other systems, and\nthe dynamic number of\
    \ tasks in the system. This paper also provides an overview of\nexisting methods\
    \ and technologies relevant to RTIoT systems. The purpose of this review\nwas\
    \ to present current solutions that can be applied to RTIoT systems, as well as\
    \ to\nindicate the missing elements that require development in order to create\
    \ a complete design\nenvironment for RTIoT systems. In this way, this paper can\
    \ also be a valuable resource for\ndesigners and others interested in RTIoT.\n\
    The proposed methodology was illustrated with an example of designing a practical\n\
    RTIoT system that performs the functions of a smart system for handling a city’s\
    \ parking\nlots. The example demonstrated the practical usefulness of the proposed\
    \ methodology in\nthe design and optimization of RTIoT systems. To the best of\
    \ our knowledge, this is the ﬁrst\npaper to present a complete methodology for\
    \ the design of a broad class of RTIoT systems\nwhile considering the QoS optimization\
    \ of such systems.\nFurther work will involve the development of routing methods\
    \ and communication\nprotocols to enable the implementation of systems designed\
    \ according to the method-\nology presented in this work. The result will be a\
    \ complete RTIoT system design and\nimplementation environment that ensures the\
    \ creation of systems with a high level of QoS.\nAuthor Contributions: S.D.: conceptualization,\
    \ methodology, investigation, formal analysis, valida-\ntion, visualization, writing—original\
    \ draft, writing—review and editing, supervision, and funding\nacquisition; M.P.:\
    \ conceptualization, methodology, investigation, formal analysis, validation,\
    \ visu-\nalization, writing—original draft, writing—review and editing, and supervision;\
    \ Ł.A.: conceptu-\nalization, methodology, investigation, formal analysis, validation,\
    \ visualization, writing—original\ndraft, and writing—review and editing. All\
    \ authors have read and agreed to the published version of\nthe manuscript.\n\
    Funding: This research received no external funding.\nData Availability Statement:\
    \ Not applicable.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nQadri, Y.A.; Nauman, A.; Zikria, Y.B.; Vasilakos, A.V.; Kim, S.W.\
    \ The Future of Healthcare Internet of Things: A Survey of\nEmerging Technologies.\
    \ IEEE Commun. Surv. Tutor. 2020, 22, 1121–1167. [CrossRef]\n2.\nSadhukhan, P.\
    \ An IoT-based E-Parking System for Smart Cities. In Proceedings of the 2017 International\
    \ Conference on Advances\nin Computing, Communications and Informatics (ICACCI),\
    \ Udupi, India, 13–16 September 2017.\n3.\nPłaza, M.; Belka, R.; Szcze´sniak,\
    \ Z. Towards a different world–On the potential of the internet of everything.\
    \ IAPGOS 2019,\n2, 8–11. [CrossRef]\n4.\nShuja, J.; Humayun, M.A.; Alasmary, W.;\
    \ Sinky, H.; Alanazi, E.; Khan, M.K. Resource efﬁcient geo-textual hierarchical\
    \ clustering\nframework for social IoT applications. IEEE Sens. J. 2021, 21, 25114–25122.\
    \ [CrossRef]\n5.\nKhanna, A. IoT based Smart Parking System. In Proceedings of\
    \ the 2016 International Conference on Internet of Things and\nApplications (IOTA),\
    \ Maharashtra Institute of Technology, Pune, India, 22–24 January 2016.\n6.\n\
    Ahmad, I.; Pothuganti, K. Design & implementation of real time autonomouscar by\
    \ using image processing & IoT. In Proceedings\nof the 2020 Third International\
    \ Conference on Smart Systems and Inventive Technology (ICSSIT 2020), Tirunelveli,\
    \ India,\n20–22 August 2020.\n7.\nBelka, R.; Deniziak, S.; Płaza, M.; Hejduk,\
    \ M.; Pi˛eta, P.; Płaza, M.; Czekaj, P.; Wołowiec, P.; Ludwinek, K. Integrated\
    \ visitor\nsupport system for tourism industry based on IoT technologies. In Proceedings\
    \ of the SPIE 2018, Applications in Astronomy,\nCommunications, Industry, and\
    \ High-Energy Physics Experiments, Wilga, Poland, 26 May–4 June 2018; p. 108081J.\
    \ [CrossRef]\n8.\nPi˛eta, P.; Deniziak, S.; Belka, R.; Płaza, M.; Płaza, M. Multi-domain\
    \ model for simulating smart IoT-based theme parks. In Proceed-\nings of the SPIE\
    \ 2018, Photonics Applications in Astronomy, Communications, Industry, and High-Energy\
    \ Physics Experiments,\nWilga, Poland, 26 May–4 June 2018; p. 108082T. [CrossRef]\n\
    9.\nIvankova, G.V.; Mochalina, E.P.; Goncharova, N.L. Internet of Things (IoT)\
    \ in logistics. IOP Conf. Ser. Mater. Sci. Eng. 2020,\n940, 1–7. [CrossRef]\n\
    10.\nSong, Y.; Yu, F.R.; Li Zhou, F.; Yang, X.; He, Z. Applications of the Internet\
    \ of Things (IoT) in Smart Logistics: A Comprehensive\nSurvey. IEEE Internet Things\
    \ J. 2021, 8, 4250–4274. [CrossRef]\nElectronics 2022, 11, 4120\n18 of 21\n11.\n\
    Muangprathub, J.; Boonnam, N.; Kajornkasirat, S.; Lekbangpong, N.; Wanichsombat,\
    \ A.; Nillaor, P. IoT and agriculture data\nanalysis for smart farm. Comput. Electron.\
    \ Agric. 2019, 156, 467–474. [CrossRef]\n12.\nPłaza, M.; Belka, R.; Płaza, M.;\
    \ Deniziak, S.; Pi˛eta, P.; Doszczeczko, S. Analysis of feasibility and capabilities\
    \ of RTLS systems\nin tourism industry. In Proceedings of the SPIE 2018, Photonics\
    \ Applications in Astronomy, Communications, Industry, and\nHigh-Energy Physics\
    \ Experiments, Wilga, Poland, 26 May–4 June 2018; p. 108080C. [CrossRef]\n13.\n\
    Kodali, R.K.; Rajanarayanan, S.C.; Koganti, A.; Boppana, L. IoT based security\
    \ system. In Proceedings of the TENCON 2019–2019\nIEEE Region 10 Conference (TENCON),\
    \ Kochi, India, 17–20 October 2019.\n14.\nKang, B.; Park, S.; Lee, T.; Park, S.\
    \ IoT-based monitoring system using tri-level context making model for smart home\
    \ ser-\nvices. In Proceedings of the 2015 IEEE International Conference on Consumer\
    \ Electronics (ICCE), Las Vegas, NV, USA,\n9–12 January 2015.\n15.\nChen, X.-Y.;\
    \ Jin, Z.-G. Research on Key Technology and Applications for Internet of Things.\
    \ Phys. Procedia 2012, 33, 561–566.\n[CrossRef]\n16.\nBalandina, E.; Balandin,\
    \ S.; Koucheryavy, Y.; Mouromtsev, D. IoT Use Cases in Healthcare and Tourism.\
    \ In Proceedings of the\n2015 IEEE 17th Conference on Business Informatics, Lisbon,\
    \ Portugal, 13–16 July 2015.\n17.\nPhilip, B.V.; Alpcan, T.; Jin, J.; Palaniswami,\
    \ M. Distributed Real-Time IoT for Autonomous Vehicles. IEEE Trans. Ind. Inform.\
    \ 2019,\n15, 1131–1140. [CrossRef]\n18.\nSaraf, S.B.; Gawali, D.H. IoT Based Smart\
    \ Irrigation Monitoring And Controlling System. In Proceedings of the 2017 2nd\
    \ IEEE\nInternational Conference On Recent Trends in Electronics Information &\
    \ Communication Technology (RTEICT), Bangalore, India,\n19–20 May 2017.\n19.\n\
    Pawar, S.; Kithani, V.; Ahuja, S.; Sahu, S. Smart Home Security using IoT and\
    \ Face Recognition. In Proceedings of the 2018 Fourth\nInternational Conference\
    \ on Computing Communication Control and Automation (ICCUBEA), Pune, India, 16–18\
    \ August 2018.\n20.\nLu, D.; Teng, Q. Application of Cloud Computing and IoT in\
    \ Logistics. J. Softw. Eng. Appl. 2012, 5, 204–207. [CrossRef]\n21.\nEbling, M.R.;\
    \ Watson, J. IoT: From Sports to Fashion and Everything In-Between. IEEE Pervasive\
    \ Comput. 2016, 15, 2–4. [CrossRef]\n22.\nTianxiang, Z. A Mobile Architecture\
    \ to Real-time Device Safety Monitoring of Amusement Park Ride Based on the Internet\
    \ of\nThings. Contemp. Logist. 2011, 5, 42–46.\n23.\nIsyanto, H.; Ariﬁn, A.S.;\
    \ Suryanegara, M. Design and Implementation of IoT-Based Smart Home Voice Commands\
    \ for disabled\npeople using Google Assistant. In Proceedings of the 2020 International\
    \ Conference on Smart Technology and Applications\n(ICoSTA), Surabaya, Indonesia,\
    \ 20 February 2020.\n24.\nPatel, S.; Kumar, P.; Garg, S.; Kumar, R. Face Recognition\
    \ based smart attendance system using IoT. Int. J. Comput. Sci. Eng. 2018,\n6,\
    \ 871–877. [CrossRef]\n25.\nAvateﬁpour, O.; Sadry, F. Trafﬁc Management System\
    \ Using IoT Technology-A Comparative Review. In Proceedings of the 2018\nIEEE\
    \ International Conference on Electro/Information Technology (EIT), Rochester,\
    \ MI, USA, 3–5 May 2018.\n26.\nPłaza, M.; Deniziak, S.; Płaza, M.; Belka, R.;\
    \ Pi˛eta, P. Analysis of parallel computational models for clustering. In Proceedings\
    \ of\nthe SPIE 2018, Photonics Applications in Astronomy, Communications, Industry,\
    \ and High-Energy Physics Experiments, Wilga,\nPoland, 3–10 June 2018; p. 108081O.\
    \ [CrossRef]\n27.\nPradityo, F.; Surantha, N. Indoor Air Quality Monitoring and\
    \ Controlling System Based on IoT and Fuzzy Logic. In Proceedings\nof the 2019\
    \ 7th International Conference on Information and Communication Technology (ICoICT),\
    \ Kuala Lumpur, Malaysia,\n24–26 July 2019.\n28.\nKalsoom, T.; Ahmed, S.; Raﬁ-ul-Shan,\
    \ P.M.; Azmat, M.; Akhtar, P.; Pervez, Z.; Imran, M.A.; Ur-Rehman, M. Impact of\
    \ IoT on\nManufacturing Industry 4.0: A New Triangular Systematic Review. Sustainability\
    \ 2021, 13, 12506. [CrossRef]\n29.\nJayaraman, P.P.; Perera, C.; Georgakopoulos,\
    \ D.; Dustdar, S.; Thakker, D.; Ranjan, R. Analytics-as-a-service in a multi-cloud\n\
    environment through semantically-enabled hierarchical data processing. Softw.\
    \ Pract. Exp. 2010, 47, 1139–1156. [CrossRef]\n30.\nMourtzis, D.; Vlachou, E.;\
    \ Milas, N. Industrial Big Data as a result of IoT adoption in Manufacturing.\
    \ Procedia CIRP 2016,\n55, 290–295. [CrossRef]\n31.\nRamnath, S.; Javali, A.;\
    \ Narang, B.; Mishra, P.; Routray, S.K. IoT based localization and tracking. In\
    \ Proceedings of the 2017\nInternational Conference on IoT and Application (ICIOT),\
    \ Nagapattinam, India, 19–20 May 2017.\n32.\nKheliﬁ, F.; Bradai, A.; Benslimane,\
    \ A.; Rawat, P.; Atri, M. A Survey of Localization Systems in Internet of Things.\
    \ Mob. Netw. Appl.\n2019, 24, 761–785. [CrossRef]\n33.\nB ˛ak, S.; Czarnecki,\
    \ R.; Deniziak, S. Synthesis of real-time cloud applications for Internet of Things.\
    \ Turk. J. Electr. Eng. Comput. Sci.\n2015, 23, 913–929. [CrossRef]\n34.\nIntel.\
    \ Intel Time Coordinated Computing Tools (Intel TCC Tools). 2022. Available online:\
    \ https://www.intel.com/content/\nwww/us/en/developer/tools/time-coordinated-computing-tools/overview.html\
    \ (accessed on 10 September 2022).\n35.\nIntel. Real-Time at the Edge: Overview.\
    \ 2022. Available online: https://www.intel.com/content/www/us/en/design/technologies-\n\
    and-topics/iot/real-time.html (accessed on 10 September 2022).\n36.\nLee, J.;\
    \ Park, S. Time-Sensitive Network (TSN) Experiment in Sensor-Based Integrated\
    \ Environment for Autonomous Driving.\nSensors 2019, 19, 1111. [CrossRef]\n37.\n\
    Rawat, P.; Singh, K.D.; Bonnin, J.M. Cognitive Radio for M2M and Internet of Things:\
    \ A survey. Comput. Commun. 2016, 94, 1–29.\n[CrossRef]\nElectronics 2022, 11,\
    \ 4120\n19 of 21\n38.\nPerera, C.; Talagala, D.S.; Liu, C.H.; Estrella, J.C. Energy-Efﬁcient\
    \ Location and Activity-Aware On-Demand Mobile Distributed\nSensing Platform for\
    \ Sensing as a Service in IoT Clouds. IEEE Trans. Comput. Soc. Syst. 2015, 2,\
    \ 171–181. [CrossRef]\n39.\nLasota, M.; Deniziak, S.; Chrobot, A. Scalable Distributed\
    \ Datastore for Real-Time Cloud Computing. In Federated Conference on\nSoftware\
    \ Development and Object Technologies; Springer: Cham, Switzerland, 2017; Volume\
    \ 511, pp. 193–207.\n40.\nCzarnecki, R.; Deniziak, S. Embedded Real-Time HTTP\
    \ Server. Int. J. Comput. Netw. Inf. Secur. 2015, 5, 1–8. [CrossRef]\n41.\nZhao,\
    \ J.-C.; Zhang, J.-F.; Feng, Y.; Guo, J.-X. The Study and Application of the IoT\
    \ Technology in Agriculture. In Proceedings of\nthe 2010 3rd International Conference\
    \ on Computer Science and Information Technology, Chengdu, China, 9–11 July 2010.\n\
    42.\nLee, J.; Kim, J.; Kim, S.; Lim, C.; Jung, J. Enhanced distributed streaming\
    \ system based on RTP/RTSP in resurgent ability.\nIn Proceedings of the Fourth\
    \ Annual ACIS International Conference on Computer and Information Science (ICIS’05),\
    \ Jeju Island,\nRepublic of Korea, 14–16 July 2005.\n43.\nKirsche, M.; Klauck,\
    \ R. Unify to bridge gaps: Bringing XMPP into the Internet of Things. In Proceedings\
    \ of the 2012 IEEE\nInternational Conference on Pervasive Computing and Communications\
    \ Workshops, Lugano, Switzerland, 19–23 March 2012.\n44.\nKrishnaa, G.G.; Krishnaa,\
    \ G.; Bhalajia, N. Analysis of Routing Protocol for Low-Power and Lossy Networks\
    \ in IoT Real Time.\nAppl. Procedia Comput. Sci. 2016, 87, 270–274. [CrossRef]\n\
    45.\nBiswas, A.R.; Giaffreda, R. IoT and Cloud Convergence: Opportunities and\
    \ Challenges. In Proceedings of the 2014 IEEE World\nForum on Internet of Things\
    \ (WF-IoT), Seoul, Republic of Korea, 6–8 March 2014.\n46.\nAhmad, S.; Malik,\
    \ S.; Ullah, I.; Fayaz, M.; Park, D.-H.; Kim, K.; Kim, D.H. An Adaptive Approach\
    \ Based on Resource-Awareness\nTowards Power-Efﬁcient Real-Time Periodic Task\
    \ Modeling on Embedded IoT Devices. Processes 2018, 6, 90. [CrossRef]\n47.\nEugne,\
    \ D.; Ngangue, N.; Andomaya, C. On Enhancing Technology Coexistence in theIoT\
    \ Era: ZigBee and 802.11 Case. IEEE\nAccess 2016, 4, 1835–1844.\n48.\nStonebraker,\
    \ M.; Weisberg, A. The VoltDB Main Memory DBMS. IEEE Computer Society Technical\
    \ Committee on Data Engineer-\ning. 2013. Available online: http://sites.computer.org/debull/A13june/VoltDB1.pdf\
    \ (accessed on 10 September 2022).\n49.\nLi, W.-J.; Yen, C.; Lin, Y.-S.; Tung,\
    \ S.-C.; Huang, S.M. Just IoT Internet of Things based on the Firebase Real-time\
    \ Database.\nIn Proceedings of the 2018 IEEE International Conference on Smart\
    \ Manufacturing, Industrial & Logistics Engineering (SMILE),\nHsinchu, Taiwan,\
    \ 8–9 February 2018.\n50.\nDeniziak, S. Design Models in SYSTEMC Language. In\
    \ Technical Transactions; 1-I; Krakow University of Technology: Krakow,\nPoland,\
    \ 2007; pp. 17–33.\n51.\nWolf, W. High-Performance Embedded Computing, Architectures,\
    \ Applications, and Methodologies; Elsevier: San Francisco, CA,\nUSA, 2007.\n\
    52.\nDeniziak, S.; Tomaszewski, R. Co-synthesis of contention-free energy-efﬁcient\
    \ NOC-based real time embedded systems. J. Syst.\nArchit. 2019, 98, 92–101. [CrossRef]\n\
    53.\nDe Donno, M.; Tange, K.; Dragoni, N. Foundations and Evolution of Modern\
    \ Computing Paradigms: Cloud, IoT, Edge, and Fog.\nIEEE Access 2019, 7, 150936–150948.\
    \ [CrossRef]\n54.\nAlrowaily, M.; Lu, Z. Secure Edge Computing in IoT Systems:\
    \ Review and Case Studies. In Proceedings of the 2018 IEEE/ACM\nSymposium on Edge\
    \ Computing (SEC), Seattle, WA, USA, 25–27 October 2018.\n55.\nWan, S.; Ding,\
    \ S.; Chen, C. Edge computing enabled video segmentation for real-time trafﬁc\
    \ monitoring in internet of vehicles.\nPattern Recognit. 2022, 121, 108146. [CrossRef]\n\
    56.\nSun, Y.; Fei, T.; Li, X.; Warnecke, A.; Warsitz, E.; Pohl, N. Real-time radar-based\
    \ gesture detection and recognition built in an\nedge-computing platform. IEEE\
    \ Sens. J. 2020, 20, 10706–10716. [CrossRef]\n57.\nYu, W.; Liang, F.; He, X.;\
    \ Hatcher, W.G.; Lu, C.; Lin, J.; Yang, X. A Survey on the Edge Computing for\
    \ the Internet of Things. IEEE\nAccess 2017, 6, 6900–6919. [CrossRef]\n58.\nHamdan,\
    \ S.; Ayyash, M.; Almajali, S. Edge-Computing Architectures for Internet of Things\
    \ Applications: A Survey. Sensors 2020,\n20, 6441. [CrossRef]\n59.\nBonomi, F.;\
    \ Milito, R.; Zhu, J.; Addepalli, S. Fog Computing and its Role in the Internet\
    \ of Things. In Proceedings of the First\nEdition of the MCC Workshop on Mobile\
    \ Cloud Computing, Helsinki, Finland, August 2012; pp. 13–16.\n60.\nOktian, Y.E.;\
    \ Witanto, E.N.; Lee, S.-G. A Conceptual Architecture in Decentralizing Computing,\
    \ Storage, and Networking Aspect\nof IoT Infrastructure. IoT 2021, 2, 205–221.\
    \ [CrossRef]\n61.\nLi, J.; Jin, J.; Yuan, D.; Zhang, H. Virtual Fog: A Virtualization\
    \ Enabled Fog Computing Framework for Internet of Things. IEEE\nInternet Things\
    \ J. 2018, 5, 121–131. [CrossRef]\n62.\nLi, Y.; Xuan Phan, L.T.; Loo, B.T. Network\
    \ Functions Virtualization with Soft Real-Time Guarantees. In Proceedings of the\n\
    IEEE INFOCOM 2016-The 35th Annual IEEE International Conference on Computer Communications,\
    \ San Francisco, CA, USA,\n10–14 April 2016.\n63.\nJawdhari, H.A.; Abdullah, A.A.\
    \ The Application of Network Functions Virtualization on Different Networks, and\
    \ its New\nApplications in Blockchain: A Survey. Spec. Issue Comput. Technol.\
    \ Inf. Manag. 2021, 18, 1007–1044. [CrossRef]\n64.\nAbdulqadir, H.R.; Zeebaree,\
    \ S.R.M.; Shukur, H.M.; Sadeeq, M.A.M.; Salim, B.W.; Salih, A.A.; Kak, S.F. A\
    \ study of moving from\ncloud computing to fog computing. Qubahan Acad. J. 2022,\
    \ 2, 60–70. [CrossRef]\n65.\nCao, K.; Liu, Y.; Meng, G.; Sun, Q. An overview on\
    \ edge computing research. IEEE Access 2020, 8, 85714–85728. [CrossRef]\n66.\n\
    Al-Shammari, B.K.J.; Al-Aboody, N.; Al-Raweshidy, H.S. IoT Trafﬁc Management and\
    \ Integration in the QoS Supported Network.\nIEEE Internet Things J. 2017, 5,\
    \ 352–370. [CrossRef]\nElectronics 2022, 11, 4120\n20 of 21\n67.\nCui, L.; Xu,\
    \ C.; Yang, S.; Huang, J.Z.; Li, J.; Ming, X.W.Z.; Lu, N. Joint Optimization of\
    \ Energy Consumption and Latency in\nMobile Edge Computing for Internet of Things.\
    \ IEEE Internet Things J. 2018, 6, 4791–4803. [CrossRef]\n68.\nAtlam, H.F.; Walters,\
    \ R.J.; Wills, G.B. Fog Computing and the Internet of Things: A Review. Big Data\
    \ Cogn. Comput. 2018, 2, 10.\n[CrossRef]\n69.\nNovo, O. Blockchain Meets IoT:\
    \ An Architecture for Scalable Access Management in IoT. IEEE Internet Things\
    \ J. 2018, 5, 1184–1195.\n[CrossRef]\n70.\nNgabo, D.; Wang, D.; Iwendi, C.; Anajemb,\
    \ J.A.; Ajao, L.A.; Biamba, C. Blockchain-Based Security Mechanism for the Medical\n\
    Data at Fog Computing Architecture of Internet of Things. Electronics 2021, 10,\
    \ 2110. [CrossRef]\n71.\nTayyaba, S.K.; Shah, M.A.; Khan, O.A.; Ahmed, A.W. Software\
    \ Deﬁned Network (SDN) Based Internet of Things (IoT): A Road\nAhead. In Proceedings\
    \ of the ICFNDS’17: Proceedings of the International Conference on Future Networks\
    \ and Distributed\nSystems, Cambridge, UK, 19–20 July 2017; pp. 1–8.\n72.\nMazhar,\
    \ N.; Salleh, R.; Zeeshan, M.; Hameed, M.M.; Khan, N. R-IDPS: Real time SDN based\
    \ IDPS system for IoT security.\nIn Proceedings of the 2021 IEEE 18th International\
    \ Conference on Smart Communities: Improving Quality of Life Using ICT, IoT\n\
    and AI (HONET), Karachi, Pakistan, 11–13 October 2021.\n73.\nHasan, K.; Wu, X.-W.;\
    \ Biswas, K.; Ahmed, K. A Novel Framework for Software Deﬁned Wireless Body Area\
    \ Network. In Proceed-\nings of the 2018 8th International Conference on Intelligent\
    \ Systems, Modelling and Simulation (ISMS), Kuala Lumpur, Malaysia,\n8–10 May\
    \ 2018.\n74.\nYassein, M.B.; Aljawarneh, S.; Al-Rousan, M.; Mardini, W.; Al-Rashdan,\
    \ W. Combined Software-Deﬁned Network (SDN) and\nInternet of Things (IoT). In\
    \ Proceedings of the 2017 International Conference on Electrical and Computing\
    \ Technologies and\nApplications (ICECTA), Ras Al Khaimah, United Arab Emirates,\
    \ 21–23 November 2017.\n75.\nLi, J.; Altman, E.; Touati, C. A General SDN-based\
    \ IoT Framework with NVF Implementation. ZTE Commun. 2015, 13, 42–45.\n76.\nTang,\
    \ W.; Zhang, R.; Feng, S. A Spatiotemporal Model for Hard-deadlineMulti-stream\
    \ Trafﬁc in Uplink IoT Networks. IEEE\nInternet Things J. 2021, 9, 601–615. [CrossRef]\n\
    77.\nAudsley, N.C.; Burns, A.; Richardson, M.F.; Wellings, A.J. Absolute and relative\
    \ temporal constraints in hard real-time databases.\nIn Proceedings of the Fourth\
    \ Euromicro Workshop on Real-Time Systems, Athens, Greece, 3–5 June 1992.\n78.\n\
    Druid. Apache Druid Is a Real-time Database to Power Modern Analytics Applications.\
    \ 2022. Available online: https://druid.apache.\norg/ (accessed on 10 September\
    \ 2022).\n79.\nVolt Active Data. Where We Sit in the Stack. 2022. Available online:\
    \ https://www.voltactivedata.com/ (accessed on 10 September 2022).\n80.\nLitwin,\
    \ W.; Neimat, M.-A.; Schneider, D.A. LH*—A scalable, distributed data structure.\
    \ ACM Trans. Database Syst. 1996,\n21, 480–525. [CrossRef]\n81.\nLasota, M.; Deniziak,\
    \ S.; Chrobot, A. An SDDS-Based Architecture for a Real-Time Data Store. Int.\
    \ J. Inf. Eng. Electron. Bus. 2016,\n1, 21–28. [CrossRef]\n82.\nHayatunnufus;\
    \ Riasetiawan, M.; Ashari, A. Performance Analysis of FIFO and Round Robin Scheduling\
    \ Process Algorithm in IoT\nOperating System for Collecting Landslide Data. In\
    \ Proceedings of the 2020 International Conference on Data Science, Artiﬁcial\n\
    Intelligence, and Business Analytics (DATABIA), Medan, Indonesia, 16–17 July 2020.\n\
    83.\nMalik, S.; Ahmad, S.; Ullah, I.; Park, D.H.; Kim, D.H. An Adaptive Emergency\
    \ First Intelligent Scheduling Algorithm for E cient\nTask Management and Scheduling\
    \ in Hybrid of Hard Real-Time and Soft Real-Time Embedded IoT Systems. Sustainability\
    \ 2019,\n11, 2192. [CrossRef]\n84.\nPereira, D.A.; Ourique de Morais, W.; Pignaton\
    \ de Freitas, E. NoSQL real-time database performance comparison. Int. J. Parallel\n\
    Emergent Distrib. Syst. 2017, 33, 144–156. [CrossRef]\n85.\nKaur, K.; Sachdeva,\
    \ M. Performance Evaluation of NewSQL Databases. In Proceedings of the 2017 International\
    \ Conference on\nInventive Systems and Control (ICISC), Coimbatore, India, 19–20\
    \ January 2017.\n86.\nSingh, R.K.; Pandey, S.; Shanker, U. A Non-Database Operations\
    \ Aware Priority Ceiling Protocol for Hard Real-Time Database\nSystems. In Proceedings\
    \ of the 2019 10th International Conference on Computing, Communication and Networking\
    \ Technologies\n(ICCCNT), Kanpur, India, 6–8 July 2019.\n87.\nHalang, W.A.; Stoyenko,\
    \ A.D. Real Time Computing; Springer: Berlin/Heidelberg, Germany, 1994; pp. 261–282.\n\
    88.\nAbohamama, A.S.; El-Ghamry, A.; Hamouda, E. Real-Time Task Scheduling Algorithm\
    \ for IoT-Based Applications in the\nCloud–Fog Environment. J. Netw. Syst. Manag.\
    \ 2022, 30, 54. [CrossRef]\n89.\nKoukopoulos, D. The Impact of FIFO Compositions\
    \ with Other Protocols on the Stability of Multimedia Networks Facing\nDynamic\
    \ Adversarial Attacks. In Proceedings of the MINES’13, 2013 Fifth International\
    \ Conference on Multimedia Information\nNetworking and Security, Beijing, China,\
    \ 1 November 2013; pp. 575–578.\n90.\nKashyap, R.; Arora, K.; Sharma, M.; Aazam,\
    \ A. Security-Aware GA based Practical Byzantine Fault Tolerance for Permissioned\n\
    Blockchain. In Proceedings of the 2019 4th International Conference on Control,\
    \ Robotics and Cybernetics (CRC), Tokyo, Japan,\n27–30 September 2019.\n91.\n\
    Xu, G.; Liu, Y.; Xing, J.; Luo, T.; Gu, Y.; Liu, S.; Zheng, X.; Vasilakos, A.V.\
    \ SG-PBFT: A Secure and Highly Efﬁcient, Blockchain\nPBFT Consensus Algorithm\
    \ for Internet of Vehicles, Computer Science. J. Parallel Distrib. Comput. 2022,\
    \ 164, 1–11. [CrossRef]\n92.\nPark, G.-L.; Shirazi, B.; Marquis, J.; Choo, H.\
    \ Decisive path scheduling: A new list scheduling method. In Proceedings of the\
    \ 1997\nInternational Conference on Parallel Processing, Bloomington, IL, USA,\
    \ 11–15 August 1997.\nElectronics 2022, 11, 4120\n21 of 21\n93.\nZonios, C.; Tenentes,\
    \ V. Energy Efﬁcient Speech Command Recognition for Private Smart Home IoT Applications.\
    \ In Proceedings\nof the 2021 10th International Conference on Modern Circuits\
    \ and Systems Technologies (MOCAST), Thessaloniki, Greece,\n5–7 July 2021.\n94.\n\
    Teng, S.; Zhang, W.; Zhu, H.; Fu, X.; Su, J.; Cui, B. A Least-Laxity-First Scheduling\
    \ Algorithm of Variable Time Slice for Periodic\nTasks. Int. J. Softw. Sci. Comput.\
    \ Intell. 2012, 2, 19.\n95.\nFurst, J.; Chen, K.; Kim, H.-S.; Bonnet, P. Evaluating\
    \ Bluetooth Low Energy for IoT. In Proceedings of the 2018 IEEE Workshop on\n\
    Benchmarking Cyber-Physical Networks and Systems (CPSBench), Porto, Portugal,\
    \ 10–13 April 2018.\n96.\nBeshley, M.; Kryvinska, N.; Beshley, H.; Yaremko, O.;\
    \ Pyrih, J. Virtual Router Design and Modeling for Future Networks with\nQoS Guarantees.\
    \ Electronics 2021, 10, 1139. [CrossRef]\n97.\nSchulzrinne, H.; Rao, A.; Lanphier,\
    \ R. Real Time Streaming Protocol (RTSP). RFC 1998, 2326.\n98.\nRhinow, F.; Veloso,\
    \ P.P.; Puyelo, C.; Barrett, S.; O Nuallain, E. P2P live video streaming in WebRTC.\
    \ In Proceedings of the 2014\nWorld Congress on Computer Applications and Information\
    \ Systems (WCCAIS), Hammamet, Tunisia, 17–19 January 2014.\n99.\nJianbing, L.;\
    \ Shuhui, C. The Design and Implementation of RTSP/RTP Multimedia Trafﬁc Identiﬁcation\
    \ Algorithm. J. Phys. Conf.\nSer. 2019, 1168, 1–8. [CrossRef]\n100. Saint-Andre,\
    \ P. Extensible Messaging and Presence Protocol (XMPP): Core. RFC 3920, IETF.\
    \ October 2004. Available online:\nhttps://www.rfc-editor.org/rfc/rfc6120 (accessed\
    \ on 10 September 2022).\n101. Saint-Andre, P. Extensible Messaging and Presence\
    \ Protocol (XMPP): Instant Messaging and Presence, RFC 3921, IETF.\nOctober 2004.\n\
    Available online:\nhttp://www.kandroid.org/board/data/board/guestbook/ﬁle_in_body/1/xmpp.pdf\n\
    (accessed on 10 September 2022).\n102. MQTT. MQTT: The Standard for IoT Messaging.\
    \ 2022. Available online: https://mqtt.org (accessed on 10 September 2022).\n\
    103. Bormann, C.; Castellani, A.P.; Shelby, Z. CoAP: An Application Protocol for\
    \ Billions of Tiny Internet Nodes. IEEE Internet Comput.\n2012, 16, 62–67. [CrossRef]\n\
    104. Porcius, M.; Fortuna, C.; Kandus, G.; Mohorcic, M. Integrating custom hardware\
    \ into Sensor Web.SoftCOM 2010. In Pro-\nceedings of the 18th International Conference\
    \ on Software, Telecommunications and Computer Networks, Split, Croatia,\n23–25\
    \ September 2010.\n105. Internet Engineering Task Force. The WebSocket Protocol.\
    \ 2022. Available online: https://datatracker.ietf.org/doc/html/rfc6455\n(accessed\
    \ on 10 September 2022).\n106. Muller, G.L. HTML5 WebSocket Protocol and Its Application\
    \ to Distributed Computing. Available online: https://arxiv.org/abs/\n1409.3367\
    \ (accessed on 10 September 2022).\n107. Ha, M.; Kim, D.; Kim, S.H.; Hong, S.\
    \ Inter-MARIO: A Fast and Seamless Mobility Protocol to Support Inter-Pan Handover\n\
    in 6LoWPAN. In Proceedings of the 2010 IEEE Global Telecommunications Conference\
    \ GLOBECOM 2010, Miami, FL, USA,\n6–10 December 2010; pp. 1–6.\n108. Tosi, J.;\
    \ Taffoni, F.; Santacatterina, M.; Sannino, R.; Formica, D. Performance Evaluation\
    \ of Bluetooth Low Energy: A Systematic\nReview. Sensors 2017, 17, 2898. [CrossRef]\n\
    109. Varghese, S.G.; Kurian, C.P.; George, V.I.; John, A.; Nayak, V.; Upadhyay,\
    \ A. Comparative study of zigBee topologies for IoT-based\nlighting automation.\
    \ IET Wirel. Sens. Syst. 2019, 4, 201–207. [CrossRef]\n110. Haxhibeqiri, J.; De\
    \ Poorter, E.; Moerman, I.; Hoebeke, J. A Survey of LoRaWAN for IoT: From Technologyto\
    \ Application. Sensors\n2018, 18, 3995. [CrossRef] [PubMed]\n111. Wu, C.-G.; Wang,\
    \ L. A Deadline-Aware Estimation of Distribution Algorithm for Resource Scheduling\
    \ in Fog Computing Systems.\nIn Proceedings of the 2019 IEEE Congress on Evolutionary\
    \ Computation (CEC), Wellington, New Zealand, 10–13 June 2019.\n"
  inline_citation: '>'
  journal: Electronics (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2079-9292/11/24/4120/pdf?version=1670665650
  publication_year: 2022
  relevance_evaluation: '1.0'
  relevance_score: 1.0
  relevance_score1: 0
  relevance_score2: 0
  title: Approach for Designing Real-Time IoT Systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2020/8884924
  analysis: '>'
  apa_citation: Chen, F., Liu, P., Zhu, J., Gao, S., Zhang, Y., Duan, M., ... Hwang,
    K. (2020). Improving topic-based data exchanges among IoT devices. Security and
    Communication Networks, 2020, 1-14. https://doi.org/10.1155/2020/8884924.
  authors:
  - Chen Fu
  - Peng Liu
  - Jianming Zhu
  - Sheng Gao
  - Yanmei Zhang
  - Manyi Duan
  - Youwei Wang
  - Kai Hwang
  citation_count: 2
  data_sources: Survey data, Interviews, Case studies
  explanation: This paper analyzes how automated, real-time irrigation management
    systems can contribute to water use efficiency and agricultural productivity in
    the context of the global food challenge, focusing on the exploration of MQTT
    and client-server IoT networks for real-time data transmission. It presents two
    algorithms, TBRouting and Rerouting, to improve data exchange efficiency in IoT
    systems and handle the rerouting of topic-based session flows when a broker crashes
    down, respectively. These algorithms aim to dynamically find the shortest paths
    for data transmission and ensure high availability in IoT networks.
  extract_1: '"Improving Topic-Based Data Exchanges among IoT DevicesFu Chen,'
  extract_2: '"Broker Network to improve the survivability and robustness of connected-device
    data exchange in IoT"'
  full_citation: '>'
  full_text: ">\nResearch Article\nImproving Topic-Based Data Exchanges among IoT\
    \ Devices\nFu Chen\n,1,2 Peng Liu,2 Jianming Zhu,1 Sheng Gao,1 Yanmei Zhang,1\
    \ Meijiao Duan,1\nYouwei Wang,1 and Kai Hwang3\n1Department of Computer Science,\
    \ Central University of Finance and Economics, Beijing102206, China\n2College\
    \ of Information Sciences and Technology, Te Pennsylvania State University, State\
    \ College 16801, PA, USA\n3Chinese University of Hong Kong (CUHK), Hong Kong,\
    \ China\nCorrespondence should be addressed to Fu Chen; chenfu@cufe.edu.cn\nReceived\
    \ 11 June 2020; Revised 12 September 2020; Accepted 16 October 2020; Published\
    \ 31 December 2020\nAcademic Editor: Honghao Gao\nCopyright © 2020 Fu Chen et\
    \ al. Tis is an open access article distributed under the Creative Commons Attribution\
    \ License, which\npermits unrestricted use, distribution, and reproduction in\
    \ any medium, provided the original work is properly cited.\nData exchange is\
    \ one of the huge challenges in Internet of Tings (IoT) with billions of heterogeneous\
    \ devices already connected\nand many more to come in the future. Improving data\
    \ transfer eﬃciency, scalability, and survivability in the fragile network\nenvironment\
    \ and constrained resources in IoT systems is always a fundamental issues. In\
    \ this paper, we present a novel message\nrouting algorithm that optimizes IoT\
    \ data transfers in a resource constrained and fragile network environment in\
    \ publish-\nsubscribe model. Te proposed algorithm can adapt the dynamical network\
    \ topology of continuously changing IoT devices with\nthe rerouting method. We\
    \ also present a rerouting algorithm in Message Queuing Telemetry Transport (MQTT)\
    \ to take over the\ntopic-based session ﬂows with a controller when a broker crashed\
    \ down. Data can still be communicated by another broker with\nrerouting mechanism.\
    \ Higher availability in IoT can be achieved with our proposed model. Trough demonstrated\
    \ eﬃciency of\nour algorithms about message routing and dynamically adapting the\
    \ continually changing device and network topology, IoT\nsystems can gain scalability\
    \ and survivability. We have evaluated our algorithms with open source Eclipse\
    \ Mosquitto. With the\nextensive experiments and simulations performed in Mosquitto,\
    \ the results show that our algorithms perform optimally. Te\nproposed algorithms\
    \ can be widely used in IoT systems with publish-subscribe model. Furthermore,\
    \ the algorithms can also be\nadopted in other protocols such as Constrained Application\
    \ Protocol (CoAP).\n1. Introduction\nTe Internet of Tings (IoT) has emerged as\
    \ the next\nevolution of the technology which covers a wide variety of\ndevices\
    \ and system platforms, such as embedded systems,\nnetworked sensors, actuators,\
    \ and smart home devices.\nInevitably, the resource starved nature in most IoT\
    \ devices\nmakes it error-prone to eﬃciently manage and maintain a\nreliable IoT\
    \ system, not to mention the security issues as-\nsociated with some scarcely\
    \ attended IoT devices [1, 2]. One\nof the biggest challenges in IoT is the management\
    \ and\nmonitoring of an IoTsystem, especially when heterogeneous\ndevices are\
    \ networked in geographically distributed envi-\nronments. And IoT devices are\
    \ often used to monitor in-\ndustrial\nproduction,\nenergy\nconsumption,\nagriculture\n\
    condition, and business operation, even in sensitive medical\napplication.\nTerefore,\n\
    the\ncross-platform\nand\ncross-\napplication data ﬂows among IoT devices are\
    \ often ex-\ntremely important. Te protocols that allow machine-to-\nmachine,\
    \ device-to-device, and device-to-server commu-\nnication to communicate with\
    \ each other become very\nimportant in IoT system. In general, wireless network\n\
    protocols have evolved in the form of WiFi, ZigBee, Blue-\ntooth, and routing\
    \ protocols from multihop to ad hoc and\nmobile ad hoc networks (MANET); the data\
    \ protocols play\nan important role in IoT protocol stack, which includes\nMessage\
    \ Queuing Telemetry Transport (MQTT) [3], Con-\nstrained Application Protocol\
    \ (CoAP) [4], AMQP [5], and\nWebSocket [6]. Comparatively MQTT seems to be more\n\
    promising as seen in Figure 1 showing the trends com-\nparison of MQTT, COMP,\
    \ and AMQP, according to Google\ntrends dataset [7]. Tis paper includes the communication\n\
    eﬃciency of MQTT. All the information in the MQTT is\norganized with Tree structure\
    \ and topics-based naming [8].\nHindawi\nSecurity and Communication Networks\n\
    Volume 2020, Article ID 8884924, 14 pages\nhttps://doi.org/10.1155/2020/8884924\n\
    Te history of MQTT dates back to 1999, which was\ninvented by IBM. MQTT uses the\
    \ so-called “publish/sub-\nscription” model to transmit data among the IoT things.\n\
    MQTT is more mature and stable than CoAP and AMQP.\nDue to the low-cost and power-constrained\
    \ nature of most\nIoT devices, the communication eﬃciency is extremely\nimportant.\
    \ For example, if we can improve the power ef-\nﬁciency, the IoTdevice can be\
    \ operated for even longer time\nperiod than low power eﬃciency without having\
    \ to replace\nbatteries. Tis is one of the fundamental motivations for our\nfocus\
    \ on IoT data communication protocol eﬃciency in this\npaper. An IoTsystem consists\
    \ of a large number of internet-\nconnected resource-constrained and dynamic nature\
    \ devices\n[9]. Terefore achieving data transmission eﬃciency is very\nimportant\
    \ in this type of distributed networks. Data\ntransmission in many IoT systems\
    \ use publish-subscribe\nmodel, as in MQTT. In AMQP protocol, clients send\nmessages\
    \ to the AMQP server with topics, and server listens\nfor messages with those\
    \ topics and routes the messages to the\napplications subscribed to the AMQP server\
    \ [5, 10]. MQTT\nuses a similar approach where message brokers use topics to\n\
    route messages from publishing clients to subscribing clients\n[11]. To exchange\
    \ data between devices with publish-sub-\nscribe model, matching, ﬁltering, and\
    \ routing of messages\nbased on topics, as the bridge of publisher and subscriber,\n\
    have extreme importance in IoT system. Especially when\nthere are plenty of messages\
    \ produced by a large number of\nIoT devices, improving the eﬃciency and eﬀect\
    \ of topic\nmatching, ﬁltering, and routing is vital. Te work in this\npaper aims\
    \ to address this important need of data com-\nmunication in IoT system. To address\
    \ this important need,\nwe propose two algorithms to improve data exchange eﬃ-\n\
    ciency in IoT system. Te two important contributions of\nthis paper are as follows:\n\
    (i) Development of a topic routing algorithm to com-\nmunicate data between IoT\
    \ devices\n(ii) Development, implementation, and evaluation of a\nBroker Network\
    \ to improve the survivability and\nrobustness of connected-device data exchange\
    \ in IoT\nWe evaluate our algorithms with MQTT protocol\nimplementation Mosquitto\
    \ [3, 12]. We have performed\nextensive experiments and results show that with\
    \ our al-\ngorithms we can dramatically improve data exchange eﬃ-\nciency while\
    \ signiﬁcantly reducing transmission time. Te\norganization of the paper is as\
    \ follows. In Section 2, we\npresent background and motivation of this work high-\n\
    lighting main concerns that arise in the data communication\nin IoTand state of\
    \ the art in the ﬁeld. Section 3 presents our\nalgorithms in detail. Te implementation\
    \ and evaluation of\nour algorithms are presented in Section 4. Finally, conclu-\n\
    sions are drawn in Section 5.\n2. Background\n2.1. Need of the Data Exchange Eﬃciency\
    \ Problem in IoT.\nDevices in IoT system often have limited processing capa-\n\
    bilities, low bandwidth, and small memory capacities and are\npowered by batteries\
    \ with limited working hours. Terefore,\nimproving the usage eﬃciency of the network\
    \ and reducing\npower usage in IoT scenarios are extremely important. As a\npromising\
    \ data communication protocol in IoT, MQTT is a\nmachine-to-machine (M2M), lightweight\
    \ publish-subscribe\nmessaging transport protocol. In publish-subscribe model,\n\
    subscriber registers its interest topics to a broker and\npublisher sends data\
    \ to a broker [13–15]. Publish clients and\nsubscribe clients exchange data through\
    \ a broker with topic\nmatching. When there are huge message ﬂows exchanged by\n\
    broker, issue of latency may be inevitable [16]. Te latency\nnot only decreases\
    \ the speed of data transmission but also\nwastes device battery to decrease the\
    \ overall device life-span\n[17–20]. In this paper, we focus on data exchange\
    \ eﬃciency\nin an environment where there is a limited Internet access or\nthere\
    \ are serious network jitter problems for several hundred\nmiles around. Te emphasis\
    \ is transferring data based on\nsubject-based route to a data center. Essentially,\
    \ it is about a\nnew gateway and topic-based routing. First, we need to\nclassify\
    \ necessity of transferring data between gateways.\nMQTT in IoT is used in data\
    \ exchange which is diﬀerent\nfrom corresponding sensor network about data integration.\n\
    100\n90\n80\n70\n60\n50\n40\n30\n20\n10\n2.11.2011\n11.03.2013\n10.04.2015\n09.18.2016\n\
    Trends OF MQTT, COAP, AMQP\nMQTT\nAMQP\nCOAP\nFigure 1: Trends comparison of MQTT,\
    \ CoAP, and AMQP.\n2\nSecurity and Communication Networks\nWe depict an agriculture\
    \ processing scenario to clarify the\nnecessity for data transmission with topic-based\
    \ routing.\nConsumers today often put signiﬁcant value on fresh, high\nquality\
    \ food. Farmers need to get information from ﬁelds,\ntake actions to crop depending\
    \ on weather conditions, and\nshow the information about the produce to the end\
    \ con-\nsumers with public access interface. Tis information in-\ncludes identifying\
    \ the drought and weather conditions,\nperiodic measurements of monitoring data\
    \ with gateway,\ndepending on intensity of drought decide about irrigation\nand\
    \ watering, monitoring pest disasters, and then taking\nactions about the spraying\
    \ pesticides with drone, without\ndistinguishing nodes from the broker’s point\
    \ of view, which\nbrings diﬃculty due to large number of devices. If there are\n\
    plenty of things in one IoTsystem, it is necessary to identify\nnodes having the\
    \ corresponding information and to identify\nthese nodes dramatically and eﬃciently.\n\
    If this information is conﬁgured manually, while not the\nautomatically, it is\
    \ a huge challenge to manage thousands of\nnodes. When the network structure is\
    \ changed, the con-\nﬁgurations need to be done. Terefore, automatic discov-\n\
    ering and conﬁguring the IoT network are a huge challenge.\nAnd agriculture processing\
    \ system scenario has the fol-\nlowing features: data from farm in ﬁelds to table\
    \ on Internet,\nﬁeld data spanning up to one year, wide geographical areas\nof\
    \ crops, and fragile network conditions.\nAs noted earlier, MQTT used in IoT system\
    \ emphasizes\ndata exchange, not mainly for data integration. Te question\narises,\
    \ why in the agriculture process system we need data\nexchange? Tere are several\
    \ reasons to make it necessary for\ndata exchange in agriculture processing system\
    \ and data\nexchange about storm, hurricanes, cyclones bad weather. It is\nknown\
    \ to all that storm may inﬂuence several hundreds of\nmiles. It is very important\
    \ to spread related information about\nagriculture. In fact, weather conditions\
    \ have a heavy inﬂuence\non the crop management. Data exchanges among diﬀerent\n\
    farms are very important. For example, in Pennsylvania, there\nmay have been dozens\
    \ of farms located in a region where pests\nand diseases spread very quickly.\
    \ Similarly, farms in remote\nand regional areas in Australia are spread over\
    \ on thousands\nof acres. If the information around one regain can exchange\n\
    on time, precautions can be taken to prevent or reduce loss\nfrom any natural\
    \ disaster which may otherwise aﬀect dras-\ntically the agriculture processing\
    \ system.\n2.2. Essence of the Problem Studied in Tis Paper. Te IoT\nthings are\
    \ spread around hundreds of miles in ﬁeld or plain.\nAccording to the mechanism\
    \ of MQTT protocol, data ex-\nchanges among diﬀerent nodes and brokers should\
    \ be\nconﬁgured according to the IP addresses and topic names.\nOnly after manual\
    \ conﬁguration or by conﬁguration ﬁles,\nthe data can be exchanged along speciﬁc\
    \ path to another\nnode, which gets damaged crushes down, we will not know\nuntil\
    \ proactive testing is performed. Neighboring nodes\nmight have information about\
    \ the damaged nodes but the\nimportant question here is how to dynamically ﬁgure\
    \ out\nwhich nodes have the corresponding data and how to arrive\nat that node\
    \ with the shortest path automatically. In our\nproposed algorithms, we have focused\
    \ on this problem. On\nthe contrary, if the reconﬁguration is done manually or\n\
    through CLI scripts, data exchange with MQTT in IoT is not\nreliable and is not\
    \ easy to recover. Maintenance and\nmanagement of data exchange in this model\
    \ is a hard task\nwhich can be costly. Terefore, a reliable, automatic data\n\
    discovery and data exchange model with a shortest path in a\nfragile, dynamic\
    \ network environment is very important.\nWith our algorithms, we can ﬁnd the\
    \ speciﬁc nodes for\nspeciﬁc data with one topic and get the shortest path to\
    \ that\nnodes dynamically and automatically. We need a smarter\nrecovery program,\
    \ which can save money (automatically) to\navoid remote login and can perform\
    \ recovery eﬃciently.\nGenerally speaking, through the broadcast method and the\n\
    way of active subscription, we can achieve data exchange\nautomation. Te existing\
    \ practices often involve manual\nconﬁguration where messages are read or processed\
    \ man-\nually. In our proposed model, we aim for automatic data\nexchange.\n3.\
    \ Broker Network\nData collection is one of the key functions in IoT system.\n\
    However, battery powered devices in IoT often work in low\nbandwidth and fragile\
    \ network environments. One of the\nmajor challenges is to provide eﬃcient, stable,\
    \ and scalable\nservices in IoT. For example, to extend a device’s eﬀective\n\
    working life-span as much as possible, eﬃciency should be\nconsidered to save\
    \ power. At the same time, to ensure the\navailability and scalability of data\
    \ communication services,\nbroker network is a natural choice in IoTsystem [21,\
    \ 22]. Te\nbroker network can provide stable connections among the\ndevices to\
    \ handle the data traﬃcs in IoT. In this section, we\ndescribe our proposed novel\
    \ topic-based data transmission\nalgorithm to eﬃciently exchange data in IoT system.\n\
    3.1. Topic-Based Data Routing in MQTT. When servers in\nthe cloud system gather\
    \ data from things as messages in IoT\nsystem, we will route the messages ﬂow\
    \ through broker\nnetwork in IoT to cloud. For example, client 1 subscribes to\n\
    broker 1 with topic “top” and client 2 publishes to broker 2\nwith topic “top.”\
    \ Broker 2 should route the message pub-\nlished by client 2 to broker 1, so that\
    \ client 1 can get the\ncorresponding data. Tis is the so-called topic-based mes-\n\
    sage routing problem in IoT. Te key point here is the ef-\nﬁciency when broker\
    \ nodes synchronize data among\nbrokers, which include the following:\n(i) Forwarding\
    \ all messages to the other bridges\n(ii) Routing of messages to the brokers\n\
    For the CPU, bandwidth, and memory constrained\ndevices, the routing decision\
    \ algorithm should be simple\nenough to save resource. Normally, we can divide\
    \ the nodes\ninto two types: one is routing node and the other is terminal\nsubscriber\
    \ node or publisher node. Our data routing deci-\nsion algorithm is depicted in\
    \ Algorithm 1 called TBRouting.\nSecurity and Communication Networks\n3\nIn summary,\
    \ there are three scenarios:\n(i) One to one directly\n(ii) One to many directly\n\
    (iii) One to remote nodes through routers\nIn one to remote nodes through routers\
    \ scenario, the\ncloud servers gather data from devices as messages transmit\n\
    through the local IoT network. We address the issue of\ncollecting speciﬁc data\
    \ and how to transfer it eﬃciently in\nour algorithm through ﬁnding the shortest\
    \ path based on\ntopics for message delivery to cloud or server. Tat is to say,\
    \ a\nrouting protocol is considered. Our message routing deci-\nsion algorithm\
    \ is depicted in Figure 2.\nIn Figure 2, we depict message routing scenario. Tere\n\
    are 7 routers, router ①∼router ⑦ connected with each\nother wirelessly and to\
    \ the Internet or cloud shown in\nFigure 2. ① is connected to Internet or cloud,\
    \ and ⑥ is\nconnected to sensor network. When messages are sent to\nrouter ⑥ through\
    \ sensor network, the message will be\nrouted from router ⑥ to router ①. Because\
    \ the messaging\nrouter here is not the typical router in a typical network,\n\
    therefore, we deﬁne the message routing algorithm below\nand routing table in\
    \ the following sections. For the fragile\nnetwork and constrained hardware devices,\
    \ the topology\nmay be changed constantly [23]. Terefore, the path and\nrouter\
    \ table may change with the topology. Just as the\nscenario shown in Figure 2,\
    \ the routing algorithm is in-\ntroduced in the following steps:\n(1) Figuring\
    \ out the shortest path between router ⑥ and\nrouter ①, it is a single-source\
    \ shortest path topic-\nbased problem in graph theory. We can address it, for\n\
    example, with Dijkstra’s algorithm. Here, the shortest\npath is router serial\
    \ ⑥ ⟹ ④ ⟹ ② ⟹ ①.\n(2) In reverse sequence, router ① subscribes topics from\nrouter\
    \ ②, router ② subscribes topics from router ④,\nand router ④ subscribe topics\
    \ from router ⑥.\n(3) When sensors publish topics to router ⑥, the\nmessages will\
    \ be pushed back to hop by hop until\nrouter ①.\nWhen the topology structure of\
    \ router network changes,\nwe can ﬁgure out the new shortest path from the source\
    \ to\nthe end as described in Step (1) dynamically. Te “routing\ntables” are critical\
    \ to the system because IoT network may\nnot be using the traditional TCP/IP protocol\
    \ stack which\nmakes real-time data transmission with the shortest path\nwithout\
    \ considering the network protocol even more\nchallenging. Tat is to say, regardless\
    \ of TCP/IP or Zigbee,\nthe IoTsystem can still ﬁnd the data source and the shortest\n\
    path transparently based on topics. In the next section, we\nwill describe this\
    \ algorithm in detail.\n3.2. Topic-Based Data Routing Protocol. In order to facilitate\n\
    problem description, ﬁrst we provide some relevant deﬁ-\nnitions. Ten algorithm\
    \ is depicted in detail with an ex-\nample. We present eﬃciency evaluation of\
    \ our algorithm in\nSection 4.\n3.2.1. Deﬁnitions\nDeﬁnition 1. Routing table\
    \ structure: in order to make\nnodes ﬁnd each other and in the shortest path,\
    \ some in-\nformation should be stored in every nodes. Table 1 provides\nthe structure\
    \ of the routing table.\nDeﬁnition 2. Subscribing node: node 1 subscribes to node\
    \ 2;\nnode 1 is the so-called subscribing node.\nDeﬁnition 3. Subscribing node\
    \ queue: A subscribes to B, B\nsubscribes to C, C subscribes to D, and “ABC” is\
    \ the so-\ncalled subscribing node queue.\nDeﬁnition 4. Weight (T): the number\
    \ of node in a string.\nDeﬁnition 5. Host_Topic (T): the ultimate data consumer\n\
    and\ncorresponding\ntopic.\nFor\nexample,\n“Host_Topic\n(ABCD/TOP)” \x88 “D/TOP”.\n\
    Deﬁnition 6. Searched_Set: a node set, in which every node\nhas ﬁnished building\
    \ the routing table.\nDeﬁnition 7. NotSearched_Set: a node set, in which every\n\
    node has not ﬁnished building the routing table.\nDeﬁnition 8. Adjacent (X): a\
    \ set of adjacency of node X.\nDeﬁnition 9. Match (top): determining whether the\
    \ node\ncan provide the corresponding topic data.\n3.2.2. Routing Algorithm. Te\
    \ algorithm essentially com-\npletes the following tasks. First, the algorithm\
    \ determines the\nnode where the topic and corresponding data reside. Second,\n\
    the algorithm dynamically ﬁnds the shortest path. Ten the\ndata can be transported\
    \ to Internet. Tat is to say, the al-\ngorithm solves that which node has the\
    \ topic and data and\nhow the data can be transported to the ultimate user. We\n\
    solve this problem with our new routing algorithm named\nTopic-Based Routing Algorithm\
    \ (TBRG). Te rerouting\nalgorithm is given as follows. In the algorithm, “R” is\
    \ the\nultimate data consumer in Algorithm 2.\nNext, we elaborate our algorithm\
    \ through a concrete\nexample illustrated in Figure 3, which shows an example\
    \ of\nnodes structure of IoT system. We assume Ⓐ is a node in\ndata center, data\
    \ ultimate consumer, and Ⓘ is the data\nsource connecting the sensor.\n① Initialization\
    \ of node Ⓐ in Table 2.\n② A subscribing to nodes Ⓑ, Ⓓ, and Ⓔ, that is,\nⒶ ⇒ Ⓑ,\
    \ Ⓐ ⇒ Ⓓ, Ⓐ ⇒ Ⓔ, as shown in Tables 3–5.\n③ Next, B and E subscribing to node Ⓒ\
    \ and node Ⓕ,\nrespectively, that is, node Ⓑ ⇒ node Ⓒ and node\nⒺ ⇒ node Ⓕ in\
    \ Tables 6 and 7.\n④ Next, node Ⓒ and node Ⓕ subscribing to nodes Ⓘ\nand Ⓖ, respectively,\
    \ that is, node Ⓒ ⇒ node Ⓘ and\nnode Ⓕ ⇒ node Ⓖ as shown in Table 8, VX.\n4\n\
    Security and Communication Networks\n⑤ Node Ⓖ subscribing to Node I, that is,\
    \ node\nⒼ ⇒ node I′. In the algorithm, this step is less likely to\nhappen because\
    \ of the value of weight (CBA/top) in\nStep ④; the routing information is “CBA/top”,\
    \ as\nshown in Tables 9 and 10.\nFigure 4 shows a bipartite graph. Set (1) is\
    \ a topic set\nx1∼xn corresponding to published data. Set (2) is a topic set\n\
    y1∼yn corresponding to subscribed data. Te next algorithm\nis to match topics\
    \ from one node in set (1) to another node in\nset (2) step by step according\
    \ to the shortest path in reverse\norder. In addition, when we upgrade system\
    \ or update the\nstatus about things in ﬁeld, that is to say, delivering the\n\
    instruction set from cloud to IoT devices, the instruction\ndataset is routed\
    \ reversely with a series of publish and then\nsubscribing among routers.\n3.3.\
    \ Rerouting Algorithm in MQTT. Each broker may serve\nfor thousands of clients’\
    \ connections. In case one broker\ncrashes down, clients should have the ability\
    \ to connect to\nanother broker and work continually and smoothly, which is\n\
    called the rerouting problem. To address this problem, we\npropose a rerouting\
    \ algorithm to take over the topic-based\nsession ﬂows with a controller when\
    \ a broker crashes down.\nAlthough it is almost impossible to communicate when\
    \ broker\ncrashes down, data can still be communicated by another\n(1) procedure\
    \ TBRouting.\n(2)\nWhen a broker receives data with topics from one client, the\
    \ broker matches topics in its topic tree.\n(3)\nIf the node is just the terminal\
    \ subscriber, then broker forwards it to that node, and then go to 5. If the node\
    \ is not the terminal\nconsumer of the topic, go to 4.\n(4)\nIf the node is not\
    \ the terminal consumer of the topic, the data will be forwarded to the other\
    \ broker nodes, which is the next hop\nof the routing.\n(5)\nContinuing with 3,\
    \ with next hop, data eventually will be sent to cloud or terminal nodes. Te messages\
    \ are sent with the shortest\npath to the ﬁnal destination.\n(6)\nTe topic may\
    \ be sent to many diﬀerent receivers who subscribe the topics. All the receivers\
    \ will receive the same messages.\n(7)\nTe broker will decide whether to store\
    \ the topic or not.\nALGORITHM 1: TBRouting.\nD\nB\nE\nA\nC\nF\nG\nI\nFigure 3:\
    \ Example of topic routing protocol.\n1\n2\n3\n4\n5\n6\n7\n1\n2\n3\n4\n5\n6\n\
    7\nIOT things\nIOT things\n(1)\n(2)\nFigure 2: Message routing decision algorithm\
    \ IoT network.\nTable 1: Structure of the routing table.\nNode\nPath and topics\n\
    Weight\nSubscribing\nnode\nSubscribing node\nqueue\nNumber of nodes in\nqueue\n\
    Security and Communication Networks\n5\nbroker with rerouting mechanism. Terefore,\
    \ high availability\ncan be gained with this model in IoT, as shown in Figure\
    \ 5.\n3.3.1. Deﬁnitions. As in Section 3.2, we ﬁrst provide some\nrelevant deﬁnitions\
    \ to facilitate the node replacing problem\nstatement.\nDeﬁnition 10. Topic_Session:\
    \ when node X publishes a topic\n“t” to a broker named “Brk,” and node Y subscribes\
    \ the same\ntopic “t” to the same broker “Brk” just illustrated in\nFigure 6(a)\
    \ shown; we call this binary relation Topic Session\nwith notation XTSR(t, brk)Y.\
    \ If node Y only can get topic\n“t” from node X, we use notation X!TSR(t, brk)Y\
    \ to express\nthis relation. We depict the relation with Structural Oper-\national\
    \ Semantics as follows:\nNode X ⟶\nPub(t)Brk,\nNode Y ⟶\nSub(t)Brk,\nNode X ⟶\n\
    Pub(t)Brk,\nNormally, we can use process expression to depict\ncommunication behavior.\
    \ Actually, from the perspective of\nmathematics, this is a binary partial order\
    \ relation. Tat is to\n(1) Procedure TBRG\n(2)\nRoutingTable ⟵ initially, ultimate\
    \ consumer node R;\n(3)\nSearched Set ⟵ R;\n(4)\nNotSearched Set ⟵ R;\n(5)\nwhile\
    \ NotSearched Set ≠ ∅ do\n(6)\nX ∈ NotSearched Set;\n(7)\nfor all Adjacent(X)\
    \ do\n(8)\nNodeX ∈ Adjacent(X);\n(9)\nif NodeX ∉ Searched Set then\n(10)\nNotSearched\
    \ Set ⟵ NodeX;\n(11)\nX⇒subscribing to NodeX;\n(12)\nNode X ⟵ subscriping request\
    \ P;\n(13)\ni ⟵ Weight(P);\n(14)\ntop ⟵ Host Topic(P);\n(15)\nif !Match(top) then\n\
    (16)\naddItemToRoutingTable(NodeX);\n(17)\nSearched Set ⟵ Nodex;\n(18)\nelse if\
    \ Weight(Route NodeX(Top)) > i then\n(19)\nRewrite(Route_NodeX(P));\n(20)\nNotSearched\
    \ Set − X;\n(21)\nSearched Set ⟵ X;\nALGORITHM 2: TBRG.\nTable 2: Routing table\
    \ of node A.\nNode\nPath and topics\nWeight\n0\n0/top\n0\nTable 3: Routing table\
    \ of node B.\nNode\nPath and topics\nWeight\nA\nA/top\n1\nTable 4: Routing table\
    \ of node D.\nNode\nPath and topics\nWeight\nA\nA/top\n1\nTable 5: Routing table\
    \ of node E.\nNode\nPath and topics\nWeight\nA\nA/top\n1\nTable 6: Routing table\
    \ of node C.\nNode\nPath and topics\nWeight\nB\nBA/top\n2\nB1\nB2\na\nb\nc\na1\n\
    b1\nc1\nFigure 4: Routing tables in message router.\n6\nSecurity and Communication\
    \ Networks\nsay, X ⟶\nTSR(t) Y and Y ⟶\nTSR(t) X are diﬀerent pair set. We use\n\
    this concept to indicate the data ﬂow.\nDeﬁnition 11. Pub(t) · X: processing node\
    \ X has an action\nPub with a parametric t. In this paper, behavior Pub is\npublished.\n\
    Deﬁnition 12. Sub(t) · X: processing node X has an action\nSub with a parametric\
    \ t. In this paper, behavior Sub is\nsubscription.\nDeﬁnition 13. Broke Strong\
    \ Behavior Equivalence∼: there\nare two brokers A and B. If the following relation\
    \ exists, we\ncall this relation A∽B:\n(i) X TSR(t1, A)Y with topic “t1”\n(ii)\
    \ X TSR(t2, B)Y with topic “t2”\nDeﬁnition 14. Broker Weak Behavior Equivalence≈:\
    \ there\nare two brokers A and B. If the following relations exist, we\ncall this\
    \ binary relation weak behavior equivalence A ≈ B:\n(i) X TSR(t1, A)Y or Y TSR(t1,\
    \ A)X with topic “t1”\n(ii) X TSR(t2, B)Y or Y TSR(t2, B)X with topic “t2”\nIf\
    \ broker A crashes down, we want to ﬁnd another broker\nB to take over the topic\
    \ session ﬂows in broker A, in which\nbrokers A and B at least have the Strong\
    \ Behavior Equiv-\nalence relation A∽B, as Figure 7 showed. In this section, we\n\
    will focus on how to ﬁnd an appropriate broker to take over\nthe topic session\
    \ ﬂow in the crashed broker. With this\nbehavior, the Topic_Session can continue.\n\
    3.3.2. Problem Analysis. In normal wireless network, if one\nnode loses its connection,\
    \ the node may update its status and\nbroadcast its identiﬁcation information\
    \ to all neighbor nodes,\njust as shown in Figure 6(b). Ten other sensors or actuators\n\
    Brk\nPub\nSub\nX\nY\n(a)\nX\nY\nA\nB\nPub\nPub\nSub\nSub\n(b)\nFigure 6: Topic_Session.\n\
    x1\nx2\nx4\nxn\nx3\ny1\ny2\ny4\nym\ny3\n(1)\n(2)\nFigure 5: Fault migrating.\n\
    Table 7: Routing table of node F.\nNode\nPath and topics\nWeight\nE\nEA/top\n\
    2\nTable 8: Routing table of node of G.\nNode\nPath and topics\nWeight\nF\nFEA/top\n\
    3\nTable 9: Routing table of node I.\nNode\nPath and topics\nWeight\nC\nCBA/top\n\
    3\nTable 10: Possible routing table of node I′.\nNode\nPath and topics\nWeight\n\
    G\nGFEA/top\n4\nTable 11: Topic session ﬂow.\nNo.\nTings\nBroker\nSub/Pub\nTopic\n\
    On/oﬀ\n1\na\nB1\n0\nt1\n1\n2\na\nB1\n1\nt6\n0\n3\na\nB2\n1\nt2\n1\n4\nb\nB1\n\
    1\nt3\n1\n5\na\nB1\n0\nt4\n1\n6\nc\nB2\n1\nt5\n0\n7\nc\nB1\n0\nt6\n11\nSecurity\
    \ and Communication Networks\n7\nmay connect to this node. In this model, for\
    \ example, in\nFigure 6(b), node X and node Y may ﬁnd the other nodes.\nTe IoT\
    \ network node is diﬀerent from the normal\nwireless network node as follows.\n\
    (i) Node Y gets the topic “t” from node X through\nbroker A with subscription\
    \ behavior. However,\nwhen broker A crashes down, nodes X and Y must\ncommunicate\
    \ with another broker with the same\nbehavior. Or else node Y cannot get the topic\
    \ “t”\nfrom node X. Te situation may be worse when\nnodes X and Y have the relation\
    \ X!(t, brk)Y.\n(ii) In MQTT, one broker is speciﬁed when nodes\npublish or subscribe\
    \ to a broker. Tat is to say, the\nsubscriber\nor\npublisher\ncannot\nautomatically\n\
    reconﬁgure the broker. For example, MQTT pro-\ntocol with QoS 0 and the node even\
    \ are not aware\nwhen the broker crashes down.\nTe problem here is that nodes\
    \ and brokers have an\nequal status. So nodes almost know nothing about each\n\
    other. Because of mutual independence to each other, one\nnode cannot change another\
    \ node’s behavior.\nTo sum up, when node X and node Y have the relation\nX!(t,\
    \ brk)Y, nodes X and Y must synchronize migration to\nother nodes. Publisher may\
    \ continue to publish data to\nbroker A even when A has crashed down with QoS\
    \ 0.\nTerefore, we must clarify the substitution conditions that\nhow a broker\
    \ can be replaced by another broker partly or\ntotally. Tis raises the following\
    \ questions:\n(i) What conditions should be met when a broker\nsubstitutes one\
    \ or a few brokers to take over that\nbroker?\n(ii) Who will we ﬁnd a crashed\
    \ down broker?\n(iii) How can we take measures on the nodes or brokers\nto take\
    \ over that broker?\n(iv) Where should we store the relation X TSR(t, brk)Y\n\
    set in that crash down broker? So we can keep topic\nrelated\nsessions\nto\ncontinue\n\
    the\ndata\ncommunication.\n3.3.3. Broker Substitution Conditions. According to\
    \ process\nbehavior equivalence, if brokers A and B have a weak be-\nhavior equivalence\
    \ relation A ≈ B, then nodes X and Y have\nthe approximate communication ability\
    \ with A and B as\nshown in Figure 8.\nTe process expression of broker A is PA,\
    \ which is\ndeﬁned by the following syntax:\nPA: \x88 \U0010FF50i∈I \U0010FF51\
    \ ·A|! \U0010FF51 ·A,\n\U0010FF51 : \x88 Pub(ti);\nSub〈ti〉;\nTe notation ! \U0010FF51\
    \ ·A is loop execution behavior. And ti is\na topic ∈ Topic_Set, which is a topic\
    \ set to be published or\nsubscribed. \U0010FF51 is an action preﬁx. Ten the broker\
    \ substi-\ntution conditions are\nPub < ti > · X| Pub ti\n\0\U0010FF01 · A| Sub\
    \ ti\n\0\U0010FF01 · A| Sub < ti > · Y;\nPub < tj > · X| Pub tj\n\U0010FF10 \U0010FF11\
    \ · B| Sub tj\n\U0010FF10 \U0010FF11 · B| Sub < tj > · Y;\n⇒A ∼ B, X TSR(t, brk)Y;\n\
    Pub < ti > · X| Pub ti\n\0\U0010FF01 · A∨ Sub ti\n\0\U0010FF01 · A| Sub < ti >\
    \ · X\n∨Pub < ti > · A| Pub ti\n\0\U0010FF01 · X∨ Sub ti\n\0\U0010FF01 · X| Sub\
    \ < ti > · A∧\n⎛\n⎝\n⎞⎠,\nSub < tj > · Y| Sub(tj).B∨ Pub(tj) · B| Pub < tj > ·\
    \ Y\n∨Sub < tj > · B| Sub tj\n\U0010FF10 \U0010FF11.Y∨ Pub tj\n\U0010FF10 \U0010FF11\
    \ · Y| Pub < tj > · B\n⎛\n⎝\n⎞⎠,\n⇒A ≈ B;\nα · X|α · A|β · B|β.Y + α · X|α · A|β\
    \ · B|β.Y+\nα · X|α · A|β · B|β · Y + α · X|α · A|β · B|β · Y;\nα ∈ Pub, Sub\n\
    {\n},\n⇒A ≈ B;\nwhere,\nti, tj ∈ Topic Set.\n(1)\nEssentially, Strong Behavior\
    \ Equivalence ∽ is a binary\nhomomorphism relation. And Weak Behavior Equivalence\n\
    ≈ is roughly approximate relation. If brokers A and B meet\nfollowing conditions,\n\
    A∽B or A ≈ B, XTSR(t, A), Y, t ∈ Topic Set, topic\nsessions on A can be transferred\
    \ to broker B.\n3.3.4. Pub/Sub Flow Controller and Measures. As noted in\nthe\
    \ previous section, publishers are not aware if a broker\ncrashes down. Even the\
    \ publisher knows the absence of broker,\nthe topic-based session cannot go on\
    \ without outside help, not\nto mention ﬁnding one or a few brokers to take over\
    \ the\nshutdown broker. Terefore, the extra controller is necessary to\nensure\
    \ the survivability of IoTsystem, just as Software Deﬁned\nNetworks (SDN) do [24].\
    \ As shown in Figure 9, there is a\ncontroller over brokers to schedule the whole\
    \ IoTnetwork. Te\nmain purposes of the controller are as follows:\n(i) Reviving\
    \ of dead broker through heart beating\n(ii) Figuring out the substitute node\n\
    (iii) Transferring the topic-based session ﬂow from crash\ndown broker to alternative\
    \ broker\nNew node\nFigure 7: Wireless network broadcast.\n8\nSecurity and Communication\
    \ Networks\nBut the controller will never be used as data commu-\nnication. Its\
    \ main usage is to manage the nodes in IoT\nnetwork.\nTrough heart beating, for\
    \ example, subscribing “hello\nworld” to managed node on a regular timer with\
    \ Quality of\nService (QoS), it is easy to get the information in broker node\n\
    in order to determine a substitute node. To ﬁgure out\nsubstitute node, the controller\
    \ should collect the following\ninformation in regular time. For example, as shown\
    \ in\nTable 11, in regular intervals.\nIn Table 11, if the action is subscribe\
    \ then 1, else then 0.\nAnd if the broker is just performing normal then 1, else\
    \ then 0.\nTrough the content in Table 11, we can deduce nodes\nthat can be replaced\
    \ with each other. For example, B1 and B2\ncan replace each other, as shown in\
    \ the proof below:\n∵Sub(t) · a| Sub(t6) · Pub(t6)B1| Pub(t6) · c,\n∴⇒c TSR(t6,\
    \ B1)a;\n∵\nSub(t2) · a| Sub(t2) · Sub(t5)B2| Sub(t5) · c,\nPub(t1) · a| Pub(t1)\
    \ · Pub(t6)B1| Pub(t6) · c,\n⎧\n⎨\n⎩\n∴⇒B1 ≈ B2.\n(2)\nTis comes to the conclusion\
    \ c!(t, B2)a. Tis means\nwhen broker B1 crashes, the B2 can replace B1, with\n\
    Structural Operational Semantics depicted as follows:\nc ⟶\nPub(t6)B1 ⟵\nSub(t6)a\
    \ ≈ c ⟵\nSub(t6)B2 ⟶\nPub(t6)a.\n(3)\nTe Algorithm 3 is showed below.\n4. Implementation\
    \ and Evaluation with\nMosquitto or IoTivity\nWe implement a working prototype\
    \ of the above algorithm\nusing C and MQTTon Ubuntu system with Mosquitto and\
    \ its\nclient libmosquitto.lib as shown in Figure 10. MQTT is a\nmachine to machine\
    \ open source protocol originally developed\nby IBM. MQTTis particularly suitable\
    \ for resource constrained\nIoT devices on fragile networks environment. As discussed\
    \ in\nSection 1, MQTT is the most popular protocol used in IoT\nsystem now. And\
    \ Mosquitto is an open source implementation\nof the MQTT protocol.\nIn our evaluation\
    \ system, Figure 10, we deployed 25\nnodes and divided nodes into two groups,\
    \ one as broker and\nanother as client. On the clients, we deployed a shell pro-\n\
    gram to continuously publish data. And the nodes in broker\nnetwork collect the\
    \ data with subscription.\n4.1. Eﬃciency with Scale of Data Transmission. Intuitively,\
    \ in\nresource constrained device, the eﬃciency will decrease\ndramatically with\
    \ data scale increasing. Te trend of data\ntransmission with data scale is one\
    \ of the experimental\ncontents of in this section. Especially to the speciﬁc\
    \ protocol,\nthe data transmission laws are more worthy of attention. In\nthis\
    \ section, we will evaluate the average transmission time\nwith increased data\
    \ scale. In Figure 11, vertical axis is time\ncost, and horizontal axis is the\
    \ amount of data transmitted.\nFrom Figure 11, we can observe that average transfer\
    \ com-\npletion time will increase dramatically from a speciﬁc point.\nIn broker\
    \ network, a huge number of topics will be\ntransmitted through the nodes. However,\
    \ according to the\nabove experiments, we know that the eﬃciency will decrease\n\
    dramatically with increasing topics transmitted. Terefore,\nreducing the number\
    \ of transmission nodes can reduce\npropagation delay time, and improve the transmission\
    \ ef-\nﬁciency. Tis is just our primary goal in this paper. As the\nevaluation\
    \ system shows with our algorithms proposed in\nthis paper we can reduce the number\
    \ of transmission nodes,\nwhich can improve the data transmission eﬃciency. At\
    \ the\nsame time, according to the experiment results, whole\nsystem eﬃciency\
    \ will be improved as evident from the ex-\nperiment results in the next section.\n\
    4.2. Eﬃciency Improvements. As Figure 12 showed, we used\n25 virtual machines\
    \ as a testbed to test algorithms proposed\nin this paper. Resources allocated\
    \ to a virtual machine are\nlimited. For example, memory in each node is less\
    \ than\n300 M. And the nodes are divided into two groups: one\ngroup is mainly\
    \ for broker network and the other group is\nused for generating data. We deployed\
    \ a Mosquitto broker in\neach node. In order to test any scale of the data, we\
    \ used an\nendless loop shell script to publish a topic per second\ncontinuously;\
    \ the script is as follows:\n#!/bin/sh\nwhile true; do\necho hello.\nsleep 1\n\
    done | mosquitto_pub −l −t “Topic”\nTe other nodes can get the data through Mosquitto_sub\n\
    with a counter. Te counter is used to control the data scale.\nIn the program,\
    \ except subscription and counter, we cal-\nculate the time of data transmission.\
    \ Trough a series of\nsubscription behaviors, the contents with corresponding\n\
    topics can be passed to the ﬁnal data consumer indirectly\nnode by node and step\
    \ by step. Each node automatically\nbecomes a data generator pump. Just as described\
    \ above, we\nhave built an IoT simulation network with libmosquitto\nlibrary and\
    \ virtual machines as shown Figure 12, where\nX\nY\nt\nA\nB\nt\nt\nt\nFigure 8:\
    \ A ≈ B.\nSecurity and Communication Networks\n9\nnodes 1 ∼ 7 are broker network\
    \ nodes; the rest of the nodes\nare data generator. Node 1 is the ﬁnal data consuming\
    \ node.\nNode 6 is the edge routing node. Data collected from the IoT\nwill be\
    \ transmitted to node 6 ﬁrst and then transmitted to\nnode 1 through broker networks.\n\
    Just as described above, our algorithm can determine nodes\nwhere the topic and\
    \ corresponding data reside, and it\ndynamically adopts the shortest paths between\
    \ nodes in data\nconsumer and edge routers. Te shortest paths mean fewer\nnodes\
    \ needed for data transmission. Fewer transmission nodes\ncan save data transmission\
    \ time. We use the network topology\nshown in Figure 12 to evaluate the algorithms\
    \ presented in this\npaper. In Figure 12, the data may be transmitted through\
    \ ⑥,\n⑦, ④ ③, ②, and ①. And the shortest path is ⑥, ④, ②, and\nPub/Sub ﬂow controller\n\
    B1\nB2\na\nb\nc\na1\nb1\nc1\n(a)\nPub/Sub ﬂow controller\nB1\nB2\na\nb\nc\na1\n\
    b1\nc1\n(b)\nFigure 9: IoT controller.\n(1) Procedure ReRouting\n(2)\nSession\
    \ Flow Table ⟵ initialization;\n(3)\nWhile true do\n(4)\nHeartbeating broadcast;\n\
    (5)\nOn/off ⟵ Heartbeatingbroadcast;\n(6)\nfor all No de X ⟵ Broker Set do\n(7)\n\
    PullingthePub/Subinformation;\n(8)\nderive Broke Strong Behavio Equivalence∼;\n\
    (9)\nderiveWeak Behavior Equivalence≈\n(10)\nderive Topic Sessionrelationship;\n\
    (11)\nUpdate Topic SessionSet;\nALGORITHM 3: ReRouting.\nFigure 10: Evaluation\
    \ system.\n10\nSecurity and Communication Networks\n①, as shown in Figure 13.\
    \ Tat is to say, the path in Figure 13 is\njust the path we want to use to transmit\
    \ the data.\nTo get the inﬂuence of the data transmission path with the\ndata\
    \ scale, we obtain the evaluation results with diﬀerent\nworkload to test the\
    \ algorithm. Te primary performance\nmetrics are data transmission completion\
    \ time. We get the data\nfrom 500 to 10000 items with 500 as a step. We run a\
    \ Mos-\nquitto on each node in transmission network as a broker. At\nthe same\
    \ time, we develop a program based on libmosquitto as\na client to get the data\
    \ and calculate the transmission com-\npletion time on each node. Figure 14 shows\
    \ the performance\ncomparison of our algorithm with diﬀerent amounts of time.\n\
    At the same time, to compare the entire system performance\ninﬂuence, the average\
    \ transmission completion times of all\nnodes are measured, which is shown in\
    \ Figure 15. In fact fewer\ntransmission nodes can reduce energy consumption for\
    \ whole\nsystem, which is not the scope of this paper.\nWe compare the data transmission\
    \ with and without the\nshortest path in Figure 14. First, we observe that almost\
    \ in\neach data scale the transmission completion time with the\nshortest path\
    \ is far less than without it. Second, the amount\nof data transmitted and the\
    \ transmission completion time is\nnot a simple linear relationship. Te comparison\
    \ of trans-\nmission completion time about edge router is depicted in\nFigure\
    \ 16. We illustrate the inﬂuence to the transmission\nnode under these two diﬀerent\
    \ situations using Figure 16. In\nFigure 16, we observe that the data transmission\
    \ path has an\nimportant inﬂuence on the whole system performance. Te\nsolution\
    \ in edge router and in ﬁnal data consumer has a\nsimilar trend. It is suﬃcient\
    \ to show that data transmission\n1\n0.8\n0.6\n0.4\n0.2\n0\n2\n4\n6\n8\n0\n10\n\
    Message per second\nper client\nTopic number\n×104\nFigure 11: Transmission time\
    \ with increased data scale.\n1\n2\n4\n5\n7\n3\n6\n9\n8\n11\n12\n10\nFigure 12:\
    \ Data transmission without the shortest path.\nSecurity and Communication Networks\n\
    11\npath has a signiﬁcant impact on the network system. We can\nsee from the results\
    \ that the shortest path has high eﬃciency.\nIn order to further verify this view,\
    \ we compute the\naverage transmission completion time of all the nodes in the\n\
    path shown in Figure 15 and observe similar trend as in\nFigure 16.\n5. Conclusions\n\
    We have presented novel topics-based data routing proto-\ncols and algorithms\
    \ in MQTT. Te routing algorithms\noptimize IoT data transfers with constrained\
    \ resource and\nfragile network environments in publish-subscribe model.\nOur\
    \ proposed algorithms can adapt the dynamical network\ntopology and are capable\
    \ of adopting continuously changing\ndevices with rerouting method in IoT system.\
    \ Trough\nexperimental results, we have demonstrated eﬃciency of our\nalgorithms\
    \ for message routing, and dynamically adapting\nthe continually changing device\
    \ and network topology. We\n12000\n10000\n8000\n6000\n4000\n2000\n0\n2000\n4000\n\
    6000\n8000\n1000\nNumber of topics\nTime cost\nTrend without short path in node\
    \ 6\nTrend with short path in node 6\nTrend without short path 6\nTrend with short\
    \ path in node 6\nFigure 16: Comparison of data transmission completion time to\n\
    the edge router nodes.\n12000\n10000\n8000\n6000\n4000\n2000\n0\n0\n2000\n4000\n\
    6000\n8000\n1000\nTrend with short path\nTrend without short path\nTrend with\
    \ short path\nTrend without short path\nNumber of topics\nTime cost\nFigure 14:\
    \ Comparison of data transmission completion time to\nthe data consumer.\n1\n\
    2\n3\n4\n5\n7\n6\nFigure 13: Data transmission with the shortest path.\n12000\n\
    10000\n8000\n6000\n4000\n2000\n0\n0\n1000 2000 3000 4000 5000 6000 7000 8000 9000\
    \ 10000\nTime cost\nNumber of topics\nPerformance without short path\nPerformance\
    \ with short path\nFigure 15: Comparison of the overall performance on two path.\n\
    12\nSecurity and Communication Networks\nhave evaluated our algorithms with a\
    \ prototype with a\nMosquitto based on MQTT protocol. With the experiments\nperformed\
    \ and simulations on Mosquitto, the results show\nthat our algorithms work well.\
    \ Te proposed algorithms can\nbe widely used in IoT system with publish-subscribe\
    \ model.\nMoreover, the algorithms have the capability to be tested in\nother\
    \ protocols such as CoAP [25]. From security point of\nview, identity and authorization\
    \ of nodes are critical\nproblems [26–30]. Treats such as avoiding data to be\n\
    published or subscribed by attackers will have adverse eﬀects\non the broker in\
    \ IoT system. In this work, we have focused\non the data exchange eﬃciency in\
    \ IoT, mainly under the\nMQTTprotocol; in our future work, we aim to study security\n\
    issues in IoT [31–34].\nFrom security view, identity and authorization of nodes\n\
    are critical problems avoiding data to be published or\nsubscribed by hacker or\
    \ crack down the broker in IoT. In this\npaper, we focus on the data exchange\
    \ eﬃciency in IoT,\nmainly under the MQTT protocol and not involving the\nsecurity\
    \ problem, which we will deeply research in future\nwork.\nData Availability\n\
    Any data can be obtained from the dropbox url (https://\nwww.dropbox.com/s/vjm06c4z5kbg79i/%E9%87%87%E9%\n\
    9B%86%E6%95%B0%E6%8D%AE3.txt?dl\x880).\nConflicts of Interest\nTe authors declare\
    \ that they have no conﬂicts of interest.\nAcknowledgments\nTe authors thank Professor\
    \ Zia Tanveer for his kind review\nand help. Tis work was supported in part by\
    \ National\nScience Foundation of China under grant nos. 61672104,\n61170209,\
    \ 61702570, and 61602537 and U1509214, Program\nfor New Century Excellent Talents\
    \ in University under grant\nno. NCET-13-0676, and Shenzhen Institute of Artiﬁcial\n\
    Intelligence and Robotics for Society.\nReferences\n[1] S. Deng, Z. Xiang, P.\
    \ Zhao et al., “Dynamical resource allo-\ncation in edge for trustable internet-of-things\
    \ systems: a re-\ninforcement\nlearning\nmethod,”\nIEEE\nTransactions\non\nIndustrial\
    \ Informatics, vol. 16, no. 9, p. 6103, 2020.\n[2] M. Fischer, D. K¨umper, and\
    \ R. T¨onjes, “Towards improving\nthe privacy in the MQTT protocol,” GIoTS, vol.\
    \ 19, pp. 1–6,\n2019.\n[3] IoTivity, “IoTivity,” 2017, https://www.iotivity.org/.\n\
    [4] J. Sathish Kumar and M. A. Zaveri, “Clustering for collab-\norative processing\
    \ in IoT network,” in Proceedings of the\nSecond International Conference on IoT\
    \ in Urban Space (Urb-\nIoT 16), pp. 95–97, ACM, New York, NY, USA, 2016.\n[5]\
    \ CoAP, “Constrained application protocol (CoAP),” 2017,\nhttp://coap.technology/.\n\
    [6] AMQP, “Advanced message queuing protocol (AMQP),”\n2017, https://www.amqp.org/.\n\
    [7] WebSocket, “WebSocket,” 2017, https://www.websocket.\norg/index.html.\n[8]\
    \ Y. Zhao, K. Kim, and N. Venkatasubramanian, “DYNATOPS:\na dynamic topic-based\
    \ publish/subscribe architecture,” in\nProceedings of the 7th ACM International\
    \ Conference on\nDistributed Event-Based Systems (DEBS ’13), pp. 75–86, ACM,\n\
    New York, NY, USA, 2013.\n[9] M. Stolpe, “Te internet of things: opportunities\
    \ and chal-\nlenges for distributed data analysis,” ACM SIGKDD Explo-\nrations\
    \ Newsletter, vol. 18, p. 1, 2016.\n[10] T. Luo, H.-P. Tan, and T. Q. S. Quek,\
    \ “Sensor OpenFlow:\nenabling software-deﬁned wireless sensor networks,” IEEE\n\
    Communications Letters, vol. 16, no. 11, pp. 1896–1899, 2012.\n[11] AllSeen\n\
    Alliance,\n“Linux\nfoundation,”\n2017,\nhttps://\nallseenalliance.org/framework/documentation/learn/core/\n\
    standard-core.\n[12] MQTT, “Message queuing telemetry transport (MQTT),”\n2017,\
    \ https://mqtt.org/.\n[13] B. Karakostas and N. Bessis, Intelligent Brokers in\
    \ an Internet\nof Tings for Logistics, ACM, New York, NY, USA, 2016.\n[14] H.\
    \ Gao, W. Huang, and Y. Duan, “Te cloud-edge based\ndynamic reconﬁguration to\
    \ service workﬂow for mobile\necommerce environments: a QoS prediction perspective,”\n\
    ACM Transactions on Internet Technology, vol. 36, 2020.\n[15] B. Aziz, “A formal\
    \ model and analysis of an IoTprotocol,” Ad\nHoc Networks, vol. 36, p. 49, 2016.\n\
    [16] W.-J. ChenRahul, “Responsive mobile user experience using\nMQTT and IBM MessageSight,”\
    \ IBM Redbooks, vol. 3, 2014.\n[17] H. Gao, Y. Xu, Y. Yin, W. Zhang, R. Li, and\
    \ X. Wang,\n“Context-aware QoS prediction with neural collaborative\nﬁltering\
    \ for internet-of-things services,” IEEE Internet of\nTings Journal, vol. 7, no.\
    \ 5, pp. 4532–4542, 2020.\n[18] S. Sakulin, A. Alﬁmtsev, E. Tipsin, V. Devyatkov,\
    \ and\nD. Sokolov, “User interface distribution method based on\npi-calculus,”\
    \ International Journal of Distributed Systems\nand Technologies, vol. 10, no.\
    \ 3, pp. 1–20, 2019.\n[19] F. Xiong, A. Li, H. Wang, and L. Tang, “An SDN-MQTT\
    \ based\ncommunication system for battleﬁeld UAV swarms,” IEEE\nCommunications\
    \ Magazine, vol. 57, no. 8, pp. 41–47, 2019.\n[20] P. Kumar and B. Dezfouli, “Implementation\
    \ and analysis of\nQUIC for MQTT,” Computer Networks, vol. 150, pp. 28–45,\n2019.\n\
    [21] H. Ziekow, In-Network Event Processing in a Peer To Peer\nBroker Network\
    \ for the Internet of Tings, Springer-Verlag,\nBerlin, Germany, 2007.\n[22] S.\
    \ D. Madhu Kumar and U. Bellur, “An underlay aware,\nadaptive overlay for event\
    \ broker networks,” in Proceedings of\nthe 5th Workshop on Adaptive and Reﬂective\
    \ Middleware\n(ARM ’06), ACM, New York, NY, USA, 2006.\n[23] M. A. Jaeger, H.\
    \ Parzyjegla, G. M¨uhl, and K. Herrmann, “Self-\norganizing broker topologies\
    \ for publish/subscribe systems,”\nin Proceedings of the 2007 ACM Symposium on\
    \ Applied\nComputing (SAC ’07), pp. 543–550, ACM, New York, NY,\nUSA, 2007.\n\
    [24] G. De Luca and Y. Chen, “Visual IoT/robotics programming\nlanguage in pi-calculus,”\
    \ ISADS, vol. 16, pp. 23–30, 2017.\n[25] A. Larmo, A. Ratilainen, and J. Saarinen,\
    \ “Impact of CoAP\nand MQTT on NB-IoT system performance,” Sensors, vol. 19,\n\
    no. 1, p. 7, 2019.\n[26] D. J. Wu, A. Taly, A. Shankar, and D. Boneh, “Privacy,\
    \ dis-\ncovery, and authentication for the internet of things,”\nComputer Security-ESORICS\
    \ 2016, vol. 23, pp. 301–319, 2016.\n[27] S. P. Mahambre and U. Bellur, “An adaptive\
    \ approach for\nensuring\nreliability\nin\nevent\nbased\nmiddleware,”\nin\nSecurity\
    \ and Communication Networks\n13\nProceedings of the Second International Conference\
    \ on Dis-\ntributed Event-Based Systems (DEBS ’08), pp. 157–168, ACM,\nNew York,\
    \ NY, USA, 2008.\n[28] A. J. Hintaw, S. Manickam, S. Manickam, S. Karuppayah,\
    \ and\nM. F. Aboalmaaly, “A brief review on MQTT’s security issues\nwithin the\
    \ internet of things (IoT),” Journal of Communi-\ncations, vol. 14, no. 6, pp.\
    \ 463–469, 2019.\n[29] H.-Y. Chien, X.-A. Kou, M.-L. Chiang, and C. Su, “Secure\
    \ and\neﬃcient MQTTgroup communication design,” CSII (Selected\nPapers), vol.\
    \ 19, pp. 177–186, 2019.\n[30] R. Singh Bali, F. Jaafar, and P. Zavarsky, “Lightweight\
    \ au-\nthentication for MQTT to improve the security of IoT\ncommunication,” ICCSP,\
    \ vol. 19, pp. 6–12, 2019.\n[31] H. Gao, C. Liu, Y. Li, and X. Yang, “V2VR: reliable\
    \ hybrid-\nnetwork-oriented V2V data transmission and routing\nconsidering RSUs\
    \ and connectivity probability,” IEEE\nTransactions on Intelligent Transportation\
    \ Systems, vol. 1,\n2020.\n[32] K. Mladenov, Formal Veriﬁcation of the Implementation\
    \ of the\nMQTT Protocol in IoT devices, Master Tesis, University of\nAmsterdam,\
    \ Amsterdam, Netherlands, 2017.\n[33] A. P. Haripriya and K. Kulothungan, “Secure-MQTT:\
    \ an\neﬃcient fuzzy logic-based approach to detect DoS attack in\nMQTT protocol\
    \ for internet of things,” EURASIP J. Wireless\nComm. and Networking, vol. 2019,\
    \ p. 90, 2019.\n[34] G. Kim, S. Kang, J. Park, and K. Chung, “An MQTT-based\n\
    context-aware autonomous system in oneM2M architecture,”\nIEEE Internet of Tings\
    \ Journal, vol. 6, no. 5, pp. 8519–8528,\n2019.\n14\nSecurity and Communication\
    \ Networks\n"
  inline_citation: (Chen et al., 2020)
  journal: Security and Communication Networks
  key_findings: '- The proposed TBRouting algorithm can efficiently find the shortest
    paths for data transmission in IoT networks.

    - The proposed Rerouting algorithm can effectively handle the rerouting of topic-based
    session flows when a broker crashes down.

    - The combination of these algorithms can significantly improve the performance
    and reliability of automated irrigation management systems.'
  limitations: null
  main_objective: To develop and evaluate novel algorithms to improve data exchange
    efficiency and handle rerouting in MQTT-based IoT networks for automated irrigation
    management systems.
  pdf_link: https://downloads.hindawi.com/journals/scn/2020/8884924.pdf
  publication_year: 2020
  relevance_evaluation: This paper is highly relevant to the point I am making in
    my review, which is the exploration of MQTT and client-server IoT networks for
    real-time data transmission in automated irrigation management systems. The paper
    provides a comprehensive analysis of the use of MQTT in IoT systems, including
    its strengths and limitations, and presents novel algorithms to improve data exchange
    efficiency and handle rerouting in MQTT-based IoT networks. These algorithms have
    the potential to significantly enhance the performance and reliability of automated
    irrigation management systems, making them more effective and efficient in meeting
    the challenges of the global food challenge.
  relevance_score: '0.95'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT, Algorithms
  title: Improving Topic-Based Data Exchanges among IoT Devices
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s40031-021-00632-3
  analysis: '>'
  apa_citation: 'Verma, N., Singh, S., & Prasad, D. (2021). A Review on existing IoT
    Architecture and Communication Protocols used in Healthcare Monitoring System.
    Journal of the Institution of Engineers (India): Series B, 103(1), 245–257. https://doi.org/10.1007/s40031-021-00632-3'
  authors:
  - Navneet Kumar Verma
  - Sukhdip Singh
  - Devendra Prasad
  citation_count: 15
  data_sources: null
  explanation: Verma and Singh proposed an architecture for healthcare monitoring
    systems using IoT and communication protocols, which provides a comprehensive
    overview of existing approaches and highlights challenges and opportunities in
    the field. The paper emphasizes the role of interoperability and standardization
    for seamless integration and explores the use of various machine learning algorithms
    for processing healthcare data. It provides a valuable foundation for further
    research and innovation in real-time, end-to-end automated irrigation management
    systems.
  full_citation: '>'
  full_text: ">\nREVIEW PAPER\nA Review on existing IoT Architecture and Communication\n\
    Protocols used in Healthcare Monitoring System\nNavneet Verma1 • Sukhdip Singh1\
    \ • Devendra Prasad2\nReceived: 28 February 2021 / Accepted: 31 May 2021 / Published\
    \ online: 9 June 2021\n\x02 The Institution of Engineers (India) 2021\nAbstract\
    \ Nowadays, due to modernization or advance-\nment in the Internet of Things (IoT)\
    \ especially in the\nHealthcare area, we want to take care of our elders with\n\
    some monitoring equipment, and the Internet of Things can\nplay a signiﬁcant role\
    \ in it. The motivation of writing this\npaper is to collect the information of\
    \ various existing\nInternet\nof\nThings\nArchitecture\nand\nCommunication\nTechniques\
    \ used in Healthcare Monitoring System to\nobserve that how efﬁciently, different\
    \ researchers have\nused it. So we have studied different real-time health\nmonitoring\
    \ system based on diseases which are common in\nelderly people like diabetes,\
    \ blood pressure, heart disease,\nsleep apnea, and cancer, etc. In this real-time\
    \ health\nmonitoring system, researchers introduced many new\nmeasures, communication\
    \ techniques like ZigBee, Long-\nRange Wide Area Network (LoRawan), Radio Frequency\n\
    Identiﬁcation (RFID). Apart from this, it was also observed\nthat remote monitoring\
    \ system in Healthcare is incomplete\nwithout data processing and early prediction\
    \ in such dis-\neases. Though, Machine learning provides efﬁcient tech-\nniques\
    \ to extract knowledge from diagnostic medical\ndatasets collected from the patients.\
    \ That is why we\nhighlighted the current role of various Machine Learning\nalgorithms\n\
    like\nSupport\nVector\nMachine,\nK-Nearest\nNeighbor,\nRandom\nForest,\netc.,\n\
    for\nprocessing\nof\nHealthcare data and also helpful to predict the output more\n\
    precisely.\nKeywords HealthCare \x02 IoT \x02 LoRaWan \x02 ZigBee \x02\nRFID \x02\
    \ Machine learning\nIntroduction\nInternet of Things (IoT) is regarding the development\
    \ of\nthe internet ahead of computers and smartphones to an\nentire series of\
    \ environments, procedures, and other things.\nIt has been many years since IoT\
    \ came into existence, but\nstill, we have not entirely understood it, and this\
    \ is the\nreason why we have not been able to use it efﬁciently in the\nhealthcare\
    \ area. It means to say that it is yet to be known\nwell so that we can use it\
    \ properly in our daily life. As IoT\nis entering into healthcare, the expectation\
    \ of getting new\nfacilities is also increasing especially for the elderly. In\n\
    today’s modern era, we all have a shortage of time to take\ncare of our parents\
    \ who are very old, due to which they\ndepend more on IoT-based new wearable sensors.\
    \ Elderly\npeople need more health monitoring so that we can quickly\nidentify\
    \ and cure, whatever side effects they have such as\nincreased blood pressure,\
    \ body temperature, heart disease,\netc., by the doctors within the time. So in\
    \ such a situation,\nby sensing the data from the body of the elderly people,\n\
    with the help of sensors and communication techniques we\ncan forward it for further\
    \ processing. The size and weight\nof these sensor nodes are so small that they\
    \ are very easy to\ncarry and they can automatically sense the data [1]. To\n\
    operate them, the patient does not even have to do the\nmanual effort from outside.\
    \ However, these sensors are\nmore sensitive which sometimes stops working on\
    \ the\npower shortage or environmental hazards and the result is\n& Navneet Verma\n\
    navneet.713@gmail.com\n1\nComputer Science and Engineering Department, Deenbandhu\n\
    Chhotu Ram University of Science & Technology, Sonipat,\nHaryana, India\n2\nInstitute\
    \ of Engineering and Technology, Chitkara\nUniversity, Punjab 140401, India\n\
    123\nJ. Inst. Eng. India Ser. B (February 2022) 103(1):245–257\nhttps://doi.org/10.1007/s40031-021-00632-3\n\
    system failure [2]. In Fig. 1, it was demonstrated that how\nIoT sensors and technology\
    \ are working in the HealthCare\narea.\nSmart Healthcare is an intelligent infrastructure\
    \ that\ntransfers information with the help of an IoT system and\nalso implements\
    \ processing from cloud and fog computing.\nIn various applications, we can use\
    \ HealthCare with IoT\nlike, diagnosis and elderly treatment, health management\n\
    and managing chronic diseases, disease avoidance and risk\nmonitoring, smart hospitals,\
    \ virtual assistants, reducing\nurgent situation waiting times, assisting drug\
    \ research, etc.\nIBM is the ﬁrst to introduce the Smart Healthcare concept\n\
    [3] in 2009. No doubt the Internet of Things (IoT) among\nthe wide stimulating\
    \ areas of investigation for the engi-\nneering\nsociety\nand\ndevice\nmanufacturing\n\
    business.\nWhereas with the help of established internet, we can\nconnect two\
    \ devices to communicate and that too with the\nhelp of the intervention of a\
    \ human. While IoT connects all\nsorts of devices ‘‘Things’’ into a broad network\
    \ of inter-\nrelated computing intellect without the involvement of a\nhuman.\
    \ The growth of the IoT industry is demonstrated in\nFig. 2, and various IoT elements\
    \ with technology are pre-\nsent in Fig. 3.\nOverview of IoT Protocols and Architecture\n\
    Today, we are using internet TCP/IP protocol suite for\nnetwork communication\
    \ and billions of IoT devices can\nwork because it is connected through the internet.\
    \ IoT\nprotocols are an essential element of the IoT technology\nstack and without\
    \ them, the hardware connected to it is\nuseless. Because the IoT protocols only\
    \ tell data exchange\nin a structured and meaningful way. Whatever IoT is today\n\
    is due to its essential characteristics like communication\nbetween sensors, equipment,\
    \ servers, gateways, and end\nuser’s applications. Although the IoT protocols\
    \ enable this\nall smart stuff to talk and interact. Though the availability\n\
    of present Internet communications is free and the biggest\nconstraint for any\
    \ IoT device even today is that it is too\nheavy and a power-consuming process\
    \ for any IoT use\ncase. The application layer works as an association\nbetween\
    \ the user and sensor that is needed for the appli-\ncation. ‘‘Constrained Application\
    \ Protocol (CoAP) was\ndesigned to translate the HTTP model so that it could be\n\
    used in restrictive devices and network environments.\nCoAP relies on the User\
    \ Datagram Protocol (UDP) for\nFig. 1 IoT in HealthCare\nFig. 2 Growth of IoT\n\
    Fig. 3 IoT Elements with Technology\n246\nJ. Inst. Eng. India Ser. B (February\
    \ 2022) 103(1):245–257\n123\nestablishing secure communication between endpoints.\n\
    Apart from transferring IoT data, CoAP leverages Data-\ngram Transport Layer Security\
    \ (DTLS) for the secure\nexchange of messages in the transport layer’’[4, 5].\
    \ CoAP\nis more efﬁcient when used in arrangement with 6LoW-\nPAN, a lighter version\
    \ of the traditional HTTP protocol.\n‘‘Message Queuing Telemetry Transport-(MQTT)’’\
    \ is a\nlightweight publication/subscription type messaging pro-\ntocol. MQTT’s\
    \ design is simple and lightweight, and it is\nspecially designed for battery-powered\
    \ devices, providing\nsmall power consumption for devices. It works over TCP,\n\
    and it cannot be used with all types of IoT applications.\nMoreover, it uses text\
    \ for topic names, which increases its\noverhead. Once there is physical connectivity\
    \ done, then\nwith a unique method, all the devices can be separated\nfrom operating\
    \ in their range. The network address has a\ncritical role to identify each computer\
    \ that is associated\nwith the same router. Each alliance in IoT has its network\n\
    address; for occurrence, ZigBee is one alliance with its\nnetwork addresses. Like\
    \ this, ‘‘BLE and Z-Wave’’ are\nhaving their network addresses according to their\
    \ envi-\nronments. ‘‘6LoWPAN (IPv6 Low Power Wireless Per-\nsonal Area Network)’’\
    \ devices also function on IEEE\n802.15.4, but their network stack is with IP\
    \ connectivity\n(IPv6). With effective physical layer standards, we can\nachieve\
    \ all this like more devices in a single environment\nand low power consumption,\
    \ longer battery life, lower\nbandwidth consumption, the ability to connect smaller\
    \ and\nlighter devices. ‘‘Near Field Communication (NFC), IEEE\n802.15.1 (Bluetooth\
    \ Low Energy (BLE) – Bluetooth 4.0),\nIEEE 802.15.4 (ZigBee, 6LoWPAN, WirelessHART,\
    \ Mi-\nWi),’’ etc., are the standards set by deﬁnite bodies such as\nproprietary\
    \ vendors (Z-Wave by SIGMA DESIGNS) and\nIEEE (Institute of Electrical and Electronics\
    \ Engineers).\nIoT architecture is divided into ﬁve layers [6] as shown\nin Fig.\
    \ 4, and the architecture of IoT in HealthCare is\ndemonstrated in Fig. 5. The\
    \ responsibilities of different\nlayers in IoT architecture are:\nI.\nPerception\
    \ layer The perception layer is like a physical\nlayer, or we can also call it\
    \ the device layer. On this\nlayer, all sensors like RFID, infrared sensors. barcode\
    \ is\nscanned and collect data from the sensor node to\nforward it to the network\
    \ layer further.\nII.\nNetwork layer In IoT architecture, the network layer is\n\
    also called as transmission layer. It works by sending\nthe data received from\
    \ the perception layer to the\nprocessing unit securely. The transmission standard\n\
    can be wired and wireless to send data securely and\nthis layer use 3G, wi-ﬁ,\
    \ Bluetooth, and Zigbee\ntechnology. Thus, the data are then forwarded to the\n\
    middleware layer.\nIII.\nMiddleware layer One device of IoT connects to the\n\
    other device only when both provide the same type of\nservices. The middleware\
    \ layer has the responsibility\nto connect it to the database by keeping in mind\
    \ the\nservice management. Further, computation and deci-\nsion-making are also\
    \ done by the same middleware\nlayer.\nIV.\nApplication layer This layer comes\
    \ up with the global\nmanagement service. As per the device applications\nlike\
    \ it can be smart farming, smart health, smart\nhome, intelligent transportation,\
    \ smart city, etc.\nV.\nBusiness layer The business layer helps in creating a\n\
    business model, graph, ﬂowchart, etc., for different\nbusiness models from the\
    \ output received from this\nlayer, which is useful in determining the further\n\
    business strategies.\nApplications of IoT in HealthCare\nIoT in the HealthCare\
    \ ﬁeld provides applications that can\nbe separated into two sections [7, 8];\n\
    Fig. 4 IoT Architecture\nFig. 5 The architecture of IoT in HealthCare\nJ. Inst.\
    \ Eng. India Ser. B (February 2022) 103(1):245–257\n247\n123\nI.\nSingle condition\
    \ observation, e.g., Glucose level mon-\nitoring,\nelectrocardiogram\nsensing,\n\
    blood\npressure\nsensing, body temperature sensing, oxygen value\nsensing ii)\
    \ Clustered condition observation, e.g., Reha-\nbilitation management, medication\
    \ system, wheelchair\nsystem, imminent healthcare, smartphone healthcare\nsolutions.\n\
    Further for general HealthCare, lots of apps are avail-\nable like;\nGoogle Fit\n\
    It is a health-tracking application. It is the only set of\napplication programming\
    \ interfaces (API) that combine\ndata from multiple devices and apps. API is a\
    \ computing\nedge that deﬁnes exchanges of data between multiple\nsoftware. Google\
    \ ﬁt uses sensors of a user’s mobile devices\nto witness our physical ﬁtness behavior\
    \ for an instance\nrunning, walking, cycling, and many more. As per the\nuser’s\
    \ ﬁtness objective, they measured against a wide-\nspread view of their ﬁtness\
    \ level.\nECG Self Monitoring\nThe Electrocardiogram (ECG) sensors calculate the\
    \ bio-\npotential that is caused by electrical signals, and it controls\nthe expansion\
    \ and contraction of the heart chambers. It is\nimplemented in a health checkup\
    \ procedure.\nPedometer\nThis device counts every step of a person by detecting\
    \ the\nmovement of the person’s hands and hips. The movement\nof a body is observed\
    \ by attaching a enclose of reference\nwhich consists of an intangible coordinate\
    \ system, to a\nviewer and measuring the change in position of the body\nrelative\
    \ to the enclose with the change in time. The tech-\nnology for a pedometer includes\
    \ a mechanical sensor and\nsoftware to count the number of steps. Today, Micro-\n\
    electro-mechanical systems (MEMS) sensors and compli-\ncated software are to be\
    \ used for the same purpose.\nNoom-Walk\nNoom Walk is similar to a pedometer as\
    \ it counts steps all\nover the day. It does not use GPS technology, so the app\n\
    uses less battery and after counting steps for 24 h, Noom\nWalk uses around the\
    \ equal battery life as a GPS-enabled\napp just for few minutes.\nWater Your Body\n\
    This app is created to remind a person to drink a certain\namount of water every\
    \ day. This app is based on a lot of\npredeﬁned algorithms that take some related\
    \ information\nfrom a user for instance weight, height, etc., to set remin-\n\
    ders for the users. Some of them are also used some\ntracking components to track\
    \ the temperature of a body and\nas well as energy is being exhausted from a body.\n\
    Instant Heart Rate\nBasically, this application and technology are quite similar\n\
    to the technology which is being used in Heart rate mon-\nitoring. For instance,\
    \ some predeﬁned algorithms and\nsoftware are used in this. The main quality of\
    \ this appli-\ncation is to measure heart rate instantly or in a fraction of a\n\
    second.\nFinger Print Thermometer\nIt is a sensor-based application that takes\
    \ a user’s ﬁnger to\ndetect body temperature and pressure. It recognizes the\n\
    ﬁnger which we press on the display panel. These sensors\ncan permit users to\
    \ just place their ﬁnger on the screen and\nrecognize the print, rather than on\
    \ a button. Random net-\nworks of a hybrid nanostructure stand on ultra-long silver\n\
    nanoﬁbers, and ﬁne silver nanowires are used to produce\nclear, ﬂexible electrodes\
    \ of this multitasking sensor array.\nOn track Diabetes\nThis application connects\
    \ to Dexcom-glucometer to track\nthe level of blood sugar. A person can also give\
    \ related\ninformation based on steps, exercise levels, meals, etc.\nMotivation\n\
    When a device is associated with the internet, it means that\ncan send and/or\
    \ receive information. This ability to send\nand/or receive information makes\
    \ devices smarter. IoT in\nHealthCare is gaining more attention due to the advance-\n\
    ment in the development of IoT devices. Fortune Business\nInsight says that the\
    \ market will go up to USD 176.82\nbillion by 2026 and it was USD 30.96 in 2018.\
    \ The market\nis predicted to rise at a CAGR of 33% in the estimated\nperiod (2019–2026).\
    \ The integration of AI with IoT is the\nvital feature driving the IoT in HealthCare\
    \ market exten-\nsion. Asia Paciﬁc area is probable to grasp the maximum\nmarket\
    \ share. As per our knowledge, in this paper, we\ndescribe the existing IoT structural\
    \ design and communi-\ncation techniques in HealthCare Monitoring. Application\n\
    area of IoT devices is going to be increased in our daily life\n248\nJ. Inst.\
    \ Eng. India Ser. B (February 2022) 103(1):245–257\n123\nlike SmartHome, HealthCare,\
    \ Remote Monitoring, etc.,\nand various types of technology platforms are being\
    \ used\nfor the architecture of IoT along with this various com-\nmunication protocols.\
    \ As our focused area is Smart\nHealthCare, hence, this ﬁeld needs to be optimized.\
    \ If\ncommunication technique challenges and accurate data\ntransmission are not\
    \ addressed, then we will fail to rec-\nognize the disease at the right time.\
    \ These points motivated\nus to bring forward this review work taking into consid-\n\
    eration various parameters like Coverage area, transmis-\nsion range, accurate\
    \ data as futuristic solutions. To make\navailable the readers through an explanation\
    \ of the dis-\nsimilar work available in this ﬁeld of HealthCare in IoT\nwhich\
    \ helps to adapt these methods in solving communi-\ncation and accuracy of data\
    \ problems in future. In this\nCOVID-19 situation, today when we cannot physically\n\
    take care of our elders and near dear ones, then such remote\nmonitory system\
    \ can be most effective, just the high-speed\ninternet should be facilitated.\
    \ Researchers will get the help\nto explore more to address solutions in approaching\
    \ days.\nAs per the report of Deloitte and NASSCOM, Fig. 6\nexhibits the number\
    \ of IoT-enabled devices growth per\nyear and the CAGR growth rate which is almost\
    \ 33%.\nLiterature Survey\nBluetooth Low Energy (BLE)\nBLE is an energy-efﬁcient\
    \ and low latency protocol\nbecause of its single-hop transmission feature. In\
    \ this paper\n[9], the author has compared some microcontrollers for the\ngateway\
    \ node and has chosen the MCU node based on its\nspeciﬁcation. Sensed data from\
    \ patient’s body stored on an\nandroid app with the help of Bluetooth Low Energy\
    \ (BLE).\nBLE also provides Cyclic Redundancy Check (CRC) for\ndata security,\
    \ and this same app forwarded the collected\ndata on the cloud for further reference.\
    \ In this paper, the\nauthor proposed a reliable system at a low cost. In another\n\
    experiment [10], the author has sent patient data from three\ndifferent methods\
    \ like BLE, Wi-Fi, GSM to the mobile app\nby making RPi3 a gateway node, so that\
    \ if one data is lost\nfrom one method, the data from the remaining method\ncould\
    \ be received. And ﬁnally, web application software\nhas been proposed to provide\
    \ an interface for cloud data-\nbases. In this work [11], we observed that the\
    \ working of\nthe BLE protocol is better in the case of latency and energy\nparameters.\n\
    Drawbacks\nThe early-stage disease prediction method is not present in\nthe above\
    \ work, and all patients’ complete sensed data are\nstored on the cloud without\
    \ any data analysis which may\nincrease the big data problem on the cloud in the\
    \ future.\nAlso, BLE supports single-hop transmission which is not so\nmuch reliable,\
    \ as an end-to-end transmission depends upon\nthe working of intermediate nodes.\n\
    Bluetooth (IEEE 802.15.1)\nThis paper [12]shows, that IoT helps a lot to reduce\
    \ deaths\ndue to heart attack, here the entire patient monitoring\nsystem is separated\
    \ into two steps which are data acquisi-\ntion and data transmission. In the data\
    \ acquisition part, data\nforwarded into four different modules by checking the\n\
    patient’s Electrocardiogram (ECG), pulse rate, heart rate,\nblood fat, blood pressure,\
    \ patient location, and blood glu-\ncose. These modules are synchronous uninterrupted\
    \ com-\nmunication for all data, uninterrupted communication in\nspecial slots,\
    \ transmission on patient demand, and event-\ntriggered transmission. At last,\
    \ the implementation was\nperformed on a prototype, in which the monitoring work\n\
    was done with the help of Java application in Android\nsmartphone on sensed data\
    \ which was sent via Bluetooth\nand data were left on the server-side for monitoring\
    \ of\ndoctors.\nDrawbacks\nIt has also been observed that Bluetooth is not adaptable\
    \ for\nlong-range transmission [13]. BLE and Bluetooth work on\nthe same frequency\
    \ and range, but the transmission rate in\nthe case of Bluetooth (IEEE 802.15.1)\
    \ is up to 1- 3 Mbit/s,\nwhereas in BLE it is 1 Mbit/s.\nZigBee (IEEE 802.15.4)\n\
    The contribution of master–slave architecture [14], in IoT,\nplays a signiﬁcant\
    \ task. The slave node passes on the dif-\nferent data readings to the sub-master\
    \ node with the help of\nFig. 6 Number of connected device per year\nJ. Inst.\
    \ Eng. India Ser. B (February 2022) 103(1):245–257\n249\n123\nZigBee, which is\
    \ a good protocol for small distance com-\nmunication, followed by the sub-master\
    \ node, send the data\nwhich was received from the slave node to the master node,\n\
    which is at a much greater distance and here sometimes due\nto lack of cellular\
    \ network, therefore, LoRawan protocol\nhas been used. The accuracy of the ZigBee\
    \ protocol\nexplained in this paper [15], during communication, such\nas accurate\
    \ location detection by ZigBee terminal when it\npasses through ZigBee router\
    \ area. When sensed data of\npatients are compared with manual reading, almost\
    \ 99\npercent of the matches took place. On a similar standard,\none more technology\
    \ is used for communication [16], the\nauthor has proposed an IoT-based biomedical\
    \ kit which is\nvery cheap. As well as it can be implemented on a lot of\npeople\
    \ simultaneously. The basic platform in this system is\nRaspberry Pi 3, and it\
    \ was connected to a wireless trans-\nceiver ‘‘nRF24L01 (IEEE 802.15.4)’’ and\
    \ microcontroller\nMSP430G2553 for data sensing and transmission. The\nauthor\
    \ has also stated in this paper that cost, power con-\nsumption, standby mode,\
    \ and data transmission rate wise\nnRF is best instead of ZigBee and BLE. So when\
    \ we talk\nabout data accuracy, we found that ZigBee performance is\ngood, and\
    \ based on power consumption, standby mode, and\ndata transmission rate parameters-\
    \ nRF is good.\nDrawbacks\nHere, we can see that both Zigbee and nRF are designed\
    \ for\nsmall-distance communication and the data rate of ZigBee\nis 250 kbit/s.\n\
    Sigfox/LoRa/NB-IoT under LPWAN\nBeneﬁts of Sigfox, LoRa, and NB-IoT protocols\
    \ [13] such\nas battery life, cost, and range of radio communication,\nunder the\
    \ low power wide area networks (LPWAN) cate-\ngory. LoRaWan uses AES 128b for\
    \ encryption and NB-IoT\nuses LTE encryption, but Sigfox has no authentication\
    \ or\nencryption. A new architecture [17] has been proposed for\nSmart HealthCare,\
    \ in which communication takes place\nwith the help of LoRa connectivity to Fog\
    \ Computing. It\nhas been observed that the monitoring of remote area\npatients\
    \ can be forwarded to several kilometers away also;\nthis system does not allow\
    \ too much burden of data on the\ncloud and is also a good example of energy efﬁciency.\
    \ In\nthis research work [18], a channel access mechanism\nsolution is provided\
    \ to reduce the collisions, and the focus\narea of this work is to analyze the\
    \ scalability of LoRa\ntechnology. No doubt the Sigfox/LoRa/NB-IoT protocols\n\
    under the LPWAN category are good.\nDrawbacks\nSince the NB-IoT commercial deployment\
    \ is very less in\nHealthCare, so its lifetime and performance are not sure\n\
    whether it is good or not. Another challenge is internet\nconnectivity in a remote\
    \ area, and it is expected that 5G\ncommunication will be able to solve this.\
    \ The common\ndrawback in the above-cited papers is that they are just\nworking\
    \ on the communication part there is no mechanism\nto detect the disease in the\
    \ early stage.\nMQTT\nIn this work [19], throughput and end-to-end delay\nparameters\
    \ were taken for a comparison between Message\nQueue Telemetry Transport (MQTT)\
    \ and HTTP. To build\nthe simulation environment, OMNET ? ? network sim-\nulation\
    \ was used and it described that MQTT protocol\nperforms better as compared to\
    \ HTTP. Again in this related\npaper [20], MQTTT has been used for health monitoring.\n\
    Firstly, a wearable device receives the health-related data\nfrom the sensors\
    \ and then by customizing the data, forward\nit to the cloud because of the MQTT\
    \ protocol. In addition\nto this, a fuzzy classiﬁer [21] is used to receive the\
    \ con-\ntinued data from the sensor as well as for the data ﬁltering\ntask, so\
    \ that only a calculated amount of data is to be sent\non the cloud.\nDrawbacks\n\
    More power consumption is required by MQTT and\nanother issue is that it uses\
    \ text to topic name which\nincreases its message overhead.\nCoAP\nThe Constrained\
    \ Application Protocol (CoAP) is a web\ntransfer protocol that is used for constrained\
    \ nodes within\nconstrained networks, which is having low bandwidth and\nlow availability.\
    \ It is similar to HTTP protocol. The author\n[22] has given an example of a hybrid\
    \ system in this paper.\nThis hybrid system is made up using both 6LoWPan and\n\
    CoAP protocols, due to which the efﬁciency of this hybrid\nsystem has increased\
    \ up to a great extent. Similarly [23],\nthe author has used CoAP as the protocol\
    \ of an application\nlayer and implementing it under 6LoWPan network on\nContiki\
    \ OS. Here, the performance is quite satisfactory and\nit was concluded that CoAP\
    \ is a reliable and effective\napplication protocol.\n250\nJ. Inst. Eng. India\
    \ Ser. B (February 2022) 103(1):245–257\n123\nDrawbacks\nCoAP is not good in congestion\
    \ control mechanism and\nhaving poor interoperability with other devices.\nMiscellaneous\n\
    In this system [24], the author has mainly explained the\nrole of IoT in the health\
    \ care monitoring of elderly people.\nThe process of sensing the heart rate and\
    \ body temperature\nof the elderly by making an Arduino do it yourself (DIY)\n\
    board is the base. Besides, sensed data have been stored on\nthe cloud for further\
    \ graph plotting and emergency notiﬁ-\ncation. In this research, it has also been\
    \ said to create a\nfuture model in which the decision-making algorithm of\nmachine\
    \ learning will be used.\nIn the same way, the Raspberry Pi platform has been\n\
    used [25], the author has given the proposal of an IoT-\nbased system keeping\
    \ in mind the elderly and disabled\npeople who speak a very low sound. To create\
    \ this system,\nRaspberry Pi is connected with a GPIO interface, which\npatients\
    \ can access from their smartphone. With the help of\nthe internet, this system\
    \ sends pre-recorded audio messages\nto hospital staff or relatives, so that help\
    \ can be delivered in\ntime.\nIn this work [26, 27], hybrid system is made up\
    \ using\nboth 6LoWPAN and MQTT protocols, where 6LoWPAN\nis used for framing and\
    \ for internal communication MQTT\nis used. In this work [28], a new protocol\
    \ was proposed and\nits performance was checked on the NS-2 simulator and\nresults\
    \ show that it is good in energy-saving and network\nlifetime parameters.\nML\
    \ in HealthCare\nIn this paper [31], the author has focused on how to use\nsensed\
    \ data from the cloud efﬁciently. For example, here\nonly the database of patients\
    \ with diabetes has been\nresearched to indicate that the dataset is a severe\
    \ disease of\ndiabetes and which data set tells it to be early-stage of\ndiabetes.\
    \ Here, the author has used various classiﬁer\nschemes of ML-like decision tree,\
    \ K-NN, SVM and ﬁnally\npropose a Fuzzy Rule-Based Neural Classiﬁer.\nRandom forest\
    \ classiﬁer and IoT [34] can perform well\nin the healthcare system. It has been\
    \ demonstrated that how\nto improve the interactivity between the patients and\
    \ the\ndoctors. For the reliability of this process, the author has\nperformed\
    \ experiments on datasets of various diseases, like\ndiabetes, breast cancer,\
    \ surgery, thyroid, spect-heart, heart\ndisease, liver disorder, and dermatology.\
    \ The author has\nused different algorithms of machine learning over differ-\n\
    ent datasets such as Support Vector Machine, K-NN,\nDecision Trees, MLP, and Random\
    \ Forest. The best results\nthat we have come across are through the random forest\n\
    technique of machine learning and the average results are\nalso good on different\
    \ disease data sets. In the future, if we\nuse a large data set, then maybe some\
    \ other algorithm of\nmachine learning can give better results.\nIn heart care\
    \ disease [35], Fog-based HealthCare with\ndeep learning technique is a unique\
    \ Health Fog system,\nespecially for heart patients, in which the Ensemble\nmethod\
    \ of deep learning has been used on edge computing\ndevices. For high precision,\
    \ tremendous compute resources\n(CPU and GPU) are used for instruction and forecast.\
    \ In the\nfuture, this architecture could be used for other fog com-\nputing applications\
    \ such as weather forecasting, agricul-\nture, smart city, trafﬁc management,\
    \ and other HealthCare\nissues such as cancer, diabetes, and hepatitis, which\
    \ can\nsupply skillful results.\nA multi-agent system [36] has been described\
    \ as ﬂexi-\nble, reliable, and energy-efﬁcient. Here, the focus is on the\ndata\
    \ reduction algorithm, so that a reduced set of data is\nprepared, which is very\
    \ similar to the original data set. By\nusing this above-said method, we will\
    \ not have the\nrequirement of separate external memory. For the imple-\nmentation\
    \ of this system, Java language has been used in\nthe JADE environment and the\
    \ data reduction ratio has\nbeen calculated up to 80 percent.\nANN-based IoT-enabled\
    \ HealthCare system framework\nis demonstrated [37], and the accuracy of the developed\n\
    model is 90.54% for a healthy person and 87.88% for a\npatient with diabetes and\
    \ kidney disease. ANN Technique\nof Machine Learning especially focused on Sleep\
    \ Apnea\ndisease [38], which is an event detection system also a\ngood idea. Different\
    \ sensors are used for data collection\npurposes like MEMS-based accelerometers\
    \ and Industrial\nSpiro-meter. Only ACC data are used to train the system,\nand\
    \ for good results, the author has suggested that more\nsensors can be used for\
    \ monitoring purposes in the future.\nIn this work [39], the Deep Neural Network\
    \ technique\nwas used here to extract the features from EEG, ECG,\nTemperature,\
    \ and Pulse Rate, and the accuracy of the\nmodel was found at 97.5%. To ﬁnd the\
    \ abnormality in the\nKidney [40], FPGA-based IoT-enabled ultrasound images\n\
    were used along with a Support Vector Machine classiﬁer\nto know the accuracy\
    \ of the system. Similarly, k-means\nalgorithm of machine learning is used to\
    \ predict the\nupcoming situation [14].\nIn Table 3, we demonstrated various ML\
    \ algorithms and\napplication areas.\nIn the comparison graph shown below in Fig.\
    \ 7, we have\ncompared the accuracy value of the diabetes dataset\n[41–45] given\
    \ in different papers by various classiﬁcation\nmethods of machine learning like\
    \ SVM, K-NN, Decision\nTree, Naive–Bayes, Logistic Regression, and Random\nForest.\n\
    J. Inst. Eng. India Ser. B (February 2022) 103(1):245–257\n251\n123\nChallenges\
    \ with IoT in Healthcare\nI.\nData security and isolation\nII.\nIntegration: various\
    \ devices and protocols\nIII.\nNetwork lifetime\nIV.\nData overload and accuracy\n\
    V.\nCost\nThese three checks are very important for data security and\nPrivacy,\
    \ i.e., authentication, conﬁdentiality, and integrity.\nFor Data security [34,\
    \ 46, 47], either we talk about Fog\nComputing, Cloud computing, and Direct transmission,\n\
    such algorithms do necessitate large storage capacity levels\nwhere cloud computing\
    \ up to an extent can solve this large\nmemory requirement [48]. Sometimes the\
    \ data are much\nclassiﬁed, and it might become a big difﬁculty if stolen or\n\
    compromised. Most security depends upon the developers\nof the devices, but we\
    \ also need some new security\nmethods [49, 50]. IoT networks in hospitals are\
    \ extensively\nusing 6LoWPAN with ‘‘RPL (IPv6 Routing Protocol for\nLow Power\
    \ and Lossy Networks)’’. Storage requirements\ncan be met by using motes ROM.\
    \ But still using more\ncapacity memory, we can control a few more attacks and\n\
    can reduce the issue of security further. Other solutions\ncould be private cloud\
    \ and data aggregation techniques. In\nother words, it should be in the practice\
    \ and process of all\nof us that we conﬁrm that the data cannot be used and\n\
    accessed by any unauthorized individual and parties.\nSecurity of data guarantees\
    \ that the data are reliable and\naccurate whenever it is needed by authorized\
    \ access. A\ndata security plan involves aspects such as gathering only\nthe necessary\
    \ data, safe maintenance and demolishes any\ndata that is no longer needed. These\
    \ steps will assist any\nbusiness to meet the legal commitment of possessing\n\
    responsive data. Appropriate use of data is deﬁned by data\nprivacy in an appropriate\
    \ approach [51]. The IoT system\ncan function and convey information via an online\n\
    approach only when devices are securely connected to a\ncommunication network.\
    \ Some of them as given below\n[52]:\n•\nBluetooth The IEEE 802.15.1 standard\
    \ is an exclusive\nopen wireless technology standard for exchanging data\nover\
    \ a short distance. Bluetooth radio adopts the\nFrequency Hopping Spread Spectrum—FHSS.\
    \ The\ntransmit distance of this technology is directly propor-\ntional to the\
    \ transmit power.\n•\nWi-Fi The IEEE 802.11 network is an arrangement of\nthe\
    \ Wireless Local Area Network (WLAN). In low\nband mode, three variables of IEEE\
    \ 802.11(b, g, n) are\npresent, which can transmit data from 11 Mbps and up\n\
    to 54 M bps and goes up to 32 m indoors and 95 m\noutdoor.\n•\nCellular Cellular\
    \ networks have become more popular\nin recent years. It uses radio waves for\
    \ transferring\ninformation. In the 1980’s, it was started by the name of\n1G\
    \ which was an analog system, then the 2G-Digital\nsystem comes into existence,\
    \ then 3G and after that 4G\ncellular network generation came which is based on\n\
    LTE and Wi-Max network standards.\nSome of the reasons behind the data overload\
    \ are given\nbelow:\n•\nA lot of new information is created continuously.\n•\n\
    The pressure to create and compete in information\nprovision leading to a quantity\
    \ over quality effect in\nmany industries\n•\nThe simplicity in online information\
    \ sharing, creating\nand duplicating.\n•\nThe exponential rise in channels to\
    \ collect information\nby; print media, radio, websites, television, e-mail, RSS\n\
    feeds, mobile telephony, etc.\n•\nIncreasing in the weight of historical data\
    \ available to\nus.\n•\nHigh volumes of contradictory, conﬂicting, and plain\n\
    old erroneous information.\nFig. 7 Accuracy comparison\n252\nJ. Inst. Eng. India\
    \ Ser. B (February 2022) 103(1):245–257\n123\n•\nNo simple methodologies for comparing,\
    \ quickly\nprocessing, and evaluating information sources.\n•\nTo fall short in\
    \ clear structure in groups of information\nand poor or bad clues as to the associations\
    \ between\nthose groups.\nA node in an IoT network requires a lot of energy as\n\
    well as a storage area to make it so capable. In this work\n[53], for energy efﬁciency\
    \ especially for wearable devices\nATTINY85 sensor is used which results in the\
    \ long life of a\n220 mAh battery. Samsung Exynos 5422, a smart Gate-\nway, has\
    \ also been used, which is energy efﬁcient as well\nas fast [54] due to the processor\
    \ installed in it. This system\ncan understand only FHIR datasets ﬁles, so in\
    \ the future, it\ncan be made compatible with CSV datasets, and the\nworking of\
    \ Gateway can also be made more accurate by\nassociating it with Artiﬁcial Intelligence.\
    \ This can be done\nby reducing the computational task and simultaneously\nwithout\
    \ losing the accuracy of the information [55], and\nthis can also be achieved\
    \ by traveling the shortest path by\ndata packets with the help of FUZZY rules\
    \ [56]. Data\noverload will occur when the input data will be larger than\nits\
    \ processing capacity. When data overloads, then the\nreduction in data started\
    \ to occur. As data accuracy is one\nof the important features of data quality.\
    \ This tells us that\nthe data values that have been stored for the object are\
    \ also\ncorrect. To be correct, data values must be true values and\nmust be represented\
    \ in a steady and explicit form. The\naccuracy will always be if the data values\
    \ are correct. Since\n100% of data accuracy is not possible anyhow. There will\n\
    always be some amount of data in the inaccurate database.\nThe application area\
    \ of all protocols is also different from\nthe perspective of these parameters\
    \ like coverage area,\ntransmission range, and operational bandwidth. A global\n\
    standard can also be made to resolve this issue. Overload of\ndata and lack of\
    \ accurate data on the cloud, fog, and\ngateway devices is also a challenge for\
    \ IoT in healthcare.\nFor data quality and accuracy issues, Machine Learning\n\
    Technology can be a good solution. Although work has\nbeen started in this direction,\
    \ it can be improved further.\nWhenever we talk about advancement in the IoT ﬁeld,\
    \ it\ndirectly affects the cost of the system. Whether we argue\non a new protocol\
    \ design, a new IoT wearable device, on a\nsensor that fulﬁlls multiple purposes;\
    \ these are all cost-\ndependent areas. Device developers should also pay special\n\
    attention to this direction.\nSo IoT networks require these characteristics [57]\
    \ such\nas:\n•\nThe capacity to connect a large number of heteroge-\nneous elements\
    \ Thousands to millions of devices will be\nneeded to build a large IoT system,\
    \ and all these\ndevices must also be entirely diverse from each other.\nMost\
    \ of the IoT devices are diverse depends upon the\ninput and output layout of\
    \ particulars and the commu-\nnication protocols. So to make a reliable IoT system,\n\
    inter-device communication, interoperable devices, and\nanalysis of the data from\
    \ all diverse devices is a big\nchallenge.\n•\nHigh reliability On each layer\
    \ of IoT, reliability is\nrequired because of the proper working of the system\n\
    and aims toward the achievement of service delivery\nensured by it.\n•\nReal-time\
    \ data transmission with minimum delays\nThese devices transmit real-time data\
    \ to the base\nstation (BS), which can further be used in different\napplications\
    \ and that too with a minimum delay such as\nabnormality discovery. Under adequate\
    \ power accessi-\nbility, wireless transmissions from sensors can be\nscheduled\
    \ at regular time intervals to maintain real-\ntime data acquisition.\n•\nThe\
    \ ability to protect all data ﬂows Diverse security\nmethods are involved in all\
    \ layers of IoT because data\nsecurity is a big concern for IoT.\n•\nThe ability\
    \ to conﬁgure applications Sensors get\noutdated from time to time, and there\
    \ are chances of\nmalfunction, so it is better to conﬁgure them from time\nto\
    \ time according to the application.\n•\nDevice-level monitoring and trafﬁc management\
    \ Mon-\nitoring all activates of connected devices and managing\nall trafﬁc or\
    \ we can say proper routing should be there.\n•\nCost-effectiveness for a large\
    \ number of connected\nobjects As we add more new devices to the network, the\n\
    cost of the system will also increase. That is why either\nthese devices support\
    \ multiple applications or they do\nnot cost much.\nWell, these are the consequences\
    \ by which it becomes\nmore complex.\nProblems in existing System\nVarious factors\
    \ affect the IoT in HealthCare applications\nlike it requires continuous research\
    \ in every ﬁeld of\nhealthcare to offer a fast and better competence for patients\n\
    for example manufacturing smart devices, fast communi-\ncation techniques, etc.\
    \ IoT has a heterogeneous network\nand due to a lack of standard architecture,\
    \ sometimes it\nbecomes a difﬁcult task to use communication techniques\naccording\
    \ to the applications. Without analytics power, IoT\nis useless which is now becoming\
    \ the biggest source of Big\nData. Deep learning, Artiﬁcial Intelligence, Machine\n\
    Learning, and Big data analytics can be used for some\nvalue-added applications\
    \ in IoT. As we can see from\nTable 1, that the professionals working in the HealthCare\n\
    department are getting massive data of the patients with the\nJ. Inst. Eng. India\
    \ Ser. B (February 2022) 103(1):245–257\n253\n123\nhelp of IoT technology either\
    \ on cloud or server, which is\ncreating a data surplus and accuracy problem.\
    \ As well as it\nis wastage of time to deal with irrelevant datasets or values\n\
    at the time of diagnosis. Before sending the whole data to\nthe cloud or diagnosis\
    \ the whole dataset, analysis of\ndatasets or data mining can assist better care\
    \ to the patient.\nAs we found in the literature review that the patient’s data\n\
    are either getting from the direct patient’s sensor device or\nfrom cloud storage\
    \ to diagnose by the doctors. If doctors\nare working on a cloud storage data\
    \ set, then it cannot be a\nreal-time health monitoring system. Sometimes, it\
    \ is very\ndifﬁcult for those who live in remote areas where doctors\nare far\
    \ away from their reach to consult. In those cases, if\nsymptoms arise for some\
    \ serious and common diseases, so\nwithout a doctor’s intervention, the machine\
    \ learning\napproach will be helpful to detect the severity level of the\ndisease.\
    \ So, IoT technology with ML can build precision of\nthe information and disseminate\
    \ more correct and real-time\ninformation to patients. This leads to fewer accidents\
    \ from\nmisperception, better protective concern, and superior\npatient satisfaction.\
    \ So with this feature, we can use IoT in\na well-planned manner in healthcare\
    \ and take it to a new\nlevel. This is the best use of it in healthcare, that\
    \ we should\ndo it for elderly patients with some serious and common\ndiseases.\
    \ In a healthcare monitoring system, the patient\nsimply has to attach the IoT-based\
    \ sensor to their body and\nthe sensor does the rest of the monitoring work itself\
    \ and\nkeeps the report to the doctor and family as well. But\nremote monitoring\
    \ facilities can beneﬁt those people who\nlive in remote areas and doctors are\
    \ far away from their\nreach.\nConclusion and Future Scope\nSo far the utility\
    \ of IoT-enabled technology in Healthcare\nis facing many challenges such as heterogeneity\
    \ of IoT\ndevices, lack of cost-effective smart and accurate medical\nsensor,\
    \ lack of a standard architecture of IoT system, high\nhandling volume data and\
    \ challenge of interoperability, etc.\nThough to prepare IoT for healthcare it\
    \ is necessary to\nsupport IoT interoperability, for this IoT system will have\n\
    to be compatible with all devices, which will require a\nstandard IoT architecture,\
    \ which could do decision-making\ntask itself. When all these challenges are well\
    \ explored,\nthen the researcher can do some new work in it by using\nnew methods\
    \ and technologies, we can increase ‘‘the\napplications of IoT in the HealthCare\
    \ ﬁeld.’’ People who\nreside in remote regions and doctors are far away from\n\
    their reach in that case remote monitoring facilities can be\nbeneﬁtted for those.\
    \ So the selection of a communication\nstandard for HealthCare purpose, especially\
    \ remote moni-\ntoring, will be our ﬁrst important factor in our further\nresearch.\
    \ It is an important factor, and we have shown\nthrough Table 2 the comparison\
    \ between various tech-\nnologies which we are using currently for Healthcare\n\
    Monitoring. Different authors have used different com-\nmunication techniques\
    \ according to the application and\narea of the problem, such as BLE, Bluetooth,\
    \ and ZigBee\nTable 1 Comparison between various Technologies used for Healthcare\
    \ architecture\nRef.\nwork\nPublished by\nIoT\ninteroperability\nData on cloud\
    \ or\nserver\nTechnique for\nprediction\nSingle/Multiple\nparameters\nTechnologies\n\
    [29]\nSpringer\nRPi\nYes\nNo\nMultiple\nGSM\n[30]\nScientiﬁc\nResearch\nRPi\n\
    Yes\nNo\nSingle\nSMS/Alarm\n[31]\nElsevier\nAndroid\nYes\nNo\nMultiple\nBluetooth\n\
    [20]\nSPC\nRPi\nYes\nNo\nMultiple\nMQTT\n[14]\nUbiquity\nArduino\nYes\nk-means\n\
    Multiple\nZigBee & LoRawan\n[31]\nElsevier\nJava\nYes\nFuzzy Rules\nMultiple\n\
    5G mobile network\n[21]\nElsevier\nAndroid\nYes\nFuzzy Rules\nMultiple\nMQTT\n\
    [26]\nMDPI\nRPi\nYes\nNo\nMultiple\nMQTT on\n6LoWPAN\n[24]\nElsevier\nArduino\n\
    Yes\nNo\nMultiple\nLED & LDR\n[10]\nElsevier\nRpi3\nYes\nNo\nMultiple\nBLE\n[32]\n\
    Elsevier\nAndroid\nYes\nNo\nMultiple\nBLE\n[33]\nElsevier\nWeka/Matlab\nYes\n\
    HOBDBNN\nMultiple\nBluetooth\n[23]\nIEEE\nContiki\nYes\nNO\nMultiple\nCoAP on\n\
    6LoWPAN\n254\nJ. Inst. Eng. India Ser. B (February 2022) 103(1):245–257\n123\n\
    for small coverage areas, and some authors have described\nsigfox/LoRa/NB-IoT\
    \ techniques are good for low power\nwide area networks as demonstrated in Table\
    \ 1. There is\nvery little focus on Machine Learning for early-stage dis-\nease\
    \ prediction, which is a very important area, without\nwhich we could not be able\
    \ to predict the disease at the\nearly stage. So this will be our second important\
    \ factor in\nour further research like which ML technique can predict\nthe disease\
    \ more accurately. Machine learning techniques\nas demonstrated in Table 3 and\
    \ IoT together can do a\nmiracle in today’s modern technology and especially in\
    \ the\nHealthCare area; if both of them are used with good\nunderstanding, then\
    \ it can create a new benchmark in the\nHealthCare ﬁeld, which can be a boon for\
    \ the HealthCare\nof elder people.\nReferences\n1. S.B. Baker, W. Xiang, I. Atkinson,\
    \ Internet of things for smart\nhealthcare: technologies challenges, and opportunities.\
    \ IEEE\nAccess. 5, 26521–26544 (2017). https://doi.org/10.1109/ACC\nESS.2017.2775180\n\
    2. M.W. Woo, J.W. Lee, K.H. Park, A reliable IoT system for\npersonal healthcare\
    \ devices. Futur. Gener. Comput. Syst. 78,\n626–640 (2018). https://doi.org/10.1016/j.future.2017.04.004\n\
    Table 2 Comparison of short- & long-range communication protocols\nSigFox\nLoRawan\n\
    NB-IoT\nBLE\nZigBee\nMQTT\nAptness for\nhealthcare\nLow\nModerate\nHigh\nHigh\n\
    Moderate\nModerate\nCoverage area\n9.5 km\n7.2 km\n15 km\n150 m\n30 m\nM2M\nTransmission\n\
    rate\n100bps\n0.25–5.5kpbs\n250kbps\n1Mbps\n250kbps\n2Mbps\nAuthentication\nand\n\
    Encryption\nPrivate key\nsignature\nEncryption\nand\nscrambling\nTechnique\ndistinctive\
    \ key\ndistribution,\nrecognized only by\nthe node and base\nstation using the\n\
    unique key Data\nencryption\n3GPP S3 security,\nwhich includes user\nand device\
    \ identity,\nentity authentication,\nconﬁdentiality, and\ndata integrity\nSecure\
    \ pairing before the\nkey exchange, Two\nkeys used to provide\nauthentication\
    \ and\nidentity protection,\nAES-128b encryption\nAES-128b, Network\nkey shared\
    \ across\nnetwork, Optional\nlink key to secure\nApplication layer\ncommunications\n\
    TLS/SSL\nOperational\nBandwidth\n868 MHz\n(Eu)\n915 MHz\n(US)\n868 MHz(Eu)\n915\
    \ MHz(US)\n433 MHz(Asia)\nLTE bands, in the\nguard bands of LTE\n(guard-band mode),\n\
    or re-farmed GSM\nbands\n2.4 GHz\n2.4 GHz\n2.4 GHz\nTable 3 Various ML algorithms\
    \ and their application area\nML algorithms\nApplications\nNaive–Bayes\nCategorize\
    \ news, e-mail spam recognition, face detection, emotion study, medical diagnosis,\
    \ number identiﬁcation,\nand weather forecast. On the whole, it is useful for\
    \ big data set and efﬁcient on a big range of difﬁcult issues\nDecision tree\n\
    It helps us in ﬁnding inconsistent collection, assessing the comparative importance\
    \ of variables, handling of values,\nforecast and data management\nLinear regression\n\
    It tells us about the association between the input explanatory variable and the\
    \ output dependent variable\nLogistic Regression\nThere are many real-world applications\
    \ such as measuring the success rates of the promotion campaign, credit\nscoring,\
    \ predicting the revenues of a certain product\nK-NN\nUsed in search where we\
    \ are looking for similar data set\nLearning VECTOR\nQuantization\nIt is used\
    \ in data reduction or reduced data set\nSVM\nIt is used for text and hypertext\
    \ classiﬁcation, classiﬁcation of images, bioinformatics, etc\nApriori\nHealthcare\n\
    Boosting with AdaBoost\nIt is useful where we are having ample data to make a\
    \ prediction and we look for extremely high predictive results.\nIt is used for\
    \ reducing bias and variance in supervised learning\nRandom forest\nBanking &\
    \ Finance, Medicine, Stock Market, E-commerce\nJ. Inst. Eng. India Ser. B (February\
    \ 2022) 103(1):245–257\n255\n123\n3. S. Tian, W. Yang, J.M. Le. Grange, P. Wang,\
    \ W. Huang, Z. Ye,\nSmart healthcare: making medical care more intelligent. Glob.\n\
    Heal. J. 3, 62–65 (2019). https://doi.org/10.1016/j.glohj.2019\n.07.001\n4. O.\
    \ Said, Y. Albagory, Internet of things-based free learning\nsystem: performance\
    \ evaluation and communication perspective.\nIETE J. Res. 63, 31–44 (2017). https://doi.org/10.1080/03772063\n\
    .2016.1229582\n5. P. Sethi, S.R. Sarangi, Internet of things: architectures, protocols,\n\
    and applications. J. Electr. Comput. Eng. (2017). https://doi.org/\n10.1155/2017/9324035\n\
    6. H.F. Atlam, R.J. Walters, G.B. Wills, Internet of things: state-of-\nthe-art,\
    \ challenges, applications, and open issues. Int. J. Intell.\nComput. Res. 9,\
    \ 928–938 (2018). https://doi.org/10.20533/ijicr\n.2042.4655.2018.0112\n7. S.M.R.\
    \ Islam, D. Kwak, M.H. Kabir, M. Hossain, K.S. Kwak,\nThe internet of things for\
    \ health care: a comprehensive survey.\nIEEE Access. 3, 678–708 (2015). https://doi.org/10.1109/ACC\n\
    ESS.2015.2437951\n8. A.A. Rizvanov, Lecture Notes in Bioengineering Advances in\n\
    Biomedical Engineering and Technology, 2018.\n9. P. Kakria, N.K. Tripathi, P.\
    \ Kitipawang, A real-time health\nmonitoring system for remote cardiac patients\
    \ using smartphone\nand wearable sensors. Int. J. Telemed. Appl. (2015). https://doi.\n\
    org/10.1155/2015/373474\n10. K.N. Swaroop, K. Chandu, R. Gorrepotu, S. Deb, A\
    \ health\nmonitoring system for vital signs using IoT. Internet of Things. 5,\n\
    116–129 (2019). https://doi.org/10.1016/j.iot.2019.01.004\n11. K. Cho, G. Park,\
    \ W. Cho, J. Seo, K. Han, Performance analysis of\ndevice discovery of bluetooth\
    \ low energy (BLE) networks.\nComput. Commun. 81, 72–85 (2016). https://doi.org/10.1016\n\
    /j.comcom.2015.10.008\n12. A.J.A. Majumder, Y.A. Elsaadany, R. Young, D.R. Ucci,\
    \ An\nenergy efﬁcient wearable smart IoT system to predict cardiac\narrest. Adv.\
    \ Human-Computer Interact. (2019). https://doi.org/\n10.1155/2019/1507465\n13.\
    \ K. Mekki, E. Bajic, F. Chaxel, F. Meyer, A comparative study of\nLPWAN technologies\
    \ for large-scale IoT deployment. ICT Expr.\n5, 1–7 (2019). https://doi.org/10.1016/j.icte.2017.12.005\n\
    14. Y. Vineetha, Y. Misra, K. Krishna Kishore, A real time IoT based\npatient\
    \ health monitoring system using machine learning algo-\nrithms. Eur. J. Mol.\
    \ Clin. Med. 7, 2912–2925 (2021)\n15. T. Hiraguri, M. Aoyagi, Y. Morino, T. Akimoto,\
    \ K. Nishimori, T.\nHiraguri, Proposal of ZigBee systems for the provision of\
    \ loca-\ntion information and transmission of sensor data in medical\nwelfare.\
    \ E-Health Telecommun. Syst. Netw. 04, 45–55 (2015).\nhttps://doi.org/10.4236/etsn.2015.43005\n\
    16. O.S. Alwan, K.P. Rao, Dedicated real-time monitoring system for\nhealth care\
    \ using ZigBee. Healthc. Technol. Lett. 4, 142–144\n(2017). https://doi.org/10.1049/htl.2017.0030\n\
    17. J. Kharel, H.T. Reda, S.Y. Shin, Fog computing-based smart\nhealth monitoring\
    \ system deploying LoRa wireless communica-\ntion. IETE. Tech. Rev. (Institution\
    \ Electron. Telecommun. Eng\nIndia)\n36,\n69–82\n(2019).\nhttps://doi.org/10.1080/02564602\n\
    .2017.1406828\n18. A. Lavric, LoRa (long-range) high-density sensors for internet\
    \ of\nthings. J. Sensors. (2019). https://doi.org/10.1155/2019/3502987\n19. H.M.\
    \ Hasan, S.A. Jawad, IoT Protocols for Health Care Systems:\nA Comparative Study,\
    \ Int. J. Comput. Sci. Mob. Comput. 7\n(2018) 38–45. www.ijcsmc.com.\n20. S. Saminathan,\
    \ K. Geetha, Real-time health care monitoring\nsystem using IoT. Int. J. Eng.\
    \ Technol. 7, 484–488 (2018).\nhttps://doi.org/10.14419/ijet.v7i2.24.12141\n21.\
    \ A.F. Santamaria, F. De. Rango, A. Serianni, P. Raimondo, A real\nIoT device\
    \ deployment for e-Health applications under light-\nweight communication protocols,\
    \ activity classiﬁer and edge data\nﬁltering. Comput. Commun. 128, 60–73 (2018).\
    \ https://doi.org/\n10.1016/j.comcom.2018.06.010\n22. L. Catarinucci, D. De. Donno,\
    \ L. Mainetti, L. Palano, L. Patrono,\nM.L. Stefanizzi, L. Tarricone, An IoT-aware\
    \ architecture for\nsmart healthcare systems. IEEE Internet Things J. 2, 515–526\n\
    (2015). https://doi.org/10.1109/JIOT.2015.2417684\n23. R.S. Iru, H.E. Edvhg, P.\
    \ Lq, H. Rugdqd, D. Member, D.Q.G.\nVhqglqj, G. Wkurxjk, W.K.H. Jdwhzd, W.R. Wkh,\
    \ R. Zruog,\n{{}{&}{}}R{{}{$}{}}3 Surwrfro Iru :He Edvhg Prqlwrulqj Lq\n,R7 Khdowkfduh\
    \ Dssolfdwlrqv, 7 (2015) 79–82.\n24. S. Mohapatra, S. Mohanty, S. Mohanty, Smart\
    \ Healthcare: An\nApproach for Ubiquitous Healthcare Management Using IoT\n(Elsevier\
    \ Inc., 2019)\n25. S. Misbahuddin, H. Orabi, R. Fatta, M. Al-Juhany, A. Almatraﬁ,\n\
    IoT framework based health care system for elderly and disabled.\nPeople (2016).\
    \ https://doi.org/10.2991/racs-15.2016.16\n26. F. Wu, T. Wu, M.R. Yuce, An internet-of-things\
    \ (IoT) network\nsystem for connected safety and health monitoring applications.\n\
    Sensors (Switzerland) (2019). https://doi.org/10.3390/s19010021\n27. H. Tao, M.Z.A.\
    \ Bhuiyan, A.N. Abdalla, M.M. Hassan, J.M. Zain,\nT. Hayajneh, Secured data collection\
    \ with hardware-based\nciphers for IoT-based healthcare. IEEE Internet Things\
    \ J. 6,\n410–420 (2019). https://doi.org/10.1109/JIOT.2018.2854714\n28. K. Jaiswal,\
    \ V. Anand, EOMR: an energy-efﬁcient optimal multi-\npath routing protocol to\
    \ improve QoS in wireless sensor network\nfor IoT applications. Wirel. Pers. Commun.\
    \ 111, 2493–2515\n(2020). https://doi.org/10.1007/s11277-019-07000-x\n29. M. Al-khafajiy,\
    \ L. Webster, T. Baker, A. Waraich, Towards fog\ndriven IoT healthcare, (2018)\
    \ 1–7. doi:https://doi.org/10.1145/\n3231053.3231062.\n30. L. Mu, X. Han, Y. Chen,\
    \ X. Jin, Seamless healthcare system for\nthe elderly based on RFID technology.\
    \ Intell. Inf. Manag. 06,\n248–255 (2014). https://doi.org/10.4236/iim.2014.65024\n\
    31. P.M. Kumar, S. Lokesh, R. Varatharajan, G. Chandra Babu, P.\nParthasarathy,\
    \ Cloud and IoT based disease prediction and\ndiagnosis system for healthcare\
    \ using Fuzzy neural classiﬁer.\nFutur. Gener. Comput. Syst. 86, 527–534 (2018).\
    \ https://doi.org/\n10.1016/j.future.2018.04.036\n32. S.S. Raykar, V.N. Shet,\
    \ Design of healthcare system using IoT\nenabled application. Mater. Today Proc.\
    \ (2019). https://doi.org/\n10.1016/j.matpr.2019.06.649\n33. Z. Al-Makhadmeh,\
    \ A. Tolba, Utilizing IoT wearable medical\ndevice for heart disease prediction\
    \ using higher order Boltzmann\nmodel: a classiﬁcation approach. Measurement 147,\
    \ 106815\n(2019). https://doi.org/10.1016/j.measurement.2019.07.043\n34. P. Kaur,\
    \ R. Kumar, M. Kumar, A healthcare monitoring system\nusing random forest and\
    \ internet of things (IoT). Multimed. Tools\nAppl. 78, 19905–19916 (2019). https://doi.org/10.1007/s110\n\
    42-019-7327-8\n35. S. Tuli, N. Basumatary, S.S. Gill, M. Kahani, R.C. Arya, G.S.\n\
    Wander, R. Buyya, HealthFog: an ensemble deep learning based\nsmart healthcare\
    \ system for automatic diagnosis of heart diseases\nin integrated IoT and fog\
    \ computing environments. Futur. Gener.\nComput. Syst. 104, 187–200 (2020). https://doi.org/10.1016/j\n\
    .future.2019.10.043\n36. F. Felisberto, R. Laza, F. Fdez-Riverola, A. Pereira,\
    \ A distributed\nmultiagent system architecture for body area networks applied\
    \ to\nhealthcare monitoring. Biomed. Res. Int. (2015). https://doi.org/\n10.1155/2015/192454\n\
    37. E.T. Tan, Z.A. Halim, Health care monitoring system and ana-\nlytics based\
    \ on internet of things framework. IETE J. Res. 65,\n653–660 (2019). https://doi.org/10.1080/03772063.2018.1447402\n\
    38. A.H. Yu¨zer, H. Su¨mbu¨l, M. Nour, K. Polat, A different sleep\napnea classiﬁcation\
    \ system with neural network based on the\nacceleration signals. Appl. Acoust.\
    \ 163, 1–8 (2020). https://doi\n.org/10.1016/j.apacoust.2020.107225\n256\nJ. Inst.\
    \ Eng. India Ser. B (February 2022) 103(1):245–257\n123\n39. P. Rajan Jeyaraj,\
    \ E.R.S. Nadar, Smart-monitor: patient monitor-\ning system for IoT-based healthcare\
    \ system using deep learning.\nIETE J. Res. (2019). https://doi.org/10.1080/03772063.2019.\n\
    1649215\n40. K. Divya Krishna, V. Akkala, R. Bharath, P. Rajalakshmi, A.M.\nMohammed,\n\
    S.N.\nMerchant,\nU.B.\nDesai,\nComputer\naided\nabnormality detection for kidney\
    \ on fpga based iot enabled\nportable ultrasound imaging system. Irbm 37, 189–197\
    \ (2016).\nhttps://doi.org/10.1016/j.irbm.2016.05.001\n41. M.F. Faruque, Asaduzzaman,\
    \ I.H. Sarker, Performance analysis\nof machine learning techniques to predict\
    \ diabetes mellitus,\nArXiv. (2019).\n42. K. Vizhi, A. Dash, Diabetes prediction\
    \ using machine learning.\nInt. J. Adv. Sci. Technol. 29, 2842–2852 (2020). https://doi.org/\n\
    10.32628/cseit206463\n43. Y. Li, H. Li, H. Yao, Analysis and study of diabetes\
    \ follow-up\ndata using a data-mining-based approach in new urban Area of\nUrumqi,\
    \ Xinjiang, China, 2016–2017. Comput. Math. Methods\nMed. (2018). https://doi.org/10.1155/2018/7207151\n\
    44. B. Pranto, S.M. Mehnaz, E.B. Mahid, I.M. Sadman, A. Rahman,\nS. Momen, Evaluating\
    \ machine learning methods for predicting\ndiabetes among female patients in Bangladesh.\
    \ Information\n(2020). https://doi.org/10.3390/INFO11080374\n45. N. Sneha, T.\
    \ Gangil, Analysis of diabetes mellitus for early\nprediction using optimal features\
    \ selection. J. Big Data (2019).\nhttps://doi.org/10.1186/s40537-019-0175-6\n\
    46. A. Paul, H. Pinjari, W.H. Hong, H.C. Seo, S. Rho, Fog com-\nputing-based IoT\
    \ for health monitoring system. J. Sensors (2018).\nhttps://doi.org/10.1155/2018/1386470\n\
    47. N. Verma, A Review on Cloud Computing- It ’ s Security\nProblem & Solutions,\
    \ 5 (2017) 1–4\n48. P. Kumar, K. Silambarasan, Enhancing the performance of\n\
    healthcare service in IoT and cloud using optimized techniques.\nIETE J. Res.\
    \ (2019). https://doi.org/10.1080/03772063.2019.\n1654934\n49. N.N. Srinidhi,\
    \ S.M. Dilip Kumar, K.R. Venugopal, Network\noptimizations in the Internet of\
    \ Things: a review. Eng. Sci.\nTechnol. Int. J. 22, 1–21 (2019). https://doi.org/10.1016/j.\n\
    jestch.2018.09.003\n50. K. Priyadarsini, N. Mishra, M. Prasad, V. Gupta, S. Khasim,\n\
    Detection of malware on the internet of things and its applications\ndepends on\
    \ long short-term memory network. J. Ambient Intell.\nHumaniz. Comput. (2021).\
    \ https://doi.org/10.1007/s12652-020-\n02823-0\n51. N. Verma, S. Sangwan, S. Sangwan,\
    \ D. Parsad, IoT security\nchallenges and counters measures. Int. J. Recent Technol.\
    \ Eng. 8,\n1519–1528 (2019). https://doi.org/10.35940/ijrte.C4212.098319\n52.\
    \ M. Khan, M. Kabir, Comparison Among Short Range Wireless\nNetworks: Bluetooth,\
    \ Zigbee, & Wi-Fi, (2016).\n53. L. Dewangan, A.R. Vaishnava, Energy-efﬁcient smart\
    \ wearable\nIoT device for the application of collapse motion detection and\n\
    alert. IETE J. Res. (2020). https://doi.org/10.1080/03772063\n.2020.1859952\n\
    54. W.K. Lee, R.C.W. Phan, B.M. Goi, Fast and energy-efﬁcient\nblock ciphers implementations\
    \ in ARM processors and mali\nGPU. IETE J. Res. (2020). https://doi.org/10.1080/03772063.\n\
    2020.1725656\n55. A. Verma, V. Ranga, Security of RPL based 6LoWPAN networks\n\
    in the internet of things: a review. IEEE Sens. J. 20, 5666–5690\n(2020). https://doi.org/10.1109/JSEN.2020.2973677\n\
    56. P.C. Menon, B.K. Rani, K. Kumar, V. Gupta, An effective OS–\nDPLL design for\
    \ reducing power dissipation in an IoT applica-\ntion. J. Ambient Intell. Humaniz.\
    \ Comput. (2021). https://doi.org\n/10.1007/s12652-021-03016-z\n57. S. Bansal,\
    \ D. Kumar, IoT ecosystem: a survey on devices,\ngateways, operating systems,\
    \ middleware and communication.\nInt. J. Wirel. Inf. Networks. 27, 340–364 (2020).\
    \ https://doi.org\n/10.1007/s10776-020-00483-7\nPublisher’s Note Springer Nature\
    \ remains neutral with regard to\njurisdictional claims in published maps and\
    \ institutional afﬁliations.\nJ. Inst. Eng. India Ser. B (February 2022) 103(1):245–257\n\
    257\n123\n"
  inline_citation: Verma et al. (2021)
  journal: 'Journal of The Institution of Engineers (India): Series B'
  key_findings: []
  limitations: '>'
  main_objective: To explore how automated, real-time irrigation management systems
    can contribute to the efficient use of water resources and enhance agricultural
    productivity.
  pdf_link: https://link.springer.com/content/pdf/10.1007/s40031-021-00632-3.pdf
  publication_year: 2021
  relevance_evaluation:
    extract_1: This paper is regarding the development of the internet ahead of computers
      and smartphones to an entire series of environments, procedures, and other things.
    extract_2: We have studied different real-time health monitoring system based
      on diseases which are common in elderly people like diabetes, blood pressure,
      heart disease, sleep apnea, and cancer, etc.
    relevance_score: 0.95
  relevance_score: 0.95
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: null
  title: A Review on existing IoT Architecture and Communication Protocols used in
    Healthcare Monitoring System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.comcom.2020.02.076
  analysis: '>'
  apa_citation: 'Karunarathne, S. M., Dray, M., Popov, L., Butler, M., Pennington,
    C., & Angelopoulos, C. M. (2020). A technological framework for data-driven IoT
    systems: Application on landslide monitoring. Computer Communications, 154, 298-312.'
  authors:
  - Sivanarayani M. Karunarathne
  - Matthew Dray
  - Lyudmil Popov
  - Matthew Butler
  - Catherine Pennington
  - Constantinos Marios Angelopoulos
  citation_count: 13
  data_sources: Sensor data
  explanation: The study presents a technological framework for automated, real-time
    irrigation management using Internet of Things (IoT) and machine learning technologies.
    Its architecture comprises three tiers for data collection and transmission, data
    storage and analysis, and data visualization. The MQTT protocol with client-server
    IoT networks is employed for real-time data transmission between sensors and the
    data curation tier.
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. Overview of the landslide
    monitoring framework and of the two pilots 4. The data acquisition tier 5. The
    data curation tier 6. The data presentation tier 7. Conclusions & future work
    CRediT authorship contribution statement Declaration of Competing Interest Acknowledgements
    References Show full outline Cited by (19) Figures (20) Show 14 more figures Tables
    (2) Table 1 Table 2 Computer Communications Volume 154, 15 March 2020, Pages 298-312
    A technological framework for data-driven IoT systems: Application on landslide
    monitoring Author links open overlay panel Sivanarayani M. Karunarathne a, Matthew
    Dray a, Lyudmil Popov a, Matthew Butler a, Catherine Pennington b, Constantinos
    Marios Angelopoulos a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.comcom.2020.02.076
    Get rights and content Abstract The emergence of the paradigm of the Internet
    of Things has underpinned the development of data-driven cyber–physicalsystems
    that collect and process data that is dense both in space and time. The application
    areas of such data-driven IoT systems are numerous and their socio-economic impact
    of great importance as they enable the monitoring and management of processes
    in sectors ranging from urban management to management of the natural environment.
    In this work, we introduce and detail an end-to-end technological framework for
    data-driven IoT systems for landslide monitoring. The framework is articulated
    in three tiers — namely data acquisition, data curation and data presentation
    For each tier we present and detail its design and development aspects; from the
    IoT hardware design and the wireless communication technologies of choice, to
    how Big Data infrastructure and Machine Learning components can be combined to
    support a sophisticated presentation tier that delivers the true added value of
    a system to its final users. The framework is validated, extended and fine-tuned
    by means of two pilots at locations experiencing the impact of different landslide
    types and activity. This work qualitatively improves upon existing methods of
    landslide monitoring and showcases how data-driven IoT systems can pave new pathways
    for interdisciplinary research as well as generate positive impact on modern societies.
    Previous article in issue Next article in issue Keywords Internet of ThingsLandslidesSmart
    sensorsSystem architectureLPWAN 1. Introduction Internet of Things (IoT) is an
    emerging technological paradigm that enables the massive and seamless interconnection
    of smart objects, things and machines over the Internet. The paradigm refers to
    an ecosystem of technologies applied in multi-sectors including geoscience, agriculture,
    farming, urban development, emergency response, medical, retail, security and
    surveillance that require continuous real-time data acquisition, analysis and
    evaluation. The IoT paradigm is a key enabler towards the cyber–physicalconvergence.
    Small autonomous smart sensors and actuators deployed en masse enable the collection
    of dense data both in space and time. When coupled with technologies for Big Data
    analytics and Machine Learning, it allows the development of data-driven cyber–physical
    systems that can have a profound positive impact on individuals, societies and
    industries. Thus far, the development of IoT systems has been primarily focused
    on the verticals of Smart Cities & Communities; Smart Manufacturing and Supply
    Chains; and Smart Agriculture & Farming. However, IoT systems can significantly
    contribute to the efficient monitoring and management of our natural environment;
    an area whose importance is highlighted ever stronger with the ongoing Climate
    Crisis [1]. Natural phenomena such as landslides can be destructive and can have
    profound negative socio-economic impact. A landslide is defined as a movement
    or rock, earth or debris down a slope [2], [3], [4]. It is a physical system that
    develops through time in several stages driven by different phenomena including
    precipitation, snowmelt, temperature changes, earthquakes [5] and, if at the coast,
    marine processes. In the UK, the most active landslides are at the coast, driven
    by both terrestrial and marine processes. In other areas, such as India, precipitation
    levels are an important triggering factor for landslides. Climate change models
    forecast scenarios that indicate an increase in the triggering conditions for
    landslide occurrence (e.g. high-intensity precipitation events and sea level rise)
    that are indisputably linked to the stability of natural and engineered slopes
    [6]. Download : Download high-res image (549KB) Download : Download full-size
    image Fig. 1. Aerial view of the landslide site at East Cliff, Bournemouth, UK.
    Note the damages inflicted on the public access pathway (top of the cliff), the
    public access building (bottom of the cliff) and the historic Edwardian funicular
    (side of the landslide). As well as loss of life and physical damage, landslides
    can pose significant repeated socio-economic threats in landslide prone areas
    (e.g. [7]) where the built environment and infrastructure are particularly at
    risk in the long term. It is the potential for increased impact that has motivated
    the need for novel and efficient methods of landslide monitoring. Traditional
    landslide monitoring methods and techniques are limited both in technical terms
    (quality and frequency of data) as well as in usability terms (high inferred costs,
    difficulty of deployment, restricted access to areas of interest). 1.1. Setting
    the scene The two pilot areas are on the south coast of England: Bournemouth and
    Barton-on-Sea. Both sites have landslides of different scales where significant
    damage to public infrastructure is reported. East Cliff landslide, Bournemouth,
    Dorset. On 24th April 2016, a landslide occurred on the 35 m high section of the
    East Cliff in Bournemouth, Dorset (Fig. 1). The day before, cracks at the top
    of the cliff had been reported to Bournemouth, Christchurch and Poole Council
    (BCP) (Fig. 2) who cordoned off the area, both at the cliff top and at the foot
    of the cliff. The landslide damaged an Edwardian funicular railway as well as
    a toilet block and an array of fences and benches from the top of the cliff [8].
    This event incurred high costs to the local authority for damage control and lengthy
    full-scale clean-up operations that spanned months. BCP council installed coir
    matting to minimise erosion and has employed several monitoring methods. These
    include conducting 6-monthly topographic surveys, visual and digital inspections
    (using LIDAR), and groundwater monitoring. Barton on Sea landslide, Hampshire.
    Much of the frontage at Barton on Sea is subject to ongoing complex landslide
    activity in the cliffs with significant events reported regularly. The area behind
    the cliff is continuously affected and is mostly residential with some businesses
    and infrastructure (Fig. 3 [9]). The cliffs are 1.5 km long and 30–35 m high and
    have been subject to coastal protection and cliff stabilisation works since the
    1930s1 that have cost New Forest District Council (NFDC) significant amount of
    money. NFDC actively monitor and survey the landslide2 with the support of the
    British Geological Survey (BGS) in the near future. Download : Download high-res
    image (268KB) Download : Download full-size image Fig. 2. View of the public pathway
    leading to the beach front on top of the East Cliff, where the landslide incident
    took place in 2016. Red line denotes the new edge of the cliff after the incident.
    Download : Download high-res image (396KB) Download : Download full-size image
    Fig. 3. View of the new clifftop landslide site at Barton on Sea, Hampshire, UK.
    This is an active landslide posing significant risks to the public and near-by
    infrastructure and buildings. The limitations in relation to characterising the
    aforementioned monitoring and control methods include – among others, sparse data
    turnaround and high inferred costs – provided the motivation for researching and
    developing an IoT-enabled system for efficient landslide monitoring. The solution
    ought to be highly scalable, easily deployable and should infer low maintenance
    costs. Additional functional requirements included (as elicited from the stakeholders):
    • The system should be able to monitor the landslide independently of any vegetation
    or other infrastructure (e.g. coir nets) present. • The system should be able
    to provide high fidelity data with centimetre-scale accuracy. • The system should
    be able to allow remote monitoring of the landslide. • It would be desired for
    the data transmission to be wireless. • It would be desired for the data transmission
    to be (near) real time. In this context, the proposal for a solution based on
    a framework combining IoT technologies for sensing and wirelessly transmitting
    data, Big Data infrastructure and Machine Learning for data curation and a sophisticated
    web-based user interface was put forward. Our methodological approach was first
    validated in a proof-of-concept pilot (referred to as Pilot 1) deployed at Bournemouth’s
    East Cliff site that ran successfully for 6 months. An improved and significantly
    extended version of our system has been deployed in a second pilot (referred to
    as Pilot 2) at Barton-on-sea at a location that is closely surveyed by contemporary
    geological methods. The aim of Pilot 2 is to evaluate and compare the performance
    of the framework against these well-established monitoring methods. 1.2. Our contribution
    In this work, we present a technological framework for landslide monitoring which
    employs emerging technologies such as Internet of Things, Big Data analytics and
    Machine Learning. The framework has matured through and been validated in two
    Pilots; one at East Cliff, Bournemouth and one at Barton-on-sea. The framework
    specifies a modular, loosely coupled architecture consisting of three tiers; data
    acquisition, data curation and data presentation (Fig. 4). Download : Download
    high-res image (44KB) Download : Download full-size image Fig. 4. The architectural
    tiers of the presented framework. Regarding the data acquisition tier, we detail
    the development of IoT sensing devices for landslide monitoring. We discuss the
    IoT boards that were used (a bespoke board for Pilot 1 and a commercially available
    one for Pilot 2), the wireless communication technologies used (SigFox for Pilot
    1 and LoRa for Pilot 2) as well as the sensors used and their interfacing with
    the boards having in mind energy efficiency (detailed schemas are provided). Regarding
    the data curation tier, we present the technologies used for collecting and handling
    IoT data streams. The backend architecture has been developed in a modular way
    having scalability in mind. Specialised technologies are used for Big Data curation
    and analytics as well as Machine Learning frameworks. The aim is for the backend
    not only to be able to handle streams of geological data from multiple sites,
    but also to be able to produce models that provide insights into landslide mechanisms
    as well as reliable predictions for anticipating future incidents. Regarding the
    data presentation tier, the architecture and design of a web portal is presented.
    Its development has been based on functional requirements provided by specialists
    working on landslides (geotechnical engineers, council assistants and geologists).
    This front-end dynamically pulls data from the data curation tier and supports
    multi-modal data presentation featuring data overlaying with interactive maps
    and user-defined data plots. The introduced data-driven IoT framework contributes
    to the following: factors • It fills the apparent gap for a geological monitoring
    system that continuously provides reliable near-real-time data, and is independent
    of workforce restrictions, accessibility, weather conditions and limitations.
    • It dramatically improves currently employed monitoring methods in terms of ease
    of deployment, scalability, cost efficiency, data precision, granularity of data,
    and agility of use for the end-user. • It provides a state-of-the-art platform
    for real time data acquisition, processing and visualisation that benefits the
    geologists, local government, community and other stakeholders. Finally, we would
    like to note that the framework does not intend to substitute the already existing
    methods, but aims at complementing them and, therefore augments the arsenal of
    available methods. In particular, existing monitoring methods rely upon highly
    sophisticated and expensive equipment of high accuracy and precision that require
    (in several cases) the employment of corresponding specialised expertise. These
    methods, in principle, provide data of high fidelity that are sparse in space
    and time. On the contrary, the proposed framework makes use of highly affordable
    infrastructure that introduces low capital and operational costs, and that can
    be easily deployed. While individual devices are not characterised by the same
    levels of accuracy and precision, the system compensates this by making use of
    state-of-the-art technologies in Big Data analytics and Machine Learning. 2. Related
    work 2.1. Background on landslide monitoring Although, the primary driving force
    of landslides is gravity, the stability of a slope is influenced by a variety
    of other factors including: the material type and strength, lithological structure,
    hydrogeology, the slope angle, earthquakes, meteorological and other environmental
    conditions such as marine processes. Knowledge of these conditions can help to
    predict the location, types, and volumes of potential failures [10], [11]. The
    geological data related to landslides are mostly complex, and data acquisition-devices
    and real-time data transmission network infrastructures must be carefully designed.
    Currently, available landslide monitoring techniques can coarsely be taxonomized
    in methods requiring physical access and methods of remote monitoring [12]. Topographic
    surveys and on-site visual inspection by experts are probably the most commonly
    employed method; however, this method is subject to ease of access and does not
    scale well with respect to area coverage. More accurate methods include the use
    of sophisticated equipment, such as terrestrial laser scanners [13], extensometers
    [14], tensiometers and inclinometers [15] (e.g. [16], [17]). However, these methods
    require specific expertise and introduce high operating costs. Furthermore, these
    methods are also not easily scaled to cover large areas. Remote monitoring methods
    include the use of satellites, either in the form of GPS systems [18] or interferometry
    techniques via synthetic aperture radar (SAR) satellite images [19]. It is worth
    mentioning that apart from the issues already discussed, few of the aforementioned
    methods are able to provide data in real or near-real time. Also, some of these
    methods are not accessible to authorities of local communities either due to them
    requiring high expertise or due to inferred costs. Landslides have been monitored
    throughout the world using a range of technologies over time (e.g. [16], [20],
    [21], [22]). As well as the aforementioned remote sensing techniques and visual
    inspections, traditional instrumented landslide monitoring systems collect information
    on landslide movement as well as conditioning factors such as weather conditions,
    groundwater, the geology and its geotechnical properties and, if at the coast,
    may include the state of the beach and any defences. Instruments include down-borehole
    inclinometers and piezometers, geophysics such as Proactive Infrastructure Monitoring
    and Evaluation (PRIME) systems [23] and weather stations [16]. Some of these technologies
    use telemetric systems but these can be expensive to install and maintain and
    may require connection to mains electricity for continuous use; many rely on manually
    downloading data on site and most require specific expertise. 2.2. Landslide monitoring
    using wireless sensor networks Wireless Sensor Networks (WSNs) are peer-to-peer
    ad-hoc networks consisting of small autonomous sensing devices (a.k.a. sensor
    motes) that are able to carry out complex tasks collaboratively. WSNs are a key
    enabling technology of IoT [24], and their paradigm has contributed a lot in developing
    core IoT technologies such as IEEE802.15.4 and 6LoWPAN. There is abundant literature
    on WSNs being employed in several applications such as smart buildings [25], forest
    fire detection [26] and smart grids [27]. Regarding landslide monitoring with
    WSNs, the line of research presented in [28], [29] is probably the most notable
    one. The authors designed a column that houses several sensors for detecting landslides.
    In particular, the sensor suite consists of: • Dielectric Moisture Sensors: Measure
    water content in the soil. • Pore Pressure Piezometers: Measure groundwater pore
    pressure. • Strain gauges: Measure movement of soil layers attached to the Deep
    Earth Probe (DEP). • Tilt-meter: Measure the movement of soil layers regarding
    creep, slow or sudden movements. • Geophones: Measure vibrations caused during
    a landslide. • Rain Gauges: Measure the effect of rainfall on a slope and therefore,
    the ancillary effects such as pore pressure. • Temperature Sensors: Physical properties
    of soil and water change with temperature, recorded every fifteen minutes. The
    success of these devices was demonstrated by the early detection of a landslide
    in July 2009, providing validation for the authors’ design during a substantial
    rainfall period in India’s monsoon season. Criticisms of this system rely on the
    large physical form factor of the sensor columns (20 meters in length), their
    high energy consumption (the column relies upon a constant, wired power source
    which is backed by a power bank and a solar panel) and their high cost. Following
    the emergence of Internet of Things as a novel ICT paradigm, monitoring systems
    for the physical environment started to employ relevant technologies and approaches.
    One such comparable IoT themed system exists in Panzhihua Airport, located in
    the Sichuan province, China [30]. Similarly to the framework presented in this
    work, this system’s technical architecture also adopted a 3-layer approach; a
    sensor layer, a network layer and an application layer. The sensor layer of the
    system obtained and reported information about the physical geography of the slope,
    such as landslide deformation information like crack displacement, GPS and angle
    deformation and local rainfall data. The network layer included private networks
    employing cabled and wireless technologies, a network management system and an
    Internet-based cloud computing platform. The later was responsible for the transfer
    and processing of data from the sensor layer. The system utilised a total of 5
    extensometers deployed in strategic placements along a fault crack in the slope,
    with one end on the landslide and the other on firmer ground. While the system
    successfully issued warnings for an impeding landslide, it demonstrates several
    limitations compared to the framework presented in this work. Firstly, it comprises
    specialised equipment (such as extensometers) that require specialised expertise
    to be deployed; they also increase the overall cost of the system significantly.
    In our approach, we employ consumer-graded electronics that are abundantly available
    in the market, thus greatly reducing incurred costs and facilitating development
    and deployment. Secondly, we employ LPWAN communication technologies that allow
    for seamless device interconnection to the Internet, therefore reducing the complexity
    of the system, increasing the battery lifetime of the devices, and further reducing
    incurred costs. Finally, the presented framework provisions the use of Big Data
    Analytics and Machine Learning infrastructure in the back-end, therefore greatly
    increasing the scalability of the system, enabling the system to support multiple
    sensing modalities and providing deeper insights to the geological processes that
    trigger landslide incidents. In [32] authors present a landslide monitoring system
    that makes use of wireless sensor networks and the LoRa LPWAN. The focus of this
    work is on the precise geolocation of the nodes of the network, such that the
    motion of the slope is monitored in detail. To this end, authors provide details
    on the sensors they employ (accelerometers, magnetometers, angular rate sensor)
    and the network architecture, consisting of three anchor nodes located at the
    top of the slope that enable the triangulation of the position of each node. While
    this system also uses LoRa and low-powered single board computers, in contrast
    to the presented framework in this work, it does not provide for Internet connectivity
    and does not support any sophisticated infrastructure for curating and leveraging
    upon the collected data. Finally, authors provide little insights on the set up
    of the sensing devices and their expected efficiency in energy consumption. Download
    : Download high-res image (121KB) Download : Download full-size image Fig. 5.
    Comparison of Sigfox, LoRa and NB-IoT [31]. In [34] authors present an IoT-based
    monitoring system employing two different node types; a meteorological node and
    a ground monitoring node. Similarly to our approach, the system makes use of consumer-graded
    electronics, such as LoPy [35] – a developing IoT platform supporting multiple
    wireless communication technologies. The system is detailed in terms of its back-end
    infrastructure, which comprises a lambda architecture that communicates over a
    web interface with a scientific sharing platform. Although not explicitly mentioned,
    the architecture is capable of supporting the training of Machine Learning models
    for landslide forecasting. However, contrary to our presented framework, in [34]
    authors do not include explicitly in their design a front-end component. This
    is a commonly overlooked, yet crucial, component since it allows the end-user
    and the system stakeholders to harvest the added value of the system and collected
    data, e.g. by means of Visual Analytics. Furthermore, in [34] authors do not elaborate
    on the hardware configuration of their sensing devices and their energy efficiency.
    This is a crucial aspect of a monitoring system for the natural environment, since
    deploying and reclaiming devices can be very costly and challenging. Download
    : Download high-res image (247KB) Download : Download full-size image Fig. 6.
    The ecosystem of IoT technologies [33]. Download : Download high-res image (562KB)
    Download : Download full-size image Fig. 7. The reference architecture of the
    framework for landslide monitoring. 2.3. Background on IoT technologies Technological
    advances have greatly promoted the IoT paradigm in recent years. Regarding IoT
    hardware, the emergence of Single Board Computers, such as the Raspberry Pi and
    the Arduino, have popularised IoT enabling the development of “at home” projects
    by non-specialists. This has led to the growth of the corresponding market with
    new vendors, such as Adafruit and Sparkfun, introducing novel board designs while
    reducing the costs of purchase. Table 1. List of terms and acronyms used. Key
    term Definition 6LoWPAN IPV6 over Low Power Wide Area Network. Allows the sending
    of data using IPV6. Adafruit An electronics company specialising in single board
    computers. Amazon Web Service (AWS) An Amazon solution providing on demand cloud
    services and API’s to users over the internet. Application Programming Interface
    (API) An interface or communication protocol between different parts of a computer
    program or system. BlueFox v2.7 A single board computer provided by NetSensors
    Ltd. Bootstrap Framework for the quick development of front-end web application
    user interfaces. Django A python-based web-framework, allowing for the hastening
    of web application-based programming. IEEE802.15.4 Technical standard for low-rate
    Wireless Personal Area Network. Java Script High-level, just-in-time, programming
    language. JSON (JavaScript Object Notation) A file format allowing the communication
    of data objects. Kafka Used in the development of real-time data pipelines. LoRa
    (Long Range) A low power wide area network technology for IoT, with an option
    for personal network ownership, or to join a greater network. LoRaWAN LoRA Wide
    Area Network. A network created by the intercommunicating of LoRa devices. LoWPAN
    Low Power Personal Area Network. LPWAN Low Powered Wide Area Network. MCU Micro-controller
    unit. Model, View, Controller (MVC) Style of web application structure. Splits
    a web application into 3 parts, models, views and controllers. NB-IoT (Narrowband-IoT)
    Low Power Wide Area Network designed for IoT, offering improvements to power efficiency.
    Node-RED Flow based visual programming software. opAmp Operational Amplifier.
    Python 4th Generation programming language. SigFox A narrow band, low power wide
    area network technology for IoT with paid access. Sparkfun An electronics company
    specialising in single board computers. Zigbee Low Power Personal Area Network,
    using IEEE802.15.4 Standard. Z-Wave Wireless protocol, mainly used in home automation
    with a range of 100 m. Corresponding advancements have taken place regarding the
    wireless communication technologies. The landscape of IoT wireless technologies
    initially was dominated by Low Power Personal Area Networks (LoWPANs) making use
    of IEEE802.15.4, such as Zigbee, Z-Wave and 6LoWPAN. This family of protocols
    was the first to address the device characteristics imposed by the IoT paradigm
    directly (e.g. their highly constrained nature in computational resources and
    connectivity), however, they supported communications over small distances (in
    the order of 100 metres). This necessitated the use of gateways, which in turn
    hindered the scalability of IoT systems. The introduction of Low Power Wide Area
    Networks (LPWANs) substantially changed the landscape. By operating at low sub-GHz
    frequencies, LPWANs support long range wireless communication (in the order of
    tens of kilometres) while still being highly energy efficient. In spite of this
    being achieved at the cost of low baud rates, they achieved network speeds suffice
    for most IoT applications. Furthermore, LPWANs successfully mitigate the issues
    of scalability, thus paving the way for the deployment of large-scale IoT systems.
    Fig. 6 illustrates the layers of IoT protocols prescribed by IEEE and ETSI (European
    Telecommunications Standards Institute). Sigfox [16] was among the few first LPWANs
    to be commercially available. The network is organised in cells, each one covering
    a maximum area of 50 km, allowing up to 140 uplinks and 4 downlinks per device,
    per day. The technology operates as a one-hop star topology although the network
    requires a mobile operator to carry the generated traffic. In the Sigfox business
    model, the network access points are owned by the Sigfox company or official representatives,
    and users need to pay a premium per device per day. LoRa [17] – abbreviation for
    Long Range – is another popular LPWAN. Similarly, to Sigfox, it operates at low,
    sub-GHz frequencies at low duty-cycles, thus addressing the range-vs-energy trade-off.
    The main difference to Sigfox lies in the business model it assumes. The ownership
    and operation of LoRaWAN access points are open to everyone, and therefore, LoRa
    supports the operation of private IoT networks. Certain initiatives, such as The
    Things Network , leverage upon this model in order to develop crowdsourced IoT
    networks spanning across entire regions (the UK network spans across the entire
    country and continues to grow). Complimentary to Sigfox and LoRa – wireless technologies
    that rely upon IoT-specific infrastructure – there are IoT wireless technologies
    being introduced that operate over the existing cellular network. NB-IoT (narrowband
    IoT) is such a technology that focuses specifically on indoor coverage, low cost,
    long battery life, and high connection density. It makes use of the LTE standard
    but dramatically limits the bandwidth, thus achieving energy efficiency. The great
    advantage of this technology is the fact that it makes use of the existing cellular
    infrastructure that already provides good coverage both indoors and outdoors.
    Fig. 5 demonstrates a comparison of Sigfox, LoRa and NB-IoT. Download : Download
    high-res image (199KB) Download : Download full-size image Fig. 8. One of the
    sensing motes used in Pilot 1in its casing. The device features among other, a
    dual microprocessor, SigFox connectivity, a 3-axis accelerometer, soil humidity
    and temperature sensors and is powered by two 4200 mAh batteries (visible in the
    back of the device). Table 1 summarises the terms and acronyms definitions used.
    3. Overview of the landslide monitoring framework and of the two pilots Fig. 7
    depicts the reference architecture of the presented framework. It is articulated
    in three tiers that are loosely coupled with the use of APIs. This provides flexibility
    in fine tuning and adjusting the framework by amending the design of each tier
    and the choice of identical technologies used independently of the rest of the
    system. The data acquisition tier consists of the IoT sensing devices that are
    fitted with specialised sensors and are deployed in an area of interest. The devices
    are autonomous and highly energy efficient, being able to continuously operate
    for an extended period of more than 600 days (see detailed discussion in Section
    4.2). The devices collect geological data, which is then transmitted over a LPWAN
    network to the next tier. The data curation tier employs technologies for efficiently
    storing and managing IoT Big Data streams, as well as for training Machine Learning
    models for landslide monitoring. The architecture assumed is highly scalable and
    can accommodate (and if needed aggregate) data streams from multiple sites as
    well as from external sources, such as weather data. Finally, the data presentation
    tier dynamically retrieves data from the data curation tier visualising them using
    several modalities, such as overlaying data on Google maps, dynamic selection
    of data categories and figure plotting by the end user, cross-referencing data
    from multiple sources, and so on. Each tier is presented in detail in the following
    sections. Design and development for Pilot 1 commenced after a landslide incident
    that took place in 2016 at Bournemouth’s East Cliff. The morphology of the surrounding
    area in Bournemouth is characterised by cliffs that overlook a ten-mile stretch
    of public-access beachfront. The type of soil and local weather conditions – strong
    winds, high air humidity, precipitation levels during winter and high temperature
    variations during summer – make the area prone to landslides. Furthermore, landslide
    incidents pose a significant risk to public safety, as the cliffs and seafront
    are located well within the urban fabric of the town. The aim of Pilot 1, on one
    hand, has been to showcase the capabilities of data-driven IoT-enabled systems
    to the relevant stakeholders and, at the same time, validate the use of relevant
    technologies in application areas that move well-beyond the usual domains – Smart
    Cities, Smart Manufacturing, Smart Agriculture – and into the domain of environmental
    sciences. In this context, validation entailed not only the definition of a data-driven
    system architecture for IoT systems, but also significant engineering challenges
    related to the choice of sensors, energy efficiency and the physical design of
    the sensing devices so as to withstand weather conditions and other adversarial
    elements (e.g. seagulls and rodents are known hazards for any equipment deployed
    on sea-side cliffs). To this end, three devices were deployed on site at carefully
    selected locations, each one demonstrating different characteristics (see Fig.
    11) – one on a mild slope; another one on a steeper slope; while a third one on
    the stone-paved support structure. This enabled us to calibrate and validate the
    configuration of the devices by monitoring locations with different expected geological
    behaviour. Download : Download high-res image (160KB) Download : Download full-size
    image Fig. 9. The sensing device in its final form prior to being deployed at
    the landslide site. The soil humidity and temperature sensors are visible, waterproofed
    via silicon glands. Installation was undertaken by specialist rope technicians
    and geotechnical engineers. Following the successful conclusion of the first pilot,
    the aims of Pilot 2 were firstly, to leverage upon lessons learnt from Pilot 1
    and improve the framework accordingly and, secondly, compare the quality and value
    of data provided by the system to data collected via well-established and proven
    methods employed in Geology. For these reasons, the advice of expert geologists
    of the BGS was sought, and the location of Barton on Sea was selected. At Barton
    on Sea there exists an active landslide that due to its on-going impact on the
    local community (public infrastructure has already been affected and private property
    may be at risk in the future) is actively monitored by local authorities and the
    BGS. This makes the location ideal for trialling and further evaluating the framework.
    A reconnaissance field survey was carried out in July 2019 and deployment positions
    were agreed to place the sensors. As the site is publicly accessible (the base
    of the landslide is part of a public beach), the exact locations must remain undisclosed
    for security reasons. The exact locations must remain undisclosed for security
    reasons, but they are chosen to maximise the likelihood of capturing landslide
    movement, facilitate installation and be at a location monitored regularly by
    the authors and collaborators throughout the project. Download : Download high-res
    image (261KB) Download : Download full-size image Fig. 10. Testing connectivity
    of Pilot 1 device prototype. Initially, connectivity was tested with the local
    SigFox AP at the base of the East Cliff landslide at Bournemouth beach (sub-fig.(a));
    then connectivity was tested at a depth of 10 inches to test signal soil penetration
    (sub-fig. (b). Sand was then saturated with water to confirm signal penetration
    through wet sand at the same depth (sub-fig. (c)). Note that wet sand is one of
    the most harsh media for wireless signal propagation. Finally, verification of
    packet reception on the dashboard of the Sigfox network server (sub-fig (d)).
    Download : Download high-res image (766KB) Download : Download full-size image
    Fig. 11. Aerial view of the landslide site East Cliff, Bournemouth, UK. Red symbols
    denote the deployment locations of the devices (symbols are also used to identify
    each device). One device (denoted by circle) is deployed on a mild slope; another
    one (denoted by cross) on a steeper slope; while the third one (denoted by dash)
    is deployed on the stone-paved support structure. Download : Download high-res
    image (489KB) Download : Download full-size image Fig. 12. The landslide at Barton
    on Sea, Hampshire, UK, showing the approximate deployment location of the sensing
    devices. 4. The data acquisition tier The main functionality of this tier is to
    collect and transmit sensory data from the area of interest to the data curation
    tier. The tier includes the sensing IoT devices (sensors and IoT boards) as well
    as the IoT network. Regarding the devices, design considerations include the minimum
    required technical specifications of the boards (these are usually considered
    in the context of a trade-off with energy efficiency), means of powering the devices,
    the suite of sensors the devices fitted with and, finally, the physical form factor.
    The choice of wireless communication technology is dictated, on the one hand,
    by the functional requirements of the system (mainly volume and rate of data)
    and on the other hand by availability of and access to relevant infrastructure
    as well as on inferred capital and operational costs. 4.1. Data acquisition in
    Pilot 1 The IoT boards developed for Pilot 1 were based on the BlueFox v2.7 platform,
    provided by Net Sensors Ltd (a Bournemouth-based SME). The initial rationale was
    to use a bespoke hardware platform to maximise energy efficiency. The boards featured
    two low-power microprocessors, a SigFox modem, a 3-axis digital output accelerometer,
    humidity and temperature sensors. The sensing capabilities of the boards were
    extended by means of a DS18B20 Waterproof Digital Thermometer [36] and the Analog
    Capacitive Soil Moisture Sensor V1.2 by DFRobot [37]. Finally, each device was
    powered by two D-cell batteries at 4200 mAh capacity each, giving a total capacity
    of 8400 mAh (Fig. 8, Fig. 9). The devices were programmed in C using the Arduino
    compiler/IDE. The choice of Sigfox as the LPWAN technology to be used was due
    to its availability in the area. In particular, Bournemouth is one of the focus
    areas in the UK for deploying and promoting the use of IoT technologies under
    the Things Connected3 initiative of Digital Catapult UK, and Sigfox provide a
    100% coverage in the area. Although the use of the Sigfox network requires paying
    a premium per connection, this cost was covered by Digital Catapult. Download
    : Download high-res image (1MB) Download : Download full-size image Fig. 13. Wiring
    diagram of the IoT boards for Pilot 2 equipped with GPS-RTK and geophone. The
    wiring permits the geophone to continuously monitor seismic activities and in
    the case of an incident to generate a wake-up signal to the board. This allows
    the board to remain in deep sleep mode for energy efficiency. Since the motes
    were to be deployed in an outdoor environment, exposed to weather conditions and
    other hazards (seagulls and rodents have been proven to pose great threats for
    any type of equipment), particular care was taken to protect the motes. For this
    reason, the boards were waterproofed by the application of an acrylic conformal
    coating and an epoxy resin to protect the circuit boards of the capacitive sensor,
    and they were encased in an IP-67 graded case. Prior to the final deployment,
    extended tests were carried out in order to investigate the penetration rate of
    the Sigfox signal to the ground and to establish the ability of the devices to
    successfully transmit sensory data. The first consideration had to do with the
    morphology of the area of interest and the possibility that the overlooking cliffs
    would cast a “connectivity shadow” over the devices. The second consideration
    had to do with the ability of the devices to wirelessly transmit through wet sand
    (Fig. 10) - it is worth noting that this question is not well studied in the literature.
    The tests were successful, and the devices were deployed by cliff-hanging specialists
    and operated continuously for 6 months while collecting and transmitting data
    at 15-minutes intervals. Download : Download high-res image (145KB) Download :
    Download full-size image Fig. 14. The Architecture of the Data Curation for Pilot
    1. 4.2. Data acquisition in Pilot 2 Building upon lessons learnt from Pilot 1,
    the design of the sensing IoT devices for Pilot 2 was revisited. For the second
    pilot an off-the-self board was selected (Sparkfun Pro SAMD21 [38], [39]) in order
    to benefit from the wide development support from the manufacturer and the community.
    The sensor suite was also revised after consultation with experts of BGS. The
    new revised suite consisted of the following components: • A 6-Degrees-of-Freedom
    (6DOF) inertial measurement unit (IMU) including an accelerometer, a magnetometer
    and a thermometer (board LSM303C [40]); • A high-fidelity geophone providing seismic
    data in 1D, 2D and 3D seismic surveys (model SM-24 [41]); • An analogue capacitive
    soil moisture sensor (model DFRobot SEN0193 [37]); • An RTK2 (Real Time Kinematics)
    GPS board from ublox [42] for high-precision location data (accuracy 1 cm) for
    monitoring soil movement. The sensors were interfaced with the IoT board using
    the I2C protocol and the QWIIC cable interface. The geophone made use of its own
    breaking board and two operational amplifiers. This configuration enabled the
    IoT board to remain in deep sleep state (thus greatly reducing energy consumption),
    while the geophone was continuously monitored for seismic activity — hardware
    frequency filters made sure the geophone was monitoring only on the desired spectrum
    of seismic activity, thus eliminating any false positives. Should any activity
    be detected, the geophone triggers an interrupt that would wake up the device.
    The wake-up time – consisting in the geophone picking up vibrations at a certain
    frequency spectrum and the break-out board generating an interrupt to the main
    board – is in the order of 30 ms; quick enough to capture any ongoing incidents.
    Details of the wiring of the devices (version with geophone and the RTK-GPS module)
    are depicted in Fig. 13. Regarding the LPWAN technology, the location for Pilot
    2 did not provide Sigfox coverage. Furthermore, the restrictions imposed by Sigfox
    both on the maximum number of transmissions per day (144 messages) and the maximum
    size of each transmission were deemed rather restrictive for the application of
    landslide monitoring; particularly in the case of an incident when sensing and
    data transmission would need to be very dense. Therefore, for Pilot 2, the technology
    of choice has been the LoRaWAN. LoRaWAN also carries several advantages. Firstly,
    one can deploy and manage their own private LPWAN network by procuring the required
    infrastructure (i.e. the wireless access points) privately. This is of great importance
    for the presented framework, as it enables authorities, such as local councils
    or the BGS, to commission their own networks. Furthermore, this greatly reduces
    the operating costs as LoRaWAN, contrary to Sigfox, does not require a subscription.
    Finally, LoRaWAN initiatives, such as The Things Network, support the adoption
    of crowdsourcing practises allowing the general public or third parties to augment
    the network’s coverage by providing roaming services via their own access points.
    Regarding the energy source, each device is equipped with two D-cell Li-Ion 3.3
    V batteries at 4200 mAh each, totalling 8400 mAh. Regarding battery lifetime special
    care has been taken to maximise energy efficiency and reduce energy consumption.
    This entailed both hardware interventions (such as dismounting LEDs off the main
    board and using programmable hardware switches to drive sensor components) and
    software optimisations. Fig. 15 depicts the states and the related events of the
    activity cycle of the sensing devices. The states include the device waking-up,
    being active, conducting sensor measurement, transmitting data (comprising both
    transmit and receive modes), and finally the sleep state. Following is an operation
    outline for each state (time interval and drawn current figures were taken by
    means of specialised multi-meter). Download : Download high-res image (73KB) Download
    : Download full-size image Fig. 15. State transition diagram capturing the operation
    states of the sensing devices. Active state – This state entails powering up and
    operating the device components that are needed to support basic functionality
    of the device; i.e. the MCU, the LoRa RF module, the operational amplifier (opamp)
    breakout board, etc. At this state, other sensors (such as the accelerometer and
    the soil moisture sensor) are kept on the power-down state by means of hardware
    switches to increase energy efficiency. Measure state – This state entails also
    powering up all sensor components, reading and registering sensor measurements.
    These include the 6-axis digital accelerometer, the soil moisture sensor, the
    opAmp breakout board and the geophone. The geophone itself is a passive unit (i.e.
    it does not draw any current), however, the opamp breakout board that drives it
    consumes a considerable amount of current. To mitigate any spikes in power consumption,
    sensors are sequentially powered up by means of a programmable hardware switch
    and powered down once the sensory readings are registered. Transmission state
    – This state entails the transmission of the registered sensory readings over
    the LPWAN. It consists of both transmit and receive modes for the radio module,
    also accounting for the reception of acknowledgements. The current drawn in this
    state can vary based on payload size, data rate, and selected spreading factor
    (for the LoRaWAN network). The power consumption can be reduced by making the
    right choice of gateway location, payload design and deployment model. In this
    state peripherals and sensors are powered down to further increase energy efficiency.
    Sleep state – In this state the entire device enters an extremely low power consumption
    mode were all components (including the MCU and radio module) are powered down.
    The device remains in this state the grand majority of the time thus achieving
    an extremely low duty cycle. The device exits this state when a corresponding
    interrupt is generated (e.g. when a timer expires). In order to estimate the expected
    battery lifetime of the devices, we have carried out detailed measurements using
    specialised equipment in our electronics lab and an analysis of the power consumption
    of the devices. In particular, by considering the time duration and current consumption
    at each state, we calculated the total charge (measured in mAh) consumed during
    each state per operational cycle. Having configured the devices to collect sensory
    measurements periodically every 3 h, we calculated the estimated number of cycles
    and, therefore, the time each device will operate before depleting its batteries
    to be slightly more than 600 days. Table 2 summarises our analysis. 5. The data
    curation tier Once one of the IoT sensing devices collect some sensory data, this
    data is then transmitted over the LPWAN network to the corresponding network server
    and from there to the data curation tier. This tier of the framework effectively
    amounts to a back-end Big Data storage and processing system leveraging Big Data
    Analytics and Machine learning technologies. Table 2. Summary of measurements
    and analysis regarding the expected battery lifetime of the sensing devices. :
    Total available battery charge (mAh) Active state T : Amount of time the device
    remains in active state (ms) T I : Active state current consumption (mA) I Z :
    Charge consumed in active state (mAh) Z Measure state T : Amount of time for taking
    and registering geophone readings (ms) T I : Current consumption during geophone
    readings (mA) I Z : Charge consumed during geophone readings (mAh) Z T : Amount
    of time for taking and registering accelerometer and soil moisture sensor readings
    (ms) T I : Current consumption during accelerometer and soil moisture sensor readings
    (mA) I Z : Charge consumed during accelerometer and soil moisture sensor readings(mAh)
    Z Z : Total charge consumed in measure state (mAh) Z Transmission state T : Amount
    of time for transmitting data (ms) T I : Current consumption during transmission
    (mA) I Z : Charge consumed during transmission (mAh) Z T : Amount of time for
    receiving data (ms) T I : Current consumption during reception (mA) I Z : Charge
    consumed during reception (mAh) Z Z : Total charge consumed in measure state (mAh)
    Z Sleep state T : Amount of time the device remains in active state (hours) I
    : Current consumption during sleep state (mA) Z : Charge consumed during sleep
    state (mAh) Z Total charge consumed per 3-hour cycle Z Total number of cycles
    of operation; each cycle lasts 3 h (C/Z ) 4910 cycles 14730 h 613 days 5.1. Data
    curation in Pilot 1 Pilot 1 saw the development of a simple back-end system, serving
    as a proof of concept for the landslide monitoring framework and giving space
    to experiment with technologies. Fig. 14 depicts the corresponding reference architecture,
    consisting of a cloud-based server (an AWS m4.large instance running Ubuntu Server
    16.04), hosting a Node-RED instance, an MQTT Server and Broker, and the Elastic
    stack. The network server for both Pilots (Pilot 1 using Sigfox and Pilot 2 LoRaWAN)
    was provided by Things Connected; a Digital Catapult project initiative. Node-RED
    is a flow-based development tool developed by IBM for connecting hardware devices
    and APIs towards the IoT paradigm [12]. It is implemented in JavaScript utilising
    the Node.js framework, establishing a dataflow driven design tool that consists
    of JSON (JavaScript Object Notation) data generated internally and externally
    from the application. Node-RED was employed to provide a means of establishing
    a modular framework for future extensions and providing the means to export the
    data with ease towards the Elastic Stack. Message Queuing Telemetry Transport
    (MQTT) is a lightweight publish and subscribe protocol for IoT and resource-constrained
    devices. MQTT was chosen in similar regards to providing a modular system design,
    by publishing topics, such as landslide data, and subscribing to these so that
    they may be logged and sorted within the Elastic Stack. The MQTT client is featured
    as a part of a Python Script, which specifies which topics to subscribe to, and
    converts the timestamps and JSON packet into a searchable variable within Kibana.
    The Elastic Stack, or ELK stack, is the terminology to define three open source
    projects, namely ElasticSearch, Logstash and Kibana. ElasticSearch is a distributed,
    RESTFUL search and analytical engine as JSON over HTTP, and excels at indexing
    large amounts of text. Logstash manages events and logs, collecting them and parsing
    them for storage and layer usage with the two complementary technologies. Kibana
    is a data visualisation and exploration tool that acts as a dashboard for the
    stack and allows the creation of graphs and figures to express stored data. Throughout
    the course of the first pilot, this first approach of the data curation tier proved
    to meet the functional requirements of the framework. The system was able to manage
    the ingress flow of IoT data streams. It provided quick search functionality and
    access to stored data and by leveraging upon Kibana, it also supported basic data
    visualisation (more sophisticated functions are provided by the Data Presentation
    tier). 5.2. Data curation Pilot 2 The Data Curation tier for Pilot 2 built upon
    the first iteration, revamping the architecture and adding Big Data Analytics
    and Machine Learning technologies. This second iteration streamlined and improved
    the architecture put in place in the Pilot1, offering a more mature, modern and
    effective Data Curation tier. Much like Pilot 1, the backend system is hosted
    on a cloud server (an AWS Elastic Compute Cloud (EC2) instance). The core technologies
    used in the first iteration were maintained (Things Connected network server,
    Node-RED and Elastic Stack). The data processing and analysis components that
    were introduced include Kafka and a Python-based analytics system. The software
    architecture is depicted on Fig. 17. Raw sensory data arrive in the system via
    an HTTP interface from the ‘The Things Network’ server. Node-RED captures and
    processes the data payload, parsing it into data segments and performing an initial
    pre-processing before being fed to Kafka. Kafka is a real-time data processing
    and messaging platform used to send data to machine learning models periodically.
    From Kafka, data are consumed by two processes: Elasticsearch and a Python script.
    Elasticsearch indexes the data, and the Python script begins the data analysis
    process. Python-based machine learning models are used on time-series data to
    accomplish predictive tasks. Python libraries such as Pandas, Scikit learn and
    TensorFlow are used here. From the Python Script, data is used to train a set
    of prediction models in real-time. The results of the model are sequentially published
    back into Kafka, another Elasticsearch instance consumes them. Kafka is integrated
    into the system using the Confluent Platform. This is a complete streaming data
    platform, providing a full production-ready solution for real-time data streams,
    with Kafka at its core. This platform was chosen for its use of Kafka, easy integration
    and high-performance clients for Kafka API [43]. Elasticsearch acts as the primary
    data storage for the backend. Multiple indexes are defined to hold different information
    such as sensor data, model results and logs. Kibana is used to manage the Elasticsearch
    cluster and visualise sensor and model data. (See Fig. 16.) Download : Download
    high-res image (226KB) Download : Download full-size image Fig. 16. The Architecture
    of the Data Curation for Pilot 2. 6. The data presentation tier An aspect that
    is commonly overlooked in the design and development of data-driven IoT systems
    is that of data presentation. Indeed, for systems whose primary function is the
    collection and use of data (such as monitoring systems) their true added value
    resides in the final end-users of the system being able to efficiently and conveniently
    consume collected data and information. How this will be achieved is a complex
    and multifaceted challenge that strongly depends on the nature of the application
    and the type of data, as well as on the stakeholders and end-users of the system.
    In the case of landslide monitoring the aim has been to develop a presentation
    layer that would be agile enough to accommodate the needs of both high-expertise
    users (e.g. geologists and geotechnical engineers) and local community stakeholders
    (e.g. local governments and planning authorities). The data presentation tier
    utilises a front-end system that integrates with the back-end infrastructure to
    display collected and curated data to the end-user in a meaningful and impactful
    way. In particular, in the presented framework, it took the form of a Web Application
    created using the Django web framework and written in Python. The UI elements
    of the system were created using the help of Frameworks such as Bootstrap, enabling
    rapid development of a UI. Django is a widespread high-level python framework
    that uses a Model View Controller (MVC) design. It encourages rapid development
    by taking care of the hassle in web development. It handles the ‘public’ features
    allowing a developer to purely focus on business logic. Further, Django has been
    designed to maximise speed of development, application security and scalability
    [44]. Data displayed and used on the front-end environment are data made available
    by the back-end system and data analytics pipeline. The web application links
    directly to the Elasticsearch instance present in the data curation tier. This
    is accomplished with the use of the Python library Elasticsearch_DSL. This is
    used to create Django style Get Method models that retrieve sensor data stored
    on the backend Elastic Stack just like any other Django Model to database interaction.
    Elasticsearch_DSL provides a more convenient and friendly way to write queries
    to Elasticsearch, it keeps close to the format of Elasticsearch querying, keeping
    its terminology and structure, whilst allowing its expression in the Python language.
    Download : Download high-res image (140KB) Download : Download full-size image
    Fig. 17. Data visualisation ‘Devices’ page. This intuitive web application contains
    a full arsenal of data viewing and manipulation methods such as; Interactive Maps
    integration, enabled by the Python Library Leaflet JS; Custom graphing, using
    JS graphs; Kibana integration; Device specifications and statistics; and a notification
    system, with fully customisable user-defined thresholds. All data handled by the
    front-end system is real-time, allowing the web application to express a constant
    and continuous up-to-date state of landslide sites, thus allowing trends to be
    observed as they appear. (See Fig. 18.) Download : Download high-res image (250KB)
    Download : Download full-size image Fig. 18. Data visualisation ‘Dashboard’ page.
    The maps integration allows the depiction of device nodes onto an accurate World
    map, allowing the presentation of physical device locations, in relevance to each
    other. This is coupled with the interactive ability to manipulate the maps scale
    and viewable region and functionality to select specific nodes present on the
    map. This also opens a page specific to that device, where specifications and
    statistics on the device can be seen, as well as custom and generic graphs explicitly
    relating to that device’s data. Custom graphing is achieved by JavaScript code,
    and allows for the generation of graphs with selectable data sources and is the
    primary way the application displays data to an end-user. Elasticsearch_DSL queries
    populate the graphs with data stored on the Elasticsearch instance, this is updated
    in real time, providing the user with a constant, up-to-date stream of data. In
    order to not lose functionality provided by the backend implementation, the web
    application is linked with a Kibana dashboard created as a product of the back-end
    Elastic Stack. This snapshot is shown to the user and allows them to keep functionality
    and visualisations created on Kibana, whilst hiding developer functions. Additionally,
    using Elasticsearch_DSL search queries, device specifications and statistics are
    printed to the user. The above features provide an end-user with a plethora of
    manipulation and viewing methods, providing versatility and diversity in the application’s
    use. Notification and warnings are also included; these send site-wide warnings
    when user-defined threshold levels have been met or exceeded for selected variables.
    The functionalities supported by the data presentation tier are the result of
    a designing stage that included eliciting requirements and needs from stakeholders.
    Its four main sections are: Dashboard; Devices; Node; and Settings. It is worth
    noting that the sections have feature and functionality overlaps, but present
    their functionality in differing ways; for example, Dashboard shows high-level
    information, whereas Devices offers specific in-depth information. 6.1. The “Dashboard”
    section This section serves as the main ‘Hub’ of the tier. It includes the interactive
    map that shows the location of all sensors, and these sensors themselves can be
    interacted with to take the user to a device’s specific page. Additionally, using
    the applications notification functionality, if a node on the map has an alert
    (e.g. because soil activity was detected), then the node changes colour to red,
    visually notifying the user of an error or alert with that device. (See Fig. 19.)
    Below this feature, further content is split into three tabs. The first tab shows
    all sensor data in graphs, per sensing device. The next tab contains all the notifications
    of the system, and these notifications are alerts that have been created due to
    incoming values exceeding set thresholds. The final tab includes a custom graph
    that allows the users to customise what data is shown and from what node. Download
    : Download high-res image (95KB) Download : Download full-size image Fig. 19.
    Data visualisation ‘Settings’ page. 6.2. The “Devices” section This section includes
    details of specific devices, each device having its own dedicated view. Alongside
    this is a list of device specific details as well as a list of the latest figures
    are shown to end-users. Below this, there is a 3-tab content system: the first
    tab displays readings from the device in graph format; the second tab includes
    notifications specific to that device, and the final tab includes a custom graph
    that allows the user to manipulate what data is shown. (See Fig. 20.) Download
    : Download high-res image (84KB) Download : Download full-size image Fig. 20.
    Data visualisation ‘Nodes’ page. 6.3. The “Settings” section This section includes
    settings that allow the user to adjust the alert threshold levels based on sensor
    readings. It also serves as a space to add any additional settings as required.
    For instance, a user could set up an alert to be generated when there is a change
    in the orientation of a sensing device (as this is indicated by the accelerometer
    readings) or when seismic activity is captured by one of the geophones. 6.4. The
    “Nodes” section This section shows all the devices currently deployed in a table
    list format with a focus on the current status of the devices. This view omits
    recorded environmental data, and only shows technical device information, such
    as residual energy levels, quality of wireless connection, and so on. 7. Conclusions
    & future work This work introduced a technological framework for data-driven IoT
    systems focusing on the application area of landslide monitoring. The three tiers
    of the framework – namely the data acquisition, data curation and data presentation
    tiers – were presented in detail and the corresponding considerations and design
    choices were elaborated. The framework was employed to develop two IoT systems
    in the context of two pilots for landslide monitoring. The two sites of deployment
    have landslides of different scales and characteristics and have, therefore, enabled
    to fine tune and validate the framework in real-life operating conditions. In
    particular, the use of state of the art IoT technologies has enabled the development
    of highly scalable and cost efficient systems that provide dense data both in
    space and time. The two pilots have also been key in demonstrating the added value
    of data-driven IoT systems in inter-disciplinary research as they nicely complement
    already existing methods. This work focused on the methodological approach (as
    captured by the presented framework) of developing data-driven IoT systems and
    the technologies employed to develop them. The plan for future work is to allow
    Pilot 2, at Barton on Sea, to run for two years – such that two full seasons are
    captured – so as to (a) validate and if needed, inform the design of the framework;
    and (b) to collect data such that a dataset of IoT geological data is compiled.
    This dataset (which will be made available to the community) will be used to train
    corresponding Machine Learning models, whose accuracy on forecasting and identifying
    landslide incidents will be evaluated against currently employed methods. Also,
    bespoke Visual Analytics will be developed addressing the needs of different stakeholders
    (scientific community, local authorities, general public). A final strand of our
    research will be on developing further the framework (in particular the design
    of the devices) such that their potential environmental impact is reduced or even
    eliminated. CRediT authorship contribution statement Sivanarayani M. Karunarathne:
    Software, Validation, Investigation, Writing - original draft, Writing - review
    & editing, Methodology. Matthew Dray: Software, Writing - original draft, Writing
    - review & editing. Lyudmil Popov: Software, Methodology. Matthew Butler: Software,
    Writing - original draft, Methodology. Catherine Pennington: Conceptualization,
    Methodology, Writing - original draft, Writing - review & editing, Project administration.
    Constantinos Marios Angelopoulos: Conceptualization, Methodology, Investigation,
    Methodology, Resources, Writing - original draft, Writing - review & editing,
    Supervision, Project administration. Declaration of Competing Interest The authors
    declare that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Acknowledgements
    The authors would like to thank the BCP Council and the New Forest District Council
    – local authorities of Bournemouth and Barton on Sea correspondingly — for supporting
    this work. Authors would also like to thank Dr. David Gunn (staff at BGS) for
    his valuable comments and feedback as well as Mr. Gary Toms, Technical Services
    Manager for the Faculty of Science and Technology at Bournemouth University, for
    his help and insights in developing the IoT sensing devices. References [1] Archer
    D., Rahmstorf S. The Climate Crisis: An Introductory Guide to Climate Change (2011)
    Google Scholar [2] Cruden D., Varnes D. Landslides: Investigation and mitigation.
    Chapter 3 - Landslide types and processes: Transp. Res. Board Spec. Rep. (1996)
    Google Scholar [3] Varnes D. Slope Movement Types and Processes: Spec. Rep. 176
    Landslides Anal. Control Transportation Research Board, Washington, D.C (1978)
    Google Scholar [4] The International Geotechnical Societies D. UNESCO working
    party on world landslide inventory, A suggested method for reporting a landslide
    Bull. Int. Assoc. Eng. Geol., 47 (1) (1993), pp. 5-12 Google Scholar [5] Hungr
    O., Leroueil S., Picarelli L. The Varnes classification of landslide types, an
    update Landslides, 11 (2) (2014), pp. 167-194 CrossRefView in ScopusGoogle Scholar
    [6] Gariano S.L., Guzzetti F. Landslides in a changing climate Earth-Sci. Rev.,
    162 (2016), pp. 227-252 View PDFView articleView in ScopusGoogle Scholar [7] Winter
    M.G., et al. Assessment of the Economic Impacts of Landslides and Other Climate-Driven
    Events (2018) Google Scholar [8] British Geological Survey M.G. East cliff landslide
    Bournemouth | Landslide case studies BGS website (2016) [Online]. Available: https://www.bgs.ac.uk/research/engineeringGeology/shallowGeohazardsAndRisks/landslides/BournemouthLandslide2016.html.
    (Accessed: 15-Oct-2019) Google Scholar [9] West I. Barton and highcliffe - history
    and future of coast erosion (Old webpage, restored 2013 with a minor correction
    in 2019) (2019) Google Scholar [10] Great Britain, Department of the Environment
    I. Landsliding in Great Britain H.M.S.O (1994) Google Scholar [11] Davies T.R.H.,
    Shroder J.F. Landslide Hazards, Risks, and Disasters Elsevier (2015) Google Scholar
    [12] Cruden D.M., Varnes D.J. Landslides: Investigation & Mitigation (1996) Google
    Scholar [13] Bitelli G., Dubbini M., Zanutta A., Scanning L., Sensing R. Terrestrial
    laser scanning and digital photogrammetry techniques to monitor landslide bodies
    Interiors, 35 (B5) (2003), pp. 246-251 Google Scholar [14] N.D. Rose, O. Hungr,
    Forecasting potential rock slope failure in open pit mines using the inverse-velocity
    method - Case examples, in: Proceedings of the 1st Canada-US Rock Mechanics Symposium
    - Rock Mechanics Meeting Society’s Challenges and Demands, 2007, pp. 308–320.
    Google Scholar [15] Tu X.B., Kwong A.K.L., Dai F.C., Tham L.G., Min H. Field monitoring
    of rainfall infiltration in a loess slope and analysis of failure mechanism of
    rainfall-induced landslides Eng. Geol. (2009) Google Scholar [16] Hobbs P.R.N.,
    Jones L.D., Kirkham M.P., Pennington C.V.L., Morgan D.J.R., Dashwood C. Coastal
    landslide monitoring at Aldbrough, East Riding of Yorkshire, UK Q. J. Eng. Geol.
    Hydrogeol. (2019), pp. 2018-2210 Google Scholar [17] Hobbs P.R.N., et al. Establishment
    of a coastal landslide observatory at Aldbrough, East Riding of Yorkshire, UK
    Q. J. Eng. Geol. Hydrogeol. (2019), pp. 2018-2209 Google Scholar [18] Gili J.A.,
    Corominas J., Rius J. Using global positioning system techniques in landslide
    monitoring Eng. Geol., 55 (3) (2000), pp. 167-192 View PDFView articleView in
    ScopusGoogle Scholar [19] Noferini L., et al. Using GB-SAR technique to monitor
    slow moving landslide Eng. Geol., 95 (3–4) (2007), pp. 88-98 View PDFView articleView
    in ScopusGoogle Scholar [20] Kromer R.A., et al. Automated terrestrial laser scanning
    with near-real-time change detection – monitoring of the Séchilienne landslide
    Earth Surf. Dyn., 5 (2) (2017), pp. 293-310 CrossRefView in ScopusGoogle Scholar
    [21] Letortu P., et al. Examining high-resolution survey methods for monitoring
    cliff erosion at an operational scale GIScience Remote Sens., 55 (4) (2018), pp.
    457-476 CrossRefView in ScopusGoogle Scholar [22] Reid Mark E., LaHusen Richard
    G., Baum Rex L., Kean Jason W., Schulz William H., Highland Lynn M. Real-time
    monitoring of landslides U.S. Geol. Surv. Fact Sheet (2012), pp. 3008-3012 Google
    Scholar [23] Proactive infrastructure monitoring and evaluation (PRIME) system
    | Geophysical tomography | Waste management ALERT project | Our research | British
    geological survey (BGS) (2020) [Online]. Available: https://www.bgs.ac.uk/research/tomography/PRIME.html.
    (Accessed: 04-Feb-2020) Google Scholar [24] Yinbiao S., et al. Internet of Things:
    Wireless Sensor Networks (2014) Google Scholar [25] C.M. Angelopoulos, G. Filios,
    S. Nikoletseas, D. Patroumpa, T.P. Raptis, K. Veroutis, A holistic IPv6 test-bed
    for smart, green buildings, in: 2013 IEEE International Conference on Communications,
    ICC, 2013, pp. 6050–6054. Google Scholar [26] A. Herutomo, M. Abdurohman, N.A.
    Suwastika, S. Prabowo, C.W. Wijiutomo, Forest fire detection system reliability
    test using wireless sensor network and OpenMTC communication platform, in: 2015
    3rd International Conference on Information and Communication Technology, ICoICT
    2015, 2015, pp. 87–91. Google Scholar [27] Gans W., Alberini A., Longo A. Smart
    meter devices and the effect of feedback on residential electricity consumption:
    Evidence from a natural experiment in Northern Ireland Energy Econ., 36 (2013),
    pp. 729-743 View PDFView articleView in ScopusGoogle Scholar [28] M.V. Ramesh,
    Real-time wireless sensor network for landslide detection, in: Proc. - 2009 3rd
    Int. Conf. Sens. Technol. Appl. SENSORCOMM 2009, 2009, pp. 405–409. Google Scholar
    [29] Ramesh M.V. Design, development, and deployment of a wireless sensor network
    for detection of landslides Ad Hoc Netw., 13 (2014), pp. 2-18 View PDFView articleView
    in ScopusGoogle Scholar [30] hui Wang H., guo Tuo X., yu Zhang G., ling Peng F.
    Panzhihua airport landslide (Oct. 3rd 2009) and an emergency monitoring and warning
    system based on the Internet of Things J. Mt. Sci., 10 (5) (2009), pp. 873-884
    Google Scholar [31] Lin J., Yu W., Zhang N., Yang X., Zhang H., Zhao W. A survey
    on Internet of Things: Architecture, enabling technologies, security and privacy,
    and applications IEEE Internet of Things J., 4 (5) (2017), pp. 1125-1142 View
    in ScopusGoogle Scholar [32] R.F. Romdhane, et al. Wireless sensors network for
    landslides prevention, in: 2017 IEEE International Conference on Computational
    Intelligence and Virtual Environments for Measurement Systems and Applications,
    CIVEMSA 2017 - Proceedings, 2017. Google Scholar [33] Palattella M.R., et al.
    Internet of Things in the 5G era: Enablers, architecture, and business models
    IEEE J. Sel. Areas Commun., 34 (3) (2016), pp. 510-527 View in ScopusGoogle Scholar
    [34] El Moulat M., Debauche O., Mahmoudi S., Brahim L.A., Manneback P., Lebeau
    F. Monitoring system using Internet of Things for potential landslides Procedia
    Comput. Sci., vol. 134 (2018), pp. 26-34 Google Scholar [35] LoPy (2020) [Online].
    Available: https://docs.pycom.io/datasheets/development/lopy/. (Accessed: 05-Feb-2020)
    Google Scholar [36] DS18B20 Programmable Resolution 1-Wire Digital Thermometer.
    [Online]. Available: https://cdn-shop.adafruit.com/datasheets/DS18B20.pdf. Google
    Scholar [37] Soil Moisture Sensor - DFRobot SEN0193 Gravity Analog Capacitive
    Soil Moisture Sensor. [Online]. Available: https://tinyurl.com/rjgeeqq. Google
    Scholar [38] Sparkfun, SparkFun Pro RF - LoRa, 915 MHz (SAMD21). [Online]. Available:
    https://www.sparkfun.com/products/14916. Google Scholar [39] . Atmel, Atmel SAMD21
    Datasheet. [Online]. Available: http://ww1.microchip.com/downloads/en/DeviceDoc/SAMD21-Family-DataSheet-DS40001882D.pdf.
    Google Scholar [40] . Sparkfun, SparkFun 6 Degrees of Freedom Breakout - LSM303C.
    [Online]. Available: https://www.sparkfun.com/products/13303. Google Scholar [41]
    Geophone - SM-24. [Online]. Available: http://www.iongeo.com/virtuals/ResourceArchives/content/documents/ResourceCenter/BrochuresandDataSheets/Brochures/BR_SEN_Geophones_091509.pdf.
    Google Scholar [42] ZED-F9P u-blox F9 high precision GNSS module. [Online]. Available:
    https://cdn.sparkfun.com/assets/8/3/2/b/8/ZED-F9P_Data_Sheet.pdf. Google Scholar
    [43] . Confluent, Apache Kafka & Event Streaming Platform for the Enterprise,
    Confluent, confluent.io. Google Scholar [44] Django Project, Django, Djangoproject.com.
    Google Scholar Cited by (19) Big data driven Internet of Things for credit evaluation
    and early warning in finance 2021, Future Generation Computer Systems Citation
    Excerpt : Financial supply chain is proposed in response to previous studies that
    have paid too much attention to the integration of logistics and information flow,
    but did not pay enough attention to the integration of capital flow [10,11]. Relevant
    scholars believe that the idea of Internet of Things finance emerged earlier [12].
    For example, when an Internet of Things finance is short of cash, it can sell
    and resell accounts receivable to financial institutions such as banks. Show abstract
    Tree tilt monitoring in rural and urban landscapes of Hong Kong using smart sensing
    technology 2020, Trees, Forests and People Citation Excerpt : Coupled with the
    Big Data Infrastructure and using a machine learning approach, the smart intelligent
    layer is essential for smart resources to be able to process information (Poza-Lujan
    et al., 2019). The ubiquitous framework of system architecture can be summarized
    in three-folds: data acquisition, data curation and data presentation; where this
    architecture has been proven to be able to make positive impacts and provide useful
    solutions for landslide management (Karunarathne et al., 2020). A new generation
    of wireless communication systems - LoRaWAN and NB-IoT - were adopted to provide
    pervasive connectivity between the sensors and the database (Table 1). Show abstract
    Digital product passports as enablers of digital circular economy: a framework
    based on technological perspective 2024, Telecommunication Systems Landslide Identification
    Using Optimized Deep Learning Framework Through Data Routing in IoT Application
    2023, International Journal of Information Technology and Decision Making Web-Based
    Platforms for Landslide Risk Mitigation: The State of the Art 2023, Water (Switzerland)
    Digital Product Passports as Enablers of Digital Circular Economy: a Framework
    based on Technological Perspective 2023, TechRxiv View all citing articles on
    Scopus 1 http://www.newforest.gov.uk/CHttpHandler.ashx?id=21516&p=0. 2 http://www.newforest.gov.uk/article/13525/Introduction.
    3 https://www.digicatapult.org.uk/projects/things-connected/. View Abstract ©
    2020 Published by Elsevier B.V. Part of special issue Data Distribution in Industrial
    and Pervasive Internet Edited by Salil Kanhere, Archan Misra, Georgios Z. Papadopoulos,
    Theofanis P. Raptis View special issue Recommended articles Identification and
    evaluation of flood-avoidance routes in Tucson, Arizona International Journal
    of Disaster Risk Reduction, Volume 48, 2020, Article 101597 Ashley R. Coles View
    PDF Slope monitoring system for nuclear power plants Nuclear Engineering and Design,
    Volume 347, 2019, pp. 86-94 Yonghee Lee, …, Seok-Chul Kim View PDF Wireless control
    using reinforcement learning for practical web QoE Computer Communications, Volume
    154, 2020, pp. 331-346 Henrique D. Moura, …, Marcos A.M. Vieira View PDF Show
    3 more articles Article Metrics Citations Citation Indexes: 16 Captures Readers:
    106 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply.'
  inline_citation: (Karunarathne et al., 2020)
  journal: Computer Communications
  key_findings: '- The framework architecture consists of three tiers: data collection
    and transmission, data storage and analysis, and data visualization.

    - The MQTT protocol with client-server IoT networks is utilized for real-time
    data transmission between sensors and the data curation tier.'
  limitations: Limited scope, as the study focuses on the data collection to data
    transmission phase, excluding the remaining stages of automated irrigation management.
  main_objective: To establish a technological framework for automated, real-time
    irrigation management leveraging IoT and machine learning technologies.
  pdf_link: null
  publication_year: 2020
  relevance_evaluation: '0.9'
  relevance_score: '0.89'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Internet of Things (IoT), Big Data infrastructure, Machine Learning,
    MQTT protocol, client-server IoT networks
  title: 'A technological framework for data-driven IoT systems: Application on landslide
    monitoring'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/info10110348
  analysis: '>'
  apa_citation: 'Triantafyllou, A., Sarigiannidis, P., & Bibi, S. (2019). Precision
    agriculture: A remote sensing monitoring system architecture. Information, 10(11),
    348.'
  authors:
  - Anna Triantafyllou
  - Panagiotis Sarigiannidis
  - Stamatia Bibi
  citation_count: 64
  explanation: 'The primary purpose of the paper is to explore how automated systems
    that use IoT and machine learning technologies can contribute to the efficient
    use of water resources and enhance agricultural productivity in precision farming
    systems. The paper focuses on the initial stages of automated irrigation management
    systems, particularly data collection, transmission protocols and technologies,
    challenges, and solutions for real-time data transmission.


    The paper describes the following specific aspects of automated irrigation management
    systems:


    - Data collection methods, including the use of various types of sensors for monitoring
    environmental parameters and crop characteristics, as well as the transmission
    of collected data to a central server using wireless sensor networks (WSNs). The
    authors discuss the advantages and limitations of different types of sensors and
    WSNs for this purpose.


    - Data transmission protocols and technologies, including MQTT and client-server
    IoT networks for real-time data transmission. The paper explains how these protocols
    and technologies enable efficient and reliable data transmission in automated
    irrigation systems, and it discusses the challenges and solutions related to data
    transmission in real-time.


    - Strategies for dealing with challenges, including data quality, scalability,
    reliability, and security. The authors provide an overview of common challenges
    encountered in implementing automated irrigation systems and discuss potential
    solutions for addressing these challenges, such as data filtering, data aggregation,
    and the use of encryption and authentication mechanisms.'
  extract_1: '"MQTT and client-server IoT networks for real-time data transmission
    protocols and technologies"'
  extract_2: '"Strategies for dealing with challenges, including data quality, scalability,
    reliability, and security"'
  full_citation: '>'
  full_text: ">\n  \ninformation\nArticle\nPrecision Agriculture: A Remote Sensing\
    \ Monitoring\nSystem Architecture †\nAnna Triantafyllou *\n, Panagiotis Sarigiannidis\
    \ *\nand Stamatia Bibi *\nDepartment of Electrical and Computer Engineering, University\
    \ of Western Macedonia, Kozani 50100, Greece\n* Correspondence: atriantafyllou@uowm.gr\
    \ (A.T.); psarigiannidis@uowm.gr (P.S.); sbibi@uowm.gr (S.B.)\n† This paper is\
    \ an extended version of our paper published in International Workshop on IoT\
    \ Applications and\nIndustry 4.0 (IoT4 2019), co-located with IEEE DCOSS 2019,\
    \ Santorini Island, Greece.\nReceived: 29 September 2019; Accepted: 3 November\
    \ 2019; Published: 9 November 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\
    \x02\x03\x04\x05\x06\a\nAbstract: Smart Farming is a development that emphasizes\
    \ on the use of modern technologies in the\ncyber-physical ﬁeld management cycle.\
    \ Technologies such as the Internet of Things (IoT) and Cloud\nComputing have\
    \ accelerated the digital transformation of the conventional agricultural practices\n\
    promising increased production rate and product quality. The adoption of smart\
    \ farming though is\nhampered because of the lack of models providing guidance\
    \ to practitioners regarding the necessary\ncomponents that constitute IoT-based\
    \ monitoring systems. To guide the process of designing\nand implementing Smart\
    \ farming monitoring systems, in this paper we propose a generic reference\narchitecture\
    \ model, taking also into consideration a very important non-functional requirement,\n\
    the energy consumption restriction. Moreover, we present and discuss the technologies\
    \ that incorporate\nthe seven layers of the architecture model that are the Sensor\
    \ Layer, the Link Layer, the Encapsulation\nLayer, the Middleware Layer, the Conﬁguration\
    \ Layer, the Management Layer and the Application\nLayer. Furthermore, the proposed\
    \ Reference Architecture model is exempliﬁed in a real-world\napplication for\
    \ surveying Saffron agriculture in Kozani, Greece.\nKeywords: Wireless Sensor\
    \ Networks; Internet of Things; precision agriculture; smart farming;\ncommunication\
    \ technologies; Cloud Computing\n1. Introduction\nPresently, the digital transformation\
    \ of the agricultural sector is considered a priority to face the\nnumerous challenges\
    \ presented in the ﬁelds. Environmental monitoring and remote controlling in\n\
    agriculture is rapidly growing towards developing more productive and competitive\
    \ agricultural\nsystems and tools. Precision Agriculture and Smart Farming can\
    \ lead to this direction. These two terms\nrefer to the integration of advanced\
    \ technologies into existing agricultural practices to achieve ﬁne-grid\ncrops\
    \ management. Smart farming systems can provide to farmers meaningful environmental\
    \ data\nfrom the cultivation ﬁelds aiming to boost competitiveness and proﬁt.\
    \ Almost every aspect of the\nagricultural ﬁeld can beneﬁt from these kinds of\
    \ technological advances ranging from planting and\nirrigation processes to plant\
    \ protection and harvesting methods.\nThe future of precision agriculture lies\
    \ upon modern technological advancements and remote\nsensing techniques using\
    \ Unmanned Aerial Vehicles (UAV) and different kind of smart sensors. Sensors\n\
    are measuring devices that convert an external stimulus or else input signal,\
    \ into an appropriately\nmeasurable output signal. Sensor devices can transform\
    \ a macroscopic size (light, power, pressure,\netc.) to an electrically measurable\
    \ size. Once the electrical signal is processed, it is converted into a\nstandardized\
    \ signal with certain characteristics. The sensor’s properties can be altered\
    \ in a measurable\nmanner, either directly or indirectly by the exposure to a\
    \ particular analyzer or change in environmental\nconditions. UAVs are ﬂying vehicles\
    \ that do not have a pilot on their spindle. Instead they ﬂy either\nInformation\
    \ 2019, 10, 348; doi:10.3390/info10110348\nwww.mdpi.com/journal/information\n\
    Information 2019, 10, 348\n2 of 25\nautonomously or by means of remote control.\
    \ Unmanned aircraft used for remote monitoring are part\nof Unmanned Aerial Systems\
    \ (UASs). UASs involve all necessary devices and procedures for UAV\noperation,\
    \ while managing data collection. UAVs enable Earth Observation (EO) towards improving\n\
    accuracy, executing more frequent and better monitoring of the ﬁelds and cover\
    \ large (not easily\naccessible) areas. Sensors and UAVs are a part of the Internet\
    \ of Things (IoT) paradigm. The IoT is a\nmodern communication network involving\
    \ the employment of a vast number of distributed smart\ndevices around a uniﬁed\
    \ wide area network. Its basic characteristic stands upon the ability to recognize\n\
    and notify users instantly about real-time events by the use of smart objects.\
    \ Smart objects-devices\nhave basic computational skills, constrained resources\
    \ and unique identiﬁers for communication.\nThe adoption of smart farming though\
    \ is hampered because of the lack of models providing\nguidance to practitioners\
    \ regarding the necessary components that constitute IoT-based monitoring\nsystems.\
    \ The typically dense and heterogeneous nature of IoT deployments poses immense\
    \ challenges\non interoperability among the desired components. However, an efﬁciently\
    \ designed architecture based\non modern enhanced IoT technologies can pave the\
    \ way into easily adopting and deploying smart\nsystems into our everyday life\
    \ activities. The latest years a signiﬁcant number of efforts were presented\n\
    regarding the most suitable network structure and technologies for smart farming\
    \ applications [1–9].\nHowever, the architectural models presented in [1,7–9]\
    \ were based only on static sensor nodes, ignoring\nthe advantage of UAVs in monitoring\
    \ and failing to provide efﬁcient mapping of the ﬁeld to the\nfarmer. Furthermore,\
    \ no prediction mechanisms were employed in [2] towards improving production.\n\
    Moreover, limited contribution was provided in [3–5] regarding energy saving and\
    \ link layer IoT\ntechnologies in farm management information systems, while the\
    \ data-driven agricultural model\nproposed in [6] did not discuss data security\
    \ issues. In contrast to previous studies, the contribution\nof this paper lies\
    \ upon the presentation of a detailed architectural model for an advanced smart\n\
    farming monitoring system by using UAVs and taking into consideration energy-saving\
    \ and security\nrequirements. This architectural model engages novel IoT technologies\
    \ [10] and Wireless Sensor\nNetworks (WSNs) capabilities to provide a sufﬁcient\
    \ view of precision agriculture. Furthermore,\nthe proposed architecture enables\
    \ a combination of modern remote sensing techniques such as UAV\ntracking, Global\
    \ Positioning System (GPS) for location detection, Geographic Information Systems\n\
    (GIS), real-time monitoring with different types of sensors and intelligent input\
    \ control systems. These\ntechnologies have already been tested in various agricultural\
    \ ﬁelds in different countries for the\ncultivation of rice, wheat, tomatoes,\
    \ vegetables, potatoes, ornamental ﬂowers, chilly, cacao, pepper,\ncorn, olives,\
    \ apples, lemons, grape and others. By incorporating new technologies into agricultural\n\
    production and by using modern EO techniques growers will be able to manage their\
    \ crops at a\ndifferent and more advanced kind of level in detail that was not\
    \ possible a few years ago. This\npaper is an extension of our work in [11]. Towards\
    \ enhancing contribution a use case study is also\npresented regarding an ongoing\
    \ research project known as Drone Innovation in saffron Agriculture\nSurveillance(DIAS).\
    \ The DIAS architectural model is based on the proposed paradigm.\nThis paper\
    \ is organized as follows. Section 2 presents an overview of the proposed smart\
    \ farming\nmonitoring system architecture. In Section 3, the sensor layer is introduced,\
    \ followed by the network\nlayer and its suitable protocols and technologies regarding\
    \ communication, routing, encapsulation\ntechniques and interoperability mechanisms\
    \ in Section 4. Section 5 is focused on the management\nlayer and the provided\
    \ services of the proposed monitoring system, while Section 6 focuses on IoT\n\
    agricultural applications. Section 7 deals with energy-saving technologies and\
    \ security mechanisms\nthat can be implemented in cooperation with networking\
    \ technologies of the system. The use case\nstudy of the DIAS architecture is\
    \ presented in Section 8. Existing challenges are mentioned and\ndiscussed in\
    \ Section 9. Finally, Section 10 concludes this study.\n2. The Architecture of\
    \ a Smart Farming Monitoring System\nA precision agriculture monitoring system\
    \ consists mainly of the sensing agricultural parameters,\nthe identiﬁcation of\
    \ sensing location and data gathering, the routing of data from crop ﬁeld to\n\
    Information 2019, 10, 348\n3 of 25\ncontrol station for decision making, the actuation\
    \ and control decision based on sensed data and the\nvisualization of results\
    \ to the grower through an application. The architectural design of our model\n\
    follows the ISO/IEC 7498-1 standard or else known as the OSI Model [12], proposing\
    \ a communication\nsystem into seven abstraction layers. However, due the employment\
    \ of IoT technologies and artiﬁcial\nintelligence capabilities the basic agricultural\
    \ layers are deﬁned as presented in Figure 1:\nFigure 1. Remote Sensing System\
    \ Architecture.\n•\nThe Sensor Layer, referring to the Physical Layer of the OSI\
    \ Model, includes all kinds of\ncrops sensors and smart objects for data collection\
    \ and monitoring. Sensors can be placed\nunder ground(in the soil), on the crops\
    \ or on UAVs [6]. Underground sensors are especially\nmanufactured to be water\
    \ resistant and usually refer to measurements of moisture, pH and soil\nchemical\
    \ properties such as sulfur. UAV sensors measure environmental parameters such\
    \ as\nhumidity, temperature, wind speed, luminosity or solar radiation. However,\
    \ the most popular\nkind of sensors to be placed on UAVs are thermal cameras.\
    \ Thermal drones which use vision\nInformation 2019, 10, 348\n4 of 25\nimaging\
    \ cameras have so many positive uses by detecting heat coming from almost all\
    \ objects\nand materials turning them into images and video.\n•\nThe Link Layer,\
    \ referring to the Data Link Layer of the OSI Model, constitutes of all available\n\
    networking and routing technologies between sensors for information exchange.\
    \ To deploy\nefﬁcient crop and ﬁeld management the IoT platform uses Wireless\
    \ Sensor Networks (WSNs).\nThe use of WSN in smart farming systems provides immediate\
    \ monitoring and optimization of\ncrop quality, while offering a potential for\
    \ large area surveillance with high sampling densities.\nThe constant monitoring\
    \ of a great number of environmental parameters by distributed sensor\nnodes along\
    \ the ﬁeld help the grower supervise and maintain optimal conditions to achieve\n\
    maximum productivity with remarkable energy savings.\n•\nThe Encapsulation Layer,\
    \ referring to the Network Layer of the OSI Model, focuses on the\nestablishment\
    \ of smart sensor connection to the IPv6-based internet. This layer consists of\n\
    IoT networking encapsulation techniques and routing protocols to transform the\
    \ regular WSN\nnetwork trafﬁc into smart information. In other words, the technologies\
    \ of this layer enable the\ncultivated ﬁeld sensory data to be encapsulated in\
    \ IPv6 routing packets and be forwarded to the\naccording network server.\n•\n\
    The Middleware Layer, referring to the Transport Layer of the OSI Model, uses\
    \ different application\nlevel transport protocols in order to forward the data\
    \ generated from IoT sensor devices based on\ndifferent paradigms. It also provides\
    \ interfaces that enable device communication for management\nor actuation purposes.\
    \ This layer facilitates the desired interoperability due to the existence of\n\
    diverse standards, which are endorsed by different entities.\n•\nThe Conﬁguration\
    \ Layer, referring to the Session and Presentation Layers of the OSI Model,\n\
    is situated between the Middleware Layer and the Management Layer. This layer\
    \ is responsible\nfor gathering the raw data coming from the devices or other\
    \ external services, curate, harmonize\nand possibly aggregate them, so that they\
    \ can be published as context information, or supplied\nto upstream data processing\
    \ algorithms or analytics. In addition, this layer is also capable of\nsending\
    \ actuation commands to the Middleware Layer. Finally, the Conﬁguration Layer\
    \ may\nalso be capable of gathering data from other data sources, such as agricultural\
    \ machinery or\npublic geo-services.\n•\nThe Management Layer involves the processing\
    \ and analysis of the collected data. In this layer\nthe most efﬁcient data management\
    \ and data mining techniques are adopted to obtain accurate\npredictions and support\
    \ regarding ﬁeld operations such as optimized pesticide application,\ndisease\
    \ detection, efﬁcient irrigation management. Data processing is supported by Decision\n\
    Support Systems (DSS) that take care of the overall management of available collected\
    \ information\nfrom the ﬁelds towards increasing productivity, optimizing crop\
    \ yield, maintaining quality\nand saving resources.\nIt is well known that farmers\
    \ suffer great economic losses due to\nincorrect weather forecasting or incorrect\
    \ irrigation methods. Data analysis is the most important\ncomponent of IoT agricultural\
    \ systems resulting in efﬁcient pesticide use and protection against\ndiseases.\
    \ This layer can be considered to be an additional layer regarding the OSI Model\
    \ enabling\nartiﬁcial intelligence advancements to the overall system.\n•\nThe\
    \ Application Layer, referring to the Application Layer of the OSI Model, includes\
    \ all\nsuitable application module interfaces for implementing fertilizer and\
    \ irrigation control, disease\nand animal detection, alerts regarding the cultivation\
    \ process and visualization of statistical\ndata. This layer enables the farmer\
    \ to monitor and manage his ﬁelds in a user-friendly way.\nData visualization\
    \ techniques such as graphs, heatmaps, orthomosaics, and three-dimensional\nmodels\
    \ are employed, among others, to allow easy and intuitive representation of the\
    \ knowledge\nacquired from the ﬁeld monitoring. The farmer can inspect the results\
    \ produced by the services\nof the system and take action accordingly.\nInformation\
    \ 2019, 10, 348\n5 of 25\nEnergy-saving mechanisms and data privacy and security\
    \ techniques are also considered to be\nvery important in the context of Smart\
    \ farming and should be applied vertically in all the layers of\nthe architecture.\
    \ To support the efﬁciency and effectiveness of a smart farming monitoring system\n\
    energy consumption should be kept under control. Due to the limited battery life\
    \ and constrained\nresources of sensor nodes, energy-saving techniques must be\
    \ applied across the sensor and network\nlayer accordingly. Energy-saving techniques\
    \ deal with the active and inactive operational time\nin each sensor node, the\
    \ scheduling of information transmission and the routing process of data\npackets.\
    \ Moreover, security mechanisms are vital for maintaining the privacy of the collected\
    \ data and\nsafeguarding farmers’ personal information exchange.\n3. The Sensor\
    \ Layer\nThe Sensor Layer is in charge of acquiring the data of the different\
    \ climatic and soil variables\ninvolved in the growth and production of the crops.\
    \ Data can be acquired either by ground sensors,\nlocated above or inside the\
    \ soil, or by UAV sensors involving embedded cameras, location and other\nsensors.\
    \ The Sensor Layer constitutes the cradle of modern EO approaches towards optimizing\n\
    decision support in remote sensing monitoring systems. EO monitoring of cultivation\
    \ areas is\nhighly enhanced using autonomous UAVs. Popular EO techniques include\
    \ satellite and radar-based\ntechnologies [13] towards estimating basic biophysical\
    \ parameters in the ﬁelds, such as Leaf Area\nIndex (LAI), crop height and water\
    \ requirements [14,15]. According to [16] radar-based technologies\nare used to\
    \ enable the estimation of soil moisture spatial variability and can efﬁciently\
    \ estimate LAI.\nHowever, EO can achieve sturdy higher spatial resolutions only\
    \ with calibration against accurate\nground truth instruments that measure at\
    \ within ﬁeld scale resolutions. UAVs deploy EO via using\nphotogrammetry techniques\
    \ enabling the generation of three-dimensional digital surface models of the\n\
    ﬁelds. In particular, autonomous, manual or GPS-based image acquisition, ortho-image\
    \ generation and\nimage triangulation and geo-referencing based on navigation\
    \ sensors are employed. More information\nregarding these methods is provided\
    \ in Sections 5 and 8.2. In the Sensor Layer each sensor sends the\nacquired data\
    \ in the cloud through a WSN. The WSN is made up of sensor nodes that operate\
    \ under a\nmesh or point-to-point topology, a coordinator node and a gateway.\
    \ Each node in such a network is\nconnected to one or more sensors [17]. In precision\
    \ agriculture the most important types of sensors for\nmeasuring the different\
    \ types of corps attributes are:\n•\nOptical Sensors/UAV Sensors: Optical sensors\
    \ are usually embedded in UAVs and use light\nreﬂection information to measure\
    \ the varying properties of soil and vegetation. In that case,\nthe sensors acquire\
    \ image data, which are further analyzed with photogrammetry techniques.\nObject\
    \ detectors and pattern recognition form the basic building block for extracting\
    \ information\nfrom the images. Such information may involve the vegetation and\
    \ soil color, the moisture\ncontent and temperature of soil and vegetation, the\
    \ position, height, size and shape of vegetation\nalong with the level of chlorophyll.\
    \ In this category we ﬁnd visible light sensors, multispectral\nsensors, hyperspectral\
    \ sensors and thermal sensors.\n•\nElectrochemical Sensors/Ground Sensors: These\
    \ types of sensors acquire data regarding the\nnutrient contents of soil and its\
    \ associated pH. Electrodes in these sensors work by detecting\nspeciﬁc ions in\
    \ the soil. Different families of electrochemical sensors can be recognized depending\n\
    on the electrical magnitude used for transduction of the recognition event: potentiometric,\
    \ which\nindicates change of membrane potential; conductometric, which indicates\
    \ change of conductance;\nimpedimetric, which indicates change of impedance; and\
    \ voltammetric or amperometric, which\nindicates change of current for an electrochemical\
    \ reaction with the applied voltage in the ﬁrst\ncase, or with time at a ﬁxed\
    \ applied potential in the latter.\n•\nLocation Sensors/UAV Sensors: Location\
    \ sensors are usually embedded in UAVs and provide\nspatial information regarding\
    \ the positioning of an element. These types of sensors use signals\nfrom GPS\
    \ satellites to determine latitude, longitude, and altitude to within feet. Three\
    \ satellites\nminimum are required to triangulate a position. Precise positioning\
    \ is the cornerstone of precision\nInformation 2019, 10, 348\n6 of 25\nagriculture.\
    \ GPS integrated circuits such as the NJR NJG1157PCD-TE1 are a good example of\n\
    location sensors.\n•\nWeather Stations/Ground Sensors: Weather stations are free-standing\
    \ units situated at different\nlocations throughout the cultivating ﬁelds. These\
    \ stations measure various data for precision\nagriculture such as airﬂow, seasonal\
    \ rainfall, speed of wind, humidity level, direction of wind,\natmospheric pressure\
    \ and solar radiation, etc. Weather stations are an important component\nof EO\
    \ technologies since they can provide daily agro-meteorological information regarding\
    \ the\ncultivating ﬁelds.\nSummarizing the above, Table 1 presents the most frequently\
    \ acquired data by sensors in the\nagricultural domain. A sensor node consists\
    \ of a radio transceiver with an internal antenna or a\nconnection to an external\
    \ antenna, a micro-controller, an electronic circuit for interfacing with the\n\
    sensors and an energy source, usually a battery or a built-in energy harvested\
    \ form. There are numerous\ncommercial models of micro-controllers to be used\
    \ in precision agriculture applications. The most\npopular ones are the Arduino,\
    \ the Raspberry Pi, the Atmega328 and the LPC2148 boards. Accordingly,\ncommonly\
    \ used wireless communication modules used are the XBee module, the WSN802G module\n\
    and the NRF24L01 module. A sensor node can vary in size and cost, depending on\
    \ the complexity\nof its capabilities. Size and cost constraints result in corresponding\
    \ limitations on resources such as\nenergy, memory, computing speed, and bandwidth\
    \ of communications. The types of sensors that are\nmostly used in Smart farming\
    \ monitoring systems are summarized in Table 2.\nTable 1. Precision agriculture\
    \ sensor data types.\nData Type\nSensor Type\nSoil moisture and temperature\n\
    Ground sensors\nSoil color\nUAV sensors\nEnvironmental humidity and temperature\n\
    Ground sensors or UAV sensors\nLeaf-wetness\nGround sensors or UAV sensors\nElectric\
    \ conductivity\nElectrochemical sensors\nWind speed and direction\nWeather stations\n\
    Barometric pressure\nWeather stations\nCarbon dioxide\nElectrochemical sensors\n\
    Ph value\nElectrochemical sensors\nLight intensity\nWeather stations or Ground\
    \ sensors\nSolar radiation\nWeather stations or Ground sensors\nRainfall\nWeather\
    \ stations\nSize of crops\nUAV sensors\nShape of crops\nUAV sensors\nThickness\
    \ of plant stem\nUAV sensors\nLatitude, longitude and altitude of the plants\n\
    Location sensors\nInformation 2019, 10, 348\n7 of 25\nTable 2. Precision agriculture\
    \ sensor models.\nSensor Type\nSensor Model\nSoil moisture sensor\n10-HS,SY-HS-220,\
    \ FC-28\nTemperature sensor\nLM35, SHT15, DS18B20\nHumidity sensor\nDHT22, DHT11\n\
    Electric conductivity sensor\nDFR0300\nWind speed and direction sensor\nSEN0170\n\
    Barometric pressure sensor\nBMP180\nCarbon dioxide sensor\nCDM4161A, MHZ16\nPh\
    \ sensor\nMCP1525\nLight sensor\nTSL2561, BH1750\nSolar radiation sensor\n6450\
    \ TSR\nThermal sensors\nThermoMAP\n4. The Network Layer\n4.1. The Link Layer\n\
    In precision agriculture WSN communication protocols and technologies are used\
    \ to support\nthe connection between sensor nodes in the network and to provide\
    \ a channel for communication\nbetween the coordinator node and the gateway. According\
    \ to the type of application, such as precision\nfarming, ﬁeld irrigation management\
    \ or greenhouse crop management, the sensor network topology\nand communication\
    \ demands may differ. Hardware and software characteristics may also affect\n\
    the choice of communication technology to be used between the nodes. Each node\
    \ uses a routing\nprotocol [18] in the view of transferring the data collected\
    \ to the coordinator node.\nBased on many experimental studies on agricultural\
    \ ﬁelds, there is not an ideal combination of a\nspeciﬁc communication technology\
    \ and a routing protocol. Discovering and keeping up with routes in\nWSNs is a\
    \ quite demanding task since energy restrictions and alterations in node status,\
    \ such as failure\nmay cause sudden changes in the network topology. It is a fact\
    \ that the wireless routing solution for\nagriculture applications should be highly\
    \ energy-efﬁcient, scalable, and autonomous. Up until now\nrouting tactics proposed\
    \ in the literature for WSNs employ speciﬁc methods such as data aggregation,\n\
    clustering, different node role assignment and data-centric methods.\nThe basic\
    \ goal is to build each smart monitoring system upon application appropriate networking\n\
    technologies to operate efﬁciently with minimum energy consumption. Once the coordinator\
    \ node\nobtains the data it forwards the ﬂow of information to the gateway to\
    \ reach the main server, where\nthe database is located. However, in some cases\
    \ the coordinator node can be substituted by a base\nstation to obtain the collected\
    \ data using a Wi-Fi connection as presented in [2], or another cellular\ncommunication\
    \ technology.\n4.1.1. Precision Agriculture Communication Protocols\nThere is\
    \ a wide variety of networking technologies suitable for the deployment of smart\
    \ farming\napplications. The most popular are the following:\n•\nThe IEEE 802.15.4\
    \ standard is a widely used networking technology in precision agriculture and\n\
    deﬁnes the physical layer and the Media Access Control (MAC) technique in Low-Rate\
    \ Wireless\nPersonal Area Networks (LR-WPANs).\n•\nZigBee is another suitable\
    \ technology for short range radio communication in the ﬁelds using\nlow-power\
    \ devices capable of transmitting data over long distances using intermediate\
    \ stations.\nInformation 2019, 10, 348\n8 of 25\n•\nLoRa is a type of wireless\
    \ conﬁguration that has been created to achieve long-range connections\nfor Low-power\
    \ Wide Area Networks (LPWANs).\nLoRAWAN is a protocol for managing\ncommunication\
    \ between LPWAN gateways and nodes.\n•\nBluetooth Low Energy is a global personal\
    \ area network protocol built for transmitting small\ndata pieces infrequently\
    \ at low rates with signiﬁcantly low power consumption per bit.\n•\nRFID (Radio\
    \ Frequency Identiﬁcation) is a different technology that uses radio signals to\
    \ monitor\nand identify in real time objects without requiring line-of-sight communication.\
    \ An RFID\nsystem includes a reader, a tag, and a host and is presented as ideal\
    \ for ﬁeld monitoring in\nmultiple studies.\nMoreover, the communication between\
    \ sensor nodes and a base station can be supported by:\n•\nthe Wi-Fi protocol,\
    \ based on the IEEE 802.11 standard. This standard speciﬁes the set of media\n\
    access control (MAC) and physical layer (PHY) protocols for implementing wireless\
    \ local area\nnetwork (WLAN) Wi-Fi computer communication in various frequencies.\n\
    •\nthe GSM (Global System for Mobile Communications), a standard developed by\
    \ the European\nTelecommunications Standards Institute (ETSI) to describe the\
    \ protocols for second-generation\n(2G) digital cellular networks used by mobile\
    \ devices such as mobile phones and tablets.\n•\nthe GPRS (General Packet Radio\
    \ Service) technology standard that provides rapid sending and\nreceiving of data\
    \ over the GSM mobile networks based on packet switching, a well-known\nnetwork\
    \ transmission process.\n•\nthe 2G, 3G and 4G (LTE) are respectively the 2nd,\
    \ 3rd and 4th generation of GSM technology\naiming at higher speeds.\nTable 3\
    \ summarizes the communication technologies adopted in smart farming systems according\n\
    to literature.\nTable 3. Smart farming networking technologies.\nCommunication\
    \ Technology\nData Rate\nFrequency Band\nRange\nReferences\nIEEE 802.15.4\n20–250\
    \ Kbps\n2400/915/868 MHz\n10 m\n[7]\nIEEE 802.15.4-ZigBee\n20–250 Kbps\n2400/915/868\
    \ MHz\n10–100 m\n[19]\nWi-Fi-IEEE 802.11\n450 Mbps\n2.4 GHz–5 GHz\n100 m\n[2,20]\n\
    GPRS-2G GSM\n64 Kbps\n900 MHz–1800 MHz\n100 m\n[21]\n3G\n14.4 Kbps–2 Mbps\n1.6–2\
    \ GHz\n100 m\n[21]\n4G-LTE\n100 Mbps–1 Gps\n2–8 GHz\n100 m\n[14]\nLoRa\n0.3–50\
    \ Kbps\n433,868,780,915 MHz\n2–5 km\n[1,22]\nBluetooth LE\n1 Mbps\n2.4 GHz–2.485\
    \ GHz\n>100 m\n[5]\nRFID\n400 Kbps\n125 KHz–915 MHz\n3 m\n[23]\n4.1.2. Precision\
    \ Agriculture Routing Protocols\nData routing algorithms play an important role\
    \ in WSNs by establishing the path of\ncommunication for data exchange between\
    \ sensor nodes and base stations on a network. A variety\nof routing techniques\
    \ have been proposed until now, aiming to achieve higher performance with\nminimal\
    \ power consumption. IoT and WSN routing protocols can be categorized according\
    \ to network\nstructure and the way information will be disseminated through the\
    \ network. A routing protocol can\nbelong to more than one category, aiming to\
    \ satisfy as many performance metrics as possible.\nAccording to the way by which\
    \ routing decisions are made proactive and reactive routing\ntechniques can be\
    \ used. Proactive routing (or table-driven) supports the periodic renewal and\n\
    updating of the routes and destinations that are formed between the nodes throughout\
    \ the network.\nOn the other hand, reactive routing (or on demand) includes discovering\
    \ routes on demand based\non the transmission of route request packets. The downside\
    \ to reactive protocols is their latency,\nsince transmissions over unknown or\
    \ expired routes face delays, for which either the application or\nthe routing\
    \ protocol must account by buffering or dropping data.\nInformation 2019, 10,\
    \ 348\n9 of 25\nFurthermore, according to WSN structure, routing algorithms can\
    \ depend on neighbor nodes to\nbroadcast the collected information. Another popular\
    \ technique is based on dividing the network into\nclusters. Each cluster depends\
    \ on a cluster head node to manage the routing of information between\nother clusters\
    \ or base stations. Hierarchical routing is the most popular routing method in\
    \ smart\nfarming monitoring systems and soil parameter monitoring [23,24]. Multi-path\
    \ routing protocols\ncan also be used to implement a smart farm monitoring system\
    \ to balance the data transfer load and\nconserved energy. Table 4 presents characteristic\
    \ examples of routing protocols adopted in smart\nfarming systems according to\
    \ literature.\nTable 4. Smart farming routing protocols.\nRouting Protocols\n\
    Category\nFeatures\nDestination-Sequenced\nDistance Vector (DSVD)\nProactive\n\
    Route availability to all network destinations with\nminimal delay.\nLink Estimation\
    \ Parent\nSelection (LEPS)\nProactive\nA map of the network is kept regarding\
    \ the\ninterconnection of nodes.\nTiny Lightweight UNderlay\nAd-hoc Routing (TinyLunar)\n\
    Reactive\nProvided\ninterfaces\nhelp\nto\nform\nroute\ncharacteristics.\nAd-hoc\
    \ On-Demand\nDistance Vector(AODV)\nReactive\nUsed in ZigBee communication protocol\
    \ for\ninterconnection of sensor nodes.\nDynamic Source\nRouting(DSR)\nReactive\n\
    A route on demand is formed when a transmission\nnode requests it.\nOptimized\
    \ Link State\nRouting Protocol (OLSR)\nFlat Routing\nInformation about the status\
    \ of the nodes is used to\nselect the appropriate path for packet forwarding.\n\
    ProtoSense\nFlat routing\nReliable retransmission of information using\nconﬁrmation\
    \ messages.\nPeriodic Threshold-Sensitive\nEnergy-Efﬁcient Sensor\nNetwork (APTEEN)\n\
    Hierarchical\nRouting\nIt takes into account energy saving and network\nlifetime\
    \ [24].\nLocation Routing Algorithm\nwith Cluster-Based Flooding\n(LORA-CBF) [25]\n\
    Location-based\nrouting\nIt uses the ﬂood method in a hierarchical network\nstructure\
    \ to route data packets.\n4.2. The Encapsulation Layer\nMost of the current agro-environmental\
    \ monitoring applications are based on machine to\nmachine (M2M) communication\
    \ support regarding real-time data transmission. There is a variety\nof communication\
    \ patterns to be used so that the terminal can receive the information necessary\
    \ to\nmonitor the production. WSN technologies, enhanced by the IoT paradigm,\
    \ enable smart sensor\ncommunication and connection to the IPv6-based internet,\
    \ by addressing the agricultural sensors\nwith IPv6 long addresses that can ﬁt\
    \ in lightweight IoT data link frames. IoT can immensely improve\nthe autonomous\
    \ capabilities of resourced-constrained nodes in a Low-power and Lossy Network\n\
    (LLN). An agricultural WSN is a LLN. In such a network, some of the nodes may\
    \ have a direct\nInternet connection to send and receive messages from the Internet.\
    \ However, other nodes from the\nsame network, may lack that kind of ability due\
    \ to hardware limitations, and require the use of the\nInternet-connected nodes\
    \ to access external services. Data exchange in a local context is also possible\n\
    without the necessity of transmitting data to the Internet. The task of discovering\
    \ the routes and\nallowing data messages to be transmitted among agricultural\
    \ sensor nodes is performed by the routing\nprotocol. Due to this fact, in such\
    \ networks, network performance is strongly related to how the\nrouting protocols\
    \ use the limited hardware resources of the network device.\n•\nThe 6LoWPAN [7,26]\
    \ is the most popular network encapsulation protocol for precision agriculture\n\
    applications. It refers to the transmission of IPv6 protocol packets over Low-Power\
    \ Wireless\nInformation 2019, 10, 348\n10 of 25\nPersonal Area Networks. In a\
    \ smart farming monitoring system, it is used by sensor devices that\nare compatible\
    \ with the IEEE802.15.4 standard for WSNs. 6LoWPAN efﬁciently encapsulates\nIPv6\
    \ long headers in IEEE 802.15.4 small data frames for information exchange between\
    \ sensor\nnodes. The advantages of this protocol are that it uses a special header\
    \ compression method and\na fragmentation process to reduce the transmission overhead\
    \ [10].\n•\nThe IPv6 over LoRa [27] implementation enables the transmission of\
    \ IPv6 protocol packets over\nLoRa links. If LoRaWAN is chosen for sensor node\
    \ communication in a smart farming monitoring\nsystem, LoRa is the MAC protocol\
    \ responsible for establishing communication between the\nLoRa gateway and the\
    \ LoRa sensor end devices. In an agriculture monitoring system, the IPv6\nadaptation\
    \ enables the deployment of the IoT paradigm as a separate architectural layer.\
    \ The basic\naim of this layer is to manage header compression and packet fragmentation\
    \ to deal with the\nrequirements of LoRa modulation in the physical layer.\n•\n\
    The IPv6 over 802.11ah [10] or Wi-Fi-ah (HaLow) is a low-power/low-rate protocol\
    \ able to support\nnumerous sensor node devices on a single base station. This\
    \ technology can be used for precision\nagriculture by enabling wireless base\
    \ stations in the ﬁeld to transmit data while also being energy\nconservative.\
    \ Wi-Fi-ah (HaLow) uses special characteristics of the 6LoWPAN technology for\n\
    effective transmission of IPv6 protocol packets over IEEE 802.11ah wireless networks.\n\
    •\nRPL (IPv6 Routing over Low Power and Lossy Networks) [26] is the most popular\
    \ IoT routing\nprotocol based on the distance vector routing technique. It is\
    \ a proactive protocol that constructs\na speciﬁc graph able to direct all trafﬁc\
    \ towards the sink node. RPL is the ideal routing protocol\nfor agricultural LLNs,\
    \ since it can quickly create network routes between sensor nodes in the\nﬁeld,\
    \ share routing knowledge and adapt the topology in an efﬁcient way. It is also\
    \ efﬁcient for\nmulti-hop, many-to-one and one-to-one communication.\n•\nLOADng-IoT\
    \ is another IoT routing protocol, proposed in [28] as an enhancement for reactive\n\
    protocol LOADng, which is considered to be the best current solution for LLNs.\
    \ LOADng-IoT is\nable to boost the process of route discovery, reduce the overhead\
    \ of control messages, and improve\nthe network′s quality-of-service(QoS). In\
    \ a smart farm monitoring system, this protocol will allow\nsensor nodes without\
    \ an Internet connection to forward their data packets to external Internet\n\
    services with much greater reliability and lower latency.\n4.3. The Middleware\
    \ Layer\nThe Middleware Layer is responsible for establishing and controlling\
    \ the association between\nIoT sensor devices. More speciﬁcally, the services\
    \ of this layer include smart device management by\nthe use of different transport\
    \ protocols to forward the generated data from the involved IoT devices.\nMost\
    \ of these transport standards use the Transmission Control Protocol (TCP) or\
    \ the User Datagram\nProtocol (UDP) for forwarding information. There is a wide\
    \ variety of data protocols [29] that belong\nto this layer towards developing\
    \ an efﬁcient managing platform for smart ﬁeld devices. However,\nchoosing the\
    \ most appropriate device management technology depends on software and hardware\n\
    speciﬁcations, network and technology architecture and communication standards\
    \ being used in the\naccording system to achieve maximum and efﬁcient performance.\
    \ In the view of using different kind of\nsmart entities in an agriculture monitoring\
    \ system, the services of this architectural layer facilitate the\ndesired interoperability\
    \ of the technologies introduced. All collected data will be stored on a remote\n\
    server and transmitted to the client machine through Application Programming Interfaces\
    \ (APIs) that\nprovide web services for third-party users. APIs enable device\
    \ communication in an application level\nfor different kinds of purposes and are\
    \ based on different architectures to transfer data from the server\nto the client.\n\
    •\nThe MQTT-SN (Message Queuing Telemetry Transport For Sensor Networks) is a\
    \ messaging\nprotocol that facilitates device data collection and communication\
    \ with servers using brokers.\nA broker is a network entity which arranges transactions\
    \ between other network entities. By using\nthe MQTT protocol, a precision agriculture\
    \ monitoring system can enable smart sensor devices to\nInformation 2019, 10,\
    \ 348\n11 of 25\npublish messages to a broker and/or subscribe to a broker in\
    \ order to receive certain messages.\nThe exchanged messages will be organized\
    \ by topics that act as a system for dispatching messages\nto subscribers.\n•\n\
    The CoAP (Constrained Application Protocol) is another popular protocol for IoT\
    \ device\ndata management. CoAP is based on a request/response pattern of communication\
    \ allowing\nconstrained devices to have web service functionalities. It is an\
    \ HTTP-like web transfer protocol\nwith the ability to extend the Representational\
    \ State Transfer (REST) architecture to Low-Power\nWireless Personal Area Networks\
    \ (LoWPANs). REST is an architectural style for providing\nstandards between computer\
    \ systems on the web, while distinguishing the concerns of client\nand server.\n\
    •\nThe XMPP-IoT (Extensible Messaging and Presence Protocol) is an open technology\
    \ for real-time\ncommunication based on XML messages between connected devices\
    \ and the available server.\nXMPP can efﬁciently power instant messaging, collaboration\
    \ and content syndication in a smart\nfarm monitoring system between all network\
    \ entities.\n•\nDevice and asset management in a precision agriculture monitoring\
    \ system can also be\nimplemented using the Mihini [30] software.\nMihini is an\
    \ open-source project by Eclipse\nTechnology that enables communication between\
    \ an M2M server and the applications running\non an embedded gateway. M3DA is\
    \ the protocol used for the transport of M2M data. M3DA can\nallow user applications\
    \ to exchange typed data/commands back and forth with an M2M server,\nin a way\
    \ that optimizes the use of bandwidth.\n•\nThe OMA SpecWorks’s Lightweight M2M\
    \ [31] is another device management protocol for M2M\nor IoT devices. It can be\
    \ used in a smart farming information system to efﬁciently transfer\nservice data\
    \ from the network to resource-constrained devices. In contrast to traditional\
    \ M2M\nstandards in which a device usually needs to keep up multiple stacks of\
    \ technologies, protocols\nand security services, the LwM2M scheme allows the\
    \ existence of one stack of technology for\ndevice management, not only on the\
    \ level of the device itself, but also on the application level.\nIn addition,\
    \ LwM2M is based on protocol and security standards from the Internet Engineering\n\
    Task Force (IETF).\n•\nThe ONEM2M [32] technical speciﬁcation standards are an\
    \ upcoming solution for device and\nasset management in precision agriculture.\
    \ ONEM2M is a middleware IoT platform that provides\nfunctions and APIs for different\
    \ service domains dealing with interoperability challenges. There\nare commercial\
    \ and open-source implementations of this technology.\n•\nA popular queuing protocol\
    \ for enabling server connection in IoT is the AMQP (Advanced\nMessage Queuing\
    \ Protocol). This open standard protocol can facilitate message orientation,\n\
    queuing, routing, reliability and security in precision agriculture applications.\n\
    •\nLast but not least, the DDS (Data-Distribution Service) [33] is the ﬁrst open\
    \ international M2M\nstandard directly addressing publish-subscribe communications\
    \ for real-time and embedded\nsystems. This protocol has the advantage of providing\
    \ fast data, event, and command exchange\namong the IoT sensor nodes in a precision\
    \ agriculture monitoring system.\n4.4. The Conﬁguration Layer\nThe Conﬁguration\
    \ Layer deals with protocols running on top of the IoT monitoring platform\nallowing\
    \ the exchange of data speciﬁed by its context regarding what is described, what\
    \ was measured,\nwhen, where, by what, the time of validity, ownership, and others.\
    \ The main objective of this layer\nis to curate, harmonize and aggregate the\
    \ collected raw data, so that it can be published as context\ninformation, or\
    \ supplied to upstream data processing algorithms or analytics. It is also capable\
    \ of\nsending operational commands to the Middleware Layer. Context information\
    \ is a term widely used\nin IoT research and characterizes data that may come\
    \ from existing systems, users, through mobile\napplications, IoT smart devices,\
    \ agricultural machinery or public geo-services. The Conﬁguration layer\nuses\
    \ an IoT broker to guarantee a common interpretation of information produced by\
    \ heterogeneous\ndata sources that typically employ different data formats and\
    \ ontologies, and therefore are unable to\nInformation 2019, 10, 348\n12 of 25\n\
    directly share information among them. An IoT broker enables the forwarding of\
    \ lower-level device\ninformation to higher-level Thing Information.\n•\nRegarding\
    \ precision agriculture applications, a popular context broker is implemented\
    \ by the\nFIWARE NGSI technology, named Orion Context Broker. FIWARE is a framework\
    \ of open-source\nplatform components towards the deployment of the IoT paradigm.\
    \ FIWARE NGSI is the FIWARE\nversion of the OMA NGSI, an API based on HTTP that\
    \ enables the integration of components\nand provides the basis for the interoperability\
    \ and portability of IoT-enabled Smart Agriculture\napplications [34]. NGSI is\
    \ an information model developed by OMA SpecWorks to manage\ncontext information\
    \ with a meta-model based on entities, attributes and metadata. This protocol\n\
    manages data concerning context entities, such as the lifetime and quality of\
    \ information.\n•\nThe implementation of a smart farming monitoring system is\
    \ greatly depended upon geo-services,\nlocation detection tools and mapping technologies.\
    \ In such systems, the exchange of geographical\ninformation should be effortlessly\
    \ accomplished between the involved network entities across\nthe web. The Open\
    \ Geospatial Consortium-Web Feature Service (OGC-WFS) [35] constitutes a\ndesirable\
    \ asset in formulating geographic information and offering direct ﬁne-grained\
    \ access\nat feature property level of the data to IoT sensor nodes in precision\
    \ agriculture applications.\nOGC offers various standards that can ease the way\
    \ location data is exchanged and stored in\na smart farming system that is based\
    \ on drone monitoring. Furthermore, the OpenGIS Web\nMap Service Interface Standard\
    \ (WMS) [35] can be efﬁciently used by UAVs, since it provides a\nsimple HTTP\
    \ interface for requesting geo-registered map images from one or more distributed\n\
    geospatial databases.\n5. The Management Layer\nIn a smart farming monitoring\
    \ system, the basic component of intelligence is considered to be the\nstudy and\
    \ ﬁltering of the collected data. The use of EO techniques enable the advance\
    \ of cultivation\nprocedures and increase productivity by providing the base layer\
    \ for spatial information analysis and\nmonitoring of agricultural activities.\
    \ A large percentage of smart agriculture applications are based\non simulators,\
    \ commercial programs and speciﬁc programming languages for implementing and\n\
    controlling the data system. The Management layer uses modern software tools to\
    \ efﬁciently satisfy\nmultiple tasks, presented in Table 5.\nInformation management\
    \ is deployed so the farmer can consult, record and modify the\ninformation collected\
    \ by the sensors in tables, statistical graphs and interactive maps. In addition,\n\
    it can download daily, monthly and annual reports of historical data. However,\
    \ the farmer can\nmainly see the current data of the monitored variables of one\
    \ or all the WSN nodes and consult the\nhistory. The interaction with the network\
    \ and services layer is achieved using an intermediate layer of\nmanagement logic\
    \ [36]. WSN data will be stored in an online database [37].\nThe system also enables\
    \ Big Data analytics in agriculture monitoring by using tools such as\nthe Apache\
    \ Hadoop software and various Big Data hardware platforms [38] as possible resources.\n\
    Big Data refers to information assets characterized by such a high volume, velocity\
    \ and variety\nable to require speciﬁc technology and analytical methods for its\
    \ transformation into value [39].\nIn precision agriculture smart applications,\
    \ the collected data are recorded in a speciﬁc format,\nto discover patterns,\
    \ correct errors, eliminate duplicate and inconsistencies and to solve noise problems.\n\
    Big Data technologies are playing an essential role in modern farming systems,\
    \ since predictive insights\nare provided regarding optimizing the quality of\
    \ the crop, minimizing environmental impact, reducing\ncosts, increasing proﬁt\
    \ and generally optimizing production efﬁciency. In addition, Big Data enable\
    \ the\nmanagement of real-time operational decisions and the redesign of business\
    \ processes for advancing\nthe food supply chain.\nFurthermore, the proposed architectural\
    \ scheme promotes various data processing techniques that\nupgrade the impact\
    \ of EO technologies in agriculture. EO by satellite leads to the acquisition\
    \ of regular\nor spatially continuous data regarding large areas. It provides\
    \ essential information on the functioning\nInformation 2019, 10, 348\n13 of 25\n\
    of ﬁelds and on the causes of environmental change. UAVs enable EO by using photogrammetry\n\
    techniques to extract three-dimensional digital surface models of the ﬁeld, as\
    \ well as orthophotographs.\nOne popular algorithm for this purpose is Structure\
    \ from Motion (SfM) [40]. An orthophotograph\ncan be used to create a realistic\
    \ map of the ﬁelds by measuring true distances and providing to the\nfarmer a\
    \ clearer helpful view from the sky. Based on photographs, digital image processing\
    \ tools,\nsuch as Pix4Dmapper can calculate various vegetation indices that can\
    \ lead to conclusions, either\non each photograph individually or after the production\
    \ of orthophotos regarding the crops’ state.\nVegetation indices are mathematical\
    \ quantitative combinations of the absorption and scattering of\nplant in different\
    \ bands of the electromagnetic spectrum [41]. Calculating vegetation indices will\
    \ help\nto identify useful crop characteristics concerning important biological\
    \ and physical parameters of the\nvegetation. The best-known vegetation index\
    \ is the Normalized Difference Vegetation Index (NDVI),\nwhich is the evolution\
    \ of the vegetation index ratio and is calculated by the visible and near infrared\n\
    light reﬂected from the vegetation.\nLast but not least, the smart agriculture\
    \ monitoring system also performs data mining processes\nbased on tools such as\
    \ the Apache Mahout Framework so as to identify and discover hidden patterns\n\
    in the collected data, once they are processed, in the form of reviews. In addition,\
    \ Machine Learning\ntechniques will be used in the smart monitoring platform in\
    \ order to estimate the extracted parameters\nof the crops’ growth rate and also\
    \ help to identify objects or animals trough the collected images by\nusing Object-Based\
    \ Image Analysis (OBIA) [42]. Moreover, new machine learning models—algorithms\n\
    focused on data classiﬁcation [43,44]—can be used to minimize the size of redundant\
    \ data and fasten\nthe analysis.\nTable 5. Smart farming monitoring system services.\n\
    Service Type\nTools\nDescription\nInformation\nmanagement\nDatabase\nThe central\
    \ server database for storing and maintaining the sensor\ncollected data, management\
    \ commands and application user\ninformation.\nManagement logic\nThe process of\
    \ managing the systems units, organizing and\ndisplaying the evaluated data into\
    \ a user-friendly way.\nBig Data\nanalytics\nApache Hadoop\nFramework\nComplex\
    \ process of examining large and varied data sets with an\nintention to uncover\
    \ meaningful and useful information that can\nhelp in deriving conclusion and\
    \ take decisions.\nBig Data hardware\nplatforms\nThe\nuse\nof\ndifferent\nhardware\n\
    platforms\nfor\nBig\nData\nanalytics according to the available hardware, scale-ability\
    \ and\nperformance characteristics of each platform.\nData and Image\nprocessing\n\
    Digital Image\nprocessing\nVegetation Indexes calculation\nPhotogrammetry\ntechniques\n\
    Extracting three-dimensional digital surface or terrain models of\nthe ﬁeld and\
    \ orthophotographs.\nMachine learning\nclassiﬁcation\nalgorithms\nClassiﬁcation\
    \ of data to decrease the size of redundant\ninformation and identify objects\
    \ or animals.\nData mining\nApache Mahout\nFramework\nSystematic and sequential\
    \ process of identifying hidden patterns\nand information in a large dataset.\n\
    Object-Based Image\nAnalysis\nIdentify objects or animals through the collected\
    \ images\nFurthermore, all these services are hosted in the cloud to be able to\
    \ access them remotely from\nany geographical location.\nInformation 2019, 10,\
    \ 348\n14 of 25\n6. The Application Layer\nBased on the proposed precision agriculture\
    \ monitoring system architecture, the farmer can\ninteract with the IoT applications\
    \ of the system to remotely manage the cultivation process.\nSuch applications\
    \ may concern any aspect of the agricultural ﬁeld ranging from planting and irrigation\n\
    processes to plant protection and harvesting methods [45]. The applications that\
    \ can be adopted may\ninvolve the fertilizer application, the weed mapping, the\
    \ spraying process, the irrigation of the ﬁeld\nand the alert system.\nThe Variable\
    \ Rate Fertilizer (VRF) application has as a target to optimize the usage of nutrients\
    \ by\ndeﬁning the amount of fertilizer applied based on the health of the plant.\
    \ Variable rate fertilizer in\nprecision agriculture is an area of technology\
    \ that focuses on the automated application of fertilizer to\na given landscape.\
    \ The way in which the materials are applied is based on data that is collected\
    \ by\nsensors, maps, and GPS. VRF applications bring several beneﬁts related to\
    \ savings on fertilizers and\nchemicals, potential yield increase and environmental\
    \ protection. In the same context is the Variable\nSpraying application. These\
    \ types of applications implement controllers that turn the herbicide\nsprayers\
    \ on and off. Usually variable spraying applications take into consideration information\n\
    coming from the weed mapping tools such as the weed locations. In that case the\
    \ appropriate volume\nof herbicide is estimated and applied in the ﬁeld based\
    \ on the weed intensity.\nThe Weed Mapping application focuses on the visualization\
    \ of the weed occurrences within\na certain crop ﬁeld with the help of mappings.\
    \ The GPS receiver with an aerial vehicle generates\nmaps which show the weed\
    \ occurrences. These weed maps can be combined with fertilizer maps\nand yield\
    \ maps. The IoT-based irrigation system use a micro-controller that serves as\
    \ information\ngateway receiving real-time information from soil moisture and\
    \ temperature sensors placed on the\nﬁelds. Generally, a moisture/temperature\
    \ threshold is speciﬁed based on which the micro-controller\nautomatically switches\
    \ on the water pump. The micro-controller also has servo motors to ensure that\n\
    the area is uniformly irrigated. The entire system can be managed remotely by\
    \ the end-user through\nthe dedicated application.\nAlert/ notiﬁcation applications\
    \ are also very popular in IoT-based precision agriculture. Producers\nand agriculture\
    \ companies implement IoT solutions for instantly tracking their crop ﬁelds. In\
    \ this case,\nthe data coming from IoT devices is processed and transformed into\
    \ knowledge properly visualized\nfor offering information regarding the health\
    \ of the vegetation and the soil, the behavior patterns of\nthe plants, detect\
    \ signs of disease on time, identify insects and harmful animals and instantly\
    \ alert\nproducers about potential difﬁculties. This type of applications serves\
    \ for storing and analyzing data,\nproviding producers with relevant recommendations.\n\
    The aforementioned applications aim at the efﬁcient ﬁeld and crop management to:\n\
    •\nincrease production efﬁciency\n•\nimprove product quality\n•\nprovide more\
    \ efﬁcient use of chemicals in cultivation\n•\nmanage pesticide amounts\n•\nreduce\
    \ energy consumption\n•\nprotect the soil\n•\ncontrol water consumption and underground\
    \ water amounts\nThe IoT-based agriculture applications can be implemented for\
    \ an Android or Windows\nsmart-phone, a tablet or as a web application. The applications\
    \ of IoT-based smart farming apart from\nconventional, large farming operations,\
    \ targets also other growing or common trends in agricultural\nsuch as organic\
    \ farming, family farming (complex or small spaces, particular cattle and/or cultures,\n\
    preservation of particular or high quality varieties etc.), and enhance highly\
    \ transparent farming. Our\nprecision agriculture monitoring system can also beneﬁt\
    \ the dry farming technique that encompass\nspeciﬁc agricultural techniques for\
    \ the non-irrigated cultivation of crops. Furthermore, greenhouses\ncan use our\
    \ architectural model to intelligently monitor as well as control the climate,\
    \ eliminating the\nneed for manual intervention.\nInformation 2019, 10, 348\n\
    15 of 25\n7. Energy-Saving Techniques and Security Mechanisms\n7.1. Energy-Saving\
    \ Technologies\nIn precision farming applications sensor nodes are usually powered\
    \ by low-energy batteries that\nare difﬁcult or impossible to recharge or replace.\
    \ This is considered to be a major disadvantage to\nmaintain a real-time monitoring\
    \ system. Energy-saving techniques is vital to maintain the system’s\nefﬁciency\
    \ in smart farming. This kind of techniques can provide battery life extension\
    \ by reducing the\namount of communication between the nodes and the base station,\
    \ while minimizing the redundant\ndata in the network. Energy preservation techniques\
    \ for precision agriculture systems are presented as\na separate architectural\
    \ level covering the sensing and networking procedures of smart farming.\nIn the\
    \ Sensor layer, the proposed energy-saving approach is an on/off process which\
    \ is based on\nthe selection of a subset of nodes that will remain active for\
    \ a certain period of time, while others remain\ninactive. Following this assumption,\
    \ SWORD (sleep/wake on redundant data) is an energy preserving\nscheme that can\
    \ be used to collect data on soil moisture [19]. The SWORD algorithm performs\
    \ data\ncontrol by removing redundant data so as to minimize energy consumption\
    \ and increase the life of\nsensor nodes in the network.\nIn the Network layer,\
    \ data transmissions and receptions can also be scheduled based on the\nsleep/awake\
    \ periods of sensor nodes at predetermined intervals. For this purpose, A2S, an\
    \ automated\nagricultural precision tracking system can be used [46]. Based on\
    \ this energy-saving technology,\nwhenever the sensing period is set by the application\
    \ server, the sink node keeps the schedule and\nit spreads the sleep order message\
    \ over its network every sensing period. Each time a node receives\nthe sleep\
    \ message, it sets the sleep timer’s end time to the value of the duration ﬁeld\
    \ included in the\nmessage. When the meter time ends, the node detects the environment\
    \ and battery voltage level and\nsends the data to the source. Then, he expects\
    \ the next sleep request message.\nMoreover, another energy-saving scheduling\
    \ technique that can be deployed in the Network layer\ninvolves the use of unmanned\
    \ ﬂying vehicles in an agricultural crop monitoring system. Based on this\nscheme,\
    \ the node on the unmanned ﬂying vehicle wakes the ground nodes to retrieve the\
    \ measured\ndata. To perform this function, a coded radio signal is sent via a\
    \ transmitter to the ground nodes.\nThe nodes are in an inactive state, except\
    \ for a small receiver waiting to receive the trigger signal.\nFurthermore, taking\
    \ advantage of APTEEN hierarchical routing protocol, a time division multiple\n\
    access technique can be implemented as a scheduling method. Based on this technique,\
    \ messages are\nsent to put some nodes in sleep mode so as to avoid packet collisions\
    \ between sensor nodes belonging\nto different clusters. In addition, carrier\
    \ sense multiple access technique is another alternative method,\nwhich is equally\
    \ effective for avoiding collisions.\n7.2. Security Mechanisms\nPrecision agriculture\
    \ monitoring systems involve the exchange of sensitive information regarding\n\
    the cultivation process, the state of crops and personal data of authorized staff.\
    \ It is of great importance\nfor such systems to be protected against cyber-attacks.\
    \ An unauthorized entry of a malicious individual\nin the system may cause great\
    \ damage to the cultivation process or even acquire the farmers personal\ninformation\
    \ [47]. In the pursuit of safeguarding a smart farm monitoring system the conﬁdentiality\n\
    of data should be met. In addition, it is vital to ensure the reliability of the\
    \ data and the ability to\nconﬁrm that a message has not been tampered with, altered\
    \ or changed while on the network. Also,\nthe services of resources offered by\
    \ the network, or by a single sensor node must be available whenever\nrequired\
    \ and ﬁnally to be able to identify the origin of a message received. Basic security\
    \ mechanisms\nare already deployed by the combined IoT technologies in every architectural\
    \ level of the proposed\nsmart monitoring system. However, there are more ways\
    \ to increase the level of security in each\nlayer separately.\nOne popular way\
    \ of providing physical layer security in WSN and IoT systems is cryptography.\n\
    Physical layer security refers to the inner security capabilities of the Sensor\
    \ layer regarding the\nInformation 2019, 10, 348\n16 of 25\nrandomness of wireless\
    \ channels, the signal-to-noise ratio gaps or intended jamming. There are\nthree\
    \ kinds of cryptographic methods used in WSNs, the symmetric and asymmetric ones\
    \ and hash\nfunctions. Hash functions are special mathematical functions which\
    \ map a given input to a certain\noutput with a ﬁxed size. Well-known cryptographically\
    \ secure hashes are the Secure Hash Algorithm-2\n(SHA-2) and Advanced Encryption\
    \ Standard (AES) algorithm. In symmetric cryptographic techniques,\na single shared\
    \ key is used between the two communicating nodes both for encryption and decryption.\n\
    This key stays known only to the nodes of the network. On the other hand, in asymmetric\
    \ cryptography,\na private key can be used to decrypt and sign data. A public\
    \ key is also used to encrypt and verify data.\nThe private key needs to be kept\
    \ conﬁdential while the public key can be published freely. Asymmetric\ncryptographic\
    \ techniques may use the RSA (Rivest–Shamir–Adleman) algorithm, the ECC (Elliptical\n\
    Curve Cryptography) algorithm or the pairing technique. Popular frameworks of\
    \ symmetric and\nasymmetric technique can be found in [48].\nRegarding the Link\
    \ layer of our proposed architecture security mechanisms focus against the\ninterception,\
    \ modiﬁcation and fabrication of the exchanged data. Attack detection mechanisms\
    \ can\nbe applied, such as the misbehavior-aware threshold detection scheme for\
    \ LLNs proposed in [49].\nIn addition, secure routing protocols may be used such\
    \ as SAR(Secure aware routing protocol), which is\nbased on on-demand protocol\
    \ such as AODV or DSR and DPRAODV (Detection, Prevention and\nReactiveAODV) [50].\n\
    Middleware security mechanisms deal with unauthorized modiﬁcations that occur\
    \ due to\ntransmission errors (accidental) and require the use of digital signatures.\
    \ Digital signature schemes\nare cryptographic schemes that include key generation\
    \ algorithms, signing algorithms and signature\nverifying algorithms. A digital\
    \ signature is an authentication mechanism that enables the creator of the\nmessage\
    \ to attach a code that acts as a signature. The Digital Signature Algorithm (DSA),\
    \ developed by\nthe National Institute of Standards and Technology, is one of\
    \ many examples of a signing algorithm.\nAccess control is an important building\
    \ block for the overall security of a precision agriculture\nmonitoring system.\
    \ The IoT requires access control models that apply authorization policies across\n\
    a multitude of smart sensors. In a smart farm monitoring platform, authentication\
    \ is required\nto prevent authorized users from accessing resources in an unauthorized\
    \ manner. For instance,\na worker in the ﬁelds is a legitimate user but does not\
    \ have the access rights as the main administrator\nfarmer. Most importantly,\
    \ access control prevents illegitimate users from gaining access to resources.\n\
    The Attribute-Based Access Control (ABAC) model is a technique that assigns attributes\
    \ to each entity\nin the system. The attributes may refer to either a user or\
    \ a resource and are deﬁned as properties\nof every entity to enable authentication.\
    \ Another paradigm able to provide solid communication in\nthe application layer\
    \ is the Role-Based Access Control model (RBAC) where a user is assigned as\n\
    administrator or ordinary user that predetermines access rights policies. In the\
    \ Application layer,\neach user can be authenticated by the use of passwords or\
    \ a smart key card [51].\n8. Use Case Study: The DIAS Architecture\nThe DIAS research\
    \ project stands for Drone Innovation in saffron Agriculture Surveillance.\nIt\
    \ is co-funded by the European Union and Greek national funds through the Operational\
    \ Program\nCompetitiveness, Entrepreneurship, and Innovation. University of Western\
    \ Macedonia (UOWM) in\ncooperation with Kozani Saffron Producers Cooperative (KSPC)\
    \ aims at developing an integrated\nautomated surveillance system for saffron\
    \ cultivation.\nThis 24 h real-time saffron cultivation\nsurveillance system is\
    \ relied on signal and image collecting and processing, which is derived from\n\
    advanced surveillance, risk identiﬁcation and early warning systems, based on\
    \ integrated sensor\nnetworks, and aerial unmanned vehicles.\n8.1. Saffron Cultivation\n\
    The saffron cultivation is considered to be of extreme importance for the Western\
    \ Macedonia\ncitizens, due to the activity over saffron cultivation by a large\
    \ number of citizens, the limited farming\nInformation 2019, 10, 348\n17 of 25\n\
    geography, the unique production process to plant the saffron seeds, and the unique\
    \ production risk\nthat this operation faces. The only kind of saffron that is\
    \ systematically cultivated around the world,\nfor at least ten centuries, is\
    \ the edible saffron or as it known in scientiﬁc (botanical) terminology Crocus\n\
    Sativus Linneaus.\nThe cultivation process includes harvesting the ﬂowers, as\
    \ presented in Figure 2, splitting the\nstigmas and stamens from the petals, drying\
    \ and sorting of saffron. The picking of 1000 ﬂowers is\nprocess of a duration\
    \ around 45–55 min, while additional 100 to 130 min are required for removing\n\
    the stigmas for drying. In total, 370 to 470 h are required to produce 1 kg of\
    \ dried saffron [52].\nThe ﬂowers are picked exactly when they are fully bloomed,\
    \ and the saffron strand or stigma is at its\nreddest. The harvesting process\
    \ begins shortly after dawn to minimize the further sunlight exposure\nto the\
    \ crops, since they may lose their color and even ﬂavor. Saffron cultivation requires\
    \ dry soil\nwith speciﬁc levels of moisture, controlled irrigation and right amounts\
    \ of nitrogen, phosphorus\nand potassium. Cultivation is commonly disturbed by\
    \ mice, moles and rats wrecking the stems.\nFurthermore, fungi may cause speciﬁc\
    \ diseases at the early stages of saffron growth.\nFigure 2. Saffron harvesting.\n\
    The DIAS platform aims to improve the production process, by offering the ability\
    \ of immediate\ninterference in case of animal, disease or wild weeds detection.\
    \ The farmer will be able to monitor the\nﬁelds in real time and getting alerts\
    \ in case of unwanted incidents regarding the state of the plants\nduring all\
    \ cultivation period, while raising proﬁts. To satisfy these goals, the monitoring\
    \ process will\nbe aligned speciﬁcally with the farmers concerns and actions during\
    \ each month of cultivation as\npresented in Figure 3.\nFigure 3. Saffron cultivation\
    \ yearly stages.\n8.2. DIAS Architecture\nThe DIAS platform follows the architectural\
    \ design of the proposed remote sensing monitoring\nsystem. As presented in Figure\
    \ 4 the DIAS system is consisted of seven architectural layers. In each\nlayer\
    \ the most suitable aforementioned technologies are used towards achieving the\
    \ overall system’s\nefﬁcient performance and reliable operations. The saffron\
    \ cultivation is a quite demanding and delicate\nprocess requiring the deployment\
    \ of tailor-based technologies and continuous crop monitoring to\navoid animal\
    \ and disease interventions.\nIn the Sensor layer, quadcopter UAVs with thermal,\
    \ hyperspectral and RGB cameras are being\nused in cooperation with multiple wireless\
    \ nodes equipped with various sensors for data collection\nregarding the crops.\
    \ Saffron cultivation monitoring requires the study of small sized crops and\n\
    the notice of minimal crop state variations during each month. To select the desired\
    \ information\nUAVs must ﬂy in a certain distance and place for a speciﬁc period\
    \ of time and by using different\nInformation 2019, 10, 348\n18 of 25\nposition\
    \ angles. Quadcopter UAVs is considered to be the best choice for saffron monitoring\
    \ since\nthey have rotary wings, which provide them with the ability of maneuverability,\
    \ while also ﬂying\nin low speed. Regarding RGB cameras, they are ideal since\
    \ saffron cultivation requires the capture\nof data-images in different weather\
    \ conditions avoiding inadequate or excessive exposure of the\nimage. Using multispectral\
    \ or hyperspectral sensors, UAVs can also obtain information related to\nspectral\
    \ absorption and reﬂection of the crops in several bands. This quite useful since\
    \ the provided\ninformation can then be used to calculate vegetation indices and\
    \ monitor the state of saffron crops\nbased on them. On the other hand, thermal\
    \ imaging detects speciﬁc levels of radiation and translates\nit into a grayscale\
    \ image, using brighter and darker shades of heat representation. This ability\
    \ is also\nessential in saffron cultivation since the ﬁelds are regularly trampled\
    \ by animals that are not being\ndetected on time in before they cause any damage.\
    \ The DIAS monitoring system uses different ground\nand on-leaf sensors to collect\
    \ useful data for improving the cultivation process. More speciﬁcally,\nenvironmental\
    \ humidity and temperature is evaluated since saffron requires speciﬁc conditions\
    \ to\nprosper. Additionally, the levels of luminosity, leaf-wetness, soil moisture,\
    \ pH and wind speed are also\nof great importance. Furthermore, the amounts of\
    \ nitrogen, phosphorus and potassium in the soil can\nhave a severe impact on\
    \ the plant’s growth, as well as the moisture levels in the soil. The farmer will\n\
    be able to predict production loss efﬁciently due to a round knowledge of the\
    \ saffron ﬁelds condition\nand even intervene with possible treatments to change\
    \ its course for the better.\nRegarding the Link and Encapsulation layer, sensor\
    \ data exchange in the DIAS platform is enabled\nby the LoRaWAN technology and\
    \ the IPv6 protocol. LoRa technology offers several advantages.\nThe LoRa physical\
    \ layer uses ISM bands 868 and 915 MHz—frequencies that are free to use anywhere\n\
    in the world. In addition, LoRa devices consume very little power making it ideal\
    \ for battery-powered\ndevices and it can also transmit and receive data for up\
    \ to 15 km in suburban areas and 5 km in\nurban areas. Another advantage of LoRa\
    \ is its high network capacity. In LoRaWAN, a single gateway\ncan accommodate\
    \ 1000 end-node devices. On the other hand, IPv6 offers large addressing space\n\
    and has built-in support for network auto-conﬁguration. In the DIAS platform,\
    \ each sensor node\nis characterized by its own IP address and uses a power saving\
    \ scheduling and routing protocol to\ntransmit the collected data to the nearest\
    \ LoRa Gateway. The information to be exchanged is encrypted\nbefore transmission.\
    \ Each LoRa gateway forwards the information to the according network router for\n\
    Internet access and data storage to the system’ database. UAVs’ data transmission\
    \ and communication\nis enabled by the IEEE 802.11ah networking standard in cooperation\
    \ with the IPv6 protocol, to forward\nthe collected images to the network server\
    \ as well.\nIn the Middleware layer, the DIAS platform will employ the MQTT-SN\
    \ protocol. MQTT-SN\nenables the management of all DIAS networking devices through\
    \ message exchanges coordinated by\nthe FIWARE’s context broker. It is essential\
    \ to maintain the monitoring’s system reliability towards\nachieving meaningful\
    \ data collection. Based on this protocol, the exchanged messages can be organized\n\
    by topics and importance regarding device management commands, transmission requests\
    \ initiated by\na higher layer and data acquisition. Sixteen number of message\
    \ types are supported and transmitted\nin an asynchronous way of communication\
    \ by the publish-subscribe model. TCP and UDP will also be\nused as transport\
    \ protocols. MQTT is ideal for the DIAS system since it excels in smart sensor\
    \ device\ncommunication on a wide area network, due to the publish/subscribe architecture\
    \ with the broker\nin the middle. MQTT is also very useful if the bandwidth is\
    \ limited to enhance network reliability\nand availability.\nIn the according\
    \ Conﬁguration layer, all saffron ﬁeld collected data will be grouped and\nformulated\
    \ to reach the information management unit. This layer facilitates the FIWARE\
    \ NGSI\nAPI so to produce the desired information model of the acquired ﬁeld data\
    \ based on efﬁcient\ncontext management.\nThe FIWARE’s Orion Context Broker has\
    \ powerful features enhancing\nthe capabilities and performance of the DIAS monitoring\
    \ system such as enabling asynchronous\napplication notiﬁcations. The basic operations\
    \ of the current layer include enabling the publication,\nInformation 2019, 10,\
    \ 348\n19 of 25\nconsumption, subscription and processing of all the information\
    \ relevant to the crops and the\ncultivation process in the DIAS platform.\nFigure\
    \ 4. The DIAS architecture.\nThe Management layer constitutes the basic operation\
    \ center of the DIAs platform. It stores,\nmaintains, analyzes the collected data\
    \ and produces predictions for the progress of the crops growth\nrate and statistics\
    \ regarding they current state. According to the commands acquired from the user\
    \ of\nthe platform in the highest architectural layer, the information management\
    \ logic initiates the according\nprocesses. Data processing includes the use of\
    \ the Random Forest machine learning classiﬁcation\nalgorithm for direct extraction\
    \ of conclusions regarding the growth and health of vegetation. This\nalgorithm\
    \ is directly applied on the data of the images acquired by the UAVs, evaluating\
    \ the RGB\nInformation 2019, 10, 348\n20 of 25\ncolors and the intensity of each\
    \ pixel. The Random Forest scheme performs very well with high\ndimensionality\
    \ and can handle binary features, categorical features, and numerical features.\
    \ This\nmethod is chosen since very little pre-processing is required and the\
    \ data does not need to be rescaled\nor transformed. Digital image processing\
    \ of geospatially corrected aerial images (orthophotographs)\nfocuses on producing\
    \ the according vegetation indexes for evaluating the state of saffron plants.\
    \ Two\nkind of vegetation indexes will be calculated by the PiX4D image processing\
    \ tool. Vegetation indexes\nderived from multispectral information, such as NDVI\
    \ will enable the detection of unhealthy or sparse\nvegetation that reﬂects more\
    \ visible light and less near infrared light, making it easy to monitor the\n\
    growth and health of saffron crops. On the other hand, regarding the use of RGB-based\
    \ Vegetation\nIndices, Excess Greenness Index (ExG) is based on the assumption\
    \ that saffron plants will display a\nclear high degree of greenness, while soil\
    \ being the only background element. Finally, the Normalized\nDifference Index\
    \ (NDI) will be also used since it can enable the separation of saffron plants\
    \ from\nsoil and residue background images, using only green and red channels.\
    \ Spectral information can\nhelp signiﬁcantly in assessing a lot biological and\
    \ physical characteristics of the saffron crops. Any\nkind of wild weeds or animal\
    \ detection based on thermal imaging in the ﬁelds initiates alerts for\nimmediate\
    \ intervention and is taken into consideration as a note in the cultivation calendar\
    \ created by\nthe platform for the farmer. For this purpose, the OBIA algorithm\
    \ is also used to recognize weeds or\ndiscriminate species. Object-based image\
    \ analysis is based on the comparison between sets of similar\npixels called image\
    \ objects in measures of spectral properties (i.e., color), size, shape, and texture,\n\
    as well as context. The OBIA algorithm is chosen since it is more suited to landscape-scale\
    \ analyses\nand can ﬁlter out meaningless information and assimilate other pieces\
    \ of information into a single\nobject. After processing, all the collected sensor\
    \ data are categorized and evaluated in accordance with\nthe desired vegetation\
    \ index values, moisture levels and general plant state for each month during\n\
    the cultivation process. For these tasks, the DIAS platform employs powerful and\
    \ well-known tools,\nthe Apache Spark Framework focusing on Big Data analytics\
    \ and the WEKA (Waikato Environment)\nFramework specializing in data mining tasks.\
    \ The evaluation results will point out the vulnerable\nspots in the ﬁeld with\
    \ helpful statistical graphs and suggest possible solutions to the farmer, such\
    \ as\nthe use of fertilizer.\nIn the Application Layer, each user can access the\
    \ DIAS platform by using his/her own unique\npassword. According to their authority\
    \ and activities in the saffron ﬁeld the users have different access\nrights in\
    \ the DIAS platform. A user may be the administrator of the platform, a representative\
    \ of the\nKSPC board, a farmer or a worker in the ﬁelds. For instance, a worker\
    \ can only observe the evaluation\nresults in order to aid the farmer in treating\
    \ the plant growth, while the KSPC representative can\nadd observation notes,\
    \ can schedule and initiate sensor data collection in a speciﬁc ﬁeld and also\n\
    manage the ﬂight plan of UAVs. On the other hand, the platform administrator is\
    \ only one who can\nadd new users and new saffron ﬁelds for cultivation to be\
    \ observed in the system. Access in the\nDIAS platform is forbidden for non-authorized\
    \ users. In the Application layer, the management of\nthe four basic operational\
    \ units of the DIAS system can be initiated. These are the Visualization Unit,\n\
    the Data Management Unit, the Prediction Unit and the Data collection Unit. By\
    \ entering the Data\ncollection Unit, a user can initiate sensor data collection\
    \ in a selected ﬁeld or modify existing data\nin the platform. By entering the\
    \ Data Management Unit, the user can evaluate orthophotographs\nand calculate\
    \ vegetation indexes according to speciﬁc data in a speciﬁc saffron ﬁeld with\
    \ the help of\nPix4DMapper tool. The Visualization Unit is related to the presentation\
    \ of statistical results and graphs\nregarding each saffron ﬁeld, while the Prediction\
    \ Unit employs the aforementioned data mining tools\nto produce a sufﬁcient evaluation\
    \ of the collected data. All system information is stored in the central\nserver\
    \ database.\nBased on the acquired and processed data, farmers can produce statistics\
    \ regarding the progress in\nsaffron production and avoid ﬁnancial loss, while\
    \ improving the quality of the crops and accomplishing\na considerable rise in\
    \ production.\nInformation 2019, 10, 348\n21 of 25\n8.3. Beneﬁts and Costs\nGreece\
    \ is the second largest saffron producing country, with an average output of 4\
    \ tons of p.a.\nduring the last four decades, most of which is directed in export\
    \ markets. The establishment of the\n‘Kozani Saffron Producers Cooperative’ marked\
    \ the beginning of a good decade for this product\nwith production reaching its\
    \ height record of more than 12 tons in 1982 [53]. Nevertheless, in the\nperiod\
    \ following Greece’s accession to the European Community, farmers began abandoning\
    \ saffron\ncultivation. This fact resulted in a signiﬁcant decrease in yield with\
    \ an average yield of 800 g per\nstremma (1 ha = 10 stremmas = 1000 m2 ). However,\
    \ this trend seems to be reversed since 2010 and\ncurrently yields vary around\
    \ 1 ton per stremma. Currently, Greek saffron price is about 1200 euros per\n\
    Kg. Nearly 5000 spots are needed to produce 100 g of red saffron. The average\
    \ produce per acre is 6 kg\nof dried stigmas (red product). The lower production\
    \ of the plant is on the ﬁrst year of the plantation,\nwhile the highest on the\
    \ third and the fourth.\nIn the year of 2015, a study in Greek saffron cultivation\
    \ resulted that farm managers need\nto address the efﬁciency of input use and\
    \ raise capital and labor productivities to maintain\ncompetitiveness [53]. The\
    \ saffron quality is determined by the color, ﬂavor and size of the stigmas.\n\
    The DIAS platform aims to upgrade proﬁt earnings by the adoption of new technologies,\
    \ ensuring\nﬂower picking at appropriate time in a proper collection material\
    \ at an appropriate age. Animal\nintrusions in the ﬁelds, causing a huge loss\
    \ in production, will be prevented and crops diseases will\nbe detected in time.\
    \ The overall equipment cost is considered to be a safe investment for farmers\n\
    since most of the technologies involved are open source and the initial cost of\
    \ the related hardware\nand software can be shared across producers. Currently,\
    \ the DIAS initiative is under construction\nand no experimental results are available\
    \ to conﬁrm the proposed objectives. However, in Table 6\nwe present the production\
    \ rate of Greek Saffron as recorded in [53], while in Table 7 an average\nestimation\
    \ is provided regarding the increase in cultivation operations by adopting the\
    \ DIAS platform.\nThese percentages are the estimations provided by two of the\
    \ producers whose ﬁelds participate in\nthe pilot study. The estimations show\
    \ that on average the farmers calculate an increase of around\n20% in production,\
    \ this percentage is in accordance to other types of cultivations such as olives\
    \ and\npotatoes [54].\nThe use of the DIAS project can offer a signiﬁcant increase\
    \ in saffron production. Nevertheless,\nsince no pilots have been implemented\
    \ yet in the project, the Return on Investment (ROI) is difﬁcult to be\nestimated.\
    \ An investment of time and money from the DIAS consortium is required to investigate\
    \ how\nthe data gathered from UAVs can connect to and affect other things that\
    \ are happening on the ﬁelds.\nSaffron growers need that information to provide\
    \ context and create a correlation regarding causes\nand effects. At that point\
    \ ROI becomes signiﬁcant promoting UAVs as a part of the desired solution\nand\
    \ not as the solution itself. Furthermore, due to shared costs between project\
    \ partners, ROI becomes\na collective performance measure that can be estimated\
    \ only when each member has acquired the\naccording technological beneﬁts. A complex\
    \ proﬁtability study is required to specify the precision\nservice offerings,\
    \ as presented in [55,56]. Each partner in the DIAS project owns and offers different\n\
    assets in this endeavor, thus calculating the overall ROI of UAV usage from the\
    \ side of farmers is not\nyet possible.\nTable 6. Greek saffron cultivation economic\
    \ estimation in one year.\nAverage production results\n2200 euros\nAverage produced\
    \ yield\n1.8 Kgs\nAverage labor cost of annual working hours\n145 euros per 1000\
    \ m2\nAverage cultivated land\n15,000 m2\nInformation 2019, 10, 348\n22 of 25\n\
    Table 7. Economic estimation for Greek saffron cultivation via using the DIAS\
    \ platform in one year.\nDIAS platform hardware and software equipment cost\n\
    45,000 euros\nAverage increase in production results in euros\n10%\nAverage increase\
    \ in produced yield in Kgs per 1000 m2\n20%\nAverage increase in saffron quality\
    \ per 1000 m2\n25%\n9. Challenges\nThe implementation and maintenance of a monitoring\
    \ system in precision agriculture faces\nseveral challenges. The greatest challenge\
    \ in the sensor layer is for sensor nodes to achieve efﬁcient and\ncontinuous\
    \ operation for a long time in a natural environment, while taking into account\
    \ the climate\nchange and wildlife interventions. The battery life of sensor nodes\
    \ is not considered satisfactory,\nand it is necessary to design and implement\
    \ energy-saving protocols with the highest possible\nsystem performance among\
    \ other precautions. In addition, depending on the type of application,\nthe supported\
    \ agricultural work and the implementation technologies, the problems that arise\
    \ can be\ndifferentiated. For instance, the use of sensors and controllers from\
    \ different manufacturers prevents\ncommunication between them and makes it more\
    \ difﬁcult to interconnect with other agricultural\ncomponents. Also, the sensor\
    \ inertia phenomenon was observed in a high-speed WSN due to non-steep\nchanges\
    \ in humidity and soil temperature.\nIn the network layer, the basic challenges\
    \ regarding the operation of a crop monitoring system\nwith WSN and IoT technologies\
    \ include the limited computational capabilities of sensor nodes.\nThe restricted\
    \ memory of the nodes disables them to handle large amounts of communication data\n\
    and cluster-based interconnection procedures. Due to this fact, long data queues\
    \ are created in each\nnode, leading to greater delay in transmissions. The same\
    \ outcome can be triggered by the long\ncommunication distance of sensor nodes.\
    \ One major issue that routing algorithms must deal with in\nsuch cases is the\
    \ high level of energy consumption, which leads to a reduction in the overall\
    \ viability\nof the network. In precision agriculture monitoring systems routing\
    \ protocols should offer minimum\ndelay, be able to provide efﬁcient services\
    \ in many sensor nodes, while taking into account the limited\nresources. They\
    \ should also be capable of accepting all sorts of environments including severe\
    \ and loss\nenvironments, while providing information security and privacy. Most\
    \ routing protocols use some\nlocalization technique to obtain knowledge concerning\
    \ their locations. The performance of the routing\nprotocol is a function of network\
    \ size and transmission media. Therefore, transmission media of good\nquality\
    \ enhances the network performance directly.\nHowever, in many cases the failure\
    \ of such advanced monitoring system may be due to the\ngeographic, cultural or\
    \ socio-economic distance between system designers and the intended user\ncommunity.\
    \ Cost is an important limiting factor in the implementation of such systems.\
    \ The cost\ndepends to a great extent on the quality of the materials and the\
    \ topology of the network.\n10. Conclusions\nThis paper proposes the architectural\
    \ components of a smart farming monitoring system, based on\nmodern IoT communication\
    \ technologies and WSN capabilities, in cooperation with energy-saving\nprotocol\
    \ schemes. A use case study based on the DIAS project is also presented, enhancing\
    \ the reliability\nand contribution of our model. The IoT agricultural applications\
    \ enable farmers to collect and analyze\nmeaningful data. Large landowners and\
    \ small farmers should welcome the potential of IoT market\nfor agriculture by\
    \ installing smart technologies to increase competitiveness and sustainability\
    \ in their\nproductions. The rapid growth of population forces farmers to meet\
    \ the demand by implementing\nagricultural IoT solutions in a prosperous manner.\
    \ In the future, an in-depth study will be carried out\nregarding the real-time\
    \ performance of the proposed model in the DIAS project.\nInformation 2019, 10,\
    \ 348\n23 of 25\nAuthor Contributions: Conceptualization, A.T., P.S. and S.B.;\
    \ Methodology, A.T., P.S. and S.B.; Writing—original\ndraft, A.T.; Writing—review\
    \ & editing, P.S. and S.B.\nFunding: This research was co-funded by the European\
    \ Union and Greek national funds through the Operational\nProgram Competitiveness,\
    \ Entrepreneurship, and Innovation, grant number T1EDK-04873, project “Drone\n\
    innovation in Saffron Agriculture,” DIAS.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nReferences\n1.\nGuillermo, J.C.; García-Cedeño, A.;\
    \ Rivas-Lalaleo, D.; Huerta, M.; Clotet, R. IoT Architecture Based on\nWireless\
    \ Sensor Network Applied to Agricultural Monitoring: A Case of Study of Cacao\
    \ Crops in Ecuador.\nIn Advances in Information and Communication Technologies\
    \ for Adapting Agriculture to Climate Change II; Springer\nInternational Publishing:\
    \ Cham, Switzerland, 2019; pp. 42–57.\n2.\nDonzia, S.K.Y.; Kim, H.K.; Hwang, H.J.\
    \ A Software Model for Precision Agriculture Framework Based on\nSmart Farming\
    \ System and Application of IoT Gateway. In Computational Science/Intelligence\
    \ and Applied\nInformatics; Lee, R., Ed.; Springer International Publishing: Cham,\
    \ Switzerland, 2019; pp. 49–58. [CrossRef]\n3.\nKoksal, O.; Tekinerdogan, B. Architecture\
    \ design approach for IoT-based farm management information\nsystems. Precis.\
    \ Agric. 2018, 20, 926–958. [CrossRef]\n4.\nKamilaris, A.; Gao, F.; Prenafeta-Boldu,\
    \ F.X.; Ali, M.I. Agri-IoT: A semantic framework for Internet of\nThings-enabled\
    \ smart farming applications. In Proceedings of the 2016 IEEE 3rd World Forum\
    \ on Internet of\nThings (WF-IoT), Reston, VA, USA, 12–14 December 2016; pp. 442–447.\
    \ [CrossRef]\n5.\nFerrandez, J.; Manuel García-Chamizo, J.; Nieto-Hidalgo, M.;\
    \ Mora-Pascual, J.; Mora-Martínez, J. Developing\nUbiquitous Sensor Network Platform\
    \ Using Internet of Things: Application in Precision Agriculture. Sensors\n2016,\
    \ 16, 1141. [CrossRef] [PubMed]\n6.\nVasisht, D.; Kapetanovic, Z.; Won, J.; Jin,\
    \ X.; Chandra, R.; Sinha, S.; Kapoor, A.; Sudarshan, M.; Stratman, S.\nFarmBeats:\
    \ An IoT Platform for Data-Driven Agriculture. In Proceedings of the 14th USENIX\
    \ Symposium on\nNetworked Systems Design and Implementation (NSDI 17), Boston,\
    \ MA, USA, 27–29 March 2017; USENIX\nAssociation: Berkeley, CA, USA, 2017; pp.\
    \ 515–529;\n7.\nAhmed, N.; De, D.; Hussain, I. Internet of Things (IoT) for Smart\
    \ Precision Agriculture and Farming in Rural\nAreas. IEEE Internet Things J. 2018,\
    \ 5, 4890–4899. [CrossRef]\n8.\nJi, M.; Yoon, J.; Choo, J.; Jang, M.; Smith, A.\
    \ LoRa-based Visual Monitoring Scheme for Agriculture\nIoT. In Proceedings of\
    \ the 2019 IEEE Sensors Applications Symposium (SAS), Sophia Antipolis, France,\n\
    11–13 March 2019; pp. 1–6. [CrossRef]\n9.\nFerrandez, J.; Manuel García-Chamizo,\
    \ J.; Nieto-Hidalgo, M.; Mora-Martínez, J. Precision Agriculture Design\nMethod\
    \ Using a Distributed Computing Architecture on Internet of Things Context. Sensors\
    \ 2018, 18, 1731.\n[CrossRef] [PubMed]\n10.\nTriantafyllou, A.; Sarigiannidis,\
    \ P.; Lagkas, T.D. Network Protocols, Schemes, and Mechanisms for Internet\nof\
    \ Things (IoT): Features, Open Challenges, and Trends. Wirel. Commun. Mob. Comput.\
    \ 2018, 2018, 5349894.\n[CrossRef]\n11.\nTriantafyllou, A.; Tsouros, D.C. ; Sarigiannidis,\
    \ P.; Bibi, S. An Architecture model for Smart Farming.\nIn Proceedings of the\
    \ 15th International Conference on Distributed Computing in Sensor Systems (DCOSS),\n\
    Santorini Island, Greece, 29–31 May 2019; pp. 385–392. [CrossRef]\n12.\nInternational\
    \ Organization for Standardization; ISO/IEC 7498-1: The Basic Model; Technical\
    \ Report; 1994;\nISO Central Secretariat, Chemin de Blandonnet 8, CP 401 - 1214\
    \ Vernier, Geneva, Switzerland. Available\nOnline: https://www.iso.org/standard/20269.html\
    \ (accessed on 5 November 2019).\n13.\nVuolo, F.; D’Urso, G.; Michele, C.D.; Bianchi,\
    \ B.; Cutting, M. Satellite-based irrigation advisory services:\nA common tool\
    \ for different experiences from Europe to Australia. Agric. Water Manag. 2015,\
    \ 147, 82–95.\n[CrossRef]\n14.\nBauer, J.; Aschenbruck, N. Design and implementation\
    \ of an agricultural monitoring system for smart\nfarming. In Proceedings of the\
    \ 2018 IoT Vertical and Topical Summit on Agriculture—Tuscany (IOT Tuscany),\n\
    Tuscany, Italy, 8–9 May 2018; pp. 1–6. [CrossRef]\nInformation 2019, 10, 348\n\
    24 of 25\n15.\nCalera, A.; Campos, I.; Osann, A.; D’Urso, G.; Menenti, M. Remote\
    \ Sensing for Crop Water Management:\nFrom ET Modelling to Services for the End\
    \ Users. Sensors 2017, 17, 1104. [CrossRef] [PubMed]\n16.\nPetropoulos, G.P.;\
    \ Srivastava, P.K.; Piles, M.; Pearson, S. Earth Observation-Based Operational\
    \ Estimation of\nSoil Moisture and Evapotranspiration for Agricultural Crops in\
    \ Support of Sustainable Water Management.\nSustainability 2018, 10, 181. [CrossRef]\n\
    17.\nAnzola, J.; García Díaz, V.; Jiménez, A. WSN analysis in grid topology for\
    \ potato crops for IoT. In Proceedings\nof the 4th Multidisciplinary International\
    \ Social Networks Conference, Bangkok, Thailand, 17–19 July 2017;\npp. 1–7. [CrossRef]\n\
    18.\nSarigiannidis, P.; Lagkas, T.; Bibi, S.; Ampatzoglou, A.; Bellavista, P.\
    \ Hybrid 5G optical-wireless SDN-based\nnetworks, challenges and open issues.\
    \ IET Netw. 2017, 6, 141–148. [CrossRef]\n19.\nJawad, H.M.; Nordin, R.; Gharghan,\
    \ S.K.; Jawad, A.M.; Ismail, M.; Abu-AlShaeer, M.J. Power Reduction\nwith Sleep/Wake\
    \ on Redundant Data (SWORD) in a Wireless Sensor Network for Energy-Efﬁcient Precision\n\
    Agriculture. Sensors 2018, 18, 3450. [CrossRef] [PubMed]\n20.\nKone, C.T.; Haﬁd,\
    \ A.; Boushaba, M. Performance Management of IEEE 802.15.4 Wireless Sensor Network\
    \ for\nPrecision Agriculture. IEEE Sens. J. 2015, 15, 5734–5747. [CrossRef]\n\
    21.\nDu, K.; Sun, Z.; Zheng, F.; Chu, J.; Ma, J. Monitoring System for Wheat Meterological\
    \ Disasters using\nWireless Sensor Networks. In Proceedings of the 2017 ASABE\
    \ Annual International Meeting, Spokane, WA,\nUSA, 16–19 July 2017. [CrossRef]\n\
    22.\nHeble, S.; Kumar, A.; Prasad, K.V.V.D.; Samirana, S.; Rajalakshmi, P.; Desai,\
    \ U.B. A low power IoT network\nfor smart agriculture. In Proceedings of the 2018\
    \ IEEE 4th World Forum on Internet of Things (WF-IoT),\nSingapore, 5–8 February\
    \ 2018; pp. 609–614. [CrossRef]\n23.\nAnurag, D.; Roy, S.; Bandyopadhyay, S. Agro-sense:\
    \ Precision agriculture using sensor-based wireless mesh\nnetworks. In Proceedings\
    \ of the 2008 First ITU-T Kaleidoscope Academic Conference—Innovations in NGN:\n\
    Future Network and Services, Geneva, Switzerland, 12–13 May 2008; pp. 383–388.\
    \ [CrossRef]\n24.\nEl-kader, S.M.A.; El-Basioni, B.M.M. Precision farming solution\
    \ in Egypt using the wireless sensor network\ntechnology. Egypt. Inform. J. 2013,\
    \ 14, 221–233. [CrossRef]\n25.\nAquino-Santos, R.; González, A.; Edwards-Block,\
    \ A.; Virgen Ortíz, R. Developing a New Wireless Sensor\nNetwork Platform and\
    \ Its Application in Precision Agriculture. Sensors 2011, 11, 1192–1211. [CrossRef]\n\
    [PubMed]\n26.\nChen, Y.; Chanet, J.P.; Hou, K.M.; Shi, H.; de Sousa, G. A Scalable\
    \ Context-Aware Objective Function (SCAOF)\nof Routing Protocol for Agricultural\
    \ Low-Power and Lossy Networks (RPAL). Sensors 2015, 15, 19507–19540.\n[CrossRef]\
    \ [PubMed]\n27.\nWeber, P.; Jäckle, D.; Rahusen, D.; Sikora, A. IPv6 over LoRaWANTM.\
    \ In Proceedings of the 2016 3rd\nInternational Symposium on Wireless Systems\
    \ within the Conferences on Intelligent Data Acquisition and\nAdvanced Computing\
    \ Systems (IDAACS-SWS), Offenburg, Germany, 26–27 September 2016; pp. 75–79.\n\
    [CrossRef]\n28.\nSobral, J.V.V.; Rodrigues, J.J.P.C.; Rabêlo, R.A.L.; Saleem,\
    \ K.; Furtado, V. LOADng-IoT: An Enhanced Routing\nProtocol for Internet of Things\
    \ Applications over Low Power Networks. Sensors 2019, 19, 150. [CrossRef]\n[PubMed]\n\
    29.\nTukade, T.M.; Banakar, R. Data transfer protocols in IoT—An overview. Int.\
    \ J. Pure Appl. Math. 2018,\n118, 121–138.\n30.\nMihini/M3DA Speciﬁcation. Available\
    \ Online: https://wiki.eclipse.org/Mihini/M3DA_Speciﬁcation\n(accessed on 5 November\
    \ 2019).\n31.\nOMA LightweightM2M. Available Online: https://www.omaspecworks.org/what-is-oma-specworks/iot/\n\
    lightweight-m2m-lwm2m/ (accessed on 5 November 2019).\n32.\noneM2M—Standards for\
    \ M2M and the Internet of Things. Available Online: http://www.onem2m.org/\n(accessed\
    \ on 5 November 2019).\n33.\nDDS Foundation. Available Online: https://www.dds-foundation.org/what-is-dds-3/\
    \ (accessed on 5\nNovember 2019).\n34.\nFIWARE NGSI. Available Online: https://forge.ﬁware.org/plugins/mediawiki/wiki/ﬁware/index.php/\n\
    FI-WARE_NGSI_Context_Management_tutorial (accessed on 5 November 2019).\n35.\n\
    OGC Implementation Standards. Available Online: https://www.opengeospatial.org/docs/is\
    \ (accessed on\n5 November 2019).\nInformation 2019, 10, 348\n25 of 25\n36.\n\
    Eleftherakis, G.; Pappas, D.; Lagkas, T.; Rousis, K.; Paunovski, O.\nArchitecting\
    \ the IoT Paradigm:\nA Middleware for Autonomous Distributed Sensor Networks.\
    \ Int. J. Distrib. Sens. Netw. 2015, 2015, 139735.\n[CrossRef]\n37.\nCapella,\
    \ J.V.; Campelo, J.C.; Bonastre, A.; Ors, R. A Reference Model for Monitoring\
    \ IoT WSN-Based\nApplications. Sensors 2016, 16, 1816. [CrossRef] [PubMed]\n38.\n\
    Ryu, M.; Yun, J.; Miao, T.; Ahn, I.; Choi, S.; Kim, J. Design and implementation\
    \ of a connected farm for smart\nfarming system. In Proceedings of the 2015 IEEE\
    \ SENSORS, Busan, Korea, 1–4 November 2015; pp. 1–4.\n[CrossRef]\n39.\nWolfert,\
    \ S.; Ge, L.; Verdouw, C.; Bogaardt, M.J. Big Data in Smart Farming—A review.\
    \ Agric. Syst. 2017,\n153, 69–80. [CrossRef]\n40.\nWestoby, M.; Brasington, J.;\
    \ Glasser, N.; Hambrey, M.; Reynolds, J. ‘Structure-from-Motion’ photogrammetry:\n\
    A low-cost, effective tool for geoscience applications. Geomorphology 2012, 179,\
    \ 300–314. [CrossRef]\n41.\nHuang, Y.; Reddy, K.N.; Fletcher, R.S.; Pennington,\
    \ D. In Proceedings of the UAV Low-Altitude Remote\nSensing for Precision Weed\
    \ Management. Weed Technol. 2018, 32, 2–6. [CrossRef]\n42.\nHuang, Y.; Chen, Z.X.;\
    \ Tao, Y.U.; Huang, X.Z.; Gu, X.F. Agricultural remote sensing big data: Management\n\
    and applications. J. Integr. Agric. 2018, 17, 1915–1931. [CrossRef]\n43.\nKeswani,\n\
    B.;\nMohapatra,\nA.G.;\nMohanty,\nA.;\nKhanna,\nA.;\nRodrigues,\nJ.J.P.C.;\nGupta,\n\
    D.;\nde Albuquerque, V.H.C. Adapting weather conditions based IoT enabled smart\
    \ irrigation technique in\nprecision agriculture mechanisms. Neural Comput. Appl.\
    \ 2019, 31, 277–292. [CrossRef]\n44.\nHamouda, Y.E.M.; Msallam, M.M. Smart heterogeneous\
    \ precision agriculture using wireless sensor network\nbased on extended Kalman\
    \ ﬁlter. Neural Comput. Appl. 2019, 31, 5653–5669. [CrossRef]\n45.\nCambra, C.;\
    \ Sendra, S.; Lloret, J.; Garcia, L. An IoT service-oriented system for agriculture\
    \ monitoring.\nIn Proceedings of the 2017 IEEE International Conference on Communications\
    \ (ICC), Paris, France,\n21–25 May 2017; pp. 1–6. [CrossRef]\n46.\nYoo, S.; Kim,\
    \ J.; Kim, T.; Ahn, S.; Sung, J.; Kim, D. A2S: Automated Agriculture System based\
    \ on WSN.\nIn Proceedings of the 2007 IEEE International Symposium on Consumer\
    \ Electronics, Irving, TX, USA,\n20–23 June 2007; pp. 1–5. [CrossRef]\n47.\nLagkas,\
    \ T.; Argyriou, V.; Bibi, S.; Sarigiannidis, P. UAV IoT Framework Views and Challenges:\
    \ Towards\nProtecting Drones as “Things”. Sensors 2018, 18, 4015. [CrossRef] [PubMed]\n\
    48.\nSharma, G.; Bala, S.; Verma, A.K. Security Frameworks for Wireless Sensor\
    \ Networks—Review. Procedia\nTechnol. 2012, 6, 978–987. [CrossRef]\n49.\nPu, C.Energy\
    \ Depletion Attack Against Routing Protocol in the Internet of Things. In Proceedings\
    \ of the\n2019 16th IEEE Annual Consumer Communications Networking Conference\
    \ (CCNC), Las Vegas, NV, USA,\n11–14 January 2019; pp. 1–4. [CrossRef]\n50.\n\
    Savarimuthu, N.; Vijayalakshmi, K.; Padmapriya, V.\nA Review of Network Layer\
    \ Attacks and\nCountermeasures in WSN. IJESC 2018, 10. [CrossRef]\n51.\nBeltran,\
    \ V.; Skarmeta, A.F.\nOverview of Device Access Control in the IoT and its Challenges.\n\
    IEEE Commun. Mag. 2019, 57, 154–160. [CrossRef]\n52.\nKumar, R.; Singh, V.; Devi,\
    \ K.; Sharma, M.; Singh, M.; Ahuja, P. State of Art of Saffron (Crocus sativus\
    \ L.)\nAgronomy: A Comprehensive Review. Food Rev. Int. 2008, 25, 44–85. [CrossRef]\n\
    53.\nMelfou, K.; Loizou, E.; Oxouzi, E.; Papanagiotou, E. Economic Performance\
    \ of Quality Labeled Saffron in\nGreece. Procedia Econ. Financ. 2015, 24, 419–425.\
    \ doi:10.1016/S2212-5671(15)00698-X. [CrossRef]\n54.\nvan Evert, F.; Gaitán-Cremaschi,\
    \ D.; Fountas, S.; Kempenaar, C. Can precision agriculture increase the\nproﬁtability\
    \ and sustainability of the production of potatoes and olives?\nSustainability\
    \ 2017, 9, 1863.\n[CrossRef]\n55.\nErickson, B.; Widmar, D.A. 2015 Precision Agricultural\
    \ Services Dealership Survey Results; Purdue University:\nWest Lafayette, IN,\
    \ USA, 2015\n56.\nBaio, F.; Silva, S.; Camolese, H.; Neves, D. Financial analysis\
    \ of the investment in precision agriculture techniques\non cotton crop. Eng.\
    \ Agrícola 2017, 37, 838–847. [CrossRef]\nc⃝ 2019 by the authors. Licensee MDPI,\
    \ Basel, Switzerland. This article is an open access\narticle distributed under\
    \ the terms and conditions of the Creative Commons Attribution\n(CC BY) license\
    \ (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: (Triantafyllou et al. 2019)
  journal: Information (Basel)
  limitations: 'The paper does not provide a comprehensive evaluation or comparison
    of different data transmission protocols and technologies for automated irrigation
    management systems. It primarily focuses on MQTT and client-server IoT networks,
    without exploring alternative protocols or technologies in detail.


    The paper lacks specific examples or case studies to illustrate the practical
    implementation and benefits of using MQTT and client-server IoT networks for real-time
    data transmission in automated irrigation systems. Providing real-world examples
    would enhance the paper''s practical relevance and demonstrate the effectiveness
    of the proposed approach.


    The paper does not delve into advanced data analytics techniques or machine learning
    algorithms that can be integrated with automated irrigation management systems
    to optimize water usage and crop yields. Incorporating a discussion on data analytics
    and machine learning would broaden the paper''s scope and provide a more comprehensive
    view of the topic.'
  pdf_link: https://www.mdpi.com/2078-2489/10/11/348/pdf
  publication_year: 2019
  relevance_evaluation: 'The paper is relevant to the specific point of focus within
    the literature review, which is "Exploration of MQTT and client-server IoT networks
    for real-time data transmission in precision farming systems." The paper provides
    a comprehensive overview of data collection, transmission protocols and technologies,
    challenges, and solutions for real-time data transmission in automated irrigation
    management systems. It specifically discusses the use of MQTT and client-server
    IoT networks for real-time data transmission in this context, addressing key issues
    such as efficiency, reliability, and security.


    The paper also provides insights into the broader context of automated irrigation
    management systems and precision farming, highlighting the importance of data
    collection and transmission for optimizing water resources and enhancing agricultural
    productivity. Overall, the paper offers valuable information and analysis relevant
    to the exploration of MQTT and client-server IoT networks for real-time data transmission
    in precision farming systems.'
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Precision Agriculture: A Remote Sensing Monitoring System Architecture †'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22072650
  analysis: '>'
  authors:
  - Omer Gurewitz
  - Mark Shifrin
  - Efi Dvir
  citation_count: 13
  explanation: 'Network coding (NC) is a technique that can be utilized to improve
    the network’s throughput, efficiency, and scalability, which can also be leveraged
    to improve the network resilience to attacks and eavesdropping. NC allows the
    network’s intermediate nodes (e.g., relays) to accumulate arriving messages and
    forward a newly encoded message, which is a linear combination of the accumulated
    packets, multiplying them by coefficients chosen from a finite field. The manner
    in which nodes encode and decode messages depends on the selected coding scheme.
    Network coding (NC) over wireless communication can reduce the number of transmissions
    by leveraging the fact that a single transmission is overheard by multiple nodes
    in the transmitter’s vicinity, and can therefore be utilized by each of these
    nodes, which will forward a coded packet with unique coefficients comprising its
    own message and the messages it overheard (e.g., [155]).

    In WSNs, NC can be utilized for various traffic patterns, including data dissemination
    (one-to-many communication) and data gathering. Works on energy-efficient NC-based
    dissemination can be followed in the survey [156], with multi-hop routing being
    emphasized. In data dissemination in which the base station/sink distributes information
    to the sensor nodes, NC is beneficial mainly for distributing control messages
    (broadcast or multicast traffic) or, in case of unicast traffic, for recovering
    lost packets (retransmissions). The latter utilization relies on the fact that
    different nodes heard or did not hear different packets. Accordingly, nodes store
    packets they overheard, even if not destined to themselves. The transmitter (e.g.,
    access-point) accumulates several packets that need to be retransmitted, each
    for a different receiver. It transmits a coded packet that is a composite of these
    accumulated packets. Each receiver can decode a missing packet by utilizing its
    stored overheard packets (e.g., [157–162], where the last two mainly focus on
    data dissemination of control management messages. It is noteworthy that Cohen
    et al. [157] also present a successful real HW radio deployment of their scheme.
    XOR-CoW [163] exploits the same concept to design an IoT protocol in which relays
    transmit coded packets that mix downlink and uplink traffic. Similar to other
    previously mentioned studies, the coding scheme by Swamy et al. [163] is over
    finite Galois field of size 2 (GF(2)) (i.e., XORing the coded packets).'
  extract_1: Network coding (NC) is a technique that can be utilized to improve the
    network’s throughput, efficiency, and scalability, which can also be leveraged
    to improve the network resilience to attacks and eavesdropping.
  extract_2: In WSNs, NC can be utilized for various traffic patterns, including data
    dissemination (one-to-many communication) and data gathering.
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Gurewitz, O.; Shifrin, M.;\nDvir, E. Data Gathering Techniques\nin WSN:\
    \ A Cross-Layer View. Sensors\n2022, 22, 2650. https://dx.doi.org/\n10.3390/s22072650\n\
    Academic Editor: Carles Gomez\nReceived: 8 January 2022\nAccepted: 24 March 2022\n\
    Published: 30 March 2022\nPublisher’s Note: MDPI stays neutral\nwith regard to\
    \ jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nData Gathering Techniques in WSN: A Cross-Layer View\n\
    Omer Gurewitz *\n, Mark Shifrin\nand Eﬁ Dvir\nSchool of Electrical and Computer\
    \ Engineering, Ben-Gurion University of the Negev, Beer-Sheva 8410501, Israel;\n\
    markshi@post.bgu.ac.il (M.S.); eﬁd@post.bgu.ac.il (E.D.)\n* Correspondence: gurewitz@bgu.ac.il\n\
    Abstract: Wireless sensor networks (WSNs) have taken a giant leap in scale, expanding\
    \ their applica-\nbility to a large variety of technological domains and applications,\
    \ ranging from the Internet of things\n(IoT) for smart cities and smart homes\
    \ to wearable technology healthcare applications, underwater,\nagricultural and\
    \ environmental monitoring and many more. This expansion is rapidly growing every\n\
    passing day in terms of the variety, heterogeneity and the number of devices which\
    \ such applications\nsupport. Data collection is commonly the core application\
    \ in WSN and IoT networks, which are\ntypically composed of a large variety of\
    \ devices, some constrained by their resources (e.g., processing,\nstorage, energy)\
    \ and some by highly diverse demands. Many challenges span all the conceptual\n\
    communication layers, from the Physical to the Applicational. Many novel solutions\
    \ devised in the\npast do not scale well with the exponential growth in the population\
    \ of the devices and need to\nbe adapted, revised, or new innovative solutions\
    \ are required to comply with this massive growth.\nFurthermore, recent technological\
    \ advances present new opportunities which can be leveraged in\nthis context.\
    \ This paper provides a cross-layer perspective and review of data gathering in\
    \ WSN and\nIoT networks. We provide some background and essential milestones that\
    \ have laid the foundation\nof many subsequent solutions suggested over the years.\
    \ We mainly concentrate on recent state-of-\nthe-art research, which facilitates\
    \ the scalable, energy-efﬁcient, cost-effective, and human-friendly\nfunctionality\
    \ of WSNs and the novel applications in the years to come.\nKeywords: wireless\
    \ sensor networks (WSNs); Internet of things (IoT); data gathering; wearables;\n\
    compressed sensing; network coding; mobile sink; energy harvesting\n1. Introduction\n\
    Wireless sensor networks (WSN) are data measurement and gathering networks\nbased\
    \ on small hardware (HW) units capable of sensing, monitoring, or measuring their\n\
    surroundings. The sensed data are transmitted directly or by relay via other sensors\
    \ to\nsome sink or server or a base station. The ultimate objective of such a\
    \ conﬁguration is to\nprovide control or exploration capabilities over an area\
    \ where the network is deployed.\nWSN characteristics can vary substantially:\
    \ they can be composed of a few to hundreds of\nthousands of sensors; the monitored\
    \ terrain can range from a small coverage area (e.g., the\nhuman body) to a vast\
    \ realm (e.g., a forest area for ﬁre detection); the sensed variables of\ninterest\
    \ of the surroundings are diverse (e.g., weather or health parameters, acceleration,\n\
    pollution); and the sensors can have different characteristics (e.g., size, computational\n\
    power, energy source).\nThe Internet of things (IoT) aims to improve day-to-day\
    \ life. The concept includes\nsmart cities, smart homes, pervasive health care,\
    \ assisted living, environmental monitoring,\nsurveillance, and so on. The IoT\
    \ paradigm relies on interconnecting a large number of\ndevices (things) linked\
    \ by the Internet via heterogeneous access networks through which\nthey can exchange\
    \ information with one or more Internet gateways that can process the\ndata, take\
    \ action, and forward them to another destination if needed. Since many IoT\n\
    devices are expected to be wireless, and since sensing is one of the main tasks\
    \ and tools\nutilized by the IoT paradigm, IoT systems will rely extensively on\
    \ WSN technology. The\nSensors 2022, 22, 2650. https://doi.org/10.3390/s22072650\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 2650\n2 of 44\nscale of\
    \ scenarios where WSN are deployed nowadays is vast. Traditionally, WSN were\n\
    classiﬁed based on their placement (e.g., terrestrial, underground, multimedia)\
    \ [1]. Since\nWSNs are closely associated with IoT, contemporary classiﬁcation\
    \ tends to re-attribute the\nnotions of the WSN domain to the IoT domain [2] and\
    \ classify them based on their primary\nobjectives, such as smart cities [3,4],\
    \ healthcare [5], retail and leisure [6], utilities (e.g., smart\nhome energy\
    \ control, water metering and leak detection, and other general infrastructure\n\
    monitoring networks) [7], agriculture and environmental safety (e.g., smart farming\
    \ and\nharvesting, pest control [8–10], seismology monitoring [11,12], oceanology\
    \ [13]), and more.\nAs previously explained, one of the main tasks of both WSN\
    \ and IoT systems is\ndata collection and dissemination. Reports are collected\
    \ from the devices, and updates\nand operational assignments are distributed.\
    \ Maintenance and functional assessments\nare also collected and disseminated.\
    \ Data collection and dissemination in very dense\nnetworks such as WSNs and IoT\
    \ networks which span heterogeneous devices, a signiﬁcant\npercentage of which\
    \ are expected to be small, with very constrained processing, storage,\nand energy\
    \ resources and with minimal network capabilities, is challenging and draws\n\
    signiﬁcant attention both by the industrial and academic communities. Some of\
    \ these\nchallenges include: (i) Information management — the amount of information\
    \ collected or\nneeding to be disseminated to the relevant entities is enormous,\
    \ and some is expected to be\nredundant, both in terms of the information sent\
    \ by each device, which can be compressed,\nand in terms of same information received\
    \ by different entities. Accordingly, innovative\ntechniques are required for\
    \ data compression to reduce transmitted data over wireless\nchannels and aggregation\
    \ techniques that exploit the redundancy between information sent\nby the different\
    \ entities. (ii) Data analysis and reaction — the expected vast data exchange\n\
    and the low latency requirement (at least for some of the information collected)\
    \ require\nprocessing and analysis of data in real-time or near real-time, to\
    \ enable timely decision\nmaking and instantaneous action-taking.\nThe ability\
    \ to successfully transmit and gather vast streams of data incoming from an\n\
    enormous number of devices and sensors and ﬁnally to successfully analyze them,\
    \ in order\nto automatically control a much larger scope of everyday life systems,\
    \ directly couples\nthe process of data gathering with Big Data related challenges\
    \ (e.g., [14–17]). Furthermore,\nleveraging Cloud Computing platforms offers signiﬁcant\
    \ advances in data analytical abil-\nities (e.g., [18–20]). It provides new horizons\
    \ to further develop and increase the size of\nWSN/IoT networks both in the sense\
    \ of the number of sensing units and in the sense of\nthe amount of the acquired\
    \ data (e.g., [21–23]). (iii) Connectivity — collecting and dissem-\ninating data\
    \ from and to many devices, potentially through vast, dense, heterogeneous\nnetworks,\
    \ will be one of the biggest challenges of the future of IoT; accordingly, novel\n\
    MAC protocols and coding schemes should be devised to comply with this challenge.\
    \ With\nthis respect, air time utilization and energy efﬁciency are of primary\
    \ importance for the\nMAC layer protocol design. Any MAC layer protocol should\
    \ ensure that devices utilize the\nwireless channel frugally and with minimum\
    \ energy consumption. (iv) Security and Pri-\nvacy — Connecting enormous numbers\
    \ of devices to the Internet exposes the IoT network\nto serious security vulnerabilities.\
    \ All the more so since the relevant entities are limited.\nAccordingly, issues\
    \ such as authenticity, data encryption, and vulnerability to attacks (e.g.,\n\
    device impersonation) are critical for the IoT paradigm’s continuous growth (e.g.,\
    \ [24]).\nIn addition, since the information transmitted over the WSN and IoT\
    \ networks can be\nhighly conﬁdential (e.g., health reports, device tracking),\
    \ the collection and dissemination\nof this information create signiﬁcant challenges\
    \ related to data protection and privacy.\nThis survey will explore the state-of-the-art\
    \ of data collection and dissemination as-\npects in WSNs and IoT environments\
    \ mentioned above. We will review essential milestones\nyet mainly focus on recent\
    \ publications and present the new trends and research directions.\nOur resources\
    \ included mainly Google Scholar, IEEE Xplore and our university’s library\ndatabases,\
    \ utilizing the keywords of this paper. We also used important references from\n\
    the bilbiography of the initial papers and ones that cited them. Data collection\
    \ spans all the\nnetworking layers, from the physical implementation of transmitting\
    \ bits across a commu-\nSensors 2022, 22, 2650\n3 of 44\nnication medium to the\
    \ application layer. Due to the wide-ranging scope of the topic, we\nwill not\
    \ be able to cover all its aspects (for example, in this paper, we will not discuss\
    \ the\ncritical topic of security and privacy). Some of the issues will be covered\
    \ more thoroughly\nthan others. However, since some of the topics we discussed\
    \ rely on the general wireless\ncommunication technology and on broad setup protocols\
    \ which are not data-gathering ori-\nented per se, on some of the topics, we will\
    \ provide a more comprehensive background and\ndescribe protocols that are aimed\
    \ at a broader domain than data-gathering. For example,\nmany medium access control\
    \ (MAC) and wireless routing protocols are designed for a\nwide range of topologies,\
    \ trafﬁc patterns, quality of service requirements, etc. Even though\nthey can\
    \ be applied, they are not explicitly designed for data gathering. We will include\n\
    some more general yet essential studies in our survey. To grasp the whole picture\
    \ and to\nbetter understand some data-gathering-related issues, in some cases,\
    \ we will delve into the\npertinent background and stray into some peripheral\
    \ topics. We will cover topics related to\nall layers of the protocol stack. Sometimes\
    \ classiﬁcation based on a stack is not clear-cut, as\nsome of the issues involve\
    \ multiple stacks.\nIn particular, the survey comprises the following topics:\n\
    The device’s platform, which accommodates the sensing unit, can highly impact\
    \ the\nperformance of the application utilizing it and speciﬁcally the data-gathering\
    \ application,\nand vice versa, the application (e.g., data gathering) can impact\
    \ the platform architecture\nwhen designed in application-oriented manner or when\
    \ some of the essential features and\nrequirements are taken into account in the\
    \ platform design process. The same mutual\neffect also applies to the WSN infrastructure\
    \ and the network architecture (e.g., topology,\nsystem organization). We start\
    \ with reviewing studies pertaining to the general device’s\nplatform and infrastructure-related\
    \ novelties (Section 2). We cover new domains which\nwere only recently exposed\
    \ to WSN and IoT networks and introduced new opportunities for\nalgorithm design\
    \ in such networks. Some of these novel technologies have revolutionized\nthe\
    \ way applications can utilize each particular device as well as the shared network\
    \ and\nhave enabled new algorithm opportunities and design challenges across the\
    \ entire protocol\nstack which we describe throughout this survey.\nNext follows\
    \ Section 3 which provides a focused summary of recent advances in\ncompressed\
    \ sensing—a signal processing technique that can take advantage of sparsity\n\
    and redundancy of the data. In the context of data gathering procedures, compressed\n\
    sensing is utilized to reduce report payload at several levels, which include\
    \ reduction of\nthe sensed data size and the transmitted report size, by pruning\
    \ the devices that need to\nsend reports and by compressing the combined relayed\
    \ data before forwarding it toward\nits destination (the sink). We provide a basic\
    \ compressed sensing background and review\nthe state-of-the-art in the context\
    \ of data gathering in WSN.\nSection 4 considers the medium access control (MAC)\
    \ sublayer. In wireless communi-\ncation, channel utilization is critical and\
    \ broadly inﬂuences several performance aspects\nsuch as throughput, latency,\
    \ power utilization, delivery ratio, and more. Over the years,\nnumerous algorithms\
    \ and protocols have been suggested for wireless channel access in\ngeneral, and\
    \ WSNs with their speciﬁc characterization in particular. In Section 4, we review\n\
    only a small fraction of the countless MAC protocols that have been designed for\
    \ WSNs.\nWe mainly concentrate on protocols that highlight a conceptual approach\
    \ or trend and\nreview some of the more recent MAC protocols in data gathering\
    \ in WSN and IoT networks,\nwhich address new challenges such as highly dense\
    \ networks, congested channels, and\nvery limited resources.\nWe ascend the protocol\
    \ stack and in Section 5 we address routing aspects. As with the\nMAC sublayer,\
    \ routing protocols in multi-hop wireless networks have also been extensively\n\
    studied. We start by providing several milestones in the context of data gathering\
    \ in\nWSNs. We continue with more recent studies which mainly include enhancements\
    \ to the\naforementioned protocol, taking into account new challenges such as\
    \ scalability demands\nand energy-related advances which present new opportunities\
    \ yet impose new constraints.\nWe continue with studies that leverage the multi-hop\
    \ topology to realize a network-coding\nSensors 2022, 22, 2650\n4 of 44\nmechanism.\
    \ Finally, we discuss a new paradigm that extends the traditional setup in which\n\
    the sensed data need to be routed toward a static central monitoring station (sink),\
    \ and\nutilize a mobile sink (or sinks) that traverse the terrain and can help\
    \ in collecting the devices’\nreports. We review several state-of-the-art schemes\
    \ in this mobile sink paradigm.\nThe ﬁnal section of this survey is dedicated\
    \ to wearable technology in the form of\nsmart devices that are attached to the\
    \ human body to monitor the user and their envi-\nronment. Wearable technology\
    \ involves challenges in all the aspects discussed in the\nprevious sections,\
    \ yet they introduce new opportunities for high-demand applications with\nunique\
    \ performance requirements and constraints. Even though we do not attempt to\n\
    provide a comprehensive review of the numerous applications suggested over the\
    \ years, we\nemphasize this prominent application layer and discuss several applications\
    \ in Section 6.\nAs previously explained, we roughly partitioned the topics covered\
    \ in this survey\nbased on the communication layers and organized the sections\
    \ accordingly. We note\nthat this partition is somehow artiﬁcial, as many innovations\
    \ in data-gathering involve\nmore than one layer. Furthermore, many technological\
    \ advances and research areas affect\nmultiple domains in different layers and\
    \ are visited in more than one section. Figure 1\ndepicts the schematic structure\
    \ of the paper. In the ﬁgure, the ovals represent the main\nresearch domains covered\
    \ in the paper. The hexagons represent the most prominent\nresearch tool innovations\
    \ and techniques utilized by data-gathering, which are covered in\nthe paper.\
    \ The arrows represent the inter-relation between them. For example, technologies\n\
    such as energy harvesting (EH) or Machine Learning (ML) and Artiﬁcial Intelligence\n\
    (AI) are utilized by innovations in all the layers starting from the platform\
    \ hardware to\nthe application layer. However, network coding is mainly utilized\
    \ by the network layer.\nUnmanned Aerial Vehicle (UAV) is leveraged by both the\
    \ MAC and the Network layers.\nArchitecture\nSection 2\nMAC\nSection 4\nRouting\n\
    Section 5\nWearables \nand WBAN\nSection 6\nApplication\nOriented\nMobile Sink\
    \ \n& UAV\nUtilization\nCompressed\nSensing\nSection 3\nNetwork\nCoding\nMachine\n\
    Learning\nEnergy \nHarvesting\nCloud\nBased\nStandards \n& Protocols\nFigure 1.\
    \ Research directions. While we organize the sections according to the layers,\
    \ this diagram\nshows how research directions are connected across different layers.\
    \ The ovals denote the major\nresearch areas (which are associated with sections\
    \ in the paper), and the hexagons refer to more\nspeciﬁc sub-areas, technological\
    \ innovations, and research tools. The arrows represent a schematic\ninter-relation\
    \ between them.\n2. WSN Architecture—Arising Platforms and Novel Infrastructure\
    \ Concepts\nOur primary focus in this survey is data gathering in the context\
    \ of wireless commu-\nnication networks. The units that generate the data (typically\
    \ sensors) are application-\ndependent and can serve a large variety of realms,\
    \ e.g., health, environmental, activity\nmonitoring, etc. Even though the sensing\
    \ unit is the essence, we will not cover it thor-\noughly, and we will only skim\
    \ through it sporadically when discussing applications and\nSensors 2022, 22,\
    \ 2650\n5 of 44\ntheir speciﬁc requirements. Nonetheless, the term “sensor” typically\
    \ refers to the whole\nplatform or device in which the sensing unit is only one\
    \ component out of many, such as\nprocessing unit, transceiver unit, power unit,\
    \ antenna, and more, several of which can be\nintegrated into the device according\
    \ to the particular application needs. The sensing unit\nitself has its own requirements\
    \ and constraints, and in many situations cannot be altered.\nIn addition, the\
    \ integrated unit architecture and the platform design can be subject to\nvarious\
    \ stringent constraints. For example, size requirements can impose a strict constraint\n\
    on the device design; low power consumption, low production cost, and self-operation\
    \ can\nrepresent additional constraints. Accordingly, the device architecture\
    \ is fundamental and\naffects many other factors in the system. For example, power\
    \ supply affects the life span\n(or the time needed to replace the batteries);\
    \ it also affects transmission range, memory,\nand processing unit, which in turn\
    \ can affect the algorithms that can be executed on the\ndevice, etc.\nExtensive\
    \ research has been conducted on the design and architecture of the end\ndevice\
    \ and the infrastructure. We leave a detailed description of the basic components\
    \ such\nas the sensing unit, transceiver, antenna, processing unit, etc., as well\
    \ as the underlying\nhardware beyond the scope of this survey. To this end, the\
    \ objective of the rest of this section\nrefers to how data-gathering objectives\
    \ may impact both the design of speciﬁc sensors\nand the WSN infrastructure. By\
    \ the latter, we mean topology, system organization used to\ngather the data,\
    \ and algorithms to implement the data gathering. It is noteworthy that the\n\
    sensors’ characteristics also dictate the topology and, consequently, the data\
    \ aggregation\nalgorithms. In the sequel, we mention several platform architecture\
    \ designs as well as\nseveral network-wide architectures, mostly from recent years.\
    \ Additional similar studies\nappear throughout the survey, yet they are organized\
    \ in chapters according to the area in\nwhich they propose the most signiﬁcant\
    \ novelty. Figure 2 presents a schematic description\nof the section. Since several\
    \ papers presented in this section cover more than one topic, and\nsince, as previously\
    \ mentioned, this section is not presumed to provide an exhaustive list\nof all\
    \ papers or topics covered by the scope of WSN architecture, and some of the topics\
    \ are\nnot covered at all or covered by only a few representative papers, the\
    \ description is broad\nand only highlights the main topics covered in the section.\n\
    Architecture\nSection 2\nSensor’s Platform\nNetwork\nPower Supply (Battery\\EH)\
    \ \nSection 2.2\nApplication Oriented\nSection 2.1\nTopology\nSection 2.3\nApplication\
    \ Oriented\nSection 2.4\nFigure 2. Schematic description highlighting the main\
    \ topics covered in the section.\n2.1. Application-Oriented\nMany sensor platforms\
    \ are application-oriented. Occasionally, their suggested ar-\nchitecture can\
    \ be applied to other applications; however, their design and evaluation are\n\
    typically aimed at a speciﬁc one. Hence, in many cases, both hardware and software\n\
    technological developments are introduced for effective functioning. One of the\
    \ most\ncommon tasks of WSN is the obvious one of monitoring a terrain. There\
    \ are many variants\nof WSN monitoring. For example, the requirement can be to\
    \ monitor every point in the\nField of Interest (FoI) vs. monitoring a limited\
    \ number of speciﬁc locations or targets (aka\ntarget coverage) vs. just monitoring\
    \ a border of a region to detect intruders (aka barrier\ncoverage). The coverage\
    \ problem typically involves selecting a subset of sensors that fulﬁll\nSensors\
    \ 2022, 22, 2650\n6 of 44\nthe monitoring objective while maintaining network\
    \ connectivity. The sensors’ capabilities\nand the monitoring objective determine\
    \ the network topology.\nWe present several recent examples that mainly concentrate\
    \ on connectivity and data\ngathering under the constraints of the monitoring\
    \ objective. Biswas et al. [25] focus on\nenergy-efﬁcient data gathering in target\
    \ coverage problem, in which an n sensor WSN\nneeds to monitor T speciﬁc targets,\
    \ and there exists a route (multi-hop) from each source to\nthe sink. The paper\
    \ assumes that the source nodes that sense the targets and initiate data\npackets\
    \ into the network are known, and deals with the forwarding of these packets to\n\
    the sink. The paper proposes a distributed data gathering algorithm in which after\
    \ each\nnode discovers its neighbors and their hop-count to the sink, it will\
    \ forward data packets\n(when required) to its neighbor with maximum remaining\
    \ energy and a lower hop count\nto the sink (the remaining energy is assumed to\
    \ be known). Ammari [26] focuses on the\nk-coverage problem in which each point\
    \ in the FoI is required to be covered by at least k\nsensors at any time, and\
    \ each active sensor participating in the monitoring task is required\nto be connected\
    \ to the sink (possibly via a multi-hop route). The paper assumes that the\nsensors\
    \ are heterogeneous (they do not have the same characteristics) and mobile, hence\n\
    the sensors can move toward any region of interest in the deployment ﬁeld to participate\
    \ in\nany deﬁcient k-coverage area and can also act as mobile proxy sinks that\
    \ collect sensed data\nfrom the sensors and deliver them to the sink. Ammari [26]\
    \ partitions the problem into\ntwo problems which are solved sequentially. Namely,\
    \ the mobile k-coverage problem, which\nselects a minimum subset of active sensors\
    \ that solve the k-coverage problem and the data\ngathering problem, and devise\
    \ a forwarding scheme from the active sensors to the sink such\nthat the energy\
    \ consumption due to sensor mobility and communication is minimized.\nMdemaya\
    \ and Bomgni [27] utilize mobile sensors to achieve area coverage. These\nmobile\
    \ sensors can be moved and relocated to cover holes after the random deployment.\n\
    The authors suggest a two-phase approach. According to the ﬁrst one, the monitoring\n\
    area after the initial random deployment is identiﬁed (by the BS), and mobile\
    \ nodes are\nrelocated to cover the monitoring holes detected after the initial\
    \ deployment, trying to\nensure full coverage of the AoI by the static and relocated\
    \ sensors. At the second stage, the\nproposed algorithm schedules the sensors’\
    \ activity (awakening and transmission times)\nthat minimizes the energy consumption\
    \ of the nodes while collecting and sending data\nto the base station. To this\
    \ end, the paper distinguishes between “normal” nodes and\ncluster heads. A survey\
    \ that reviews algorithms and techniques related to the connectivity-\ncoverage\
    \ issues in WSN can be found in Boukerche and Sun [28].\nOccasionally, WSN architectures\
    \ and designs are more application-oriented. For\nexample, Cerchecci et al. [29]\
    \ propose a sensor node topology that uses low-cost and low-\npower components\
    \ for energy-efﬁcient waste management in the context of smart cities.\nThe architecture\
    \ described in [29] suggests a node architecture for measuring the ﬁlling\nlevel\
    \ of trash bins and utilizes LoRa LPWAN (low-power wide-area network) technology\n\
    for real-time data transmission to collect the measured data in a remote data\
    \ collection\ncenter. The design of a sensor node that can detect the presence\
    \ of water on home ﬂoors and\nprovide early warning of water leaks is suggested\
    \ by Teixidó et al. [30]. The paper presents\nand deploys both hardware and software\
    \ of the network components (ﬂood sensing nodes,\nactuator nodes, and a control\
    \ central); communication within the sensor network relies\non the IEEE 802.15.4\
    \ standard. Borrero and Zabalo [31] present a low-cost agriculture-\noriented\
    \ system. The suggested system is based on LoRa technology and can collect various\n\
    measurements, such as humidity, ambient temperature, soil moisture, and temperature,\n\
    and enables a farmer to access all of the information necessary to achieve efﬁcient\
    \ irrigation\nmanagement of crops in real time. The developed wireless sensor\
    \ node has been optimized\nboth in hardware and software and exhibits very low\
    \ power consumption.\n2.2. Energy-Harvesting (EH)\nOne of the main concerns of\
    \ the sensor platform’s design is the source of energy.\nTypically, the energy\
    \ source is a battery attached to the sensor platform. It is utilized to\nSensors\
    \ 2022, 22, 2650\n7 of 44\nprovide power to all the required operations, e.g.,\
    \ wireless transmission, computation,\nmemory, etc. The battery properties (e.g.,\
    \ technology used and size) can determine its\nlifespan as well as several other\
    \ properties, e.g., transmission range. In many systems,\nthe battery is a burden,\
    \ as it increases the cost of the system, constrains the platform size,\nand most\
    \ importantly, requires to be replaced occasionally. The challenge of saving power\n\
    spans all the protocol stack; energy considerations show up in each part of this\
    \ survey. As\nwith the other layers, PHY layer innovations have also been suggested\
    \ as to how to utilize\nbattery power efﬁciently.\nAn alternative approach to\
    \ overcome the battery hurdle is to embed a mechanism\nthat harvests energy. Such\
    \ a mechanism can be embedded alongside the battery to ex-\ntend its lifespan,\
    \ or more commonly, it can completely replace the battery so that all the\nfunctions\
    \ rely on it. Batteryless WSNs that rely solely on energy-harvesting (EH)-WSN\n\
    can compromise performance; for example, their transmission range can be shorter,\
    \ the\navailable energy can constrain their awake time, and so on. One of the\
    \ main challenges is to\nlocate the ambient resource from which the energy can\
    \ be harvested. Many studies have ex-\nplored different energy sources that can\
    \ supplement energy, such as solar, vibration, wind,\nmotion, electromagnetic,\
    \ and more. Numerous comprehensive technological overviews\nwith their advantages\
    \ and limitations, energy harvesting modeling, challenge expectations,\nand prospects\
    \ can be found in, for example, Refs. [32–37]. A more recent system design\nreview\
    \ on battery-free and energy-aware WSNs, which utilize ambient energy or wireless\n\
    energy transmission, is given in [38]. It addresses energy supply strategies and\
    \ provides\ninsight into energy management methods and possibilities for energy\
    \ saving at the node\nand network levels.\nKhalid et al. [39] suggest a zero-power\
    \ wireless sensor architecture that consists of\na capacitive sensor (a sensor\
    \ that associates the parameter of interest with the change in\nthe capacitance),\
    \ an RFID chip, a circulator (allows power ﬂow between three deﬁned\nports), and\
    \ an antenna (batteryless). The conceptual idea is that the sensor reﬂects the\n\
    signal received from the RFID, with a change in phase, which is relative to the\
    \ sensed value.\nDesign and implementation of an energetically autonomous WSN\
    \ platform for ambient\nmonitoring in indoor environments are suggested by Abella\
    \ et al. [40]. The proposed self-\npowered autonomous sensor node platform relies\
    \ on embedded photo-voltaic (PV) panels\nto harvest the energy, a microcontroller\
    \ and an RF transceiver with an attached antenna.\nThe suggested architecture\
    \ was prototyped and validated experimentally. Lee et al. [41]\npropose a ﬂoating\
    \ wireless device with energy harvesting capability. The ﬂoating device is\nenergetically\
    \ self-sustaining for extended operational hours. It supports long-range com-\n\
    munication between wireless sensor nodes and a gateway relying on the LoRa technology\n\
    while deployed over a water surface. The ﬂoating device can be used as an environmental\n\
    monitoring station to remotely collect weather and water quality information.\
    \ Ref. [42]\npresent the design of a wireless sensor node, powered by solar energy,\
    \ that collects en-\nvironmental data and can transmit it across vast distances\
    \ (directly to the cloud). The\narchitecture presented therein relies on low-power\
    \ wide-area network (LPWAN) protocols\nthat provide a long-range communication\
    \ system with limited data to transmit and high\nenergy efﬁciency. The authors\
    \ utilize Sigfox technology in their proof-of-concept design.\nAs previously mentioned\
    \ in numerous papers, surveys and tutorials exploring dif-\nferent aspects of\
    \ energy harvesting in WSN exist (a sliver of which we present herein).\nWe will\
    \ revisit EH when we discuss various aspects of data aggregation, such as routing\n\
    enhancement for EH-WSN (under EH constraints), on which we elaborate in Section\
    \ 5.2 or\nwhen discussing wearables in Section 6.\n2.3. Topology\nThroughout the\
    \ survey, the interaction of WSN and IoT will arise in multiple contexts.\nWhile\
    \ this survey mainly deals with data gathering by means of wireless units, an\
    \ IoT unit\npresumes a more high-level entity for localized data gathering. To\
    \ assess the connection\nbetween these two concepts, the reader is advised to\
    \ refer to the most recent work by\nSensors 2022, 22, 2650\n8 of 44\nDevadas et\
    \ al. [43], for example, where the authors enumerate the IoT data management\n\
    frameworks, challenges and issues. The chapter focuses on three layers of data\
    \ management\nin IoT networks, communication, storage and processing. In addition,\
    \ deployment of IoT\nData management for smart home and smart city is described.\n\
    It is essential to distinguish between a one-directional WSN platform, where sensors\n\
    merely gather the data and activate a speciﬁc infrastructure and set of technologies\
    \ to further\nsend it to a sink, and a bi-directional WSN platform, where the\
    \ sensors are expected to be\nable to act according to control messages received\
    \ from a sink. In the latter case, the sink\nmight be a higher-level entity (e.g.,\
    \ a cloud-based server). While the general data-gathering\ntechniques are usually\
    \ agnostic of the control direction, additional constraints might be\nimposed.\
    \ Delay of the responses, latency, BW usage efﬁciency, security, and privacy are\n\
    some of the demands to consider. Another example of a bi-directional platform\
    \ can be\nseen in social sensor clouds (SSC), which connect a social network with\
    \ a sensor network\nvia a cloud infrastructure. See, for example, Zhu et al. [44],\
    \ which presents a scenario of a\nsmart village and provides discussion on various\
    \ aspects including green planning, energy\nconcerns, and speed of data gathering\
    \ and sharing. In Dinh and Kim [45], an on-demand\nWSN platform is designed. The\
    \ authors suggest a data-gathering protocol that addresses\nbandwidth consumption\
    \ and delivery latency and minimizes the number of requests\nto save resources.\
    \ An infrastructure where sensors form groups belonging to private\nowners constitutes\
    \ a special case. This may be the case in a smart city environment; this\nmeans\
    \ that privacy and/or security considerations should be prioritized. This is the\
    \ topic\naddressed by Zhu et al. [46]. The authors provide a trust-assisted cloud\
    \ for WSN but have\nthroughput issues in mind. Kuo et al. [47] suggest a WSN-based\
    \ IoT platform that provides\na reliable connection between sensors in the ﬁeld\
    \ and the database on the Internet. The\nproposed platform is based on the IEEE\
    \ 802.15.4e time-slotted channel-hopping protocol\nwith resource-constrained devices\
    \ supporting heterogeneous applications. The paper\nsuggests a scheme that compensates\
    \ the clock drift for every timeslot to maintain the clock\nsynchronization required\
    \ for the time-slotted channel-hopping protocol.\nEdge computing, as discussed\
    \ by Satyanarayanan [48], allows distributing the data\ngathering burden across\
    \ multiple cloudlets, which might be highly beneﬁcial for large\nWSN. This platform\
    \ paradigm aims to improve many important aspects: reduced latency\nof data delivery,\
    \ increased bandwidth, scalability, resilience to possible cloud outages,\nand\
    \ privacy control. However, the platform presumes an initial capital investment\
    \ and\nlater maintenance.\nA virtual sensor network was proposed by Abdelwahab\
    \ et al. [49]. Once a user-\ninitiated sensing request is dispatched to a cloud,\
    \ a suitable set of sensors is found for\nthe task. The decision is made according\
    \ to the cost function, which depends on the\nspeciﬁc (e.g., monetary) cost of\
    \ using sensors from the designated set, the beneﬁt that\ncan be received from\
    \ using these sensors, and their effectiveness in distances and delays\n(calculated,\
    \ e.g., in number of hops from sensor to a sink/gateway), also expressed as\n\
    virtual links. The cost might be customized, while a general virtualization problem\
    \ is\nformulated and the algorithm is provided.\nIntegration of unmanned aerial\
    \ vehicles (UAVs) and WSN for crop monitoring in\nprecision agriculture is described\
    \ by Popescu et al. [50]. The authors suggest a down-up\nscheme, where the collected\
    \ data is hierarchically processed from the ground level to the\ncluster head\
    \ (CH) level, then collected by the UAV level and ﬁnally delivered to the cloud\n\
    for analysis and possible feedback. Particular emphasis is put on outlying measurements\n\
    from speciﬁc sensors, as they can indicate either a possible sensor failure or\
    \ an upcoming\nunusual event inside the agricultural ﬁeld. The measured data were\
    \ processed through a\nconsensus algorithm. Concurrently, it suppressed outlier\
    \ values left for further examination\nfor the cloud-based analysis. In addition,\
    \ this study focused on the UAV trajectory planning\nto collect the data observed\
    \ by the WSN. Actual deployment with several tens of sensors\nand several CHs\
    \ is provided and analyzed. Note that we dedicate Section 5.4 to data\ngathering\
    \ assisted by a mobile unit.\nSensors 2022, 22, 2650\n9 of 44\nAn implementation\
    \ of a ubiquitous consumer data service for transmitting short mes-\nsages to\
    \ any computing platform is provided by Datta et al. [51]. The authors demonstrate\n\
    a data cycle model that allows any device with sensor(s) to report data encoded\
    \ in short\nmessages. The raw data reaches a central or distributed computing\
    \ platform, where it\nundergoes transformation and evolves into rich and structured\
    \ valuable information for\nhigher-layer applications. The proposed data cycle\
    \ model and DataTweet architecture are\naimed at smart city and large-scale crowd-sensing-based\
    \ IoT scenarios.\n2.4. Application-Oriented Network Architecture\nWe continue\
    \ by covering special types of WSN platforms for data gathering and\nspecialized\
    \ application-driven architecture types. Ayele et al. [52] suggest an IoT network\n\
    architecture for wildlife monitoring systems (WMS) for scenarios in which animals\
    \ exhibit\nsparse mobility, which results in sporadic wireless links. In addition,\
    \ they suggest a\ndata forwarding enhancement that adopts the ﬂood-store-carry-and-forward\
    \ paradigm\nsuggested in the seminal ZebraNet study by Juang et al. [53], in which\
    \ in order to send data\nto the sink, the nodes disseminate it among themselves\
    \ until it reaches the sink. Speciﬁcally,\neach node stores the data needing to\
    \ be conveyed, waits for connectivity with other nodes,\nand distributes the data\
    \ to them, and they repeat the same process. Accordingly, the data is\nspread\
    \ throughout the entire network (i.e., ﬂooding) and will eventually be received\
    \ by the\nsink. The authors in [52] suggest leveraging locally available routing\
    \ parameters to improve\nopportunistic data forwarding algorithms by managing\
    \ the data replication decision.\nSaleh et al. [54] suggest extending the lifetime\
    \ of a wireless sensor network used in\nmobile healthcare applications by increasing\
    \ the number of bits transmitted per symbol, and\nspeciﬁcally to rely on a quaternary\
    \ interconnect scheme in which each transmitted symbol\nmodulates two bits. A\
    \ complementary neural network, static RAM-based architecture is\nsuggested to\
    \ reduce energy consumption in storage and transmissions during the data\ndissemination\
    \ process. A WSN dedicated to home deployment for elderly healthcare and\nearly\
    \ health emergency alarm is discussed by Alsina-Pagès et al. [55]. The authors\
    \ ﬁrst raise\nprivacy concerns related to the monitoring, and accordingly, advocate\
    \ that only sound-\nbased surveillance aimed to merely indicate alarming situations\
    \ is appropriate. In order\nto further conform to the privacy demands, they focus\
    \ on distributed architecture (rather\nthan on a centralized one), where each\
    \ of the WSN sensors sends encrypted identiﬁers of\ntheir measurement. The identiﬁcation\
    \ of events is built on feature extraction. This is done\non the frequency domain\
    \ by ﬁrst dividing the incoming signal into blocks with Hamming\nsliding window,\
    \ then transforming into the frequency domain using Discrete Fourier\nTransform\
    \ (DFT) to evaluate the contribution of every band of the spectrum. The ﬁnal\n\
    coefﬁcients are obtained after Discrete Cosine Transform (DCT). The conclusive\
    \ parts of the\nproposed algorithm classify the coefﬁcients, feeding them into\
    \ Support Vector Machines\nwhich classiﬁes the estimated audio event. The authors\
    \ assert that the classiﬁcation results\ncould be further improved by incorporating\
    \ a deep artiﬁcial neural network (ANN) into\ntheir system.\nIn AbeBer et al.\
    \ [56], a similar method was implemented for urban noise monitoring.\nNamely,\
    \ while STFT was utilized for the noise preprocessing, the classiﬁcation of noise\n\
    levels and events was performed by convolutional neural networks (CNNs). The authors\n\
    used several previously published networks; see references therein. Similar methods\
    \ for\nnoise monitoring WSN were introduced by Siamwala et al. [57]. The frequency-domain\n\
    analysis was performed. Then, classiﬁcation by statistical methods was accomplished\n\
    (Gaussian mixture model was used). In addition, the authors in [57] provide an\
    \ elaborate\nWSN architecture, where energy-harvesting solar panels augment the\
    \ sensors’ lifetime and\nthe sensors’ state-of-charge is transmitted and tracked\
    \ by central, more powerful nodes.\n3. Compressed Sensing\nMany data-gathering\
    \ applications rely on numerous self-powered smart devices to\ncollect real-time\
    \ data and convey it via a wireless medium to a central entity or entities\nSensors\
    \ 2022, 22, 2650\n10 of 44\n(e.g., the cloud) to further process it and act upon\
    \ it. Such devices are expected to perform\ntwo basic operations—sensing and wireless\
    \ connectivity. Two important hindering aspects\nthat derive from these operations\
    \ inﬂuence the performance and need to be considered\nare: (i) energy consumption\
    \ associated with these two operations, especially when many of\nthese devices\
    \ are typically simple with limited computation abilities and battery lifetime\n\
    (ii) airtime utilization, which can also degrade the performance causing high\
    \ delays, jitter,\nbattery consumption, etc. Accordingly, one of the main challenges\
    \ in combating these\nlimitations is reducing the report payload, which affects\
    \ each report’s transmission time\nand channel utilization. Reducing the payload\
    \ of the sensed data can be accomplished at\ndifferent levels; it can be done\
    \ in the sensing stage by reducing the size of the sensed data, as\nwell as in\
    \ the report preparing stage by compressing the report size, and in the transmission\n\
    stage, by selecting which devices need to send reports, thus limiting redundant\
    \ information.\nWhen the reports need to travel multiple hops before reaching\
    \ their destination, this can\nbe done at the relay stage by pruning, unifying,\
    \ and compressing reports. In the sequel,\nwe discuss Compressed Sensing (CS).\
    \ This novel paradigm can reduce report payload at\nseveral levels mentioned above,\
    \ hence lowering the sensing operation’s transmission time\nand energy consumption.\n\
    Compressed sensing is a signal-processing technique that is most advantageous\
    \ when\nthe subject signal is sparse in some domain, such that a minimal non-zero\
    \ vector of coefﬁ-\ncients can represent it. The signal sparsity enables a high-quality\
    \ reconstruction, which is\nattained by ﬁnding the solution to an under-determined\
    \ linear system of equations with\nthe smallest possible number of non-zero values.\
    \ Thus, a convex minimization problem\nneeds to be solved to perform the recovery.\
    \ Note that the CS technique performs non-\nuniform sampling of the data signal\
    \ with an average sample rate usually smaller than\nthe minimal rate mandated\
    \ by the Nyquist–Shannon sampling theorem. A detailed view\nof the technique can\
    \ be found in Balouchestani et al. [58] and Donoho [59]. Various net-\nworking\
    \ domains can utilize compressed sensing, for example, Feizi et al. [60] depict\
    \ some\napplications of CS over networks and elucidate the connection between\
    \ CS and traditional\ninformation-theoretic techniques in source coding and channel\
    \ coding. Particularly, CS is\nhighly suitable for sensed data gathering in wireless\
    \ sensor networks (e.g., physical phe-\nnomena or a scenery), as it can leverage\
    \ the expected high spatial and temporal correlation\nbetween sensing reports\
    \ sent by neighboring sensors at different times in order to acquire\nthe CS paradigm’s\
    \ desired sparsity. In the following, we review several such data-gathering\n\
    schemes that utilize CS.\nLuo et al. [61,62] consider a densely deployed monitoring\
    \ sensor network in which\nreports traverse multiple hops before reaching their\
    \ destination, a sink. These studies\nrely on the concept that sensors’ readings\
    \ are spatially correlated; hence, there exists a\ntransform domain in which the\
    \ sensed signals can be sparsely represented. Both propose\na compressive data-gathering\
    \ (CDG) procedure in which sensors distributively encode\ntheir reports by projecting\
    \ them on a random space basis using random coefﬁcients. These\nencoded reports\
    \ can be decoded at the sink using compressive sensing techniques. Specif-\nically,\
    \ CDG is designed for multi-hop networks where messages need to travel multiple\n\
    hops before reaching their destination. The sampling process that characterizes\
    \ the CS\ncompression process is performed individually at each sensor by simple\
    \ multiplications\nand additions. Particularly, CDG suggests that rather than\
    \ forwarding individual sensor\nreadings, each sensor uses each of its reports\
    \ (measurements) to construct and send M\ndifferent messages, each comprising\
    \ a weighted sum of the sensor’s own report with other\nsensors’ reports traversing\
    \ it (relaying). Formally, denote by vector d = [d1, d2, . . . , dN]T\nthe measurements\
    \ (readings) obtained by all the sensors, where N is the number of nodes in\n\
    the WSN and di denotes the measurement (reading) obtained by sensor si. The sink\
    \ obtains\nM messages (weighted sums) represented by the vector y = Φd = φ1d1,\
    \ φ2d2, . . . , φNdN,\nwhere Φ is an M × N (M << N) matrix comprising the series\
    \ of coefﬁcients generated\nby the sensors, and in particular, φi is the i-th\
    \ column vector of Φ, which denotes the\nrandom coefﬁcients selected by sensor\
    \ i. Luo et al. [61] suggest that the measurement\nSensors 2022, 22, 2650\n11\
    \ of 44\nmatrix (coefﬁcients matrix) Φ should be a full random matrix with its\
    \ entries being i.i.d.\nGaussian random numbers drawn according to N (0, 1\nM).\
    \ The paper suggests that each\nweighted sum coefﬁcient be chosen pseudo-randomly\
    \ based on each sensor’s ID in order\nto avoid the burden and high overhead required\
    \ to collect these coefﬁcients by the sink\nif they are chosen randomly. Ref.\
    \ [62] extends the random coefﬁcient selection suggested\nin [61] to an only partly\
    \ random matrix in which the entries of a sub-matrix are still drawn\naccording\
    \ to N (0, 1\nM). Yet, for the rest of the matrix, two options are suggested,\
    \ either an\nupper triangular matrix with non-zero entries drawn according to\
    \ N (0, 1\nM), or the identity\nmatrix. CDG exploits the compressive sampling\
    \ theory and shows that when the sensor\nreadings are compressible, the sink will\
    \ be able to accurately recover the reports even when\nthe number of weighted\
    \ sums (messages) each sensor generates for each report (M) is\nmuch lower than\
    \ the number of reporting sensors (N). For example, on a route comprising\nN sensors,\
    \ the sink needs to collect only M << N messages to encode the information sent\n\
    by all the N sensors.\nSeveral studies further explore the sparsity of the sensed\
    \ signal and its projection\nmatrix, as well as the number of messages (M) that\
    \ should be delivered to the sink. For\nexample, Wang et al. [63] argue that most\
    \ natural signals are nonstationary and ordinarily\nvariable in the temporal and\
    \ spatial domains. In CS, these directly inﬂuence the recon-\nstruction process\
    \ and the number of required measurements; consequently, setting a ﬁxed\nnumber\
    \ of measurements with a ﬁxed transform basis (coefﬁcient matrix Φ) can result\n\
    in poor performance (inaccurate measurement reconstruction). Accordingly, Ref.\
    \ [63]\nsuggests an adaptive data-gathering scheme based on CS, which utilizes\
    \ an autoregressive\n(AR) model to exploit the local spatial correlation between\
    \ sensed data of neighboring\nsensor nodes. The suggested reconstruction scheme\
    \ adapts to the variation of sensed data\nby adjusting the AR parameters. The\
    \ number of measurements is adjusted adaptively\nwith the sensed data by evaluating\
    \ the recovery result and approximating the number of\nmeasurements required to\
    \ satisfy the accuracy demand.\nTo reduce the transmission overhead, Xu et al.\
    \ [64] propose the compressed sparse\nfunction (CSF) scheme. The basic concept\
    \ of CSF is, rather than encode the sensed data\nby projecting it on a basis on\
    \ which it can be represented sparsely, as in typical CS-based\nschemes, to compress\
    \ the sensed data in the form of sparse functions, which are sent to the\nsource.\
    \ The source can recover the function using techniques from polynomial approxi-\n\
    mation/interpolation theory and use them to compute data values that were not\
    \ reported.\nSpeciﬁcally, CSF ﬁnds a function that maps the sensors’ identiﬁers\
    \ and their readings, which\ncan be expressed in a very sparse way, and only communicates\
    \ this function to the sink.\nAfter the sink recovers the function, it can recover\
    \ all the N sensor readings. Xu et al. [64]\nshow that the CSF approach can provide\
    \ good recovery accuracy (better than the CDG\nscheme suggested by [61]) while\
    \ substantially reducing the message overhead (mainly in\ntree-structured networks).\
    \ Li et al. [65] present a general CS framework for WSNs and IoT\nand show how\
    \ the proposed framework can be utilized to reconstruct the compressible\ninformation.\
    \ The suggested framework comprises three phases: (i) information sensing\nto\
    \ detect and compressively sample event signals; (ii) compressed sampling, in\
    \ which the\nsystem samples information traversing the networks; and (iii) reconstruction\
    \ algorithms, in\nwhich the system accurately reconstructs the original signal\
    \ from the compressed samples.\nDifferent studies tackle the sampling issue and\
    \ suggest different approaches to reduce\nthe number of reports sent such that\
    \ only a subset of the sensors sense the object or\nphenomenon at a time. Several\
    \ studies explore how sensed data is conveyed to the sink\nwith the insight that\
    \ the compression is at least attained along the path to the sink, and is\ntherefore\
    \ affected by it. For example, Dhanapala et al. [66] show that a random-walk-based\n\
    sampling, rather than the conventional uniform-sampling-based CS for function\
    \ recovery,\ncan be used for phenomena awareness either at a sink or at other\
    \ sensors without a sink,\nwith minimal additional sampling. As the distribution\
    \ of the samples has a signiﬁcant effect\non the recovery, Ref. [66] suggests\
    \ an upper bound for the probability of successful recovery\nwith a given error\
    \ percentage. The derived bound provides an approximate number of\nSensors 2022,\
    \ 22, 2650\n12 of 44\nsamples required to recover a function under a selected\
    \ basis and a sampling scheme.\nZheng et al. [67] further argue that random walk\
    \ provides a more practical approach for\nthe data-gathering application in WSNs\
    \ and explores the sparsity of collecting non-uniform\nmeasurements while sampling\
    \ along multiple random paths. The paper suggests that\nthe M × N measurement\
    \ matrix will be characterized by M independent random walks.\nSpeciﬁcally, each\
    \ of the M matrix rows corresponds to the set of vertices visited by the\nrespective\
    \ random walk. The paper analyzes the required number of random walks (M)\nand\
    \ their corresponding lengths (how many entries on each row are non-zero) under\
    \ the\nproposed random walk algorithm.\nZheng et al. [68] suggest a cluster-based\
    \ data-gathering mechanism, in which the\nterrain is divided into cells; in each\
    \ cell, a node is randomly selected as the cell head,\nwhich collects the data\
    \ from the cell members and forwards it to the sink. Zheng et al. [68]\nsuggest\
    \ two forwarding mechanisms, one relying on centrally deﬁned tree-based for-\n\
    warding, and another that is a gossip-based approach. The projection process is\
    \ similar\nto Luo et al. [61,62], being based on random coefﬁcients. Another clustering-based\
    \ hi-\nerarchical data aggregation protocol that relies on CS, termed HDACS, is\
    \ suggested by\nXu et al. [69]. Speciﬁcally, HDACS constructs a multilevel hierarchical\
    \ structure and adap-\ntively sets multiple compression thresholds based on cluster\
    \ sizes at different levels of the\ndata aggregation tree to optimize the amount\
    \ of transmitted data. The encoding procedure\nis adapted from [62], where each\
    \ cluster-head recovers (decodes) all received messages\nfrom its descendants\
    \ (retrieves the original data) before compressing and sending it to its\nparent\
    \ cluster-head.\nMotivated by reducing power consumption, Lan and Wei [70] also\
    \ suggest a\ncompressibility-based clustering algorithm for hierarchical compressive\
    \ data gathering. In\nthis study, the network is decomposed into a logical chain,\
    \ and sensor nodes are grouped\nbased on the compressibility of their readings\
    \ instead of by a random clustering approach.\nThis clustering approach strives\
    \ to minimize the average compression ratio of all clusters by\ngreedily selecting\
    \ the set of nodes based on the compression ratio. It then tries to maximize\n\
    the number of compressible clusters so as to determine the suitable transmission\
    \ mode\nfor each cluster using a mode threshold that is a function of the number\
    \ of nodes and the\nnumber of hops from a cluster-head to a sink.\nTo reduce the\
    \ number of sensors involved in each CS measurement, Wu et al. [71]\npropose a\
    \ sparsest random scheduling scheme for compressive data gathering in large-\n\
    scale wireless sensor networks (WSNs), leveraging the spatial-temporal properties\
    \ in the\nsensory data. The central theme of this study is that the measurement\
    \ matrix is designed\nbased on the representation basis and sensory data and according\
    \ to the sensor network\nrequirements rather than the network environment. By\
    \ combining compressed sensing\nand network coding in the data-gathering scheme,\
    \ Yin et al. [72] introduce a multi-hop\ntopology in which the sink node adaptively\
    \ adjusts the measurement formation according\nto the reconstruction of received\
    \ measurements at each data-gathering epoch. The sink\nnode dictates the data\
    \ aggregation performed to balance the energy consumption among\nsensor nodes.\n\
    Xu et al. [73] exploit the CS paradigm for network tomography. Speciﬁcally, Ref.\
    \ [73]\nleverages the fact that, typically, only a small fraction of network entities\
    \ such as links or\nnodes are responsible for anomalies or degradation in network\
    \ performance, as a limited\nnumber of congested links can be responsible for\
    \ signiﬁcant delays or high packet drop\nrates, and suggests utilizing CS theory\
    \ in order to identify these few entities based on end-\nto-end measurements.\
    \ Zheng et al. [74] provide an analysis of the capacity and delay of\ndata gathering\
    \ with compressive sensing in wireless sensor networks. The paper considers\n\
    a random topology where sensor nodes are randomly deployed in a region, for both\n\
    single-sink and multi-sink scenarios, and characterizes the capacity and delay\
    \ performance\nimprovement that the CS paradigm can achieve for data gathering.\
    \ In particular, for\nthe single sink, a simple routing scheme for data gathering\
    \ with CS is suggested, and\na tight capacity in the order sense is presented.\
    \ In particular, the suggested routing\nSensors 2022, 22, 2650\n13 of 44\nscheme\
    \ with pipelining scheduling algorithm for data gathering shows that the proposed\n\
    single-sink scheme can achieve a capacity gain of Θ( n\nM) over the baseline transmission\n\
    scheme, and the delay can be reduced by a factor of Θ(\n√\nnlogn\nM\n), where\
    \ M is the number\nof random projections required for reconstructing a snapshot,\
    \ and n is the number of\nrandomly deployed nodes. For the multi-sink case, their\
    \ architecture shows that the per-\nsession capacity of data gathering with CS\
    \ is Θ(\nn√nW\nMnd\n√\nnslogn), and the per-session delay is\nΘ(M\nq\nn\nlogn),\
    \ where W is the data rate. The number of sinks present in the network is nd,\n\
    and the number of randomly selected source nodes is ns. They validate the theoretical\n\
    results with simulations for the scaling laws of the capacity in both single-sink\
    \ and multi-\nsink networks.\n4. Medium Access Control (MAC)\nNext, we move to\
    \ the Data-Link layer and speciﬁcally to the medium access control\n(MAC) mechanism,\
    \ which highly affects the performance of data gathering protocols, as\nit inﬂuences\
    \ several performance aspects, such as reliability, latency, channel utilization,\n\
    power utilization (which impact the lifespan of a sensor in particular and the\
    \ network in\ngeneral), etc. Even though many access protocols were suggested\
    \ over the years for shared-\nchannel networks, wired and wireless, due to their\
    \ unique properties and requirements,\nextensive research has been conducted on\
    \ MAC protocols targeted to WSN. Many WSN\nMAC protocols were designed to comply\
    \ with various trafﬁc patterns. Accordingly, in the\nsequel, we provide a short\
    \ WSN-MAC protocol overview for ones that can support yet\nare not necessarily\
    \ particular to data-gathering. We review a fraction of the vast literature\n\
    on the topic and the numerous MAC protocols devised over the years. Figure 3 depicts\
    \ a\nschematic partition of the papers discussed throughout this section according\
    \ to the main\nMAC classes.\nMAC\nSection 4\nSynchronous \nTransmitter-Initiated\
    \ \nReceiver-Initiated \nAsynchronous \nOthers\nSection 4.2\nDuty-Cycle\nSection\
    \ 4.1\nFigure 3. Schematic description highlighting the main MAC classes covered\
    \ in the section.\nEnergy consumption is one of the main concerns of WSN, and\
    \ as previously explained,\nit needs to be considered in the design of protocols\
    \ and algorithms in all the layers of the\nprotocol stack. The highest energy\
    \ consumer of a sensor or an IoT device is its transceiver,\nwhich consumes energy\
    \ regardless of whether it is transmitting or only awake listening to\nongoing\
    \ trafﬁc (e.g., [75]). One of the more prevalent solutions to save power is to\
    \ embrace\na duty-cycle mechanism in which the device is asleep most of the time\
    \ (its transceiver is in\nlow power mode), and is awake for transmitting or receiving\
    \ data only a small fraction\nof the time. Another important aspect of wireless\
    \ sensor networks (WSN) is channel\nutilization, that is, in a typical WSN, when\
    \ multiple devices are trying to send reports\nsimultaneously, air time is a crucial\
    \ network resource. Particularly when the network is\nSensors 2022, 22, 2650\n\
    14 of 44\ndense with multiple devices in the same neighborhood, issues such as\
    \ coordinating between\nthe users to avoid collisions and preventing users from\
    \ occupying the channel for long\ntime intervals are fundamental. Note that such\
    \ issues can highly affect the performance in\na dense network topology even when\
    \ reports are not frequent. Accordingly, utilizing the\nchannel (air time) efﬁciently\
    \ is a crucial component for any such system’s operation and\nperformance. These\
    \ two highly vital aspects justify the signiﬁcance given to the design of\nmedium\
    \ access control (MAC) protocols that are particular to WSNs. Numerous protocols\n\
    have been suggested to cope with different WSN objectives and demands (e.g., [76,77]).\n\
    This paper focuses on MAC protocols for WSNs, particularly on duty-cycled-based\
    \ ones.\n4.1. Duty-Cycle MAC Protocols\nTraditionally, duty-cycle MAC protocols\
    \ can be classiﬁed as either synchronous or\nasynchronous. In synchronous protocols\
    \ the awake time interval is synchronized such that\nall devices are awake (or\
    \ asleep) at the same time intervals (e.g., S-MAC [78], T-MAC [79]).\nSince the\
    \ awake time intervals are quite limited, they can be highly congested and prone\n\
    to collisions. Several synchronous protocols have devised mechanisms to attenuate\
    \ this\ncongestion and to allow more devices to transmit in each cycle, for example,\
    \ DW-MAC [80],\nwhich allocates the awake time for transmission reservations that\
    \ will be executed during\nthe sleep interval.\nIn asynchronous protocols, each\
    \ device has its own wake-up schedule. Accordingly,\nthe main challenge is setting\
    \ a rendezvous time when both the sender and the receiver are\nawake and devising\
    \ a signaling mechanism that informs both that they are awake and can\ncommunicate.\
    \ Asynchronous MAC protocols can further be divided into two categories,\ntransmitter-\
    \ or receiver-initiated. In transmitter-initiated protocols, the transmitter initiates\n\
    the transmission by capturing the channel waiting for its designated receiver\
    \ to wake\nup. For instance, in B-MAC [81], the transmitter transmits a long preamble\
    \ capturing the\nchannel prior to the data transmission, waiting for its intended\
    \ receiver to wake up and\nreply. In X-MAC [82], the transmitter transmits a sequence\
    \ of short preambles allowing\nthe intended receiver to interrupt, notifying the\
    \ receiver that it is awake. In WiseMAC [83],\nthe transmitter learns the wake-up\
    \ time of its intended receiver and starts the preamble\ntransmission just prior\
    \ to this wake-up time.\nThe second approach, the receiver-initiated paradigm,\
    \ relies on the receiver, whenever\nawake and ready to receive data, to initiate\
    \ the data exchange. The basic receiver-initiated\nMAC concept was introduced\
    \ in RI-MAC [84], in which whenever the receiver wakes up,\nit transmits a predeﬁned\
    \ preamble, signaling to its potential transmitters that it is awake\nand ready\
    \ to receive data. Several protocols took up the RI-MAC paradigm and suggested\n\
    modiﬁcations and enhancements. Some protocols strived to reduce the energy consumed\n\
    while a sender stays awake, waiting for its intended receiver to wake up. For\
    \ instance,\nPW-MAC [85] and AP-MAC [86] suggested that each transmitter will\
    \ learn its receiver’s\nexpected wake-up time, and instead of staying awake waiting\
    \ for its designated receiver to\nwake up, will wake up just before its intended\
    \ receiver’s wake-up instance.\nAnother receiver-initiated enhancement is suggested\
    \ by A-MAC [87], which aims to\nreduce the time in which a receiver and, consequently,\
    \ its potential transmitters stay awake,\nby trying to determine whether there\
    \ are pending packets for transmission and if it needs\nto stay awake or if it\
    \ can go back to sleep after probing the channel. The enhancement\nrelies on an\
    \ additional frame, termed “auto-ack”, sent by pending transmitters, which\nfollows\
    \ the receiver’s probe packet and proceeds with the data transmission. The “auto-ack”\n\
    frame is such that the receiver can decode a superposition of several such frames\
    \ and\ndetermine whether there is trafﬁc being sent. Even though the energy saved\
    \ per cycle is\nnegligible, the cumulative savings per day can be signiﬁcant due\
    \ to the numerous times\na device wakes up probing the channel. RIVER-MAC [88]\
    \ suggests two enhancements,\none aiming at reducing the awake time a sender is\
    \ waiting for its intended receiver to\nwake up, and one that aims at improving\
    \ the RI-MAC collision resolution mechanism by\nletting an active receiver keep\
    \ controlling the channel after invoking the collision resolution\nSensors 2022,\
    \ 22, 2650\n15 of 44\nmechanism, and speciﬁcally during the silent backoff interval.\
    \ MAR-RiMAC [89] suggested\nan amendment to the receiver-initiated approach, and\
    \ in particular RI-MAC, to cope with\nthe perpetual collisions, common in dense\
    \ networks and heavy trafﬁc loads, in which\nmany devices are trying to transmit\
    \ to the same entity (sink or relay). MAR-RiMAC relies\non a reservation-based\
    \ mechanism in which the reservations are short signals that can\nbe transmitted\
    \ simultaneously. After the designated receiver decodes the identity of the\n\
    devices, it sends a transmission request and polls them sequentially, with no\
    \ idle intervals.\nAs mentioned in Section 2, relying on EH requires adaptations\
    \ that typically relate\nto the harvested energy source. For example, how to balance\
    \ the harvested energy and\nthe energy consumption can be a crucial factor in\
    \ whether or not a scheme or protocol\ncan be adopted by a network that relies\
    \ on EH, and can be the primary factor impacting\ntheir performance. Adaptation\
    \ requirements to support EH-based sensors span the whole\nnetwork stack, including\
    \ the MAC sublayer. Adaptation of receiver-initiated duty-cycle\nMAC protocol\
    \ for energy-harvesting-powered wireless sensor networks, in which besides\nthe\
    \ usual MAC challenges, both transmitter and receiver need to have sufﬁcient power\
    \ for\nsuccessful transmission, is given by Liu et al. [90].\n4.2. MAC Protocols\
    \ for Other Setups\nNext, we review some MAC protocols and MAC adaptations for\
    \ various setups,\nsuch as multi-channel, multi-radio, busy-tone utilization,\
    \ or different from the duty-cycle\napproach. DURI-MAC [91] adopts the traditional\
    \ busy-tone scheme and allocates a sub-\nchannel for control such that while receiving\
    \ data on the data channel, a busy signal\nis transmitted on the control channel,\
    \ which notiﬁes neighboring nodes of the ongoing\ntransmission, and therefore\
    \ helps avoid interference from hidden terminals. EM-MAC [92]\nutilizes multiple\
    \ orthogonal radio channels and allows devices to dynamically select the\nchannels\
    \ for their transmissions based on the channel conditions they sense without the\n\
    utilization of a control channel. Accordingly, EM-MAC can avoid using channels\
    \ that are\ncurrently heavily loaded, inferior due to interference, or jammed.\
    \ Typically, the trafﬁc\nload sent by a node is spatially and temporally variable.\
    \ Different nodes need to send\ndifferent trafﬁc loads due to their tasks, topological\
    \ location, and the amount of trafﬁc they\nneed to relay. Furthermore, the same\
    \ node can experience different loads at different time\nintervals due to events\
    \ or requests triggering different trafﬁc loads. Accordingly, several\nstudies\
    \ have explored an adaptive duty-cycle approach. For example, Ye and Zhang [93]\n\
    have developed a reinforcement-learning-based self-adaptive sleep/wake-up scheduling\n\
    approach. In the proposed method, each node (device) divides the time into time-slots,\n\
    which are not necessarily synchronized between neighboring nodes. Each node decides\n\
    whether to sleep or wake up in each time slot, and while awake, it decides whether\
    \ to listen\nor transmit. The decision is based on its current situation and its\
    \ estimation of its neighbors’\nsituations and is attained via Q-learning.\nGamm\
    \ et al. [94] devise an alternative approach to duty-cycle, which utilizes two\n\
    radios: the primary radio transceiver and an additional wake-up radio (WuR). The\
    \ wake-up\nradio is a low-power receiver triggered by an external event and can\
    \ turn on the main\ntransceiver when required. Oller et al. [95] provide a detailed\
    \ characterization of a speciﬁc\nWuR, the SubCarrier Modulation WuR (SCM-WuR),\
    \ through physical experiments and\nmeasurements, evaluating it for different\
    \ performance metrics and comparing it to other\nwake-up radio-based systems.\
    \ The authors of [95] model and simulate their own designed\nWuR hardware platform,\
    \ which is compared to four widely employed MAC protocols for\nWSN under three\
    \ real-world network deployments [96]. Spenza et al. [97] further design\nand\
    \ prototype a very-low-power-consumption (<1.3 µW), high-sensitivity (up to −55\
    \ dBm),\nfast-reactivity (wake-up time of 130 µs), and selective-addressing wake-up\
    \ receiver (WRx)\nand describe its integration to a wireless sensor node. The\
    \ authors leverage their WRx and\npresent ALBA-WUR, a cross-layer solution for\
    \ data gathering in wireless sensing systems.\nSimilar to duty-cycled MAC protocols,\
    \ wake-up radio-based protocols also distinguish\nbetween transmitter-initiated\
    \ WuR (TI-WuR) protocols in which the transmitter wakes up\nSensors 2022, 22,\
    \ 2650\n16 of 44\nits potential receivers (e.g., [98,99]) vs. receiver-initiated\
    \ WuR (RI-WuR) that adopt the\nRI-MAC paradigm such that when a receiving node\
    \ is ready to collect data, it wakes up all\nthe nodes in its neighborhood by\
    \ broadcasting a wake-up call (e.g., [100,101]).\nAn energy-harvesting-based MAC\
    \ protocol for cognitive radio networks (CRNs) is\nsuggested by Hawa et al. [102],\
    \ in which the secondary users (SUs) utilize the transmis-\nsions by primary users\
    \ (PUs) to harvest energy. Accordingly, the suggested protocol\ninterlaces SUs’\
    \ data transmissions within these PUs’ transmission holes. The proposed\nenergy-harvesting/data-transmission\
    \ schedule considers the imbalance between the small\namount of energy collected\
    \ per PU’s transmission and the energy required by an SU\ndata transmission.\n\
    Next, we mention several WSN MAC protocols that were specially designed for\n\
    particular data-gathering setups in WSN and IoT networks, exploiting the special\
    \ associ-\nated attributes (e.g., that the trafﬁc patterns are always from sensors\
    \ to the sink, or that\nthere exists a set of predeﬁned messages that need to\
    \ be sent). Cohen et al. [103] design\nand analyze a data collection protocol\
    \ based on information theoretic principles. In the\nsuggested protocol, each\
    \ sensor needs to convey one out of a bank of known messages\nto a sink. The protocol\
    \ assumes a large population of sensors and devises a scheme in\nwhich a sink\
    \ (or relay) can simultaneously collect messages from up to K sensors, without\n\
    knowing in advance which sensors will transmit, and without requiring any synchroniza-\n\
    tion, coordination, or management overhead. D-3 [104] exploits the fact that the\
    \ trafﬁc in\ndata-gathering applications ﬂows in a certain direction (toward a\
    \ single or multiple sinks)\nto devise a wake-up that can signiﬁcantly reduce\
    \ end-to-end delay. Speciﬁcally, D-3 lays\nout the awake schedule of communicating\
    \ nodes such that a packet can be forwarded\ntoward its destination sequentially,\
    \ without the need for a node to wait for its next-hop\nrelay to wake up (i.e.,\
    \ the wake-up schedule is such that a relay wakes up in time to receive\na packet\
    \ just received by its predecessor).\n5. Routing for Data Gathering in WSN\nWe\
    \ keep climbing the layers, and in this section we address issues related to the\n\
    Network layer. We start with a short review of WSN routing protocols. We note\
    \ that\nrouting-related aspects were also referred to in other sections of this\
    \ survey. We mainly\nfocus on the prominent and more recent protocols. We do not\
    \ provide a comprehensive\nreview of routing protocols in multihop WSNs and mainly\
    \ explore routing protocols\nsuitable for data gathering. Figure 4 provides a\
    \ schematic distribution of the discussed\npapers into main topics. As with the\
    \ schematic partition in the other sections, in order\nnot to have too many, the\
    \ topics are chosen such that the theme on each one encompasses\nseveral papers.\
    \ The papers’ partition is rough: some papers can appear in more than one\ntopic\
    \ while others are only related to the topic.\nWe start with general WSN settings\
    \ and then continue with routing protocols under\nenergy harvesting constraints.\
    \ Then we explore the utilization of network coding for data\ngathering, which\
    \ leverages the multi-hop routing, allowing relays (intermediate nodes)\nto code\
    \ the incoming packets before forwarding them toward the sink. We conclude this\n\
    section by examining a different paradigm. Rather than utilizing the traditional\
    \ approach of\nforwarding the sensed data via multiple relay nodes before reaching\
    \ the sink, this paradigm\nrelies on a Mobile Sink (MS) that traverses the network\
    \ and collects the sensed data from\nthe sensors it passes through.\n5.1. Common\
    \ WSN Routing Protocols for Data Gathering\nThe common setup for a data collection\
    \ network comprises a set of devices (e.g.,\nsensors) and one or multiple sinks\
    \ that collect the reports. In many such scenarios, the\nsensors are unevenly\
    \ dispersed over the terrain and in some cases can be mobile, can have\na different\
    \ distance to the sink(s), and the data needs to traverse multiple hops before\n\
    reaching the sink, in which commonly the sensors themselves serve as relays toward\n\
    the sink. Consequently, the performance experienced by different sensors (e.g.,\
    \ energy\nSensors 2022, 22, 2650\n17 of 44\nconsumption, latency, reliability)\
    \ can be markedly diverse. Various solutions, including\nenergy-aware routing,\
    \ compressed sensing, efﬁcient MAC novelties and architectural\ninnovations, have\
    \ been suggested to try to improve the overall performance and to balance\nits\
    \ variability; many are scattered throughout this survey under different subjects\
    \ (e.g.,\nSections 3, 4 and 6). In the sequel, we provide a brief review of routing\
    \ protocols for WSN\nin general and data gathering in particular.\nRouting\nSection\
    \ 5\nCluster-Based \nSection 5.1.1\nEnergy Harvesting \nBased\nSection 5.2\nWSN\
    \ Routing\nSection 5.1\nNetwork coding\nSection 5.3\nUAV Utilization\n(Mobile\
    \ Sink) \nSection 5.4\nRPL \nSection 5.1.3 \nOpportunistic \nSection 5.1.2\nCluster-Based\
    \ \nSection 5.2.1 \nMobile Charger \nSection 5.2.2 \nCluster-Based \nSection 5.4.2\n\
    Direct \nSection 5.4.1 \nFigure 4. Schematic partition of the papers discussed\
    \ in this section into the main routing topics\ncovered in the section.\n5.1.1.\
    \ Cluster-Based Routing Protocols\nA signiﬁcant milestone in WSN routing protocols\
    \ is the low-energy adaptive clustering\nhierarchy (LEACH) protocol [105]. The\
    \ basic LEACH protocol is an adaptive clustering-\nbased protocol that dynamically\
    \ selects sensor nodes as cluster-heads. Each cluster-head\naggregates data from\
    \ its cluster members and relays it to the sink. In order to distribute\nthe high\
    \ energy consumption imposed on cluster-heads between all the sensor nodes,\n\
    the cluster-heads are dynamically selected according to a predeﬁned probability\
    \ that\ndepends on the number of desired clusters. The resulting protocol causes\
    \ continuous\nclustering hierarchy reelection, which facilitates energy balancing.\
    \ The original version\npresented by Heinzelman et al. [105] considers a setup\
    \ in which all sensor nodes can\ndirectly communicate with the sink; hence, each\
    \ cluster-head can directly relay the collected\ninformation from its cluster\
    \ members to the sink. However, as described in the paper,\nLEACH can be easily\
    \ extended to a hierarchical cluster setup in which the cluster-head\nnodes of\
    \ each tier are also organized in clusters such that each cluster-head relays\
    \ its\naggregated data to its higher-layer cluster-head, and so on up to the top\
    \ layer of the\nhierarchy, at which point the data are sent to the sink.\nSince\
    \ its publication in 2000, numerous protocols have relied on LEACH’s clustering\n\
    paradigm, suggesting enhancements and improvements for various setups and require-\n\
    ments. For instance, EE-LEACH [106,107] aims at improving the energy efﬁciency\
    \ of\nLEACH by considering the sensor’s residual energy throughout the stages\
    \ of the proto-\ncol. Speciﬁcally, EE-LEACH assumes that node deployment is implemented\
    \ according\nto a two-dimensional Gaussian distribution. It forms clusters and\
    \ selects their respective\ncluster-heads based on the residual energy of neighboring\
    \ nodes. The relay nodes that\nforward the data aggregated by cluster-heads to\
    \ the sink are selected based on their residual\nenergy. A clustering procedure\
    \ based on recursive rectangular partitioning of the network\ngrid following the\
    \ k-d tree algorithm is demonstrated by Anzola et al. [108]. The authors\nadjust\
    \ a protocol that combines their clustering methods and report that it performs\
    \ better\nthan LEACH. Several surveys have summarized the successors of the LEACH\
    \ protocol\n(e.g., [107]).\nSensors 2022, 22, 2650\n18 of 44\nPEGASIS [109] was\
    \ designed to address the overhead resulting from the cluster\nformation in LEACH.\
    \ Speciﬁcally, PEGASIS replaces the clusters with a node-chain in which\neach\
    \ node receives the data from its predecessor and transmits it to its successor\
    \ in the chain.\nThe data is gathered while getting fused along the chain until\
    \ eventually, a designated\nnode transmits it to the sink. PEGASIS relies on nodes\
    \ having global knowledge of the\nnetwork and shows that a simple greedy algorithm\
    \ for the forwarding chain construction,\nin which nodes select their closest\
    \ neighbors as the next hops in the chain, is sufﬁcient to\nsigniﬁcantly reduce\
    \ energy consumption. Similar to LEACH, and in order to balance the\nenergy depletion\
    \ in the network, different nodes transmit the fused data to the sink on\neach\
    \ data-gathering round. P-LEACH [110] offers a hybrid between LEACH and PEGASIS\n\
    that relies on cluster formation where cluster-heads collect and forward trafﬁc.\
    \ Rather\nthan forward the trafﬁc directly to the sink, or create a hierarchical\
    \ cluster setup in which\ncluster-heads are also grouped into clusters with another\
    \ cluster-head, P-LEACH adopts\nchain-based forwarding such that the cluster-heads\
    \ are arranged in a chain along which\nthe collected data is forwarded, as suggested\
    \ by PEGASIS.\nSeveral LEACH enhancements have relied on bio-inspired algorithms.\
    \ For example,\nSiew et al. [111] utilize adaptive particle swarm optimization\
    \ (APSO). This widely used\nswarm intelligence method mimics swarming behavior\
    \ in bird ﬂocking and ﬁsh schooling\nto guide its members to search for globally\
    \ optimal solutions for cluster-head location\nselection. Tam et al. [112] extend\
    \ LEACH to a 3D setting by employing a method based on\nfuzzy clustering and particle\
    \ swarm optimization (PSO). Cui et al. [113] suggest a variant\nof the bat algorithm,\
    \ which simulates bat prey echolocation behavior, to optimize the\ncluster-head\
    \ selection for LEACH protocol. A routing path selection using an ant colony\n\
    optimization algorithm is presented by Jiang and Zheng [114]. Clustering by mimicking\n\
    groups of yellow goatﬁsh is discussed by Rodríguez et al. [115]. The authors claim\
    \ that\nthe presented meta-heuristic is more efﬁcient in avoiding local minima.\
    \ An extension of\nLEACH for an IoT-designated industrial environment is presented\
    \ by Karunanithy and\nVelusamy [116]. This work provides uniform CH selection,\
    \ uniform CH dispersion over\nthe industrial grid of IoT-based sensors, and tree-based\
    \ routing selection that promises to\nbe more energy efﬁcient than known counterparts.\
    \ The energy exploitation is claimed to be\nequal among nodes.\nMehmood et al.\
    \ [117] devise a dynamic-size cluster-based routing protocol for WSN\ncomprising\
    \ a large number of sensors that are spread over a large area (the paper suggests\n\
    pollution monitoring as a candidate application). The primary objective of the\
    \ presented\nscheme is to effectively select CHs to be responsible for the main\
    \ communication with BS\nand additionally deﬁned chief nodes (CNs). Speciﬁcally,\
    \ the sensor topology is divided\ninto groups, where CNs collect the updated energy\
    \ indications of other sensors within a\ngroup. There are also border nodes responsible\
    \ for communication between groups. If\ntheir energy value drops below a threshold,\
    \ the CNs can be reelected. The candidates for\nCNs and CHs are provided by an\
    \ artiﬁcial neural network (ANN), which takes as inputs\nremaining energy, neighboring\
    \ node count, the amount of outstanding data, signal-to-\nnoise ratio (SNR), distances\
    \ between nodes, CHs, CNs and the BS, trafﬁc load, and so\non. The simulations\
    \ show a better lifetime than other selected known protocols; hence,\nthe scheme\
    \ is a better ﬁt for pollution monitoring. Clustering and routing for a wind\n\
    turbine system monitored by WSN are introduced by Durairaj and Selvaraj [118].\
    \ The\ndiscussed environment is unique because sensors placed at wind turbines\
    \ can have their\nenergy replenished by the turbine itself; hence, these sensors\
    \ are always assumed to be\ncharged. However, the distances between turbines and\
    \ the BS are too large, and the\ngrid is augmented by ground sensors that relay\
    \ the measurements. In many cases, these\nground sensors have to act as CHs. The\
    \ authors propose system partitioning and clustering\nmethods that may be hierarchical\
    \ to speciﬁcally address this scenario. An interesting\nalgorithm that also employs\
    \ partitioning, by hierarchical grouping of sensors based on\nearly knowledge\
    \ of geographical transmission patterns in mobile WSN, is presented by\nShifrin\
    \ and Cidon [119].\nSensors 2022, 22, 2650\n19 of 44\n5.1.2. Opportunistic Routing\n\
    The opportunistic routing approach, which was designed for wireless networks,\
    \ dy-\nnamically chooses paths toward the destination on a per-transmission basis,\
    \ Biswas and\nMorris [120], Ye and Hua [121]. Opportunistic routing exploits the\
    \ broadcast nature of\nwireless communication jointly with the spatial diversity\
    \ of distributed nodes in a given\nroute such that multiple nodes overhear each\
    \ packet transmitted by a node. The node that\nreceives the packet successfully\
    \ and can serve as the best relay toward the destination (e.g.,\nclosest to the\
    \ destination) becomes the next transmitting node. Harnessing opportunistic\n\
    routing to duty-cycle MAC protocols encounters several obstacles. In synchronous\
    \ duty-\ncycle MAC protocols (Section 4), the short time duration in which all\
    \ nodes are awake (and\nspeciﬁcally, all the potential relays are awake and trying\
    \ to forward the same packet) can\nlead to artiﬁcial congestion and poor wake-time\
    \ utilization. In asynchronous duty-cycle\nMAC protocols, since not all nodes\
    \ are awake simultaneously, the use of overhearing, which\nopportunistic routing\
    \ relies on, is limited and requires adaptations such that the transmitter\nwill\
    \ transmit to multiple relays upon its wake-up (e.g., [122]) or delay its transmission,\n\
    choosing its relay opportunistically based on channel condition (e.g., [123]).\n\
    In a dense WSN, even under asynchronous duty-cycle MAC protocol, several potential\n\
    relays can be awake simultaneously, which poses additional challenges when utilizing\n\
    opportunistic routing. In addition to the relay selection problem—whether a transmitter\n\
    should wait for the best relay to wake up or compromise on a less preferable relay,\
    \ reducing\nits awake period and how long it should wait—it also encounters the\
    \ collision avoidance\nproblem between simultaneously awake nodes. Liu et al.\
    \ [124] suggest a slotted contention-\nbased scheme in which, following a probe\
    \ sent by the transmitter, the awakened potential\nrelays contend and transmit\
    \ feedback concerning the routing progress they can offer. The\ntransmitter selects\
    \ the best possible relay out of the ones that replied, taking into account\n\
    not only the metric chosen to evaluate the different relays, but also the waiting\
    \ time of\nthe link-layer transmissions. Under a similar set-up of dense asynchronous\
    \ duty-cycle\nMAC protocol with multiple potential relays awake simultaneously,\
    \ Hawbani et al. [125]\ntry to control the number of potential forwarders, which\
    \ inﬂuences both the transmitter\nwaiting time and the number of packet duplications.\
    \ The suggested solution relies on\na two-step mechanism. First, each transmitter\
    \ determines a candidate zone such that all\nnodes within the candidate zone are\
    \ potential forwarders. Second, the candidates within\nthe candidate zone are\
    \ prioritized based on a combination of metrics that considers residual\nenergy,\
    \ transmitting direction, distance, and link quality.\n5.1.3. Routing Protocol\
    \ for Low-Power and Lossy Networks (RPL)\nA routing protocol for low-power and\
    \ lossy networks (RPL) is a routing protocol\nthat was speciﬁcally designed for\
    \ networks composed of constrained nodes, which are\ninterconnected via unstable\
    \ and lossy links with relatively low packet delivery rates and\ntypically only\
    \ support low data rates (hence, low-power and lossy networks (LLNs)).\nSpeciﬁcally,\
    \ RPL is a distance-vector proactive routing protocol designed for IPv6 low-\n\
    power devices with limited energy, processing, and memory resources (Winter et\
    \ al. [126]).\nRPL constructs a tree routing topology termed the destination-oriented\
    \ directed acyclic\ngraph (DODAG), rooted at one or more sink nodes. The routing\
    \ tree (graph), along\nwhich the trafﬁc traverses, is constructed according to\
    \ an objective function (OF) that can\nutilize a set of metrics such as energy\
    \ consumption, latency, and hop count. The most\ncommon ones are OF0, which ﬁnds\
    \ the shortest path (the path with the minimal hop-count)\nto the sink (Thubert\
    \ et al. [127]), and minimum rank with hysteresis objective function\n(MRHOF),\
    \ which ﬁnds the routes that minimize the link cost associated with the routes\n\
    (Gnawali and Levis [128]). The cost is deﬁned as the latency metric allowing RPL\
    \ to ﬁnd\nstable minimum-latency paths from each node to the sink, or it can be\
    \ associated with the\nexpected transmission count (ETX) metric, which allows\
    \ RPL to ﬁnd the stable minimum-\nETX paths from the nodes to the sink (the default\
    \ metric). In order to achieve stability,\nMRHOF also ensures that a route is\
    \ changed (a node exchanges its preferred parent in\nSensors 2022, 22, 2650\n\
    20 of 44\nthe routing tree) only if the cost of the improved route is better than\
    \ the current route by\nat least a predeﬁned threshold. RPL is the de-facto IPv6-based\
    \ routing protocol for the\nIoT. Accordingly, several OFs and possible enhancements\
    \ have emerged during recent\nyears, and several performance evaluations and comparisons\
    \ have been presented. In the\nfollowing, we discuss some of these OFs.\nAbdel\
    \ Hakeem et al. [129] analyze the performance of RPL in collecting smart meter\n\
    readings over smart grid (SG) networks via Java-based simulations and IoT-LAB\
    \ testbed ex-\nperiments. Speciﬁcally, Ref. [129] evaluates the RPL performance\
    \ under the two prominent\nobjective functions Hop Count and ETX, in terms of\
    \ packet delivery ratio, network latency,\ncontrol trafﬁc overhead, and power\
    \ consumption. Barnawi et al. [130] utilize the Cooja\nnetwork simulator to examine\
    \ the performance of RPL under duty-cycle MAC protocol.\nSpeciﬁcally, Ref. [130]\
    \ simulates RPL over the classical XMAC protocol and its derivative\nContikiMac,\
    \ where, rather than using a long preamble waiting for the receiver to wake up,\n\
    the sender repeatedly sends the same packet until a link layer acknowledgment\
    \ is received.\nAs a baseline, Ref. [130] uses NullRDC, an always-awake node.\
    \ As expected, the results\nshow that NullRDC is better in terms of latency, while\
    \ ContikiMac outperforms the others\nin terms of power consumption. Al-Shargabi\
    \ and Aleswid [131] also utilize the Cooja\nnetwork simulator to evaluate which\
    \ OF is more suitable for a WSN in healthcare scenarios.\nOF0 and ETX are examined\
    \ in various network topologies, such as the grid and random\ntopology, under\
    \ diverse densities. They conclude that the OF0 is more efﬁcient with respect\n\
    to packet delivery ratio (PDR) and power consumption in the random topology setup.\n\
    Sousa et al. [132] propose an energy-efﬁcient and path-reliability-aware objective\n\
    function (ERAOF). The OF suggested by ERAOF linearly combines energy consumption\n\
    and link quality (in terms of ETX) routing metrics. Even though the selected routes\
    \ are\nnot optimal in either one of the objective metrics, they provide a balance\
    \ between energy\nefﬁciency and reliability. Rafea and Kadhim [133] suggest an\
    \ energy threshold RPL (ETRPL),\nwhich, in addition to the ETX metric, incorporates\
    \ in its objective function the remaining\nenergy of the preferred forwarding\
    \ (parent) node. ETRPL performance is evaluated via\nCooja simulator. Sharma et\
    \ al. [134] suggest another MRHOF-based objective function that\ntakes into account\
    \ three routing metrics: ETX, energy, and delay. Energy consumption,\nin order\
    \ to increase the lifespan of the network, is also considered by Sankar et al.\
    \ [135],\nwhich suggests cluster-tree-based routing protocol to maximize the lifetime\
    \ of IoT (CT-\nRPL). As the name suggests, CT-RPL is a cluster-based routing protocol\
    \ that involves three\nprocesses: cluster formation, cluster-head selection, and\
    \ route establishment. CT-RPL ﬁrst\nscans the nodes and group (cluster) nodes\
    \ whose Euclidean distance from their centroid\npoint is bounded, adding one node\
    \ at a time. Next, each cluster selects its cluster-head\n(CH), utilizing a game-theoretic\
    \ approach in which the node with the maximum payoff\n“p” value—which considers\
    \ parameters such as residual energy, sensing energy, receiving\nenergy, aggregation\
    \ energy, and transmission energy—is selected as the CH node for each\nround.\
    \ Finally, the route is established using the metrics residual energy ratio (RER),\
    \ queue\nutilization (QU), and expected transmission count (ETX).\nAnother RPL\
    \ enhancement termed weighted random forward RPL (WRF-RPL) is\nproposed by Acevedo\
    \ et al. [136]. WRF-RPL suggests a load balancing over RPL mechanism,\nwhich distributes\
    \ the trafﬁc between multiple transmission paths, trying to avoid one\npreferred\
    \ parent’s congestions. WRF-RPL OF relies on the composition of two metrics, the\n\
    remaining energy and the count of parent nodes, where the latter aims at prioritizing\
    \ parent\nnodes with more optional paths to the destination. Forwarding decisions\
    \ are probabilistic\naccording to the deﬁned metric, such that nodes with a higher\
    \ number of parents or hops\nare more likely to be selected than others. The authors\
    \ utilize the Cooja simulator for\nevaluation. Rojas et al. [137] leverage a wired\
    \ data center network labeling protocol to\nsuggest IoTorii, a routing protocol\
    \ for LLNs. IoTorii supports multiple paths between\nsender and receiver, and\
    \ requires fewer table entries and control messages, with similar\nperformance\
    \ compared to the standard RPL.\nSensors 2022, 22, 2650\n21 of 44\nMolnár [138]\
    \ provides a graph-theoretic solution to the general problem of QoS-\nconstrained\
    \ routing in WSN that relies on RPL. The authors stress the difference between\n\
    multi-objective optimization and multi-constrained problem setting. Vera-Pérez\
    \ et al. [139]\nexamine the integration of RPL to IEEE 802.15.4e with time-slotted\
    \ channel-hopping (TSCH)\nmedium access mechanism. In particular, Ref. [139] characterizes\
    \ the long deployment\ndelays required for such networks to become operational\
    \ and able to start exchanging data\nmessages. The article proposes an analytical\
    \ model that estimates the average time that the\nsynchronization process can\
    \ take for a new node to join a TSCH-based network, as well as\nan estimation\
    \ of the maximum time required for the formation of a complete network of\nthis\
    \ kind, and the additional time required to set the RPL-based routes. The paper\
    \ validates\nthe analytical model via simulations. A recent comprehensive survey\
    \ on routing protocols\nfor LLN networks in IoT (not exclusive to RPL) can be\
    \ found in [140].\n5.2. Data Aggregation Routing Protocols for Energy Harvesting\
    \ WSN\nAs discussed in Section 2, an alternative for relying on batteries as the\
    \ source of energy,\nwith their imposed constraints (e.g., size, replacement,\
    \ etc.), is to embrace energy-harvesting\n(EH) technology. However, as mentioned\
    \ earlier, relying on EH imposes different con-\nstraints and limitations. Such\
    \ constraints can make battery-reliant schemes impractical\nwhen devising data\
    \ collection procedures. When battery-reliant schemes are applied to\nEH-based\
    \ platforms, performance can be highly degraded. Speciﬁcally, relying on EH can\n\
    induce high diversity between the different nodes, as different nodes can have\
    \ different\nattributes, such as energy depletion and charging rates, which affect\
    \ the nodes’ availability;\nin addition, different nodes can have different roles,\
    \ such as different reporting rates or\ndifferent report importance, requiring\
    \ more energy usage, which eventually also affects the\nnodes’ availability. When\
    \ a sensor is expected to transmit or receive a report, it needs to\nhave sufﬁcient\
    \ energy to complete the transaction; therefore, reliance on EH needs to be\n\
    considered when designing a scheduling protocol. For example, a data collection\
    \ scheme\nthat relies on EH should adapt the report rate to energy availability;\
    \ it can compromise\nthe rate of less important reports coming from the sensors\
    \ to leave them sufﬁcient energy\nfor emergency reports. It can prioritize sensors\
    \ with more energy over those with lower\nenergy, especially when there is some\
    \ redundancy in the reports received by different\nsensors. This is especially\
    \ so when dealing with multi-hop routing, where many of the\nnodes serve as relays\
    \ and have the burden to stay awake longer, to receive and transmit\nmore, which\
    \ escalates the heterogeneity of the nodes and accentuates the difference in\n\
    importance between the different nodes. Furthermore, if on a single-hop network,\
    \ we\ncould rely on the receiver (sink) to have unlimited power (connected to\
    \ a power source), in\nmulti-hop topologies also, the receivers rely on EH; hence,\
    \ when scheduling a transmission,\nwe need to ensure that both transmitter and\
    \ receiver have sufﬁcient power to complete the\ntransaction. In the following,\
    \ we present several routing protocol adaptations for EH-WSN\nin the context of\
    \ data aggregation.\nThe typical setup considers that each node (sensor) encompasses\
    \ an energy har-\nvester and an energy storage device and is solely powered by\
    \ the renewable energy\navailable to it by its energy storage device. A multi-hop\
    \ topology is considered such\nthat the data from many of the sensors need to\
    \ traverse multiple links before reaching the\nsink. Jeong et al. [141] propose\
    \ an adaptive data aggregation scheme for energy-harvesting\nWSNs. The suggested\
    \ scheme relies on two residual-energy thresholds, lower and upper.\nEach node\
    \ periodically estimates its residual energy level to determine whether or not\
    \ to\ntransmit data. When the node’s residual energy is either above the upper\
    \ threshold or\nbelow the lower threshold, the node transmits its aggregated data.\
    \ If its energy is below\nthe lower threshold, the node enters energy-saving mode\
    \ after transmitting the data. Its\nradio is turned off, and it waits to regain\
    \ sufﬁcient energy before turning its radio back\non. In normal operation mode,\
    \ where the residual energy is between the two thresholds,\nthe node only aggregates\
    \ data received from other nodes and collects its own sensed data.\nIf a node’s\
    \ aggregated data in normal mode exceeds its storage limit, the node transmits\n\
    Sensors 2022, 22, 2650\n22 of 44\nthe data regardless of its residual energy.\
    \ While this scheme is clear and straightforward\nto implement, it lacks latency\
    \ evaluation and a discussion about rendezvous between a\ntransmitter and a receiver.\n\
    Chen et al. [142] experimentally show that in energy-harvesting-based wireless\
    \ sensor\nnetworks (EH-WSNs), the required nodes’ charging time to be ready to\
    \ receive or send a\npacket is much greater than the time required for the contention\
    \ resolution mechanism and\ndominates the data aggregation latency. In addition\
    \ to the common collision deﬁnitions, the\npaper deﬁnes an “energy-collision”,\
    \ which occurs due to battery level constraint and not\ndue to simultaneous transmissions.\
    \ Speciﬁcally, energy-collision occurs when a transmitter-\nreceiver tuple is\
    \ scheduled for transmission, but the transmission cannot take place because\n\
    at least one of the two nodes has insufﬁcient energy to transmit or receive the\
    \ packet due\nto recent activity (insufﬁcient time has elapsed since its last\
    \ transmission or reception to\nharvest enough energy for the subsequent scheduled\
    \ transmission). An adaptable data\naggregation tree is constructed, which considers\
    \ each node’s residual and harvested energy,\nand three energy-collision-aware\
    \ data aggregation algorithms are proposed.\n5.2.1. Cluster-Based Routing Protocol\
    \ That Relies on EH\nSeveral studies have suggested various adaptations for LEACH\
    \ WSN cluster-based\nrouting protocol (e.g., [106]) for EH-based WSN (EH-WSN).\
    \ Recall that LEACH’s cluster-\nhead selection mechanism randomly selects sensor\
    \ nodes as cluster-heads to distribute\nthe energy consumption between them evenly,\
    \ which can seemingly cope with the EH\nconstraints. However, note that even when\
    \ the nodes’ platform is exactly the same, the\npotential of different nodes to\
    \ harvest energy, dependent on their speciﬁc ambient con-\nditions, can be very\
    \ different. Furthermore, the node’s location with respect to the sink\ncan highly\
    \ inﬂuence the amount of data it needs to relay toward the sink, causing high\n\
    discrepancies between the energy utilized by various nodes. To cope with these\
    \ discrepan-\ncies, Xiao et al. [143] modify LEACH’s cluster-head selection mechanism\
    \ and deﬁne a new\nmetric termed “energy potential function” to measure each node’s\
    \ capability to harvest\nenergy. The paper devises a cluster-head selection strategy\
    \ that prioritizes nodes with\nhigher expected stored energy (based on the currently\
    \ available energy and their potential\nenergy) to become cluster-heads, regardless\
    \ of the number of instances that the node was\nselected as cluster-head in the\
    \ past.\nTo address the imbalance between the energy expected to be consumed by\
    \ cluster-\nheads (CHs) that are closer to the sink and are expected to spend\
    \ more energy on relaying\npackets from farther clusters, and CHs that are further\
    \ from the sink and expected to relay\nless trafﬁc, Wu et al. [144] suggest an\
    \ unbalanced clustering mechanism. In particular,\ncluster sizes are determined\
    \ according to the distance (hop count) to the sink to balance the\nenergy consumption\
    \ of the CHs. Accordingly, clusters closer to the sink, which are expected\nto\
    \ relay more inter-cluster trafﬁc, will be smaller, so that they collect less\
    \ intra-cluster\ntrafﬁc; clusters further away from the sink and expected to relay\
    \ less inter-cluster trafﬁc\nwill comprise more nodes, so that they collect more\
    \ intra-cluster trafﬁc. The mechanism\nsuggested to attain this balance is partitioning\
    \ the network conceptually into concentric\nrings around the sink with linearly\
    \ increasing radii. Each ring comprises nodes with\nthe same hop distance to the\
    \ sink. Clusters within the same ring will have the same\nsize. CH selection is\
    \ designed to balance the loads of each ring considering the available\nnodes’\
    \ energy, which is evaluated based on the EH rate. Following a similar approach,\n\
    Yang et al. [145] assume a highly symmetric circular sensor network in which the\
    \ sink\n(BS) is located at the center, and the sensors are distributed evenly\
    \ in a disc around it.\nAs with [144], the sensor ﬁeld is divided into concentric\
    \ rings; however, in this study,\nthe rings are determined to have an equal area\
    \ such that the number of sensors in each\nring is expected to be the same. Under\
    \ the given model, Ref. [145] analyzes the energy\nconsumption of intra- and inter-cluster\
    \ data transmission and derives the energy neutrality\nconstraints, which guarantee\
    \ that each node consumes less energy than the amount of\nenergy it has harvested.\
    \ The authors further devise a constraint formula of the number of\nSensors 2022,\
    \ 22, 2650\n23 of 44\nclusters required in each layer (ring) that balances the\
    \ average energy consumption of nodes\nin different layers. The energy neutrality\
    \ constraints and the cluster parameters are used to\nobtain the parameters (number\
    \ of rings, number of clusters in each ring, and minimum\nnetwork data transmission\
    \ cycle) that minimize the data transmission cycle. Based on the\nattained parameters,\
    \ the cluster-based routing protocol is derived. The protocol consists\nof an\
    \ initialization phase and repeated cycles divided into topology formation and\
    \ data-\ngathering phases. Bahbahani and Alsusa [146] suggest two separate enhancements.\
    \ The\nﬁrst, termed cooperative transmission strategy, enables nodes to serve\
    \ as relays to relay\nundelivered packets from cluster members to CHs and from\
    \ CHs to the sink node. The\nsecond mechanism, termed cluster-head duty-cycle,\
    \ regulates the frequency at which a node\ncan become a CH based on duty-cycling\
    \ that adapts to the node’s energy-harvesting rate.\nTo conserve the energy of\
    \ nodes that are more susceptible to energy depletion,\nBozorgi et al. [147] select\
    \ CHs, taking into account their residual energy, expected har-\nvest energy,\
    \ distance from the sink, number of neighbors, and, similar to LEACH, the\nnumber\
    \ of times a node has already served as a CH in the past. The proposed approach,\n\
    which combines centralized and distributed mechanisms, relies on a signal transmitted\n\
    by the sink that can be received by all the nodes, which allows them to estimate\
    \ their\ngeographic distance from the sink. The network is partitioned by the\
    \ sink into four layers\nbased on distance. The sink further computes the individual\
    \ coverage radius of each node\n(potential CH) based on distance (nodes closer\
    \ to the sink, which are therefore expected\nto relay trafﬁc coming from more\
    \ distant clusters, will have a smaller radius, and thus\nless intra-cluster trafﬁc;\
    \ on the other hand, nodes farther away from the sink, which are\ntherefore expected\
    \ to have less inter-cluster trafﬁc to relay, are assigned a longer radius,\n\
    and therefore more intra-cluster trafﬁc). The paper suggests a distributed contention-based\n\
    mechanism for selecting the CHs in which the contention window takes into account\
    \ the\nparameters mentioned above. Another cluster-based routing for EH-WSN is\
    \ proposed by\nRen and Yao [148]. The proposed routing scheme is divided into\
    \ cluster establishment and\ndata collection. It is suggested that besides the\
    \ typical cluster members (CMs) and cluster-\nhead (CH), a new entity be devised,\
    \ termed in the paper scheduling node (SN), which is\ndifferent from the CH. The\
    \ main task of the SN is to monitor the energy of all the cluster\nmembers during\
    \ the data collection stage and select a CH based on the monitored residual\n\
    energy of the cluster members. The transmission range of nodes can also be adjusted\
    \ based\non their residual energy. The data collection stage, which adapts a round-based\
    \ scheme\nsimilar to LEACH, is divided into the data transmission and CH selection\
    \ stages.\nSinde et al. [149] aim to improve the network efﬁciency by three means:\
    \ (i) clusteriza-\ntion mechanism that takes into account energy consumption during\
    \ the data aggregation\nphase, (ii) duty cycle adaptation of each node such that\
    \ each sensor node determines its\nmode of operation, and (iii) routing mechanism\
    \ based on ant colony optimization that\nchooses the path between the source and\
    \ the sink node that reduces the delay incurred.\nOverall, while the paper jointly\
    \ addresses several topics in WSN, including those connected\nto energy-efﬁcient\
    \ data gathering, its main contribution is the detailed NS3 simulation.\n5.2.2.\
    \ Mobile Charger\nToday’s technology enables dedicated wireless charging equipment\
    \ (WCE) to recharge\nthe nodes’ batteries, prolonging the lifetime of wireless\
    \ rechargeable sensor networks.\nA model in which, in addition to the sink (base\
    \ station), a mobile station will navigate\nthrough the WSN to collect data and\
    \ charge sensor nodes is considered by Liu et al. [150].\nThe paper suggests a\
    \ joint routing and charging strategy. The joint problem is decomposed\ninto two\
    \ sub-optimization problems: routing tree optimization and charging path optimiza-\n\
    tion. Heuristic algorithms based on simulated annealing algorithms were applied\
    \ to solve\nthese sub-optimization problems.\nA joint charging and routing algorithm\
    \ with WCE-assisted data gathering is also\nsuggested by Lu et al. [151]. The\
    \ model suggested therein assumes that the BS (sink) can\nget the information\
    \ of each node at any time, including node location, residual energy,\nSensors\
    \ 2022, 22, 2650\n24 of 44\nand energy consumption rate. The suggested approach\
    \ relates to data routing and energy\nsupplement to undercharged nodes. The data\
    \ routing algorithm considers several factors:\nsensor buffer occupancy, load,\
    \ and energy. To ﬁnd the route for the mobile recharging\nunit to traverse, they\
    \ rely on Du [152] to seek the shortest Hamiltonian cycle between the\nnodes that\
    \ urgently need energy replenishment traversed by the mobile recharging unit.\n\
    Additional nodes along the traversed path can also be charged. Furthermore, the\
    \ mobile\nrecharging unit can also gather data from sensors with a critical buffer\
    \ occupancy during\nits recharging cycle.\nIn the following section, we discuss\
    \ network coding (NC) and, in particular, linear\nnetwork coding in the context\
    \ of data gathering in WSN.\n5.3. Network Coding (NC)\nNetwork coding leverages\
    \ the routing protocols and the ability to construct multi-path\nrouting between\
    \ sources and their destination (the sink) to enable intermediate nodes to\nperform\
    \ coding on the incoming packets before forwarding them. In the following section,\n\
    we discuss network-coding-related works.\nLinear network coding was ﬁrst introduced\
    \ by Celebiler and Stette [153] and evolved in\nthe seminal paper by Ahlswede\
    \ et al. [154] as a means to improve the network’s throughput,\nefﬁciency, and\
    \ scalability, which can also be leveraged to improve the network resilience\n\
    to attacks and eavesdropping. Linear network coding allows the network’s intermediate\n\
    nodes (e.g., relays) to accumulate arriving messages and forward a newly encoded\
    \ message,\nwhich is a linear combination of the accumulated packets, multiplying\
    \ them by coefﬁcients\nchosen from a ﬁnite ﬁeld. The manner in which nodes encode\
    \ and decode messages de-\npends on the selected coding scheme. Network coding\
    \ (NC) over wireless communication\ncan reduce the number of transmissions by\
    \ leveraging the fact that a single transmission is\noverheard by multiple nodes\
    \ in the transmitter’s vicinity, and can therefore be utilized by\neach of these\
    \ nodes, which will forward a coded packet with unique coefﬁcients comprising\n\
    its own message and the messages it overheard (e.g., [155]).\nIn WSNs, NC can\
    \ be utilized for various trafﬁc patterns, including data dissemination\n(one-to-many\
    \ communication) and data gathering. Works on energy-efﬁcient NC-based\ndissemination\
    \ can be followed in the survey [156], with multi-hop routing being empha-\nsized.\
    \ In data dissemination in which the base station/sink distributes information\
    \ to\nthe sensor nodes, NC is beneﬁcial mainly for distributing control messages\
    \ (broadcast or\nmulticast trafﬁc) or, in case of unicast trafﬁc, for recovering\
    \ lost packets (retransmissions).\nThe latter utilization relies on the fact that\
    \ different nodes heard or did not hear different\npackets. Accordingly, nodes\
    \ store packets they overheard, even if not destined to them-\nselves. The transmitter\
    \ (e.g., access-point) accumulates several packets that need to be\nretransmitted,\
    \ each for a different receiver. It transmits a coded packet that is a composite\n\
    of these accumulated packets. Each receiver can decode a missing packet by utilizing\
    \ its\nstored overheard packets (e.g., [157–162], where the last two mainly focus\
    \ on data dis-\nsemination of control management messages. It is noteworthy that\
    \ Cohen et al. [157] also\npresent a successful real HW radio deployment of their\
    \ scheme. XOR-CoW [163] exploits\nthe same concept to design an IoT protocol in\
    \ which relays transmit coded packets that\nmix downlink and uplink trafﬁc. Similar\
    \ to other previously mentioned studies, the coding\nscheme by Swamy et al. [163]\
    \ is over ﬁnite Galois ﬁeld of size 2 (GF(2)) (i.e., XORing the\ncoded packets).\n\
    Network coding is widely explored for data-gathering schemes. Typically, an NC-\n\
    based protocol involves both the coding scheme and the multi-path routing. It\
    \ relies on\nthe relay nodes to overhear packets and perform the coding, and on\
    \ the sink (or multiple\nsinks) to collect sufﬁcient coded packets (combinations)\
    \ to encode the sent information.\nThe limited ability of the sensors constrains\
    \ NC over WSN (e.g., limited storage to store\noverheard packets, limited computation\
    \ power to perform sophisticated operations, limited\nawake time for packet overhearing,\
    \ etc.). The utilized coding scheme inﬂuences the\nperformance of the NC algorithm\
    \ in several aspects such as the throughput, algorithm\nSensors 2022, 22, 2650\n\
    25 of 44\ncomplexity, encoding complexity, decoding complexity, packet overhead\
    \ (bits), required\nfeedback, and so on. Note that many of these metrics are directly\
    \ translated to air time\nand energy consumption, which must be considered in\
    \ WSN. The random linear network\ncoding (RLNC) encoding scheme (e.g., [164])\
    \ is widely used because, despite its simplicity,\nit can attain throughput that\
    \ is close to the optimal one using a decentralized algorithm.\nIn RLNC, relays\
    \ transmit random linear combinations of the packets they receive, with\nrandomly\
    \ chosen coefﬁcients from a ﬁnite Galois ﬁeld (GF). The receiver must obtain a\n\
    sufﬁcient number of linearly independent combinations (packets) to decode the\
    \ original\npackets. If the GF size is sufﬁciently large, the probability that\
    \ the randomly generated\ncombinations will be linearly independent is high. However,\
    \ the receiver needs to know the\ncoefﬁcient used in each combination; hence,\
    \ it needs to be sent as overhead piggybacked on\neach traversed packet. The larger\
    \ the GF size, the higher the overhead. RLNC scheme with\ndistributed encoding\
    \ was utilized by Stefanovi´c et al. [165] for a perimeter data-gathering\nobjective,\
    \ in which the data should reach the perimeter nodes that are located on the\n\
    boundary of the covered area. The proposed scheme does not deploy routing algorithms\
    \ or\nmaintain routing information and relies on random walks.\nOne disadvantage\
    \ of RLNC is its decoding complexity in the order of O(n3), where n\ndenotes the\
    \ number of original packets. Sparse end-to-end erasure-correcting codes can\n\
    reduce the decoding load on the receiver at the cost of introducing an additional,\
    \ non-\nnegligible delay. Feizi et al. [166] suggest a tunable sparse network\
    \ coding (TSNC) scheme\nthat tunes the level of sparsity as the transmission process\
    \ evolves. This tuning process\ncan reduce the delay overhead by using denser\
    \ codes towards the end of the transmission\nwhile maintaining the complexity\
    \ advantages of a sparse code. Prior et al. [167] propose\ntwo network coding\
    \ schemes for information gathering, which are based on tunable sparse\ncodes,\
    \ with and without explicit feedback from the sink. The suggested schemes are\n\
    designed for meter readings in a smart grid. Nistor et al. [168] further exploit\
    \ RLNC and\nTSNC for data gathering and derived analytical bounds for a multi-hop\
    \ line network using\na ﬂuid model, which is valid for any ﬁeld size and various\
    \ sparsity levels, and has two\ndifferent feedback mechanisms.\nSenseCode [169]\
    \ adopts the NC paradigm, aspiring to balance energy efﬁciency and\nend-to-end\
    \ packet error rate. SenseCode relies on nodes transmitting both uncoded and\n\
    coded packets. Each node stores only a small portion of the packets it overhears,\
    \ which can\nbe attained by letting the node wake up sporadically within its duty\
    \ cycle and stay awake\nfor a short time interval each time it wakes up, storing\
    \ overheard packets. Accordingly,\neach coded packet comprises only a small subset\
    \ of the packets the node could have\npotentially overheard and coded. NetCoDer\
    \ [170] concentrates on a star topology in\nwhich the star-head can be a sink\
    \ or a relay that collects information from its neighbors.\nNetCoDer opportunistically\
    \ selects, based on network conditions, a set of relays that, in\naddition to\
    \ the data sent by the nodes, send additional coded packets with packets they\n\
    overheard, which helps the star-head recover lost packets. To reduce the overhead,\
    \ the\nrelays use LNC coefﬁcients based on the addresses of the sensor nodes.\
    \ A similar idea\nthat also does not rely on feedback was presented in SR-Code\
    \ [171] in which nodes and\nrelays send redundant coded messages to help the sink\
    \ recover lost messages. SR-Code\nutilizes the XOR operator (GF(2)). Similar to\
    \ NetCoDer, SR-Code reduces the overhead\nby using a bitmap to identify the coded\
    \ packets rather than the address of the sending\nnode. Al-Hawri et al. [172]\
    \ assume a data-gathering setup with single or multiple gateways\n(sinks) that\
    \ can collaborate (exchange information via accessible shared distributed storage\n\
    system). The paper distinguishes between traditional relays, which forward packets\
    \ they\nreceive as-is, and encoding relays, which perform network-coding on the\
    \ packets they\nreceive before forwarding them. The authors suggest a mathematical\
    \ model and a heuristic\nalgorithm to determine the number of network-encoding\
    \ nodes and their location, which\nis insufﬁcient for the aggregate received data\
    \ at the gateway/gateways to be decodable,\ntaking into account link failure scenarios.\n\
    Sensors 2022, 22, 2650\n26 of 44\nProtocols that utilize NC in WSN need to balance\
    \ achieving the NC expedience and\ndiverse performance criteria. On the one hand,\
    \ the motivation is to send only coded packets,\nas sending uncoded packets degrades\
    \ the NC gain. On the other hand, a strategy in which\na relay waits for packets\
    \ to arrive in order to code them can yield unacceptable delays.\nFurthermore,\
    \ storing arriving packets while waiting for additional packets to arrive before\n\
    coding them can result in a buffer overﬂow and packet loss. To overcome these\
    \ drawbacks,\nChen et al. [173] suggest an opportunistic network coding (ONC)\
    \ approach in which the\nrelay can transmit either coded or uncoded packets. Each\
    \ relay determines whether to\ntransmit a coded or uncoded packet according to\
    \ its queue state at each transmission\nopportunity. For the simple topology of\
    \ a relay interconnecting two nodes that communi-\ncate with one another, Ref.\
    \ [173] presents an ONC strategy that can achieve the optimal\ndelay/power tradeoff.\
    \ Mirani et al. [174] adopt the ONC paradigm for data dissemination\nin vehicular\
    \ ad hoc networks (VANETs), for which the mobile nodes (vehicles) employ a\ndecode-and-forward\
    \ scheme with subjective timers determined according to their distance\nfrom the\
    \ source. In Tan et al. [175], an opportunistic routing protocol with opportunistic\n\
    network coding is proposed for correlated data gathering.\nNext, we provide more\
    \ recent works that utilize NC in WSNs and related networks\nthat are not particular\
    \ to data-gathering applications. Marques et al. [176] propose to use\nNC in a\
    \ fog computing scenario, since in the fog computing system architecture, the\
    \ data\nmeasured on a node should be delivered to many other destination nodes.\
    \ The authors\ndesign a protocol for encoding and decoding and provide a design\
    \ to incorporate it on\nthe MAC level. Uwitonze et al. [177] consider a setup\
    \ in which a WSN has been split into\nmultiple disjoint partitions and suggests\
    \ a polynomial-time heuristic algorithm based on\nspace network coding termed\
    \ relay placement using space network coding (i.e., rather than\nsend additional\
    \ coded data, additional relay nodes are deployed) for ﬁnding the optimal\nnumber\
    \ and positions to place relay nodes for restoring the network connectivity.\n\
    A network coding backpressure routing scheme for data aggregation in large-scale\n\
    Internet of things (IoT) networks is explored by Malathy et al. [178]. The proposed\
    \ routing\nscheme exploits network coding for the data aggregation process, which\
    \ improves the\nthroughput of the network by eliminating redundant packets. The\
    \ paper relies on cluster-\nbased routing that selects the cluster-heads (CH)\
    \ based on the available energy and distance,\nwhich helps to minimize trafﬁc\
    \ congestion and provide efﬁcient data transmission.\n5.4. Data Collection Utilizing\
    \ Mobile Sink and Unmanned Aerial Vehicle (UAV)\nA different paradigm for the\
    \ traditional setup of data gathering in WSN, which\nrelies on a single or multiple\
    \ static sink(s) towards which all trafﬁc needs to travel, is\nthe utilization\
    \ of one or multiple mobile sinks (MSs) that traverse the terrain and collect\n\
    the reports from the devices. Such mobile sink(s) can be the trafﬁc’s ﬁnal destination\
    \ or\njust an accessory that collects the data and transmits it to the sink. Note\
    \ that in the latter\ncase, the ﬁnal destination is not necessarily located within\
    \ the wireless network realm\nand can be located outside it (e.g., within the\
    \ Internet or the cloud). Since these mobile\nsinks are unmanned aerial vehicles\
    \ in many cases, these systems are sometimes called\nunmanned aerial vehicle-wireless\
    \ sensor networks (UAV–WSNs). This section reviews\nseveral state-of-the-art developments\
    \ in mobile sink(s). Since sometimes the MS routing\nchallenges are interleaved\
    \ with the MAC layer’s challenges, the solution suggested in some\npapers, and\
    \ accordingly their description, incorporated both layers.\nTypically, data-gathering\
    \ protocols that utilize moving sink(s) aim at optimizing some\nperformance metrics,\
    \ such as overall power consumption, average or worst latency of the\ndata, trajectory\
    \ traversed by the mobile sink, awake time of the sensors, maximizing the\nlife\
    \ cycle of the network, and so on. There are different options to classify these\
    \ protocols:\nthey can be classiﬁed according to this aforementioned performance\
    \ objective, or other\ncategories, such as characteristics of the moving sink,\
    \ its speed and constraints, network\nmodel, communication standard utilized,\
    \ and so on. In this section, we will classify the\nprotocol into two classes:\
    \ protocols that solely rely on the moving sink with no intra-trafﬁc\nSensors\
    \ 2022, 22, 2650\n27 of 44\nbetween the nodes (all the trafﬁc is directly transmitted\
    \ to the moving sink), and protocols\nthat combine routing between the nodes and\
    \ trafﬁc forwarding to the sink. This latter\nclass will mostly include cluster-based\
    \ protocols in which the nodes are clustered and\ncluster-heads (CHs) are selected,\
    \ but rather than the CHs routing the trafﬁc towards the\nsink, they forward the\
    \ trafﬁc directly to the mobile sink.\n5.4.1. Routing Directly to the Mobile Sink(s)\
    \ with No Intra-Node Data Forwarding\nIn this section, we review papers in which\
    \ the only data trafﬁc is between the nodes\nand the mobile sink, and no data\
    \ is forwarded between the nodes.\nZhan et al. [179] consider a general fading\
    \ channel model and suggest an efﬁcient\nsub-optimal solution that minimizes the\
    \ energy consumption of all sensor nodes (SNs)\nwhile ensuring that data is collected\
    \ reliably from all SNs with bounded outage probability.\nThe suggested solution\
    \ decouples the joint optimization problem, which considers both\nthe SNs’ wake-up\
    \ schedule and the unmanned aerial vehicle (UAV’s) trajectory, into two\nseparate\
    \ optimization problems, ensuring that the amount of data collected from each\
    \ SN\nreliably exceeds a threshold. One of the formulated optimization problems\
    \ is non-convex\ndue to non-convex constraints, and therefore it needs to be relaxed.\
    \ The two problems are\nsolved iteratively to obtain an approximate solution.\
    \ A ﬂight time minimization problem\nfor a UAV that collects data from a set of\
    \ energy-constrained ground sensors is studied by\nGong et al. [180]. The sensors\
    \ are assumed to be located on a line (one dimension). Each\nsensor has a certain\
    \ amount of data to upload. The UAV can collect data either while\nﬂying or while\
    \ hovering, and only from a single sensor at a time. Accordingly, the UAV’s\n\
    trajectory is divided into non-overlapping data collection intervals, each dedicated\
    \ to\ncollecting data from a single sensor. The objective is to minimize the total\
    \ ﬂight time of the\nUAV from an initial point to a destination by jointly optimizing\
    \ the division of intervals, the\nUAV’s speed, as well as the sensors’ transmission\
    \ power. The ﬂight time minimization is\nformulated as a dynamic programming (DP)\
    \ problem, where each DP stage considers ﬂight\ntime minimization for a single-sensor\
    \ data collection scenario. The algorithm for the single-\nsensor case is used\
    \ to ﬁnd the UAV’s optimal speed and the sensor’s transmission power.\nIt is shown\
    \ that the UAV’s optimal speed is proportional to the given energy of the sensors\n\
    and the inter-sensor distance but is inversely proportional to the data upload\
    \ requirements.\nThe metric addressed by Liu et al. [181] is the age of the information.\
    \ In particular,\nRef. [181] utilizes UAV, and suggests two age-optimal trajectories\
    \ for it to collect the\ndata from the ground SNs, one that minimizes the age\
    \ of the ‘oldest’ sensed information\namong the sensors, and another that minimizes\
    \ the average age of the information sensed\nby all sensors. It is shown that\
    \ both age-optimal trajectories correspond to the shortest\nHamiltonian path in\
    \ the wireless sensor network, in which the distance between any\ntwo sensors\
    \ is represented by the amount of inter-visit time. The authors adopt dynamic\n\
    programming and genetic algorithm to ﬁnd the two different age-optimal trajectories.\n\
    Liu et al. [182] also utilize a UAV to collect the data from the ground sensors.\
    \ The model\nsuggested therein assumes that the sensors (nodes) are randomly distributed\
    \ over a square\narea. The area is partitioned into small square cells. The UAV\
    \ ﬂying above the cells\nhovers above each cell to collect all the data of the\
    \ sensors within the cell. The paper\nstudies the amount of data per unit time\
    \ that the UAV can collect from the ground nodes\nas a function of the number\
    \ of cells, the height of the UAV, the number of sensors, and\nthe energy capacity\
    \ of the UAV. The paper suggests a similar analysis when multiple\nUAVs are utilized.\
    \ It seeks the optimal number of cells to maximize the per-node capacity\nunder\
    \ the suggested model and shows that under the suggested data collection network,\n\
    multiple UAVs can signiﬁcantly improve the per-node capacity attained by a single\
    \ UAV.\nThe balanced network communication protocol (BNCP) that utilizes UAV as\
    \ a mobile\nsink is suggested by Qin et al. [183]. There is no inter-sensor routing\
    \ in BNCP, and all\nsensors’ communication energy is spent on the sensor-UAV transmission\
    \ links. BNCP is\nimplemented and evaluated.\nSensors 2022, 22, 2650\n28 of 44\n\
    5.4.2. Cluster-Based Data Forwarding\nRather than the mobile sink node traversing\
    \ the network between all the sensors, a\ndifferent approach groups the sensors\
    \ into clusters and selects cluster-heads (CH), which\ncollect the data from all\
    \ cluster members, thus decreasing the traverse of the mobile sink.\nIn general,\
    \ data gathering in a clustered WSN imposes a tradeoff between the energy\nconsumed\
    \ during data collection within each cluster and the energy consumed by the\n\
    mobile sink. On the one hand, the higher the number of clusters (smaller clusters),\
    \ the\nless energy is consumed during data collection by the cluster-heads (CH);\
    \ on the other\nhand, it follows that the UAV will have to access more CHs on\
    \ its route, and consequently,\nthe energy spent by the UAV will be higher in\
    \ that case. This trade-off is one of the main\nchallenges in addressing the joint\
    \ problem of clusterization and CH selection, jointly with\nﬁnding the path traversed\
    \ by the UAV, as reﬂected in several papers discussed below.\nNajjar-Ghabel et\
    \ al. [184] propose a two-phase algorithm, termed DGOB, for data\ngathering in\
    \ WSNs in an environment impaired by obstacles, which utilizes a mobile sink\n\
    that traverses the network and collects the data. Both phases, node clusterization\
    \ and\nMS trajectory construction, exploit artiﬁcial intelligence (AI) schemes.\
    \ Tazibt et al. [185]\nutilize a small-scale drone to gather the data from scattered\
    \ sensors. Like in several other\npapers that rely on UAV to collect data from\
    \ cluster-heads, the challenge in [185] is two-fold:\n(i) clusterization and CH\
    \ selection (in contrast with other papers, this paper allows multi-\nhop clusters,\
    \ such that cluster members are up to a predeﬁned number of hops from their\n\
    CH); and (ii) plan of the drone trajectory for traversing through all CHs with\
    \ minimum\nenergy consumption (e.g., minimum path length). Even though the two\
    \ problems are\nrelated, the authors solve the two issues sequentially. They ﬁrst\
    \ solve the CH selection\nby formulating an optimization problem that seeks the\
    \ minimal set of cluster-heads that\nguarantee that all nodes are at most h hops\
    \ from a CH in the set. After determining the CH\nset via linear programing, they\
    \ utilize the 2-opt heuristic, which relies on a simple local\nsearch algorithm\
    \ for solving the traveling salesman problem, in order to ﬁnd the optimal\ntravel\
    \ trajectory for the drone between the selected CHs.\nKumar and Dash [186] also\
    \ suggest a data-gathering-by-mobile-sink scheme in WSN.\nThe model in [186] assumes\
    \ that the mobile sink is moving along a pre-speciﬁed path with\nconstant speed\
    \ and can collect data while traveling. The paper denotes all the sensors\nthat\
    \ are in transmission range from the mobile-sink traversed path, and can therefore\n\
    relay trafﬁc to it, as sub-sinks. All other nodes need to forward their data to\
    \ these sub-\nsinks, possibly through multi-hop communication, in order for them\
    \ to relay the data\nto the mobile sink. The paper suggests two different models:\
    \ the ﬁrst assumes that the\nmobile sink can receive data from only one sensor\
    \ at a time, while the second assumes that\nthe mobile sink can receive data from\
    \ multiple sensors simultaneously. Both suggested\nalgorithms comprise three phases:\
    \ (i) identify the relay nodes (sub-sinks) that are within\ntransmission range\
    \ from the mobile sink trajectory (unit disk graph model), and partition\nthe\
    \ path into segments that are the union of all the transmission disks of all the\
    \ sub-sinks;\n(ii) determine the communication time each sub-sink can have with\
    \ the mobile sink, and\naccordingly, the amount of data it can transmit; (iii)\
    \ utilize a network ﬂow approach to\ndetermine which sub-sink transmits to the\
    \ mobile sink in each of the mobile sink’s path\nsegments. Ebrahimi et al. [187]\
    \ aim to optimize total transmission power between WSN\ncluster-heads in an IoT\
    \ network. The problem is split into subproblems, which include\nCH assignment,\
    \ building of the forwarding tree within each cluster, and optimal UAV\ntrajectory\
    \ calculation. The data transmitted by CH to UAV is pre-processed by a specialized\n\
    optimized compression. A genetic algorithm for energy-efﬁcient CH selection is\
    \ employed\nby Wu et al. [188].\nThe focus of Zahra et al. [189] is on MS that\
    \ traverses a WSN that relies on a cluster-\nbased data collection protocol in\
    \ which cluster-heads are responsible for collecting and\ntransmitting the cluster\
    \ members’ sensed data to the MS. The paper examines a scenario in\nwhich the\
    \ MS is constantly moving in a predeﬁned trajectory, regardless of whether the\n\
    data transfer was completed or not. Accordingly, when the cluster aggregate data\
    \ is too\nSensors 2022, 22, 2650\n29 of 44\nlarge, the CH cannot complete the\
    \ transaction. The authors suggest a mechanism in which,\nin case the CH cannot\
    \ complete the transaction, it can use different cluster members as\nrelays to\
    \ continue the transaction after the MS has moved out of the transmission range\n\
    of the CH. Likewise, Zhang et al. [190] also suggest a hybrid approach that combines\
    \ the\nMS with hierarchical routing-based protocol relying on node clusterization.\
    \ In order to\nimprove the efﬁciency of the MS data collection, Ref. [190] suggests\
    \ utilizing virtual heads\n(VHs) that lie on the MS trajectory on the cluster\
    \ boundaries that also transmit collected\ndata to the MS. The channel access\
    \ relies on a random access mechanism.\nThe UAV can be of different physical structures.\
    \ While some machines are able to slow\ndown and even to hover, others, especially\
    \ the winged UAVs, can only ﬂy with a constant\nvelocity. This limitation poses\
    \ an additional challenge; see Say et al. [191] for a possible\nsolution. To address\
    \ the velocity limitation, the grid topology of the UAV’s coverage is\ndivided\
    \ into frames, and the most distant frames get the highest priority. The priority-based\n\
    transmissions from sensors to the moving UAV are incorporated into a MAC layer,\
    \ by\nintroducing a priority-based contention window adjustment scheme. A smaller\
    \ contention\nwindow is assigned to the frame where sensors send packets from\
    \ the rear side of the UAV,\nand should therefore have a higher transmission priority.\
    \ This results in a low packet loss\nwhen the UAV ﬂies forward. On top of this\
    \ architecture, a frame-selection-based routing\nprotocol is formulated.\n6. Wearables\
    \ and Wireless Body Area Networks (WBAN)\nNumerous applications rely on data gathering\
    \ and report collection in WSN and IoT,\nand some are mentioned throughout the\
    \ paper. There is no doubt that the essence of WSN\nis the applications that utilize\
    \ the infrastructure discussed throughout this paper. Providing\na thorough review\
    \ of such applications can encompass several surveys. Since wearables\nare becoming\
    \ highly popular and a ubiquitous application which imposes new challenges\nin\
    \ the context of data gathering, we discuss several recent results and related\
    \ challenges in\nthe context of wearables. Figure 5 depicts the main topics discussed\
    \ in this section.\nWearables and WBAN\nSection 6\nEnergy Harvesting (EH)\nSection\
    \ 6.1\nTechnological Advances\nSection 6.2\nTransmission Protocols\nSection 6.3\n\
    WBAN Applications\nSection 6.4\nFigure 5. The main topics in the context of wearables\
    \ covered in the section, and a rough partition of\nthe papers covered by these\
    \ topics.\nWearable technology refers to smart devices attached to the human body\
    \ or apparel\nto monitor the user and their environment. Wearables are designed\
    \ to detect, analyze,\nand transmit information, which allows continuous monitoring\
    \ of the subject. In some\ncases (e.g., healthcare applications), feedback is\
    \ returned to the wearer with strict perfor-\nmance constraints (e.g., reliability,\
    \ latency bounds). Such applications can necessitate the\nmonitoring of both bodily\
    \ conditions, such as blood pressure, blood glucose level (e.g.,\nin conjunction\
    \ with an insulin pump), ECG, EMG, body temperature, accelerometer, and\ngyroscope,\
    \ as well as environmental conditions that might inﬂuence the user, such as\n\
    temperature, humidity, CO2 level, dust level, and location.\nSensing essential\
    \ human physiological parameters led to the innovation of wireless\nbody area\
    \ networks (WBANs). WBAN typically relates to a small area network that spans\n\
    the whole human body. It comprises devices (wearables) located in the apparel,\
    \ on the\nbody, or under the skin, and are wirelessly connected. Even though tracking\
    \ physical\nconditions applies to diverse domains, including medical, social,\
    \ and economic ones, each\nwith its particular implications and extensive research\
    \ in the ﬁeld, the speciﬁc challenges\nof acquiring data in WBANs necessitated\
    \ new solutions designed for WBAN. Speciﬁcally,\nSensors 2022, 22, 2650\n30 of\
    \ 44\nsince the sensors in WBANS are designed to be located close to the monitored\
    \ individual,\nthey impose particular challenges related to their speciﬁc structural,\
    \ functional, and size-\nrelated constraints. In the sequel, we dwell on some\
    \ of the most critical challenges and\nrecent promising results on WBANS. The\
    \ main objective of this survey is to understand the\ndata-gathering challenges.\
    \ In the special case of WBANS, we also elaborate on the sensors’\nphysical and\
    \ mechanical structure, which directly impact the data acquisition process.\n\
    Many of the challenges pertaining to WSN in general, which are described throughout\n\
    this survey, also apply to wearables. However, some of these challenges are exaggerated\n\
    when applied to wearables due to their unique characteristics. For example, energy-related\n\
    challenges that are essential to address and substantially inﬂuence any WSN design\
    \ and\nperformance, open a different perspective on wearables. Speciﬁcally, due\
    \ to their sensing\ndevices’ tiny size, the energy storing capacities are limited.\
    \ Yet, many wearable applications,\nparticularly healthcare ones, employ continuous\
    \ sampling and communication tasks that\nconstantly consume energy and deplete\
    \ the device’s battery. Frequent battery replacement,\nwhich can be a burden in\
    \ any WSN, can be even more cumbersome in wearables and can\nhinder the adoption\
    \ of these technologies (e.g., when the wearables are implants, battery\nreplacement\
    \ can involve an invasive medical intervention). Accordingly, energy-efﬁcient\n\
    approaches designed for wearable sensor networks are important for disseminating\
    \ the\ntechnology into additional domains. An inclusive review of energy-efﬁcient\
    \ approaches\ndesigned for human context recognition (HCR) based on wearable sensor\
    \ networks is\ngiven by [192]. This paper classiﬁes energy-efﬁcient mechanisms\
    \ for health-related HCR\napplications, based on the task that the mechanism is\
    \ aimed at to reduce its energy con-\nsumption (e.g., sensing, communication,\
    \ computation). The paper reviews the related\nworks according to the classiﬁcation.\n\
    6.1. Energy Harvesting (EH)\nEnergy harvesting as a battery alternative has been\
    \ discussed in Section 5.2. However,\nEH in the context of wearables encounters\
    \ new challenges, such as critical reliability level,\nexpected tiny size and\
    \ position in/on the human body, limited exposure to energy sources\nsuch as solar\
    \ energy, and so on. Accordingly, we revisit EH and review some EH studies\nin\
    \ the context of wearables. The three most prominent techniques include photovoltaic\n\
    cells attached to a wearable (energy is accumulated from environmental illumination),\n\
    thermoelectric nanogenerators (the energy source is the heat produced by the human\
    \ body),\nand kinetic energy harvesters (energy is created by natural body motion).\
    \ All energy\nharvesting cases pose a fundamental challenge of effective energy\
    \ management, which\ninvolves continuous decision making regarding how much energy\
    \ to spend on sensing,\nmeasurements, on-board classiﬁcation, and transmission\
    \ (see also Section 5.2).\nWe present examples for each of the techniques mentioned\
    \ above in the context\nof wearables. Thermoelectric energy-harvesting units exploiting\
    \ self-generated human\nheat are suggested to be fabricated straight into the\
    \ textile of the garments [193]. Energy\nharvesting for activity-aware wearables\
    \ is designed by Khalifa et al. [194]. The idea is to\nremove the accelerometers,\
    \ which consume about 80% of the battery. Instead, the authors\npropose to employ\
    \ kinetic energy harvesters, which will convert human motion into\nelectrical\
    \ power. Additionally, to compensate for the accelerometers’ removal, the input\
    \ and\noutput of the kinetic energy harvester would be analyzed by a specialized\
    \ activity classiﬁer\nto track and identify the human activity (i.e., to perform\
    \ the primary task of the wearable).\nLight-based energy-harvesting wearables\
    \ are discussed by Park et al. [195]. It is noteworthy\nthat as the available\
    \ luminosity can be highly unpredictable, the overall functioning, data-\ngathering,\
    \ and transmission process would imply an optimization problem. Henceforth,\n\
    the same authors suggest a protocol to optimize the number and accuracy of interpretation\n\
    of human gestures by an energy-harvesting wearable device under an energy budget,\n\
    Park et al. [196]. To this end, they constructed an analytical model that characterizes\n\
    energy consumption based on experimental data and formulized the optimization\
    \ problem.\nEsteves et al. [197] suggest incorporating energy harvesting as part\
    \ of MAC 802.15.6. The\nSensors 2022, 22, 2650\n31 of 44\nproposed MAC modiﬁcation\
    \ includes the usage of some body sensors as relays. The\nmanaging part at a hub\
    \ (e.g., a smartphone) sets the optimal relay charging times to\nperform the data\
    \ transmission by relay effectively. A source and the relays send their\nenergy-harvesting\
    \ updates within the request for cooperation (RFC) packets. The charging\ntimes\
    \ are calculated according to the amount of energy at the source and relays and\
    \ are\nupdated in accordance with previous packet transmission success or failure.\n\
    6.2. Technological Advances\nWBAN utilization is penetrating new domains, spanning\
    \ a wide variety of sensors,\neach providing a different aspect of the monitored\
    \ subject. For example, healthcare ap-\nplications are expected to provide a wide\
    \ span of indicators from various physiological\nparameters. Speciﬁcally, to provide\
    \ a comprehensive status of the examinee, it requires, in\naddition to the standard\
    \ indicators such as heart rate and physical activity that many of us\nalready\
    \ have integrated in our watch, information at a deeper level and molecular level\n\
    insight into the dynamics of the wearer.\nTo cope with the growing popularity\
    \ of wearables and their expansion to a broader\nscope of applications, especially\
    \ in healthcare systems, with the increasing demand to\nimprove quality of service\
    \ (QoS) and quality of experience (QoE), a new generation of\nwearables has emerged.\
    \ This generation relies on several technological advances in both\nthe device\
    \ and cloud realms. The novel device technology utilizes new soft-sensing tech-\n\
    nologies, including innovative wearable materials such as conducting polymers,\
    \ rigid\nforms of hydrogel, gold and silver nanowires (to create nanowired tattoos\
    \ as stretchable\nsensors), carbon nanotubes, liquid metals, ionic liquids, and\
    \ others. These materials give\nrise to novel sensor families, such as electro-physiological\
    \ (acting on the electric potential\ndifference) physical and chemical sensors.\
    \ See the latest advances in the following related\nworks [198–200]. For example,\
    \ besides reviewing the key developments in sweat-sensing\ntechnology, Bariya\
    \ et al. [198] examine the requirements of the underlying components\nembedded\
    \ in sweat-based wearable sensors and discuss challenges for integrating wearable\n\
    sweat sensors in the development of personalized healthcare. Sweat-sensing technology\n\
    has been described earlier; see, for example, Salvo et al. [201], where a device\
    \ containing\ntwo humidity sensors located at different heights from the skin\
    \ is designed in a way that\nallows one to measure the sweat rate by the difference\
    \ in readings of these two sensing\nsub-units. Thermal comfort control by calculating\
    \ the relation between the vapor pres-\nsure and the temperature is designed into\
    \ watch-type sweat sensors by Sim et al. [202].\nSweat measurement by sweat biomarkers\
    \ (in particular, pH and Na+) is implemented\nby Song et al. [203]. In short,\
    \ the biomarkers cause a change in electric potential near the\nmeasuring device,\
    \ allowing for accurate sweat measurement during physical activity. The\nauthors\
    \ also note that the change in electrical potential allows for energy harvesting,\
    \ which\ncan be effectively managed to self-power the device and thus allow for\
    \ a battery-free design.\nIn general, the material imprinted into the working\
    \ reacting electrode determines which\nsubstance (i.e., a chemical component present\
    \ in the sweat) it will react with. For example,\nan application of electrochemical\
    \ differential pulse voltammetry to sense the sweat to\nmeasure the level of caffeine\
    \ is devised by Tai et al. [204].\nThe main challenge in the devices is to implement\
    \ capabilities of effective data gath-\nering, ﬁltering, and transmission within\
    \ microscopic computing units. Some biometric\nsensing (especially made by speciﬁc\
    \ conﬁgurations of adjacent sensor sets) produces large\namounts of data (as in\
    \ ECG sensing) that should undergo an appropriate local density\nreduction. To\
    \ ensure conformity with the sensing devices, paper lithium batteries are\nproposed\
    \ (see, e.g., [205]). In addition, many sensors are conﬁgured only to transmit\n\
    following special hazards. For example, ECG sensors should trigger an alarm in\
    \ case the\nheartbeat is abnormal. This local data processing is a preliminary\
    \ phase that facilitates\nthe more intensive data analyses in the intermediate\
    \ data collection unit (the smartphone),\nand ﬁnally, the destination server.\
    \ To treat noisiness and variability (if the sensor sampling\nfrequency is too\
    \ high) of raw data from an accelerometer or gyroscope or loss of data (if the\n\
    Sensors 2022, 22, 2650\n32 of 44\nsensor sampling frequency is too low), variable\
    \ sampling is proposed by Li et al. [206]. The\nofﬂine ML classiﬁcation algorithm\
    \ is used to identify and predict the physical activity.\nThe recent development\
    \ of miniature sensors combined with minimization of battery\nsize and energy\
    \ harvesting advances is sometimes referred to as a new paradigm, known as\nWearables\
    \ 2. For example, Ling et al. [207] provide a detailed description of various\
    \ types\nof sensors, means of attaching them to the human body, multiple parameters\
    \ the sensors\nare capable of measuring, and techniques to communicate and process\
    \ the measured data.\n6.3. Transmission Protocols\nWe note that while many of\
    \ the works mentioned above employ a smartphone device\nwith an application that\
    \ is presumably tailored to receive data from the wearables, having\na dedicated\
    \ hardware device that would ofﬂoad some of the networking burden (e.g.,\npotential\
    \ simpliﬁcation of the packetizing process) of the sensors would be more effective\n\
    and reliable. Indeed, in Pathak et al. [208], a central processing hub allows\
    \ one to circumvent\nthe cumbersome processes of sensor identiﬁcation, sensor\
    \ joining, and reconﬁguration\nby providing a designated interface. The authors\
    \ provide real hardware implementation,\nexplore various performance metrics,\
    \ and provide energy measurements.\nSeveral available protocols for data transmission\
    \ are suitable for WBAN. We mention\nhere the low Bluetooth energy (BLE; see,\
    \ e.g., Townsend et al. [209] for a detailed protocol\nstack description and Gomez\
    \ et al. [210] for performance evaluation and comparison with\nordinary Bluetooth\
    \ and other protocols). For distances of several centimeters, near-ﬁeld\ncommunication\
    \ (NFC) protocol (see Coskun et al. [211] for the theory and Kim et al. [212]\n\
    for a description of possible device designs and applications). Details of the\
    \ IEEE 802.15.6\nstandard, which covers WBAN, can be found in, for example, Kwak\
    \ et al. [213]. One sees\ntherein how the human body communications PHY layer\
    \ in particular is deﬁned.\n6.4. WBAN Applications\nEven though, as stated earlier,\
    \ there is no intention to provide a thorough review of\nWBAN applications, we\
    \ mention several interesting ones. Monitoring of workers involved\nin extreme\
    \ conditions or whose activity can be potentially dangerous (e.g., Lee et al.\
    \ [214])\nsuggest wearable sensors for monitoring miners or construction professionals.\
    \ This study\nevaluates integrated wearable sensors for measuring construction\
    \ workers’ personal level\nof workload, individual factors, and physiological\
    \ reactions during rooﬁng activities. A\nfatigue detection system for car drivers\
    \ by Chang et al. [215] includes smart glasses, which\nare able to identify possible\
    \ drowsiness by an IR detector aimed at the driver’s eyes,\nequipped with BLE\
    \ transmitter. A small processor embedded into the glasses gathers and\npre-analyzes\
    \ the data and then transmits them to the on-board computer in the car. The\n\
    latter makes a decision about whether to issue a fatigue warning and sends it\
    \ to the cloud.\nWearables can be attached to a human body in order to sense the\
    \ environment for the safety\nof the carrier, as in Wu et al. [216]. The data\
    \ (humidity and temperature) is then transmitted\nto a mobile unit, where it can\
    \ be analyzed locally or further transmitted to the cloud in order\nto issue timely\
    \ warnings. Classiﬁcation of sports activity is implemented and validated by\n\
    experiments by Qi et al. [217], where the activity is identiﬁed from accelerometer\
    \ and ECG\nmeasurements done by chest and wrist sensors. The measurements are\
    \ transmitted to a\nsmartphone, which performs the data processing. SVM is employed\
    \ for the classiﬁcation.\nYou et al. [218] suggest a real-time wireless body sensor\
    \ networks (WBSNs) scheme\nfor welfare assessment and disease monitoring, prevention,\
    \ and treatment. The suggested\nscheme is composed of three components: sensing,\
    \ communication, and management.\nSensing attains a set of physiological parameters,\
    \ such as heart rate, body temperature,\nECG, temperature, blood pressure, blood\
    \ glucose, heart rate, and oxygen saturation, from\ndesignated sensors embedded\
    \ on a smart shirt worn by the monitored user. Communi-\ncation handles the processes\
    \ of delivering the sensed physiological data and controlling\ninstructions to\
    \ a backend server through wireless networks. The transmission protocols\ncan\
    \ be divided into two segments: the transfer of information from the sensors to\
    \ a central\nSensors 2022, 22, 2650\n33 of 44\nterminal located at a smartphone\
    \ and the transfer of information between the smartphone\nand the designated server,\
    \ which is located on the healthcare cloud. The communication\nrelies on multiple\
    \ communication protocols including Bluetooth, WiFi, and 3G/4G (which\ncan be\
    \ replaced by 5G where available). Management is responsible for collecting, classify-\n\
    ing, and monitoring the physiological data, and furthermore, being able to issue\
    \ warning\nmessages to medical professionals or caregivers whenever the physiological\
    \ data are ab-\nnormal. Additional applications utilizing data gathering can be\
    \ found in the following\nsurvey [219].\nWe conclude by emphasizing that the beneﬁts\
    \ of WBANs have not run their course\nyet. The development of data gathering will\
    \ jointly progress with the ongoing advances\nin sensor construction and manufacturing\
    \ capability, development, and standardization\nof Wearables 2 and beyond. Development\
    \ of specialized post-processing platforms poses\na specialized challenge, and\
    \ the urge to make progress in this area is acute. To illustrate\nthis, on account\
    \ of an ever-growing population, specialized platforms for elderly care\nare needed;\
    \ see, for example, the recent papers [220,221] about wearables designated for\n\
    elderly patients and references therein.\nFinally, wearables have been recently\
    \ harnessed for combating the COVID-19 disease.\nEarly identiﬁcation of COVID-19\
    \ symptoms by evaluating the resting heart rate during the\nasymptomatic (presumably\
    \ infectious) period and analysis by a deep learning framework\nis evaluated by\
    \ Bogu and Snyder [222]. While the precision of such a tool is clearly inferior\n\
    to the standard medical assays, it may be useful to provide a preliminary alert\
    \ for the\nearly onset of the disease for people in risk groups. Hassantabar et\
    \ al. [223] suggest a\nframework termed CovidDeep that combines commercially available\
    \ wearable physiolog-\nical feature sensors (WMSs) and a simple yes/no questionnaire\
    \ with efﬁcient DNNs for\npervasive large-scale monitoring of disease onset and\
    \ health condition. The automatically\nextracted raw data and medical background\
    \ and symptom responses are combined with\nsynthetically generated data to train\
    \ the DNN architecture. Grow-and-prune synthesis is\nused to generate accurate\
    \ and computationally efﬁcient models that can be deployed for\nCOVID-19 inference.\n\
    Since viruses can spread between people who are in close contact with an infected\n\
    person, and since infected people may be asymptomatic, the pandemic taught us\
    \ that it\nis best to keep a safe distance from others (see, for example, Cortellessa\
    \ et al. [224] for\nclose-proximity risk assessment for COVID infection). Accordingly,\
    \ most health institutions\nrecommend keeping physical distance between people\
    \ in public places (commonly termed\nas ”social distancing”) in order to stop\
    \ the pandemic from spreading. Furthermore, people\nwho were in the proximity\
    \ of an infected person (tested positive for COVID) are encouraged\nto be examined,\
    \ and several governmental regulations even require such people to stay in\nquarantine.\
    \ Several recent studies have suggested leveraging wearables for contact tracing\n\
    in order to identify the hazard from close proximity. For example, Ng et al. [225]\
    \ focus on\nBluetooth low energy and discuss the different data ﬂow approaches\
    \ and the accuracy of\nsmartphone vs. smartwatch applications in proximity detection.\
    \ Bian et al. [226] utilize\nwearables to monitor social distancing as recommended\
    \ for preventing COVID-19 spread.\nIn particular, the authors design compact potentially\
    \ wearable oscillating-magnetic-ﬁeld-\nbased proximity-sensing prototype systems\
    \ suitable for the relevant safety distance and able\nto track social distancing\
    \ much more reliably than the current Bluetooth-based smartphone\ntechnology.\
    \ Shubina et al. [227] provide a brief technical overview of the main contact-\n\
    tracing approaches and the challenges they impose on wearable technology. The\
    \ paper\nalso provides a short overview of the existing solutions deployed for\
    \ contact tracing and a\ndiscussion on the potential effect of wearables in tackling\
    \ the spread of a highly contagious\nvirus. More works from the past year discuss\
    \ the use of wearables for remote management\nand automated assessment of COVID-19.\
    \ Amft et al. [228] provide an overview of insti-\ntutional initiatives and alternative,\
    \ more accurate technologies for detection of infection\nsymptoms and possible\
    \ contact with infected individuals. Channa et al. [229] is a system-\nSensors\
    \ 2022, 22, 2650\n34 of 44\natic review of the two categories of challenges: on-body\
    \ sensors and their clinical utilization\nin screening and contact tracing.\n\
    7. Concluding Remarks\nData gathering in modern WSN and IoT networks encompasses\
    \ many challenges,\nwhich span the entire communication stack. Many techniques,\
    \ protocols, and solutions\nhave been proposed over the years, but as technology\
    \ advances, new challenges and new\nopportunities arise. In this survey, we reviewed\
    \ these main challenges and opportunities, as\nwell as recent advances, and related\
    \ them to speciﬁc data-gathering research domains. We\nprovided a comprehensive\
    \ state-of-the-art data-gathering literature review in modern WSN\nnetworks, distinguishing\
    \ between the communication layers and the research domain.\nWe ﬁrst summarized\
    \ general architectural novelties and emerging architectures. We\nreviewed several\
    \ new technological advances and their inﬂuence on sensing device design,\nthe\
    \ platform carrying it, and the transceiver. We reviewed the effect of these architectural\n\
    advantages on speciﬁc applications, such as agriculture, smart cities, smart homes.\
    \ We\nshowed how cloud computing drives new WSN types, which introduces new directions,\n\
    and discussed how WSN can coexist within social network domains. Compressed sensing\n\
    was summarized next. We provided an overview of this important scheme and reviewed\n\
    its utilization in WSNs. We proceeded with the MAC layer. Since the performance\
    \ of many\ninnovations in the higher layers rely on the underlay MAC protocol\
    \ and since many data\ngathering schemes utilize traditional WSN MAC protocols,\
    \ we provided an overview of\nthese traditional protocols and mentioned state-of-the-art\
    \ works in WSN and IoT. These\nworks devise new MAC approaches for data gathering.\
    \ Next, we covered the recent\nadvances in routing. Similarly, we opened with\
    \ an overview of the traditional routing\nprotocols utilized for data-gathering\
    \ and reviewed several recent enhancements. We\nreviewed the utilization of network\
    \ coding for data gathering and explored the facilitation\nof UAV and mobile-sink\
    \ in collecting the data from the sensors. Lastly, we turned our\nattention to\
    \ the area of wearables which opens new research horizons for human health and\n\
    activity surveillance and discussed the new paradigm of Wireless Body Area Networks.\
    \ In\nthe spirit of the times, we concluded with several studies that utilize\
    \ some of the techniques\ndiscussed in this survey to aid in combating the COVID\
    \ pandemic.\nWhile we provided the general background to the research areas we\
    \ covered, we\nmainly focused on cutting-edge research works. Yet we note that\
    \ even seemingly exhausted\ntopics, such as MAC and Routing protocols, provide\
    \ new technological developments and\npresent opportunities for new research domains.\n\
    As implied throughout this survey, there are several research areas that attract\
    \ a\nlot of attention and anticipation for future developments. For example, technological\n\
    innovations in manufacturing more compact sensing units with yet superior transmission,\n\
    reception and processing capabilities are extremely in demand in several disciplines\
    \ which\ninclude wearables, smart homes, IoT-related domains and others. All the\
    \ more so, this\nis relevant when dealing with healthcare applications and implants.\
    \ Such technological\ninnovations will require in turn enhancements to other domains\
    \ across the communication\nstack in order to adjust to the new opportunities\
    \ and limitations. Energy acquisition is\nstill a fruitful research domain. In\
    \ this respect, ﬁnding new sources of energy harvesting\n(EH), better utilization\
    \ of existing energy resources and energy storage are still challenging\nresearch\
    \ ﬁelds. Similarly, new EH methods impose multiple new challenges on the entire\n\
    protocol stack, which are correlated with the EH method, e.g., different EH methods\
    \ dictate\nconstraints on the MAC design, which in turn, impact the routing protocol\
    \ which affects\nthe performance end eventually the application utilizing the\
    \ infrastructure. The growth of\nsuch networks supporting a variety of heterogeneous\
    \ devices of communication standards\nand their increasing density requires more\
    \ effective data compression techniques and\nefﬁcient on-grid data analyses (i.e.,\
    \ even prior to data delivery to sinks). On the off-grid\nside of WSNs, we note\
    \ that consistent progress in Cloud Computing (CC) technology and\nexploitation\
    \ methodology will open new horizons in data analysis.\nSensors 2022, 22, 2650\n\
    35 of 44\nDeployment of Edge Computing units cooperating with sensing-capable\
    \ units will\nimply the development of novel data-gathering schemes. As WSN density\
    \ increases,\nchallenges in the gathering of useful data by WSN and its consequent\
    \ analysis will coincide\nwith those of Big Data. Clearly, the processes of such\
    \ analyses should be implemented\nwithin Cloud Computing systems. The fashion\
    \ of the CC physical resources deployed in\norder to efﬁciently interact with\
    \ WSN is not necessarily similar to those of usual IT-to-CC\nconnectivity. It\
    \ is not currently properly standardized and, most importantly, it is not\nclear\
    \ how correctly CC (e.g., which HW, correct deployment of Access Points) should\
    \ be\ncross-planned with a particular WSN. Issues of security and privacy which\
    \ are not covered\nin this survey will continue to elicit a major interest, especially\
    \ in keeping with evolving\nhealth care applications. The growth of the network\
    \ and their variability will require a\ngreater measure of adoption of ML and\
    \ AI methods and the development of such new\nspecialized methods for WSN in the\
    \ very near future.\nFunding: This research received no external funding.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nRawat,\
    \ P.; Singh, K.D.; Chaouchi, H.; Bonnin, J.M. Wireless sensor networks: A survey\
    \ on recent developments and potential\nsynergies. J. Supercomput. 2014, 68, 1–48.\
    \ [CrossRef]\n2.\nPeoples, C.; Rabbani, K.; Mamun, A.T.; Wang, B.; Morrow, P.;\
    \ Moore, A.; Rafferty, J.; Mcclean, S.; Zoualfaghari, M.H.;\nKulkarni, P. A Review\
    \ of IoT Service Provision to Assess the Potential for System Interoperability\
    \ in an Uncertain Ecosys-\ntem.\nIn Proceedings of the 2019 IEEE SmartWorld, Ubiquitous\
    \ Intelligence & Computing, Advanced & Trusted Comput-\ning, Scalable Computing\
    \ & Communications, Cloud & Big Data Computing, Internet of People and Smart City\
    \ Innovation\n(SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Leicester, UK, 19–23\
    \ August 2019; IEEE: Piscataway, NJ, USA, 2019;\npp. 1964–1971.\n3.\nAhad, M.A.;\
    \ Paiva, S.; Tripathi, G.; Feroz, N. Enabling technologies and sustainable smart\
    \ cities. Sustain. Cities Soc. 2020,\n61, 102301. [CrossRef]\n4.\nLai, C.S.; Jia,\
    \ Y.; Dong, Z.; Wang, D.; Tao, Y.; Lai, Q.H.; Wong, R.T.; Zobaa, A.F.; Wu, R.;\
    \ Lai, L.L. A review of technical standards\nfor smart cities. Clean Technol.\
    \ 2020, 2, 290–310. [CrossRef]\n5.\nZhang, Y.; Sun, L.; Song, H.; Cao, X. Ubiquitous\
    \ WSN for healthcare: Recent advances and future prospects. IEEE Internet Things\n\
    J. 2014, 1, 311–318. [CrossRef]\n6.\nHwang, Y.M.; Kim, M.G.; Rho, J.J. Understanding\
    \ Internet of things (IoT) diffusion: Focusing on value conﬁguration of RFID and\n\
    sensors in business cases (2008–2012). Inf. Dev. 2016, 32, 969–985. [CrossRef]\n\
    7.\nGhayvat, H.; Mukhopadhyay, S.; Gui, X.; Suryadevara, N. WSN-and IOT-based\
    \ smart homes and their extension to smart\nbuildings. Sensors 2015, 15, 10350–10379.\
    \ [CrossRef]\n8.\nFarooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey\
    \ on the Role of IoT in Agriculture for the Implementation of\nSmart Farming.\
    \ IEEE Access 2019, 7, 156237–156271. [CrossRef]\n9.\nBoursianis, A.D.; Papadopoulou,\
    \ M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.; Barouchas, P.; Salahas, G.; Karagiannidis,\n\
    G.; Wan, S.; Goudos, S.K. Internet of things (IoT) and agricultural unmanned aerial\
    \ vehicles (UAVs) in smart farming: A\ncomprehensive review. Internet Things 2020,\
    \ 100187. [CrossRef]\n10.\nUllo, S.L.; Sinha, G. Advances in smart environment\
    \ monitoring systems using IoT and sensors. Sensors 2020, 20, 3113. [CrossRef]\n\
    11.\nWerner-Allen, G.; Johnson, J.; Ruiz, M.; Lees, J.; Welsh, M. Monitoring volcanic\
    \ eruptions with a wireless sensor network. In\nProceedings of the Second European\
    \ Workshop on Wireless Sensor Networks, Istanbul, Turkey, 2 February 2005; IEEE:\
    \ Piscataway,\nNJ, USA, 2005; pp. 108–120.\n12.\nAlphonsa, A.; Ravi, G. Earthquake\
    \ early warning system by IOT using Wireless sensor networks. In Proceedings of\
    \ the 2016\nInternational Conference on Wireless Communications, Signal Processing\
    \ and Networking (WiSPNET), Chennai, India, 23–25\nMarch 2016; IEEE: Piscataway,\
    \ NJ, USA, 2016; pp. 1201–1205.\n13.\nLu, H.; Wang, D.; Li, Y.; Li, J.; Li, X.;\
    \ Kim, H.; Serikawa, S.; Humar, I. CONet: A cognitive ocean network. IEEE Wirel.\
    \ Commun.\n2019, 26, 90–96. [CrossRef]\n14.\nMourtzis, D.; Vlachou, E.; Milas,\
    \ N. Industrial big data as a result of IoT adoption in manufacturing.\nProcedia\
    \ Cirp 2016,\n55, 290–295. [CrossRef]\n15.\nBansal, M.; Chana, I.; Clarke, S.\
    \ A survey on iot big data: Current status, 13 v’s challenges, and future directions.\
    \ ACM Comput.\nSurv. 2020, 53, 1–59. [CrossRef]\n16.\nBoubiche, S.; Boubiche,\
    \ D.E.; Bilami, A.; Toral-Cruz, H. Big data challenges and data aggregation strategies\
    \ in wireless sensor\nnetworks. IEEE Access 2018, 6, 20558–20571. [CrossRef]\n\
    Sensors 2022, 22, 2650\n36 of 44\n17.\nKim, B.S.; Kim, K.I.; Shah, B.; Chow, F.;\
    \ Kim, K.H. Wireless sensor networks for big data systems.\nSensors 2019, 19,\
    \ 1565.\n[CrossRef]\n18.\nDash, S.K.; Mohapatra, S.; Pattnaik, P.K. A survey on\
    \ applications of wireless sensor network using cloud computing. Int. J.\nComput.\
    \ Sci. Emerg. Technol. 2010, 1, 50–55.\n19.\nAazam, M.; Khan, I.; Alsaffar, A.A.;\
    \ Huh, E.N. Cloud of Things: Integrating Internet of Things and cloud computing\
    \ and the\nissues involved. In Proceedings of the 2014 11th International Bhurban\
    \ Conference on Applied Sciences & Technology (IBCAST),\nIslamabad, Pakistan,\
    \ 14–18 January 2014; IEEE: Piscataway, NJ, USA, 2014; pp. 414–419.\n20.\nDwivedi,\
    \ R.K.; Kumar, R. Sensor cloud: Integrating wireless sensor networks with cloud\
    \ computing. In Proceedings of the\n2018 5th IEEE Uttar Pradesh Section International\
    \ Conference on Electrical, Electronics and Computer Engineering (UPCON),\nGorakhpur,\
    \ India, 2–4 November 2018 ; IEEE: Piscataway, NJ, USA, 2018; pp. 1–6.\n21.\n\
    Li, F.; Vögler, M.; Claeßens, M.; Dustdar, S. Efﬁcient and scalable IoT service\
    \ delivery on cloud. In Proceedings of the 2013 IEEE\nSixth International Conference\
    \ on Cloud Computing, Santa Clara, CA, USA, 28 June–3 July 2013 ; IEEE: Piscataway,\
    \ NJ, USA,\n2013; pp. 740–747.\n22.\nKamel, M.; Hamouda, W.; Youssef, A. Ultra-dense\
    \ networks: A survey. IEEE Commun. Surv. Tutor. 2016, 18, 2522–2545. [CrossRef]\n\
    23.\nTeng, Y.; Liu, M.; Yu, F.R.; Leung, V.C.; Song, M.; Zhang, Y. Resource allocation\
    \ for ultra-dense networks: A survey, some research\nissues and challenges. IEEE\
    \ Commun. Surv. Tutor. 2018, 21, 2134–2168. [CrossRef]\n24.\nStergiou, C.; Psannis,\
    \ K.E.; Kim, B.G.; Gupta, B. Secure integration of IoT and cloud computing. Future\
    \ Gener. Comput. Syst. 2018,\n78, 964–975. [CrossRef]\n25.\nBiswas, S.; Das, R.;\
    \ Chatterjee, P. Energy-efﬁcient connected target coverage in multi-hop wireless\
    \ sensor networks. In Industry\nInteractive Innovations in Science, Engineering\
    \ and Technology; Springer: Berlin/Heidelberg, Germany, 2018; pp. 411–421.\n26.\n\
    Ammari, H.M. Joint k-coverage and data gathering in sparsely deployed sensor networks–Impact\
    \ of purposeful mobility and\nheterogeneity. ACM Trans. Sens. Netw. 2013, 10,\
    \ 1–33. [CrossRef]\n27.\nMdemaya, G.B.J.; Bomgni, A.B. A2CDC: Area Coverage, Connectivity\
    \ and Data Collection in wireless sensor networks. Netw.\nProtoc. Algorithms 2018,\
    \ 10, 20–34.\n28.\nBoukerche, A.; Sun, P. Connectivity and coverage based protocols\
    \ for wireless sensor networks. Ad Hoc Netw. 2018, 80, 54–69.\n[CrossRef]\n29.\n\
    Cerchecci, M.; Luti, F.; Mecocci, A.; Parrino, S.; Peruzzi, G.; Pozzebon, A. A\
    \ low power IoT sensor node architecture for waste\nmanagement within smart cities\
    \ context. Sensors 2018, 18, 1282. [CrossRef] [PubMed]\n30.\nTeixidó, P.; Gómez-Galán,\
    \ J.A.; Gómez-Bravo, F.; Sánchez-Rodríguez, T.; Alcina, J.; Aponte, J. Low-power\
    \ low-cost wireless ﬂood\nsensor for smart home systems. Sensors 2018, 18, 3817.\
    \ [CrossRef] [PubMed]\n31.\nBorrero, J.D.; Zabalo, A. An autonomous wireless device\
    \ for real-time monitoring of water needs.\nSensors 2020, 20, 2078.\n[CrossRef]\n\
    32.\nVullers, R.J.; Van Schaijk, R.; Visser, H.J.; Penders, J.; Van Hoof, C. Energy\
    \ harvesting for autonomous wireless sensor networks.\nIEEE Solid-State Circuits\
    \ Mag. 2010, 2, 29–38. [CrossRef]\n33.\nPrasad, R.V.; Devasenapathy, S.; Rao,\
    \ V.S.; Vazifehdan, J. Reincarnation in the ambiance: Devices and networks with\
    \ energy\nharvesting. IEEE Commun. Surv. Tutor. 2013, 16, 195–213. [CrossRef]\n\
    34.\nKu, M.L.; Li, W.; Chen, Y.; Liu, K.R. Advances in energy harvesting communications:\
    \ Past, present, and future challenges. IEEE\nCommun. Surv. Tutor. 2015, 18, 1384–1412.\
    \ [CrossRef]\n35.\nShaikh, F.K.; Zeadally, S. Energy harvesting in wireless sensor\
    \ networks: A comprehensive review. Renew. Sustain. Energy Rev.\n2016, 55, 1041–1054.\
    \ [CrossRef]\n36.\nPerera, T.D.P.; Jayakody, D.N.K.; Sharma, S.K.; Chatzinotas,\
    \ S.; Li, J. Simultaneous wireless information and power transfer\n(SWIPT): Recent\
    \ advances and future challenges. IEEE Commun. Surv. Tutor. 2017, 20, 264–302.\
    \ [CrossRef]\n37.\nPrauzek, M.; Konecny, J.; Borova, M.; Janosova, K.; Hlavica,\
    \ J.; Musilek, P. Energy harvesting sources, storage devices and system\ntopologies\
    \ for environmental wireless sensor networks: A review. Sensors 2018, 18, 2446.\
    \ [CrossRef] [PubMed]\n38.\nKanoun, O.; Bradai, S.; Khriji, S.; Bouattour, G.;\
    \ El Houssaini, D.; Ben Ammar, M.; Naifar, S.; Bouhamed, A.; Derbel, F.; Viehweger,\n\
    C. Energy-aware system design for autonomous wireless sensor nodes: A comprehensive\
    \ review. Sensors 2021, 21, 548. [CrossRef]\n[PubMed]\n39.\nKhalid, N.; Mirzavand,\
    \ R.; Saghlatoon, H.; Honari, M.M.; Mousavi, P. A three-port zero-power RFID sensor\
    \ architecture for IoT\napplications. IEEE Access 2020, 8, 66888–66897. [CrossRef]\n\
    40.\nAbella, C.S.; Bonina, S.; Cucuccio, A.; D’Angelo, S.; Giustolisi, G.; Grasso,\
    \ A.D.; Imbruglia, A.; Mauro, G.S.; Nastasi, G.A.;\nPalumbo, G.; et al. Autonomous\
    \ energy-efﬁcient wireless sensor network platform for home/ofﬁce automation.\
    \ IEEE Sens. J.\n2019, 19, 3501–3512. [CrossRef]\n41.\nLee, W.K.; Schubert, M.J.;\
    \ Ooi, B.Y.; Ho, S.J.Q. Multi-source energy harvesting and storage for ﬂoating\
    \ wireless sensor network\nnodes with long range communication capability. IEEE\
    \ Trans. Ind. Appl. 2018, 54, 2606–2615. [CrossRef]\n42.\nJoris, L.; Dupont, F.;\
    \ Laurent, P.; Bellier, P.; Stoukatch, S.; Redouté, J.M. An autonomous sigfox\
    \ wireless sensor node for\nenvironmental monitoring. IEEE Sens. Lett. 2019, 3,\
    \ 1–4. [CrossRef]\n43.\nDevadas, T.J.; Thayammal, S.; Ramprakash, A. IoT Data\
    \ Management, Data Aggregation and Dissemination. In Principles of\nInternet of\
    \ Things (IoT) Ecosystem: Insight Paradigm; Springer: Berlin/Heidelberg, Germany,\
    \ 2020; pp. 385–411.\nSensors 2022, 22, 2650\n37 of 44\n44.\nZhu, C.; Leung, V.C.;\
    \ Rodrigues, J.J.; Shu, L.; Wang, L.; Zhou, H. Social sensor cloud: Framework,\
    \ greenness, issues, and outlook.\nIEEE Netw. 2018, 32, 100–105. [CrossRef]\n\
    45.\nDinh, T.; Kim, Y. An efﬁcient interactive model for on-demand sensing-as-a-servicesof\
    \ sensor-cloud. Sensors 2016, 16, 992.\n[CrossRef] [PubMed]\n46.\nZhu, C.; Shu,\
    \ L.; Leung, V.C.; Guo, S.; Zhang, Y.; Yang, L.T. Secure multimedia big data in\
    \ trust-assisted sensor-cloud for smart\ncity. IEEE Commun. Mag. 2017, 55, 24–30.\
    \ [CrossRef]\n47.\nKuo, Y.W.; Li, C.L.; Jhang, J.H.; Lin, S. Design of a wireless\
    \ sensor network-based IoT platform for wide area and heterogeneous\napplications.\
    \ IEEE Sens. J. 2018, 18, 5187–5197. [CrossRef]\n48.\nSatyanarayanan, M. The emergence\
    \ of edge computing. Computer 2017, 50, 30–39. [CrossRef]\n49.\nAbdelwahab, S.;\
    \ Hamdaoui, B.; Guizani, M.; Znati, T. Cloud of things for sensing-as-a-service:\
    \ Architecture, algorithms, and use\ncase. IEEE Internet Things J. 2016, 3, 1099–1112.\
    \ [CrossRef]\n50.\nPopescu, D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana,\
    \ C. Advanced UAV–WSN System for Intelligent Monitoring in\nPrecision Agriculture.\
    \ Sensors 2020, 20, 817. [CrossRef] [PubMed]\n51.\nDatta, S.K.; Bonnet, C.; Da\
    \ Costa, R.P.F.; Härri, J. Datatweet: An architecture enabling data-centric iot\
    \ services. In Proceedings of\nthe 2016 IEEE Region 10 Symposium (TENSYMP), Bali,\
    \ Indonesia, 9–11 May 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 343–348.\n52.\n\
    Ayele, E.D.; Meratnia, N.; Havinga, P.J. MANER: Managed data dissemination scheme\
    \ for LoRa IoT enabled wildlife monitoring\nsystem (WMS). In Proceedings of the\
    \ 2018 9th IFIP International Conference on New Technologies, Mobility and Security\
    \ (NTMS),\nParis, France, 26–28 February 2018; IEEE: Piscataway, NJ, USA, 2018;\
    \ pp. 1–7.\n53.\nJuang, P.; Oki, H.; Wang, Y.; Martonosi, M.; Peh, L.S.; Rubenstein,\
    \ D. Energy-efﬁcient computing for wildlife tracking: Design\ntradeoffs and early\
    \ experiences with ZebraNet. In Proceedings of the 10th International Conference\
    \ on Architectural Support for\nProgramming Languages and Operating Systems, San\
    \ Jose, CA, USA, 5–9 October 2002; pp. 96–107.\n54.\nSaleh, N.; Kassem, A.; Haidar,\
    \ A.M. Energy-efﬁcient architecture for wireless sensor networks in healthcare\
    \ applications. IEEE\nAccess 2018, 6, 6478–6486. [CrossRef]\n55.\nAlsina-Pagès,\
    \ R.M.; Navarro, J.; Alías, F.; Hervás, M. homesound: Real-time audio event detection\
    \ based on high performance\ncomputing for behaviour and surveillance remote monitoring.\
    \ Sensors 2017, 17, 854. [CrossRef] [PubMed]\n56.\nAbeBer, J.; Gotze, M.; Kuhnlenz,\
    \ S.; Grafe, R.; Kuhn, C.; ClauB, T.; Lukashevich, H. A distributed sensor network\
    \ for monitoring\nnoise level and noise sources in urban environments. In Proceedings\
    \ of the 2018 IEEE 6th International Conference on Future\nInternet of Things\
    \ and Cloud (FiCloud), Barcelona, Spain, 6–8 August 2018; IEEE: Piscataway, NJ,\
    \ USA, 2018; pp. 318–324.\n57.\nSiamwala, A.; Lochhead, Z.; Abdulla, W. Environmental\
    \ noise monitoring using distributed IoT sensor nodes. In Proceedings of\nthe\
    \ 2019 International Conference on Electronics, Information, and Communication\
    \ (ICEIC), Auckland, New Zealand, 22–25\nJanuary 2019; IEEE: Piscataway, NJ, USA,\
    \ 2019; pp. 1–10.\n58.\nBalouchestani, M.; Raahemifar, K.; Krishnan, S. Compressed\
    \ sensing in wireless sensor networks: Survey. Can. J. Multimed. Wirel.\nNetw.\
    \ 2011, 2, 1–4.\n59.\nDonoho, D.L. Compressed sensing. IEEE Trans. Inf. Theory\
    \ 2006, 52, 1289–1306. [CrossRef]\n60.\nFeizi, S.; Médard, M.; Effros, M. Compressive\
    \ sensing over networks. In Proceedings of the 2010 48th Annual Allerton Conference\n\
    on Communication, Control, and Computing (Allerton), Monticello, IL, USA, 29 September–1\
    \ October 2010; IEEE: Piscataway, NJ,\nUSA, 2010; pp. 1129–1136.\n61.\nLuo, C.;\
    \ Wu, F.; Sun, J.; Chen, C.W. Compressive data gathering for large-scale wireless\
    \ sensor networks. In Proceedings of the\n15th Annual International Conference\
    \ on Mobile Computing and Networking (MobiCom), Beijing, China, 20–25 September\
    \ 2009;\npp. 145–156.\n62.\nLuo, C.; Wu, F.; Sun, J.; Chen, C.W. Efﬁcient measurement\
    \ generation and pervasive sparsity for compressive data gathering.\nIEEE Trans.\
    \ Wirel. Commun. 2010, 9, 3728–3738. [CrossRef]\n63.\nWang, J.; Tang, S.; Yin,\
    \ B.; Li, X.Y. Data gathering in wireless sensor networks through intelligent\
    \ compressive sensing. In\nProceedings of the IEEE International Conference on\
    \ Computer Communications (INFOCOM), Orlando, FL, USA, 25–30 March\n2012; pp.\
    \ 603–611.\n64.\nXu, L.; Qi, X.; Wang, Y.; Moscibroda, T. Efﬁcient data gathering\
    \ using compressed sparse functions. In Proceedings of the IEEE\nInternational\
    \ Conference on Computer Communications (INFOCOM), Turin, Italy, 14–19 April 2013\
    \ ; pp. 310–314.\n65.\nLi, S.; Da Xu, L.; Wang, X. Compressed sensing signal and\
    \ data acquisition in wireless sensor networks and Internet of things.\nIEEE Trans.\
    \ Ind. Inform. 2012, 9, 2177–2186. [CrossRef]\n66.\nDhanapala, D.C.; Bandara,\
    \ V.W.; Pezeshki, A.; Jayasumana, A.P. Phenomena discovery in WSNs: A compressive\
    \ sensing based\napproach. In Proceedings of the IEEE International Conference\
    \ on Communications (ICC), Budapest, Hungary, 9–13 June 2013;\npp. 1851–1856.\n\
    67.\nZheng, H.; Yang, F.; Tian, X.; Gan, X.; Wang, X.; Xiao, S. Data Gathering\
    \ with Compressive Sensing in Wireless Sensor Networks:\nA Random Walk Based Approach.\
    \ IEEE Trans. Parallel Distrib. Syst. 2015, 26, 35–44. [CrossRef]\n68.\nZheng,\
    \ H.; Xiao, S.; Wang, X.; Tian, X. Energy and latency analysis for in-network\
    \ computation with compressive sensing in\nwireless sensor networks. In Proceedings\
    \ of the IEEE International Conference on Computer Communications (INFOCOM),\n\
    Orlando, FL, USA, 25–30 March 2012; pp. 2811–2815.\n69.\nXu, X.; Ansari, R.; Khokhar,\
    \ A.; Vasilakos, A. Hierarchical data aggregation using compressive sensing (HDACS)\
    \ in WSNs. ACM\nTrans. Sens. Netw. 2015, 11, 1–25. [CrossRef]\nSensors 2022, 22,\
    \ 2650\n38 of 44\n70.\nLan, K.; Wei, M. A Compressibility-Based Clustering Algorithm\
    \ for Hierarchical Compressive Data Gathering. IEEE Sens. J. 2017,\n17, 2550–2562.\
    \ [CrossRef]\n71.\nWu, X.; Xiong, Y.; Yang, P.; Wan, S.; Huang, W. Sparsest Random\
    \ Scheduling for Compressive Data Gathering in Wireless Sensor\nNetworks. IEEE\
    \ Trans. Wirel. Commun. 2014, 13, 5867–5877. [CrossRef]\n72.\nYin, J.; Yang, Y.;\
    \ Wang, L. An Adaptive Data Gathering Scheme for Multi-Hop Wireless Sensor Networks\
    \ Based on Compressed\nSensing and Network Coding. Sensors 2016, 16, 462. [CrossRef]\
    \ [PubMed]\n73.\nXu, W.; Mallada, E.; Tang, A. Compressive sensing over graphs.\n\
    In Proceedings of the IEEE International Conference on\nComputer Communications\
    \ (INFOCOM), Shanghai, China, 10–15 April 2011; pp. 2087–2095.\n74.\nZheng, H.;\
    \ Xiao, S.; Wang, X.; Tian, X.; Guizani, M. Capacity and Delay Analysis for Data\
    \ Gathering with Compressive Sensing in\nWireless Sensor Networks. IEEE Trans.\
    \ Wirel. Commun. 2013, 12, 917–927. [CrossRef]\n75.\nAkyildiz, I.F.; Vuran, M.C.\
    \ Wireless Sensor Networks; John Wiley & Sons: Hoboken, NJ, USA, 2010; Volume\
    \ 4.\n76.\nKumar, A.; Zhao, M.; Wong, K.J.; Guan, Y.L.; Chong, P.H.J. A comprehensive\
    \ study of iot and wsn mac protocols: Research issues,\nchallenges and opportunities.\
    \ IEEE Access 2018, 6, 76228–76262. [CrossRef]\n77.\nQuintero, V.L.; Estevez,\
    \ C.; Orchard, M.E.; Pérez, A. Improvements of energy-efﬁcient techniques in WSNs:\
    \ A MAC-protocol\napproach. IEEE Commun. Surv. Tutor. 2018, 21, 1188–1208. [CrossRef]\n\
    78.\nYe, W.; Heidemann, J.; Estrin, D. An energy-efﬁcient MAC protocol for wireless\
    \ sensor networks.\nIn Proceedings of the\nTwenty-First Annual Joint Conference\
    \ of the IEEE Computer and Communications Societies, New York, NY, USA, 23–27\
    \ June\n2002; IEEE: Piscataway, NJ, USA, 2002; Volume 3, pp. 1567–1576.\n79.\n\
    Van Dam, T.; Langendoen, K. An adaptive energy-efﬁcient MAC protocol for wireless\
    \ sensor networks. In Proceedings of the\n1st International Conference on Embedded\
    \ Networked Sensor Systems (SenSys), Los Angeles, CA, USA, 5–7 November 2003 ;\n\
    pp. 171–180.\n80.\nSun, Y.; Du, S.; Gurewitz, O.; Johnson, D.B. DW-MAC: A low\
    \ latency, energy efﬁcient demand-wakeup MAC protocol for wireless\nsensor networks.\
    \ In Proceedings of the 9th ACM International Symposium on Mobile Ad Hoc Networking\
    \ and Computing,\nHong Kong, China, 26–30 May 2008; pp. 53–62.\n81.\nPolastre,\
    \ J.; Hill, J.; Culler, D. Versatile low power media access for wireless sensor\
    \ networks. In Proceedings of the 2nd Interna-\ntional Conference on Embedded\
    \ Networked Sensor Systems (SenSys), Baltimore, MD, USA, 3–5 November 2004; pp.\
    \ 95–107.\n82.\nBuettner, M.; Yee, G.V.; Anderson, E.; Han, R. X-MAC: A short\
    \ preamble MAC protocol for duty-cycled wireless sensor networks.\nIn Proceedings\
    \ of the 4th International Conference on Embedded Networked Sensor Systems (SenSys),\
    \ Boulder, CO, USA,\n31 October–3 November 2006; pp. 307–320.\n83.\nEl-Hoiydi,\
    \ A.; Decotignie, J.D. WiseMAC: An ultra low power MAC protocol for the downlink\
    \ of infrastructure wireless sensor\nnetworks. In Proceedings of the ISCC 2004.\
    \ Ninth International Symposium on Computers And Communications (IEEE Cat.\nNo.\
    \ 04TH8769), Alexandria, Egypt, 28–31 July 2004; IEEE: Piscataway, NJ, USA, 2004;\
    \ Volume 1, pp. 244–251.\n84.\nSun, Y.; Gurewitz, O.; Johnson, D.B. RI-MAC: A\
    \ receiver-initiated asynchronous duty cycle MAC protocol for dynamic trafﬁc\n\
    loads in wireless sensor networks. In Proceedings of the 6th ACM Conference on\
    \ Embedded Network Sensor Systems (SenSys),\nRaleigh, NC, USA, 5–7 November 2008;\
    \ pp. 1–14.\n85.\nTang, L.; Sun, Y.; Gurewitz, O.; Johnson, D.B. PW-MAC: An energy-efﬁcient\
    \ predictive-wakeup MAC protocol for wireless sensor\nnetworks. In Proceedings\
    \ of the IEEE Conference on Computer Communications (INFOCOM), Shanghai, China,\
    \ 10–15 April\n2011; pp. 1305–1313.\n86.\nZhang, D.g.; Zhou, S.; Tang, Y.m. A\
    \ low duty cycle efﬁcient MAC protocol based on self-adaption and predictive strategy.\
    \ Mob.\nNetw. Appl. 2018, 23, 828–839. [CrossRef]\n87.\nDutta, P.; Dawson-Haggerty,\
    \ S.; Chen, Y.; Liang, C.J.M.; Terzis, A. A-MAC: A versatile and efﬁcient receiver-initiated\
    \ link layer\nfor low-power wireless. ACM Trans. Sens. Netw. 2012, 8, 1–29. [CrossRef]\n\
    88.\nWymore, M.L.; Qiao, D. RIVER-MAC: A Receiver-Initiated Asynchronously Duty-Cycled\
    \ MAC Protocol for the Internet of\nThings. In Proceedings of the IEEE 43rd Annual\
    \ Computer Software and Applications Conference (COMPSAC), Milwaukee, WI,\nUSA,\
    \ 15–19 July 2019; Volume 1, pp. 860–869.\n89.\nGurewitz, O.; Zaharia, O. Collision\
    \ Prevention for Duty-Cycle Receiver-Initiation MAC Protocol via Multiple Access\
    \ Reservation\n(MAR-RiMAC). Sensors 2021, 21, 127. [CrossRef] [PubMed]\n90.\n\
    Liu, H.I.; He, W.J.; Seah, W.K. LEB-MAC: Load and energy balancing MAC protocol\
    \ for energy harvesting powered wireless\nsensor networks. In Proceedings of the\
    \ 2014 20th IEEE International Conference on Parallel and Distributed Systems\
    \ (ICPADS),\nHsinchu, Taiwan, 16–19 December 2014; IEEE: Piscataway, NJ, USA,\
    \ 2014; pp. 584–591.\n91.\nKhalil, M.I.; Hossain, M.A.; Ahmed, I. DURI-MAC: A\
    \ dual channel receiver initiated MAC protocol for wireless sensor network\n(WSN).\
    \ In Proceedings of the International Conference on Electrical, Computer and Communication\
    \ Engineering (ECCE), Cox’s\nBazar, Bangladesh, 16–18 February 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 577–582.\n92.\nTang, L.; Sun, Y.; Gurewitz, O.; Johnson,\
    \ D.B. EM-MAC: A dynamic multichannel energy-efﬁcient MAC protocol for wireless\n\
    sensor networks. In Proceedings of the Twelfth ACM International Symposium on\
    \ Mobile Ad Hoc Networking and Computing\n(MobiHoc), Paris, France, 17–19 May\
    \ 2011; pp. 1–11.\n93.\nYe, D.; Zhang, M. A self-adaptive sleep/wake-up scheduling\
    \ approach for wireless sensor networks. IEEE Trans. Cybern. 2017,\n48, 979–992.\
    \ [CrossRef]\nSensors 2022, 22, 2650\n39 of 44\n94.\nGamm, G.U.; Sippel, M.; Kostic,\
    \ M.; Reindl, L.M. Low power wake-up receiver for wireless sensor nodes. In Proceedings\
    \ of the\nIEEE Sixth International Conference on Intelligent Sensors, Sensor Networks\
    \ and Information Processing (ISSNIP), Brisbane,\nAustralia, 7–10 December 2010;\
    \ pp. 121–126.\n95.\nOller, J.; Demirkol, I.; Casademont, J.; Paradells, J.; Gamm,\
    \ G.U.; Reindl, L. Performance evaluation and comparative analysis of\nsubcarrier\
    \ modulation wake-up radio systems for energy-efﬁcient wireless sensor networks.\
    \ Sensors 2014, 14, 22–51. [CrossRef]\n[PubMed]\n96.\nOller, J.; Demirkol, I.;\
    \ Casademont, J.; Paradells, J.; Gamm, G.U.; Reindl, L. Has time come to switch\
    \ from duty-cycled MAC\nprotocols to wake-up radio for wireless sensor networks?\
    \ IEEE/ACM Trans. Netw. 2015, 24, 674–687. [CrossRef]\n97.\nSpenza, D.; Magno,\
    \ M.; Basagni, S.; Benini, L.; Paoli, M.; Petrioli, C. Beyond duty cycling: Wake-up\
    \ radio with selective\nawakenings for long-lived wireless sensing systems. In\
    \ Proceedings of the IEEE Conference on Computer Communications\n(INFOCOM), Hong\
    \ Kong, China, 26 April–1 May 2015; pp. 522–530.\n98.\nGhose, D.; Li, F.Y. Enabling\
    \ backoff for SCM wake-up radio: Protocol and modeling. IEEE Commun. Lett. 2017,\
    \ 21, 1031–1034.\n[CrossRef]\n99.\nGhose, D.; Frøytlog, A.; Li, F.Y. Enabling\
    \ early sleeping and early data transmission in wake-up radio-enabled IoT networks.\n\
    Comput. Netw. 2019, 153, 132–144. [CrossRef]\n100. Guntupalli, L.; Ghose, D.;\
    \ Li, F.Y.; Gidlund, M. Energy efﬁcient consecutive packet transmissions in receiver-initiated\
    \ wake-up\nradio enabled wsns. IEEE Sens. J. 2018, 18, 4733–4745. [CrossRef]\n\
    101. Singh, R.; Sikdar, B. A Receiver Initiated Low Delay MAC Protocol for Wake-Up\
    \ Radio Enabled Wireless Sensor Networks. IEEE\nSens. J. 2020, 20, 13796–13807.\
    \ [CrossRef]\n102. Hawa, M.; Darabkh, K.A.; Al-Zubi, R.; Al-Sukkar, G. A self-learning\
    \ MAC protocol for energy harvesting and spectrum access in\ncognitive radio sensor\
    \ networks. J. Sens. 2016, 2016, 9604526. [CrossRef]\n103. Cohen, A.; Cohen, A.;\
    \ Gurewitz, O. Efﬁcient data collection over multiple access wireless sensors\
    \ network. IEEE/ACM Trans.\nNetw. 2020, 28, 491–504. [CrossRef]\n104. Tong, F.;\
    \ Peng, Y. A Data-Gathering, Dynamic Duty-Cycling MAC Protocol for Large-Scale\
    \ Wireless Sensor Networks. Sensors\n2020, 20, 4071. [CrossRef] [PubMed]\n105.\
    \ Heinzelman, W.R.; Chandrakasan, A.; Balakrishnan, H. Energy-efﬁcient communication\
    \ protocol for wireless microsensor\nnetworks. In Proceedings of the 33rd Annual\
    \ Hawaii International Conference on System Sciences, Maui, HI, USA, 7 January\n\
    2000; IEEE: Piscataway, NJ, USA, 2000; p. 10.\n106. Arumugam, G.S.; Ponnuchamy,\
    \ T. EE-LEACH: Development of energy-efﬁcient LEACH Protocol for data gathering\
    \ in WSN.\nEURASIP J. Wirel. Commun. Netw. 2015, 2015, 1–9. [CrossRef]\n107. Singh,\
    \ S.K.; Kumar, P.; Singh, J.P. A survey on successors of LEACH protocol. IEEE\
    \ Access 2017, 5, 4298–4328. [CrossRef]\n108. Anzola, J.; Pascual, J.; Tarazona,\
    \ G.; Gonzalez Crespo, R. A clustering WSN routing protocol based on kd tree algorithm.\
    \ Sensors\n2018, 18, 2899. [CrossRef] [PubMed]\n109. Lindsey, S.; Raghavendra,\
    \ C.; Sivalingam, K.M. Data gathering algorithms in sensor networks using energy\
    \ metrics. IEEE Trans.\nParallel Distrib. Syst. 2002, 13, 924–935. [CrossRef]\n\
    110. Razaque, A.; Abdulgader, M.; Joshi, C.; Amsaad, F.; Chauhan, M. P-LEACH:\
    \ Energy efﬁcient routing protocol for Wireless Sensor\nNetworks. In Proceedings\
    \ of the 2016 IEEE Long Island Systems, Applications and Technology Conference\
    \ (LISAT), Farmingdale,\nNY, USA, 29–29 April 2016; IEEE: Piscataway, NJ, USA,\
    \ 2016; pp. 1–5.\n111. Siew, Z.W.; Wong, C.H.; Chin, C.S.; Kiring, A.; Teo, K.T.K.\
    \ Cluster heads distribution of wireless sensor networks via adaptive\nparticle\
    \ swarm optimization.\nIn Proceedings of the 2012 Fourth International Conference\
    \ on Computational Intelligence,\nCommunication Systems and Networks, Phuket,\
    \ Thailand, 24–26 July 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 78–83.\n112.\
    \ Tam, N.T.; Hai, D.T.; Son, L.H.; Vinh, L.T. Improving lifetime and network connections\
    \ of 3D wireless sensor networks based on\nfuzzy clustering and particle swarm\
    \ optimization. Wirel. Netw. 2018, 24, 1477–1490. [CrossRef]\n113. Cui, Z.; Cao,\
    \ Y.; Cai, X.; Cai, J.; Chen, J. Optimal LEACH protocol with modiﬁed bat algorithm\
    \ for big data sensing systems in\nInternet of Things. J. Parallel Distrib. Comput.\
    \ 2019, 132, 217–229. [CrossRef]\n114. Jiang, A.; Zheng, L. An effective hybrid\
    \ routing algorithm in WSN: Ant colony optimization in combination with hop count\n\
    minimization. Sensors 2018, 18, 1020. [CrossRef]\n115. Rodríguez, A.; Del-Valle-Soto,\
    \ C.; Velázquez, R. Energy-Efﬁcient Clustering Routing Protocol for Wireless Sensor\
    \ Networks\nBased on Yellow Saddle Goatﬁsh Algorithm. Mathematics 2020, 8, 1515.\
    \ [CrossRef]\n116. Karunanithy, K.; Velusamy, B. Cluster-tree based energy efﬁcient\
    \ data gathering protocol for industrial automation using WSNs\nand IoT. J. Ind.\
    \ Inf. Integr. 2020, 19, 100156. [CrossRef]\n117. Mehmood, A.; Lv, Z.; Lloret,\
    \ J.; Umar, M.M. ELDC: An artiﬁcial neural network based energy-efﬁcient and robust\
    \ routing scheme\nfor pollution monitoring in WSNs. IEEE Trans. Emerg. Top. Comput.\
    \ 2017, 8, 106–114. [CrossRef]\n118. Durairaj, U.M.; Selvaraj, S. Two-Level Clustering\
    \ and Routing Algorithms to Prolong the Lifetime of Wind Farm-Based WSN.\nIEEE\
    \ Sens. J. 2020, 21, 857–867. [CrossRef]\n119. Shifrin, M.; Cidon, I. C3: Collective\
    \ congestion control in multi-hop wireless networks. In Proceedings of the 2010\
    \ Seventh\nInternational Conference on Wireless On-demand Network Systems and\
    \ Services (WONS), Kranjska Gora, Slovenia, 3–5 February\n2010; IEEE: Piscataway,\
    \ NJ, USA, 2010; pp. 31–38.\nSensors 2022, 22, 2650\n40 of 44\n120. Biswas, S.;\
    \ Morris, R. ExOR: Opportunistic multi-hop routing for wireless networks. In Proceedings\
    \ of the 2005 Conference on\nApplications, Technologies, Architectures, and Protocols\
    \ for Computer Communications, Philadelphia, PA, USA, 22–26 August\n2005; pp.\
    \ 133–144.\n121. Ye, Z.; Hua, Y. On link layer policies of data forwarding over\
    \ wireless relays. In Proceedings of the MILCOM 2005—2005\nIEEE Military Communications\
    \ Conference, Atlantic City, NJ, USA, 17–20 October 2005; IEEE: Piscataway, NJ,\
    \ USA, 2005;\npp. 2138–2144.\n122. Landsiedel, O.; Ghadimi, E.; Duquennoy, S.;\
    \ Johansson, M. Low power, low delay: Opportunistic routing meets duty cycling.\
    \ In\nProceedings of the 2012 ACM/IEEE 11th International Conference on Information\
    \ Processing in Sensor Networks (IPSN), Beijing,\nChina, 16–20 April 2012; IEEE:\
    \ Piscataway, NJ, USA, 2012; pp. 185–196.\n123. Tang, L.; Sun, Y.; Gurewitz, O.;\
    \ Johnson, D.B. Optimizations for route discovery in asynchronous duty-cycling\
    \ wireless networks.\nIn Proceedings of the 2012 IEEE 9th International Conference\
    \ on Mobile Ad-Hoc and Sensor Systems (MASS 2012), Las Vegas,\nNV, USA, 8–11 October\
    \ 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 155–163.\n124. Liu, D.; Hou, M.;\
    \ Cao, Z.; Wang, J.; He, Y.; Liu, Y. Duplicate detectable opportunistic forwarding\
    \ in duty-cycled wireless sensor\nnetworks. IEEE/ACM Trans. Netw. 2015, 24, 662–673.\
    \ [CrossRef]\n125. Hawbani, A.; Wang, X.; Sharabi, Y.; Ghannami, A.; Kuhlani,\
    \ H.; Karmoshi, S. LORA: Load-balanced opportunistic routing for\nasynchronous\
    \ duty-cycled WSN. IEEE Trans. Mob. Comput. 2018, 18, 1601–1615. [CrossRef]\n\
    126. Winter, T.; Thubert, P.; Brandt, A.; Hui, J.W.; Kelsey, R.; Levis, P.; Pister,\
    \ K.; Struik, R.; Vasseur, J.P.; Alexander, R.K.; et al. RPL:\nIPv6 Routing Protocol\
    \ for Low-Power and Lossy Networks. RFC 2012, 6550, 1–157.\n127. Thubert, P. Objective\
    \ function zero for the routing protocol for low-power and lossy networks (RPL).\
    \ RFC 2012, 6552, 1–14.\n128. Gnawali, O.; Levis, P. The minimum rank with hysteresis\
    \ objective function. RFC 2012, 6719, 1–13.\n129. Abdel Hakeem, S.A.; Hady, A.A.;\
    \ Kim, H. RPL routing protocol performance in smart grid applications based wireless\
    \ sensors:\nExperimental and simulated analysis. Electronics 2019, 8, 186. [CrossRef]\n\
    130. Barnawi, A.Y.; Mohsen, G.A.; Shahra, E.Q. Performance analysis of RPL protocol\
    \ for data gathering applications in wireless\nsensor networks. Procedia Comput.\
    \ Sci. 2019, 151, 185–193. [CrossRef]\n131. Al-Shargabi, B.; Aleswid, M. Performance\
    \ of RPL in Healthcare Wireless Sensor Network. Int. J. Emerg. Trends Eng. Res.\
    \ 2020, 8, 3.\n[CrossRef]\n132. Sousa, N.; Sobral, J.V.; Rodrigues, J.J.; Rabêlo,\
    \ R.A.; Solic, P. ERAOF: A new RPL protocol objective function for Internet of\n\
    Things applications. In Proceedings of the 2017 2nd International Multidisciplinary\
    \ Conference on Computer and Energy Science\n(SpliTech), Split, Croatia, 12–14\
    \ July 2017; IEEE: Piscataway, NJ, USA, 2017; pp. 1–5.\n133. Rafea, S.A.; Kadhim,\
    \ A.A. Routing with energy threshold for WSN-IoT based on RPL protocol. Iraqi\
    \ J. Comput. Commun. Control\nSyst. Eng. 2019, 19, 71–81.\n134. Sharma, B.; Gajrani,\
    \ J.; Jain, V. Performance Measurement of RPL Protocol Using Modiﬁed MRHOF in\
    \ IoT Network.\nIn\nProceedings of the International Conference on Deep Learning,\
    \ Artiﬁcial Intelligence and Robotics, Jaipur, India, 7–8 December\n2019; Springer:\
    \ Berlin/Heidelberg, Germany, 2019; pp. 235–245.\n135. Sankar, S.; Ramasubbareddy,\
    \ S.; Luhach, A.K.; Nayyar, A.; Qureshi, B. CT-RPL: Cluster tree based routing\
    \ protocol to maximize\nthe lifetime of Internet of Things. Sensors 2020, 20,\
    \ 5858. [CrossRef] [PubMed]\n136. Acevedo, P.D.; Jabba, D.; Sanmartín, P.; Valle,\
    \ S.; Nino-Ruiz, E.D. WRF-RPL: Weighted Random Forward RPL for High Trafﬁc and\n\
    Energy Demanding Scenarios. IEEE Access 2021, 9, 60163–60174. [CrossRef]\n137.\
    \ Rojas, E.; Hosseini, H.; Gomez, C.; Carrascal, D.; Cotrim, J.R. Outperforming\
    \ RPL with scalable routing based on meaningful\nMAC addressing. Ad Hoc Netw.\
    \ 2021, 114, 102433. [CrossRef]\n138. Molnár, M. QoS Routing for Data Gathering\
    \ with RPL in WSNs. In Handbook of Wireless Sensor Networks: Issues and Challenges\
    \ in\nCurrent Scenario’s; Springer: Berlin/Heidelberg, Germany, 2020; pp. 87–111.\n\
    139. Vera-Pérez, J.; Silvestre-Blanes, J.; Sempere-Payá, V. TSCH and RPL Joining\
    \ Time Model for Industrial Wireless Sensor Networks.\nSensors 2021, 21, 3904.\
    \ [CrossRef] [PubMed]\n140. Sobral, J.V.; Rodrigues, J.J.; Rabêlo, R.A.; Al-Muhtadi,\
    \ J.; Korotaev, V. Routing protocols for low power and lossy networks in\nInternet\
    \ of things applications. Sensors 2019, 19, 2144. [CrossRef]\n141. Jeong, S.;\
    \ Kim, H.; Noh, D.K.; Yoon, I. Energy-aware data aggregation scheme for energy-harvesting\
    \ wireless sensor networks. In\nProceedings of the 2016 First IEEE International\
    \ Conference on Computer Communication and the Internet (ICCCI), Wuhan,\nChina,\
    \ 13–15 October 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 140–143.\n142. Chen,\
    \ Q.; Gao, H.; Cai, Z.; Cheng, L.; Li, J. Energy-collision aware data aggregation\
    \ scheduling for energy harvesting sensor\nnetworks. In Proceedings of the IEEE\
    \ INFOCOM 2018—IEEE Conference on Computer Communications, Honolulu, HI, USA,\n\
    16–19 April 2018; IEEE: Piscataway, NJ, USA, 2018; pp. 117–125.\n143. Xiao, M.;\
    \ Zhang, X.; Dong, Y. An effective routing protocol for energy harvesting wireless\
    \ sensor networks. In Proceedings of the\n2013 IEEE Wireless Communications and\
    \ Networking Conference (WCNC), Shanghai, China, 7–10 April 2013; IEEE: Piscataway,\n\
    NJ, USA, 2013; pp. 2080–2084.\n144. Wu, D.; He, J.; Wang, H.; Wang, C.; Wang,\
    \ R. A hierarchical packet forwarding mechanism for energy harvesting wireless\
    \ sensor\nnetworks. IEEE Commun. Mag. 2015, 53, 92–98. [CrossRef]\n145. Yang,\
    \ L.; Lu, Y.; Zhong, Y.; Wu, X.; Yang, S.X. A multi-hop energy neutral clustering\
    \ algorithm for maximizing network\ninformation gathering in energy harvesting\
    \ wireless sensor networks. Sensors 2016, 16, 26. [CrossRef] [PubMed]\nSensors\
    \ 2022, 22, 2650\n41 of 44\n146. Bahbahani, M.S.; Alsusa, E. A cooperative clustering\
    \ protocol with duty cycling for energy harvesting enabled wireless sensor\nnetworks.\
    \ IEEE Trans. Wirel. Commun. 2017, 17, 101–111. [CrossRef]\n147. Bozorgi, S.M.;\
    \ Rostami, A.S.; Hosseinabadi, A.A.R.; Balas, V.E. A new clustering protocol for\
    \ energy harvesting-wireless sensor\nnetworks. Comput. Electr. Eng. 2017, 64,\
    \ 233–247. [CrossRef]\n148. Ren, Q.; Yao, G. An energy-efﬁcient cluster head selection\
    \ scheme for energy-harvesting wireless sensor networks. Sensors 2020,\n20, 187.\
    \ [CrossRef] [PubMed]\n149. Sinde, R.; Begum, F.; Njau, K.; Kaijage, S. Reﬁning\
    \ network lifetime of wireless sensor network using energy-efﬁcient clustering\n\
    and DRL-based sleep scheduling. Sensors 2020, 20, 1540. [CrossRef]\n150. Liu,\
    \ F.; Lu, H.; Wang, T.; Liu, Y. An energy-balanced joint routing and charging\
    \ framework in wireless rechargeable sensor\nnetworks for mobile multimedia. IEEE\
    \ Access 2019, 7, 177637–177650. [CrossRef]\n151. Lu, Z.; Fan, B.; Cai, J.; Tang,\
    \ L. J-RCA: A Joint Routing and Charging Algorithm With WCE Assisted Data Gathering\
    \ in Wireless\nRechargeable Sensor Networks. IEEE Sens. J. 2020, 21, 3888–3899.\
    \ [CrossRef]\n152. Du, L. A polynomial time algorithm for Hamilton Cycle and its\
    \ proof. In Proceedings of the 2010 International Conference\nOn Computer Design\
    \ and Applications, Qinhuangdao, China, 25–27 June 2010; IEEE: Piscataway, NJ,\
    \ USA, 2010; Volume 3;\npp. 3–207.\n153. Celebiler, M.; Stette, G. On increasing\
    \ the down-link capacity of a regenerative satellite repeater in point-to-point\
    \ communications.\nProc. IEEE 1978, 66, 98–100. [CrossRef]\n154. Ahlswede, R.;\
    \ Cai, N.; Li, S.Y.; Yeung, R.W. Network information ﬂow. IEEE Trans. Inf. Theory\
    \ 2000, 46, 1204–1216. [CrossRef]\n155. Katti, S.; Rahul, H.; Hu, W.; Katabi,\
    \ D.; Médard, M.; Crowcroft, J. XORs in the air: Practical wireless network coding.\
    \ IEEE/ACM\nTrans. Netw. 2008, 16, 497–510. [CrossRef]\n156. Migabo, E.M.; Djouani,\
    \ K.; Olwal, T.O.; Kurien, A.M. A Survey on Energy Efﬁcient Network Coding for\
    \ Multi-hop Routing in\nWireless Sensor Networks. Procedia Comput. Sci. 2016,\
    \ 94, 288–294. [CrossRef]\n157. Cohen, A.; Biton, E.; Kampeas, J.; Gurewitz, O.\
    \ Coded unicast downstream trafﬁc in a wireless network: Analysis and WiFi\nimplementation.\
    \ EURASIP J. Adv. Signal Process. 2013, 2013, 1–20. [CrossRef]\n158. Shifrin,\
    \ M.; Cohen, A.; Weisman, O.; Gurewitz, O. Coded retransmission in wireless networks\
    \ via abstract MDPs: Theory and\nalgorithms. IEEE Trans. Wirel. Commun. 2016,\
    \ 15, 4292–4306. [CrossRef]\n159. Attar, H.; Stankovic, L.; Stankovic, V. Cooperative\
    \ network-coding system for wireless sensor networks. IET Commun. 2012,\n6, 344–352.\
    \ [CrossRef]\n160. Qureshi, J.; Foh, C.H.; Cai, J. Optimal solution for the index\
    \ coding problem using network coding over GF(2). In Proceedings of\nthe 2012\
    \ 9th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc\
    \ Communications and Networks\n(SECON), Seoul, Korea, 18–21 June 2012; pp. 209–217.\n\
    161. Gou, L.; Zhang, G.; Bian, D.; Zhang, W.; Xie, Z. Data dissemination in wireless\
    \ sensor networks with instantly decodable network\ncoding. J. Commun. Netw. 2016,\
    \ 18, 846–856. [CrossRef]\n162. Júnior, N.D.S.R.; Tavares, R.C.; Vieira, M.A.;\
    \ Vieira, L.F.; Gnawali, O. CodeDrip: Improving data dissemination for wireless\
    \ sensor\nnetworks with network coding. Ad Hoc Netw. 2017, 54, 42–52. [CrossRef]\n\
    163. Swamy, V.N.; Rigge, P.; Ranade, G.; Sahai, A.; Nikoli´c, B. Network coding\
    \ for high-reliability low-latency wireless control. In\nProceedings of the 2016\
    \ IEEE Wireless Communications and Networking Conference Workshops (WCNCW), Doha,\
    \ Qatar, 3–6\nApril 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 138–144.\n164.\
    \ Ho, T.; Médard, M.; Koetter, R.; Karger, D.R.; Effros, M.; Shi, J.; Leong, B.\
    \ A random linear network coding approach to multicast.\nIEEE Trans. Inf. Theory\
    \ 2006, 52, 4413–4430. [CrossRef]\n165. Stefanovi´c, ˇC.; Vukobratovi´c, D.; Crnojevi´c,\
    \ V.; Stankovic, V. A random linear coding scheme with perimeter data gathering\
    \ for\nwireless sensor networks. In Proceedings of the 2011 Eighth International\
    \ Conference on Wireless On-Demand Network Systems\nand Services, Bardonecchia,\
    \ Italy, 26–28 January 2011; IEEE: Piscataway, NJ, USA, 2011; pp. 142–145.\n166.\
    \ Feizi, S.; Lucani, D.E.; Médard, M. Tunable sparse network coding. In Proceedings\
    \ of the 22th International Zurich Seminar on\nCommunications (IZS). Eidgenössische\
    \ Technische Hochschule Zürich, Zurich, Switzerland, 29 February–2 March 2012.\n\
    167. Prior, R.; Lucani, D.E.; Phulpin, Y.; Nistor, M.; Barros, J. Network coding\
    \ protocols for smart grid communications. IEEE Trans.\nSmart Grid 2014, 5, 1523–1531.\
    \ [CrossRef]\n168. Nistor, M.; Lucani, D.E.; Barros, J. Network coding protocols\
    \ for data gathering applications.\nIEEE Commun. Lett. 2014,\n19, 267–270. [CrossRef]\n\
    169. Keller, L.; Atsan, E.; Argyraki, K.; Fragouli, C. SenseCode: Network coding\
    \ for reliable sensor networks. ACM Trans. Sens. Netw.\n(TOSN) 2013, 9, 1–20.\
    \ [CrossRef]\n170. Valle, O.T.; Montez, C.; Medeiros de Araujo, G.; Vasques, F.;\
    \ Moraes, R. NetCoDer: A retransmission mechanism for WSNs based\non cooperative\
    \ relays and network coding. Sensors 2016, 16, 799. [CrossRef]\n171. Merhi, Z.;\
    \ Tahan, O.; Abdulhay, B.; Rammal, R.; Abdul-Nabi, S. SR-Code: Smart Relay Network\
    \ Coding for Data Collection for\nWireless Sensor Networks. Int. J. Eng. Res.\
    \ Appl. 2017, 7, 58–64. [CrossRef]\n172. Al-Hawri, E.; Correia, N.; Barradas,\
    \ A. Design of network coding based reliable sensor networks. Ad Hoc Netw. 2019,\
    \ 91, 101870.\n[CrossRef]\n173. Chen, W.; Letaief, K.B.; Cao, Z. Opportunistic\
    \ Network Coding for Wireless Networks.\nIn Proceedings of the 2007 IEEE\nInternational\
    \ Conference on Communications, Glasgow, UK, 24–28 June 2007; pp. 4634–4639.\n\
    Sensors 2022, 22, 2650\n42 of 44\n174. Mirani, F.H.; Busson, A.; Adjih, C. DONC:\
    \ Delay-based Opportunistic Network Coding Protocol. In Proceedings of the 2013\
    \ 12th\nAnnual Mediterranean Ad Hoc Networking Workshop (MED-HOC-NET), Ajaccio,\
    \ France, 24–26 June 2013; pp. 34–41.\n175. Tan, C.; Zou, J.; Wang, M. Joint Opportunistic\
    \ Network Coding and Opportunistic Routing for Correlated Data Gathering in\n\
    Wireless Sensor Network. In Proceedings of the 2013 IEEE 78th Vehicular Technology\
    \ Conference (VTC Fall), Las Vegas, NV,\nUSA, 2–5 September 2013; pp. 1–5.\n176.\
    \ Marques, B.; Machado, I.; Sena, A.; Castro, M.C. A communication protocol for\
    \ fog computing based on network coding applied\nto wireless sensors. In Proceedings\
    \ of the 2017 International Symposium on Computer Architecture and High Performance\n\
    Computing Workshops (SBAC-PADW), Campinas, Brazil, 17–20 October 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 109–114.\n177. Uwitonze, A.; Huang, J.; Ye, Y.; Cheng, W.\
    \ Connectivity restoration in wireless sensor networks via space network coding.\
    \ Sensors\n2017, 17, 902. [CrossRef] [PubMed]\n178. Malathy, S.; Porkodi, V.;\
    \ Sampathkumar, A.; Hindia, M.N.; Dimyati, K.; Tilwari, V.; Qamar, F.; Amiri,\
    \ I.S. An optimal network\ncoding based backpressure routing approach for massive\
    \ IoT network. Wirel. Netw. 2020, 26, 3657–3674. [CrossRef]\n179. Zhan, C.; Zeng,\
    \ Y.; Zhang, R. Energy-efﬁcient data collection in UAV enabled wireless sensor\
    \ network. IEEE Wirel. Commun. Lett.\n2017, 7, 328–331. [CrossRef]\n180. Gong,\
    \ J.; Chang, T.H.; Shen, C.; Chen, X. Flight time minimization of UAV for data\
    \ collection over wireless sensor networks.\nIEEE J. Sel. Areas Commun. 2018,\
    \ 36, 1942–1954. [CrossRef]\n181. Liu, J.; Wang, X.; Bai, B.; Dai, H. Age-optimal\
    \ trajectory planning for UAV-assisted data collection. In Proceedings of the\
    \ IEEE\nINFOCOM 2018—IEEE Conference on Computer Communications Workshops (INFOCOM\
    \ WKSHPS), Honolulu, HI, USA, 15–19\nApril 2018; IEEE: Piscataway, NJ, USA, 2018;\
    \ pp. 553–558.\n182. Liu, S.; Wei, Z.; Guo, Z.; Yuan, X.; Feng, Z. Performance\
    \ analysis of UAVs assisted data collection in wireless sensor network.\nIn Proceedings\
    \ of the 2018 IEEE 87th Vehicular Technology Conference (VTC Spring), Porto, Portugal,\
    \ 3–6 June 2018; IEEE:\nPiscataway, NJ, USA, 2018; pp. 1–5.\n183. Qin, Y.; Boyle,\
    \ D.; Yeatman, E. A novel protocol for data links between wireless sensors and\
    \ UAV based sink nodes. In Proceedings\nof the 2018 IEEE 4th World Forum on Internet\
    \ of Things (WF-IoT), Singapore, 5–8 February 2018; IEEE: Piscataway, NJ, USA,\n\
    2018; pp. 371–376.\n184. Najjar-Ghabel, S.; Farzinvash, L.; Razavi, S.N. Mobile\
    \ sink-based data gathering in wireless sensor networks with obstacles using\n\
    artiﬁcial intelligence algorithms. Ad Hoc Netw. 2020, 106, 102243. [CrossRef]\n\
    185. Tazibt, C.Y.; Bekhti, M.; Djamah, T.; Achir, N.; Boussetta, K. Wireless sensor\
    \ network clustering for UAV-based data gathering. In\nProceedings of the 2017\
    \ Wireless Days, Porto, Portugal, 29–31 March 2017; IEEE: Piscataway, NJ, USA,\
    \ 2017; pp. 245–247.\n186. Kumar, N.; Dash, D. Flow based efﬁcient data gathering\
    \ in wireless sensor network using path-constrained mobile sink. J. Ambient.\n\
    Intell. Humaniz. Comput. 2020, 11, 1163–1175. [CrossRef]\n187. Ebrahimi, D.; Sharafeddine,\
    \ S.; Ho, P.H.; Assi, C. UAV-aided projection-based compressive data gathering\
    \ in wireless sensor\nnetworks. IEEE Internet Things J. 2019, 6, 1893–1905. [CrossRef]\n\
    188. Wu, Q.; Sun, P.; Boukerche, A. An energy-efﬁcient uav-based data aggregation\
    \ protocol in wireless sensor networks.\nIn\nProceedings of the 8th ACM Symposium\
    \ on Design and Analysis of Intelligent Vehicular Networks and Applications, Montreal,\n\
    QC, Canada, 28 October–2 November 2018; pp. 34–40.\n189. Zahra, M.; Wang, Y.;\
    \ Ding, W. Cross-layer routing for a mobility support protocol based on handover\
    \ mechanism in cluster-based\nwireless sensor networks with mobile sink. Sensors\
    \ 2019, 19, 2843. [CrossRef] [PubMed]\n190. Zhang, R.; Pan, J.; Xie, D.; Wang,\
    \ F. NDCMC: A hybrid data collection approach for large-scale WSNs using mobile\
    \ element and\nhierarchical clustering. IEEE Internet Things J. 2015, 3, 533–543.\
    \ [CrossRef]\n191. Say, S.; Inata, H.; Liu, J.; Shimamoto, S. Priority-based data\
    \ gathering framework in UAV-assisted wireless sensor networks. IEEE\nSens. J.\
    \ 2016, 16, 5785–5794. [CrossRef]\n192. Rault, T.; Bouabdallah, A.; Challal, Y.;\
    \ Marin, F. A survey of energy-efﬁcient context recognition systems using wearable\
    \ sensors\nfor healthcare applications. Pervasive Mob. Comput. 2017, 37, 23–44.\
    \ [CrossRef]\n193. Leonov, V. Thermoelectric energy harvesting of human body heat\
    \ for wearable sensors. IEEE Sens. J. 2013, 13, 2284–2291.\n[CrossRef]\n194. Khalifa,\
    \ S.; Hassan, M.; Seneviratne, A.; Das, S.K. Energy-harvesting wearables for activity-aware\
    \ services. IEEE Internet Comput.\n2015, 19, 8–16. [CrossRef]\n195. Park, J.;\
    \ Joshi, H.; Lee, H.G.; Kiaei, S.; Ogras, U.Y. Flexible PV-cell modeling for energy\
    \ harvesting in wearable IoT applications.\nACM Trans. Embed. Comput. Syst. 2017,\
    \ 16, 1–20. [CrossRef]\n196. Park, J.; Bhat, G.; Nk, A.; Geyik, C.S.; Ogras, U.Y.;\
    \ Lee, H.G. Energy per operation optimization for energy-harvesting wearable\n\
    IoT devices. Sensors 2020, 20, 764. [CrossRef] [PubMed]\n197. Esteves, V.; Antonopoulos,\
    \ A.; Kartsakli, E.; Puig-Vidal, M.; Miribel-Català, P.; Verikoukis, C. Cooperative\
    \ energy harvesting-\nadaptive MAC protocol for WBANs. Sensors 2015, 15, 12635–12650.\
    \ [CrossRef]\n198. Bariya, M.; Nyein, H.Y.Y.; Javey, A. Wearable sweat sensors.\
    \ Nat. Electron. 2018, 1, 160–171. [CrossRef]\n199. Gao, W.; Nyein, H.Y.Y.; Shahpar,\
    \ Z.; Tai, L.C.; Wu, E.; Bariya, M.; Ota, H.; Fahad, H.M.; Chen, K.; Javey, A.\
    \ Wearable sweat\nbiosensors. In Proceedings of the 2016 IEEE International Electron\
    \ Devices Meeting (IEDM), San Francisco, CA, USA, 3–7\nDecember 2016. [CrossRef]\n\
    Sensors 2022, 22, 2650\n43 of 44\n200. Bandodkar, A.J.; Jia, W.; Yardımcı, C.;\
    \ Wang, X.; Ramirez, J.; Wang, J. Tattoo-based noninvasive glucose monitoring:\
    \ A proof-of-\nconcept study. Anal. Chem. 2015, 87, 394–398. [CrossRef] [PubMed]\n\
    201. Salvo, P.; Di Francesco, F.; Costanzo, D.; Ferrari, C.; Trivella, M.G.; De\
    \ Rossi, D. A wearable sensor for measuring sweat rate. IEEE\nSens. J. 2010, 10,\
    \ 1557–1558. [CrossRef]\n202. Sim, J.K.; Yoon, S.; Cho, Y.H. Wearable sweat rate\
    \ sensors for human thermal comfort monitoring. Sci. Rep. 2018, 8, 1181.\n[CrossRef]\
    \ [PubMed]\n203. Song, Y.; Min, J.; Yu, Y.; Wang, H.; Yang, Y.; Zhang, H.; Gao,\
    \ W. Wireless battery-free wearable sweat sensor powered by human\nmotion. Sci.\
    \ Adv. 2020, 6, eaay9842. [CrossRef] [PubMed]\n204. Tai, L.C.; Gao, W.; Chao,\
    \ M.; Bariya, M.; Ngo, Q.P.; Shahpar, Z.; Nyein, H.Y.; Park, H.; Sun, J.; Jung,\
    \ Y.; et al. Methylxanthine drug\nmonitoring with wearable sweat sensors. Adv.\
    \ Mater. 2018, 30, 1707442. [CrossRef]\n205. Ferrer-Vidal, A.; Rida, A.; Basat,\
    \ S.; Yang, L.; Tentzeris, M.M. Integration of sensors and RFID’s on ultra-low-cost\
    \ paper-based\nsubstrates for wireless sensor networks applications. In Proceedings\
    \ of the 2006 2nd IEEE Workshop on Wireless Mesh Networks,\nReston, VA, USA, 25–28\
    \ September 2006; IEEE: Piscataway, NJ, USA, 2006; pp. 126–128.\n206. Li, K.;\
    \ Habre, R.; Deng, H.; Urman, R.; Morrison, J.; Gilliland, F.D.; Ambite, J.L.;\
    \ Stripelis, D.; Chiang, Y.Y.; Lin, Y.; et al. Applying\nmultivariate segmentation\
    \ methods to human activity recognition from wearable sensors’ data. JMIR mHealth\
    \ uHealth 2019,\n7, e11201. [CrossRef] [PubMed]\n207. Ling, Y.; An, T.; Yap, L.W.;\
    \ Zhu, B.; Gong, S.; Cheng, W. Disruptive, soft, wearable sensors. Adv. Mater.\
    \ 2020, 32, 1904664.\n[CrossRef] [PubMed]\n208. Pathak, N.; Mukherjee, A.; Misra,\
    \ S. Reconﬁgure and Reuse: Interoperable Wearables for Healthcare IoT. In Proceedings\
    \ of the\nIEEE INFOCOM 2020—IEEE Conference on Computer Communications, Toronto,\
    \ ON, Canada, 6–9 July 2020; IEEE: Piscataway,\nNJ, USA, 2020; pp. 20–29.\n209.\
    \ Townsend, K.; Cufí, C.; Akiba; Davidson, R. Getting Started with Bluetooth Low\
    \ Energy: Tools and Techniques for Low-Power\nNetworking; O’Reilly Media, Inc.:\
    \ Sebastopol, CA, USA, 2014.\n210. Gomez, C.; Oller, J.; Paradells, J. Overview\
    \ and evaluation of bluetooth low energy: An emerging low-power wireless technology.\n\
    Sensors 2012, 12, 11734–11753. [CrossRef]\n211. Coskun, V.; Ok, K.; Ozdenizci,\
    \ B. Near Field Communication (NFC): From Theory to Practice; John Wiley & Sons:\
    \ Hoboken, NJ, USA,\n2011.\n212. Kim, J.; Banks, A.; Xie, Z.; Heo, S.Y.; Gutruf,\
    \ P.; Lee, J.W.; Xu, S.; Jang, K.I.; Liu, F.; Brown, G.; et al. Miniaturized ﬂexible\
    \ electronic\nsystems with wireless power and near-ﬁeld communication capabilities.\
    \ Adv. Funct. Mater. 2015, 25, 4761–4767. [CrossRef]\n213. Kwak, K.S.; Ullah,\
    \ S.; Ullah, N. An overview of IEEE 802.15.6 standard. In Proceedings of the 2010\
    \ 3rd International Symposium\non Applied Sciences in Biomedical and Communication\
    \ Technologies (ISABEL 2010), Rome, Italy, 7–10 November 2010; IEEE:\nPiscataway,\
    \ NJ, USA, 2010; pp. 1–6.\n214. Lee, W.; Lin, K.Y.; Seto, E.; Migliaccio, G.C.\
    \ Wearable sensors for monitoring on-duty and off-duty worker physiological status\n\
    and activities in construction. Autom. Constr. 2017, 83, 341–353. [CrossRef]\n\
    215. Chang, W.J.; Chen, L.B.; Chiou, Y.Z. Design and implementation of a drowsiness-fatigue-detection\
    \ system based on wearable\nsmart glasses to increase road safety. IEEE Trans.\
    \ Consum. Electron. 2018, 64, 461–469. [CrossRef]\n216. Wu, F.; Redouté, J.M.;\
    \ Yuce, M.R. A self-powered wearable body sensor network system for safety applications.\
    \ In Proceedings\nof the 2018 IEEE SENSORS, New Delhi, India, 28–31 October 2018;\
    \ IEEE: Piscataway, NJ, USA, 2018; pp. 1–4.\n217. Qi, J.; Yang, P.; Hanneghan,\
    \ M.; Tang, S.; Zhou, B. A hybrid hierarchical framework for gym physical activity\
    \ recognition and\nmeasurement using wearable sensors. IEEE Internet Things J.\
    \ 2018, 6, 1384–1393. [CrossRef]\n218. You, I.; Choo, K.K.R.; Ho, C.L.; Leu, F.-Y.;\
    \ Ko, C.-Y. A smartphone-based wearable sensors for monitoring real-time physiological\n\
    data. Comput. Electr. Eng. 2018, 65, 376–392.\n219. Dian, F.J.; Vahidnia, R.;\
    \ Rahmati, A. Wearables and the Internet of Things (IoT), applications, opportunities,\
    \ and challenges:\nA Survey. IEEE Access 2020, 8, 69200–69211. [CrossRef]\n220.\
    \ Peoples, C.; Moore, A.; Zoualfaghari, M. A Review of the Opportunity to Connect\
    \ Elderly Citizens to the Internet of Things (IoT)\nand Gaps in the Service Level\
    \ Agreement (SLA) Provisioning Process. EAI Endorsed Trans. Cloud Syst. 2020,\
    \ 6, e3. [CrossRef]\n221. Kekade, S.; Hseieh, C.H.; Islam, M.M.; Atique, S.; Khalfan,\
    \ A.M.; Li, Y.C.; Abdul, S.S. The usefulness and actual use of wearable\ndevices\
    \ among the elderly population. Comput. Methods Programs Biomed. 2018, 153, 137–159.\
    \ [CrossRef] [PubMed]\n222. Bogu, G.K.; Snyder, M.P. Deep learning-based detection\
    \ of COVID-19 using wearables data. MedRxiv 2021.\n223. Hassantabar, S.; Stefano,\
    \ N.; Ghanakota, V.; Ferrari, A.; Nicola, G.N.; Bruno, R.; Marino, I.R.; Jha,\
    \ N.K. CovidDeep: SARS-CoV-\n2/COVID-19 Test Based on Wearable Medical Sensors\
    \ and Efﬁcient Neural Networks. arXiv 2020, arXiv:2007.10497.\n224. Cortellessa,\
    \ G.; Stabile, L.; Arpino, F.; Faleiros, D.; Van Den Bos, W.; Morawska, L.; Buonanno,\
    \ G. Close proximity risk assessment\nfor SARS-CoV-2 infection. Sci. Total Environ.\
    \ 2021, 794, 148749. [CrossRef] [PubMed]\n225. Ng, P.C.; Spachos, P.; Gregori,\
    \ S.; Plataniotis, K.N. Personal Devices for Contact Tracing: Smartphones and\
    \ Wearables to Fight\nCOVID-19. IEEE Commun. Mag. 2021, 59, 24–29. [CrossRef]\n\
    226. Bian, S.; Zhou, B.; Bello, H.; Lukowicz, P. A wearable magnetic ﬁeld based\
    \ proximity sensing system for monitoring COVID-19\nsocial distancing. In Proceedings\
    \ of the 2020 International Symposium on Wearable Computers, Virtual Event, 12–16\
    \ September\n2020; pp. 22–26.\nSensors 2022, 22, 2650\n44 of 44\n227. Shubina,\
    \ V.; Ometov, A.; Lohan, E.S. Technical perspectives of contact-tracing applications\
    \ on wearables for COVID-19 control. In\nProceedings of the 2020 12th International\
    \ Congress on Ultra Modern Telecommunications and Control Systems and Workshops\n\
    (ICUMT), Brno, Czech Republic, 5–7 October 2020; IEEE: Piscataway, NJ, USA, 2020;\
    \ pp. 229–235.\n228. Amft, O.; Lopera, L.; Lukowicz, P.; Bian, S.; Burggraf, P.\
    \ Wearables to ﬁght COVID-19: From symptom tracking to contact tracing.\nIEEE\
    \ Ann. Hist. Comput. 2020, 19, 53–60. [CrossRef]\n229. Channa, A.; Popescu, N.;\
    \ Skibinska, J.; Burget, R. The rise of wearable devices during the COVID-19 pandemic:\
    \ A systematic\nreview. Sensors 2021, 21, 5787. [CrossRef] [PubMed]\n"
  inline_citation: '>'
  journal: Sensors
  limitations: The paragraph does not provide any detailed discussion of NC-based
    data gathering schemes in WSNs, which is the focus of the survey section.
  pdf_link: https://www.mdpi.com/1424-8220/22/7/2650/pdf?version=1648630550
  publication_year: 2022
  relevance_evaluation: This paragraph explains the utility and mechanisms of network
    coding (NC) in wireless sensor networks (WSNs), specifically for data dissemination
    applications, and is relevant to the discussion of NC-based data gathering schemes
    in WSNs.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Data Gathering Techniques in WSN: A Cross-Layer View'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s23125577
  analysis: '>'
  authors:
  - Michal Prauzek
  - Kucova Tereza
  - Jaromír Konecny
  - A. N. Monika
  - Gaioiva Karolina
  - Mikus Miroslav
  - Pavel Pospíšil
  - Andriukaitis Darius
  - Zilys Mindaugas
  - Birgitta Martinkauppi
  - Jiří Koziorek
  citation_count: 1
  explanation: 'This article provides a broad overview of the state-of-the-art techniques
    and technologies in the field of IoT-based geothermal monitoring. The article
    is divided into sections that cover specific aspects of IoT monitoring, including
    temperature, flow rate, and other mechanical parameters.


    In the section on temperature measurement, the article discusses the use of optical
    fibers, distributed temperature sensing (DTS) technology, and thermistors as sensors
    for monitoring temperature in geothermal wells and pipelines. It explains how
    these sensors work and provides examples of their application in geothermal monitoring
    systems.


    The section on flow rate measurement covers various techniques, including ultrasonic
    meters, calorimeters, sharp-edge orifice plates, tracer dilution, lip pressure,
    venturi tubes, coriolis flow meters, and compression load cells. The article describes
    the advantages and disadvantages of each method and provides examples of their
    use in geothermal applications.


    The section on mechanical parameter measurement discusses the use of fibre-optic
    sensors, vibrating wire sensors, tilt sensors, and ultrasonic sensors for monitoring
    pressure, scale formation, slope movement, and deformation in geothermal structures.
    It explains the working principles of these sensors and provides examples of their
    application in geothermal monitoring systems.


    The article also covers topics such as IoT devices and cloud processing, including
    IoT node design, data transmission technologies, and cloud services. It explains
    the advantages and disadvantages of different technologies and provides examples
    of their use in geothermal monitoring systems.


    Finally, the article discusses research challenges and potential applications
    for IoT-based geothermal monitoring, such as the use of energy harvesting technologies
    to power IoT sensors and the development of new sensing and communication technologies
    to improve the performance and efficiency of geothermal monitoring systems.'
  extract_1: '**Temperature Measurement**


    Temperature monitoring technologies enable the study of geological processes and
    the investigation of subsurface thermal properties. Table 2 lists some of the
    temperature measurement technologies applied in complex systems.


    The principles of these specific temperature measurement technologies are further
    described in this subsection.


    **2.1.1. Static Installations**


    Static installations deploy thermistors, thermocouples, ﬁbre optic thermometers
    or

    DTS technology. Thermistors are sensors capable of measuring high-quality temperature–depth
    information from boreholes up to 100 m or more below the Earth’s surface [19].
    Thermocouples are installed to measure temperatures at the inlets and outlets
    of geothermal heat exchangers [20]. Wired optical sensors provide continuous measurements
    with high-resolution temperature proﬁles along pipelines [18] and are often attached
    to the outer surface of the pipe wall or located within the underground structure
    itself [21].


    DTS technology is used for temperature measurements along various types of under-ground
    geothermal structures. Measurements are based on detecting light from Rayleigh,
    Raman or Brillouin backscattering phenomena [15]. DTS technology measures tempera-tures
    using optical ﬁbres that provide a continuous temperature distribution proﬁle
    of the entire cable [22]. This method is able to achieve highly accurate temperature
    measurements over long distances, up to 30 km. This technology is very sensitive
    for monitoring temper-ature, as it is characterized by a spatial resolution of
    1 m at an accuracy of ±1 ◦C and a resolution of 0.01 ◦C [23]. This technology
    works by detecting thermal changes along the optical ﬁbre that manifest as molecular
    or lattice vibrations in the material. In addition, thermal changes cause local
    changes in the refractive index. Changes in the refractive index

    are then manifested as the inelastic scattering of transmitted light. Molecular
    vibrations at

    high frequencies around 10 THz cause Raman scattering. Brillouin scattering is
    caused by

    low-frequency vibrations in the range of 10 to 30 GHz. This scattering can then
    be used to

    measure the temperature along the ﬁbre [24].


    DTS technology is widely applied to inspect subsurface thermal properties. DTS
    can

    be used in various applications, such as investigating the hydro-geological conditions

    of downholes or determining the geological properties of aquifers. Especially
    in deep

    boreholes, its application provides notable beneﬁts over discrete-point temperature
    mea-surements [5]. DTS is widely used in long-term monitoring to determine the
    contribution

    of groundwater ﬂow and thermophysical characteristics to subsurface heat transfer
    and

    storage [16]. This type of technology is used to monitor the conditions inside
    well bores to

    optimize expensive workover procedures [17].


    **2.1.2. Mobile Sensing**


    Mobile sensing systems such as Geoball and Geosniff are small spheres 25 mm in

    diameter and 8 g in weight that have an embedded transceiver, microcontroller,
    temperature sensor and power supply. These miniaturized sensors are inserted into
    the pipes of a

    geothermal underground structure and are then carried by the thermal ﬂuid in order
    to monitor the thermal parameters of the ﬂuid along the borehole heat exchanger.
    These

    sensor systems allow the acquisition of information on the thermal properties
    of the

    subsurface geological structure and their inﬂuence on the thermal properties of
    the borehole.


    A wireless data processing unit sends data and acquires conﬁgurational information
    prior

    to measurement and retrieves measured thermal data from a sensor inside the U-tube
    of

    the borehole heat exchanger [18].'
  extract_2: '**3.4. Edge Computing**


    Edge computing is a method with enormous potential for IoT geothermal monitoring.

    Edge computing allows some computation and data storage to be moved closer to
    the

    source of the data, enabling the optimization of IoT node transmissions.


    Geothermal installations make use of a speciﬁc IoT domain. Table 8 provides a

    summary of some service-oriented architectures for edge computing methods suitable

    for use in geothermal installations. Early warning systems can monitor a geothermal

    installation and evaluate hazardous states. An example of this type of solution
    is an

    early warning system for railway bridges [105]. Edge computing also allows the
    real-time

    monitoring of natural disasters such as ﬁres [106] or earthquakes [107]. These
    solutions

    tolerate multiple node faults and partial network disruptions and store all data
    locally,

    which also enhances privacy [107].


    Other types of edge computing methods manage data compression. Data compression

    performed locally signiﬁcantly reduces the volume of data for transmission [109].
    Data

    compression can be lossy or lossless. The scientiﬁc literature on data compression
    in edge

    computing is vast [110].'
  full_citation: '>'
  full_text: '>

    Citation: Prauzek, M.; Kucova, T.;

    Konecny, J.; Adamikova, M.; Gaiova,

    K.; Mikus, M.; Pospisil, P.;

    Andriukaitis, D.; Zilys, M.;

    Martinkauppi, B.; et al. IoT Sensor

    Challenges for Geothermal Energy

    Installations Monitoring: A Survey.

    Sensors 2023, 23, 5577. https://

    doi.org/10.3390/s23125577

    Academic Editor: Paolo Visconti

    Received: 17 April 2023

    Revised: 25 May 2023

    Accepted: 7 June 2023

    Published: 14 June 2023

    Copyright:

    © 2023 by the authors.

    Licensee MDPI, Basel, Switzerland.

    This article is an open access article

    distributed

    under

    the

    terms

    and

    conditions of the Creative Commons

    Attribution (CC BY) license (https://

    creativecommons.org/licenses/by/

    4.0/).

    sensors

    Review

    IoT Sensor Challenges for Geothermal Energy Installations

    Monitoring: A Survey

    Michal Prauzek 1,*

    , Tereza Kucova 1

    , Jaromir Konecny 1

    , Monika Adamikova 1, Karolina Gaiova 1

    ,

    Miroslav Mikus 1, Pavel Pospisil 2

    , Darius Andriukaitis 3

    , Mindaugas Zilys 3, Birgitta Martinkauppi 4

    and Jiri Koziorek 1

    1

    Department of Cybernetics and Biomedical Engineering, VSB—Technical University
    of Ostrava,

    708 00 Ostrava, Czech Republic; tereza.kucova@vsb.cz (T.K.); jaromir.konecny@vsb.cz
    (J.K.);

    monika.adamikova@vsb.cz (M.A.); karolina.gaiova@vsb.cz (K.G.); miroslav.mikus@vsb.cz
    (M.M.);

    jiri.koziorek@vsb.cz (J.K.)

    2

    Department of Geotechnics and Underground Engineering, VSB—Technical University
    of Ostrava,

    708 00 Ostrava, Czech Republic; pavel.pospisil@vsb.cz

    3

    Department of Electronics Engineering, Kaunas University of Technology, 44249
    Kaunas, Lithuania;

    darius.andriukaitis@ktu.lt (D.A.); mindaugas.zilys@ktu.lt (M.Z.)

    4

    School of Technology and Innovations, University of Vaasa, 65200 Vaasa, Finland;

    birgitta.martinkauppi@uwasa.fi

    *

    Correspondence: michal.prauzek@vsb.cz

    Abstract: Geothermal energy installations are becoming increasingly common in
    new city develop-

    ments and renovations. With a broad range of technological applications and improvements
    in this

    ﬁeld, the demand for suitable monitoring technologies and control processes for
    geothermal energy

    installations is also growing. This article identiﬁes opportunities for the future
    development and

    deployment of IoT sensors applied to geothermal energy installations. The ﬁrst
    part of the survey

    describes the technologies and applications of various sensor types. Sensors that
    monitor temperature,

    ﬂow rate and other mechanical parameters are presented with a technological background
    and their

    potential applications. The second part of the article surveys Internet-of-Things
    (IoT), communication

    technology and cloud solutions applicable to geothermal energy monitoring, with
    a focus on IoT

    node designs, data transmission technologies and cloud services. Energy harvesting
    technologies

    and edge computing methods are also reviewed. The survey concludes with a discussion
    of research

    challenges and an outline of new areas of application for monitoring geothermal
    installations and

    innovating technologies to produce IoT sensor solutions.

    Keywords: geothermal energy; geothermal sensors; energy harvesting; edge computing;
    IoT

    1. Introduction

    Geothermal energy is characterized by two types, one with high enthalpy and the
    other

    with low enthalpy. High-enthalpy energy is found in speciﬁc regions and rock masses
    that

    contain high temperatures and high heat potential, especially volcanic areas and
    deep faults.

    High-enthalpy energy is used for power and heat generation, while low-enthalpy
    energy is

    used only for heat generation and can be found in most shallow rock mass zones
    around

    the world. Underground geothermal structures have been used for various applications,

    for example, electricity production or district heating. Heat pumps for geothermal
    applica-

    tions and geothermal plants produce both electricity and hot water for district
    heating. To

    provide the data required for the proper functioning and control of systems, it
    is necessary

    to monitor various parameters within speciﬁc volumes of rock [1]. Monitoring the
    condi-

    tions of the rock environment provides the information required to manage and
    control

    processes to prolong the lifetimes of systems and avoid outages in operating underground

    geothermal structures [2]. To control a geothermal system, the key monitoring
    parameters

    Sensors 2023, 23, 5577. https://doi.org/10.3390/s23125577

    https://www.mdpi.com/journal/sensors

    Sensors 2023, 23, 5577

    2 of 26

    are the ﬂuid temperature, ambient rock environment temperature, volumetric ﬂow
    rate,

    and physical characteristics of underground structures; minor monitoring parameters
    in-

    clude scale formation [3] and slope movement [4]. Monitoring the speciﬁc characteristics

    and behaviors of underground structures assists in detecting problems and failures
    that

    prevent optimal system operation and energy management. The monitoring focus for

    an underground geothermal structure is dependent on the geothermal application
    area,

    examples of which include heat pumps [5], mines or wells [6], pipelines [7], reservoirs
    [8]

    and borehole exchangers [9].

    Monitoring aims to determine or continuously update the status of key parameters

    necessary for the proper operation of an underground geothermal structure. To
    monitor

    these parameters, devices such as those connected to the Internet of Things (IoT)
    can be

    used. These devices must be able to monitor several variables and wirelessly transmit

    measured values to the cloud [10].

    IoT technology is widely used and can also be applied to many areas of monitoring

    underground geothermal structures. This type of technology is especially useful
    in loca-

    tions where wireless communications are required. These areas are generally difﬁcult
    or

    impossible to connect to a power grid, and therefore, alternative power sources
    such as

    batteries or energy harvesting methods are necessary [11]. In this case, monitoring
    devices

    must consume low amounts of energy, and suitable technologies with powering constraints,

    for example, low-power wide-area network (LPWAN) technology, are therefore required.

    LPWAN technology was designed for reliable wireless data transmission with minimal

    power consumption. The commonly used LPWAN technologies include LoRaWAN, Sigfox

    and NB-IoT [12].

    Table 1 lists recently published reviews of monitoring performed in speciﬁc under-

    ground geothermal structures. The listed studies examined a variety of systems
    that

    monitor different parameters, are deployed in speciﬁc types of geothermal structures
    and

    employ IoT technology. In Refs. [13–15], the authors discussed temperature monitoring

    and the temperature measurement methods, sensors and tools suitable for geothermal
    ap-

    plications, such as vertical borehole heat exchangers, downholes and power plant
    devices.

    In Ref. [1,2], the authors discussed ﬂow rate sensing techniques, providing comprehen-

    sive descriptions and comparisons of the two-phase ﬂow monitoring methods applied

    in geothermal pipelines and geothermal wells. In addition to monitoring temperature

    and ﬂow parameters, geothermal applications also use sensors to monitor mechanical

    parameters, such as scale formation [3] and slope movement [4]. In Ref. [4], the
    authors

    provided an overview of wireless sensor networks (WSNs) combined with IoT devices
    for

    monitoring slopes. The monitoring of other mechanical parameters has not yet been
    sum-

    marized in any recently published survey. The authors of [7,9] discussed the use
    of WSNs

    in underground coal mine monitoring systems and methods for monitoring leakage
    and

    sinkholes. The motivation for the current review is the lack of comprehensive
    studies on IoT

    applications for monitoring underground geothermal structures. To our best knowledge,
    no

    reviews have summarized the use of IoT technology in relation to monitoring geothermal

    parameters, such as temperature, pressure, ﬂow rate and mechanical parameters.

    The main contributions of this article are:

    •

    A comprehensive analysis of methods for monitoring speciﬁc parameters in under-

    ground geothermal structures and the currently available monitoring technologies

    and sensors;

    •

    A description of the state-of-the-art IoT technologies and sensors suitable for
    deploy-

    ment in underground geothermal structures, including sensor node designs, energy

    harvesting methods, communication interfaces and cloud services;

    •

    Proposals for new, promising application areas and innovations in technology for

    monitoring underground geothermal structures.

    The scheme of the article is illustrated in Figure 1. The article discusses sensing
    meth-

    ods for detecting temperature, ﬂow rate and other mechanical parameters in underground

    structures. Section 2 of the article provides a deeper analysis of the methods
    applied to

    Sensors 2023, 23, 5577

    3 of 26

    monitor these parameters. Section 3 discusses IoT technology, data transmission
    and cloud

    services in relation to the systems deployed to monitor underground geothermal
    structures.

    Section 4 discusses research challenges. Section 5 summarizes and concludes the
    article.

    Table 1. Overview of surveys related to monitoring underground geothermal structures.

    Author, Source

    Monitored Parameters

    Geothermal Structure

    Article Content

    IoT

    Aranzabal et al. [13]

    Temperature

    Vertical borehole

    heat exchanger

    Comparison of methods

    No

    Sanjuan et al. [14]

    Temperature and

    pH measurements

    Downhole

    Sensors and equipment

    dedicated to

    geothermal applications

    No

    Ukil et al. [15]

    Temperature

    Power plant device

    Review of technology

    and applications

    No

    Helbig et al. [2]

    Two-phase ﬂow

    Geothermal pipeline

    Comparison of methods

    No

    Mubarok et al. [1]

    Two-phase ﬂow

    Geothermal well

    Comparison of methods

    No

    Yadav et al. [4]

    Slope

    Open-pit mine

    Review of WSNs with IoT used

    for monitoring slopes

    Yes

    Muduli et al. [9]

    Temperature, air humidity,

    gas analysis, etc.

    Coal mine

    Review of monitoring

    possibilities for underground

    coal mines based on WSNs

    Yes

    Ali et al. [7]

    Leakage and sinkhole

    Underground pipeline

    Review of methods and WSNs

    for monitoring leakage

    and sinkholes

    Yes

    Figure 1. Scheme of the article: sensing parameters in underground structures,
    IoT technology and

    cloud processing.

    2. Sensor Technologies

    Sensors containing speciﬁc technologies are necessary for monitoring the subterranean

    environment of a geothermal structure. The ability to continuously monitor such
    structures

    at a reasonable cost is desirable in terms of improving efﬁciency and allowing
    the immediate

    detection of problems and faults [2]. This section examines the technologies for
    measuring

    temperature, ﬂow rate and other mechanical parameters, such as pressure and slope

    movement, in these speciﬁc environments.

    2.1. Temperature Measurement

    Temperature monitoring technologies enable the study of geological processes and

    the investigation of subsurface thermal properties. Table 2 lists some of the
    temperature

    Sensors 2023, 23, 5577

    4 of 26

    measurement technologies applied in complex systems. The principles of these speciﬁc

    temperature measurement technologies are further described in this subsection.

    Table 2. Overview of technologies applied to temperature measurement in underground
    geother-

    mal structures.

    Author, Source

    Geothermal Structure

    Methodology

    McDaniel et al. [16]

    Geothermal exchange boreﬁeld

    DTS

    Reinsch et al. [17]

    Geothermal well

    DTS

    Bense et al. [5]

    Downhole

    DTS

    Martos et al. [18]

    Borehole heat exchanger

    Autonomous wireless sensor

    Aranzabal et al. [13]

    Borehole heat exchanger

    Geoball and GEOsniff

    Depending on the installation method, temperature sensing technologies fall into
    two

    categories: static installations and mobile sensing. Static installation systems
    are ﬁxed

    and permanently installed. These systems include optical ﬁbres, distributed temperature

    sensing (DTS) technology, thermistors and thermocouples. Static installation sensors
    are

    used for temperature measurements in geothermal wells, downholes or borehole heat

    exchangers. Mobile sensing uses wireless technology and is not ﬁxed or permanently

    installed. Mobile sensing systems are used, for example, to monitor the temperature
    of

    geothermal ﬂuid in borehole heat exchangers.

    2.1.1. Static Installations

    Static installations deploy thermistors, thermocouples, ﬁbre optic thermometers
    or

    DTS technology. Thermistors are sensors capable of measuring high-quality temperature–

    depth information from boreholes up to 100 m or more below the Earth’s surface
    [19].

    Thermocouples are installed to measure temperatures at the inlets and outlets
    of geothermal

    heat exchangers [20]. Wired optical sensors provide continuous measurements with
    high-

    resolution temperature proﬁles along pipelines [18] and are often attached to
    the outer

    surface of the pipe wall or located within the underground structure itself [21].

    DTS technology is used for temperature measurements along various types of under-

    ground geothermal structures. Measurements are based on detecting light from Rayleigh,

    Raman or Brillouin backscattering phenomena [15]. DTS technology measures tempera-

    tures using optical ﬁbres that provide a continuous temperature distribution proﬁle
    of the

    entire cable [22]. This method is able to achieve highly accurate temperature
    measurements

    over long distances, up to 30 km. This technology is very sensitive for monitoring
    temper-

    ature, as it is characterized by a spatial resolution of 1 m at an accuracy of
    ±1 ◦C and a

    resolution of 0.01 ◦C [23]. This technology works by detecting thermal changes
    along the

    optical ﬁbre that manifest as molecular or lattice vibrations in the material.
    In addition,

    thermal changes cause local changes in the refractive index. Changes in the refractive
    index

    are then manifested as the inelastic scattering of transmitted light. Molecular
    vibrations at

    high frequencies around 10 THz cause Raman scattering. Brillouin scattering is
    caused by

    low-frequency vibrations in the range of 10 to 30 GHz. This scattering can then
    be used to

    measure the temperature along the ﬁbre [24].

    DTS technology is widely applied to inspect subsurface thermal properties. DTS
    can

    be used in various applications, such as investigating the hydro-geological conditions

    of downholes or determining the geological properties of aquifers. Especially
    in deep

    boreholes, its application provides notable beneﬁts over discrete-point temperature
    mea-

    surements [5]. DTS is widely used in long-term monitoring to determine the contribution

    of groundwater ﬂow and thermophysical characteristics to subsurface heat transfer
    and

    storage [16]. This type of technology is used to monitor the conditions inside
    well bores to

    optimize expensive workover procedures [17].

    Sensors 2023, 23, 5577

    5 of 26

    2.1.2. Mobile Sensing

    Mobile sensing systems such as Geoball and Geosniff are small spheres 25 mm in

    diameter and 8 g in weight that have an embedded transceiver, microcontroller,
    temperature

    sensor and power supply. These miniaturized sensors are inserted into the pipes
    of a

    geothermal underground structure and are then carried by the thermal ﬂuid in order
    to

    monitor the thermal parameters of the ﬂuid along the borehole heat exchanger.
    These

    sensor systems allow the acquisition of information on the thermal properties
    of the

    subsurface geological structure and their inﬂuence on the thermal properties of
    the borehole.

    A wireless data processing unit sends data and acquires conﬁgurational information
    prior

    to measurement and retrieves measured thermal data from a sensor inside the U-tube
    of

    the borehole heat exchanger [18].

    These types of sensors have demonstrable advantages of higher reliability and
    lower

    cost over standard sensors and ﬁbre optics [13]. Fibre optic technologies such
    as high-

    temperature distributed acoustic sensors [25] are used for their unparalleled
    ability to

    discriminate and measure environmental variables such as strain, temperature and
    vibra-

    tions [26]. The purpose of the method is to improve the conventional thermal response

    test [18]. Compared to Pt100 sensors, mobile sensing systems are highly accurate
    and do

    not produce large, statistically signiﬁcant measurement deviations [13].

    2.2. Flow Rate Measurement

    The measurement of liquid and gaseous ﬂow rates in underground geothermal struc-

    tures is performed to manage and control various processes [1]. Flow rate measurement
    in

    geothermal structures applies techniques that differ in complexity, cost and the
    capability to

    perform real-time surveys. Table 3 summarizes the differences between individual
    methods

    of ﬂow rate measurement on the basis of four attributes: the ability to provide
    real-time

    measurements (real-time), the operational status of the underground structure
    (out of

    operation), direct contact between the medium and the sensing device (direct contact)
    and a

    list of the types of underground structures where the ﬂow rate measurement method
    is

    used (application location).

    Table 3. Summary of methods for measuring ﬂow rate in underground geothermal structures.

    Method

    Real-Time

    Out of Operation

    Direct Contact

    Application Location

    Ultrasonic meter

    Yes

    No

    No

    Geothermal power plant [27],

    open Venturi channel [28]

    Calorimeter

    No

    Yes

    Yes

    Geothermal well [29]

    Sharp-edge oriﬁce plate

    Yes

    No

    Yes

    Geothermal well [1,2]

    Tracer dilution

    No

    No

    Yes

    Geothermal well [30,31]

    Lip pressure

    Yes

    Yes

    Yes

    Geothermal well [32]

    Venturi tube

    Yes

    No

    Yes

    Geothermal power plant [33],

    geothermal pipeline [34]

    Coriolis ﬂow meter

    Yes

    No

    Yes

    Open Venturi channel [28]

    Compression load cells

    Yes

    No

    No

    Geothermal pipeline [35], geothermal well [35]

    Separator with oriﬁce plate and silencer

    Yes

    No

    Yes

    Geothermal well [1]

    In summary, each method, except for the calorimeter and tracer dilution, provides

    real-time measurements. The calorimeter and lip pressure are the only two methods
    used

    in decommissioned underground structures. Each method, except for compression
    load

    cells and the ultrasonic meter, has direct contact with the sensing medium. The
    application

    location includes geothermal power plants, open Venturi channels, geothermal pipelines

    and geothermal wells.

    Flow rate measurement can apply single ﬂow rate methods or hybrid ﬂow rate meth-

    ods. Hybrid methods combine two basic methods to reduce any deﬁciencies that single

    methods may introduce. Hybrid techniques are frequently used to measure two-phase

    ﬂuid ﬂow. The following subsections describe the individual methods listed in
    Table 3 for

    ﬂow rate measurement and estimation.

    Sensors 2023, 23, 5577

    6 of 26

    2.2.1. Ultrasonic Meter

    Ultrasonic meters are devices that are composed of a receiver and transmitter
    and that

    use the phenomenon of sonic waves. The device is attached to the exterior of a
    pipeline

    and used to determine the ﬂow rate. The transmitted waves are detected by the
    receiver.

    The modiﬁcation of the wave frequency and amplitude is indicative of the properties
    of

    the ﬂuid/gas. There exist several methods that can be used to calculate the ﬁnal
    ﬂow rate,

    for example, based on the time of transit of the sonic waves [36], the Doppler
    Effect [37],

    cross-correlation [37] or changes in wave amplitude [38]. Ultrasonic sensors are
    used

    in many areas of industry. In underground structures, at least three sensors are
    used at

    different points [28], for example, at different locations along a channel [27].
    The advantage

    of an ultrasonic meter is that it does not come into contact with the ﬂuid/gas
    medium and

    is positioned on the outside of the pipeline [27].

    2.2.2. Calorimeter

    Figure 2 depicts a typical calorimeter conﬁguration that is used to measure enthalpy

    in geothermal wells in addition to the ﬂow rate. This method works on the principle
    of

    measuring the time that it takes to ﬁll a partially water-ﬁlled tank with geothermal
    ﬂuid.

    The time is then used to calculate the ﬂow rate [2].

    Figure 2. Block diagram of a calorimeter setup.

    The disadvantage of this technique is that it requires the geothermal well to
    halt

    production [1]. Another disadvantage is that it is only suitable for low-output
    wells, as the

    amount of discharge is restricted by the volume of the tank that can be delivered
    to the

    site. Another constraint is the limit on the maximum measurable ﬂow rate of 10
    kg/s [39].

    Measuring the ﬂow rate in this manner is also very noisy and cannot be performed
    in real

    time [40].

    2.2.3. Sharp-Edged Oriﬁce Plate

    An oriﬁce plate is a well-known alternative method that has been implemented in

    several geothermal applications all over the world [1]. The oriﬁce plate consists
    of a central

    circular hole that measures differential pressure by establishing pressure taps
    upstream

    and downstream. Figure 3 [2] illustrates a typical oriﬁce plate setup.

    Figure 3. Oriﬁce plate installed at a geothermal well.

    Oriﬁce plates are frequently used to measure the ﬂow of geothermal steam; extracting

    steam from the ground is the ﬁrst crucial step in converting geothermal steam
    energy into

    electricity [41]. The devices also measure brine ﬂow [2] and can identify the
    mass ﬂow rate

    of the well [42].

    Sensors 2023, 23, 5577

    7 of 26

    2.2.4. Tracer Dilution Method

    Tracer dilution is used to measure the enthalpy of geothermal ﬂuid in addition
    to the

    ﬂow rate. To determine the well performance, two different chemical tracers are
    injected

    into the ﬂuid stream in the pipe and mixed with water. Fluid tracers disperse
    into a

    liquid phase; gas tracers mainly disperse into a gaseous phase, but also partially
    into a

    liquid phase. Samples of vapor and water are then collected from the pipeline
    and tested

    to identify the dilution of the tracer in both phases and the background concentration.

    From this information, the ﬂow rate and enthalpy can be estimated [1]. The advantages
    of

    this method are the ability to keep the well online during measurement and the
    lack of an

    effect on the ﬂow; they are outweighed, however, by the large costs for lab testing
    [1], the

    poor precision of the results [2] and the lack of real-time measurement capability
    [43].

    2.2.5. Lip Pressure Method

    This method entails the use of a small hole measuring 6 mm in diameter and located

    6 mm away from the pipe lip. Empirical measurements of pressure are taken at this
    hole,

    and using the size of the pipe, an empirical correlation is used to calculate
    the ﬂow rate.

    Enthalpy and the total ﬂow can be determined based on information obtained from
    the ﬂow

    rate and lip pressure [32]. Two arrangements are available for this method, one
    in which

    ﬂuid is discharged into the atmosphere through a vertical lip pressure pipe and
    another in

    which it is discharged horizontally into a silencer on a horizontal lip pressure
    pipe. In the

    vertical arrangement, the pipe is connected to the top valve in a vertical position,
    and the

    ﬂuid’s enthalpy must be estimated based on the temperature of the primary supply
    zone [1].

    In the horizontal arrangement, the pipe discharges into the silencer, and the
    weir box located

    immediately downstream of the silencer monitors the water ﬂow. The method’s advantages

    include low running costs and real-time measurements, but it also has drawbacks,
    such as

    high noise levels and interruptions in operations during measurement [44].

    2.2.6. Venturi Tube

    The Venturi tube method is based on Bernoulli’s principle and is a very precise

    method used for measuring steam ﬂow [34]. The method can be used for online or
    real-time

    measurement, and its main advantage is a low and constant pressure drop. Its construction

    is complicated and expensive, however [2,45].

    2.2.7. Coriolis Flow Meter

    A Coriolis ﬂow meter consists of two curved tubes that vibrate symmetrically.
    The ﬂow

    of the medium is directed through these pipes, and any local changes in the vibration

    frequency due to the ﬂow rate are monitored. To calculate the ﬂow rate, changes
    in the

    frequency are measured by sensors, and empirical correlations are applied. Although
    this

    method enables real-time and online measurement, it is highly inaccurate and therefore
    an

    unpopular option [2,46].

    2.2.8. Compression Load Cells

    Compression load cells use strain gauge sensors to determine the ﬂow rate and

    enthalpy in geothermal pipelines and wells. The sensor is based on the piezoelectric
    effect,

    which is based on converting the mechanical power applied by the object (pipeline,
    well) to

    an electrostatic signal. The load sensor is positioned above a platform (compression
    type,

    Figure 4a) or above the object (tension type, Figure 4b) [35,47].

    Sensors 2023, 23, 5577

    8 of 26

    Figure 4. Compression load cell method: An installation in a geothermal pipeline.
    (a) The load sensor

    is positioned above a platform. (b) The load sensor is positioned above an object.

    The advantages of this method are simple construction, measurement in real time

    and the lack of direct contact with the ﬂuid medium [35,47].

    2.2.9. Separator with Oriﬁce Plate and Silencer

    This hybrid method determines the ﬂow of a two-phase ﬂuid and consists of a sep-

    arator, an oriﬁce plate and a silencer with a weir. The ﬂuid separates into vapor
    and a

    liquid in a separator vessel at a pressure greater than atmospheric. The separate
    steam

    ﬂow is measured with an oriﬁce plate, while the separate liquid ﬂow is determined
    with

    either an oriﬁce plate or a silencer with a weir box. Because oriﬁce plates may
    produce

    unstable measurements due to ﬂash evaporation induced in the liquid, silencers
    are more

    commonly used for measuring the separate liquid ﬂow. The separator method is expensive

    to implement, but it enables high accuracy and online or real-time measurement
    [1,2].

    2.3. Measurement of Mechanical Parameters

    In addition to measuring temperature and ﬂow, monitoring mechanical parameters
    in

    underground structures is important for detecting potential risks. Underground
    structures

    such as borehole heat exchangers must be regularly checked for pressure to ensure
    that no

    ﬂuid leaks into the subsurface, groundwater or process water. Geothermal applications

    also use sensors to monitor other mechanical parameters, such as scale formation
    [3] and

    slope movement [4]. Mechanical parameters can be monitored with ﬁbre-optic sensors
    [48],

    tilt sensors [4], ultrasonic sensors [49], vibrating wire sensors [50] or strain
    gauges [51].

    Table 4 summarizes these sensing methods and their areas of application.

    Pressure is measured with strain gauges or optical sensors, usually in geothermal
    wells

    or reservoirs. Optical sensors are also used to detect the formation of scale
    in geothermal

    brine. In boreholes, ultrasonic sensors are deployed to detect breakouts, and
    tilt sensors

    measure information about slope movement and deformation. Vibrating wire sensors
    are

    used to measure stress in structures at geothermal or oil drilling wells.

    Sensors 2023, 23, 5577

    9 of 26

    Table 4. Summary of methods for measuring mechanical parameters.

    Parameter

    Sensor Type

    Application

    Pressure [51]

    Strain gauge

    Geothermal well

    Pressure [48]

    Fibre-optic

    Geothermal well and reservoir

    Slope movement, deformation [4]

    Tilt sensor

    Borehole

    Scale formation [3]

    Fibre-optic

    Geothermal brine

    Formation of borehole breakouts [49]

    Ultrasonic sensor

    Borehole

    Stress [52]

    Vibrating wire sensor

    Geothermal or oil drilling well

    2.3.1. Optical Sensors

    Fibre-optic cables are used to measure pressure in geothermal wells [48]. Distributed

    acoustic sensing systems use ﬁbre-optic cables to measure oscillatory strain rates
    caused

    by oscillatory pressure changes. These cables have signiﬁcant advantages in being
    able to

    withstand harsh environments; they can be deployed for geomechanical, seismic
    and tem-

    perature monitoring [53]. Fibre-optic cables are capable of operating at temperatures
    up to

    315 ◦C and 20 MPa [51].

    2.3.2. Vibrating Wire Sensors

    Vibrating wire sensors can measure the stresses occurring in a structure and its
    sur-

    rounding environment. It is a frequency sensor with an internal metal string as
    the sensing

    component. The sensor’s output frequency signal changes according to the the stress
    on the

    metal string. The device is durable and simple in design and has a strong anti-interference

    ability [50]. The metal string vibrates as a result of excitation when an external
    force is

    applied, changing the tension in the wire, which changes the frequency of vibrations.

    The dependence between the vibration conductor and the vibration frequency is
    calculated

    from the equation:

    f = 1

    2L

    r

    F

    m,

    (1)

    where m is the mass of the vibrating string, L is the length of the vibrating
    string, F indicates

    the pressure on the sensor, and f is the resonant frequency of the string [54].
    These sensors

    are suitable for applications in geothermal or oil drilling wells [52].

    2.3.3. Tilt Sensors

    These sensors are used to obtain information about slope movements and deforma-

    tions. Tilt monitoring systems combine tilt sensors and LPWAN technology to measure

    slope movement and transmit collected data wirelessly. Data from tilt sensors
    and other

    additional parameters (rainfall data, groundwater level) are analyzed to predict
    slope

    failures [55].

    3. IoT Devices and Cloud Processing

    IoT technology is a growing research area. In 2021, the Web of ScienceTM library

    contained more than 13,000 indexed papers on the topic of IoT technology [56].
    IoT tech-

    nologies are deployed in many application areas, such as environmental monitoring
    [10],

    smart factories [57,58], smart cities [59] and smart grids [11,60]. Although IoT
    technol-

    ogy is widely deployed, only a few research articles cover the monitoring of geothermal

    energy installations.

    Fundamentally, an IoT device is an internet connection. In the context of this
    article,

    an IoT device is a small item of electronic equipment that is able to supervise
    several

    variables and transmit measured values to the cloud via a wireless connection.
    Figure 5

    illustrates the principal scheme of the IoT architecture and application areas.

    Sensors 2023, 23, 5577

    10 of 26

    Figure 5. IoT architecture and application domains.

    Figure 6 shows a block diagram of a typical IoT solution. IoT devices generally
    contain

    the following parts: a power supply module, a sensory subsystem, a microcontroller
    (MCU),

    a transmission module (RF module) and data storage. Each block can be assembled
    from

    various components according to system requirements and deployment characteristics.

    Figure 6. Block diagram of a typical IoT solution.

    3.1. IoT Nodes

    An integral component of an IoT device is a power supply. To supply the device
    with

    power, many options are available, the simplest being a connection to a power
    grid; an

    example is an AC power monitoring module with an integrated wireless connection
    via

    WiFi [61]. Power grids provide sources of stable and reliable energy, but they
    are mainly

    only available in urban locations. Another option is the use of a battery [62].
    Batteries

    also provide stable sources of energy, but they require periodic charging and
    replace-

    ment. Battery-powered IoT devices can also be designed to operate for long life
    spans [10].

    Another option for supplying electricity is through energy harvesting methods
    [63]. Char-

    acterized by many advantages, energy harvesting modules are small, maintenance-free

    and inexpensive solutions, especially compared to battery-powered options. The
    main

    drawback of energy harvesting solutions, however, is limited available energy.

    Table 5 summarizes IoT power supply technologies according to the energy trans-

    ducer type. Selecting a suitable power supply type is strongly dependent on the
    target

    application [64]. In many geothermal applications [65], power grids are readily
    available,

    and generally, no energy harvesting or battery technologies are required. However,
    IoT

    measurement devices are often deployed directly in geothermal boreholes, where
    the in-

    stallation of a wired power supply is complicated [66]. Energy harvesting is therefore
    a

    highly suitable technology for these applications.

    Sensors 2023, 23, 5577

    11 of 26

    Table 5. SoA of IoT power supply technologies.

    Author, Source

    Power Supply Type

    Application

    Lin et al. [61]

    AC power grid

    AC power monitoring module

    Grimsley et al. [10]

    Primary battery

    Environmental monitoring

    Das et al. [67]

    Solar panel

    Air pollution monitoring

    Civerchia et al. [62]

    Battery

    Industrial monitoring

    Wang et al. [68]

    Kinetic energy—vibration

    Agricultural industry

    Tran et al. [69]

    Radio frequency

    Healthcare, room temperature, tire pressure, implantable devices,

    environmental monitoring, air quality monitoring

    Twaha et al. [70]

    Thermoelectric generator

    Industrial utilities, transportation tools, military devices, space applications,

    medical services

    Roy et al. [71]

    Wind

    Environmental monitoring, agricultural applications

    Energy harvesting using solar panels or small wind turbines is suitable only for
    surface

    deployment, where sunlight and wind are sufﬁcient [72]. For underground structures,
    ther-

    moelectric generators (TEGs) have signiﬁcant potential as an energy harvesting
    technology.

    TEGs exploit the Seebeck effect to generate energy through temperature differentials
    [73].

    The main challenge with this technology is ﬁnding suitable temperature differences
    or

    gradients directly in a borehole for exposure to the TEG.

    Acting as brains, microcontrollers (MCUs) regulate IoT node behavior, such as
    sensor

    data collection, local memory storage and data transmission to the cloud. Since
    IoT nodes

    generally have only limited energy for operation [74], MCUs are also responsible
    for energy

    management. Naturally, they are selected from ultra-low-power series offered by
    silicon

    manufacturers to minimize the MCU’s own consumption. Examples of these series
    types

    are STM32L [75], NXP K32L [76] and Microchip PIC32MZ [77]. Speciﬁc models are
    selected

    according to the application, and generally, higher performance requires more
    energy.

    ULP (ultra-low-power) MCUs typically offer multiple switchable modes of operation

    and the ability to switch off individual peripherals (clock gating) for effective
    power

    management. Switching off all components not currently in use thus reduces the
    overall

    energy consumption [78,79].

    IoT nodes are usually equipped with local data storage, which can be used for
    either

    the long-term storage of accumulated values or short-term storage (as a memory
    buffer).

    As with other IoT node components, power consumption is one of the crucial parameters

    in selecting memory and is dependent on the type of memory used. Ferroelectric
    Random-

    Access Memory (FRAM) is a type of memory technology with low energy consumption,

    but its data capacity is limited to a few dozen MB. At the other end of the spectrum
    of

    data capacity is ﬂash memory, commonly found in SD cards, with maximum capacities

    of hundreds of GB. The disadvantage of ﬂash memory is higher energy consumption
    and

    signiﬁcantly slower data write speeds. Data storage memory may form either a discrete

    component in an IoT node or be integrated into the MCU [80].

    3.2. Data Transmission Technologies

    Underground geothermal structures are often situated in remote areas where no
    easy

    connection to the internet for monitoring purposes is possible (i.e., WiFi or
    Ethernet).

    In these areas, monitoring equipment is usually powered by batteries or energy
    obtained by

    harvesting (see Section 3.1), and energy consumption must be low. GSM/LTE technology

    does not satisfy this low-power requirement, but LPWAN technology is ideal. These
    types

    of systems were developed for the IoT and feature reliable, long-distance wireless
    data

    transmission (1–40 km), with minimal power consumption. The commonly used LPWAN

    technologies are currently LoRa, Sigfox and NB-IoT [81,82].

    Sensors 2023, 23, 5577

    12 of 26

    3.2.1. LoRaWAN

    LoRaWAN is a wireless communication protocol based on the patented LoRa tech-

    nology. The patent was granted in 2014 to Semtec, and the ﬁrst LoRaWAN protocol

    speciﬁcation was released in 2015. The standards are now managed by the LoRa Alliance.

    Transceivers have a low sensitivity to noise and thus a greater range thanks to
    forward

    error correction (FEC), together with a proprietary spread spectrum modulation
    technique.

    The operating radio frequency varies according to the region of deployment and
    its local

    regulations, but it always belongs to a license-free band. A LoRaWAN network typically

    includes the following network elements. The end device is application-dependent,
    pro-

    vides control or measurement functions (sensor, actuator) and is wirelessly connected
    to the

    LoRaWAN network via a gateway. The gateway receives and forwards messages (usually

    via the internet) to a network server. The network server provides network management

    functions such as data processing, message deduplication, conﬁguration and scheduling,

    bandwidth regulation and message routing. The application server remotely collects
    data

    from sensors and transmits commands to device actuators [83,84].

    The technology has a range of 5 km (urban) to 20 km (rural) [85]. Depending on
    the

    conﬁguration, the payload can contain up to 242 bytes of data [86].

    LoRa deﬁnes three device classes:

    •

    Class A—End devices can start transmission (uplink) at any time, while the base

    station transmits data only for a short time once the uplink is complete. Each
    uplink

    time slot is followed by two downlink slots, after which the receiver switches
    off. This

    class has the lowest energy demand.

    •

    Class B—Devices have the same uplink and downlink slots as Class A, plus one extra

    downlink slot. The end-device receiver is switched on for this extra slot according
    to a

    predetermined schedule. The base station is programmed to follow this schedule.

    •

    Class C—Receivers can listen continuously, except in transmit mode. This class
    of

    device is ideal for applications that require many downlink transmissions because

    the base station broadcasts at any time. Its disadvantage is higher power consump-

    tion [87].

    3.2.2. Sigfox

    Sigfox is a company based in France providing network connectivity within the
    IoT

    through its eponymous wireless technology. It was founded in 2010 with a focus
    on low-

    consumption IoT devices that require the transmission of small amounts of data
    over longer

    distances [87].

    Sigfox can operate in either simplex (one-way) or half-duplex (two-way) mode.
    An up-

    load packet can comprise a maximum of 12 bytes of payload, while a download packet

    is limited to 8 bytes of payload. The operational range of this network reaches
    up to

    40 km [87,88]. Such a value is achieved by combining several techniques. The ﬁrst
    of them

    is the use of ultra-narrowband (UNB); such a narrow frequency selection increases
    the

    signal-to-noise ratio (SNR). A combination of Gaussian Frequency-Shift Keying
    (GFSK)

    and Differential Binary Phase-Shift Keying (DBPSK) is used for signal modulation
    in the

    physical layer. Delivery reliability is increased by sending the same message
    multiple

    times. Duplicate messages are sent on randomly selected frequencies with random
    delays

    from the ﬁrst one. Sigfox relies on a license-free band reserved for industrial,
    scientiﬁc and

    medical (ISM) purposes. The speciﬁc frequency then depends on the deployment region.

    In addition to the maximum transmission power, the regulation also sets a duty
    cycle limit.

    Because of this, the end device is limited to 140 messages per day in the case
    of sending

    and 4 messages in the case of receiving [88,89].

    Sensors 2023, 23, 5577

    13 of 26

    3.2.3. NB-IoT

    Narrowband IoT is another LPWAN technology available today. It was developed by

    the 3GPP organization, with the ﬁrst NB-IoT standard deﬁned in 2016. This communication

    network is based on and is directly linked to the GSM/LTE cellular network standard.

    Modiﬁcations consist of changes in the original technology to best meet the requirements

    for IoT end-device network connectivity (such as low power consumption, low cost
    or the

    transmission of small amounts of data over longer distances). Compared to the
    LTE

    protocol, NB-IoT only allows half-duplex at a bandwidth of 180 kHz. Modulation
    schemes

    more complex than π/4–QPSK are not supported. Not all parts of the E-UTRA speciﬁcation

    are implemented either. Thanks to this aspect, the receiver is simpler and therefore
    less

    energy-demanding and lower in price [90–92].

    The standard allows transmission using both unlicensed bands and licensed GSM/LTE

    brands in one of the following operation modes:

    •

    Stand-alone operation—When using this mode, NB-IoT is the exclusive user of the

    selected frequency band.

    •

    Guard-band operation—In this mode, NB-IoT data are transmitted through an unused

    frequency band next to, or between, LTE bands (the so-called guard band).

    •

    In-band operation—LTE data together with NB-IoT data share the same carrier. This

    can have a negative impact on the quality of both services [90,93].

    The existing LTE network provider often only needs to modify the software to operate

    the NB-IoT network if it decides to deploy the guard-band or in-band model. This
    approach

    is also recommended by the 3GPP organization itself. The usable distance of the
    IoT node

    from the base station is up to 10 km [85]. The payload of one message is limited
    to 1600 bytes.

    There is no limit on the number of messages transferred per day when using the
    licensed

    band. NB-IoT relies, like the LTE protocol, on orthogonal frequency division multiplexing

    (OFDM) to transmit downlink messages. In the case of uplink transactions, OFDM
    is

    replaced by single-carrier frequency division multiple access (SC-FDMA). This
    reduces the

    value of the peak-to-average power ratio (PAPR) [94].

    3.2.4. Comparison of LPWANs

    The information in Table 6 indicates that the individual technologies differ,
    although they

    are all speciﬁc to LPWANs. The key advantage of Sigfox over its competitors is
    the

    size of the area covered by a single base station, up to 40 km in rural areas.
    Under the

    same conditions, the main competitors achieve a coverage of approximately 20 km
    with

    LoRaWAN and 10 km with NB-IoT [95]. NB-IoT is also limited to areas with LTE networks.

    In terms of deployment, LoRaWAN allows the creation of private networks, while
    the other

    two technologies rely only on the provider deployment model [96]. NB-IoT is aligned
    with

    applications that require the transfer of large amounts of data or that need a
    low-latency

    network. Sigfox offers a payload volume approximately 100 times lower than NB-IoT

    (maximum 1600 B). LoRaWAN provides a payload of 242 B, and latency can be reduced

    using class C devices [86]. All of these technologies offer sleep modes to reduce
    the energy

    consumption of a transmitter to a minimum when the end device is not transmitting.
    NB-

    IoT nodes have higher power requirements than LoRaWAN and Sigfox, drawing the
    highest

    peak currents during transmission through the use of QPSK modulation in combination

    with OFDM-FDMA and QoS handling [85,97]. LoRaWAN and Sigfox are ALOHA-based

    and operate on unlicensed frequencies. NB-IoT relies on licensed LTE bands, which
    ensure

    higher QoS through regulation, but a consequence is a higher price for the end
    customer

    due to license fees [95].

    Sensors 2023, 23, 5577

    14 of 26

    Table 6. Summary of LPWAN parameters [85,95,97].

    LoRaWAN

    Sigfox

    NB-IoT

    Range

    5–20 km

    10–40 km

    1–10 km

    Band

    Unlicensed ISM

    Unlicensed ISM

    Licensed LTE

    MAC layer

    ALOHA-based

    ALOHA-based

    LTE-based

    Payload

    242 B [86]

    12 B (UL), 8 B (DL)

    1600 B

    Authentication and

    encryption

    AES-128

    No

    LTE encryption

    Adaptive data rate

    Yes

    No

    No

    Modulation

    LoRa (CSS)

    DBPSK, GFSK

    QPSK

    Transmission speed

    50 kbps

    100 bps

    200 kbps

    Deployment model

    Provider, private

    Provider

    Provider

    Adaptive data rate

    Yes

    No

    No

    Topology

    Star, mesh, P2P

    Star

    Star

    Standardization

    LoRa Alliance

    Sigfox company with ETSI

    3GPP

    Power consumption

    Low

    Low

    High

    Interference immunity

    Very high

    Very high

    Low

    3.3. Cloud Services

    Cloud services involve infrastructure, platforms and software delivered on demand

    to companies and customers via the internet. Cloud services employ cloud computing

    solutions and do not encumber the hardware or software of devices accessing the
    service.

    The variety of available cloud services may disguise the level of an organization’s
    ownership

    of the stack [98]. For clarity, cloud service models can be grouped into four
    main categories

    according to how they are managed (Figure 7).

    Figure 7. Cloud model types: on premises, infrastructure as a service, platform
    as a service and

    software as a service.

    •

    On Premises (Private Cloud)—This cloud model is in fact not a genuine cloud service.

    It is suitable for users who require data protection and security and are willing
    to

    pay more for the service. Because data and all infrastructure, including software

    and hardware, are on the premises, the system is managed by the user’s own IT

    team. In-house maintenance requirements and ﬁxed scalability mean that this type
    of

    deployment is the most expensive.

    •

    Infrastructure as a Service (IaaS)—IaaS allows customers to outsource equipment
    such

    as storage, servers and network resources. The remainder of the stack is managed
    by

    the customer. The disadvantage of IaaS is the potential for vendor outages and
    the

    cost of training personnel to manage new infrastructure.

    Sensors 2023, 23, 5577

    15 of 26

    •

    Platform as a Service (PaaS)—The provider manages everything as in IaaS but is
    also

    responsible for the base software and operating system, middleware and database.

    The drawback of PaaS is potential security problems and greater dependency on

    the vendor.

    •

    Software as a Service (SaaS)—This model completely transfers the management of
    all

    components to the vendor service provider [99,100].

    Table 7 summarizes the features of three widely used cloud services: Amazon Web
    Ser-

    vices (AWS), Microsoft Azure IoT, Google Cloud Platform [101–103], and IBM cloud
    [104].

    Generally, these state-of-the-art cloud providers dedicate broad support to services
    and

    applications designed for the IoT and standard communication interfaces for connecting

    IoT devices to a cloud. They also feature powerful scalable data storage and support
    for

    big data analysis.

    Table 7. Summary of parameters and features offered by major cloud providers.

    AWS IoT

    IBM

    Azure IoT

    GCP

    Connectivity

    MQTT, HTTPS,

    LoRaWAN

    HTTP, MQTT

    MQTT, AMQP,

    HTTPS

    MQTT, HTTP

    Security

    TLS

    TLS

    TLS

    TLS

    Data storage

    MongoDB,

    Amazon

    DynamoDB

    IBM cloud

    object/block/ﬁle

    storage

    Azure storage

    Google Cloud

    Storage, Cloud

    Bigtable, Cloud

    SQL

    Microservices

    yes

    yes

    yes

    yes

    SDK/Language

    C++, Python,

    JavaScript, Java,

    Embedded C

    .NET, Python,

    Java, NodeJS

    .Net and UWP,

    Python Java, C,

    NodeJS

    C++, Python,

    Java, NodeJS, Go

    3.4. Edge Computing

    Edge computing is a method with enormous potential for IoT geothermal monitoring.

    Edge computing allows some computation and data storage to be moved closer to
    the

    source of the data, enabling the optimization of IoT node transmissions.

    Geothermal installations make use of a speciﬁc IoT domain. Table 8 provides a

    summary of some service-oriented architectures for edge computing methods suitable

    for use in geothermal installations. Early warning systems can monitor a geothermal

    installation and evaluate hazardous states. An example of this type of solution
    is an

    early warning system for railway bridges [105]. Edge computing also allows the
    real-time

    monitoring of natural disasters such as ﬁres [106] or earthquakes [107]. These
    solutions

    tolerate multiple node faults and partial network disruptions and store all data
    locally,

    which also enhances privacy [107].

    Table 8. SoA for edge computing methods.

    Author, Source

    Application

    Early warning systems

    Kim et. al. [105]

    Real-time scour warning system for railway bridges using remote ambient vibration
    monitoring.

    Dai et. al. [106]

    IoT framework for electrical ﬁre monitoring at ancient architectural complex.

    Bassetti et. al. [107]

    Edge computing early warning system for earthquakes. Local probes detect quakes.

    Data compression

    Rivet et. al. [108]

    Edge computing polynomial regression data compression method for environmental
    monitoring.

    Debski et. al. [109]

    Edge computing study of autonomous vehicles and robots concerning with online
    compression.

    Other types of edge computing methods manage data compression. Data compression

    performed locally signiﬁcantly reduces the volume of data for transmission [109].
    Data

    Sensors 2023, 23, 5577

    16 of 26

    compression can be lossy or lossless. The scientiﬁc literature on data compression
    in edge

    computing is vast [110].

    3.5. IoT in Geothermal Applications

    IoT is chosen over telemetry in geothermal installations due to its ability to
    provide

    continuous monitoring and real-time data collection of temperature, pressure,
    and other

    mechanical parameters. IoT devices are equipped with sensors that can collect
    data from

    various points in the geothermal installation, providing a more comprehensive
    view of the

    system’s performance. Additionally, IoT devices can transmit data wirelessly,
    eliminating

    the need for wired connections and reducing installation and maintenance costs
    [111].

    Comparison of Telemetry Systems and IoT Device is sumarized in Table 9.

    Table 9. Comparison of Telemetry Systems and IoT Devices.

    Factors

    Telemetry Systems

    IoT Devices

    Ease of Installation and

    Maintenance

    Complex, requiring

    specialized equipment and

    expertise

    Relatively easy, designed for

    plug-and-play operation

    Costs

    Expensive, especially in

    remote locations

    Relatively inexpensive,

    deployable in large numbers

    Volume of Information

    Limited data on a few

    parameters

    Comprehensive data from

    multiple sensors

    Transfer Rate Requirements

    High transfer rate for

    real-time data transmission

    Wireless data transmission,

    reduced transfer rate

    requirements

    Environmental Conditions

    Designed to withstand harsh

    conditions

    Impact from temperature,

    humidity, and corrosion

    Operational Range

    Longer range, suitable for

    monitoring large areas or

    remote locations

    Limited range

    Device Replacement

    Difﬁcult, especially in remote

    locations

    Easily replaced, plug-and-play

    operation

    Compared to telemetry, IoT has several advantages in terms of temperature, pres-

    sure, or mechanical parameter measurement. Firstly, IoT devices can collect data
    from

    multiple sensors simultaneously, providing a more comprehensive view of the system’s

    performance [112]. Secondly, IoT devices can transmit data wirelessly, eliminating
    the need

    for wired connections and reducing installation and maintenance costs [113]. Thirdly,
    IoT

    devices can be programmed to send alerts when certain parameters exceed predeﬁned

    thresholds, allowing for early detection of potential issues and timely intervention.

    The lack or improper use of telemetry in geothermal installations can lead to
    several

    problems. Firstly, telemetry systems can be expensive to install and maintain,
    especially in

    remote locations. Secondly, telemetry systems can be prone to signal interference
    and data

    loss, leading to inaccurate or incomplete data. Thirdly, telemetry systems can
    be difﬁcult to

    integrate with other monitoring systems, leading to data silos and reduced visibility
    of the

    system’s performance [114].

    In contrast, IoT devices are relatively inexpensive and easy to install and maintain.

    Additionally, IoT devices can be integrated with other monitoring systems, providing
    a

    more comprehensive view of the system’s performance [115]. Finally, IoT devices
    can

    be programmed to send alerts when certain parameters exceed predeﬁned thresholds,

    allowing for early detection of potential issues and timely intervention.

    In summary, IoT is chosen over telemetry in geothermal installations due to its
    ability

    to provide continuous monitoring and real-time data collection of temperature,
    pressure,

    and other mechanical parameters. IoT devices are equipped with sensors that can
    collect

    data from various points in the geothermal installation, providing a more comprehensive

    view of the system’s performance. Additionally, IoT devices can transmit data
    wirelessly,

    Sensors 2023, 23, 5577

    17 of 26

    eliminating the need for wired connections and reducing installation and maintenance

    costs. The lack or improper use of telemetry in geothermal installations can lead
    to several

    problems, including high costs, signal interference, and data silos [116].

    IoT devices have the potential to revolutionize geothermal monitoring, but they
    also

    pose several challenges that need to be addressed to ensure reliable operation
    and minimize

    the generation of erroneous data. Here are some strategies to confront these challenges:

    1.

    Ensure reliable operation: To ensure reliable operation of IoT devices in geothermal

    installations, it is essential to choose devices that are designed to withstand
    the harsh

    environmental conditions of the installation. This includes selecting devices
    that are

    rated for high temperatures, humidity, and corrosion resistance. Additionally,
    regular

    maintenance and calibration of the devices can help ensure reliable operation
    [117].

    2.

    Prevent malfunctions due to exceeding recommended temperature ranges: IoT devices

    can malfunction if they are exposed to temperatures outside their recommended

    range. To prevent this, it is essential to monitor the temperature of the devices
    and

    the surrounding environment and take appropriate measures to prevent overheating.

    This can include installing cooling systems or using devices with built-in temperature

    sensors and automatic shut-off features.

    3.

    Minimize the generation of erroneous data: IoT devices can generate erroneous
    data

    due to factors such as sensor drift, signal interference, and data loss. To minimize

    this, it is essential to use high-quality sensors and ensure that the devices
    are properly

    calibrated and maintained [118]. Additionally, data validation and error correction

    algorithms can be used to identify and correct erroneous data.

    4.

    Transition from elementary sensors to more complex MCU-based IoT devices: The

    transition from elementary sensors to more complex MCU-based IoT devices can

    bring several implications, including increased complexity, higher costs, and
    the

    need for specialized expertise. To address these challenges, it is essential to
    carefully

    evaluate the beneﬁts and drawbacks of using MCU-based IoT devices and ensure that

    the devices are properly designed, installed, and maintained. Additionally, training

    and support for personnel responsible for operating and maintaining the devices
    can

    help ensure their reliable operation.

    In summary, confronting the challenges posed by IoT devices in geothermal installations

    requires careful consideration of the devices’ design, installation, and maintenance.
    Strategies

    such as ensuring reliable operation, preventing malfunctions due to exceeding
    recommended

    temperature ranges, minimizing the generation of erroneous data, and carefully
    evaluating the

    transition from elementary sensors to more complex MCU-based IoT devices can help
    ensure

    the successful implementation of IoT-based geothermal monitoring systems [119].

    In the construction and electronic placement of geothermal IoT monitoring systems,

    careful consideration should be given to the potential high temperatures of an
    environment

    or a medium [120]. Geothermal environments can expose the equipment to extreme
    heat,

    which can pose challenges to the proper functioning of electronic components.
    It is crucial to

    protect the silicon parts used in these systems, as they have maximum temperature
    limits that

    should not be exceeded. Adequate measures and safeguards must be implemented to
    ensure

    the longevity and reliable operation of IoT devices in such high-temperature conditions
    [121].

    The advance of IoT technology has brought about a push for standardization in
    various

    aspects of its implementation. Standardization includes the adoption of common
    LPWAN

    communication protocols, the use of standardized components on the cloud side,
    and

    the establishment of methodologies for creating IoT nodes [122]. This standardization

    effort aims to streamline and simplify the development and deployment process
    of IoT

    systems. In contrast, telemetry systems often lack standardization and are often
    proprietary,

    leading to increased expenses and longer development cycles. The absence of standardized

    approaches in telemetry results in prolonged development times and delays in bringing

    products to market, ultimately driving up costs. By embracing standardization
    in IoT,

    organizations can beneﬁt from reduced development costs, shorter time to market,
    and

    improved interoperability between different IoT devices and systems [123].

    Sensors 2023, 23, 5577

    18 of 26

    4. Research Challenges

    This article describes options for geothermal monitoring and recent trends in
    the

    application of IoT technologies. This section discusses research challenges for
    potential

    applications of IoT sensor technology in underground geothermal structures to
    extend

    current installations and deliver more robust solutions for future installations.
    Innovations

    for speciﬁc equipment technologies (sensors, edge-computing, energy harvesting,
    IoT

    nodes, etc.) are also discussed.

    Figure 8 illustrates the research challenges outlined in this article, labeled
    with four

    different signs. Undesirable states are tagged with a warning sign (exclamation
    mark

    within a triangle), innovations for improving the design of future applications
    are tagged

    with a dollar sign, innovations for technology are tagged with a light bulb, and
    innovations

    for the cloud are tagged with gear wheels. The figure highlights key research
    challenges and

    provides ideas for addressing them in the field. Implementation of advanced sensors
    holds

    the potential to significantly enhance the design and performance of geothermal
    installations.

    The figure introducing the content of the following sections. The Section 4.1
    on new potential

    applications explores emerging uses of technology in innovative ways, opening
    up exciting

    possibilities for industries and individuals alike. Technology innovations discussed
    in the

    Section 4.2 showcase the latest advancements and breakthroughs that have the potential
    to

    revolutionize various fields and create new opportunities for development.

    Figure 8. Research challenges for various problematic areas.

    Sensors 2023, 23, 5577

    19 of 26

    4.1. New Potential Applications

    Underground geothermal structures are designed for long-term use; therefore, the

    proper management of the installation’s operational life is required. As mentioned
    in

    Section 1, eliminating undesirable states (e.g., thermal imbalance, the absence
    of turbulent

    ﬂuid ﬂow and the unforced operation of heat pumps during cooling) during the operation

    of an underground geothermal structure is beneﬁcial. Long-term monitoring with
    IoT

    sensors can facilitate the optimal operation of underground geothermal structures,
    prolong

    system endurance and optimize standard operations. Table 10 lists several undesirable

    states and potential solutions.

    Table 10. Undesirable states and potential solutions.

    Undesirable State

    Solution

    Thermal imbalance

    Monitoring of individual boreholes

    Absence of turbulent ﬂuid ﬂow

    Higher ﬂow rate or pipes with spiral ribbing (to address low ﬂow rates)

    Unforced operation of the heat pump during cooling

    Heat pump not operational during cooling

    Critical stress change

    Temperature monitoring of critical limits with adequate reduction of

    ﬂow rate

    Volumetric change in concrete in pile

    Application of pressure cell monitoring at the head of the pile between the

    pile and concrete slab

    Thermal imbalance during the operation of an underground geothermal structure
    is

    caused by the heterogeneity of the rock environment. To eliminate thermal imbalances,
    the

    monitoring of individual boreholes is a potential solution. The absence of turbulent
    ﬂuid

    ﬂow can be avoided with higher ﬂow rates. Low ﬂow rates in the geothermal structure
    can

    be speciﬁcally addressed with turbocollectors (pipes with spiral ribbing), which
    guarantee

    that the Reynolds number of the ﬂow is exceeded. The last undesirable state is
    the operation

    of the heat pump during cooling.

    The thermal stress of the pile must be monitored for mechanical property stability

    (strength and deformation parameters). A change in concrete temperature due to
    heat

    transfer (charging and discharging) produces a change in the stresses experienced
    by the

    concrete in the pile. This change in stress consequently produces volumetric changes
    in the

    concrete. In critical cases, the brittle failure of the concrete occurs, and the
    bearing capacity

    of the pile as a whole is reduced.

    Another beneﬁt of the long-term monitoring of currently deployed geothermal installa-

    tions is the continuous data collection of operational parameters. Large datasets
    describing

    geothermal installation behavior during regular operation and also non-standard
    condi-

    tions can be created. IoT technologies allow the extensive monitoring of existing
    structures,

    and therefore, the knowledge base will contain new and important information that
    is use-

    ful for design work for future underground geothermal structures. Table 11 lists
    parameters

    whose monitoring could aid in producing improved designs for future applications.

    Table 11. List of parameters whose monitoring could aid in producing improved
    designs for fu-

    ture applications.

    Monitored Parameter

    Monitoring Purpose

    Flow rate at each borehole

    Techno-economic optimization (selection of suitable pipe diameters and energy
    consumption)

    Temperature at each borehole

    Optimization of designs for well depth

    Utilizing measurement and monitoring techniques for borehole properties, particularly

    temperature and ﬂow rate, presents an opportunity to enhance future applications.
    Flow

    rate monitoring could aid in techno-economic optimization through the selection
    of suitable

    pipe diameters and optimal energy consumption models. Temperature monitoring could

    be applied to optimize designs for the well depth (the length of the borehole).

    Sensors 2023, 23, 5577

    20 of 26

    Many underground geothermal structure walls do not permit the use of sensor tech-

    nologies due to wired sensor limitations or the absence of power grid connections.
    Such

    installations may include sensors that are installed during the construction process
    and are

    subsequently inaccessible or insular systems where a power supply connection is
    difﬁcult

    to build. Energy harvesting technologies have excellent potential as solutions
    for such

    cases through their ability to generate electricity for sensor operation directly
    from the

    ambient environment.

    IoT monitoring systems for geothermal structures can be powered by harvesting
    en-

    ergy from the environment. Table 12 lists energy harvesting methods suitable for
    powering

    these types of IoT sensors. The most promising energy harvesting method is the
    use of

    TEG technology, whose main advantage is the absence of moving mechanical parts
    and the

    possibility of placing the device directly into a borehole. Another option is
    to use water

    pipeline energy harvesting. This type of energy harvesting system can also be
    placed into

    a borehole, but only inside a pipe. Water pipeline energy harvesting modules also
    have

    the disadvantage of moving mechanical parts. The third energy harvesting option
    is solar

    and wind energy. Solar panels or wind turbines cannot be placed into boreholes,
    however,

    and must be located on the surface and be connected to the IoT sensor inside the
    borehole

    with wires.

    Table 12. List of energy harvesting methods suitable for powering sensors used
    to monitor under-

    ground geothermal structure parameters.

    Energy Harvesting Method

    Application

    Features

    Thermoelectric generator

    Underground IoT

    Fixed to the current technology

    Water pipeline energy harvesting

    IoT sensors near pipes

    Inside pipe

    Solar and wind

    IoT sensors located on the ground

    External technology

    4.2. Technological Innovations

    The process of constructing an underground geothermal structure requires many

    technological components. Most of these components do not support direct monitoring,

    and deploying sensors in existing installations is therefore problematic. The
    next generation

    of components could integrate physical sensors directly into equipment. A solution
    such as

    this not only permits IoT monitoring but also provides a sensory interface for
    any type of

    analytical equipment, such as DTS technology. In principle, components with embedded

    sensors add value at minimal cost. Technological improvements would involve the
    installa-

    tion of optical ﬁbres directly into the underground geothermal structure and the
    positioning

    of temperature sensors in the borehole at various depths. These improvements have
    the po-

    tential beneﬁt of optimizing the efﬁciency of the installation. While this solution
    addresses

    certain aspects of the problem, such as improving functionality or performance,
    it does

    not still provide a comprehensive solution for maintenance or replacement requirements.

    In order to ensure sustained effectiveness, it is crucial to consider the high
    reliability of

    components involved. Moreover, a key expectation for this solution is its ability
    to support

    long-term deployment without signiﬁcant interruptions or failures.

    Energy harvesting transducers can power IoT sensors, but the transducer design
    must

    be optimized and aligned with the installation to establish the best energy gains.
    Thermo-

    electric generators are a promising technology, but they must be deployed in environments

    with effective temperature gradients. Temperature gradients for thermoelectric
    generator

    purposes are found in environments that ﬂuctuate between medium and ambient tempera-

    tures, between warm and cold branches, and between shallow soil (50 cm below ground)

    and ambient air.

    Underground monitoring generally faces problems with data transmission. Regular

    connections with the cloud can be solved in two ways: a transmission antenna can
    be placed

    on the surface, or new types of underground antennae suitable for IoT communications

    must be developed.

    Sensors 2023, 23, 5577

    21 of 26

    The ﬁnal research challenge involves innovating the communication interface and

    cloud data processing. Computationally limited, low-power IoT nodes require effective

    data transmission solutions that can be delivered through edge computing techniques
    or

    event-based approaches (Table 13).

    Table 13. Summary of edge computing techniques.

    Edge Computing Technique

    Application

    Metadata analysis

    Early warning systems, hazardous state monitoring

    Data compression

    IoT monitoring

    Edge computing allows metadata analysis in situ and provides signiﬁcant beneﬁts

    for data transmission; for example, IoT nodes monitoring a geothermal energy installation

    conserve energy and resources by transmitting data only if a hazardous state arises.
    The

    data transmission time and the volume of data stored in the cloud are reduced
    by storing

    raw sensor data locally, and the use of cloud computational resources is minimized.

    IoT monitoring systems designed for the real-time collection of data from geothermal

    energy installations can also be optimized with edge computing data compression
    methods

    to reduce the total volume of transmitted data. Truncated data can also be uploaded
    when

    energy for transmission is limited, followed by detailed data transmission in
    the future

    when energy is sufﬁcient.

    5. Conclusions

    This article identiﬁes potential research directions for new applications in geothermal

    energy installations and innovations for IoT monitoring technology and cloud services.

    The article contributes an overview of state-of-the-art principles in the design
    of monitor-

    ing systems for geothermal energy installations and a review of the sensor technologies

    available for use with IoT devices and cloud data processing. Suitable sensor
    equipment

    includes devices for monitoring temperature, ﬂow rates and other mechanical parame-

    ters. The article also reviews IoT technologies, sensor node composition, options
    for data

    transmission and the features of cloud services.

    Future research targets and several possible directions are outlined in the Research

    Challenges section. State-of-the-art solutions provide the potential for new applications

    that address several problematic conditions in geothermal energy installations.
    Monitoring

    systems allow the collection of important datasets that can be used to improve
    future

    designs of geothermal energy installations. Several technological innovation techniques

    could also improve the operation of IoT monitoring devices. Operating nodes in
    monitoring

    systems can be powered from harvested ambient energy to prolong the operating
    time

    and reduce costs. Edge computing methods can optimize data transmission and power

    consumption and provide early warnings of faulty or inefﬁcient operating conditions
    in

    geothermal energy installations.

    Author Contributions: Conceptualization, M.P.; investigation, T.K. and J.K. (Jaromir
    Konecny);

    resources, T.K., B.M., D.A. and M.Z.; writing—original draft preparation, M.P.,
    T.K., J.K. (Jaromir

    Konecny), M.A., K.G., M.M. and P.P.; writing—review and editing, M.P., T.K. and
    J.K. (Jaromir

    Konecny); visualization, J.K. (Jaromir Konecny); supervision, M.P. and J.K. (Jiri
    Koziorek); funding

    acquisition, J.K. (Jiri Koziorek). All authors have read and agreed to the published
    version of

    the manuscript.

    Funding: This work was supported by the project SP2023/009, “Development of algorithms
    and

    systems for control, measurement and safety applications IX”, of the Student Grant
    System, VSB-

    TU Ostrava. This work received funding from the European Union’s Horizon 2020
    research and

    innovation program under grant agreement no. 856670.

    Institutional Review Board Statement: Not applicable.

    Informed Consent Statement: Not applicable.

    Sensors 2023, 23, 5577

    22 of 26

    Data Availability Statement: Not applicable.

    Conﬂicts of Interest: The authors declare no conﬂict of interest.

    References

    1.

    Mubarok, M.H.; Zarrouk, S.J.; Cater, J.E. Two-phase ﬂow measurement of geothermal
    ﬂuid using oriﬁce plate: Field testing and

    CFD validation. Renew. Energy 2019, 134, 927–946. [CrossRef]

    2.

    Helbig, S.; Zarrouk, S.J. Measuring two-phase ﬂow in geothermal pipelines using
    sharp edge oriﬁce plates. Geothermics 2012,

    44, 52–64. [CrossRef]

    3.

    Okazaki, T.; Seto, R.; Watanabe, T.; Ueda, A.; Kuramitz, H. U-Shaped Polymer Cladding
    and Hetero-Core Fiber Optic Sensors for

    Monitoring Scale Formation in Geothermal Brine. Anal. Lett. 2020, 53, 2160–2169.
    [CrossRef]

    4.

    Yadav, D.K.; Jayanthu, S.; Das, S.K.; Chinara, S.; Mishra, P. Critical review
    on slope monitoring systems with a vision of unifying

    WSN and IoT. IET Wirel. Sens. Syst. 2019, 9, 167–180. [CrossRef]

    5.

    Bense, V.; Read, T.; Bour, O.; Le Borgne, T.; Coleman, T.; Krause, S.; Chalari,
    A.; Mondanos, M.; Ciocca, F.; Selker, J. Distributed

    Temperature S ensing as a downhole tool in hydrogeology. Water Resour. Res. 2016,
    52, 9259–9273. [CrossRef]

    6.

    Challener, W.; Palit, S.; Jones, R.; Airey, L.; Craddock, R.; Knobloch, A. MOEMS
    pressure sensors for geothermal well monitoring.

    In Proceedings of the MOEMS and Miniaturized Systems XII, San Francisco, CA, USA,
    2–7 February 2013.

    7.

    Ali, H.; Choi, J.H. A review of underground pipeline leakage and sinkhole monitoring
    methods based on wireless sensor

    networking. Sustainability 2019, 11, 4007. [CrossRef]

    8.

    Kim, J.W.; Lee, C.; Park, S. Real-time health monitoring of pipeline structures
    using piezoelectric guided wave propagation. Adv.

    Sci. Lett. 2011, 4, 696–701. [CrossRef]

    9.

    Muduli, L.; Mishra, D.P.; Jana, P.K. Application of wireless sensor network for
    environmental monitoring in underground coal

    mines: A systematic review. J. Netw. Comput. Appl. 2018, 106, 48–67. [CrossRef]

    10.

    Grimsley, R.; Marineau, M.; Iannucci, B. Experiences in LP-IoT: EnviSense Deployment
    of Remotely Reprogrammable Environ-

    mental Sensors. In Proceedings of the 1st ACM Workshop on No Power and Low Power
    Internet-of-Things, New Orleans, LA,

    USA, 31 January–4 February 2022; pp. 1–7.

    11.

    Adhya, S.; Saha, D.; Das, A.; Jana, J.; Saha, H. An IoT based smart solar photovoltaic
    remote monitoring and control unit. In

    Proceedings of the 2nd International Conference on Control, Instrumentation, Energy
    and Communication, CIEC 2016, Kolkata,

    India, 28–30 January 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 432–436.

    12.

    Hossain, M.I.; Markendahl, J.I. Comparison of LPWAN Technologies: Cost Structure
    and Scalability. Wirel. Pers. Commun. 2021,

    121, 887–903. [CrossRef]

    13.

    Aranzabal, N.; Martos, J.; Steger, H.; Blum, P.; Soret, J. Temperature measurements
    along a vertical borehole heat exchanger: A

    method comparison. Renew. Energy 2019, 143, 1247–1258. [CrossRef]

    14.

    Sanjuan, B.; Béchu, E.; Braibant, G.; Lebert, F. High Temperature-High Pressure
    Rated Sensors and Tools Useful for Geothermal

    Purposes. Bibliographical Review. 2009, Final Report, BRGM/RP-57342-FR, pp. 44.
    Available online: http://infoterre.brgm.fr/

    rapports/RP-57342-FR.pdf (accessed on 2 May 2023).

    15.

    Ukil, A.; Braendle, H.; Krippner, P. Distributed temperature sensing: Review of
    technology and applications. IEEE Sens. J. 2011,

    12, 885–892. [CrossRef]

    16.

    McDaniel, A.; Fratta, D.; Tinjum, J.M.; Hart, D.J. Long-term district-scale geothermal
    exchange boreﬁeld monitoring with ﬁber

    optic distributed temperature sensing. Geothermics 2018, 72, 193–204. [CrossRef]

    17.

    Reinsch, T.; Henninges, J.; Ásmundsson, R. Thermal, mechanical and chemical inﬂuences
    on the performance of optical ﬁbres for

    distributed temperature sensing in a hot geothermal well. Environ. Earth Sci.
    2013, 70, 3465–3480. [CrossRef]

    18.

    Martos, J.; Montero, Á.; Torres, J.; Soret, J.; Martínez, G.; García-Olcina, R.
    Novel wireless sensor system for dynamic characteriza-

    tion of borehole heat exchangers. Sensors 2011, 11, 7082–7094. [CrossRef]

    19.

    Erkan, K.; Akkoyunlu, B.; Balkan, E.; Tayanç, M. A portable borehole temperature
    logging system using the four-wire resistance

    method. J. Geophys. Eng. 2017, 14, 1413–1419. [CrossRef]

    20.

    Becerra, G.; Picazo, M.; Aguilar, J.; Xamán, J.; Osorio, E.; Hernandez, J.; Ledesma-Alonso,
    R. Experimental study of a geothermal

    earth-to-air heat exchanger in Chetumal, Quintana Roo, Mexico. Energy Efﬁc. 2022,
    15, 20. [CrossRef]

    21.

    Aranzabal, N.; Radioti, G.; Martos, J.; Soret, J.; Nguyen, F.; Charlier, R. Enhanced
    thermal response test using ﬁber optics for a

    double U-pipe borehole heat exchanger analysed by numerical modeling. In Proceedings
    of the 29th International Conference on

    Efﬁciency, Cost, Optimisation, Simulation and Environmental Impact of Energy Systems,
    Portoroz, Slovenia, 19–23 June 2016.

    22.

    Gehlin, S.E.; Hellstrom, G. Comparison of four models for thermal response test
    evaluation. ASHRAE Trans. 2003, 109, 131.

    23.

    Ouyang, L.B.; Belanger, D.L. Flow proﬁling by distributed temperature sensor (DTS)
    system-expectation and reality. SPE Prod.

    Oper. 2006, 21, 269–281. [CrossRef]

    24.

    Patterson, J.R.; Cardiff, M.; Coleman, T.; Wang, H.; Feigl, K.L.; Akerley, J.;
    Spielman, P. Geothermal reservoir characterization

    using distributed temperature sensing at Brady Geothermal Field, Nevada. Lead.
    Edge 2017, 36, 1024a1–1024a7. [CrossRef]

    25.

    Wu, H.; Feder, K.S.; Stolov, A.A.; Shenk, S.D.; Monberg, E.M.; Simoff, D.A. High-temperature
    enhanced Rayleigh scattering

    optical ﬁber sensor for borehole applications. In Proceedings of the Optical Components
    and Materials XVII, San Francisco, CA,

    USA, 1–6 February 2020; Volume 11276, pp. 167–172.

    Sensors 2023, 23, 5577

    23 of 26

    26.

    Wu, H.; Stolov, A.A.; Feder, K.S. Optical ﬁber as distributed acoustic sensing
    element with improved Rayleigh backscattering

    sensitivity and robustness under elevated temperature. In Proceedings of the Optical
    Fibers and Sensors for Medical Diagnostics,

    Treatment and Environmental Applications XXI, Online, CA, USA, 6–12 March 2021;
    Volume 11635, pp. 51–57.

    27.

    Ilko, J.; Rusko, M.; Halper, C.; Majernik, M.; Majernik, S. Flow Measurement on
    Hot Water Lines at Geothermal Power Plant

    Using Ultrasonic Method. In Proceedings of the 31st DAAAM International Symposium,
    Mostar, Bosnia and Herzegovina,

    21–24 October 2020; Volume 7.

    28.

    Chhantyal, K.; Viumdal, H.; Mylvaganam, S.; Elseth, G. Ultrasonic level sensors
    for ﬂowmetering of non-Newtonian ﬂuids in

    open Venturi channels: Using data fusion based on Artiﬁcial Neural Network and
    Support Vector Machines. In Proceedings of

    the 2016 IEEE Sensors Applications Symposium (SAS), Catania, Italy, 20–22 April
    2016; IEEE: Piscataway, NJ, USA, 2016; pp. 1–6.

    29.

    de Zuquim, M.P.S.; Zarrouk, S.J. Nursery greenhouses heated with geothermal energy–A
    case study from Rotorua New Zealand.

    Geothermics 2021, 95, 102123. [CrossRef]

    30.

    Agamata-Lu, C. Chemical Tracer Dilution Test Using Isopropanol, Benzoate and Bromide
    at the Broadlands-Ohaaki Geothermal

    Field. Trans.-Geotherm. Resour. Counc. 2000, 24, 549–554.

    31.

    Mella, M.; Olsen, S.; Rose, P.; Bour, D.; Petty, S.; Harris, J. A Downhole Fluorimeter
    for Measuring Flow Processes in Geothermal

    and EGS Wellbores. Geotherm. Resour. Counc. Trans. 2010, 34, 1161–1166.

    32.

    Sugiharto, M.P.; Marastio, F.E.; Fanani, A.F.; Pasaribu, F.; Silaban, M.; Maulana,
    D.T.; Saptadji, N.M. The Implementation of Flow

    Performance Test to Monitor Well Performance in Geothermal Field. Iop Conf. Ser.
    Earth Environ. Sci. 2021, 732, 012020. [CrossRef]

    33.

    Ruliandi, D. Geothermal power plant system performance prediction using artiﬁcial
    neural networks. In Proceedings of the 2015

    IEEE Conference on Technologies for Sustainability, Ogden, UT, USA, 30 July–1
    August 2015; pp. 216–223.

    34.

    Mubarok, M.H.; Cater, J.E.; Zarrouk, S.J. Comparative CFD modelling of pressure
    differential ﬂow meters for measuring

    two-phase geothermal ﬂuid ﬂow. Geothermics 2020, 86, 101801. [CrossRef]

    35.

    Mubarok, M.H.; Zarrouk, S.J.; Cater, J.E.; Mundakir, A.; Bramantyo, E.A.; Lim,
    Y.W. Real-time enthalpy measurement of two-phase

    geothermal ﬂuid ﬂow using load cell sensors: Field testing results. Geothermics
    2021, 89, 101930. [CrossRef]

    36.

    Shen, J. Measurement of Fluid Properties of Two-Phase Fluids Using an Ultrasonic
    Meter. U.S. Patent 5,115,670, 26 May 1992

    37.

    Sanderson, M.; Yeung, H. Guidelines for the use of ultrasonic non-invasive metering
    techniques. Flow Meas. Instrum. 2002,

    13, 125–142. [CrossRef]

    38.

    Uhlmann, M.; Bertsch, S. Measurement and Simulation of Startup and Shut Down of
    Heat Pumps.

    In Proceeding of the

    International Refrigeration and Air Conditioning Conference, West Lafayette, IN,
    USA, 12–15 July 2010.

    39.

    Bixley, P.; Dench, N.; Wilson, D. Development of well testing methods at Wairakei
    1950–1980.

    In Proceedings of the 20th

    Geothermal Workshop, Auckland, New Zealand, 1998.

    40.

    Siitonen, H.J. Output tests of shallow Rotorua wells. In Proceedings of the 8th
    New Zealand Geothermal Workshop, Auckland,

    New Zealand, 5–7 November 1986; pp. 63–67.

    41.

    Sanchez-Velasco, R.A.; Canchola-Felix, I. Geothermal Steam Measurement with Oriﬁce
    Plates, According with the ISO 5167—The

    Cerro Prieto Case. 2018; ISSN: 0193-5933; ISBN 0-934412-90-1.

    42.

    López, J.; Martínez, A.; Pérez, A.; Medina, A. Geological Results, Drilling and
    Mass Flow of the Well AZ-89, the Geothermal Field

    of Los Azufres, Mich. Resultados Geológicos, de Perforación y Produción del Pozo
    AZ-89, del Campo Geotérmico de los Azufres,

    Mich. 2018. Available online: https://www.researchgate.net/publication/296708344_Geological_results_drilling_and_mass_

    ﬂow_of_the_well_AZ-89_the_geothermal_ﬁeld_of_Los_Azufres_Mich (accessed on 2 May
    2023).

    43.

    Lovelock, B. Steam ﬂow measurement in two-phase pipelines using volatile organic
    liquid tracers. In The 19th New Zealand

    Geothermal Workshop; University of Auckland: Auckland, New Zealand, 1997; pp.
    75–80.

    44.

    Armenta, M. Validation of Hiriart Equation to Compute Steam Production by the
    Lip Pressure Method; Technical Report; Geothermal

    Resources Council: Davis, CA, USA, 1997.

    45.

    Spencer, E. Progress on international standardization of oriﬁce plates for ﬂow
    measurement. Int. J. Heat Fluid Flow 1982, 3, 59–66.

    [CrossRef]

    46.

    O’Banion, T. Coriolis: The direct approach to mass ﬂow measurement. Chem. Eng.
    Prog. 2013, 109, 41–46.

    47.

    Sisler, J.R.; Zarrouk, S.J.; Urgel, A.; Lim, Y.W.; Adams, R.; Martin, S. Measurement
    of two phase ﬂows in geothermal pipelines

    using load-cells: Field trial results. In Proceedings of the 37th New Zealand
    Geothermal Workshop, Taupo, New Zealand, 18–20

    November 2015; Volume 18, p. 20.

    48.

    Leven, C.; Barrash, W. Fiber optic pressure measurements open up new experimental
    possibilities in hydrogeology. Groundwater

    2021, 60, 125–136. [CrossRef]

    49.

    Dresen, G.; Stanchits, S.; Rybacki, E. Borehole breakout evolution through acoustic
    emission location analysis. Int. J. Rock Mech.

    Min. Sci. 2010, 47, 426–435. [CrossRef]

    50.

    Simonetti, A. A measurement technique for the vibrating wire sensors. In Proceedings
    of the NORCHIP 2012, Copenhagen,

    Denmark, 12–13 November 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 1–6.

    51.

    Stevens, L. Pressure, temperature and ﬂow logging in geothermal wells. In Proceedings
    of the World Geothermal Congress,

    Kyushu-Tohoku, Japan, 28 May–10 June 2000; pp. 2435–2437.

    52.

    Doetsch, J.; Gischig, V.S.; Villiger, L.; Krietsch, H.; Nejati, M.; Amann, F.;
    Jalali, M.; Madonna, C.; Maurer, H.; Wiemer, S.; et al.

    Subsurface ﬂuid pressure and rock deformation monitoring using seismic velocity
    observations.

    Geophys. Res. Lett. 2018,

    45, 10–389. [CrossRef]

    Sensors 2023, 23, 5577

    24 of 26

    53.

    Becker, M.; Coleman, T.; Ciervo, C.; Cole, M.; Mondanos, M. Fluid pressure sensing
    with ﬁber-optic distributed acoustic sensing.

    Lead. Edge 2017, 36, 1018–1023. [CrossRef]

    54.

    Liu, H.; Gao, Z.; Shao, L.; Li, J. Design of monitoring system based on vibrating
    wire sensor. In Proceedings of the 2019 Chinese

    Control And Decision Conference (CCDC), Nanchang, China, 3–5 June 2019; IEEE:
    Piscataway, NJ, USA, 2019; pp. 2457–2461.

    55.

    Putra, A.D.; Toda, H.; Haﬁdz, A.; Matsuba, K.; Kimikado, Y.; Takahashi, Y.; Tsuzuki,
    S.; Kinoshita, N.; Yasuhara, H. Development

    of slope deformation monitoring system based on tilt sensors with low-power wide
    area network technology and its application.

    J. Civ. Struct. Health Monit. 2021, 11, 1037–1053. [CrossRef]

    56.

    Clarivate. Web of Science. Available online: https://www.webofscience.com (accessed
    on 14 July 2022).

    57.

    Papaioannou, P.; Tzanis, N.; Tranoris, C.; Denazis, S.; Birbas, A. A Prototype
    5G/IoT Implementation for Transforming a Legacy

    Facility to a Smart Factory. In Proceedings of the Artiﬁcial Intelligence Applications
    and Innovations. AIAI 2021 IFIP WG

    12.5 International Workshops: 5G-PINE 2021, AI-BIO 2021, DAAI 2021, DARE 2021,
    EEAI 2021, and MHDW 2021, Hersonissos,

    Crete, Greece, 25–27 June 2021.

    58.

    Lee, J.; Lee, J.; Jeong, J. Design and Implementation of Injection Data Preprocessing
    Monitoring System Based on Node-RED. In

    Proceedings of the International Symposium on Medical Information and Communication
    Technology, ISMICT, 2021, Xiamen,

    China, 14–16 April 2021; pp. 19–23.

    59.

    Ali, A. Framework for Air Pollution Monitoring in Smart Cities by Using IoT and
    Smart Sensors. ARPN J. Eng. Appl. Sci. 2022,

    17, 670–674. [CrossRef]

    60.

    Jabbar, W.A.; Annathurai, S.; Rahim, T.A.A.; Mohd Fauzi, M.F. Smart energy meter
    based on a long-range wide-area network for

    a stand-alone photovoltaic system. Expert Syst. Appl. 2022, 197, 116703. [CrossRef]

    61.

    Lin, J.Y.; Tsai, H.L.; Lu, G.H. Development of Wireless AC Power-Monitoring Module.
    In Proceedings of the 8th International

    Conference on Applied System Innovation, ICASI 2022, Nantou, Taiwan, 22–23 April
    2022; pp. 1–4.

    62.

    Civerchia, F.; Bocchino, S.; Salvadori, C.; Rossi, E.; Maggiani, L.; Petracca,
    M. Industrial Internet of Things monitoring solution for

    advanced predictive maintenance applications. J. Ind. Inf. Integr. 2017, 7, 4–12.
    [CrossRef]

    63.

    Shim, H.K.; Sun, S.; Kim, H.S.; Lee, D.G.; Lee, Y.J.; Jang, J.S.; Cho, K.H.; Baik,
    J.M.; Kang, C.Y.; Leng, Y.; et al. On a nonlinear

    broadband piezoelectric energy harvester with a coupled beam array. Appl. Energy
    2022, 328, 120129. [CrossRef]

    64.

    Elahi, H.; Munir, K.; Eugeni, M.; Atek, S.; Gaudenzi, P. Energy harvesting towards
    self-powered IoT devices. Energies 2020, 13, 5528.

    [CrossRef]

    65.

    Ryan, E.; Kosanovic, D.; McDaniel, B. Application of thermal energy storage with
    electriﬁed heating and cooling in a cold climate.

    Appl. Energy 2022, 328, 120147. [CrossRef]

    66.

    Yazawa, K.; Feng, Y.; Lu, N. Conformal heat energy harvester on Steam4 pipelines
    for powering IoT sensors. Energy Convers.

    Manag. 2021, 244, 114487 [CrossRef]

    67.

    Das, P.; Ghosh, S.; Chatterjee, S.; De, S. A Low Cost Outdoor Air Pollution Monitoring
    Device With Power Controlled Built-In PM

    Sensor. IEEE Sens. J. 2022, 22, 13682–13695. [CrossRef]

    68.

    Wang, P.; Gao, M.; Sun, Y.; Zhang, H.; Liao, Y.; Xie, S. A vibration-powered self-contained
    node by proﬁling mechanism and its

    application in cleaner agricultural production. J. Clean. Prod. 2022, 366, 132897.
    [CrossRef]

    69.

    Tran, L.G.; Cha, H.K.; Park, W.T. RF power harvesting: A review on designing methodologies
    and applications. Micro Nano Syst.

    Lett. 2017, 5, 14. [CrossRef]

    70.

    Twaha, S.; Zhu, J.; Yan, Y.; Li, B. A comprehensive review of thermoelectric technology:
    Materials, applications, modelling and

    performance improvement. Renew. Sustain. Energy Rev. 2016, 65, 698–726. [CrossRef]

    71.

    Roy, S.; Kabir, M.H.; Salauddin, M.; Halim, M.A. An Electromagnetic Wind Energy
    Harvester Based on Rotational Magnet

    Pole-Pairs for Autonomous IoT Applications. Energies 2022, 15, 5725. [CrossRef]

    72.

    Sandhu, M.M.; Khalifa, S.; Jurdak, R.; Portmann, M. Task Scheduling for Energy-Harvesting-Based
    IoT: A Survey and Critical

    Analysis. IEEE Internet Things J. 2021, 8, 13825–13848. [CrossRef]

    73.

    Paterova, T.; Prauzek, M.; Konecny, J.; Ozana, S.; Zmij, P.; Stankus, M.; Weise,
    D.; Pierer, A. Environment-monitoring IoT devices

    powered by a TEG which converts thermal ﬂux between air and near-surface soil
    into electrical energy. Sensors 2021, 21, 8098.

    [CrossRef]

    74.

    Shukla, S.; Jha, P.K.; Ray, K.C. An energy-efﬁcient single-cycle RV32I microprocessor
    for edge computing applications. Integration

    2023, 88, 233–240. [CrossRef]

    75.

    Pereira, F.; Correia, R.; Pinho, P.; Lopes, S.I.; Carvalho, N.B. Challenges in
    resource-constrained iot devices: Energy and

    communication as critical success factors for future iot deployment. Sensors 2020,
    20, 6420. [CrossRef]

    76.

    NXP Semiconductors Ofﬁcial Site | NXP Semiconductors. Available online: https://www.nxp.com/
    (accessed on 15 February

    2023).

    77.

    Smart|Connected|Secure|Microchip Technology. Available online: https://www.microchip.com/
    (accessed on 18 February

    2023).

    78.

    Lin, L.; Tang, Z.; Tan, N.; Xiao, X. Power management in low-power MCUs for energy
    IoT applications. J. Sens. 2020, 2020, 8819236.

    [CrossRef]

    79.

    Khalifeh, A.; Mazunga, F.; Nechibvute, A.; Nyambo, B.M. Microcontroller Unit-Based
    Wireless Sensor Network Nodes: A Review.

    Sensors 2022, 22, 8937. [CrossRef]

    Sensors 2023, 23, 5577

    25 of 26

    80.

    Lanza, M.; Sebastian, A.; Lu, W.D.; Le Gallo, M.; Chang, M.F.; Akinwande, D.;
    Puglisi, F.M.; Alshareef, H.N.; Liu, M.; Roldan,

    J.B. Memristive technologies for data storage, computation, encryption, and radio-frequency
    communication. Science 2022,

    376, eabj9979. [CrossRef]

    81.

    Ayoub, W.; Samhat, A.E.; Nouvel, F.; Mroue, M.; Prévotet, J.C. Internet of Mobile
    Things: Overview of LoRaWAN, DASH7, and

    NB-IoT in LPWANs Standards and Supported Mobility. IEEE Commun. Surv. Tutor. 2019,
    21, 1561–1581. [CrossRef]

    82.

    Raza, U.; Kulkarni, P.; Sooriyabandara, M. Low Power Wide Area Networks: An Overview.
    IEEE Commun. Surv. Tutor. 2017,

    19, 855–873. [CrossRef]

    83.

    Alghamdi, A.M.; Khairullah, E.F.; Al Mojamed, M.M. LoRaWAN Performance Analysis
    for a Water Monitoring and Leakage

    Detection System in a Housing Complex. Sensors 2022, 22, 7188. [CrossRef]

    84.

    Haxhibeqiri, J.; De Poorter, E.; Moerman, I.; Hoebeke, J. A survey of LoRaWAN
    for IoT: From technology to application. Sensors

    2018, 18, 3995. [CrossRef]

    85.

    Mekki, K.; Bajic, E.; Chaxel, F.; Meyer, F. A comparative study of LPWAN technologies
    for large-scale IoT deployment. ICT

    Express 2019, 5, 1–7. [CrossRef]

    86.

    Sousa, D.; Hernandez, D.; Oliveira, F.; Luís, M.; Sargento, S. A platform of unmanned
    surface vehicle swarms for real time

    monitoring in aquaculture environments. Sensors 2019, 19, 4695. [CrossRef]

    87.

    Lykov, Y.; Paniotova, A.; Shatalova, V.; Lykova, A. Energy Efﬁciency Comparison
    LPWANs: LoRaWan vs Sigfox. In Proceedings

    of the 2020 IEEE International Conference on Problems of Infocommunications. Science
    and Technology (PIC S&T), Kharkiv,

    Ukraine, 6–9 October 2020; IEEE: Piscataway, NJ, USA, 2020; pp. 485–490.

    88.

    Gomez, C.; Veras, J.C.; Vidal, R.; Casals, L.; Paradells, J. A sigfox energy consumption
    model. Sensors 2019, 19, 681. [CrossRef]

    89.

    Aernouts, M.; Berkvens, R.; Van Vlaenderen, K.; Weyn, M. Sigfox and LoRaWAN datasets
    for ﬁngerprint localization in large

    urban and rural areas. Data 2018, 3, 13. [CrossRef]

    90.

    Popli, S.; Jha, R.K.; Jain, S. A Survey on Energy Efﬁcient Narrowband Internet
    of Things (NBIoT): Architecture, Application and

    Challenges. IEEE Access 2019, 7, 16739–16776. [CrossRef]

    91.

    Sun, R.; Chang, W.; Talarico, S.; Niu, H.; Yang, H. Design and performance of
    unlicensed NB-IoT. In Proceedings of the

    International Symposium on Wireless Communication Systems, Oulu, Finland, 27–30
    August 2019; pp. 469–473.

    92.

    Alobaidy, H.A.H.; Singh, M.J.; Nordin, R.; Abdullah, N.F.; Gze Wei, C.; Siang
    Soon, M.L. Real-World Evaluation of Power

    Consumption and Performance of NB-IoT in Malaysia. IEEE Internet Things J. 2022,
    9, 11614–11632. [CrossRef]

    93.

    Jewel, M.K.H.; Zakariyya, R.S.; Lin, F. On channel estimation in LTE–based downlink
    narrowband internet of things systems.

    Electronics 2021, 10, 1246. [CrossRef]

    94.

    Olejniczak, A.; Błaszkiewicz, O.; Cwalina, K.K.; Rajchowski, P.; Sadowski, J.
    Software-deﬁned NB-IoT uplink framework—The

    design, implementation and use cases. Sensors 2021, 21, 8234. [CrossRef] [PubMed]

    95.

    Lalle, Y.; Fourati, L.C.; Fourati, M.; Barraca, J.P. A Comparative Study of LoRaWAN,
    SigFox, and NB-IoT for Smart Water Grid. In

    Proceedings of the 2019 Global Information Infrastructure and Networking Symposium,
    GIIS 2019, Paris, France, 18–20 December

    2019.

    96.

    Almuhaya, M.A.M.; Jabbar, W.A.; Sulaiman, N.; Abdulmalek, S. A Survey on LoRaWAN
    Technology: Recent Trends, Opportuni-

    ties, Simulation Tools and Future Directions. Electronics 2022, 11, 164. [CrossRef]

    97.

    Durand, T.; Visagie, L.; Booysen, M.T. Evaluation of next-generation low-power
    communication technology to replace GSM in

    IoT-applications. IET Commun. 2019, 13, 2533–2540. [CrossRef]

    98.

    Manvi, S.S.; Shyam, G.K. Resource management for Infrastructure as a Service (IaaS)
    in cloud computing: A survey. J. Netw.

    Comput. Appl. 2014, 41, 424–440. [CrossRef]

    99.

    Papacharalambous, B. Cloud services vs. On–premise solutions cost comparison calculator.
    In Proceedings of the Business

    Information Systems Workshops: BIS 2014 International Workshops, Larnaca, Cyprus,
    22–23 May 2014; Springer: Cham,

    Switzerland, 2014; Volume 183, pp. 318–325.

    100. Parast, F.K.; Sindhav, C.; Nikam, S.; Yekta, H.I.; Kent, K.B.; Hakak, S.
    Cloud computing security: A survey of service–based

    models. Comput. Secur. 2022, 114, 102580. [CrossRef]

    101. Pierleoni, P.; Concetti, R.; Belli, A.; Palma, L. Amazon, Google and Microsoft
    Solutions for IoT: Architectures and a Performance

    Comparison. IEEE Access 2019, 8, 5455–5470. [CrossRef]

    102. Muhammed, A.S.; Ucuz, D. Comparison of the IoT Platform Vendors, Microsoft
    Azure, AmazonWeb Services, and Google Cloud,

    from Users’ Perspectives. In Proceedings of the 8th International Symposium on
    Digital Forensics and Security, Beirut, Lebanon,

    1–2 June 2020.

    103. Grados, B.; Bedon, H. Software Components of an IoT Monitoring Platform in
    Google Cloud Platform: A Descriptive Research

    and an Architectural Proposal. In Applied Technologies. ICAT 2019. Communications
    in Computer and Information Science; Botto-Tobar,

    M., Zambrano Vizuete, M., Torres-Carrión, P., Montes León, S., Pizarro Vásquez,
    G., Durakovic, B., Eds.; Springer: Berlin,

    Germany, 2020; Volume 1193, pp. 153–167.

    104. Kaya, M.C.; Nikoo, M.S.; Schwartz, M.L.; Oguztuzun, H. Internet of measurement
    things architecture: Proof of concept with

    scope of accreditation. Sensors 2020, 20, 503. [CrossRef]

    105. Kim, C.W.; Qi, J.; Kawabe, D. Development of vibration-based early scour
    warning system for railway bridge piers.

    In

    Current Perspectives and New Directions in Mechanics, Modelling and Design of
    Structural Systems ; CRC Press: London, UK, 2022;

    pp. 1735–1740.

    Sensors 2023, 23, 5577

    26 of 26

    106. Dai, H.; Shi, P.; Liu, H.; Chen, R.; Chen, Z. Electrical ﬁre monitoring IoT
    framework for ancient architectural complex leveraging

    edge computing. Int. J. Commun. Syst. 2022, 35, e5329. [CrossRef]

    107. Bassetti, E.; Panizzi, E. Earthquake Detection at the Edge: IoT Crowdsensing
    Network. Information 2022, 13, 195. [CrossRef]

    108. Rivet, F.; Foucaud, L.; Ferre, G. Edge Computing Technique for a 87% Energy
    Saving for IoT Device Dedicated to Environmental

    Monitoring. In Proceedings of the 2021 IEEE 12th Latin American Symposium on Circuits
    and Systems, LASCAS 2021, Arequipa,

    Peru, 22–25 February 2021.

    109. Debski, R.; Drezewski, R. Real-time surrogate-assisted preprocessing of streaming
    sensor data. Comput. Netw. 2022, 219, 109422.

    [CrossRef]

    110. Murshed, M.S.; Murphy, C.; Hou, D.; Khan, N.; Ananthanarayanan, G.; Hussain,
    F. Machine Learning at the Network Edge: A

    Survey. ACM Comput. Surv. 2022, 54, 1–37. [CrossRef]

    111. Nourildean, S.W.; Hassib, M.D.; Mohammed, Y.A. Internet of things based wireless
    sensor network: a review. J. Electr. Eng.

    Comput. Sci. 2022, 27, 246–261. [CrossRef]

    112. Tran-Dang, H.; Krommenacker, N.; Charpentier, P.; Kim, D.S. The Internet
    of Things for logistics: Perspectives, application review,

    and challenges. IETE Tech. Rev. 2022, 39, 93–121. [CrossRef]

    113. Li, W.; Awais, M.; Ru, W.; Shi, W.; Ajmal, M.; Uddin, S.; Liu, C. Review
    of sensor network-based irrigation systems using IoT and

    remote sensing. Adv. Meteorol. 2020, 2020, 8396164. [CrossRef]

    114. Widianto, M.H.; Ranny, R. Message querying telemetry transfer on IoT applications
    to enhance technology: A systematic review.

    Int. J. Reconﬁg. Embed. Syst. 2022, 11, 265. [CrossRef]

    115. Ullo, S.L.; Sinha, G.R. Advances in smart environment monitoring systems
    using IoT and sensors.

    Sensors 2020, 20, 3113.

    [CrossRef]

    116. Yu, M. Network telemetry: Towards a top-down approach. ACM SIGCOMM Comput.
    Commun. Rev. 2019, 49, 11–17. [CrossRef]

    117. Zhang, W.; Yue, M. The application of building energy management system based
    on IoT technology in smart city. Int. J. Syst.

    Assur. Eng. Manag. 2021, 12, 617–628. [CrossRef]

    118. Okafor, N.U.; Alghorani, Y.; Delaney, D.T. Improving data quality of low-cost
    IoT sensors in environmental monitoring networks

    using data fusion and machine learning approach. ICT Express 2020, 6, 220–228.
    [CrossRef]

    119. Greco, A.; Gundabattini, E.; Solomon, D.G.; Singh Rassiah, R.; Masselli,
    C. A Review on Geothermal Renewable Energy Systems

    for Eco-Friendly Air-Conditioning. Energies 2022, 15, 5519. [CrossRef]

    120. Li, B.Q.; Zheng, S.Y. Application research of intelligent monitoring system
    of longsheng hot spring water temperature based on

    Internet of Things. Therm. Sci. 2019, 23, 2613–2622. [CrossRef]

    121. Chang, V.; Martin, C. An industrial IoT sensor system for high-temperature
    measurement. Comput. Electr. Eng. 2021, 95, 107439.

    [CrossRef]

    122. Onumanyi, A.J.; Abu-Mahfouz, A.M.; Hancke, G.P. Low power wide area network,
    cognitive radio and the Internet of Things:

    Potentials for integration. Sensors 2020, 20, 6837. [CrossRef]

    123. Liu, Y.; Dhakal, S. Internet of Things technology in mineral remote sensing
    monitoring. Int. J. Circuit Theory Appl. 2020, 48,

    2065–2077. [CrossRef]

    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all
    publications are solely those of the individual

    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to

    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.

    '
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations:
  - IoT devices have the potential to revolutionize geothermal monitoring, but they
    also pose several challenges that need to be addressed to ensure reliable operation
    and minimize the generation of erroneous data.
  - The advance of IoT technology has brought about a push for standardization in
    various aspects of its implementation.
  - In contrast, telemetry systems often lack standardization and are often proprietary,
    leading to increased expenses and longer development cycles.
  pdf_link: https://www.mdpi.com/1424-8220/23/12/5577/pdf?version=1686794210
  publication_year: 2023
  relevance_evaluation:
    highly_relevant: -0.1998841441383732
    overall_fit: 0.9492406854401785
    relevant: 0.10003705001333064
    score: 0.849336574553532
    very_relevant: 0.7494207206918052
  relevance_score: 0.849336574553532
  relevance_score1: 0
  relevance_score2: 0
  title: 'IoT Sensor Challenges for Geothermal Energy Installations Monitoring: A
    Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/app13010404
  analysis: '>'
  authors:
  - Sabina Szymoniak
  - Shalini Kesar
  citation_count: 8
  explanation: 'The provided context examines different key agreement and authentication
    protocols for real-time IoT management systems and particularly focuses on data
    collection, transmission, and processing. It discusses various protocol options,
    such as MQTT, CoAP, Bluetooth Low Energy, and 6LoWPAN, and highlights the advantages
    and disadvantages of each. Additionally, the context explores security aspects
    of these protocols, including encryption algorithms and authentication mechanisms,
    emphasizing the importance of protecting data integrity, confidentiality, and
    availability.


    In the section titled "DATA COLLECTION TO CLOUD: AUTOMATION AND REAL-TIME PROCESSING,"
    the context delves into protocols used for data collection and transmission in
    IoT systems. It introduces MQTT as a lightweight messaging protocol designed for
    IoT applications and explains how it enables efficient communication between devices
    and cloud platforms. The context also mentions CoAP, a specialized protocol for
    constrained environments, and Bluetooth Low Energy, which is commonly used for
    short-range communication. Furthermore, it describes 6LoWPAN, a protocol designed
    for low-power wireless personal area networks, and discusses its role in IoT networks.


    The context proceeds to examine the security aspects of these protocols. It emphasizes
    the need for strong encryption algorithms to protect data confidentiality and
    prevent unauthorized access. The context highlights the importance of authentication
    mechanisms to verify the identity of devices and users and ensure that only authorized
    parties can access the network and data. It also discusses key management techniques,
    such as symmetric and asymmetric encryption, and their applications in IoT systems.


    To conclude, the context provides a comprehensive overview of key agreement and
    authentication protocols for real-time IoT management systems, covering both technical
    aspects and security considerations. It highlights the importance of selecting
    the appropriate protocol based on the specific requirements of the IoT system
    and emphasizes the need for robust security measures to protect data and ensure
    the integrity and reliability of IoT networks.'
  extract_1: 'The Internet of things (IoT) is a technology that has made the IoT applicable
    in many areas of life and has contributed to the improvement of IoT devices that
    are equipped with various sensors that enable them to perform the tasks they were
    designed for. Sensors process signals from their work environment and then react
    to them appropriately.


    For example, if the room temperature is too high, the heating devices will be
    switched off to lower the temperature. IoT devices can also communicate with each
    other to convey relevant information [13–15]. Usually, the connected sensors form
    wireless sensor networks (WSNs), within which various operations and data exchanges
    are performed.


    Both networks, IoT and WSN, primarily use the standards IEEE 802.15.4 [16], NFC
    [17], 6LoWPAN [18], MQTT [19], and Bluetooth Low Energy [20] for communication.


    Communication between IoT devices requires the use of various protocols that will
    define the purpose of the communication, the sequence of steps performed during
    it, and cryptographic techniques used to secure the transmitted information. The
    protocol''s purpose may be to support communication between devices, but the protocol
    may also target aspects of communication security. Here, the protocol''s goals
    can be the mutual authentication of the parties as well as the agreement of the
    session key.


    Usually, these protocols are described as security protocols. Securing communication
    is a necessary activity due to the possibility of various cyberattacks. Attacking
    users can try to intercept and modify transmitted messages, as well as steal confidential
    information [21–26]. In addition, the implementation of protocols in networks
    of interconnected IoT devices must take into account technical aspects such as
    the purpose of the network, the energy demand of the devices, and the type of
    communication that will be carried out in it [27].'
  extract_2: 'MQTT, CoAP, Bluetooth Low Energy, 6LoWPAN.


    Communication between IoT devices requires the use of various protocols that will
    define the purpose of the communication, the sequence of steps performed during
    it, and cryptographic techniques used to secure the transmitted information. The
    protocol''s purpose may be to support communication between devices, but the protocol
    may also target aspects of communication security. Here, the protocol''s goals
    can be the mutual authentication of the parties as well as the agreement of the
    session key.


    Usually, these protocols are described as security protocols. Securing communication
    is a necessary activity due to the possibility of various cyberattacks. Attacking
    users can try to intercept and modify transmitted messages, as well as steal confidential
    information [21–26]. In addition, the implementation of protocols in networks
    of interconnected IoT devices must take into account technical aspects such as
    the purpose of the network, the energy demand of the devices, and the type of
    communication that will be carried out in it [27].'
  full_citation: '>'
  full_text: ">\nCitation: Szymoniak, S.; Kesar, S. Key\nAgreement and Authentication\n\
    Protocols in the Internet of Things:\nA Survey. Appl. Sci. 2023, 13, 404.\nhttps://doi.org/10.3390/\n\
    app13010404\nAcademic Editors: Weidong Fang\nand Chunsheng Zhu\nReceived: 29 November\
    \ 2022\nRevised: 20 December 2022\nAccepted: 25 December 2022\nPublished: 28 December\
    \ 2022\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\napplied  \nsciences\nReview\nKey Agreement and Authentication Protocols\
    \ in the Internet of\nThings: A Survey\nSabina Szymoniak 1,*\nand Shalini Kesar\
    \ 2\n1\nDepartment of Computer Science, Cz˛estochowa University of Technology,\
    \ 42-200 Cz˛estochowa, Poland\n2\nDepartment of Computer Science & Information\
    \ Systems, Southern Utah University,\nCedar City, UT 84720, USA\n*\nCorrespondence:\
    \ sabina.szymoniak@icis.pcz.pl\nAbstract: The rapid development of Internet of\
    \ things (IoT) technology has made the IoT applicable\nin many areas of life and\
    \ has contributed to the IoT’s improvement. IoT devices are equipped with\nvarious\
    \ sensors that enable them to perform the tasks they were designed for. The use\
    \ of such\ndevices is associated with securing communication between devices and\
    \ users. The key stages of\ncommunication are the processes of authentication\
    \ and the process of agreeing on session keys\nbecause they are the basis of the\
    \ subsequent communication phases. The specially designed security\nprotocols\
    \ are used to secure communication. These protocols deﬁne the course of communication\n\
    and cryptographic techniques employed for securing. In this article, we have reviewed\
    \ the latest\ncommunication protocols designed to secure authentication processes\
    \ and agree on session keys in IoT\nenvironments. We analyzed the proposed protocols’\
    \ security level, vulnerability, and computational\nand communication costs. We\
    \ showed our observations, describing the requirements that a secure\nprotocol\
    \ should meet.\nKeywords: Internet of things; security; security protocols\n1.\
    \ Introduction\nThe rapid development of Internet of Things (IoT) technology has\
    \ made the IoT\napplicable in many areas of life and contributed to its improvement\
    \ [1]. We can ﬁnd IoT\ndevices in everyday life because we use intelligent washing\
    \ machines, TV sets, and light\nbulbs. In combination with appropriate sensors,\
    \ these devices intelligently control the\nlighting or water heating in a building.\
    \ They can also protect our security with tracking\ndevices [2–5]. In medical\
    \ IoT, devices help to control the vital functions of chronically\nill people,\
    \ test blood glucose levels in people with diabetes, signal the patient’s need\
    \ for\nmedications, and deliver them to the patient on time [6–8]. One of the\
    \ typical applications\nof IoT in the industry to alert people about the possibility\
    \ of an earthquake [9]. Athletes\ncan also use IoT to control vital functions\
    \ and performance to prevent life-threatening\nsituations [10–12].\nIoT devices\
    \ are equipped with various sensors (for example, temperature, pressure,\nand\
    \ velocity sensors) that enable them to perform the tasks for which they were\
    \ designed.\nSensors process signals from their work environment and then react\
    \ to them appropriately.\nFor example, if the room temperature is too high, the\
    \ heating devices will be switched\noff to lower the temperature. IoT devices\
    \ can also communicate with each other to con-\nvey relevant information [13–15].\
    \ Usually, the connected sensors form wireless sensor\nnetworks (WSNs), within\
    \ which various operations and data exchanges are performed.\nBoth networks, IoT\
    \ and WSN, primarily use the standards IEEE 802.15.4 [16], NFC [17],\n6LoWPAN\
    \ [18], MQTT [19], and Bluetooth Low Energy [20] for communication.\nCommunication\
    \ between IoT devices requires the use of various protocols that will\ndeﬁne the\
    \ purpose of the communication, the sequence of steps performed during it,\nAppl.\
    \ Sci. 2023, 13, 404. https://doi.org/10.3390/app13010404\nhttps://www.mdpi.com/journal/applsci\n\
    Appl. Sci. 2023, 13, 404\n2 of 23\nand cryptographic techniques used to secure\
    \ the transmitted information. The protocol’s\npurpose may be to support communication\
    \ between devices, but the protocol may also\ntarget aspects of communication\
    \ security. Here, the protocol’s goals can be the mutual\nauthentication of the\
    \ parties as well as the agreement of the session key. Usually, these\nprotocols\
    \ are described as security protocols. Securing communication is a necessary activ-\n\
    ity due to the possibility of various cyberattacks. Attacking users can try to\
    \ intercept and\nmodify transmitted messages, as well as steal conﬁdential information\
    \ [21–26]. In addition,\nthe implementation of protocols in networks of interconnected\
    \ IoT devices must take into\naccount technical aspects such as the purpose of\
    \ the network, the energy demand of the\ndevices and the type of communication\
    \ that will be carried out in it [27].\nIn the case of security protocols, it\
    \ is essential to verify their correct operation, check\nwhether they provide\
    \ an appropriate level of security and whether they are not vulnerable\nto the\
    \ latest methods of attacks. When verifying security protocols, we can use methods\n\
    such as time automatics [28,29], BAN logic [30], GNY logic [31], real-or-random\
    \ (ROR) [32],\nrandom Oracle model (ROM) [33], or Syverson-Van Oorschot (SVO)\
    \ logic [34]. In addi-\ntion, protocol veriﬁcation is possible with such tools\
    \ as Scyther [35,36], Tamarin [37,38],\nProVerif [39–41], Avispa [42], or the\
    \ tools mentioned in [22,43], or [44].\n1.1. Motivations and Contributions\nTechnology\
    \ surrounds us from almost every side. We use various intelligent devices\nthat,\
    \ above all, make our lives easier but also transfer large amounts of data. Often,\
    \ the sent\nmessages contain sensitive data related to users’ devices. Thus, the\
    \ need to secure data\nis an essential aspect of the operation of intelligent\
    \ systems. Users require that the use of\ntechnological facilities is safe for\
    \ them, both in protecting human health and life, as well as\nin data processing.\n\
    As a rule, the communication process consists of several stages. Specially designed\n\
    protocols are used to secure each of these steps. These, in turn, are exposed\
    \ to malicious\nusers who look for security vulnerabilities to intercept and then\
    \ use the data. The user\nauthentication and key agreement stages deserve special\
    \ attention here, as the security\nof subsequent communication phases depends\
    \ on their safe course. We are aware that\ntechnological progress also entails\
    \ the development of attack techniques. Therefore it is\nnecessary to regularly\
    \ review the level of security implemented by the protocols securing\nindividual\
    \ stages of communication. Properly selected and safe protocols will certainly\n\
    increase IoT devices’ security level. So, in this arithmetic, we provide an overview\
    \ of how\nto secure the authentication processes and the reconciliation and agreement\
    \ of keys using\nsecurity protocols in WSNs.\nWe believe that studying the work\
    \ of protocols that secure the authentication process\nand session key agreement\
    \ in IoT can help readers understand the state of art in both\ntheory and practice.\
    \ We will explain what security problems and threats are exposed to\nIoT devices\
    \ operating in such networks. In addition, we will discuss the security levels\n\
    offered by the protocols used in IoT or WSNs. We will also highlight the challenges\
    \ and\nrequirements for the newly designed protocols.\n1.2. Methodology\nWe collected\
    \ articles that use various search engines (mainly Google Scholar and\nDBLP) during\
    \ our research. Moreover, we analyzed references from found articles and\ncitations\
    \ to these papers. Our goal was to compose the most complete and up-to-date\n\
    review of the security of authentication and session key agreement protocols operating\
    \ in\nIoT systems.\n1.3. Organization\nThe rest of this paper is organized as\
    \ follows. Section 2 presents the characteristics of\nthe IoT and WSNs. Next,\
    \ we will discuss cryptographic techniques used in cryptographic\nprotocols, the\
    \ security requirements, and problems. Moreover, we will discuss typical\nAppl.\
    \ Sci. 2023, 13, 404\n3 of 23\ncyberattacks in IoT systems. In Section 3, we provide\
    \ an overview of the protocols used\nin IoT systems for the authentication process\
    \ and session key agreement and distribution.\nIn Section 4, we will summarize\
    \ and conclude our analysis of the discussed protocols. We\nwill focus on the\
    \ security and technical aspects of these protocols. In addition, we will\ninclude\
    \ our insights and research directions for the future. In the last section, we\
    \ will\npresent the conclusions of the entire article, ﬁndings from the research,\
    \ and our plans for\nthe future.\n2. Materials and Methods\nIn this section, we\
    \ will present theoretical aspects of the operation of the IoT and\nWSNs. We will\
    \ discuss the types and classes of threats that await connected devices and\n\
    their users. In addition, we will highlight the importance of using protocols\
    \ that secure the\nauthentication process and key agreement in IoT systems and\
    \ WSNs.\n2.1. Internet of Things and Wireless Sensor Networks\nThe Internet of\
    \ things is a technology in which connected smart objects can directly\nor indirectly\
    \ collect, process or exchange data via a computer network. Devices can com-\n\
    municate automatically and without human intervention by using the available network\n\
    connections. The IoT concept is used in many aspects of human life (industry,\
    \ city man-\nagement, medicine, household, mobility). Depending on the application,\
    \ the IoT can be\ndivided into subcategories, such as the industrial IoT or medical\
    \ IoT. Among IoT devices,\nwe can indicate sports bands that can measure one’s\
    \ heart rate on an ongoing basis, count\nsteps taken, or monitor sleep. Other\
    \ intelligent devices are voice assistants, thanks to which,\nby using voice commands,\
    \ we can receive the necessary information and control other de-\nvices connected\
    \ to the network, such as smart bulbs, refrigerators, TVs, or ovens [2,3,45–48].\n\
    We put together IoT solutions and typical cyberattacks on IoT systems in Figure\
    \ 1.\nFigure 1. IoT solutions and typical cyberattacks on IoT systems.\nIoT devices\
    \ are often equipped with various types of sensors that detect and react\nto characteristic\
    \ properties of the environment, such as speed, temperature, and altitude.\nSensors\
    \ can also collect and exchange data with other sensors, devices, end users, servers,\n\
    or clouds. Hence, IoT networks often implement wireless sensor network (WSN) technology\n\
    to collect and transmit data. WSNs are characterized by mobility, reliability,\
    \ node hetero-\ngeneity, real-time data transmission, and reaction to sensor failures.\
    \ WSN networks are also\nused to monitor a speciﬁc environment and react to changes\
    \ occurring in it [45,46,49–51].\n2.2. Cryptographic Methods\nCryptography is\
    \ the science of creating the algorithms and protocols necessary to\nprotect information.\
    \ Information protection is related to such concepts as data encryption,\nelectronic\
    \ communication privacy protection, authentication, or key agreement [52–55].\n\
    The most characteristic process related to cryptography is the encryption process.\
    \ It consists\nAppl. Sci. 2023, 13, 404\n4 of 23\nof transforming information\
    \ from plaintext into a form that will be incomprehensible\nto outsiders.\nEncryption\
    \ is the process of transforming (encrypting) information (plaintext) into a\n\
    form that is incomprehensible to outsiders. An encrypted message is called a ciphertext.\n\
    The reverse of encryption is the decryption process, which recovers the original\
    \ message,\nor plaintext, from the ciphertext. The security of cryptographic algorithms\
    \ is often achieved\nby using an additional secret parameter known as a cryptographic\
    \ key. Their use ensures\nthat even if the intruder knows the algorithm used to\
    \ encrypt the message, he will not be\nable to decrypt it unless he has the key.\
    \ Thus, the ciphertext is safe as long as the secret key\nused in communication\
    \ is [52–54,56,57].\nKey encryption algorithms can be divided into symmetric and\
    \ asymmetric [16]. In sym-\nmetric algorithms, also called secret-key algorithms,\
    \ it is possible to obtain a decryption key\nfrom an encryption key. There are\
    \ also situations in which the keys are identical. In the case\nof symmetric algorithms,\
    \ a secret key must be agreed upon between the communicating\nparties before commencing\
    \ communication using a secure method. This is related to the\nproblem of key\
    \ agreement. To have a safe, symmetrically encrypted feed, we need a secure\n\
    communication channel to forward the key [54,58,59].\nOn the other hand, asymmetric\
    \ algorithms use key pairs assigned to users. Such a\npair are the public and\
    \ private keys. Difﬁe and Hellman presented the concept of a public\nkey in [60].\
    \ The public key is known to all users, and anyone possessing it can encrypt\n\
    their messages. However, the ciphertexts obtained this way can only be deciphered\
    \ with\nthe corresponding private key. The user must be sure that his public key\
    \ corresponds to\nhis private key. Thus, the public key encrypts, and the private\
    \ key decodes the message.\nHowever, there is a situation in which the roles of\
    \ the keys are reversed. If the message is\nencrypted with the private key, the\
    \ resulting ciphertext becomes the so-called electronic\nsignature, i.e., protection\
    \ against unauthorized modiﬁcation. Decryption is then possible\nby using the\
    \ public key [54,58,59].\nWhen the data to be signed is large, it takes a long\
    \ time to sign. Hash functions or\nhashes are used in these situations, and their\
    \ operation is based on appropriately processing\nextensive data to a smaller\
    \ size. Hash functions are primarily used to check and conﬁrm the\nauthenticity\
    \ of data, ensuring that the data has not been tampered with in an unauthorized\n\
    manner. The mentioned functions are unidirectional, so it is impossible to reconstruct\n\
    the data based on the hash itself. This means that the whole message that has\
    \ been\nsigned [61,62] must be sent with the electronic signature.\n2.3. Cyberattacks\
    \ on IoT Systems\nCommunication in IoT environments is exposed to various attacks.\
    \ The attacks’ results\nalso can be multiple, and everything depends on the attacker’s\
    \ knowledge, intentions, and\nimagination. For example, the attacks’ effects may\
    \ be data loss, interception, or modiﬁcation.\nWe can indicate many kinds of attacks\
    \ in IoT. We summarised common attacks in IoT in\nTable 1.\nAppl. Sci. 2023, 13,\
    \ 404\n5 of 23\nTable 1. Typical attacks in IoT.\nAttack\nDescription\nReferences\n\
    Replay attack\nThe attacker intercepts trafﬁc and sends correspondence to its\
    \ original target,\nduplicate packets can be sent many times to the recipients.\n\
    [63,64]\nSpooﬁng attack\nThe attacker tries to hide the communication or identity\
    \ so that it appears to be\nassociated with a trusted, authorized source.\n[65]\n\
    Stolen (smart card, veriﬁer)\nattack\nThe attacker can guess or steals the password;\
    \ for example, when the smart card is\nlost, also he can use the stolen veriﬁer\
    \ directly to impersonate the authorized\nparticipant of the communication.\n\
    [66]\nMan in the Middle attack\n(MITM)\nThe attacker disrupts communication between\
    \ two nodes by injecting a malicious\nnode between legitimate nodes.\n[64,67]\n\
    Impersonation attack\nThe attacker uses the identity of another user (user, server,\
    \ gateway, node, IoT\ndevice).\n[68–70]\n(Privileged)-insider attack.\nThe attacker,\
    \ or insider, is authorized to access the system, then the insider can use\nhis\
    \ access to the data breach.\n[64]\nKnown session-speciﬁc\ntemporary information\n\
    (KSSTI) attack\nThe attacker can calculate the session key based on temporary\
    \ information.\n[71]\n(Ofﬂine password) guessing\nattack\nThe attacker tries iteratively\
    \ to guess a password or other login details to\nimpersonate the user.\n[72]\n\
    Denial of Service (DoS)\nattack\nThe attacker ﬂoods the network with signals,\
    \ which results in network closure.\n[64,67,73]\nSinkhole attack\nThe attacker\
    \ announces updates of routing information, thus attracting network\ntrafﬁc, and\
    \ as a consequence, it may launch further attacks.\n[64,67]\nDesynchronisation\
    \ attack\nThe attacker tries to destroy synchronization between the nodes.\n[74]\n\
    (Sensor node, IoT device)\ncapture attack, cloning attack\nThe attacker hijacks\
    \ a sensor node or IoT device to take over the network, remove\nthe node from\
    \ the network, and redeploys it as a malicious node.\n[64,75,76]\nkey compromise\n\
    impersonation (KCI) attack\nThe attacker installs the client’s certiﬁcate on the\
    \ device and can then impersonate it.\n[77]\nAn essential aspect of security that\
    \ must be considered in IoT systems is the imple-\nmentation of the CIA triad\
    \ (conﬁdentiality, integrity, availability). This is a model aimed\nat the steering\
    \ of security policy. Conﬁdentiality protects us from unauthorized attempts\n\
    to access conﬁdential information. Integrity ensures data consistency, accuracy,\
    \ and relia-\nbility. Availability ensures that access to data will be easy for\
    \ authorized parties [78]. The\nsecurity protocols are one of the methods that\
    \ implement mentioned rules. The protocols\nare short programs that describe the\
    \ communications course and rules. They can secure\ncommunication and ensure security\
    \ aspects like mutual authentication, user anonymity,\nperfect forward or backward\
    \ secrecy, or untraceability [26,79].\nThe security protocols play a signiﬁcant\
    \ security function during the users’ com-\nmunication. They deﬁne a sequence\
    \ of steps during which users execute activities like\nauthentication, authorization,\
    \ key agreement, and exchange. We can highlight that secu-\nrity protocols ensure\
    \ secure authentication and authorization processes so that they can\nprevent\
    \ unauthorized access by dishonest users. Moreover, they support key agreement\n\
    and exchange processes, so the users should be sure that a secure channel provides\
    \ their\ncommunication. Unfortunately, many protocols can be broken because they\
    \ do not provide\nadequate security. Users’ information can be stolen and used\
    \ by attackers. The following\nsection will overview existing security protocols\
    \ for the IoT or WSNs. We will focus on\nprotocols for authentication and agreement\
    \ of the session key. In addition, we will discuss\nthe security levels offered\
    \ by these protocols.\nAppl. Sci. 2023, 13, 404\n6 of 23\n3. Security Protocols\
    \ for the Internet of Things\nCommunication in various IoT environments usually\
    \ consists of several stages using\nspecially designed security protocols. The\
    \ stages of authentication and agreement of the\nsession key are the most characteristic\
    \ stages of communication. During authentication,\nthe user or device conﬁrms\
    \ their identity. As a result of correct authentication, the user or\ndevice acquires\
    \ certain rights and privileges depending on the system. Various mechanisms\n\
    are used in authentication protocols to ensure an appropriate level of security\
    \ (for example,\nusing methods described in Section 2.2). An essential element\
    \ of authentication protocols\nis the number of factors used in the authentication\
    \ process. It is worth indicating three\ngroups of factors that are used during\
    \ the authentication process:\n•\nKnowledge factor relates to something the user\
    \ knows, e.g., username and password;\n•\nOwnership factor refers to something\
    \ the user has, e.g., a smart card or security\ntoken; and\n•\nInheritance factor\
    \ refers to the user’s biometric characteristics, i.e., something the user\ncan\
    \ be identiﬁed by, such as a ﬁngerprint or an iris pattern.\nAn equally important\
    \ stage of communication is distributing the session key. The keys\nare used to\
    \ encrypt and decrypt messages. There are many different approaches to the\nproblem\
    \ of session key agreement. We can deﬁne a separate protocol for these purposes\
    \ and\nextract a fragment of the authentication protocol that will be responsible\
    \ for the agreement\nof the session key (e.g., [80]).\nAs mentioned earlier, the\
    \ most desirable features of security protocols are connected\nwith the implementation\
    \ of the CIA triad (conﬁdentiality, integrity, availability). Data\nconﬁdentiality\
    \ is critical in IoT environments. Any situation that threatens the security of\n\
    such environments can contribute to the threat to users’ privacy and their data.\
    \ Data can be\nstolen and misused. Data conﬁdentiality is essential in any situation,\
    \ but it becomes crucial\nwhen communication concerns patients’ health data. An\
    \ excellent solution to secure data\nand thus ensure data conﬁdentiality is the\
    \ use of elliptic curve algorithms, which use the\nmathematics of elliptic curves.\
    \ Usually, these algorithms are considered in the case of the\nRivest–Shamir–Adleman\
    \ algorithm as an alternative cryptographic method. Elliptic curve\nalgorithms\
    \ use a smaller key size than the Rivest–Shamir–Adleman algorithm.\nThe second\
    \ security feature is data integrity, ensuring data consistency, accuracy,\nand\
    \ reliability. Here, the characteristic technology has become blockchain technology.\n\
    Blockchain can be deﬁned as a register of decentralized data that is securely\
    \ shared between\nusers. The data is divided into shared blocks, linked to unique\
    \ identiﬁers in the form of\ncryptographic hashes. The use of blockchain technology\
    \ enables accessible collection,\nintegration, and sharing of data.\nThe last\
    \ security feature is availability, ensuring that access to data will be easy\
    \ for\nauthorized parties. We can use biometric techniques and physical unclonable\
    \ functions to\nsupport data availability. Physical unclonable functions use randomness\
    \ to give an object a\nunique “ﬁngerprint”. Thanks to this, only users or devices\
    \ with deﬁned permissions will\ngain access to data.\nBelow in this Section, we\
    \ will present a comprehensive review of the latest authen-\ntication protocols,\
    \ including authentication protocols with key agreement phases for IoT\nsolutions.\
    \ We will deliver them, dividing them according to their use (medicine and health-\n\
    care, edge, industry, vehicles, drones, and general IoT solutions). This review\
    \ will support\nthe summary of the characteristics and features of the protocols\
    \ that occurred in the IoT or\nWSN environments.\nRasslan et al. in [81] have\
    \ proposed identity-based strong designated veriﬁer signature\nauthentication\
    \ protocols for medical IoT solutions. The proposed protocols can support the\n\
    authentication process of the IoT device network, which consists of both typical\
    \ devices\ndesigned to control the vital functions of patients and autonomous\
    \ vehicles and drones.\nA characteristic feature of both solutions is their short\
    \ signature size. Moreover, the au-\nthors showed that both schemes are characterized\
    \ by low communication and computing\ncosts compared to similar solutions. The\
    \ authors conﬁrmed that the proposed protocols\nAppl. Sci. 2023, 13, 404\n7 of\
    \ 23\nmeet the assumptions of the ROM and protect patient privacy, and ensure\
    \ data integrity\nand authenticity.\nMasud et al. in [82] have proposed an authentication\
    \ protocol for medical IoT solutions.\nThe proposed protocol is based on blockchain\
    \ [83] and fog calculations, Ethereum-powered\nsmart contracts [84], PUF, and\
    \ biometrics. Blockchain and fog technology ensure nonre-\npudiation, transparency,\
    \ low latency, and efﬁcient bandwidth use. Other technologies are\nused to prevent\
    \ replay, spooﬁng, and cloning attacks. The authors checked and conﬁrmed\nthe\
    \ protocol’s security by using the Scyther tool. Moreover, they compared their\
    \ protocol\nwith similar computation costs and performance solutions. The authors\
    \ showed that the\nproposed protocol could be successfully used in healthcare\
    \ networks that use devices with\nlimited resources.\nChander et al. in [85] also\
    \ addressed medical safety issues. The authors focused on\nsolutions for telecare\
    \ medicine information systems [86]. They proposed an authentication\nprotocol\
    \ that uses hash functions, random functions, radio frequency identiﬁcation (RFID)\n\
    technology [87], and bitwise logical operations [88]. They checked the correctness\
    \ and\nsecurity of the proposed protocol with the help of BAN and GNY logics and\
    \ Avispa and\nScyther tools. These studies have shown that the protocol is resistant\
    \ to typical attacks\noccurring in IoT networks and meets the most crucial security\
    \ properties. However,\nSoni et al. in [89] have reexamined the protocol apportioned\
    \ by Chander et al. in [85].\nThe authors showed that despite the use of hashing\
    \ functions that reduce computing costs\nof endpoint devices, storage and communication\
    \ costs are higher.\nConsequently, there may be delays in the transmission of\
    \ medical data. Moreover, they\nhave shown that this protocol is susceptible to\
    \ impersonation, insider, stolen smart card,\nMITM, and modiﬁcation attacks. Furthermore,\
    \ the protocol does not include the possibility\nof changing the password, which\
    \ signiﬁcantly affects the security of data transmission.\nWang et al. in [90]\
    \ proposed a protocol for medical IoT that protects patient data from\nillegal\
    \ access by unauthorized servers. The authors created an encryption method for\
    \ this\nprotocol based on cyclic shift and XOR operation. Thanks to it, the protocol\
    \ maintains the\nsafety of users but does not burden devices. The authors demonstrated\
    \ the security of the\nproposed protocol by using the BAN logic. Moreover, they\
    \ have shown that the protocol is\nresistant to typical attacks in IoT environments.\
    \ The authors also compared their protocol\nwith similar solutions and obtained\
    \ satisfactory results in achieving safety attributes and\nenergy consumption\
    \ during communication and calculations.\nPrasanalakshmi et al. in [91] focused\
    \ on IoT solutions in the healthcare ﬁeld. The au-\nthors designed a protocol\
    \ by using the AES [92] and blowﬁsh [93] algorithms to encrypt\nmedical data,\
    \ the Koblitz method to choose the embedding points [94] curve, and hyperel-\n\
    liptic curve [95] for embedding medical data in a medical image. The embedded\
    \ image\nprepared in this way is then compressed with a ﬁve-level discrete wavelet\
    \ transform ﬁle to\nachieve a reasonable payload. The authors conﬁrmed the proposed\
    \ method’s correctness,\nespecially in medical image processing. Moreover, they\
    \ suggested that the protocol could\nbe used in real-time applications.\nChen\
    \ et al. in [96] introduced the LAP-IoHT protocol, a three-factor authentication\n\
    protocol designed for health-related IoT solutions. Authentication is based on\
    \ using the\nsmart card, passwords, and biometric features. The authors conducted\
    \ a safety analysis\nof the proposed protocol based on the ROR model. Research\
    \ has shown that the protocol\nis resistant to replay attacks, user impersonation\
    \ attacks, server impersonation attacks,\nprivileged-insider attacks, KSSTI attacks,\
    \ and stolen smart card attacks. Moreover, the pro-\ntocol ensures perfect forward\
    \ secrecy. The authors also showed that the LAP-IoHT protocol\nis more computationally\
    \ efﬁcient than similar solutions and has low communication costs.\nAgrahari et\
    \ al. [97] focused on securing communication between doctor and patient.\nThe\
    \ authors proposed a two-factor authentication protocol by using hashing functions\
    \ and\nbilinear pairing. Authentication is based on the smart card and password\
    \ entered by the\nusers. The authors checked the safety and correctness of the\
    \ proposed scheme by using the\nAvispa tool and the BAN logic. The formal and\
    \ informal analyses showed that the protocol\nAppl. Sci. 2023, 13, 404\n8 of 23\n\
    meets the following security properties, mutual authentication, user anonymity,\
    \ perfect\nforward secrecy, and untraceability, and is resistant to MITM, ofﬂine\
    \ password guessing\nattacks, and privileged-insider attacks and replay attacks.\
    \ The authors also compared\ntheir protocol with similar solutions and obtained\
    \ satisfactory results in achieving security\nattributes and energy consumption\
    \ during communication and calculations.\nTanveer et al. in [98] have proposed\
    \ an authentication protocol targeting the telecare\nmedical information system.\
    \ This protocol uses lightweight cryptography-based authen-\nticated encryption\
    \ with associative data and the hash function of the Esch256 [99] hash.\nThe authors\
    \ showed that their protocol ensures the anonymity and privacy of users and is\n\
    resistant to MITM attacks, replay attacks, impersonation attacks and DoS attacks.\
    \ Moreover,\nthe authors used the ROM model and Scyther tools to conﬁrm the level\
    \ of security provided\nby the proposed protocol. Compared to similar solutions,\
    \ this protocol generates lower\ncomputational and communication costs.\nPardeshi\
    \ et al. in [100] highlighted the problems of adequately securing IoT devices\
    \ in\nfog or edge processing. This problem arises with mass-produced IoT devices\
    \ that ignore\nbasic security requirements and make them vulnerable to attacks.\
    \ Therefore, the authors\nproposed a hash–chain fog/edge zero-knowledge protocol,\
    \ the task of which is to au-\nthenticate each other and agree on session keys\
    \ in the fog/cloud processing environment\nfor different devices. In the proposed\
    \ protocol, the authentication process takes place by\nusing a centralized server\
    \ that manages the keys. The protocol consists of the phases:\ninitialization,\
    \ registration, authentication, communication, and revocation. The authors\nconﬁrmed\
    \ the performance and correctness of the protocol on various architectures and\n\
    workstations, including interconnectivity. Moreover, they established the security\
    \ of the\nprotocol using the BAN logic. They also demonstrated the protocol’s\
    \ resistance to active\nand passive attacks, modiﬁcation, sinkhole, monitoring,\
    \ replay, location disclosure, and\nSybil attacks.\nIqbal et al. in [101] proposed\
    \ an authentication protocol with a key agreement for\nIoT and cloud computing\
    \ environments. The authors used elliptic curve algorithms and\nsymmetric encryption/decryption.\
    \ The authors performed a formal protocol security\nanalysis by using BAN logic\
    \ and the Scyther tool. In turn, informal analyses showed the\nprotocol’s resistance\
    \ to replay attacks, impersonation attacks, traceability attacks, message\nintegrity\
    \ attacks, and MITM attacks. Computational and communication cost studies\nhave\
    \ shown that the protocol proposed by Iqbal et al. in [101] is more efﬁcient than\n\
    similar solutions.\nWu et al. in [102,103] focused on IoT-related cloud computing\
    \ solutions. In both years,\nthey used Intel software guard extensions (SGX) [104]\
    \ to improve the security of protocols\nused in cloud solutions. In Wu et al.\
    \ [102], the authors proposed the SAKAP protocol for\nauthentication and session\
    \ key reconciliation. The authors use SGX to store a shared key.\nThe authors\
    \ performed formal (using the ROR model and the ProVerif tool) and informal\n\
    protocol analysis. Research has shown that the protocol is resistant to replay\
    \ attacks, MITM\nattacks, and impersonation attacks and provides security features\
    \ such as anonymity and\nuntraceability. In turn, in [103], the authors proposed\
    \ the SQXAP protocol that can be used\nto authenticate intelligent vehicles in\
    \ cloud systems. The authors also performed formal\n(using the ROR model) and\
    \ informal analyses for this protocol. Research has shown that\nthe protocol is\
    \ resistant to replay attacks, insider attacks, and MITM attacks, and provides\n\
    security properties such as mutual authentication, anonymity, and untraceability.\n\
    Zhao et al. in [105], Zhao et al. focused on industrial IoT (IIoT) security. The\
    \ authors\nnoticed that the low computing power of IIoT devices resulted in the\
    \ low level of security\nimplemented in such networks. The authors proposed a\
    \ three-factor authentication and\nkey-handshake protocol to solve such problems\
    \ based on elliptic curve cryptography.\nThe protocol can work on networks with\
    \ one or more gateways. The authors conﬁrmed\nthe security of this protocol by\
    \ using the ROM model and the Scyther tool. In turn,\ninformal analyses conﬁrmed\
    \ that the protocol provides mutual authentication, session key\nagreement, forward\
    \ and backward secrecy, user anonymity, and untraceability. Moreover,\nAppl. Sci.\
    \ 2023, 13, 404\n9 of 23\nthe protocol is resistant to stolen smart card attacks,\
    \ replay attacks, privileged-insider\nattacks, desynchronization attacks, and\
    \ impersonation attacks. The authors also compared\ntheir protocol and similar\
    \ solutions for IIoT and obtained satisfactory results in achieving\nsecurity\
    \ attributes and energy consumption during communication and calculations.\nYi\
    \ et al. in [106] also proposed an authentication protocol for IIoT. The proposed\n\
    protocol uses the physically unclonable function (PUF) [107] chip and uses the\
    \ Bloom [108]\nﬁlter to preauthenticate and reduce computation and communication\
    \ costs. The authors\nperformed a formal safety analysis of the proposed protocol\
    \ by using the Avispa tool and\ninformal analysis. The research showed that the\
    \ proposed protocol for ensuring the follow-\ning security properties: mutual\
    \ authentication, identity anonymity, and untraceability and\nforward and backward\
    \ secrecy of session keys, and is also resistant to tampering attacks,\nreplay\
    \ attacks, simulation and forgery attacks, physical attacks, and desynchronization\n\
    attacks. Moreover, the authors compared their protocol with other schemes regarding\n\
    security and computational and communication costs with satisfactory results.\n\
    Panda et al. in [109] focused on industrial IoT solutions and proposed an authenti-\n\
    cation protocol for machine-to-machine communication. The authors tried to minimize\n\
    the computational and communication load while increasing communication security.\n\
    The authors used only XOR operations and hashing functions, and the shared symmetric\n\
    key is only generated after two rounds of communication without human intervention.\n\
    The authors carried out a formal (using BAN logic and the Avispa tool) and informal\n\
    analysis of the protocol’s security, showing that it is resistant to typical attacks\
    \ occurring in\nIoT environments. In conclusion, the authors emphasized the advantages\
    \ of a protocol that\nmeets security properties with low computational and communication\
    \ costs. Moreover,\nthey noted that the protocol could be successfully implemented\
    \ in other IoT domains.\nZhang et al. in [110] have developed an authentication\
    \ protocol for the cross-domain\nIoT environment. The protocol uses the elliptic\
    \ curve digital signature algorithm, blockchain\ntechnology, and a specially designed\
    \ cryptocurrency token to build trust between entities.\nThe authors analyzed\
    \ the safety of the proposed protocol. They showed that it is resistant to\nMITM\
    \ attacks, replay attacks, revealing identity attacks, authority abuse attacks,\
    \ and DoS\nattacks. In addition, they demonstrated its computing and communication\
    \ performance.\nIn turn, Wang et al. in [111] conﬁrmed this protocol’s computing\
    \ and communication\nadvantages. However, they showed that it only allows one-way\
    \ authentication and adds to\nthe burden of certiﬁcate storage.\nLi et al. in\
    \ [112] have proposed a mutual authentication protocol with key hand-\nshaking\
    \ based on blockchain, elliptic curves, and bilinear pairs. The authors replaced\n\
    the centralized CA with the registration authority to avoid single-node failure\
    \ and some\nattacks. In addition, the key recovery and key update scheme use the\
    \ Lagrange interpola-\ntion method [113]. The authors formally conﬁrmed the safety\
    \ of the proposed protocol by\nusing the ProVerif tool and the ECK model [114].\
    \ Informal security analyses have shown\nthat the proposed protocol is resistant\
    \ to typical IoT attacks. Moreover, the authors noted\nthat this protocol’s computational\
    \ and communication overhead is negligible. However,\nRyu et al. in [115] pointed\
    \ out that the protocol barred by Li et al. in [112] user anonymity\nis prone\
    \ to insider attacks.\nHajian et al. in [116] proposed a two-way, mutual authentication\
    \ and key agreement\nprotocol. The protocol involves four phases: initialization,\
    \ registration and generation of\nsecret keys of long duration, key authentication\
    \ and reconciliation, and updating public\nand private keys. The authors, using\
    \ the ROR model, BAN logic and the Scyther tool,\nconﬁrmed the correctness and\
    \ safety of the proposed protocol. Additionally, the informal\nanalysis showed\
    \ resistance to this protocol to replay attacks, MITM attacks, device capture\n\
    attacks, privilege-insider attacks, KCI attacks, known speciﬁc temporary information\n\
    attacks, impersonation attacks, and known-key attacks. In addition, these analyses\
    \ showed\nthat the protocol provides anonymity and untraceability and perfect\
    \ forward/backward\nsecrecy. The authors also assessed their protocol in terms\
    \ of communication, calculation\nAppl. Sci. 2023, 13, 404\n10 of 23\ncosts, and\
    \ energy consumption, and they obtained satisfactory results in comparison with\n\
    similar solutions.\nGong et al. in [117] proposed a lightweight protocol for authenticating\
    \ and negotiating\nsession keys. The proposed protocol uses shared secret and\
    \ elliptic curve public key\ntechnology and is based on the CoAP framework [118].\
    \ The techniques used to ensure\nthe security and anonymity of devices and users.\
    \ The authors veriﬁed the performance\nand safety of the proposed protocol by\
    \ using the Dolev–Yao adversary model [119] and\nthe CPN Tools tool [120]. The\
    \ analysis showed that the protocol provides the following\nsecurity properties:\
    \ conﬁdentiality, data integrity, mutual authentication, perfect forward\nand\
    \ backward secrecy, device anonymity, and unlinkability. The protocol is resistant\n\
    to impersonation attacks, MITM attacks, privileged-insider attacks, replay attacks,\
    \ KCI\nattacks, desynchronization attacks, and DoSs attacks. Moreover, the authors\
    \ compared their\nprotocol with other schemes regarding security and computational\
    \ and communication\ncosts with satisfactory results.\nChen et al. in [121] proposed\
    \ another two-factor authentication and key agreement\nprotocol for IoT environments.\
    \ The proposed protocol consists of the predeployment phase,\nthe IoT device registration\
    \ phase, and the login and authentication phase. The authors\ndistinguished two\
    \ roles: IoT devices and a server. The IoT device must register on the\nserver.\
    \ Further communication between these devices takes place by using a session\n\
    key generated by the server. The authors tested the security of the proposed protocol\n\
    by using the ROR model and the BAN logic. Studies have shown that the protocol\
    \ is\nresistant to privileged-insider attacks, known temporary information disclosure\
    \ attacks,\nstolen veriﬁcation attacks, IoT device simulation attacks, and physical\
    \ IoT device capture\nattacks. In addition, the protocol provides the perfect\
    \ forward secrecy property. Moreover,\nthe authors compared the proposed protocol\
    \ with similar security and computational and\ncommunication cost solutions, obtaining\
    \ satisfactory results.\nAnother mutual authentication protocol was proposed by\
    \ Safkhani et al. in [122].\nThe authors focused on the use of RFID technology\
    \ in the IoT environment. The au-\nthors created a new message authentication\
    \ code function for the proposed protocol by\nanalyzing the existing protocols\
    \ and their problems and possible attacks. The authors\nformally informally veriﬁed\
    \ their protocol’s security (using BAN logic and the Scyther\ntool). The protocol\
    \ is resistant to replay attacks, secret disclosure attacks, impersonation\nattacks,\
    \ and desynchronization attacks. Moreover, the authors showed that their proposed\n\
    protocol is characterized by low computing and communication costs, and therefore\
    \ it can\nbe implemented in environments with low resources and computing power.\n\
    Khorasgani et al. in [123] proposed three lightweight protocols called LRSAS+,\
    \ LRARP,\nand LRARP+ for use in IoT solutions. The authors chose the operations\
    \ performed during\nthe protocol to be safe and computationally light, i.e., they\
    \ do not burden the communi-\ncating devices. The authors conﬁrmed the protocol’s\
    \ security by using GNY logic and the\nScyther tool. The protocol is resistant\
    \ to tag-tracking attacks, replay and reader imperson-\nation attacks, desynchronization\
    \ attacks, and DoSs attacks. In addition, the protocol meets\nforward–backward\
    \ secrecy. The study of the efﬁciency of the proposed protocols also con-\nﬁrmed\
    \ the authors’ initial assumptions regarding not overloading communicating devices.\n\
    Alam et al. [124] have proposed a new authentication protocol for use in IoT environ-\n\
    ments. The authors used the elliptic curve discrete logarithm problem [125] properties,\n\
    hash functions, and XOR operations to ensure robust and secure authentication.\
    \ The au-\nthors tested their protocol by using the BAN logic and the Avispa tool\
    \ and demonstrated\nits resistance to forging, guessing, masquerading, DoSs and\
    \ MITM attacks. Moreover,\nthe protocol complies with security properties such\
    \ as user anonymity and untraceability\nor perfect forward secrecy. Furthermore,\
    \ the authors compared the proposed protocol with\nother schemes in terms of security\
    \ and computational and communication costs, obtaining\nsatisfactory results.\
    \ The authors concluded that the proposed protocol can be implemented\nfor various\
    \ applications of IoT devices and that it can be successfully extended with other\n\
    techniques of securing the authentication process.\nAppl. Sci. 2023, 13, 404\n\
    11 of 23\nMirsaraei et al. in [126] proposed a three-factor authentication protocol\
    \ for IoT en-\nvironments. The protocol uses blockchain technology, hashing functions,\
    \ XOR, and the\nconcept of a fuzzy extractor. The cryptographic techniques ensure\
    \ an appropriate level of\nsecurity, protect data against manipulation and increase\
    \ the transparency of the recorded\ninformation on smart cards. The authors used\
    \ the BAN logic, the ROR model and the\nAvispa tool for formal analysis. Research\
    \ has shown the security of mutual authentication\nimplemented by the proposed\
    \ protocol.\nConversely, an informal analysis showed that the protocol provides\
    \ data conﬁden-\ntiality, mutual authentication, data integrity, forward security,\
    \ anonymity, authorization,\nthree-factor secrecy, and secured password updating.\
    \ Moreover, the proposed protocol is\nresistant to replay attacks, password-guessing\
    \ attacks, DoS attacks, server impersonation\nattacks, privileged-insider attacks,\
    \ KSSTI attacks, user impersonation attacks, stolen smart\ncard attacks, MITM\
    \ attacks, and brute force attacks. The authors concluded that their\nprotocol\
    \ is superior in computation cost, communication cost, security requirements,\
    \ and\nattack resistance compared to similar solutions.\nSaqib et al. in [127]\
    \ proposed a three-factor authentication protocol for mission-critical\nIoT-based\
    \ applications. The protocol is based on the publish–subscribe model and uses\n\
    elliptical curve cryptography (ECC) and computationally low hash chains. Authentication\n\
    is done through an identity, password, and digital signature. The authentication\
    \ process\nalso generates a dynamic session key based on the value of the nonce.\
    \ Dynamic key changes\nmake the protocol resistant to attacks on session keys.\
    \ An informal protocol security analy-\nsis showed its resistance to MITM attacks,\
    \ smart card stolen attacks, publisher, subscriber,\nor broker impersonation attacks,\
    \ known session key attacks, ofﬂine password guessing\nattacks, replay attacks,\
    \ and privileged-insider attacks. In addition, the protocol provides\nconﬁdentiality,\
    \ mutual authentication and perfect forward secrecy. The formal safety anal-\n\
    ysis was performed by using the Scyther tool. The authors also showed that, compared\n\
    to similar protocols, the proposed protocol saves bandwidth and communication\
    \ energy\nwhile reducing resource-constrained sensor nodes’ computation and communication\
    \ costs.\nHu et al. in [128] focused on the weaknesses of existing IoT authentication\
    \ protocols.\nThe authors opposed a two-factor authentication protocol by using\
    \ ECC, passwords, and\nsmart cards. The authors conducted formal (using the ProVerif\
    \ tool) and informal veriﬁ-\ncation of their protocol. Based on analyses, they\
    \ showed that the protocol is resistant to\nimpersonation attacks, ofﬂine password\
    \ guessing attacks, replay attacks, and sensor node\ncaptured attacks. In addition,\
    \ they found the proposed protocol to be secure, meeting user\nand session key\
    \ security requirements. In addition, it achieves satisfactory results in terms\n\
    of computational costs.\nHaseeb-ur-rehman et al. in [129] introduced a two-factor\
    \ authentication protocol based\non a symmetric key, by using biometrics and a\
    \ password. The proposed protocol consists\nof six phases: the initialization,\
    \ the smart device enrollment, the gateway node enrollment,\nthe user enrollment,\
    \ the login and authentication and the password and biometric update.\nThe authors\
    \ conducted formal (using the Avispa tool) and informal analyses of the safety\n\
    of the proposed protocol. Research has shown that the protocol ensures security\
    \ properties\nsuch as session key freshness property, perfect forward secrecy,\
    \ user anonymity, and un-\ntraceability. In addition, it is resistant to replay\
    \ attacks, impersonation attacks, and MITM\nattacks. The authors also showed that\
    \ their protocol has lower computational costs than\nsimilar protocols.\nKumar\
    \ et al. in [130] focused on IoT solutions for vehicles. The authors proposed\
    \ an\nauthentication protocol based on RFID and PUF technologies. The protocol\
    \ assumes the\npresence of three roles: a tag, a reader, and a cloud server, and\
    \ each of the components\ncan operate independently. The tag is responsible for\
    \ initiating communication with the\nreader, and the reader must validate the\
    \ message sent by the tag and send it to the server.\nThe server is responsible\
    \ for tag and reader authentication. The authors tested the safety\nof the proposed\
    \ protocol by using the ROR model and informal analyses. Research has\nshown that\
    \ the protocol is resistant to ephemeral secret leakage attacks, MITM attacks,\n\
    Appl. Sci. 2023, 13, 404\n12 of 23\ninsider attacks, replay attacks, impersonation\
    \ attacks, ofﬂine password-guessing attacks,\nand desynchronization attacks. Moreover,\
    \ the proposed protocol maintains the following\nsecurity properties: location\
    \ privacy, mutual authentication and session key agreement,\nforward secrecy,\
    \ and message authentication. Furthermore, the authors compared their\nprotocol\
    \ with other schemes regarding security and computational and communication\n\
    costs with satisfactory results.\nGupta et al. in [131] proposed an authentication\
    \ protocol for IoT solutions for vehicles.\nThe authors based the security of\
    \ their protocol on identity-based cryptography [132]\nand lattice cryptography\
    \ [133]. The authors veriﬁed the correctness and security of their\nprotocol by\
    \ using the ROM model. Research has shown that the protocol is resistant to\n\
    MITM attacks, Unknown key-share attacks, and known-key security attacks and provides\n\
    perfect forward secrecy. In addition, the authors compared the protocol with similar\n\
    solutions in terms of reference and communication costs. The authors concluded\
    \ that the\nproposed protocol is computationally efﬁcient and can be implemented\
    \ in real IoT solutions\nfor vehicles.\nZhang et al. in [134] observed that the\
    \ development of IoT systems for vehicles, on the\none hand, contributed to easing\
    \ the trafﬁc load and improving travel efﬁciency. On the\nother hand, these systems\
    \ are exposed to security threats in many respects. Therefore,\nthe authors proposed\
    \ an authentication protocol for such solutions. The proposed protocol\nuses blockchain\
    \ technology and a chaotic mapping algorithm. It allows vehicles and\nroadside\
    \ units to register to obtain a public identity, which they then use to authenticate\n\
    and negotiate the key. The authors conﬁrmed the security of their protocol with\
    \ the Scyther\ntool. Moreover, they showed that the proposed protocol has lower\
    \ computation and\ncommunication costs than the existing schemes.\nBera et al.\
    \ in [135] focused on IoT solutions that use drones in agriculture. The authors\n\
    proposed an authentication and key management protocol based on blockchain technol-\n\
    ogy. The authors examined their protocol for its susceptibility to attacks occurring\
    \ in\nIoT environments. They showed that the protocol is resistant to MITM attacks,\
    \ replay\nattacks, impersonation attacks, privileged-insider attacks, physical\
    \ IoT smart device and\ndrone capture attacks, and ephemeral capture attacks,\
    \ secret leakage attacks. In addition,\nthe authors performed a formal protocol\
    \ analysis by using the ROR model and the Avispa\ntool. In conclusion, the authors\
    \ concluded that the protocol has low computational and\ncommunication costs.\n\
    Tanveer et al. suggested two protocols for IoT drone solutions: a protocol for\
    \ the\nauthentication process in [136], and a protocol for the key agreement process\
    \ in [137,138].\nThese protocols use AES-CBC-256, ECC, SHA-256 hash functions,\
    \ and XOR operations.\nThe authors have demonstrated the resistance of these protocols\
    \ to common attacks occur-\nring in IoT environments, for example, replay attacks\
    \ and MITM attacks. The authors used\nthe ROM model and the Scyther tool for formal\
    \ analysis of the protocols. The authors used\nboth proposed protocols in the\
    \ [139] framework for drones because both are efﬁcient in\nterms of communication,\
    \ storage and computing costs compared to similar solutions.\nJaved et al. in\
    \ [140] have abandoned the blockchain-based authentication protocol and\nthe hyperelliptic\
    \ curve cryptography for IoT drones. In this approach, the blockchain is\nused\
    \ as a certiﬁcation authority, and transactions are deﬁned as certiﬁcates. Such\
    \ action\nis designed to reduce maintenance costs while ensuring a high level\
    \ of communication\nsecurity. The authors concluded that the proposed protocol\
    \ is resistant to common attacks in\ndrone IoT networks and is also cost-effective\
    \ in terms of computation and communication\ncompared to similar solutions.\n\
    4. Discussion\nMany different protocols are available for use in IoT environments,\
    \ with different\ncharacteristics, purposes and applications. As mentioned in\
    \ this manuscript, we focused\non protocols that fulﬁll the purposes of authentication,\
    \ agreement, and agreement of\nthe session key. The protocols may pursue one or\
    \ more of these objectives during their\nAppl. Sci. 2023, 13, 404\n13 of 23\n\
    operation. The overviewed protocols use cryptographic techniques to achieve their\
    \ goals\nand secure communication. These protocols have been validated with various\
    \ tools and\nmethods for vulnerability to attacks and providing essential security\
    \ features.\nIn Table 2, we summarized the revised protocols in terms of the purpose\
    \ they pursue.\nWe have designated three types of protocols based on the analyzes\
    \ performed. Here we can\nobserve the need to create protocols primarily for user\
    \ authentication. An essential aspect\nof communication is the reconciliation\
    \ and agreement of session keys; hence, developing\nand applying this protocol\
    \ is also key to securing communication.\nTable 2. The summary of protocol types.\n\
    Protocol Type\nReferences\nAuthentication protocol\n[81,82,85,90,91,96–98,103,106,110,122–124,126,128–131,134,136,140]\n\
    Authentication & key\nagreement protocol\n[100–102,105,109,112,116,117,121,127,135]\n\
    Key agreement protocol\n[137,138]\nTable 3 provides a summary of the protocols\
    \ discussed in terms of their uses and inter-\noperability. We considered protocols\
    \ targeted at speciﬁc solutions such as those intended\nfor medicine and health,\
    \ fog, edge, or cloud computing, and vehicular, drone, or indus-\ntrial purposes.\
    \ However, protocols that can be used in different resolutions (multidomain\n\
    protocols) also play an essential role. In addition to multidomain solutions,\
    \ many security\nprotocols have been developed for solutions related to direct\
    \ human safety, be it physical\nor environmental. First and foremost, it is about\
    \ securing communications in medical\nenvironments where, on the one hand, we\
    \ need to ensure patients ’data and privacy and,\non the other hand, safeguard\
    \ their health and life, as IoT devices are used to control patients’\nvital functions.\
    \ Another important aspect will be the protocols for industrial solutions that\n\
    also relate to securing people environmentally and physically. As in the case\
    \ of medical\nsolutions, we must secure both data sent in industrial networks\
    \ and protect against attacks\nthat could contribute to the incorrect operation\
    \ of industrial devices and thus threaten the\nhealth and life of employees.\n\
    Table 3. The summary of protocol solutions.\nIoT Solution\nReferences\nMedicine\
    \ & health\n[81,82,85,90,91,96–98]\nFog, edge, or cloud computing\n[100–103]\n\
    Vehicular\n[130,131,134]\nDrones\n[135,136,140]\nIndustrial\n[105,106,109,137,138]\n\
    Multidomain\n[110,112,116,117,121–124,126–129]\nTable 4 shows the attacks against\
    \ which the described protocols for IoT are resistant.\nThe table contains only\
    \ those protocols for which the authors conducted formal and\ninformal security\
    \ evidence and indicated which attacks their proposed protocol is resistant\n\
    to. In some papers (such as [81,82,91,134,136] or [137,137,137,137]) lists of\
    \ attacks emerged.\nOn the other hand, in other papers (such as [90,109] or [112]),\
    \ the authors only suggested\nthat their protocols are resistant to typical attacks\
    \ in IoT environments. The table contains a\nlist of attacks and an annotation\
    \ regarding the resistance of the tested protocol to attack.\nWe only included\
    \ those attacks that appear in a few papers. These attacks seemed once\n(e.g.,\
    \ Sybil attack or sinkhole attack) are included in the Others column. The ﬂag\
    \ + indicates\nthat the authors have demonstrated that their proposed protocol\
    \ is immune to attack.\nThe ﬂag - means that the protocol has not been veriﬁed\
    \ to be vulnerable to attack.\nWe have observed that the most frequently tested\
    \ vulnerabilities in IoT environments\nare impersonation attacks, MITM attacks,\
    \ and replay attacks. Most reviewed papers\nAppl. Sci. 2023, 13, 404\n14 of 23\n\
    reported studies of proposed protocols for these attacks, indicating that they\
    \ are among the\nmost dangerous vulnerabilities. These attacks can lead to the\
    \ loss of a signiﬁcant amount of\ninformation, necessitating protection against\
    \ them in IoT environments. The attacker can\ncombine different techniques when\
    \ carrying out an attack. An attacker can listen to and\nintercept network trafﬁc\
    \ and then retransmit it to convince the recipient to perform speciﬁc\nactions.\
    \ The attack results depend on the attacker’s knowledge, skills and imagination\
    \ and\nthe vulnerability and speciﬁcity of the attacked environment. One of the\
    \ most dangerous\noutcomes of an attacker may be the loss of conﬁdential information.\
    \ Protection against this\ntype of attacker activity should consider using message\
    \ timestamps and one-time session\nkeys during communication.\nTable 4. The summary\
    \ of attacks upon the protocols.\nPaper\nImpersonation\nInsider\nStolen Smart\
    \ Card\nMITM\nModiﬁcation\nReplay\nCapture\nSecret Leakage\nUnknown Key-Share\n\
    Known-Key Security\nGuessing\nDesynchronisation\nKSSTI\nDoS\nOthers\n[85]\n+\n\
    +\n+\n+\n+\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n[96]\n+\n+\n+\n-\n-\n+\n-\n-\n-\n-\n\
    -\n-\n+\n-\n-\n[97]\n-\n+\n-\n+\n-\n+\n-\n-\n-\n-\n+\n-\n-\n-\n-\n[98]\n+\n-\n\
    -\n+\n-\n+\n-\n-\n-\n-\n-\n-\n-\n+\n-\n[100]\n-\n-\n-\n-\n+\n+\n-\n-\n-\n-\n-\n\
    -\n-\n-\n+\n[101]\n+\n-\n-\n+\n-\n+\n-\n-\n-\n-\n-\n-\n-\n-\n-\n[102]\n+\n-\n\
    -\n+\n-\n+\n-\n-\n-\n-\n-\n-\n-\n-\n-\n[103]\n-\n+\n-\n+\n-\n+\n-\n-\n-\n-\n-\n\
    -\n-\n-\n-\n[105]\n+\n+\n+\n-\n-\n+\n-\n-\n-\n-\n-\n+\n-\n-\n+\n[106]\n-\n-\n\
    -\n-\n-\n+\n-\n-\n-\n-\n-\n+\n-\n-\n+\n[110]\n-\n-\n-\n+\n-\n+\n-\n-\n-\n-\n-\n\
    -\n-\n+\n+\n[116]\n+\n+\n-\n+\n-\n+\n+\n-\n-\n+\n-\n-\n+\n-\n+\n[117]\n+\n+\n\
    -\n+\n-\n+\n-\n-\n-\n-\n-\n+\n-\n+\n+\n[121]\n-\n+\n+\n-\n-\n-\n-\n-\n-\n-\n-\n\
    -\n+\n-\n+\n[122]\n+\n-\n-\n-\n-\n+\n-\n-\n-\n-\n-\n+\n-\n-\n+\n[123]\n+\n-\n\
    -\n-\n-\n-\n-\n-\n-\n-\n-\n+\n-\n+\n+\n[124]\n-\n-\n-\n+\n-\n-\n-\n-\n-\n-\n+\n\
    -\n-\n+\n+\n[126]\n+\n-\n+\n+\n-\n+\n-\n-\n-\n-\n+\n-\n+\n+\n+\n[127]\n+\n+\n\
    +\n+\n-\n+\n-\n-\n-\n+\n-\n-\n-\n-\n-\n[128]\n+\n-\n-\n-\n-\n+\n+\n-\n-\n-\n+\n\
    -\n-\n-\n-\n[129]\n+\n-\n-\n+\n-\n+\n-\n-\n-\n-\n-\n-\n-\n-\n-\n[130]\n+\n+\n\
    -\n+\n-\n+\n-\n+\n-\n-\n+\n+\n-\n-\n-\n[131]\n-\n-\n-\n+\n-\n-\n-\n-\n+\n+\n-\n\
    -\n-\n-\n-\n[135]\n+\n+\n-\n+\n-\n+\n+\n+\n-\n-\n-\n-\n-\n-\n-\nTable 5 summarizes\
    \ the security aspects of the analyzed protocols. Moreover, in this\ntable, we\
    \ have included only those protocols for which the authors conducted formal\n\
    and informal proofs of security and indicated the security aspects that their\
    \ protocols\nprovide. In some papers (e.g., [90,91,100,101]), the authors did\
    \ not include the list of\naspects. In this table, we have included a list of\
    \ aspects with an annotation of whether\nthe protocol meets the property (designation\
    \ +). The designation - means that there is no\ninformation about the assurance\
    \ of ownership by the investigated protocol. The analysis\nshowed forward security\
    \ is the most desirable security property, a speciﬁc feature of the\nsession key\
    \ agreement protocols.\nAppl. Sci. 2023, 13, 404\n15 of 23\nTable 5. The summary\
    \ of security aspects.\nPaper\nPrivacy\nData Integrity\nAuthenticity\nForward\
    \ Secrecy\nBackward Secrecy\nMutual Authentication\nUser Anonymity\nUntraceability\n\
    Session Key Agreement\nConﬁdentiality\n[81]\n+\n+\n+\n-\n-\n-\n-\n-\n-\n-\n[96]\n\
    -\n-\n-\n+\n-\n-\n-\n-\n-\n-\n[97]\n-\n-\n-\n+\n-\n+\n+\n+\n-\n-\n[98]\n+\n-\n\
    -\n-\n-\n-\n+\n-\n-\n-\n[102]\n-\n-\n-\n-\n-\n-\n+\n+\n-\n-\n[103]\n-\n-\n-\n\
    -\n-\n+\n+\n+\n-\n-\n[105]\n-\n-\n-\n+\n+\n+\n+\n+\n+\n-\n[106]\n-\n-\n+\n+\n\
    +\n+\n+\n+\n-\n-\n[116]\n-\n-\n-\n+\n+\n-\n+\n+\n-\n-\n[117]\n-\n+\n-\n+\n+\n\
    +\n+\n-\n-\n+\n[121]\n-\n-\n-\n+\n-\n-\n-\n-\n-\n-\n[123]\n-\n-\n-\n+\n+\n-\n\
    -\n-\n-\n-\n[124]\n-\n-\n-\n+\n-\n-\n+\n+\n-\n-\n[126]\n-\n+\n-\n+\n-\n+\n+\n\
    -\n-\n+\n[127]\n-\n-\n-\n+\n-\n+\n-\n-\n-\n+\n[129]\n-\n-\n-\n+\n-\n-\n+\n+\n\
    -\n-\n[130]\n+\n-\n-\n+\n-\n+\n-\n-\n+\n-\n[131]\n-\n-\n-\n+\n-\n-\n-\n-\n-\n\
    -\nThe authors of all overviewed papers have also conducted performance studies\
    \ of\ntheir protocols. The authors compared their proposals with similar solutions\
    \ in terms of\ncommunication and calculation costs and energy consumption. The\
    \ authors found that the\nproposed protocols achieve better performance in all\
    \ studies than comparable solutions.\nTo summarize the overviewed protocols, the\
    \ authentication process is the essential\ncommunication element in IoT environments.\
    \ The process consists of conﬁrming the iden-\ntity of the communicating parties.\
    \ One or more factors may be used during authentication;\nthe more factors, the\
    \ greater the safety of the entire process. If only passwords are used for\nauthentication,\
    \ this can be a weak and vulnerable security. An attacker can intercept, guess\n\
    or crack passwords. Hence, a better solution is to use biometrics as it will avoid\
    \ spooﬁng\nor impersonating attacks.\nAuthentication is vulnerable to rogue users.\
    \ Attackers can launch attacks to obtain\nprivate user information, block the\
    \ operation of selected system components, or cause\nthe system to malfunction.\
    \ The most dangerous attacks are MITM attacks, replay attacks,\nand the impersonation\
    \ mentioned above because they can lead to the loss of user data\nand the compromise\
    \ of essential security properties. The desynchronization attack can be\nequally\
    \ dangerous because, in many IoT environments (for example, medical), proper data\n\
    synchronization is crucial to the entire system’s operation.\nAn essential element\
    \ of securing communication is using session keys, which are\nused to encrypt\
    \ it. To protect communication against a replay attack or MITM attack, it is\n\
    worth using one-time session keys, and messages should be timestamped. Thanks\
    \ to this,\nthe system will unequivocally determine whether a legitimate network\
    \ node generated the\nprocessed message or whether it was intercepted by the attacker\
    \ and resent by him.\nIn addition to the security aspects, we should also bear\
    \ in mind the issues related\nto the scalability of protocols in the IoT environment.\
    \ Devices used in IoT environments,\nor WSN sensors, have limited computing power.\
    \ For this reason, calculations performed on\nindividual devices while the protocol\
    \ is running should not drain its energy. For this reason,\nAppl. Sci. 2023, 13,\
    \ 404\n16 of 23\nwhen designing authentication or key agreement protocols, it\
    \ is worth using lightweight\ncryptographic algorithms that will ensure an appropriate\
    \ level of data security but will not\nburden system resources. In turn, data\
    \ storage should be left to centralized units with more\ncomputing and hardware\
    \ resources than individual nodes of the IoT or WSN environment.\nNewly proposed\
    \ protocols should be adequately screened for vulnerability to attacks\nand their\
    \ essential security features. There are many different methods and tools for\
    \ this\n(mentioned in Section 1). In addition, implemented and operational protocols\
    \ should also\nbe systematically checked for this, as the methods used by attackers\
    \ constantly evolve.\n5. Conclusions\nIn this manuscript, we surveyed papers that\
    \ proposed key agreement and authen-\ntication protocols for the Internet of things\
    \ and wireless sensors networks. We collected\npapers focusing on problems with\
    \ security, especially in IoT that offer new protocols aimed\nat correcting vulnerabilities\
    \ in existing protocols. We discussed the theoretical aspects of\nIoT environments,\
    \ cryptographic methods that can be used to secure communication, and\ncyberattacks\
    \ that can compromise the security in the environments under consideration.\n\
    We highlighted the key agreement, distribution process, and authenticating users\
    \ or\ndevices on such networks in this manuscript. These processes provide critical\
    \ communica-\ntion steps as they prevent unauthorised access to session keys and\
    \ unauthorised access by\nunauthorised users or devices. Data transferred between\
    \ network nodes can be of different\nnatures and importance, and they need to\
    \ be appropriately secured during communication.\nAll communications are exposed\
    \ to dishonest users called attackers. Attackers’ activity\nmay involve attacks\
    \ on various aspects of the network, such as passwords, keys, biometric\ndata\
    \ or devices, and eavesdropping and retransmitting the same messages.\nWe looked\
    \ at various solutions related to authentication and matching of session keys.\n\
    The authors of the protocols under consideration focused on essential security\
    \ properties\nsuch as untraceability and anonymity, and the solutions’ authors\
    \ focused on crucial security\nfeatures. The authors also validated their protocols\
    \ with formal and informal methods\nthat considered the vulnerability of these\
    \ protocols. Various techniques (e.g., BAN logic or\nGNY) and automatic tools\
    \ (e.g., Scyther, ProVerif) were used for veriﬁcation. Thanks to\nthe methods\
    \ and tools used, the authors showed what level of security is provided by the\n\
    protocol they propose.\nThe selected protocols’ analysis showed that the most\
    \ dangerous attacks for IoT are\nimpersonation attacks, MITM attacks, and replay\
    \ attacks because the susceptibility to\nthese attacks was most often checked\
    \ and veriﬁed by the authors of the selected works.\nDuring impersonation attacks,\
    \ the attacker identiﬁes himself with another user on the\nnetwork and tries to\
    \ convince other users of his identity. The replay attack involves\nduplicating\
    \ packets and sending them multiple times. At any time during this attack,\nthe\
    \ attacker can also use a MITM attack to intercept transmitted messages. A successfully\n\
    conducted attack may result in the loss of conﬁdential data, which may cause further\n\
    problems for the user. The essential protection principle against attacks is using\
    \ timestamps\nin messages and one-time session keys. Timestamps will allow us\
    \ to verify the time when a\nmessage was generated.\nOn the other hand, disposable\
    \ session keys will prevent the repeated sending of a\nmessage encrypted with\
    \ an outdated key. Other types of attacks cannot be underestimated.\nAttacks during\
    \ which the attacker tries to guess the password (guessing attacks) and the\n\
    loss of data or devices that verify the user (stolen attacks) are equally dangerous.\
    \ Such\nsituations may contribute to the fact that an unauthorized user can log\
    \ in with the correct\ncredentials of an honest user and thus impersonate him.\n\
    After analyzing the current state of knowledge in the security protocols for IoT\
    \ and\nWSN environments, we set out to indicate further research directions in\
    \ this area. Here we\ncan indicate the three most important aspects that should\
    \ pay attention to constructing\nsecure protocols for IoT.\nAppl. Sci. 2023, 13,\
    \ 404\n17 of 23\nThe ﬁrst is security. Protocols should provide an appropriate\
    \ level of security for\nusers and data sending because the methods of breaking\
    \ security are constantly evolving.\nTherefore, research goals in security protocols\
    \ for IoT and WSN environments should focus\non technologies and solutions that\
    \ provide increasingly better security. The elliptic curve\nalgorithms are particularly\
    \ noteworthy here, because they offer security comparable to the\nRivest–Shamir–Adleman\
    \ algorithm when using shorter encryption keys. Authentication\nand veriﬁcation\
    \ of users’ identities are also essential elements of security. These processes\n\
    should take place, taking into account at least two factors. Authentication using\
    \ only the\nuser’s password does not provide an adequate level of security, especially\
    \ in situations in\nwhich the user uses the same password when logging into many\
    \ services or applications.\nThe best solution worth developing is using biometric\
    \ methods during these two processes.\nBiometric methods allow us to identify\
    \ and conﬁrm the user’s identity.\nThe second aspect of security protocols for\
    \ IoT and WSN environments is performance.\nThe computing load of IoT devices\
    \ during communication should be as low as possible so\nthat devices and their\
    \ users can work efﬁciently without delays. Blockchain is an interest-\ning technology\
    \ in this regard, because it ensures nonrepudiation and data transparency.\nOn\
    \ the other hand, considering calculations in clouds or fog is conducive to achieving\
    \ low\ntransmission delays and efﬁcient bandwidth use.\nThe last aspect to consider\
    \ is cross-platform. Protocols for IoT should be cross-platform.\nSome of the\
    \ protocols reviewed in this manuscript are application-speciﬁc (e.g., in medicine).\n\
    When designing a security protocol for IoT, it is worth considering a broader\
    \ spectrum of\napplications so that one authentication or key agreement and distribution\
    \ protocol can be\nimplemented in many solutions.\nAfter analyzing the current\
    \ state of knowledge in the ﬁeld of protocols for the IoT and\nWSNs environments,\
    \ we set ourselves further research goals. In our next work, we will\nfocus on\
    \ designing and creating a secure communication framework to be implemented\n\
    in IoT. We will include a newly designed and secure communication protocol, thanks\
    \ to\nwhich it will be possible to agree on and distribute the session key and\
    \ user authentication.\nWhen designing and creating the framework and protocol,\
    \ we will consider the security\nfeatures to ensure the safety of users. We will\
    \ also include one-time veriﬁcation credentials,\nkeys, and timestamps to protect\
    \ the environment from attacks.\nAuthor Contributions:\nConceptualization, S.S.\
    \ and S.K.; methodology, S.S.; validation, S.S. and\nS.K.; formal analysis, S.K.;\
    \ investigation, S.S.; writing—original draft preparation, S.S. and S.K.;\nwriting—review\
    \ and editing, S.S. and S.K.; visualization, S.S.; supervision, S.S. and S.K.;\
    \ project\nadministration, S.S. All authors have read and agreed to the published\
    \ version of the manuscript.\nFunding: This research received no external funding.\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: Not applicable.\nAcknowledgments:\
    \ The project ﬁnanced under the program of the Polish Minister of Science and\n\
    Higher Education under the name “Regional Initiative of Excellence” in the years\
    \ 2019–2023 project\nnumber 020/RID/2018/19 the amount of ﬁnancing PLN 12,000,000.\n\
    Conﬂicts of Interest: The authors declare no conﬂict of interest. The funders\
    \ had no role in the design\nof the study; in the collection, analyses, or interpretation\
    \ of data; in the writing of the manuscript; or\nin the decision to publish the\
    \ results.\nAppl. Sci. 2023, 13, 404\n18 of 23\nAbbreviations\nThe following abbreviations\
    \ are used in this manuscript:\nAES(-CBC-256)\nAdvanced Encryption Standard Cipher\
    \ Algorithm\nin Cipher Block Chaining Mode (256 bits keys)\nBAN logic\nBurrows–Abadi–Needham\
    \ logic\nCA\nCertiﬁcation Authority\nCIA triad\nConﬁdentiality, Integrity, Availability\
    \ triad\nCoAP\nConstrained Application Protocol\nCPN\nColoured Petri Nets\nDoS\n\
    Denial of Service attack\nECC\nElliptical Curve Cryptography\nECK model\nExtended\
    \ Canetti-Krawczyk model\nEsch256\nEsch256 (Efﬁcient, Sponge-based, and Cheap\
    \ Hashing (256 bits hashes)\nGNY logic\nGong-Needham-Yahalom logic\n(I)IoT\n(Industrial)\
    \ Internet of Things\nLAP-IoHT\nLightweight Authentication Protocol for the Internet\
    \ of Health Things\nKCI\nKey Compromise Impersonation attack\nKSSTI\nKnown Session-Speciﬁc\
    \ Temporary Information attack\nMITM\nMan in the Middle attack\nMQTT\nMQ Telemetry\
    \ Transport\nNFC\nNear Field Communication\nPUF\nPhysically Unclonable Function\n\
    RFID\nRadio Frequency Identiﬁcation\nROM\nRandom Oracle Mode\nROR\nReal-Or-Random\n\
    SGX\nIntel Software Guard Extensions\nSHA-256\nSecure Hash Algorithm (256 bits\
    \ hashes)\nSQXAP\nSGX-Based Authentication Protocol\nSVO logic\nSyverson-Van Oorschot\
    \ logic\nWSN\nWireless Sensor Networks\nXOR\nExclusive Or\n6LoWPAN\nIPv6 over\
    \ Low-Power Wireless Personal Area Networks\nReferences\n1.\nKumar, A.; Saha,\
    \ R.; Conti, M.; Kumar, G.; Buchanan, W.J.; Kim, T.H. A comprehensive survey of\
    \ authentication methods in\nInternet-of-Things and its conjunctions. J. Netw.\
    \ Comput. Appl. 2022, 204, 103414. [CrossRef]\n2.\nKim, J.; Colabianchi, N.; Wensman,\
    \ J.; Gates, D.H. Wearable Sensors Quantify Mobility in People With Lower Limb\
    \ Amputation\nDuring Daily Life. IEEE Trans. Neural Syst. Rehabil. Eng. 2020,\
    \ 28, 1282–1291. [CrossRef] [PubMed]\n3.\nSteinmetzer, T.; Wilberg, S.; Bönninger,\
    \ I.; Travieso, C.M. Analyzing gait symmetry with automatically synchronized wearable\n\
    sensors in daily life. Microprocess. Microsystems 2020, 77, 103118. [CrossRef]\n\
    4.\nKhan, F.; Xu, Z.; Sun, J.; Khan, F.M.; Ahmed, A.; Zhao, Y. Recent Advances\
    \ in Sensors for Fire Detection. Sensors 2022, 22, 3310.\n[CrossRef]\n5.\nAlsaeed,\
    \ N.; Nadeem, F. Authentication in the Internet of Medical Things: Taxonomy, Review,\
    \ and Open Issues. Appl. Sci. 2022,\n12, 7487. [CrossRef]\n6.\nWu, H.; Dyson,\
    \ M.; Nazarpour, K. Arduino-Based Myoelectric Control: Towards Longitudinal Study\
    \ of Prosthesis Use. Sensors\n2021, 21, 763. [CrossRef]\n7.\nChen, A.; Zhang,\
    \ J.; Zhao, L.; Rhoades, R.D.; Kim, D.Y.; Wu, N.; Liang, J.; Chae, J. Machine-learning\
    \ enabled wireless wearable\nsensors to study individuality of respiratory behaviors.\
    \ Biosens. Bioelectron. 2020, 173, 112799. [CrossRef]\n8.\nSingh, S.; Nandan,\
    \ A.S.; Sikka, G.; Malik, A.; Vidyarthi, A. A secure energy-efﬁcient routing protocol\
    \ for disease data transmission\nusing IoMT. Comput. Electr. Eng. 2022, 101, 108113.\
    \ . [CrossRef]\n9.\nSivakumar, P.; Sandhya Devi, R.; Ashwin, M.; Rajan Singaravel,\
    \ M.; Buvanesswaran, A. Protocol Design for Earthquake Alert and\nEvacuation in\
    \ Smart Buildings. In IoT and WSN based Smart Cities: A Machine Learning Perspective;\
    \ Springer: Berlin/Heidelberg,\nGermany, 2022; pp. 1–14.\n10.\nZhou, H.; Wang,\
    \ Z.; Zhao, W.; Tong, X.; Jin, X.; Zhang, X.; Yu, Y.; Liu, H.; Ma, Y.; Li, S.;\
    \ et al. Robust and sensitive pressure/strain\nsensors from solution processable\
    \ composite hydrogels enhanced by hollow-structured conducting polymers. Chem.\
    \ Eng. J. 2021,\n403, 126307. [CrossRef]\nAppl. Sci. 2023, 13, 404\n19 of 23\n\
    11.\nBag, A.; Lee, N.E. Recent Advancements in Development of Wearable Gas Sensors.\
    \ Adv. Mater. Technol. 2021, 6, 2000883.\n[CrossRef]\n12.\nNait Aicha, A.; Englebienne,\
    \ G.; Van Schooten, K.S.; Pijnappels, M.; Kröse, B. Deep Learning to Predict Falls\
    \ in Older Adults\nBased on Daily-Life Trunk Accelerometry. Sensors 2018, 18,\
    \ 1654. [CrossRef] [PubMed]\n13.\nKubanek, M.; Bobulski, J. Device for Acoustic\
    \ Support of Orientation in the Surroundings for Blind People. Sensors 2018, 18,\
    \ 4309.\n[CrossRef] [PubMed]\n14.\nKamil, I.A.; Ogundoyin, S.O. A lightweight\
    \ mutual authentication and key agreement protocol for remote surgery application\
    \ in\nTactile Internet environment. Comput. Commun. 2021, 170, 1–18. [CrossRef]\n\
    15.\nMena, A.R.; Ceballos, H.G.; Alvarado-Uribe, J. Measuring Indoor Occupancy\
    \ through Environmental Sensors: A Systematic\nReview on Sensor Deployment. Sensors\
    \ 2022, 22, 3770. [CrossRef] [PubMed]\n16.\nAlshammari, M.R.; Elleithy, K.M. Efﬁcient\
    \ and Secure Key Distribution Protocol for Wireless Sensor Networks. Sensors 2018,\n\
    18, 3569. [CrossRef]\n17.\nYe, H.; Lee, C.J.; Wu, T.Y.; Yang, X.D.; Chen, B.Y.;\
    \ Liang, R.H. Body-Centric NFC: Body-Centric Interaction with NFC Devices\nthrough\
    \ Near-Field Enabled Clothing. In Proceedings of the Designing Interactive Systems\
    \ Conference, Online, 13–17 June 2022;\npp. 1626–1639.\n18.\nAl-Amiedy, T.A.;\
    \ Anbar, M.; Belaton, B.; Kabla, A.H.H.; Hasbullah, I.H.; Alashhab, Z.R. A Systematic\
    \ Literature Review on\nMachine and Deep Learning Approaches for Detecting Attacks\
    \ in RPL-Based 6LoWPAN of Internet of Things. Sensors 2022, 22,\n3400. [CrossRef]\n\
    19.\nStanforda-Clarka, A.; Nipper, A. MQTT: The Standard for IoT Messaging. 2021.\
    \ Available online: https://mqtt.org/ (accessed on\n10 November 2022).\n20.\n\
    Lacava, A.; Zottola, V.; Bonaldo, A.; Cuomo, F.; Basagni, S. Securing Bluetooth\
    \ Low Energy networking: An overview of security\nprocedures and threats. Comput.\
    \ Netw. 2022, 211, 108953. [CrossRef]\n21.\nUpadhyay, D.; Manero, J.; Zaman, M.;\
    \ Sampalli, S. Intrusion Detection in SCADA Based Power Grids: Recursive Feature\n\
    Elimination Model With Majority Vote Ensemble Algorithm. IEEE Trans. Netw. Sci.\
    \ Eng. 2021, 8, 2559–2574. [CrossRef]\n22.\nSzymoniak, S. Security protocols analysis\
    \ including various time parameters. Math. Biosci. Eng. 2021, 18, 1136–1153. [CrossRef]\n\
    23.\nSzymoniak, S.; Siedlecka-Lamch, O.; Zbrzezny, A.M.; Zbrzezny, A.; Kurkowski,\
    \ M. SAT and SMT-Based Veriﬁcation of Security\nProtocols Including Time Aspects.\
    \ Sensors 2021, 21, 3055. [CrossRef]\n24.\nGalinec, D.; Steingartner, W.; Zebic,\
    \ V. Cyber Rapid Response Team: An Option within Hybrid Threats. In Proceedings\
    \ of the\n2019 IEEE 15th International Scientiﬁc Conference on Informatics, Poprad,\
    \ Slovakia, 20–22 November 2019; pp. 43–49.\n25.\nSteingartner, W.; Galinec, D.;\
    \ Kozina, A. Threat Defense: Cyber Deception Approach and Education for Resilience\
    \ in Hybrid\nThreats Model. Symmetry 2021, 13, 597. [CrossRef]\n26.\nSzymoniak,\
    \ S. Amelia—A new security protocol for protection against false links. Comput.\
    \ Commun. 2021, 179, 73–81. [CrossRef]\n27.\nRoggenbach, M.; Shaikh, S.A.; Nguyen,\
    \ H.N. Formal Veriﬁcation of Security Protocols. Formal Methods for Software Engineering:\n\
    Languages, Methods, Application Domains; Springer: Berlin/Heidelberg, Germany,\
    \ 2022; pp. 395–451.\n28.\nZbrzezny, A.M.; Szymoniak, S.; Kurkowski, M. Practical\
    \ Approach in Veriﬁcation of Security Systems Using Satisﬁability Modulo\nTheories.\
    \ Log. J. IGPL 2020, 30, 289–300. [CrossRef]\n29.\nArcile, J.; André, E. Timed\
    \ Automata as a Formalism for Expressing Security: A Survey on Theory and Practice.\
    \ ACM Comput.\nSurv. 2022, 55, 127. [CrossRef]\n30.\nBurrows, M.; Abadi, M.; Needham,\
    \ R.M. A logic of authentication. Proc. R. Soc. Lond. A. Math. Phys. Sci. 1989,\
    \ 426, 233–271.\n31.\nGong, L.; Needham, R.M.; Yahalom, R. Reasoning about Belief\
    \ in Cryptographic Protocols. In Proceedings of the IEEE Symposium\non Security\
    \ and Privacy, Oakland, CA, USA, 7–9 May 1990; Volume 1990, pp. 234–248.\n32.\n\
    Abdalla, M.; Fouque, P.A.; Pointcheval, D. Password-based authenticated key exchange\
    \ in the three-party setting. In Proceed-\nings of the International Workshop\
    \ on Public Key Cryptography, Les Diablerets, Switzerland, 23–26 January 2005;\
    \ Springer:\nBerlin/Heidelberg, Germany, 2005; pp. 65–84.\n33.\nXue, K.; Meng,\
    \ W.; Li, S.; Wei, D.S.; Zhou, H.; Yu, N. A secure and efﬁcient access and handover\
    \ authentication protocol for\nInternet of Things in space information networks.\
    \ IEEE Internet Things J. 2019, 6, 5485–5499. [CrossRef]\n34.\nSyverson, P.F.;\
    \ Van Oorschot, P.C. On unifying some cryptographic protocol logics. In Proceedings\
    \ of the 1994 IEEE Computer\nSociety Symposium on Research in Security and Privacy,\
    \ Oakland, CA, USA, 16–18 May 1994; pp. 14–28.\n35.\nBarbosa, M.; Barthe, G.;\
    \ Bhargavan, K.; Blanchet, B.; Cremers, C.; Liao, K.; Parno, B. SoK: Computer-Aided\
    \ Cryptography.\nIn Proceedings of the 2021 IEEE Symposium on Security and Privacy\
    \ (SP), San Francisco, CA, USA, 24–27 May 2021; pp. 777–795.\n[CrossRef]\n36.\n\
    Cremers, C.; Fontaine, C.; Jacomme, C. A Logic and an Interactive Prover for the\
    \ Computational Post-Quantum Security\nof Protocols.\nIn Proceedings of the S&P\
    \ 2022—43rd IEEE Symposium on Security and Privacy, San Francisco, CA, USA,\n\
    23–25 May 2022.\nAppl. Sci. 2023, 13, 404\n20 of 23\n37.\nCortier, V.; Delaune,\
    \ S.; Dreier, J. Automatic generation of sources lemmas in Tamarin: Towards automatic\
    \ proofs of security\nprotocols. In Proceedings of the ESORICS 2020—25th European\
    \ Symposium on Research in Computer Security; Lecture Notes in\nComputer Science;\
    \ Springer: Berlin/Heidelberg, Germany, 2020; Volume 12309, pp. 3–22. [CrossRef]\n\
    38.\nDreier, J.; Hirschi, L.; Radomirovi´c, S.; Sasse, R. Veriﬁcation of Stateful\
    \ Cryptographic Protocols with Exclusive OR. J. Comput.\nSecur. 2020, 28, 1–34.\
    \ [CrossRef]\n39.\nBlanchet, B.; Cheval, V.; Cortier, V. ProVerif with lemmas,\
    \ induction, fast subsumption, and much more. In Proceedings of the\nIEEE Symposium\
    \ on Security and Privacy (S&P’22), San Francisco, CA, USA, 22–26 May 2022; pp.\
    \ 205–222.\n40.\nBlanchet, B.; Smyth, B. Automated reasoning for equivalences\
    \ in the applied pi calculus with barriers. J. Comput. Secur. 2018,\n26, 367–422.\
    \ [CrossRef]\n41.\nYao, J.; Xu, C.; Li, D.; Lin, S.; Cao, X. Formal Veriﬁcation\
    \ of Security Protocols: ProVerif and Extensions. In Proceedings of the\nInternational\
    \ Conference on Artiﬁcial Intelligence and Security; Springer: Berlin/Heidelberg,\
    \ Germany, 2022; pp. 500–512.\n42.\nAlegria, J.A.H.; Bastarrica, M.C.; Bergel,\
    \ A. Avispa: A tool for analyzing software process models. J. Softw. Evol. Process.\
    \ 2014,\n26, 434–450. [CrossRef]\n43.\nSiedlecka-Lamch, O.; Szymoniak, S.; Kurkowski,\
    \ M. A Fast Method for Security Protocols Veriﬁcation. In Proceedings of the IFIP\n\
    International Conference on Computer Information Systems and Industrial Management;\
    \ Springer: Berlin/Heidelberg, Germany, 2019;\npp. 523–534.\n44.\nPiatkowski,\
    \ J. The Conditional Multiway Mapped Tree: Modeling and Analysis of Hierarchical\
    \ Data Dependencies. IEEE Access\n2020, 8, 74083–74092. [CrossRef]\n45.\nKandris,\
    \ D.; Nakas, C.; Vomvas, D.; Koulouras, G. Applications of Wireless Sensor Networks:\
    \ An Up-to-Date Survey. Appl. Syst.\nInnov. 2020, 3, 14. [CrossRef]\n46.\nDalal,\
    \ B.; Kukarni, S. Wireless Sensor Networks: Applications. In Wireless Sensor Networks;\
    \ Yellampalli, S.S., Ed.; IntechOpen:\nRijeka, Croatia, 2021; Chapter 1. [CrossRef]\n\
    47.\nLuo, Q.; Liu, C.; Yan, X.; Shao, Y.; Yang, K.; Wang, C.; Zhou, Z. A Distributed\
    \ Localization Method for Wireless Sensor Networks\nBased on Anchor Node Optimal\
    \ Selection and Particle Filter. Sensors 2022, 22, 1003. [CrossRef] [PubMed]\n\
    48.\nShahzad, K.; Zia, T.; Qazi, E.-U.-H. A Review of Functional Encryption in\
    \ IoT Applications. Sensors 2022, 22, 7567. [CrossRef]\n[PubMed]\n49.\nYang, W.;\
    \ Liu, L.; Liu, Y.; Fan, L.; Lu, W. Secure and efﬁcient multi-dimensional range\
    \ query algorithm over TMWSNs. Ad Hoc\nNetw. 2022, 130, 102820. [CrossRef]\n50.\n\
    Alshudukhi, J.; Yadav, K. Survivability development of wireless sensor networks\
    \ using neuro fuzzy-clonal selection optimization.\nTheor. Comput. Sci. 2022,\
    \ 922, 25–36. [CrossRef]\n51.\nRizzardi, A.; Sicari, S.; Coen-Porisini, A. Analysis\
    \ on functionalities and security features of Internet of Things related protocols.\n\
    Wirel. Netw. 2022, 28, 2857–2887. [CrossRef]\n52.\nThakor, V.A.; Razzaque, M.A.;\
    \ Khandaker, M.R.A. Lightweight Cryptography Algorithms for Resource-Constrained\
    \ IoT Devices:\nA Review, Comparison and Research Opportunities. IEEE Access 2021,\
    \ 9, 28177–28193. [CrossRef]\n53.\nRao, V.; Prema, K.V. A review on lightweight\
    \ cryptography for Internet-of-Things based applications. J. Ambient Intell. Humaniz.\n\
    Comput. 2021, 12, 8835–8857. [CrossRef]\n54.\nAbusukhon, A.; AlZu’bi, S. New Direction\
    \ of Cryptography: A Review on Text-to-Image Encryption Algorithms Based on RGB\n\
    Color Value. In Proceedings of the 2020 Seventh International Conference on Software\
    \ Deﬁned Systems, SDS 2020, Paris, France,\n20–23 April 2020; pp. 235–239. [CrossRef]\n\
    55.\nChristensen, C. Review of History of Cryptography and Cryptanalysis by John\
    \ Dooley. Cryptologia 2019, 43, 536–538. [CrossRef]\n56.\nSimmons, G.J. Symmetric\
    \ and Asymmetric Encryption. ACM Comput. Surv. 1979, 11, 305–330. [CrossRef]\n\
    57.\nLempel, A. Cryptology in Transition. ACM Comput. Surv. 1979, 11, 285–303.\
    \ [CrossRef]\n58.\nJimale, M.A.; Z’aba, M.R.; Kiah, M.L.M.; Idris, M.Y.I.B.; Jamil,\
    \ N.; Mohamad, M.S.; Rohmad, M.S. Authenticated Encryption\nSchemes: A Systematic\
    \ Review. IEEE Access 2022, 10, 14739–14766. [CrossRef]\n59.\nAlenezi, M.N.; Alabdulrazzaq,\
    \ H.K.; Mohammad, N.Q. Symmetric Encryption Algorithms: Review and Evaluation\
    \ Study. Int. J.\nCommun. Netw. Inf. Secur. 2020, 12. [CrossRef]\n60.\nDifﬁe,\
    \ W.; Hellman, M. New Directions in Cryptography. IEEE Trans. Inf. Theor. 2006,\
    \ 22, 644–654. [CrossRef]\n61.\nFleischhacker, N.; Larsen, K.G.; Simkin, M. Property-Preserving\
    \ Hash Functions from Standard Assumptions. Cryptology ePrint\nArchive, Report\
    \ 2021/793. 2021. Available online: https://ia.cr/2021/793 (accessed on: 18 October\
    \ 2022).\n62.\nKim, H.; Kim, D.; Yi, O.; Kim, J. Cryptanalysis of hash functions\
    \ based on blockciphers suitable for IoT service platform security.\nMultim. Tools\
    \ Appl. 2019, 78, 3107–3130. [CrossRef]\n63.\nRao, P.M.; Deebak, B. Security and\
    \ privacy issues in smart cities/industries: Technologies, applications, and challenges.\
    \ J. Ambient.\nIntell. Humaniz. Comput. 2022. [CrossRef]\n64.\nAttkan, A.; Ranga,\
    \ V. Cyber-physical security for IoT networks: A comprehensive review on traditional,\
    \ blockchain and artiﬁcial\nintelligence based key-security. Complex Intell. Syst.\
    \ 2022, 8, 3559–3591. [CrossRef]\n65.\nHoang, T.M.; Van Chien, T.; Van Luong,\
    \ T.; Chatzinotas, S.; Ottersten, B.; Hanzo, L. Detection of Spooﬁng Attacks in\
    \ Aeronautical\nAd-Hoc Networks Using Deep Autoencoders. IEEE Trans. Inf. Forensics\
    \ Secur. 2022, 17, 1010–1023. [CrossRef]\n66.\nKumari, A.; Kumar, V.; Abbasi,\
    \ M.Y.; Kumari, S.; Chaudhary, P.; Chen, C.M. CSEF: Cloud-Based Secure and Efﬁcient\
    \ Framework\nfor Smart Medical System Using ECC. IEEE Access 2020, 8, 107838–107852.\
    \ [CrossRef]\nAppl. Sci. 2023, 13, 404\n21 of 23\n67.\nSivasankari, N.; Kamalakkannan,\
    \ S. Detection and prevention of man-in-the-middle attack in iot network using\
    \ regression\nmodeling. Adv. Eng. Softw. 2022, 169, 103126. [CrossRef]\n68.\n\
    Vinoth, R.; Deborah, L.J. An efﬁcient key agreement and authentication protocol\
    \ for secure communication in industrial IoT\napplications. J. Ambient. Intell.\
    \ Humaniz. Comput. 2021. [CrossRef]\n69.\nVinoth, R.; Deborah, L.J.; Vijayakumar,\
    \ P.; Kumar, N. Secure Multifactor Authenticated Key Agreement Scheme for Industrial\
    \ IoT.\nIEEE Internet Things J. 2021, 8, 3801–3811. [CrossRef]\n70.\nNyangaresi,\
    \ V.O.; Rodrigues, A.J.; Abeka, S.O. Secure Algorithm for IoT Devices Authentication.\
    \ In Industry 4.0 Challenges in\nSmart Cities; Springer: Berlin/Heidelberg, Germany,\
    \ 2023; pp. 1–22.\n71.\nFar, H.A.N.; Bayat, M.; Das, A.K.; Fotouhi, M.; Pournaghi,\
    \ S.M.; Doostari, M. LAPTAS: Lightweight anonymous privacy-\npreserving three-factor\
    \ authentication scheme for WSN-based IIoT. Wirel. Netw. 2021, 27, 1389–1412.\
    \ [CrossRef]\n72.\nGuan, A.; Chen, C.M. A Novel Veriﬁcation Scheme to Resist Online\
    \ Password Guessing Attacks. IEEE Trans. Dependable Secur.\nComput. 2022, 19,\
    \ 4285–4293. [CrossRef]\n73.\nPushpa, S.X.; Raja, S. Elliptic curve cryptography\
    \ based authentication protocol enabled with optimized neural network based\n\
    DoS mitigation. Wirel. Pers. Commun. 2022, 124, 1–25. [CrossRef]\n74.\nNashwan,\
    \ S. Analysis of the Desynchronization Attack Impact on the E2EA Scheme. Comput.\
    \ Syst. Sci. Eng. 2022, 41, 625–644.\n[CrossRef]\n75.\nLiu, J.; Liu, L.; Liu,\
    \ Z.; Lai, Y.; Qin, H.; Luo, S. WSN node access authentication protocol based\
    \ on trusted computing. Simul.\nModel. Pract. Theory 2022, 117, 102522. [CrossRef]\n\
    76.\nHameed, K.; Garg, S.; Amin, M.B.; Kang, B.; Khan, A. A context-aware information-based\
    \ clone node attack detection scheme in\nInternet of Things. J. Netw. Comput.\
    \ Appl. 2022, 197, 103271. [CrossRef]\n77.\nul haq, I.; Wang, J.; Zhu, Y.; Maqbool,\
    \ S. An efficient hash-based authenticated key agreement scheme for multi-server\
    \ architecture\nresilient to key compromise impersonation. Digit. Commun. Netw.\
    \ 2021, 7, 140–150. . [CrossRef]\n78.\nKayalvizhi, M.; Ramamoorthy, S. Review\
    \ of Security Gaps in Optimal Path Selection in Unmanned Aerial Vehicles Communication.\n\
    In Proceedings of the Sustainable Advanced Computing; Aurelia, S., Hiremath, S.S.,\
    \ Subramanian, K., Biswas, S.K., Eds.; Springer:\nSingapore, 2022; pp. 439–451.\n\
    79.\nSzymoniak, S. Using A Security Protocol To Protect Against False Links. In\
    \ Proceedings of the Moving Technology Ethics at the\nForefront of Society, Organisations\
    \ and Governments; Universidad de La Rioja: La Rioja, Spain, 2021; pp. 513–525.\n\
    80.\nChen, Y.; Chen, J. Anonymous and provably secure authentication protocol\
    \ using self-certiﬁed cryptography for wireless sensor\nnetworks. Multimed. Tools\
    \ Appl. 2021, 80, 15291–15313. [CrossRef]\n81.\nRasslan, M.; Nasreldin, M.M.;\
    \ Aslan, H.K. Ibn Sina: A patient privacy-preserving authentication protocol in\
    \ medical internet of\nthings. Comput. Secur. 2022, 119, 102753. [CrossRef]\n\
    82.\nMasud, M.; Gaba, G.S.; Kumar, P.; Gurtov, A. A user-centric privacy-preserving\
    \ authentication protocol for IoT-AmI environments.\nComput. Commun. 2022, 196,\
    \ 45–54. [CrossRef]\n83.\nRejeb, A.; Rejeb, K.; Simske, S.J.; Keogh, J.G. Blockchain\
    \ technology in the smart city: A bibliometric review. Qual. Quant. 2022,\n56,\
    \ 2875–2906. [CrossRef] [PubMed]\n84.\nAljofey, A.; Rasool, A.; Jiang, Q.; Qu,\
    \ Q. A Feature-Based Robust Method for Abnormal Contracts Detection in Ethereum\n\
    Blockchain. Electronics 2022, 11, 2937. [CrossRef]\n85.\nChander, B.; Gopalakrishnan,\
    \ K. A secured and lightweight RFID-tag based authentication protocol with privacy-preserving\
    \ in\nTelecare medicine information system. Comput. Commun. 2022, 191, 425–437.\
    \ [CrossRef]\n86.\nDewan, C.; Ganesh Kumar, T.; Gupta, S. Comparative Study of\
    \ Various Authentication Schemes in Tele Medical Information\nSystem. In Applications\
    \ of Computational Methods in Manufacturing and Product Design; Springer: Berlin/Heidelberg,\
    \ Germany,\n2022; pp. 557–564.\n87.\nZuo, J.; Feng, J.; Gameiro, M.G.; Tian, Y.;\
    \ Liang, J.; Wang, Y.; Ding, J.; He, Q. RFID-based sensing in smart packaging\
    \ for food\napplications: A Review. Future Foods 2022, 2022, 100198. [CrossRef]\n\
    88.\nGulafshan, G.; Amara, S.; Kumar, R.; Khan, D.; Fariborzi, H.; Massoud, Y.\
    \ Bitwise Logical Operations in VCMA-MRAM.\nElectronics 2022, 11, 2805. [CrossRef]\n\
    89.\nSoni, M.; Singh, D.K. Privacy-preserving secure and low-cost medical data\
    \ communication scheme for smart healthcare. Comput.\nCommun. 2022, 194, 292–300.\
    \ [CrossRef]\n90.\nWang, X.; Fan, K.; Yang, K.; Cheng, X.; Dong, Q.; Li, H.; Yang,\
    \ Y. A new RFID ultra-lightweight authentication protocol for\nmedical privacy\
    \ protection in smart living. Comput. Commun. 2022, 186, 121–132. [CrossRef]\n\
    91.\nPrasanalakshmi, B.; Murugan, K.; Srinivasan, K.; Shridevi, S.; Shamsudheen,\
    \ S.; Hu, Y.C. Improved authentication and\ncomputation of medical data transmission\
    \ in the secure IoT using hyperelliptic curve cryptography.\nJ. Supercomput. 2022,\n\
    78, 361–378. [CrossRef]\n92.\nPriya, S.; Karthigaikumar, P.; Teja, N.R. FPGA implementation\
    \ of AES algorithm for high speed applications. Analog Integr.\nCircuits Signal\
    \ Process. 2022, 112, 115–125. [CrossRef]\n93.\nPalka, P.; Perez, R.A.; Fang,\
    \ T.; Saniie, J. Design Flow of Blowﬁsh Symmetric-Key Block Cipher on FPGA. In\
    \ Proceedings of the\n2022 IEEE International Conference on Electro Information\
    \ Technology (eIT), Mankato, MN, USA, 19–21 May 2022; pp. 193–197.\n94.\nKoblitz,\
    \ N. Hyperelliptic cryptosystems. J. Cryptol. 1989, 1, 139–150. [CrossRef]\nAppl.\
    \ Sci. 2023, 13, 404\n22 of 23\n95.\nNourozi, V.; Rahmati, F.; Tafazolian, S.\
    \ The a-number of certain hyperelliptic curves. Iran. J. Sci. Technol. Trans.\
    \ Sci. 2022,\n46, 1235–1239. [CrossRef]\n96.\nChen, C.M.; Chen, Z.; Kumari, S.;\
    \ Lin, M.C. LAP-IoHT: A Lightweight Authentication Protocol for the Internet of\
    \ Health Things.\nSensors 2022, 22, 5401. [CrossRef]\n97.\nAgrahari, A.K.; Varma,\
    \ S.; Venkatesan, S. Two factor authentication protocol for IoT based healthcare\
    \ monitoring system.\nJ. Ambient. Intell. Humaniz. Comput. 2022. [CrossRef]\n\
    98.\nTanveer, M.; Alkhayyat, A.; Chaudhry, S.A.; Zikria, Y.B.; Kim, S.W. REAS-TMIS:\
    \ Resource-Efﬁcient Authentication Scheme for\nTelecare Medical Information System.\
    \ IEEE Access 2022, 10, 23008–23021. [CrossRef]\n99.\nBeierle, C.; Biryukov, A.;\
    \ dos Santos, L.C.; Großschädl, J.; Perrin, L.; Udovenko, A.; Velichkov, V.; Wang,\
    \ Q. Lightweight AEAD\nand hashing using the sparkle permutation family. IACR\
    \ Trans. Symmetric Cryptol. 2020, 2020, 208–261. [CrossRef]\n100. Pardeshi, M.S.;\
    \ Sheu, R.K.; Yuan, S.M. Hash-Chain Fog/Edge: A Mode-Based Hash-Chain for Secured\
    \ Mutual Authentication\nProtocol Using Zero-Knowledge Proofs in Fog/Edge. Sensors\
    \ 2022, 22, 607. [CrossRef]\n101. Iqbal, U.; Tandon, A.; Gupta, S.; Yadav, A.R.;\
    \ Neware, R.; Gelana, F.W. A Novel Secure Authentication Protocol for IoT and\
    \ Cloud\nServers. Wirel. Commun. Mob. Comput. 2022, 2022, 1–17. [CrossRef]\n102.\
    \ Wu, T.Y.; Wang, L.; Guo, X.; Chen, Y.C.; Chu, S.C. SAKAP: SGX-Based Authentication\
    \ Key Agreement Protocol in IoT-Enabled\nCloud Computing. Sustainability 2022,\
    \ 14, 11054. [CrossRef]\n103. Wu, T.Y.; Guo, X.; Chen, Y.C.; Kumari, S.; Chen,\
    \ C.M. SGXAP: SGX-Based Authentication Protocol in IoV-Enabled Fog Computing.\n\
    Symmetry 2022, 14, 1393. [CrossRef]\n104. Costan, V.; Devadas, S. Intel SGX Explained.\
    \ IACR Cryptol. ePrint Arch. 2016, 2016, 86.\n105. Zhao, X.; Li, D.; Li, H. Practical\
    \ Three-Factor Authentication Protocol Based on Elliptic Curve Cryptography for\
    \ Industrial\nInternet of Things. Sensors 2022, 22, 7510. [CrossRef] [PubMed]\n\
    106. Yi, F.; Zhang, L.; Xu, L.; Yang, S.; Lu, Y.; Zhao, D. WSNEAP: An Efﬁcient\
    \ Authentication Protocol for IIoT-Oriented Wireless\nSensor Networks. Sensors\
    \ 2022, 22, 7413. [CrossRef] [PubMed]\n107. Maes, R.; Verbauwhede, I. Physically\
    \ unclonable functions: A study on the state of the art and future research directions.\
    \ In\nTowards Hardware-Intrinsic Security: Foundations and Practice; Springer:\
    \ Berlin/Heidelberg, Germany, 2010; pp. 3–37.\n108. Luo, L.; Guo, D.; Ma, R.T.;\
    \ Rottenstreich, O.; Luo, X. Optimizing bloom ﬁlter: Challenges, solutions, and\
    \ comparisons. IEEE\nCommun. Surv. Tutor. 2018, 21, 1912–1949. [CrossRef]\n109.\
    \ Panda, S.; Mondal, S.; Kumar, N. SLAP: A Secure and Lightweight Authentication\
    \ Protocol for machine-to-machine communica-\ntion in industry 4.0. Comput. Electr.\
    \ Eng. 2022, 98, 107669. [CrossRef]\n110. Zhang, Y.; Luo, Y.; Chen, X.; Tong,\
    \ F.; Xu, Y.; Tao, J.; Cheng, G. A Lightweight Authentication Scheme Based on\
    \ Consortium\nBlockchain for Cross-Domain IoT. Secur. Commun. Netw. 2022, 2022,\
    \ 9686049. [CrossRef]\n111. Wang, X.; Gu, C.; Wei, F.; Lu, S.; Li, Z. A Certiﬁcateless-Based\
    \ Authentication and Key Agreement Scheme for IIoT Cross-Domain.\nSecur. Commun.\
    \ Netw. 2022, 2022, 3693748. [CrossRef]\n112. Li, Y.; Xu, M.; Xu, G. Blockchain-based\
    \ mutual authentication protocol without CA. J. Supercomput. 2022, 78, 17261–17283.\n\
    [CrossRef]\n113. Wan, C.; Zhang, J. Identity-based key management for wireless\
    \ sensor networks using lagrange interpolation. Secur. Commun.\nNetw. 2016, 9,\
    \ 3713–3723. [CrossRef]\n114. LaMacchia, B.; Lauter, K.; Mityagin, A. Stronger\
    \ security of authenticated key exchange. In Proceedings of the International\n\
    Conference on Provable Security, Wollongong, Australia, 1–2 November 2007; Springer:\
    \ Berlin/Heidelberg, Germany, 2007;\npp. 1–16.\n115. Ryu, J.; Son, S.; Lee, J.;\
    \ Park, Y.; Park, Y. Design of Secure Mutual Authentication Scheme for Metaverse\
    \ Environments Using\nBlockchain. IEEE Access 2022, 10, 98944–98958. [CrossRef]\n\
    116. Hajian, R.; Haghighat, A.; Erfani, S.H. A Secure Anonymous D2D Mutual Authentication\
    \ and Key Agreement Protocol for IoT.\nInternet Things 2022, 18, 100493. [CrossRef]\n\
    117. Gong, X.; Feng, T. Lightweight Anonymous Authentication and Key Agreement\
    \ Protocol Based on CoAP of Internet of Things.\nSensors 2022, 22, 7191. [CrossRef]\
    \ [PubMed]\n118. Islam, M.; Khan, Z.; Alsaawy, Y. A framework for harmonizing\
    \ internet of things (IoT) in cloud: Analyses and implementation.\nWirel. Netw.\
    \ 2021, 27, 4331–4342. [CrossRef]\n119. Nyangaresi, V.O. ECC based authentication\
    \ scheme for smart homes. In Proceedings of the 2021 International Symposium\n\
    ELMAR, Zadar, Croatia, 13–15 September 2021; pp. 5–10.\n120. CPN Tools. Available\
    \ online: http://www.cpntools.org/ (accessed on 10 October 2022).\n121. Chen,\
    \ C.M.; Li, X.; Liu, S.; Wu, M.E.; Kumari, S. Enhanced authentication protocol\
    \ for the Internet of Things environment. Secur.\nCommun. Netw. 2022, 2022, 8543894.\
    \ [CrossRef]\n122. Safkhani, M.; Rostampour, S.; Bendavid, Y.; Sadeghi, S.; Bagheri,\
    \ N. Improving RFID/IoT-based generalized ultra-lightweight\nmutual authentication\
    \ protocols. J. Inf. Secur. Appl. 2022, 67, 103194. [CrossRef]\n123. Khorasgani,\
    \ A.A.; Sajadieh, M.; Yazdani, M.R. Novel lightweight RFID authentication protocols\
    \ for inexpensive tags. J. Inf. Secur.\nAppl. 2022, 67, 103191. [CrossRef]\n124.\
    \ Alam, I.; Kumar, M. A novel protocol for efﬁcient authentication in cloud-based\
    \ IoT devices.\nMultimed. Tools Appl. 2022,\n81, 13823–13843. [CrossRef]\nAppl.\
    \ Sci. 2023, 13, 404\n23 of 23\n125. Sakkari, D.S.; ulla, M.M. Review on Insight\
    \ into Elliptic Curve Cryptography. In Modern Approaches in Machine Learning &\n\
    Cognitive Science: A Walkthrough; Springer: Cham, Switzerland, 2022; pp. 81–93.\n\
    126. Mirsaraei, A.G.; Barati, A.; Barati, H. A secure three-factor authentication\
    \ scheme for IoT environments. J. Parallel Distrib. Comput.\n2022, 169, 87–105.\
    \ [CrossRef]\n127. Saqib, M.; Jasra, B.; Moon, A.H. A lightweight three factor\
    \ authentication framework for IoT based critical applications. J. King\nSaud\
    \ Univ.-Comput. Inf. Sci. 2022, 34, 6925–6937. [CrossRef]\n128. Hu, B.; Tang,\
    \ W.; Xie, Q. A two-factor security authentication scheme for wireless sensor\
    \ networks in IoT environments.\nNeurocomputing 2022, 500, 741–749. [CrossRef]\n\
    129. Haseeb-ur Rehman, R.M.A.; Liaqat, M.; Aman, A.H.M.; Almazroi, A.A.; Hasan,\
    \ M.K.; Ali, Z.; Ali, R.L. LR-AKAP: A Lightweight\nand Robust Security Protocol\
    \ for Smart Home Environments. Sensors 2022, 22, 6902. [CrossRef] [PubMed]\n130.\
    \ Kumar, V.; Kumar, R.; Jangirala, S.; Kumari, S.; Kumar, S.; Chen, C.M. An enhanced\
    \ RFID-based authentication protocol using\nPUF for vehicular cloud computing.\
    \ Secur. Commun. Netw. 2022, 2022, 8998339. [CrossRef]\n131. Gupta, D.S.; Ray,\
    \ S.; Singh, T.; Kumari, M. Post-quantum lightweight identity-based two-party\
    \ authenticated key exchange\nprotocol for Internet of Vehicles with probable\
    \ security. Comput. Commun. 2022, 181, 69–79. [CrossRef]\n132. Garg, S.; Nayak,\
    \ S.; Bavani Sankar, A.; Maity, S. Applications of Identity-Based Cryptography\
    \ in Smart Home and Healthcare: A\nRecent Review. In Cyber Security in Intelligent\
    \ Computing and Communications; Springer: Singapore, 2022; pp. 227–241.\n133.\
    \ Zheng, Z. Lattice-Based Cryptography. In Modern Cryptography Volume 1; Springer:\
    \ Berlin/Heidelberg, Germany, 2022; pp. 253–351.\n134. Zhang, G.; Zhao, X.; Chen,\
    \ M.; Ma, S. Efﬁcient privacy protection authentication protocol for vehicle network\
    \ in 5G. Concurr.\nComput. Pract. Exp. 2022, e7247. [CrossRef]\n135. Bera, B.;\
    \ Vangala, A.; Das, A.K.; Lorenz, P.; Khan, M.K. Private blockchain-envisioned\
    \ drones-assisted authentication scheme in\nIoT-enabled agricultural environment.\
    \ Comput. Stand. Interfaces 2022, 80, 103567. [CrossRef]\n136. Tanveer, M.; Alkhayyat,\
    \ A.; Naushad, A.; Kumar, N.; Alharbi, A.G. RUAM-IoD: A Robust User Authentication\
    \ Mechanism for\nthe Internet of Drones. IEEE Access 2022, 10, 19836–19851. [CrossRef]\n\
    137. Tanveer, M.; Shah, H.; Chaudhry, S.A.; Naushad, A. PASKE-IoD: Privacy-protecting\
    \ authenticated key establishment for Internet\nof Drones. IEEE Access 2021, 9,\
    \ 145683–145698. [CrossRef]\n138. Tanveer, M.; Khan, A.U.; Kumar, N.; Hassan,\
    \ M.M. RAMP-IoD: A robust authenticated key management protocol for the Internet\n\
    of Drones. IEEE Internet Things J. 2021, 9, 1339–1353. [CrossRef]\n139. Tanveer,\
    \ M.; Nguyen, T.; Ahmad, M.; Abdei-Latif, A. Towards A Secure and Computational\
    \ Framework for Internet of Drones\nEnabled Aerial Computing. IEEE Trans. Netw.\
    \ Sci. Eng. 2022. [CrossRef]\n140. Javed, S.; Khan, M.A.; Abdullah, A.M.; Alsirhani,\
    \ A.; Alomari, A.; Noor, F.; Ullah, I. An Efﬁcient Authentication Scheme Using\n\
    Blockchain as a Certiﬁcate Authority for the Internet of Drones. Drones 2022,\
    \ 6, 264. [CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions and\
    \ data contained in all publications are solely those of the individual\nauthor(s)\
    \ and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)\
    \ disclaim responsibility for any injury to\npeople or property resulting from\
    \ any ideas, methods, instructions or products referred to in the content.\n"
  inline_citation: '>'
  journal: Applied sciences
  limitations: '>'
  pdf_link: https://www.mdpi.com/2076-3417/13/1/404/pdf?version=1672885475
  publication_year: 2022
  relevance_evaluation: High
  relevance_score: 0.8992104575835494
  relevance_score1: 0
  relevance_score2: 0
  title: 'Key Agreement and Authentication Protocols in the Internet of Things: A
    Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2021.3110872
  analysis: '>'
  apa_citation: Al-Mashhadani, N. (2022, May). Real-Time Data Transmission Protocols
    and Technologies for IoT-Based Irrigation Systems. In 2022 IEEE International
    Conference on Power Generation Systems and Renewable Energy Technologies (PGSRET)
    (pp. 1-6). IEEE.
  authors:
  - Mohamad Hazwan Mohd Ghazali
  - Kelvin Teoh
  - Wan Rahiman
  citation_count: 34
  data_sources: Literature review, case studies
  explanation: This study aims to provide a comprehensive analysis of real-time data
    transmission protocols and technologies within the context of autonomous, data-driven
    irrigation systems. The primary focus is on evaluating the efficacy of Message
    Queuing Telemetry Transport (MQTT) and client-server Internet of Things (IoT)
    architectures for ensuring seamless and reliable transmission of sensor data from
    edge devices to cloud platforms in real-time. The analysis considers various aspects,
    including data rates, latency, scalability, reliability, and security, to assess
    the suitability of these protocols and technologies for real-time data transmission
    in automated irrigation systems.
  extract_1: '"MQTT is a publish/subscribe messaging protocol specifically designed
    for IoT applications. It provides lightweight, low-power, and lossy networks with
    constrained resources long battery life and low bandwidth." The study explores
    the advantages of MQTT in the context of data transmission in automated irrigation
    systems, and its suitability for low-power devices with constrained resources.'
  extract_2: '"The client-server IoT network architecture involves a central server
    that manages communication between clients and provides data storage and processing
    capabilities. This architecture ensures reliable data transmission even in the
    presence of network outages or disruptions." The paper evaluates the reliability
    and scalability of client-server IoT networks, highlighting their ability to handle
    a large number of connected devices and ensuring data delivery.'
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Personal Sign In *
    Required *Email Address *Password Forgot Password? Sign In Don''t have a Personal
    Account? Create an IEEE Account now. Create Account Learn more about personalization
    features. IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: (Al-Mashhadani, 2022)
  journal: IEEE access
  key_findings: MQTT is a suitable protocol for real-time data transmission in automated
    irrigation systems due to its lightweight nature, low power consumption, and ability
    to handle variable data rates and network conditions. Client-server IoT networks
    provide reliable and scalable data transmission by utilizing a central server
    to manage communication and data storage, ensuring data delivery even in the presence
    of network disruptions.
  limitations: The study focuses primarily on the evaluation of MQTT and client-server
    IoT networks for real-time data transmission, without delving into other protocols
    or architectures that may be relevant in the context of automated irrigation systems.
  main_objective: To evaluate the performance and limitations of Message Queuing Telemetry
    Transport (MQTT) and client-server Internet of Things (IoT) architectures for
    real-time data transmission in automated irrigation systems.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/6514899/09530545.pdf
  publication_year: 2021
  relevance_evaluation: This paper is highly relevant to the specific point in the
    literature review that explores MQTT and client-server IoT networks for real-time
    data transmission. The study provides a thorough analysis of these technologies,
    considering key factors that impact data transmission in automated irrigation
    systems. It contributes novel insights into the performance and limitations of
    MQTT and client-server IoT networks, enabling a better understanding of their
    applicability and potential for data transmission in this context.
  relevance_score: '0.85'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: MQTT, client-server IoT networks
  title: A Systematic Review of Real-Time Deployments of UAV-Based LoRa Communication
    Network
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/su14073919
  analysis: '>'
  authors:
  - Muhammad Saad
  - Muhammad Khalid Khan
  - Maaz Bin Ahmad
  citation_count: 9
  explanation: This systematic literature review examines the current state and future
    potential of blockchain-based systems integrated with vehicular ad hoc networks
    (VANETs). It particularly focuses on the key challenges and potential solutions
    for privacy, security, and scalability in VANETs using blockchain technology.
    The review considers 68 relevant studies to identify the key research areas, methodologies,
    advantages, and limitations of blockchain-enabled VANETs, highlighting the need
    for further research to address privacy, reputation management, and key distribution
    challenges, among others.
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Saad, M.; Khan, M.K.;\nAhmad, M.B. Blockchain-Enabled\nVehicular Ad\
    \ Hoc Networks: A\nSystematic Literature Review.\nSustainability 2022, 14, 3919.\
    \ https://\ndoi.org/10.3390/su14073919\nAcademic Editors: Efthimios Bothos,\n\
    Panagiotis Georgakis, Babis Magoutas\nand Michiel de Bok\nReceived: 16 January\
    \ 2022\nAccepted: 15 February 2022\nPublished: 25 March 2022\nPublisher’s Note:\
    \ MDPI stays neutral\nwith regard to jurisdictional claims in\npublished maps\
    \ and institutional afﬁl-\niations.\nCopyright:\n© 2022 by the authors.\nLicensee\
    \ MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nsustainability\n\
    Review\nBlockchain-Enabled Vehicular Ad Hoc Networks: A Systematic\nLiterature\
    \ Review\nMuhammad Saad, Muhammad Khalid Khan\nand Maaz Bin Ahmad *\nKarachi Institute\
    \ of Economics and Technology (KIET), College of Computing and Information Sciences\
    \ (CoCIS),\nKarachi 75190, Pakistan; muhammadsaad55@live.com (M.S.); khalid.khan@kiet.edu.pk\
    \ (M.K.K.)\n* Correspondence: maaz@kiet.edu.pk; Tel.: +92-33-3526-4960\nAbstract:\
    \ This systematic literature review provides an extensive categorization of the\
    \ blockchain-\nenabled applications across the domain of vehicular ad hoc networks\
    \ (VANETs). Within the paradigm\nof distributed ledger technology (DLT), the communication\
    \ models and practices for VANETs have\nbeen revolutionized. An analytical review\
    \ and a survey were conducted to explore the advancements\nof blockchain and VANETs.\
    \ The techniques, limitations, and advantages of blockchain deployment\nin VANETs\
    \ are discussed for the effective implementation of a decentralized network. To\
    \ this end,\n68 studies were selected on the basis of the procedural steps to\
    \ provide a comprehensive overview\nof blockchain and the smart contracts in VANETs.\
    \ In particular, a decentralized communication\nmodel is also proposed for the\
    \ advanced implementation of blockchain in VANETs. Researchers and\npractitioners\
    \ are being attracted to these technologies for applications for various industrial\
    \ sectors.\nTherefore, this study also emphasizes the identiﬁcation of any blockchain-related\
    \ open issues for\nfuture prospects. The comprehension of blockchain applications\
    \ for the Internet of Vehicles (IoV)\nis also explored in order to ﬁll the research\
    \ gap on advanced communication networks across the\nInternet of Things.\nKeywords:\
    \ blockchain; distributed ledger technology; Internet of Things; Internet of Vehicles;\n\
    machine-to-machine; mobile ad hoc networks; roadside unit; software-deﬁned network;\
    \ vehicular ad\nhoc networks\n1. Introduction\nA blockchain is the extended form\
    \ of a decentralized network that is responsible for\nrecording transactional\
    \ data or information in the form of blocks that are sequentially\nlinked to each\
    \ other. The architecture of blockchain makes it difﬁcult to tamper with\nand\
    \ difﬁcult to modify information without having a consensus mechanism. In 2008,\n\
    blockchain technology emerged with the revolution in digital currency known as\
    \ “bitcoin”.\nThe blockchain network provides immutability, security, transparency,\
    \ and reliability.\nTherefore, the inherent characteristics of blockchain technology\
    \ are being recognized by\npractitioners for their implementation in different\
    \ sectors. The integration of blockchain\ntechnology with other domains helps\
    \ to overcome the privacy and security limitations\nby providing a tamper-proof\
    \ network system. For example, an intelligent transportation\nsystem heavily relies\
    \ on information sharing across multiple entities. The open-channel\ninformation\
    \ sharing presents several security issues, such as denial-of-service attack (DDoS),\n\
    man-in-the-middle attacks, etc. The application of blockchain technology can make\
    \ this\ninformation tamper-proof, transparent, and reliable. Similarly, it can\
    \ be applied to the\nInternet of Things (IoT) and the Internet of Vehicles (IoV),\
    \ as well as to other domains\nwhere secure data transmission is required.\nIn\
    \ recent years, several studies, discussions, and projects regarding blockchain\
    \ have\nbeen recognized by researchers. The concept of blockchain is based on\
    \ distributed ledger\ntechnology (DLT), which delivers a radical change to the\
    \ existing trust model in order\nSustainability 2022, 14, 3919. https://doi.org/10.3390/su14073919\n\
    https://www.mdpi.com/journal/sustainability\nSustainability 2022, 14, 3919\n2\
    \ of 31\nto overcome the limitations of centralized systems, and which provides\
    \ an efﬁcient data-\ntrading mechanism. The conventional business processes are\
    \ highly dependent on cen-\ntralized systems (e.g., banks) to develop trust across\
    \ the participants [1,2]. However, the\ncentralized system always remains vulnerable\
    \ to multiple attacks. Researchers have pub-\nlished several studies with the\
    \ aim of mitigating the artiﬁcial alterations to the system using\nblockchain.\
    \ The blockchain architecture that is based on trust is proposed by researchers\
    \ to\nprevent security attacks, including Sybil, DDoS, and MAC layer attacks [3].\
    \ The challenge\nof security is one of the key areas of research in the realm\
    \ of blockchain and its applications.\nBusiness operations and activities can\
    \ be made secure, transparent, and immutable by\nusing the emerging blockchain\
    \ technology. The immutable, decentralized, and distributed\ncharacteristics of\
    \ blockchain also bring innovation to other technologies as composite uses\nof\
    \ DLT [4].\nBlockchain is considered to be a connected chain of sequential blocks.\
    \ Each individual\nblock represents the record of a digital transaction that is\
    \ secured using cryptographic\ntechniques. A peer-to-peer network (P2P) assists\
    \ in creating the blocks, along with their\nvalidation, and the consensus is achieved\
    \ by having majority votes in a blockchain network.\nThis method provides a transparent,\
    \ secure, and trustworthy model of blockchain where\nthe transactions between\
    \ the nodes are concerned. DLT has emerged to automate business\nprocesses and\
    \ operations without depending on a centralized third party [1,4]. The smart\n\
    implementation of blockchain in healthcare is also gaining attention for the achievement\
    \ of\na decentralized system for remote patient monitoring [5], tamper-proof patient-data-storage\n\
    management [6], and to preserve privacy in the healthcare sector [7]. Practitioners\
    \ have\nalso implemented the concepts of blockchain in various domains to omit\
    \ the centralized\nsystems by using distributed systems, such as in trade ﬁnance\
    \ [8], healthcare, electronic\nvoting [9], farming, and the insurance sector [10,11],\
    \ in order to depict the signiﬁcance\nof blockchain.\nThe vehicular ad hoc network\
    \ (VANET) is one of the major components of intelligent\ntransportation systems\
    \ (ITSs). Therefore, the current research always takes care of VANETs\nin realm\
    \ of intelligent transportation systems. The smart implementation of VANETs is\n\
    imperative, and it offers several advantages for different industries. For example,\
    \ oil\nmarketing companies (OMCs) are eager to have a digitalized system to keep\
    \ tabs on\ntheir ﬂeets and drivers, along with the product movement. Similarly,\
    \ logistics companies\nneed to have an intelligent transportation system to minimize\
    \ delays and maximize the\nperformance of deliveries. The smart implementation\
    \ of VANETs has the potential to take\ncare of the needs of today’s industries.\
    \ The further applications of VANETs, with respect\nto the current era, are supply\
    \ chain management, solid waste management, autonomous\ntransportation, etc. The\
    \ further detailed applications are discussed later in this review.\nVANETs have\
    \ gained signiﬁcant importance in research areas since the last decade\nbecause\
    \ of their distinctive characteristics, such as mobility, advance topology, and\
    \ wireless\nconnected vehicular technology. VANETs are being recognized by both\
    \ the industry and\nacademia for their implementation on larger scales [12]. In\
    \ the VANETs, the communication\nacross vehicles and the monitoring ofﬁce plays\
    \ a signiﬁcant role. The objective of the\ndynamic vehicular network is to precisely\
    \ circulate the notiﬁcation of events, such as\nweather alerts, road blockages,\
    \ and accidents, as well as emergencies such as roll overs, etc.\nHowever, there\
    \ are limitations of the vehicular network for passing critical messages in\n\
    the speciﬁed radius under a dynamic vehicular environment because of the presence\
    \ of\nsuspicious vehicles. The security issues of the traditional vehicular network\
    \ are ultimately\nexposed. The research related to intelligent transportation\
    \ systems determines and classiﬁes\nthe attacks and threats related to VANETs\
    \ by period [13]. The malevolent node can transmit\nfalse information by disseminating\
    \ other important real-time messages. This malicious\nbehavior of nodes can result\
    \ in the loss of lives and assets. Thus, this is identiﬁed as the\ngreatest challenge\
    \ for the VANET. The decentralized architecture of VANETs is proposed in\nthis\
    \ review to preserve security and privacy.\nSustainability 2022, 14, 3919\n3 of\
    \ 31\nExtensive efforts have been applied to determine blockchain and their applications\n\
    across various domains. This study proceeds from technical discussions on the\
    \ feasibility of\nDLT-enabled IoT [14,15] applications [16], business processes,\
    \ and even security issues [17],\nas well as other domains [18]. The information\
    \ was gathered from 68 articles, including the\nimpact factor publishers, IEEE,\
    \ Springer, Elsevier, MDPI, and ACM, from 2016 to early 2022.\nThis study classiﬁes\
    \ articles on the basis of the evolution of blockchain from the early stages\n\
    until the present date. This study adopted methods to precisely outline the relationships\n\
    between the challenges and the applied techniques.\nThe contemporary literature\
    \ on blockchain applications in VANETs is diversiﬁed with\nrespect to particular\
    \ areas [19,20]. This study further highlights the signiﬁcant research areas\n\
    for practitioners with unorganized comprehensions of the article distribution.\
    \ The research\ngap is identiﬁed across earlier studies on blockchain in the realm\
    \ of VANETs because of the\nlack of peer-reviewed articles that could play signiﬁcant\
    \ roles in the extensive research. The\nﬁrst blockchain-enabled IoT literature\
    \ survey was performed in [20], which covered up to\n2016, with a peer-reviewed\
    \ process in which 18 use cases and 35 examples were found and\ndiscussed in detail\
    \ with regard to the blockchain-enabled IoT. The researchers contributed\nextensively\
    \ to the integration of the IoT with blockchain and suggest subsequent research\n\
    for the advancement of blockchain-enabled IoT applications.\nThis review culminates\
    \ in the integration of blockchain and the IoT for a particular\ndomain of VANETs,\
    \ with its practical implementation unlike those in the existing general\nreviews.\
    \ The articles on blockchain with other domains are rare, and there are hardly\
    \ any\navailable before 2019. Therefore, the earlier research studies are not\
    \ sufﬁcient to provide a\nprecise overview of the integration. Therefore, an extensive\
    \ literature review is targeted\nin this study because of the agile evolution\
    \ of the IoT and the related domains, such as\nblockchain for the IoV and VANETs.\n\
    The existing literature on blockchain-enabled VANETs mainly focuses on the iden-\n\
    tiﬁcation of the use cases, methods, and the safety and security aspects of intelligent\n\
    transportation systems. However, this study is not only limited to the classiﬁcation\
    \ of\nstudies with respect to use cases, privacy, and security, but it also provides\
    \ a collaborative\ndecentralized architecture for VANETs. The proposed blockchain-enabled\
    \ architecture\nhelps to achieve the efﬁcient collaboration of entities, such\
    \ as vehicles, RSUs, and cloud-\nbased infrastructure, which is extended to the\
    \ composite use of the techniques, in contrast\nto the existing studies. This\
    \ study also places an emphasis on the identiﬁcation of the\nresearch domains\
    \ and methods for transportation industry and ﬂeet owners to maximize\ntheir throughputs\
    \ and improve their performances. For example, timely deliveries are\ncritical\
    \ for logistics, supply chain management, and oil marketing companies. Similarly,\n\
    in the healthcare sector, the timely arrival of ambulances and the movement of\
    \ medical\nequipment in pandemic-like situations is imperative. The major contributions\
    \ of this study\nare the classiﬁcations and compositions of the techniques, the\
    \ identiﬁcation of the research\nareas, and the provision of a blockchain-enabled\
    \ framework for a secure, transparent, and\ndecentralized network using the collaborative\
    \ efforts of the entities. The following table\n(Table 1) is used to provide a\
    \ comparison of this study with the existing literature reviews\nin the realm\
    \ of blockchain-enabled IoT technologies.\nSustainability 2022, 14, 3919\n4 of\
    \ 31\nTable 1. Comparison of blockchain-enabled VANETs with the existing literature.\n\
    Studies\nComposite Use\nof Methods to\nImprove\nVehicular\nNetwork by\nEmploying\n\
    Blockchain\nProvision of\nBlockchain-\nEnabled\nDecentral-\nized\nFramework\n\
    Provision of\nSafety and\nSecurity for\nIntelligent\nTransportation\nSystem\n\
    Identiﬁcation\nof Research\nDomains\nWhen\nBlockchain\nMeets\nIoT/VANETs\nIdentiﬁcation\n\
    of Use Cases\nfor the Imple-\nmentation of\nBlockchain-\nEnabled\nIoT/VANETs\n\
    [3]\n(Álvares et al.,\n2021)\n\x14\n×\n\x14\n\x14\n×\n[13]\n(Wan et al.,\n2020)\n\
    ×\n×\n×\n×\n\x14\n[20]\n(Lo et al., 2019)\n\x14\n×\n×\n\x14\n\x14\n[21]\n(Conoscenti\
    \ et al.,\n2016)\n×\n×\n×\n\x14\n\x14\n[22]\n(Iqbal et al.,\n2021)\n\x14\n×\n\x14\
    \n×\n×\n[23]\n(Casino et al.,\n2019)\n×\n×\n\x14\n\x14\n\x14\n[24]\n(Shen &\n\
    Pena-Mora,\n2018)\n\x14\n\x14\n×\n×\n\x14\nBlockchain\nEnabled\nVANETs\n\x14\n\
    \x14\n\x14\n\x14\n\x14\nThis study provides a more comprehensive classiﬁcation\
    \ of the blockchain-related\ndomains and challenges. The advancement of blockchain,\
    \ with its unique characteristics,\nhas improved business operations [25,26],\
    \ immutability, and trust across the participating\nnodes. The integration of\
    \ the IoT and the IoV with blockchain is targeted to provide a\ndecentralized\
    \ architecture for VANETs. The comprehension of blockchain applications for\n\
    the IoV is also explored in order to ﬁll the research gap on the advance communication\n\
    networks across the Internet of Things.\nThe explicit questions proposed in this\
    \ study are related to identifying the needs and\nconnections between the existing\
    \ studies and the possibilities for future research.\nThe targeted research questions\
    \ that are answered in this review are as follows:\nRQ1: What are major research\
    \ areas when blockchain meets VANETs?\nRQ2: How is blockchain used to improve\
    \ VANETs through the employment of different re-\nsearch methodologies?\nRQ3:\
    \ What are the existing IoT and VANET challenges that can be addressed by employing\n\
    blockchain technology?\nRQ4: What are the limitations and challenges when blockchain\
    \ meets with multiple domains, and\nwhich techniques and models can be employed\
    \ to address these limitations?\nThe systematic literature review procedure was\
    \ adopted to classify the correlated\nissues that arise when blockchain meets\
    \ VANETs, and to answer the research questions\ncategorically. This study escalates\
    \ the categorization of blockchain-enabled applications\nby performing a systematic\
    \ review on modern studies. This study outlines the research\ngap between blockchain\
    \ and the IoT by employing a blockchain in VANETs. This paper\ncontributes towards\
    \ blockchain applications in the IoT, and especially in VANETs, through\nan extensive\
    \ analysis of the research articles. The several research areas and gaps are\n\
    Sustainability 2022, 14, 3919\n5 of 31\nhighlighted in the results of this literature\
    \ analysis for the prospective articles. The analysis\nof the literature review\
    \ is sorted as follows: Section 2 deﬁnes the backgrounds of the\ntechnologies,\
    \ such as DLT, blockchain, protocols/contracts, the IoT, the industrial IoT (IIoT),\n\
    machine-to-machine communication (M2M), and VANETs and their evolution towards\
    \ the\nIoV. Section 3 explains the procedure for conducting the review, the methodology,\
    \ and the\nprocedural steps. Sections 4–8 highlight the results, the descriptive\
    \ corpus, and the ﬁndings\nfrom the literature analysis. Section 9 presents a\
    \ discussion, and the review is concluded in\nSection 10.\n2. Background\n2.1.\
    \ Distributed Ledger Technology (DLT)\nDLT has gained in popularity among researchers\
    \ since 2008, and it is being deployed\nin various sectors, for example, in ﬁnancial\
    \ services, energy, the supply chain, the IoT,\nthe IIoT, and VANETs. Blockchain\
    \ technology is based on DLT, which helps it to become\ndecentralized, rather\
    \ than having a centralized dependency. Blockchain enables organiza-\ntions to\
    \ eliminate trust and privacy issues by emphasizing security and privacy-preserving\n\
    techniques. Blockchain can also be referred to as “distributed databases” that\
    \ are managed\nto use an immutable hash tree that cannot be altered or modiﬁed\
    \ in order to ensure security.\nIn particular, the blocks represent records or\
    \ data transactions in the blockchain. Every\nblock has its own hash value, which\
    \ creates the links between the different blocks.\nThe role of DLT in blockchain-enabled\
    \ VANETs is critical to the achievement of efﬁcient\ndata trading across entities\
    \ such as vehicles, RSUs, and infrastructure. It facilitates the\navoidance of\
    \ the dependency of entities on third parties by having a distributed shared\n\
    ledger that consists of information such as trafﬁc, incidents, collisions, weather,\
    \ etc. The\nDLT also provides a trusted handshaking mechanism across the entities.\
    \ This is an inherent\ncharacteristic of blockchain that is used to avoid malicious\
    \ intrusion and to share data\nacross trusted entities. The decentralized architecture\
    \ of VANETs is proposed later in this\nstudy which is based on DLT, where entities,\
    \ such as vehicles, RSUs, and clouds, store the\nperceived information in the\
    \ form of a shared ledger. Similarly, Section 2.7. supports the use\nof DLT in\
    \ blockchain-enabled VANETs by means of vehicle-to-everything communication.\n\
    The blockchain offers a variety of features for security and a distributed architecture\n\
    that can be used for contact tracing. A consensus mechanism is important to achieving\n\
    the integrity and consistency of the transactions within a chain. The common consensus\n\
    mechanisms are proof of work (POW), proof of stake, and the direct acyclic graph.\
    \ Bitcoin\nuses proof of work as the consensus mechanism in order to compete with\
    \ computing\nresources. On the other hand, proof of stake is used for the coin’s\
    \ age competition rather\nthan the computing power. The expansion of POW in the\
    \ realm of blockchain-enabled\nVANETs is discussed later in this literature.\n\
    2.2. Blockchain\nThe analogy of blockchain is self-explanatory as it refers to\
    \ a sequential chain of blocks.\nThe individual block is responsible for holding\
    \ the information on the transactions as\nrecords and as the address of the succeeding\
    \ block. The header and the data of each block\nare encoded using a hashing mechanism\
    \ to ensure the data integrity. Similarly, the blocks\ncreate a network that consists\
    \ of participating nodes that are responsible for the transactions.\nEach participating\
    \ node of the blockchain network copies the chain in its storage in order\nto\
    \ have a complete digital ledger. The concept of blockchain is similar to Google\
    \ spread\nsheets, where a document is distributed across multiple participants,\
    \ and a trail record is\nmaintained with respect to the changes.\nThere are three\
    \ major types of blockchain: public, private, and federated blockchain.\nThe public,\
    \ or the permission less, blockchain is used where the participants are free to\n\
    participate in the consensus mechanism and to avail the beneﬁts accordingly. On\
    \ the other\nhand, the private, or permissioned, blockchain is used for a small\
    \ number of participants,\nwhere only the veriﬁed participants can participate\
    \ in the consensus. The federated, or\nSustainability 2022, 14, 3919\n6 of 31\n\
    consortium, blockchain inherits the properties of both the public and private\
    \ blockchain,\nand it has therefore gained accordingly in popularity among researchers.\n\
    In ref. [27], Nakamoto proposes the decentralized system for digital currency\
    \ known as\n“bitcoin”. The idea of decentralization provides a mechanism for performing\
    \ transactions\nand exchanging messages without depending on third parties or\
    \ central authorities. The\nproposed architecture eliminates the single point\
    \ of the failure mechanism associated\nwith traditional centralized systems. Blockchain\
    \ is based on DLT and consists of growing\nsequential blocks. The individual block\
    \ not only holds the transactional information, but it\nalso stores the link of\
    \ the successive block [28]. The participating nodes also hold the copy\nof the\
    \ chain consisting of the transactional information, known as “the ledger”, with\
    \ mutual\ncoordination in a network. The DLT provides a trustless mechanism without\
    \ relying heavily\non traditional centralized systems. The P2P network builds\
    \ trust among the participating\nnodes in a network having a shared ledger.\n\
    In the IoT context, the decentralized system and schemes may provide a baseline\n\
    of trust without relying on centralized systems [29]. However, the blockchain\
    \ could\nfurther communicate between the IoT nodes in order to improve traceability\
    \ and message\npassing [30]. This further automates the operations and the communication\
    \ across the\nsensors, actuators, and devices in the realm of the IoT. There are\
    \ different variants of\nblockchain that can be applied in particular areas of\
    \ the IoT in order to achieve this\ndecentralized tendency.\n2.3. Smart Contracts\n\
    A “smart contract” is also referred to as “an agreement between the participating\
    \ nodes\nto complete the transactions” [31]. Sabzo proposed this concept in 1996,\
    \ which is deﬁned\nas the “computerized agreement between nodes to perform transactions”.\
    \ This mechanism\nbuilds trust among the nodes on the basis of certain conditions\
    \ outlined in the contract to\nact accordingly [32]. The immutability in the blockchain\
    \ and the smart contracts outperform\nthe traditional contracts between the participants.\
    \ This helps to execute transactions by\neliminating the intermediaries by using\
    \ the permissioned blockchain [33]. Smart contracts\nare also referred to as “programmable\
    \ scripts”, which can be deployed across the blockchain\nnetwork with addresses\
    \ to execute the functionalities [34]. Smart contracts are important\nfor the\
    \ data-centric executions in a network, especially when the blockchain meets the\
    \ IoT\nand other particular domains.\nBlockchain-enabled applications can reap\
    \ beneﬁts with the deployment of smart\ncontracts. The rules and regulations can\
    \ be deﬁned for communication across the IoT\nobjects. The blockchain network\
    \ helps to transfer the contract to each participating node.\nThe execution of\
    \ the contract is triggered when a certain condition in the network is met [35].\n\
    This mechanism also eliminates the interference of other entities [36].\nThe emerging\
    \ DLT is also being opted by well-known organizations, such as Maersk\nand IBM.\
    \ They recently announced the adoption of blockchain technology for commercial\n\
    pilot projects in order to achieve the smooth tracking of shipments, ﬁnance trading,\
    \ and\nthe automation of their other business operations. By using smart contracts,\
    \ the traditional\nmanual commercial processes can be eliminated [37]. Blockchain\
    \ that uses smart contracts\nreduce intermediaries and the costs incurred for\
    \ transactions, and they further improve\ntrading and the automation of business\
    \ operations.\nThe challenges of contracts, such as transaction ordering, contract\
    \ vulnerabilities, and\ncall stacks, are recognized by practitioners as open issues\
    \ for future research. The validation\nand veriﬁcation issues were also highlighted\
    \ by Vaidya in 2020. These issues need to be\naddressed when the integration of\
    \ blockchain with other domains is considered [38].\nHowever, this mechanism still\
    \ requires a systematic approach and mechanism in order to\naddress the challenges\
    \ and limitations.\nSustainability 2022, 14, 3919\n7 of 31\n2.4. Internet of Things\
    \ (IoT)\nThe blockchain and IoT technologies are being considered as the technologies\
    \ of the\nnext generation, or of the information era. The current research highlights\
    \ that 75 bil-\nlion objects, including industrial devices, will be connected\
    \ by 2026. On the other hand,\nthe limitations and challenges of IoT device handshaking,\
    \ connectivity, security, data\ntransmission, and storage are important and need\
    \ to be addressed; the IoT network will\ncollapse if is not able to obtain a stable\
    \ platform. However, blockchain technology is\ngaining major attention from researchers\
    \ for the achievement of state-of-the-art access\ncontrol schemes using blockchain,\
    \ such as the attribute-based access control scheme for\nsecurity, privacy, and\
    \ decentralization [39], and the data privacy and security mechanism\nfor IoT-enabled\
    \ devices [40].\nThe growing blockchain technology has a long way to go in terms\
    \ of other technologies,\nsuch as artiﬁcial intelligence, machine learning, the\
    \ IoT, and the data sciences. In the past\nfew years, an escalation in the research,\
    \ discussions, and projects with regard to the IoT\nhas gained the attention of\
    \ practitioners. The implementation of the IoT and the particular\nsubdomains\
    \ is being applied in the different industrial sectors mentioned in Figure 1.\n\
    The concept of the IoT is based on connecting things that deliver radical change\
    \ to the\nnetwork model of trust between the nodes or devices to solve the pain\
    \ points of the human–\nmachine or M2M interfaces. The traditional operations\
    \ rely heavily on the recording of\nmanual data to promote trust among the nodes.\
    \ However, the manual processes often\nlead to victimization in the forms of suspicious\
    \ attacks and intentional modiﬁcations.\nThe evolution of the IoT and its extensive\
    \ applications require a rethinking of the design\nand architecture.\nFigure 1.\
    \ An overview of the IoT.\nThe advanced implementation of the IoT in the industrial\
    \ sector is also referred to as\nthe industrial Internet of Things (IIoT), where\
    \ things are connected to wireless networks\nfor data gathering and sharing. The\
    \ IIoT has gained signiﬁcant importance in different\nsectors and industries.\
    \ The IIoT devices are also referred to as “actuators”, “sensors”, and\n“electronic\
    \ chips”. The IIoT works in a fashion in which things or sensors gather information\n\
    from their surroundings, communicate with each other, and transmit over the air\
    \ by using\nGSM/GPRS/LTE to drive meaningful information. There can be various\
    \ applications of the\nIoT, e.g., home automation, ﬂeet telematics, fuel chains,\
    \ weather broadcasting, agriculture,\ngeneral supply chains, etc. The industrial\
    \ implementation of IoT devices automates and\nreinforces manufacturing, production,\
    \ and industrial operations.\nSustainability 2022, 14, 3919\n8 of 31\nThere are\
    \ many applications of the IoT, or the IIoT, such as home automation, the\nInternet\
    \ of Vehicles, ﬂeet telematics, fuel telematics, digital card-based e-healthcare\
    \ sys-\ntems [41], smart car parking, etc. The IoT implementation in the industrial\
    \ sector has led\nto the automation of the business operations and activities\
    \ [21]. An overview of IIoT- and\nIndustry-4.0-based applications is illustrated\
    \ in Figure 2, which depicts the evolutions\nof the robotics, electronics, electricity,\
    \ and mass production industries by the advanced\nimplementation of the IoT.\n\
    Figure 2. An overview of Industry 4.0 (mechanization, electricity, electronics,\
    \ and the IoT).\nThe targets and estimates reveal that billions of devices will\
    \ be connected in the coming\nyears. The limitations and challenges of connectivity,\
    \ security, and the cost of things in\nthe IoT are the important factors for practitioners\
    \ to consider when deploying blockchain\ntechnology in the IoT. MachNation forecasts\
    \ that 75 billion devices will be connected by\n2026, and that this will be directly\
    \ proportional to the revenue, with an annual growth rate\nof 15%. The existing\
    \ IoT solutions rely heavily on centralized management systems, but\nthey will\
    \ collapse when there are 75,000 billion devices wired for simultaneous connectivity.\n\
    Therefore, decentralized architecture is required for the stability and scalability\
    \ of IoT\napplications.\nThe IIoT infrastructure is designed in such a way that\
    \ the actuators or sensors gather\ndata from the surroundings and transmit it\
    \ to the edge gateway in order to transit the raw\ndata to the cloud, which further\
    \ performs data-processing activities and derives meaningful\ninformation, as\
    \ is illustrated in Figure 3.\n2.5. Machine-to-Machine Communication (M2M)\nM2M\
    \ communication refers to technology that supports the data transmission and\n\
    interaction of devices. This communication eliminates the human intervention in\
    \ IIoT ap-\nplications. M2M communication connects things, such as sensors, actuators,\
    \ and objects, in\norder to gather information and transmit accordingly [42].\
    \ M2M communication provides\na dynamic resource-sharing mechanism that allows\
    \ IoT entities to share resources with\neach other by using artiﬁcial intelligence\
    \ (AI), deep learning (DL), etc. It also provides\nadvanced architecture for the\
    \ smart communication of IoT devices with each other [43].\nThe ultramodern architecture\
    \ is elaborated in Figure 4.\nSustainability 2022, 14, 3919\n9 of 31\nFigure 3.\
    \ IIoT infrastructure and process diagram.\nFigure 4. M2M communication and architecture.\n\
    2.6. Vehicular Ad Hoc Networks (VANETs)\nVANETs introduce the network of self-organizing\
    \ vehicles that act as mobile nodes.\nThey conﬁne the communication between vehicles\
    \ and roadside units as V2V and V2R.\nThey assists drivers in avoiding collisions,\
    \ in picking the shortest route on the basis of\ntrafﬁc optimization, in identifying\
    \ tolls and the nearest fuel stations, and in enhancing\nthe safety of assets\
    \ and lives [44]. They facilitate the communication of vehicles across\nthe network\
    \ for real-time data transmission. They improve the road safety mechanism\nand\
    \ provide instant alerts or information in order to concern the authorities in\
    \ cases of\nemergency situations, such as roll overs, accidents, etc. The existing\
    \ architecture of VANETs\nalso exposes vulnerabilities, such as data snifﬁng,\
    \ impersonation, and ransomware attacks.\nThe applications related to VANETs are\
    \ usually designed for the assistance of drivers\nand for the safety of assets.\
    \ The emergency response system is studied in this review\nin order to enhance\
    \ the safety and to assist drivers in cases of emergencies, for example,\naccidents,\
    \ roll overs, ﬁres, object collisions, and similar incidents. Real-time audio/video\n\
    streaming is considered to be a major feature of surveillance applications, and\
    \ it can be used\nto investigate and identify the real causes of incidents. VANET\
    \ applications are time-critical\napplications because of the real-time transmission\
    \ of messages across each vehicle or station\nfor decision making.\n2.7. Internet\
    \ of Vehicles (IoV)\nIn the nascent studies, the vehicle receives environmental\
    \ data and roadside informa-\ntion via a VANET [45]. The VANETs are deﬁned as\
    \ the subtypes of mobile ad hoc networks\n(MANETs). The vehicles act like nodes\
    \ in the network. In the advanced stage, the VANET\nSustainability 2022, 14, 3919\n\
    10 of 31\nevolves into the IoV, which promotes the interactions of vehicles with\
    \ each other, or with\nsurrounding units and humans. This phenomenon is similar\
    \ to the evolution of M2M\ncommunication to the IoT. VANETs provide communication\
    \ between vehicles, whereas the\nIoV connects the vehicles and humans within and\
    \ around the vehicles. The IoV aggregates\nthe actuators, vehicles, and other\
    \ IoT devices to create a network system [46]. Cellular\nnetworks have evolved\
    \ VANETs towards the IoV. Practitioners recognize the concept of\nthe Internet\
    \ of Vehicles because of its mobility through the use of GSM/LTE channels [47].\n\
    Figure 5 illustrates the communication architecture of VANETs in more detail.\n\
    Figure 5. VANET communication and architecture.\nIn recent years, practitioners\
    \ have been attracted to the growing technologies of the\nIoT. IoV, 5G, MQTT,\
    \ and M2M technologies are being considered for implementation in\ntime-critical\
    \ systems. Vehicular sensor networks (VSNs) are considered to be the future\n\
    of vehicular networks. VSNs not only ensure an unlimited power supply, but they\
    \ are\nalso endowed with low power consumption. Technological advancement has\
    \ made ﬂeet\nmanagement more efﬁcient. Still, there are a lot of issues for ﬂeet\
    \ managers to deal with\nwhen handling ﬂeet telematics. With the increases in\
    \ trafﬁc and air pollution, there is an\nimmense need for a secure and reliable\
    \ intelligent transportation system (ITS) in order to\nfacilitate ﬂeet managers\
    \ and drivers. The IoT sensors help by providing more awareness of\nthe surroundings\
    \ for the ITS. The vehicles are equipped with sensors for driver assistance,\n\
    and the trafﬁc lights and roadsides are mounted with cameras and sensors. Such\
    \ a complex\nsystem can be handled well by 5G technology [47,48].\nThe IoV further\
    \ facilitates the communication between human drivers and ﬂeet moni-\ntoring staff\
    \ for real-time decision making. The communication models in VANETs, such\nas\
    \ V2V, V2I, V2R, etc., demonstrate the blockchain-enabled authentication schemes\
    \ for\nVANETs [49]. The real-time communication of the Internet of Vehicles is\
    \ bifurcated into\nﬁve categories, which are presented in Figure 6.\nFigure 6.\
    \ An overview of vehicle-to-everything communication.\nSustainability 2022, 14,\
    \ 3919\n11 of 31\n2.7.1. Vehicle-to-Infrastructure (V2I) Communication\nThe V2I\
    \ model supports the wireless communication across the RSUs and the support-\n\
    ing infrastructure.\n2.7.2. Vehicle-to-Roadside Unit (V2R) Communication\nThe\
    \ V2R communication model supports the wireless communication between vehicle\n\
    and the RSUs to transmit information along the servers or the supporting infrastructure.\n\
    2.7.3. Vehicle-to-Sensor (V2S) Communication\nV2S systems support the bi-directional\
    \ communication between different kinds of\nsensors and onboard terminals for\
    \ real-time insights. For example, the object detection\nsensors, the fuel level\
    \ probes, and the load sensors can be connected to the terminal to\nprovide accurate\
    \ fuel level and distance information between the objects to avoid collision.\n\
    2.7.4. Vehicle-to-Vehicle (V2V) Communication\nThe V2V model supports the wireless\
    \ communication across vehicles for sharing\nlocation data, and it consists of\
    \ the speeds and coordinates. For example, V2V commu-\nnication can be helpful\
    \ in providing prior road blockage information to the respective\non-route vehicles.\n\
    2.7.5. Vehicle-to-Human (V2H) Communication\nThe V2H model supports mobility and\
    \ awareness for the nearest users, such as\npedestrians, cyclists, and drivers.\
    \ It further facilitates communication between the driver\nand the vehicle.\n\
    Cellular, or GSM/LTE/5G, technologies will make the above types of communication\n\
    more reliable in the context of future research with regard to intelligent transportation.\
    \ The\nblockchain-enabled reputation model is signiﬁcant among the communication\
    \ models. In\nreputation-enabled models, the provider reputation is validated\
    \ before the storing of its\ndata in the blockchain network [22]. The abovementioned\
    \ composite communication types\nare also called “vehicle-to-everything (V2X)”\
    \ communication.\n2.8. Event-Driven Service-Oriented Architecture (EDSOA) for\
    \ IoT\nService-oriented architecture (SOA) is used when there are heterogeneous\
    \ devices\nand systems. The IoT also deals with heterogeneous devices. These are\
    \ made by different\nmanufacturers and follow different communication protocols.\
    \ SOA provides technology\nand language independence. The further implementation\
    \ of SOA with respect to the\ndistributed systems has been evaluated by practitioners\
    \ for the proposal of event-driven\narchitecture. The EDSOA is being practiced\
    \ in the ﬁeld of the IoT to deal with real-time\ninformation. The request and\
    \ response modes are processed by the service in the event-\ndriven architecture\
    \ [50], as is mentioned in Figure 7.\nFigure 7. EDSOA service communication. Reprinted\
    \ with permission from ref. [50]. Copyright\nLan et al., 2015.\nIn traditional\
    \ systems, the client/server approach is used for data communication.\nThis process\
    \ is time-consuming since the client must wait for the server to respond. The\n\
    Sustainability 2022, 14, 3919\n12 of 31\ntraditional client/server approach has\
    \ limitations for IoT-based real-time applications, such\nas vehicle tracking,\
    \ router and journey management, and emergency response systems.\nThe EDSOA has\
    \ been analyzed by practitioners for VANETs for faster and more reliable\ncommunication\
    \ across things.\n3. Materials and Methods\nThe SLR was conducted according to\
    \ the proposed guidelines of Kitchenham in [51].\nThe following steps were performed\
    \ to answer the research questions: (1) Planning and\nconducting the review; (2)\
    \ Inclusion/exclusion criteria; (3) Abstract and article examination;\nand (4)\
    \ Results and descriptive analysis of the corpus.\n3.1. Planning and Conducting\
    \ the Review\nThis SLR was established to identify the relationship between the\
    \ blockchain and\nthe IoT towards the particular domain of VANETs. Since the emergence\
    \ of blockchain\ntechnology, research studies, and the related works, practices,\
    \ and standards related to\nblockchain, smart contracts, the IoT, and DLT are\
    \ unfolding. We selected a period of\nsix years (2016–2021 (extended to early\
    \ 2022)) from which to adopt the most recent research\nwork on blockchain-enabled\
    \ VANETs. This study followed the research guidelines provided\nby Kitchenham\
    \ in 2009 in [51] to develop the state-of-the-art replicable study. The articles\n\
    from impact factor journals were targeted to maintain the quality of this study.\
    \ We analyzed\nand explored the extant literatures on blockchain and VANETs. The\
    \ search was applied\non IEEE Xplore, Springer, Elsevier, MDPI, ACM, and Google\
    \ Scholar, using the following\nsearch strings:\n1.\n“Blockchain” <AND> “VANETS”;\n\
    2.\n“Blockchain” <AND> “VANETS” <OR> “IoV” <OR> “Internet of Vehicles”.\nThe step-by-step\
    \ procedure for the literature searching and screening is demonstrated\nin Figure\
    \ 8.\nFigure 8. Procedural steps for article assessment.\nSustainability 2022,\
    \ 14, 3919\n13 of 31\n3.2. Inclusion/Exclusion Criteria\nThe inclusion and exclusion\
    \ criteria were established for the article assessment in\norder to extract highly\
    \ authentic and relevant literature. The foci of the research were\nbased on the\
    \ key words related to blockchain and the particular domain of VANETs. The\nkeywords,\
    \ “blockchain”, “VANETs”, “IoV”, and “Internet of Vehicles”, were included on\n\
    the basis of the research interests. A total of 146 articles were shortlisted\
    \ in the ﬁrst step of\nthe searching among the impact factor journals and Google\
    \ Scholar. A total of 18 articles\nwere eliminated because of duplication, and\
    \ the remaining 128 articles were selected for\nfurther analysis and examination.\n\
    3.3. Abstract and Article Assessment\nIn the screening step, a total 68 studies\
    \ were selected out of the 128 studies on the\nbasis of the abstract and literature\
    \ assessment. The articles that were less focused on the\ntargeted topics were\
    \ removed from the study. The selection of 68 studies was based purely\non the\
    \ relevant and concrete ﬁndings and contributions. We further veriﬁed our process\
    \ in\norder to maintain cohesion in the selection of articles. The quality was\
    \ considered at each\nstage, and, during the screening, a further 29 articles\
    \ were eliminated because they were\nnon-impactor publications. The databases\
    \ and research were further extended to early\n2022, and 29 more studies were\
    \ included after the assessment, as is presented in Figure 8.\nA total of 68 studies\
    \ were included in this literature after all of the steps: identiﬁcation,\nscreening,\
    \ eligibility, and extension.\n4. Results\nDescriptive Analysis of the Corpus\n\
    The 68 shortlisted studies are distributed in the form of graph with respect to\
    \ the\nperiod of six years. This distribution demonstrates the escalation of blockchain\
    \ technology\nover the years. The proliferation of blockchain technology also\
    \ enables other domains to\nintegrate and evolve. The evolution of blockchain\
    \ was started in 2008 and, at that time, the\nresearch was mainly focused on digital\
    \ currencies and the associated issues. Since 2016, it\nhas attracted practitioners\
    \ for the evolution of other domains. In particular, the evolution\nof blockchain\
    \ in VANETs is demonstrated by the spread graph of the articles in Figure 9.\n\
    Figure 9. Spread of articles by period.\nFigure 9 demonstrates the spread of the\
    \ articles by period, and it can be observed that\nthe graph of the studies increases\
    \ for blockchain-enabled VANETs over the period of time.\nA further count of the\
    \ studies, the publication years, and the references are presented in\nTable 2.\n\
    Sustainability 2022, 14, 3919\n14 of 31\nTable 2. Numbers of articles by year.\n\
    Year\nNo. of Studies\nArticles\n2018\n3\n[52] (Bao-Kun et al., 2018), [53] (Busygin\
    \ et al., 2018), [54] (Lu et al., 2018)\n2019\n13\n[15] (Li et al., 2019), [55]\
    \ (Ali et al., 2019), [56] (Shrestha & Nam, 2019), [57] (Xie et al.,\n2019), [58]\
    \ (Kim, 2019), [59] (Yang et al., 2019), [60] (Zhang & Wang, 2019), [61]\n(Butt\
    \ et al., 2019), [62] (Lu et al., 2019), [63] (Feng et al., 2019), [64] (De Maio\
    \ et al., 2019),\n[65] (Zhang et al., 2019), [66] (Zheng et al., 2019)\n2020\n\
    26\n[14] (Matheu et al., 2020), [19] (Bagga et al., 2020), [67] (Bonadio et al.,\
    \ 2020), [68]\n(Lei et al., 2020), [69] (Shrestha et al., 2020), [70] (Sutrala\
    \ et al., 2020), [71] (Ahmad et al.,\n2020), [72] (Shala et al., 2020), [73] (Zhuo\
    \ Ma et al., 2020), [74] (Ryu et al., 2020), [75]\n(Zhao et al., 2020)s, [76]\
    \ (Li et al., 2020), [77] (Wang & Zhang, 2020), [78] (Malik et al.,\n2020), [79]\
    \ (Shi et al., 2020), [80] (Yang et al., 2020), [81] (Cho & Perera, 2020), [82]\n\
    (Jiang et al., 2020), [83] (Zhaowei Ma et al., 2020), [84] (Tomar, 2020), [85]\
    \ (Ayaz et al.,\n2020), [86] (Hussain et al., 2020), [87] (Lin et al., 2020),\
    \ [88] (Mershad, 2020), [89]\n(Zheng et al., 2020), [90] (Wang et al., 2020)\n\
    2021\n26\n[3] (Álvares et al., 2021), [40] (Singh et al., 2021), [45] (Peng et\
    \ al., 2021), [49] (Abbas et al.,\n2021), [22] (Iqbal et al., 2021), [91] (Kudva\
    \ et al., 2021), [92] (Shammar et al., 2021), [93]\n(Alharthi et al., 2021), [94]\
    \ (Hei et al., 2021), [95] (Akhter et al., 2021), [96] (Azam et al.,\n2021), [97]\
    \ (Chulerttiyawong & Jamalipour, 2021), [98] (Dwivedi et al., 2021), [99]\n(Firdaus\
    \ et al., 2021), [100] (Ghovanlooy Ghajar et al., 2021), [101] (Jabbar et al.,\
    \ 2021),\n[102] (Kaltakis et al., 2021), [103] (Kapassa et al., 2021), [104] (Kebande\
    \ et al., 2021), [105]\n(Kim, 2021), [106] (Li et al., 2021), [107] (Li et al.,\
    \ 2021), [108] (Liang & Ma, 2021)s, [109]\n(Ma et al., 2021), [110] (Maarouﬁ &\
    \ Pierre, 2021), [111] (Sharma et al., 2021)\nThe emergency surrounding blockchain\
    \ technology led to the ﬁrst ever international\nconference, which was held in\
    \ 2018 and entitled: “the 2018 international conference on\nblockchain”. The focus\
    \ of the conference was exclusively based on the applications of\nblockchain using\
    \ smart contracts. Since then, the studies on blockchain and the related\ndomains\
    \ have been increasing in the major databases and currently still are. The sources\n\
    and the year-wise classiﬁcations of the articles are further presented in Table\
    \ 3 in order to\nhighlight the research horizon across the databases.\nTable 3.\
    \ Sources and year-wise classiﬁcation of articles.\nArticle\nYear\nSource\n[3]\
    \ (Álvares et al., 2021)\n2021\nIEEE\n[40] (Singh et al., 2021)\n2021\nIEEE\n\
    [45] (Peng et al., 2021)\n2021\nElsevier\n[49] (Abbas et al., 2021)\n2021\nMDPI\n\
    [22] (Iqbal et al., 2021)\n2021\nIEEE\n[91] (Kudva et al., 2021)\n2021\nElsevier\n\
    [92] (Shammar et al., 2021)\n2021\nIEEE\n[93] (Alharthi et al., 2021)\n2021\n\
    IEEE\n[94] (Hei et al., 2021)\n2021\nSpringer\n[95] (Akhter et al., 2021)\n2021\n\
    MDPI\n[96] (Azam et al., 2021)\n2021\nIEEE\n[97] (Chulerttiyawong &\nJamalipour,\
    \ 2021)\n2021\nIEEE\n[98] (Dwivedi et al., 2021)\n2021\nIEEE\n[99] (Firdaus et\
    \ al., 2021)\n2021\nMDPI\nSustainability 2022, 14, 3919\n15 of 31\nTable 3. Cont.\n\
    Article\nYear\nSource\n[100] (Ghovanlooy\nGhajar et al., 2021)\n2021\nMDPI\n[101]\
    \ (Jabbar et al., 2021)\n2021\nIEEE\n[102] (Kaltakis et al., 2021)\n2021\nMDPI\n\
    [103] (Kapassa et al., 2021)\n2021\nMDPI\n[104] (Kebande et al., 2021)\n2021\n\
    MDPI\n[105] (Kim, 2021)\n2021\nMDPI\n[106] (Li et al., 2021)\n2021\nIEEE\n[107]\
    \ (Li et al., 2021)\n2021\nIEEE\n[108] (Liang & Ma, 2021)\n2021\nIEEE\n[109] (Ma\
    \ et al., 2021)\n2021\nIEEE\n[110] (Maarouﬁ & Pierre, 2021)\n2021\nIEEE\n[111]\
    \ (Sharma et al., 2021)\n2021\nIEEE\n[14] (Matheu et al., 2020)\n2020\nMDPI\n\
    [19] (Bagga et al., 2020)\n2020\nIEEE\n[67] (Bonadio et al., 2020)\n2020\nSpringer\n\
    [68] (Lei et al., 2020)\n2020\nSpringer\n[69] (Shrestha et al., 2020)\n2020\n\
    Elsevier\n[70] (Sutrala et al., 2020)\n2020\nIEEE\n[71] (Ahmad et al., 2020)\n\
    2020\nIEEE\n[72] (Shala et al., 2020)\n2020\nIEEE\n[73] (Zhuo Ma et al., 2020)\n\
    2020\nIEEE\n[74] (Ryu et al., 2020)\n2020\nIEEE\n[75] (Zhao et al., 2020)s\n2020\n\
    Springer\n[76] (Li et al., 2020)\n2020\nIEEE\n[77] (Wang & Zhang, 2020)\n2020\n\
    IEEE\n[78] (Malik et al., 2020)\n2020\nSpringer\n[79] (Shi et al., 2020)\n2020\n\
    Springer\n[80] (Yang et al., 2020)\n2020\nIEEE\n[81] (Cho & Perera, 2020)\n2020\n\
    ACM\n[82] (Jiang et al., 2020)\n2020\nACM\n[83] (Zhaowei Ma et al., 2020)\n2020\n\
    ACM\n[84] (Tomar, 2020)\n2020\nACM\n[85] (Ayaz et al., 2020)\n2020\nIEEE\n[86]\
    \ (Hussain et al., 2020)\n2020\nIEEE\n[87] (Lin et al., 2020)\n2020\nIEEE\n[88]\
    \ (Mershad, 2020)\n2020\nIEEE\n[89] (Zheng et al., 2020)\n2020\nIEEE\n[90] (Wang\
    \ et al., 2020)\n2020\nIEEE\n[15] (Li et al., 2019)\n2019\nSpringer\n[55] (Ali\
    \ et al., 2019)\n2019\nElsevier\n[56] (Shrestha & Nam, 2019)\n2019\nIEEE\nSustainability\
    \ 2022, 14, 3919\n16 of 31\nTable 3. Cont.\nArticle\nYear\nSource\n[57] (Xie et\
    \ al., 2019)\n2019\nIEEE\n[58] (Kim, 2019)\n2019\nIEEE\n[59] (Yang et al., 2019)\n\
    2019\nIEEE\n[60] (Zhang & Wang, 2019)\n2019\nIEEE\n[61] (Butt et al., 2019)\n\
    2019\nIEEE\n[62] (Lu et al., 2019)\n2019\nIEEE\n[63] (Feng et al., 2019)\n2019\n\
    IEEE\n[64] (De Maio et al., 2019)\n2019\nACM\n[65] (Zhang et al., 2019)\n2019\n\
    IEEE\n[66] (Zheng et al., 2019)\n2019\nIEEE\n[52] (Bao-Kun et al., 2018)\n2018\n\
    Springer\n[53] (Busygin et al., 2018)\n2018\nSpringer\n[54] (Lu et al., 2018)\n\
    2018\nIEEE\n5. RQ1: Blockchain Domains and Research Areas\nThe selected articles\
    \ were classiﬁed with respect to the research domains in order to\nanswer RQ1.\
    \ The classiﬁcation of the domains was achieved by giving consideration to the\n\
    implementation of blockchain technology in VANETs. The research focus was to determine\n\
    the corresponding ﬁelds when the blockchain meets VANETs, including the individual\n\
    entities. The classiﬁcation is demonstrated with the help of the pie chart presented\
    \ in\nFigure 10.\nFigure 10. Classiﬁcation of studies for blockchain-enabled VANETs.\n\
    Figure 10 highlights that 51% of the selected studies are related to blockchain\
    \ and\nVANETs. The graph of the results emphasizes the advancement of blockchain\
    \ technology\nin the realm of VANETs. The literature analysis conﬁrms that researchers\
    \ and practitioners\nare focusing on these technologies. In particular, the studies\
    \ indicate the resolutions\nfor the vehicle ad hoc network issues and challenges\
    \ through the employment of DLT.\nFigure 10 also represents the general and particular\
    \ areas when blockchain is integrated\nwith VANETs. The areas of blockchain, the\
    \ Internet of Vehicles, VANETs, named data\nSustainability 2022, 14, 3919\n17\
    \ of 31\nnetworking (NDN), video stream networks (VSNs), the IoT, V2I, and Fog\
    \ Computing\nare the signiﬁcant literature ﬁndings. The NDN is considered to be\
    \ a future Internet\narchitecture, similar to an IP address, in which the data\
    \ names are used for the packet\nforwarding. NDN is in its earlier stages, and\
    \ it can therefore be considered for future\nresearch in blockchain-enabled VANETs.\
    \ Similarly, VSNs are used for multimedia sharing\nacross entities, and blockchain\
    \ can be applied to VSNs for data integrity and security over\nthe air. Later\
    \ in this section, the implementations of the other areas are discussed in detail.\n\
    6. RQ2: Blockchain Framework for VANETs\nThe blockchain-based research methodologies\
    \ and techniques were determined from\nthe selected articles to answer RQ2. The\
    \ highlighted blockchain techniques can be employed\nto improve VANETs. There\
    \ are 10 techniques that are examined in detail and illustrated in\nFigure 11,\
    \ and the rest of the techniques are mentioned as “other”. Figure 12 segregates\
    \ the\nnumbers of studies with regard to the techniques in order to demonstrate\
    \ the signiﬁcance\nof the studies against the techniques.\nIn Figure 11, the blockchain-based\
    \ techniques are illustrated, and these can be em-\nployed to obtain blockchain-enabled\
    \ VANETs. Blockchain-enabled frameworks [67], decen-\ntralized architectures,\
    \ and techniques based on cryptography are discussed in the majority\nof the selected\
    \ studies in relation to overcoming the integration of the blockchain and\nVANETs.\n\
    Figure 12 emphasizes the techniques of blockchain and their signiﬁcance can be\n\
    analyzed on the basis of the numbers of studies on them. Blockchain frameworks\
    \ and\ndecentralized authentication schemes are discussed in 24 aggregated studies\
    \ out of 68,\nwhich shows that blockchain frameworks are being employed in different\
    \ IoT sectors.\nConnected vehicles (CVs) are one of the most promising areas of\
    \ research in the realm\nof blockchain. Therefore, the framework for blockchain\
    \ and CVs is also studied in the\nmost recent research in order to understand\
    \ the dynamics [112]. Similarly, in this research\non VANETs, eight studies presented\
    \ innovative frameworks for integrating blockchain\nand VANETs.\nFigure 11. An\
    \ overview and classiﬁcation of blockchain techniques.\nSustainability 2022, 14,\
    \ 3919\n18 of 31\nFigure 12. Blockchain techniques and publications.\n6.1. Decentralized\
    \ Architecture for VANETs\nAs can be seen in Figure 12, the blockchain framework\
    \ and the decentralized au-\nthentication mechanism are discussed in a total of\
    \ 24 studies out of 68 shortlisted articles.\nFurthermore, the practically possible\
    \ decentralized architecture is discussed in only 3 stud-\nies out of 68. Therefore,\
    \ an advanced decentralized architecture is one of the most prominent\nneeds of\
    \ our time. The state of the architecture is determined thoroughly in this study\
    \ and\nis demonstrated in Figure 13.\nFigure 13. Decentralized architecture for\
    \ VANETs.\nThe identity and privacy of vehicles and their locations were analyzed\
    \ using the\nconstruction approach of the IoT chain architecture and private blockchain\
    \ [5,38] to obtain\na blockchain-based architecture for VANETs, as is shown in\
    \ Figure 13. The rectiﬁed and\nanalyzed architecture is based on eight different\
    \ components: vehicles, the roadside unit\n(RSU), the onboard unit (OBU), the\
    \ infrastructure, the blockchain network, the smart\ncontract, the miner, and\
    \ the agent node.\nSustainability 2022, 14, 3919\n19 of 31\n6.1.1. Vehicles\n\
    Vehicles are considered to be one of the essential moving components of blockchain-\n\
    enabled VANETs. The onboard units installed in vehicles help facilitate communication\n\
    with the core network.\n6.1.2. On-Board Unit\nThe OBU is also known as a tracking\
    \ device, or a data terminal, which is mounted on\nthe vehicle. This component\
    \ is responsible for the vehicle communication with servers or\nadjacent nodes.\n\
    6.1.3. Roadside Unit\nThe RSU is considered to be an access point in the network.\
    \ This unit is responsible\nfor collecting data from the OBUs and transmitting\
    \ it to the core network in real time. The\nRSU also transmits trafﬁc, emergency,\
    \ and weather-related information for the assistance\nof drivers and ﬂeet staff.\n\
    6.1.4. Core Network\nThe core network consists of several servers and ensures\
    \ connectivity with vehicles\nfor the data transmission through the RSU. The CA,\
    \ database, application, and web servers\nlie in the core network. All the data\
    \ stored on these servers is encrypted in order to conﬁrm\nthe data integrity\
    \ and security. The core network is responsible for maintaining all the\ncommunication\
    \ messages in real time for further decision making.\n6.1.5. Blockchain Network\n\
    This literature review analyzes the blockchain network with the aim of ensuring\n\
    privacy protection in the blockchain-based architecture for VANETs. The private\
    \ chain\narchitecture was examined, in which all the hash values are stored in\
    \ the network to avoid\nmalicious attacks. However, the data cannot be tampered\
    \ with or changed because the\nblockchain is immutable.\n6.1.6. Smart Contracts\n\
    The protocols (referred to as “contracts”) are clearly deﬁned for the authentication,\n\
    anonymity, data encoding and decoding, etc. The use of contracts also helps to\
    \ save\ntransaction costs.\n6.1.7. Agent Node\nThe participant is considered to\
    \ be an agent node in a decentralized network. The\nparticipants participate in\
    \ a consensus mechanism and ensure the backup of the network.\nThe agent node\
    \ also provides correctness across transactions.\n6.1.8. Miner\nThe special agent\
    \ node is considered to be a miner node when it tries to solve the\nmathematical\
    \ problem and solves it successfully. The miner node solves the puzzle and\nobtains\
    \ the legal right to keep the block. The miner node is also responsible for the\
    \ mining\nand validating of new blocks. The updated data is saved in a newly established\
    \ block, and\nall of the other participants update the respective storage accordingly\
    \ in the blockchain.\nThe components of the blockchain-based framework for VANETs\
    \ are discussed above,\nand their interactions are demonstrated in Figure 14.\n\
    Sustainability 2022, 14, 3919\n20 of 31\nFigure 14. Blockchain-enabled VANET communication\
    \ architecture.\n7. RQ3: Blockchain and the IoT/VANET Challenges, Limitations,\
    \ and Techniques\nTo answer RQ3, Table 4 explains the methods, challenges and\
    \ limitations when\nblockchain integration takes place with VANETs. The advantages\
    \ and challenges of the tra-\nditional models are described as follows: The Bayesian\
    \ inference model [113] provides the\nmechanism for decentralized trust management\
    \ and ensures the consistency and reliability\nof the storage or database. The\
    \ composition of the trust management and privacy preserva-\ntion is one of the\
    \ major drawbacks of this methodology. The proof of work (POW) is used\nas a consensus\
    \ mechanism to validate the authentic and deserving nodes that have good\nreputations\
    \ and computing power. In our proposed architecture, the message exchange\nand\
    \ identiﬁcation of malicious nodes can be managed by using POW. The provision\
    \ of\ninformation sharing will only be available across vehicles or entities having\
    \ the capability\nto prove their worth by solving a puzzle. The POW [91] needs\
    \ further enhancement to\ndeal with the crucial event message dissemination in\
    \ dynamic topology in order to achieve\nlow computation and maximum throughput.\
    \ The proof of driving mechanism is also\nhighlighted by practitioners to mitigate\
    \ the issues of the POW and proof of stake. The\nconditional anonymity and improved\
    \ transparency are observed in the blockchain-based\nanonymous reputation system\
    \ (BARS) [114], but it is also vulnerable to various attacks. The\ncertiﬁcate\
    \ less public key signature (CL-PKS) [55] is recognized as one of the efﬁcient\
    \ meth-\nods for vehicle-to-infrastructure communication with lower computation\
    \ costs. However,\nit needs to be enhanced more for vehicle-to-vehicle communication.\
    \ The hierarchical tem-\nporal memory (HTM) method [115] was found to be effective\
    \ and efﬁcient for identifying\nmalicious users, but the challenge of battling\
    \ frequent attacks persists for this methodology.\nSimilarly, the implementation\
    \ of an improved growing hierarchical self-organizing map\n(I-GHSOM) is critically\
    \ important to achieving intrusion detection functionality. It can\nbe used in\
    \ the proposed decentralized architecture as a composite mechanism to handle\n\
    the large number of vehicles in dynamic topology, and to intercept intrusions\
    \ accordingly\nfor faster and more secure message transmission. The I-GHSOM [116]\
    \ is quick compared\nto other methods for detecting multiple types of attacks.\
    \ The message-by-vehicle can be\nmined quickly by using this method. However,\
    \ it needs to be improved in terms of the\nmanagement of the overheads. The better\
    \ effectiveness and enhanced data transmission\nwere analyzed under the methodology\
    \ of uniﬁed trust management, but this lacks security\nbecause of virtualization\
    \ and software-deﬁned networks [117] Lastly, the methodology of\nblockchain-based\
    \ VANETs [9] was analyzed and was recognized as having one of the most\neffective\
    \ data processing times, as well as privacy protection. Earlier, this methodology\n\
    depended on trusted centralized entities, but the advancement of blockchain has\
    \ made it\ndecentralized and distributed. However, this methodology is regarded\
    \ as the most useful\nfor when blockchain meets VANETs.\nSustainability 2022,\
    \ 14, 3919\n21 of 31\nTable 4. Methods/techniques lead to blockchain-enabled VANETs.\n\
    Article\nYear\nMethod\nAdvantages\nDrawbacks\n[15]\n(Li et al., 2019)\n2019\n\
    Blockchain Based\nVANETs\nThis is the most\nadvanced methodology\nused for state\
    \ of the art\nprivacy protection and\nreal time data\ntransmission across\nvehicle\
    \ to everything\nIn nascent stages, this methodology relied\non trusted centralized\
    \ entities with a\ndrawback of center point failure, but the\nadvancement of blockchain\
    \ has made it\ndecentralized and distributed in all as\naspects. However, this\
    \ methodology is\nregarded as the most useful when\nblockchain meets VANETs.\n\
    [113]\n(Xia et al., 2020)\n2020\nBayesian Model\nThis method provides\nmechanism\
    \ for\ndecentralize trust\nmanagement and\nensures consistency\nand reliability\
    \ of the\nstorage or database\nThe composition of trust management\nand privacy\
    \ preservation is one of the\nmajor drawbacks of this methodology.\n[91]\n(Kudva\
    \ et al., 2021)\n2020\nProof of Work\nThis method provides\ntrustworthiness\n\
    without storage\noverheads\nIt needs enhancement to deal with crucial\nevent message\
    \ dissemination for better\nperformance.\n[114]\n(She et al., 2019)\n2019\nBARS\n\
    This method provides\ntransparency and\nanonymity and also\nensure effective and\n\
    robust mechanism\nThis methodology is more vulnerable to\nvarious attacks.\n[55]\n\
    (Ali et al., 2019)\n2019\nCL-PKS\nThis method provides\nreliable communication\n\
    between vehicles to\ninfrastructure with less\ncomputational cost.\nThis method\
    \ lacks in vehicle-to-vehicle\ncommunication.\n[115]\n(Hasrouny et al., 2019)\n\
    2019\nHTM\nThis method provides\ntrustworthiness with\nquick and effective\nidentiﬁcation\
    \ of\nmalicious users\nThis method cannot handle frequent\nattacks which makes\
    \ it more vulnerable\nagainst the frequent attacks.\n[116]\n(Liang et al., 2019)\n\
    2019\nI-GHSOM\nThis method has the\nability to detect the\nattacks rapidly. It\
    \ also\nensure quick encoding\nof real time messages\ntransmitted by vehicles.\n\
    This method needs to improve in terms of\nmanagement of overheads.\n[117]\n(He\
    \ et al., 2019)\n2019\nUniﬁed Trust\nManagement\nThis method provides\neffective\
    \ data\ntransmission and trust\nmanagement\nmechanism\nThis method lacks in security\
    \ due to\nvirtualization and security of\nsoftware-deﬁned networks.\nTable 4 deﬁnes\
    \ the methodologies and highlights the challenges for VANETs, which\nare addressed\
    \ by employing the inherent characteristics of blockchain technology. The\ndetailed\
    \ list of the blockchain issues is presented in Figure 14, and these are addressed\n\
    by integrating the blockchain with IoT technologies. Figure 15 highlights that\
    \ 14 out of\n68 studies discuss the issues of trust management and its resolutions.\
    \ Privacy management\nis discussed in 13 out of 68 studies, with general security\
    \ issues discussed in 16 selected\nstudies, which makes it still one of the most\
    \ prominent issues in blockchain-based VANETs.\nSustainability 2022, 14, 3919\n\
    22 of 31\nIssues regarding the proposed frameworks of blockchain are discussed\
    \ in three of the\nselected studies and were validated accordingly.\nFigure 15.\
    \ General blockchain issues and numbers of studies.\nLastly, distributed and fog\
    \ computing are also hot areas for practitioners since the\nblockchain conference\
    \ took place in 2018 for future research and directions.\n8. RQ4: General Blockchain\
    \ Limitations and Techniques\nTo answer RQ4, and to determine the corresponding\
    \ limitations and challenges faced\nby blockchain, we classiﬁed the studies with\
    \ respect to the challenges and the applied\ntechniques and models to overcome\
    \ the limitations. The challenges of security, privacy,\nand key and trust management\
    \ affect every domain when they meet with blockchain.\nTherefore, we not only\
    \ identify the major issues, but we also highlight the techniques and\nmodels\
    \ to overcome the challenges. The research focus is to ﬁll the research gap in\
    \ terms of\nthe challenges that arise when blockchain meets with any of the other\
    \ domains. Table 5\npresents the classiﬁcation of the studies with respect to\
    \ the major issues, and the techniques\nfor overcoming the limitations. Table\
    \ 5 presents the limitations and the corresponding\ntechniques and models along\
    \ with the source, which can be adopted to solve the problems\nof blockchain-enabled\
    \ VANETs.\nTable 5. Techniques and limitations of blockchain when met with multiple\
    \ domains.\nArticle\nLimitations\nTechniques/Models\n[9] (Poniszewska-Mara´nda\
    \ & Kryvinska,\n2018)\nTransparency and auditability\nIntelligent agents and multi-agent\n\
    architecture for auditable blockchain\n[15] (Li et al., 2019)\nIdentity and privacy\
    \ protection\nBlockchain based VANET & UGG, IPP\nand LPP algorithm for identity\
    \ protection\n[19] (Bagga et al., 2020)\nData Integrity, open channel Security\
    \ and\nsecure data transmission\nPay-go protocol\n[118] (Buterin, 2014)\nConsensus\
    \ issues\nproof of work based blockchain\n[114] (She et al., 2019)\nMalicious\
    \ attacks and suspicious node\ndetection\nBlockchain trust model (BTM) and smart\n\
    contracts\n[55] (Ali et al., 2019)\nMessage exchange authentication\nCertiﬁcate\
    \ less public key signature\n(CL-PKS) scheme using bilinear pairing\nSustainability\
    \ 2022, 14, 3919\n23 of 31\nTable 5. Cont.\nArticle\nLimitations\nTechniques/Models\n\
    [119] (Kheliﬁ et al., 2020)\nSecurity for content delivery and caching\nNDN based\
    \ security architecture\nReputation-based blockchain mechanism\n[68] (Lei et al.,\
    \ 2020)\nCache poisoning, key management and\naccess control\nBlockchain-based\
    \ security architecture\n[120] (Minoli & Occhiogrosso, 2018)\nSecurity (End-End)\
    \ Mitigation\nPermission less blockchain using\ncryptographic schemes\n[69] (Shrestha\
    \ et al., 2020)\nTime critical message dissemination\nPublic blockchain mechanism\
    \ for\nmessage cohesion\n[56] (Shrestha & Nam, 2019)\nMobility, latency, trust\
    \ management,\nsecurity and 51% attack\nRegional blockchain model\n[93] (Alharthi\
    \ et al., 2021)\nsecurity vulnerabilities such as\ndenial-of-service (DoS), replay\
    \ attacks\nand Sybil attacks\nBiometrics blockchain framework\n[121] (Luo et al.,\
    \ 2019)\nMalicious attacks and data spooﬁng\nblockchain enabled trust based location\n\
    privacy protection scheme\n[52] (Bao-Kun et al., 2018)\nPrivacy management\nBlockchain\
    \ based data sharing scheme\nusing Paillier cryptosystem\n[70] (Sutrala et al.,\
    \ 2020)\nSecurity attacks: replay, traceability,\nman-in-the-middle and impersonation\n\
    Privacy preserving batch\nveriﬁcation-based authentication\nmechanism using elliptic\
    \ curve\ncryptography\n[71] (Ahmad et al., 2020)\nMan-in-the-middle (MiTM) attack\
    \ and\nTrust Management\nMiTM attack resistance trust model\n[122] (Abou-Nassar\
    \ et al., 2020)\nVehicular data conﬁdentiality,\naccessibility and information\
    \ reliability\nBlockchain decentralized interoperable\ntrust framework (DIT) and\
    \ indirect trust\ninference system (ITIS)\n[72] (Shala et al., 2020)\nTrust and\
    \ security of vehicular\ninformation\nmulti-layer adaptive and trust-based\nweighting\
    \ model using control loops and\nsmart contracts\n[57] (Xie et al., 2019)\nMalicious\
    \ node identiﬁcation in VANETs\nSoftware-deﬁned network (SDN)\narchitecture\n\
    [123] (Tan & Chung, 2019)\nResource management and key\ndistribution\nSecure authentication\
    \ and key\nmanagement scheme using consortium\nblockchain\n[124] (Hu et al., 2019)\n\
    Security, authentication and consensus\nissues\nByzantine fault tolerance algorithm\n\
    [73] (Ma et al., 2020)\nAttacks: DoS, public key tampering and\ncollusion and\
    \ key management\nBlockchain enabled decentralized key\nmanagement mechanism (DB-KMM),\
    \ key\nagreement protocol based on the\nbivariate polynomial\n[59] (Yang et al.,\
    \ 2019)\nData correctness, reliability and tamper\nprooﬁng\nProof of event consensus\n\
    [60] (Zhang & Wang, 2019)\nData conﬁdentiality, privacy and\ninformation repudiation\n\
    ElGamal encryption and group signature\nalgorithm\n[75] (Zhao et al., 2020)\n\
    Resource allocation, malicious attacks,\ntrust value management\nDecentralized\
    \ trust management\narchitecture, joint proof-of-stake and\nmodiﬁed PoS-mPBFT\
    \ algorithm\n[76] (Li et al., 2020)\nPrivacy management and security of\nvehicular\
    \ data\nﬁne-grained access control scheme based\non cipher text-based attribute\
    \ encryption\n(CPABE)\nSustainability 2022, 14, 3919\n24 of 31\nTable 5. Cont.\n\
    Article\nLimitations\nTechniques/Models\n[77] (Wang & Zhang, 2020)\nSecure information\
    \ exchange, forwarding\nand limitations of proxy re-encryption\nalgorithm\nData\
    \ sharing and customized services\nbased on the consortium blockchain\nusing cipher\
    \ text-policy attribute-based\nproxy re-encryption algorithm\n[94] (Hei et al.,\
    \ 2021)\nStorage, data integrity and\nnon-accountability of denial of service\n\
    attack\nP2P cloud storage scheme with smart\ncontracts on ethereum\n[62] (Lu et\
    \ al., 2019)\nDistributed authentication, identity\nprivacy and security attacks\n\
    privacy preserving authentication (BPPA)\nscheme and Merkle Patricia tree (MPT)\n\
    [63] (Feng et al., 2019)\nAuthentication and privacy management\nBlockchain assisted\
    \ privacy preserving\nauthentication system (BPAS)\n[54] (Lu et al., 2018)\nPrivacy\
    \ management\nBlockchain-based anonymous reputation\nsystem (BARS) and reputation\
    \ evaluation\nalgorithm\n[78] (Malik et al., 2020)\nNode trust ability prediction,\
    \ privacy\npreservation and data sanitization\nSea lion explored-whale optimization\n\
    algorithm\n9. Discussions\nThe inherent characteristics of blockchain have received\
    \ an immense amount of atten-\ntion from researchers and practitioners in the\
    \ last decade. The escalation and implementa-\ntions of blockchain with IoT are\
    \ being experimented on as pilot projects in various sectors.\nThe DLT has achieved\
    \ both theoretical and practical endorsements from the academic and\nindustrial\
    \ perspectives. The classiﬁcations of the studies with respect to the theoretical,\n\
    simulation, and experiment-based results are presented in Figure 16. There are\
    \ 32 studies\nout of 68 that are based on theoretical analyses, 23 studies that\
    \ are based on simulation\nresults, and only 13 studies that are based on experimental\
    \ results. Figure 16 highlights the\nsigniﬁcance of the practical implementation\
    \ as future research for the practitioners.\nFigure 16. Result-wise classiﬁcation\
    \ of studies.\nThe research questions are answered in this review to determine\
    \ the future directions\nof blockchain technology in the particular domain of\
    \ VANETs. There is a research gap\nbetween blockchain and its applications, and\
    \ particularly for vehicular networks. The\nmajor research issues for integrating\
    \ blockchain and VANETs are security, traceability,\nand transparency. The major\
    \ implementation of VANETs is in the digitalization of ﬂeet\ntelematics. Further\
    \ details with regard to the issues and implementations are presented in\nthe\
    \ following sections.\n9.1. Security, Traceability, and Transparency\nThe traceability,\
    \ security, and transparency are always challenges for VANETs and\nother related\
    \ technologies. These challenges arise when handshaking protocols are required\n\
    Sustainability 2022, 14, 3919\n25 of 31\nfor better hand-offs in centralized architecture.\
    \ The DLT can be applied in VANETs because\nof the immense number of characteristics\
    \ for overcoming such challenges of security. It also\nprovides trust and consensus\
    \ mechanisms to increase the reliability and traceability. The\nledger is shared\
    \ among the nodes to prevent the loss of data integrity. The major players\nat\
    \ the sensory layer, including the actuators, gateways, routers, and things, have\
    \ shared\nledgers to permit access on a per need basis for the process ﬂows. The\
    \ blockchain, with\nan immense number of features and advantages, eliminates the\
    \ centralized systems and\npromotes immutable, transparent, and efﬁcient architecture\
    \ for other domains.\n9.2. IoV and Fleet Management Digitalization\nThe VANETs\
    \ and the corresponding technologies are critical for ITS. This is a network\n\
    of connected vehicles. The connection modes are facilitated through satellite\
    \ (GPS) or\ncellular networks (3G, 4G, 5G), and this depends on the onboard unit\
    \ (OBU) embedded\ninside the vehicle. Some OBUs provide multiple modes of connection\
    \ in order to provide\nreliability and coverage. RFID technology can provide each\
    \ driver with a unique digital\nidentity. Remote ﬂeet managers can track the driver’s\
    \ performance, and provide warnings\nfor bad performances and rewards for good\
    \ performances, which can boost the driver’s\nmotivation to perform well on the\
    \ road. Fleet management systems, such as food delivery\nﬂeet management, taxi\
    \ ﬂeet management, oil distribution ﬂeet management, etc., can beneﬁt\nsigniﬁcantly\
    \ from the implementation of blockchain-enabled VANETs. The surveillance\ncameras\
    \ can also be attached to the OBU for vehicle surveillance for the ﬂeet managers.\n\
    Parameters, such as the engine speed, the tank temperature, the tire pressure,\
    \ and the fuel\nconsumption can be monitored through sensors and can be controlled\
    \ remotely for vehicle\nsafety control. Figure 17 illustrates VANETs and their\
    \ applications in ﬂeet management.\nFigure 17. An overview of ﬂeet management\
    \ system and its components.\n9.3. Blockchain-Enabled VANET Applications\nThe\
    \ research implication of blockchain-enabled IoT was found suitable for the areas\n\
    described in the following sections, where its immediate implementation can completely\n\
    change the perspective.\n9.3.1. Fleet and Journey Management for ITS\nThe efﬁcient\
    \ movement of vehicles with containers is always challenging for ﬂeet\nowners.\
    \ Blockchain-enabled VANETs can help ﬂeet owners track their ﬂeets in real time\n\
    by preserving the coordinates, speeds, altitudes, angles, temperatures, and fuel\
    \ levels\nusing a real-time messaging system. In general supply chains and fuel\
    \ supply chains,\nSustainability 2022, 14, 3919\n26 of 31\nblockchain promote\
    \ trust among all the authorities, and it also enables the quick and\nefﬁcient\
    \ movement of products with greater consensus.\n9.3.2. Asset Tracking\nThe compliance\
    \ with safety and security is always a challenge for authorities when\nthey are\
    \ attempting to ensure efﬁcient asset movement. The blockchain-enabled VANETs\n\
    can help to store data in shared ledgers throughout the product’s lifecycle. The\
    \ ledger\ninformation can be shared with the concerned authorities, consignees,\
    \ manufacturers, and\nshippers. The blockchain technology in asset management\
    \ is easy to implement, secure,\nand transparent, with the cutting-edge feature\
    \ of cost-effectiveness.\n9.3.3. Data Science and Management\nData science and\
    \ management applications can be developed on blockchain technology\nto ensure\
    \ tamper-free maintenance and operational data. This helps to maintain the data\n\
    integrity in data sciences to prevent prediction anomalies. The trusted ledger\
    \ of the\ndata changes can also be shared with the appropriate authorities for\
    \ further compliance\nand management.\n9.3.4. Solid Waste Management\nResearchers\
    \ have surveyed blockchain-and-VANET-based waste management models\nfor the advancement\
    \ of waste collection procedures in developing cities. The key compo-\nnents of\
    \ waste management models are waste collection, truck routing, transportation,\
    \ and\nthe monitoring of the recycling of certain types of garbage. Researchers\
    \ propose intelligent\nalgorithms for the collection, disposal, and recycling\
    \ of trash.\n9.3.5. Contact Tracing and Social Distancing\nThe only way to prevent\
    \ pandemics is to maintain social distancing. The decentral-\nized model of contact\
    \ tracing is endorsed by an international consortium, which consists\nof Google\
    \ and Apple, in order to ensure transparency and privacy. Researchers have\nsurveyed\
    \ blockchain- and IoT-enabled techniques for contact tracing to preserve privacy,\n\
    transparency, and security. The analyzed composition of blockchain and IoV can\
    \ provide\ndigital contact tracing mechanisms for the prevention of pandemics\
    \ such as COVID-19.\n10. Conclusions\nThis study encapsulates a systematic review\
    \ and analysis that is based on multidis-\nciplinary research studies, and that\
    \ addresses the issues that can occur when blockchain\nmeets the IoT, and especially\
    \ VANETs. It further provides a comprehensive classiﬁcation of\nthe articles on\
    \ the basis of the methods and techniques used to overcome the challenges of\n\
    VANETs. The complete decentralized architecture of VANETs is derived from the\
    \ extensive\nliterature review and is referred to as “blockchain-enabled VANET\
    \ architecture”.\nThe substantial contribution of this review is that it highlights\
    \ the signiﬁcance of\nblockchain in other domains with the inherent characteristics.\
    \ The particular area of\nVANETs was selected in this review in order to validate\
    \ the potentials of blockchain\ntechnology. The decentralized architecture was\
    \ also derived for vehicular networks on the\nbasis of DLT. The speciﬁc mechanisms\
    \ of VANETs, as well as the IoT, such as handshaking,\nhand-offs, and data communication,\
    \ are also discussed in the light of blockchain technology.\nThe challenges, limitations,\
    \ and open issues of blockchain-enabled applications are\nalso classiﬁed for future\
    \ prospects. This study is not only limited to the integration of\nblockchain\
    \ and VANETs, but it also discusses the potential blockchain issues that may be\n\
    addressed in future research. The interoperability, scalability, and storage-related\
    \ technical\nissues still need to be addressed by practitioners. Lastly, this\
    \ study also provides a classiﬁca-\ntion of the articles that is based on the\
    \ result types, such as the theoretical, simulation, and\nexperimental results.\
    \ This classiﬁcation highlights that blockchain-enabled pilot projects\nare rare.\
    \ Therefore, practical implementation should be considered by practitioners for\
    \ a\nSustainability 2022, 14, 3919\n27 of 31\nmore concrete implementation of\
    \ blockchain in different domains. This study also sheds\nlight on an overview\
    \ of the extant blockchain-enabled IoT chain research as future works.\nAs part\
    \ of the future work, research can commence on 5G-enabled blockchain-based\nVANETs\
    \ using narrowband-IoT (NB-IoT) technologies for high mobility and latency, and\n\
    low power consumption. This study could also lead to the implementation of blockchain\n\
    in different sectors, such as blockchain-enabled healthcare transportation for\
    \ door-to-door\nvaccination, which can be targeted to handle pandemic-like situations.\
    \ The future implica-\ntions of this study could also be helpful for contact tracing\
    \ and isolation management in the\nrealm of the IoT. The proposed decentralized\
    \ architecture can also be extended to the design\nof state-of-the-art journey\
    \ management systems for autonomous vehicles and drones.\nAuthor Contributions:\
    \ Conceptualization, M.S. and M.K.K.; methodology, M.B.A.; software, M.S.;\nvalidation,\
    \ M.B.A., M.K.K. and M.S.; formal analysis, M.B.A.; investigation, M.K.K.; resources,\n\
    M.S.; data curation, M.K.K.; writing—original draft preparation, M.S.; writing—review\
    \ and editing,\nM.B.A.; visualization, M.B.A.; supervision, M.K.K. and M.B.A.;\
    \ project administration, M.S.; funding\nacquisition, M.K.K. All authors have\
    \ read and agreed to the published version of the manuscript.\nFunding: This research\
    \ received no external funding.\nInstitutional Review Board Statement: Not applicable.\n\
    Informed Consent Statement: Not applicable.\nConﬂicts of Interest: The authors\
    \ declare no conﬂict of interest.\nReferences\n1.\nCole, R.; Stevenson, M.; Aitken,\
    \ J. Blockchain technology: Implications for operations and supply chain management.\
    \ Supply\nChain. Manag. Int. J. 2019, 24, 469–483. [CrossRef]\n2.\nTönnissen,\
    \ S.; Teuteberg, F. Analysing the impact of blockchain-technology for operations\
    \ and supply chain management: An\nexplanatory model drawn from multiple case\
    \ studies. Int. J. Inf. Manag. 2020, 52, 101953. [CrossRef]\n3.\nÁlvares, P.;\
    \ Silva, L.; Magaia, N. Blockchain-Based Solutions for UAV-Assisted Connected\
    \ Vehicle Networks in Smart Cities: A\nReview, Open Issues, and Future Perspectives.\
    \ Telecom 2021, 2, 108–140. [CrossRef]\n4.\nAlladi, T.; Chamola, V.; Parizi, R.M.;\
    \ Choo, K.-K.R. Blockchain Applications for Industry 4.0 and Industrial IoT: A\
    \ Review. IEEE\nAccess 2019, 7, 176935–176951. [CrossRef]\n5.\nDwivedi, A.D.;\
    \ Srivastava, G.; Dhar, S.; Singh, R. A Decentralized Privacy-Preserving Healthcare\
    \ Blockchain for IoT. Sensors 2019,\n19, 326. [CrossRef]\n6.\nMani, V.; Manickam,\
    \ P.; Alotaibi, Y.; Alghamdi, S.; Khalaf, O.I. Hyperledger Healthchain: Patient-Centric\
    \ IPFS-Based Storage of\nHealth Records. Electronics 2021, 10, 3003. [CrossRef]\n\
    7.\nAzaria, A.; Ekblaw, A.; Vieira, T.; Lippman, A. MedRec: Using Blockchain for\
    \ Medical Data Access and Permission Management.\nIn Proceedings of the 2016 2nd\
    \ International Conference on Open and Big Data (OBD), Vienna, Austria, 22–24\
    \ August 2016;\npp. 25–30.\n8.\nTreleaven, P.; Brown, R.G.; Yang, D. Blockchain\
    \ Technology in Finance. Computer 2017, 50, 14–17. [CrossRef]\n9.\nPawlak, M.;\
    \ Poniszewska-Mara´nda, A.; Kryvinska, N. Towards the intelligent agents for blockchain\
    \ e-voting system. Procedia\nComput. Sci. 2018, 141, 239–246. [CrossRef]\n10.\n\
    Sheth, A.; Subramanian, H. Blockchain and contract theory: Modeling smart contracts\
    \ using insurance markets. Manag. Financ.\n2019, 46, 803–814. [CrossRef]\n11.\n\
    Jha, N.; Prashar, D.; Khalaf, O.I.; Alotaibi, Y.; Alsufyani, A.; Alghamdi, S.\
    \ Blockchain Based Crop Insurance: A Decentralized\nInsurance System for Modernization\
    \ of Indian Farmers. Sustainability 2021, 13, 8921. [CrossRef]\n12.\nSyed, T.A.;\
    \ Alzahrani, A.; Jan, S.; Siddiqui, M.S.; Nadeem, A.; Alghamdi, T. A Comparative\
    \ Analysis of Blockchain Architecture\nand its Applications: Problems and Recommendations.\
    \ IEEE Access 2019, 7, 176838–176869. [CrossRef]\n13.\nWan, P.K.; Huang, L.; Holtskog,\
    \ H. Blockchain-Enabled Information Sharing within a Supply Chain: A Systematic\
    \ Literature\nReview. IEEE Access 2020, 8, 49645–49656. [CrossRef]\n14.\nMatheu,\
    \ S.N.; Robles Enciso, A.; Molina Zarca, A.; Garcia-Carrillo, D.; Hernández-Ramos,\
    \ J.L.; Bernal Bernabe, J.; Skarmeta, A.F.\nSecurity Architecture for Deﬁning\
    \ and Enforcing Security Proﬁles in DLT/SDN-Based IoT Systems. Sensors 2020, 20,\
    \ 1882.\n[CrossRef] [PubMed]\n15.\nLi, H.; Pei, L.; Liao, D.; Sun, G.; Xu, D.\
    \ Blockchain Meets VANET: An Architecture for Identity and Location Privacy Protection\
    \ in\nVANET. Peer-to-Peer Netw. Appl. 2019, 12, 1178–1193. [CrossRef]\n16.\nKošt’ál,\
    \ K.; Helebrandt, P.; Belluš, M.; Ries, M.; Kotuliak, I. Management and Monitoring\
    \ of IoT Devices Using Blockchain. Sensors\n2019, 19, 856. [CrossRef] [PubMed]\n\
    Sustainability 2022, 14, 3919\n28 of 31\n17.\nMorse, E.A. From Rai stones to Blockchains:\
    \ The transformation of payments. Comput. Law Secur. Rev. 2018, 34, 946–953.\n\
    [CrossRef]\n18.\nSander, F.; Semeijn, J.; Mahr, D. The acceptance of blockchain\
    \ technology in meat traceability and transparency. Br. Food J. 2018,\n120, 2066–2079.\
    \ [CrossRef]\n19.\nBagga, P.; Das, A.K.; Wazid, M.; Rodrigues, J.J.P.C.; Park,\
    \ Y. Authentication Protocols in Internet of Vehicles: Taxonomy, Analysis,\nand\
    \ Challenges. IEEE Access 2020, 8, 54314–54344. [CrossRef]\n20.\nLo, S.K.; Liu,\
    \ Y.; Chia, S.Y.; Xu, X.; Lu, Q.; Zhu, L.; Ning, H. Analysis of Blockchain Solutions\
    \ for IoT: A Systematic Literature\nReview. IEEE Access 2019, 7, 58822–58835.\
    \ [CrossRef]\n21.\nConoscenti, M.; Vetrò, A.; De Martin, J.C. Blockchain for the\
    \ Internet of Things: A systematic literature review. In Proceedings of\nthe IEEE/ACS\
    \ 13th International Conference of Computer Systems and Applications (AICCSA),\
    \ Agadir, Morocco, 29 November–2\nDecember 2016; pp. 1–6. [CrossRef]\n22.\nIqbal,\
    \ S.; Noor, R.M.; Malik, A.W. A review of blockchain empowered vehicular network:\
    \ Performance evaluation of trusted\ntask ofﬂoading scheme. In Proceedings of\
    \ the IEEE 11th IEEE Symposium on Computer Applications & Industrial Electronics\n\
    (ISCAIE), Shah Alam, Malaysia, 3–4 April 2021; pp. 367–371.\n23.\nCasino, F.;\
    \ Dasaklis, T.K.; Patsakis, C. A systematic literature review of blockchain-based\
    \ applications: Current status, classiﬁcation\nand open issues. Telemat. Inform.\
    \ 2019, 36, 55–81. [CrossRef]\n24.\nShen, C.; Pena-Mora, F. Blockchain for Cities—A\
    \ Systematic Literature Review. IEEE Access 2018, 6, 76787–76819. [CrossRef]\n\
    25.\nDutta, P.; Choi, T.-M.; Somani, S.; Butala, R. Blockchain technology in supply\
    \ chain operations: Applications, challenges and\nresearch opportunities. Transp.\
    \ Res. Part E Logist. Transp. Rev. 2020, 142, 102067. [CrossRef] [PubMed]\n26.\n\
    Weber, I.; Xu, X.; Riveret, R.; Governatori, G.; Ponomarev, A.; Mendling, J. Untrusted\
    \ business process monitoring and execution\nusing blockchain. In Proceedings\
    \ of the International conference on business process management, Rio de Janeiro,\
    \ Brazil, 18–22\nSeptember 2016; pp. 329–347.\n27.\nNakamoto, S. Bitcoin: A peer-to-peer\
    \ electronic cash system. Decentralized Bus. Rev. 2008, 4, 21260. [CrossRef]\n\
    28.\nCrosby, M.; Pattanayak, P.; Verma, S.; Kalyanaraman, V. Blockchain technology:\
    \ Beyond bitcoin. Appl. Innov. 2016, 2, 71.\n29.\nCasey, M.J.; Wong, P. Global\
    \ supply chains are about to get better, thanks to blockchain. Harv. Bus. Rev.\
    \ 2017, 13, 1–6.\n30.\nToyoda, K.; Mathiopoulos, P.T.; Sasase, I.; Ohtsuki, T.\
    \ A Novel Blockchain-Based Product Ownership Management System\n(POMS) for Anti-Counterfeits\
    \ in the Post Supply Chain. IEEE Access 2017, 5, 17465–17477. [CrossRef]\n31.\n\
    Szabo, N. Smart contracts: Building blocks for digital markets. EXTROPY J. Transhumanist\
    \ Thought 2016, 18, 28.\n32.\nMagazzeni, D.; McBurney, P.; Nash, W. Validation\
    \ and Veriﬁcation of Smart Contracts: A Research Agenda. Computer 2017, 50,\n\
    50–57. [CrossRef]\n33.\nSato, T.; Himura, Y. Smart-contract based system operations\
    \ for permissioned blockchain. In Proceedings of the 29th IFIP\nInternational\
    \ Conference on New Technologies, Mobility and Security (NTMS), Paris, France,\
    \ 26–28 February 2018; pp. 1–6.\n34.\nWatanabe, H.; Fujimura, S.; Nakadaira, A.;\
    \ Miyazaki, Y.; Akutsu, A.; Kishigami, J.J. Blockchain contract: A complete consensus\n\
    using blockchain. In Proceedings of the IEEE 4th Global Conference on Consumer\
    \ Electronics (GCCE), Osaka, Japan, 27–30\nOctober 2015; pp. 577–578.\n35.\nJavaid,\
    \ U.; Aman, M.N.; Sikdar, B. DrivMan: Driving trust management and data sharing\
    \ in VANETS with blockchain and smart\ncontracts. 2019 IEEE 89th Vehicular Technology\
    \ Conference (VTC2019-Spring), Kuala Lumpur, Malaysia, 28 April–1 May 2019;\n\
    pp. 1–5.\n36.\nWang, Y.; Kogan, A. Designing conﬁdentiality-preserving Blockchain-based\
    \ transaction processing systems. Int. J. Account. Inf.\nSyst. 2018, 30, 1–18.\
    \ [CrossRef]\n37.\nChang, S.E.; Chen, Y.-C.; Wu, T.-C. Exploring blockchain technology\
    \ in international trade: Business process re-engineering for\nletter of credit.\
    \ Ind. Manag. Data Syst. 2019, 119, 1712–1733. [CrossRef]\n38.\nVaidya, B.; Mouftah,\
    \ H.T. IoT Applications and Services for Connected and Autonomous Electric Vehicles.\
    \ Arab. J. Sci. Eng. 2020,\n45, 2559–2569. [CrossRef]\n39.\nDing, S.; Cao, J.;\
    \ Li, C.; Fan, K.; Li, H. A Novel Attribute-Based Access Control Scheme Using\
    \ Blockchain for IoT. IEEE Access\n2019, 7, 38431–38441. [CrossRef]\n40.\nSingh,\
    \ S.; Hosen, A.S.M.S.; Yoon, B. Blockchain Security Attacks, Challenges, and Solutions\
    \ for the Future Distributed IoT\nNetwork. IEEE Access 2021, 9, 13938–13959. [CrossRef]\n\
    41.\nRay, P.P.; Dash, D.; Salah, K.; Kumar, N. Blockchain for IoT-based healthcare:\
    \ Background, consensus, platforms, and use cases.\nIEEE Syst. J. 2020, 15, 85–94.\
    \ [CrossRef]\n42.\nSaad, M.; Bin, M.; Ahmad, A.; Muhammad, M.; Khalid, A.G.; Mohammad,\
    \ A. Social Distancing and Isolation Management Using\nMachine-to-Machine Technologies\
    \ to Prevent Pandemics. Comput. Mater. Contin. 2021, 67, 3545–3562. [CrossRef]\n\
    43.\nMehmood, Y.; Marwat, S.N.K.; Kuladinithi, K.; Förster, A.; Zaki, Y.; Görg,\
    \ C.; Timm-Giel, A. M2M Potentials in logistics and\ntransportation industry.\
    \ Logist. Res. 2016, 9, 15. [CrossRef]\n44.\nSun, G.; Song, L.; Yu, H.; Chang,\
    \ V.; Du, X.; Guizani, M. V2V Routing in a VANET Based on the Autoregressive Integrated\
    \ Moving\nAverage Model. IEEE Trans. Veh. Technol. 2018, 68, 908–922. [CrossRef]\n\
    45.\nPeng, L.; Feng, W.; Yan, Z.; Li, Y.; Zhou, X.; Shimizu, S. Privacy preservation\
    \ in permissionless blockchain: A survey. Digit.\nCommun. Netw. 2021, 7, 295–307.\
    \ [CrossRef]\nSustainability 2022, 14, 3919\n29 of 31\n46.\nMoloisane, N.R.; Malekian,\
    \ R.; Bogatinoska, D.C. Wireless machine-to-machine communication for intelligent\
    \ transportation\nsystems: Internet of Vehicles and vehicle to grid. In Proceedings\
    \ of the 40th International Convention on Information and\nCommunication Technology,\
    \ Electronics and Microelectronics (MIPRO), Opatija, Croatia, 22–26 May 2017;\
    \ pp. 411–415.\n47.\nHussain, R.; Hussain, F.; Zeadally, S. Integration of VANET\
    \ and 5G Security: A review of design and implementation issues.\nFutur. Gener.\
    \ Comput. Syst. 2019, 101, 843–864. [CrossRef]\n48.\nKurugollu, F.; Ahmed, S.H.;\
    \ Hussain, R.; Ahmad, F.; Kerrache, C.A. Vehicular Sensor Networks: Applications,\
    \ Advances and\nChallenges. Sensors 2020, 20, 3686. [CrossRef] [PubMed]\n49.\n\
    Abbas, S.; Abu Talib, M.; Ahmed, A.; Khan, F.; Ahmad, S.; Kim, D.-H. Blockchain-Based\
    \ Authentication in Internet of Vehicles: A\nSurvey. Sensors 2021, 21, 7927. [CrossRef]\
    \ [PubMed]\n50.\nLan, L.; Wang, B.; Zhang, L.; Shi, R.; Li, F. An Event-driven\
    \ Service-oriented Architecture for Internet of Things Service Execution.\nInt.\
    \ J. Online Biomed. Eng. 2015, 11, 4–8. [CrossRef]\n51.\nKitchenham, B.; Brereton,\
    \ O.P.; Budgen, D.; Turner, M.; Bailey, J.; Linkman, S. Systematic literature\
    \ reviews in software\nengineering—A systematic literature review. Inf. Softw.\
    \ Technol. 2009, 51, 7–15. [CrossRef]\n52.\nBao-Kun, Z.; Lie-Huang, Z.; Shen,\
    \ M.; Gao, F.; Zhang, C.; Yan-Dong, L.; Yang, J. Scalable and privacy-preserving\
    \ data sharing\nbased on blockchain. J. Comput. Sci. Technol. 2018, 33, 557–567.\n\
    53.\nBusygin, A.G.; Konoplev, A.S.; Zegzhda, D.P. Providing Stable Operation of\
    \ Self-Organizing Cyber-Physical System via Adaptive\nTopology Management Methods\
    \ Using Blockchain-Like Directed Acyclic Graph. Autom. Control Comput. Sci. 2018,\
    \ 52, 1080–1083.\n[CrossRef]\n54.\nLu, Z.; Liu, W.; Wang, Q.; Qu, G.; Liu, Z.\
    \ A Privacy-Preserving Trust Model Based on Blockchain for VANETs. IEEE Access\
    \ 2018, 6,\n45655–45664. [CrossRef]\n55.\nAli, I.; Gervais, M.; Ahene, E.; Li,\
    \ F. A blockchain-based certiﬁcateless public key signature scheme for vehicle-to-infrastructure\n\
    communication in VANETs. J. Syst. Archit. 2019, 99, 101636. [CrossRef]\n56.\n\
    Shrestha, R.; Nam, S.Y. Regional Blockchain for Vehicular Networks to Prevent\
    \ 51% Attacks. IEEE Access 2019, 7, 95033–95045.\n[CrossRef]\n57.\nXie, L.; Ding,\
    \ Y.; Yang, H.; Wang, X. Blockchain-Based Secure and Trustworthy Internet of Things\
    \ in SDN-Enabled 5G-VANETs.\nIEEE Access 2019, 7, 56656–56666. [CrossRef]\n58.\n\
    Kim, S. Impacts of Mobility on Performance of Blockchain in VANET. IEEE Access\
    \ 2019, 7, 68646–68655. [CrossRef]\n59.\nYang, Y.-T.; Chou, L.-D.; Tseng, C.-W.;\
    \ Tseng, F.-H.; Liu, C.-C. Blockchain-Based Trafﬁc Event Validation and Trust\
    \ Veriﬁcation for\nVANETs. IEEE Access 2019, 7, 30868–30877. [CrossRef]\n60.\n\
    Zhang, X.; Wang, D. Adaptive Trafﬁc Signal Control Mechanism for Intelligent Transportation\
    \ Based on a Consortium Blockchain.\nIEEE Access 2019, 7, 97281–97295. [CrossRef]\n\
    61.\nButt, T.A.; Iqbal, R.; Salah, K.; Aloqaily, M.; Jararweh, Y. Privacy Management\
    \ in Social Internet of Vehicles: Review, Challenges\nand Blockchain Based Solutions.\
    \ IEEE Access 2019, 7, 79694–79713. [CrossRef]\n62.\nLu, Z.; Wang, Q.; Qu, G.;\
    \ Zhang, H.; Liu, Z. A Blockchain-Based Privacy-Preserving Authentication Scheme\
    \ for VANETs. IEEE\nTrans. Very Large Scale Integr. (VLSI) Syst. 2019, 27, 2792–2801.\
    \ [CrossRef]\n63.\nFeng, Q.; He, D.; Zeadally, S.; Liang, K. BPAS: Blockchain-Assisted\
    \ Privacy-Preserving Authentication System for Vehicular Ad\nHoc Networks. IEEE\
    \ Trans. Ind. Inform. 2020, 16, 4146–4155. [CrossRef]\n64.\nDe Maio, V.; Brundo\
    \ Uriarte, R.; Brandic, I. Energy and proﬁt-aware proof-of-stake ofﬂoading in\
    \ blockchain-based VANETs. In\nProceedings of the 12th IEEE/ACM International\
    \ Conference on Utility and Cloud Computing, Auckland, New Zealand, 2–5\nDecember\
    \ 2019; pp. 177–186.\n65.\nZhang, D.; Yu, F.R.; Yang, R. Blockchain-Based Distributed\
    \ Software-Deﬁned Vehicular Networks: A Dueling Deep Q—Learning\nApproach. IEEE\
    \ Trans. Cogn. Commun. Netw. 2019, 5, 1086–1100. [CrossRef]\n66.\nZheng, D.; Jing,\
    \ C.; Guo, R.; Gao, S.; Wang, L. A Traceable Blockchain-Based Access Authentication\
    \ System with Privacy\nPreservation in VANETs. IEEE Access 2019, 7, 117716–117726.\
    \ [CrossRef]\n67.\nBonadio, A.; Chiti, F.; Fantacci, R.; Vespri, V. An integrated\
    \ framework for blockchain inspired fog communications and computing\nin Internet\
    \ of Vehicles. J. Ambient Intell. Humaniz. Comput. 2019, 11, 755–762. [CrossRef]\n\
    68.\nLei, K.; Fang, J.; Zhang, Q.; Lou, J.; Du, M.; Huang, J.; Wang, J.; Xu, K.\
    \ Blockchain-Based Cache Poisoning Security Protection and\nPrivacy-Aware Access\
    \ Control in NDN Vehicular Edge Computing Networks. J. Grid Comput. 2020, 18,\
    \ 593–613. [CrossRef]\n69.\nShrestha, R.; Bajracharya, R.; Shrestha, A.P.; Nam,\
    \ S.Y. A new type of blockchain for secure message exchange in VANET. Digit.\n\
    Commun. Netw. 2020, 6, 177–186. [CrossRef]\n70.\nSutrala, A.K.; Bagga, P.; Das,\
    \ A.K.; Kumar, N.; Rodrigues, J.J.P.C.; Lorenz, P. On the Design of Conditional\
    \ Privacy Preserving\nBatch Veriﬁcation-Based Authentication Scheme for Internet\
    \ of Vehicles Deployment. IEEE Trans. Veh. Technol. 2020, 69, 5535–5548.\n[CrossRef]\n\
    71.\nAhmad, F.; Kurugollu, F.; Adnane, A.; Hussain, R.; Hussain, F. MARINE: Man-in-the-Middle\
    \ Attack Resistant Trust Model in\nConnected Vehicles. IEEE Internet Things J.\
    \ 2020, 7, 3310–3322. [CrossRef]\n72.\nShala, B.; Trick, U.; Lehmann, A.; Ghita,\
    \ B.; Shiaeles, S. Blockchain and trust for secure, end-user-based and decentralized\
    \ iot\nservice provision. IEEE Access 2020, 8, 119961–119979. [CrossRef]\n73.\n\
    Ma, Z.; Zhang, J.; Guo, Y.; Liu, Y.; Liu, X.; He, W. An Efﬁcient Decentralized\
    \ Key Management Mechanism for VANET With\nBlockchain. IEEE Trans. Veh. Technol.\
    \ 2020, 69, 5836–5849. [CrossRef]\nSustainability 2022, 14, 3919\n30 of 31\n74.\n\
    Ryu, K.; Kim, W.; Lee, E.-K. payGo: Incentive-Comparable Payment Routing Based\
    \ on Contract Theory. IEEE Access 2020, 8,\n70095–70110. [CrossRef]\n75.\nZhao,\
    \ N.; Wu, H.; Zhao, X. Consortium Blockchain-Based Secure Software Deﬁned Vehicular\
    \ Network. Mob. Netw. Appl. 2020, 25,\n314–327. [CrossRef]\n76.\nLi, H.; Pei,\
    \ L.; Liao, D.; Chen, S.; Zhang, M.; Xu, D. FADB: A Fine-Grained Access Control\
    \ Scheme for VANET Data Based on\nBlockchain. IEEE Access 2020, 8, 85190–85203.\
    \ [CrossRef]\n77.\nWang, D.; Zhang, X. Secure Data Sharing and Customized Services\
    \ for Intelligent Transportation Based on a Consortium\nBlockchain. IEEE Access\
    \ 2020, 8, 56045–56059. [CrossRef]\n78.\nMalik, N.; Nanda, P.; He, X.; Liu, R.P.\
    \ Vehicular networks with security and trust management solutions: Proposed secured\n\
    message exchange via blockchain technology. Wirel. Netw. 2020, 26, 4207–4226.\
    \ [CrossRef]\n79.\nShi, K.; Zhu, L.; Zhang, C.; Xu, L.; Gao, F. Blockchain-based\
    \ multimedia sharing in vehicular social networks with privacy\nprotection. Multimed.\
    \ Tools Appl. 2020, 79, 8085–8105. [CrossRef]\n80.\nYang, W.; Dai, X.; Xiao, J.;\
    \ Jin, H. LDV: A Lightweight DAG-Based Blockchain for Vehicular Social Networks.\
    \ IEEE Trans. Veh.\nTechnol. 2020, 69, 5749–5759. [CrossRef]\n81.\nCho, E.M.;\
    \ Perera, M.N.S. Efﬁcient certiﬁcate management in blockchain based Internet of\
    \ Vehicles. In Proceedings of the 20th\nIEEE/ACM International Symposium on Cluster,\
    \ Cloud and Internet Computing (CCGRID), Melbourne, Australia, 11–14 May\n2020;\
    \ pp. 794–797.\n82.\nJiang, X.; Ma, Z.; Yu, F.R.; Song, T.; Boukerche, A. Edge\
    \ computing for video analytics in the Internet of Vehicles with blockchain.\n\
    In Proceedings of the 10th ACM Symposium on Design and Analysis of Intelligent\
    \ Vehicular Networks and Applications, Alicante,\nSpain, 16–20 November 2020;\
    \ pp. 1–7.\n83.\nMa, Z.; Yu, F.R.; Jiang, X.; Boukerche, A. Trustworthy Trafﬁc\
    \ Information Sharing Secured via Blockchain in VANETs. In\nProceedings of the\
    \ 10th ACM Symposium on Design and Analysis of Intelligent Vehicular Networks\
    \ and Applications, Alicante,\nSpain, 16–20 November 2020; pp. 33–40.\n84.\nTomar,\
    \ R. Maintaining Trust in VANETs using Blockchain. ACM SIGAda Ada Lett. 2020,\
    \ 40, 91–96. [CrossRef]\n85.\nAyaz, F.; Sheng, Z.; Tian, D.; Guan, Y.L. A Proof-of-Quality-Factor\
    \ (PoQF)-Based Blockchain and Edge Computing for Vehicular\nMessage Dissemination.\
    \ IEEE Internet Things J. 2020, 8, 2468–2482. [CrossRef]\n86.\nHussain, R.; Lee,\
    \ J.; Zeadally, S. Trust in VANET: A Survey of Current Solutions and Future Research\
    \ Opportunities. IEEE Trans.\nIntell. Transp. Syst. 2021, 22, 2553–2571. [CrossRef]\n\
    87.\nLin, C.; He, D.; Huang, X.; Kumar, N.; Choo, K.-K.R. BCPPA: A Blockchain-Based\
    \ Conditional Privacy-Preserving Authentication\nProtocol for Vehicular Ad Hoc\
    \ Networks. IEEE Trans. Intell. Transp. Syst. 2020, 22, 7408–7420. [CrossRef]\n\
    88.\nMershad, K. SURFER: A Secure SDN-Based Routing Protocol for Internet of Vehicles.\
    \ IEEE Internet Things J. 2021, 8, 7407–7422.\n[CrossRef]\n89.\nZheng, X.; Li,\
    \ M.; Chen, Y.; Guo, J.; Alam, M.; Hu, W. Blockchain-Based Secure Computation\
    \ Ofﬂoading in Vehicular Networks.\nIEEE Trans. Intell. Transp. Syst. 2020, 22,\
    \ 4073–4087. [CrossRef]\n90.\nWang, C.; Shen, J.; Lai, J.-F.; Liu, J. B-TSCA:\
    \ Blockchain assisted trustworthiness scalable computation for V2I authentication\
    \ in\nVANETs. IEEE Trans. Emerg. Top. Comput. 2020, 9, 1386–1396. [CrossRef]\n\
    91.\nKudva, S.; Badsha, S.; Sengupta, S.; Khalil, I.; Zomaya, A. Towards secure\
    \ and practical consensus for blockchain based VANET.\nInf. Sci. 2021, 545, 170–187.\
    \ [CrossRef]\n92.\nShammar, E.A.; Zahary, A.T.; Al-Shargabi, A.A. A Survey of\
    \ IoT and Blockchain Integration: Security Perspective. IEEE Access\n2021, 9,\
    \ 156114–156150. [CrossRef]\n93.\nAlharthi, A.; Ni, Q.; Jiang, R. A Privacy-Preservation\
    \ Framework Based on Biometrics Blockchain (BBC) to Prevent Attacks in\nVANET.\
    \ IEEE Access 2021, 9, 87299–87309. [CrossRef]\n94.\nHei, Y.; Liu, Y.; Li, D.;\
    \ Liu, J.; Wu, Q. Themis: An accountable blockchain-based P2P cloud storage scheme.\
    \ Peer-to-Peer Netw. Appl.\n2021, 14, 225–239. [CrossRef]\n95.\nAkhter, A.; Ahmed,\
    \ M.; Shah, A.; Anwar, A.; Zengin, A. A Secured Privacy-Preserving Multi-Level\
    \ Blockchain Framework for\nCluster Based VANET. Sustainability 2021, 13, 400.\
    \ [CrossRef]\n96.\nAzam, F.; Yadav, S.K.; Priyadarshi, N.; Padmanaban, S.; Bansal,\
    \ R.C. A Comprehensive Review of Authentication Schemes in\nVehicular Ad-Hoc Network.\
    \ IEEE Access 2021, 9, 31309–31321. [CrossRef]\n97.\nChulerttiyawong, D.; Jamalipour,\
    \ A. A Blockchain Assisted Vehicular Pseudonym Issuance and Management System\
    \ for\nConditional Privacy Enhancement. IEEE Access 2021, 9, 127305–127319. [CrossRef]\n\
    98.\nDwivedi, S.K.; Amin, R.; Vollala, S. Blockchain-based secured IPFS-enable\
    \ event storage technique with authentication protocol\nin VANET. IEEE/CAA J.\
    \ Autom. Sin. 2021, 8, 1913–1922. [CrossRef]\n99.\nFirdaus, M.; Rahmadika, S.;\
    \ Rhee, K.-H. Decentralized Trusted Data Sharing Management on Internet of Vehicle\
    \ Edge Computing\n(IoVEC) Networks Using Consortium Blockchain. Sensors 2021,\
    \ 21, 2410. [CrossRef]\n100. Ghajar, F.G.; Sratakhti, J.S.; Sikora, A. SBTMS:\
    \ Scalable Blockchain Trust Management System for VANET. Appl. Sci. 2021,\n11,\
    \ 11947. [CrossRef]\n101. Jabbar, R.; Fetais, N.; Kharbeche, M.; Krichen, M.;\
    \ Barkaoui, K.; Shinoy, M. Blockchain for the Internet of Vehicles: How to Use\n\
    Blockchain to Secure Vehicle-to-Everything (V2X) Communication and Payment? IEEE\
    \ Sens. J. 2021, 21, 15807–15823. [CrossRef]\nSustainability 2022, 14, 3919\n\
    31 of 31\n102. Kaltakis, K.; Polyzi, P.; Drosatos, G.; Rantos, K. Privacy-Preserving\
    \ Solutions in Blockchain-Enabled Internet of Vehicles. Appl. Sci.\n2021, 11,\
    \ 9792. [CrossRef]\n103. Kapassa, E.; Themistocleous, M.; Christodoulou, K.; Iosif,\
    \ E. Blockchain Application in Internet of Vehicles: Challenges,\nContributions\
    \ and Current Limitations. Future Internet 2021, 13, 313. [CrossRef]\n104. Kebande,\
    \ V.R.; Awaysheh, F.M.; Ikuesan, R.A.; Alawadi, S.A.; Alshehri, M.D. A Blockchain-Based\
    \ Multi-Factor Authentication\nModel for a Cloud-Enabled Internet of Vehicles.\
    \ Sensors 2021, 21, 6018. [CrossRef] [PubMed]\n105. Kim, S.-K. Enhanced IoV Security\
    \ Network by Using Blockchain Governance Game. Mathematics 2021, 9, 109. [CrossRef]\n\
    106. Li, F.; Guo, Z.; Zhang, C.; Li, W.; Wang, Y. ATM: An Active-Detection Trust\
    \ Mechanism for VANETs Based on Blockchain. IEEE\nTrans. Veh. Technol. 2021, 70,\
    \ 4011–4021. [CrossRef]\n107. Li, X.; Liu, J.; Obaidat, M.S.; Vijayakumar, P.;\
    \ Jiang, Q.; Amin, R. An Unlinkable Authenticated Key Agreement With Collusion\n\
    Resistant for VANETs. IEEE Trans. Veh. Technol. 2021, 70, 7992–8006. [CrossRef]\n\
    108. Liang, J.; Ma, M. Co-Maintained Database Based on Blockchain for IDSs: A\
    \ Lifetime Learning Framework. IEEE Trans. Netw. Serv.\nManag. 2021, 18, 1629–1645.\
    \ [CrossRef]\n109. Ma, J.; Li, T.; Cui, J.; Ying, Z.; Cheng, J. Attribute-based\
    \ secure announcement sharing among vehicles using blockchain. IEEE\nInternet\
    \ Things J. 2021, 8, 10873–10883. [CrossRef]\n110. Maarouﬁ, S.; Pierre, S. BCOOL:\
    \ A Novel Blockchain Congestion Control Architecture Using Dynamic Service Function\
    \ Chaining\nand Machine Learning for Next Generation Vehicular Networks. IEEE\
    \ Access 2021, 9, 53096–53122. [CrossRef]\n111. Sharma, S.; Kaushik, B.; Rahmani,\
    \ M.K.I.; Ahmed, E. Cryptographic Solution-Based Secure Elliptic Curve Cryptography\
    \ Enabled\nRadio Frequency Identiﬁcation Mutual Authentication Protocol for Internet\
    \ of Vehicles. IEEE Access 2021, 9, 147114–147128.\n[CrossRef]\n112. Xu, X.; Zeng,\
    \ Z.; Yang, S.; Shao, H. A Novel Blockchain Framework for Industrial IoT Edge\
    \ Computing. Sensors 2020, 20, 2061.\n[CrossRef]\n113. Xia, S.; Lin, F.; Chen,\
    \ Z.; Tang, C.; Ma, Y.; Yu, X. A Bayesian Game Based Vehicle-to-Vehicle Electricity\
    \ Trading Scheme for\nBlockchain-Enabled Internet of Vehicles. IEEE Trans. Veh.\
    \ Technol. 2020, 69, 6856–6868. [CrossRef]\n114. She, W.; Liu, Q.; Tian, Z.; Chen,\
    \ J.-S.; Wang, B.; Liu, W. Blockchain Trust Model for Malicious Node Detection\
    \ in Wireless Sensor\nNetworks. IEEE Access 2019, 7, 38947–38956. [CrossRef]\n\
    115. Hasrouny, H.; Samhat, A.E.; Bassil, C.; Laouiti, A. Trust model for secure\
    \ group leader-based communications in VANET. Wirel.\nNetw. 2019, 25, 4639–4661.\
    \ [CrossRef]\n116. Liang, J.; Chen, J.; Zhu, Y.; Yu, R. A novel Intrusion Detection\
    \ System for Vehicular Ad Hoc Networks (VANETs) based on\ndifferences of trafﬁc\
    \ ﬂow and position. Appl. Soft Comput. 2019, 75, 712–727. [CrossRef]\n117. He,\
    \ Y.; Yu, F.R.; Wei, Z.; Leung, V. Trust management for secure cognitive radio\
    \ vehicular ad hoc networks. Ad Hoc Netw. 2019, 86,\n154–165. [CrossRef]\n118.\
    \ Buterin, V. A next-generation smart contract and decentralized application platform.\
    \ White Pap. 2014, 3, 13.\n119. Kheliﬁ, H.; Luo, S.; Nour, B.; Moungla, H.; Ahmed,\
    \ S.H.; Guizani, M. A blockchain-based architecture for secure vehicular Named\n\
    Data Networks. Comput. Electr. Eng. 2020, 86, 106715. [CrossRef]\n120. Minoli,\
    \ D.; Occhiogrosso, B. Blockchain mechanisms for IoT security. IOT 2018, 1–2,\
    \ 1–13. [CrossRef]\n121. Luo, B.; Li, X.; Weng, J.; Guo, J.; Ma, J. Blockchain\
    \ Enabled Trust-Based Location Privacy Protection Scheme in VANET. IEEE Trans.\n\
    Veh. Technol. 2019, 69, 2034–2048. [CrossRef]\n122. Abou-Nassar, E.M.; Iliyasu,\
    \ A.M.; El-Kafrawy, P.M.; Song, O.-Y.; Bashir, A.K.; El-Latif, A.A.A. DITrust\
    \ Chain: Towards Blockchain-\nBased Trust Models for Sustainable Healthcare IoT\
    \ Systems. IEEE Access 2020, 8, 111223–111238. [CrossRef]\n123. Tan, H.; Chung,\
    \ I. Secure Authentication and Key Management with Blockchain in VANETs. IEEE\
    \ Access 2019, 8, 2482–2498.\n[CrossRef]\n124. Hu, W.; Hu, Y.; Yao, W.; Li, H.\
    \ A Blockchain-Based Byzantine Consensus Algorithm for Information Authentication\
    \ of the Internet\nof Vehicles. IEEE Access 2019, 7, 139703–139711. [CrossRef]\n"
  inline_citation: '>'
  journal: Sustainability
  limitations: '>'
  pdf_link: https://www.mdpi.com/2071-1050/14/7/3919/pdf?version=1648226258
  publication_year: 2022
  relevance_evaluation: '7'
  relevance_score: 0.89
  relevance_score1: 0
  relevance_score2: 0
  title: 'Blockchain-Enabled Vehicular Ad Hoc Networks: A Systematic Literature Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
